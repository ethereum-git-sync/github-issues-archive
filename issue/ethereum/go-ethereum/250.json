{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/250",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/250/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/250/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/250/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/250",
  "id": 53881293,
  "node_id": "MDU6SXNzdWU1Mzg4MTI5Mw==",
  "number": 250,
  "title": "GetBlocks may have a returned data ratio of 1:31250",
  "user": {
    "login": "obscuren",
    "id": 6264126,
    "node_id": "MDQ6VXNlcjYyNjQxMjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/obscuren",
    "html_url": "https://github.com/obscuren",
    "followers_url": "https://api.github.com/users/obscuren/followers",
    "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
    "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
    "organizations_url": "https://api.github.com/users/obscuren/orgs",
    "repos_url": "https://api.github.com/users/obscuren/repos",
    "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
    "received_events_url": "https://api.github.com/users/obscuren/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/milestones/5",
    "html_url": "https://github.com/ethereum/go-ethereum/milestone/5",
    "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/milestones/5/labels",
    "id": 1011600,
    "node_id": "MDk6TWlsZXN0b25lMTAxMTYwMA==",
    "number": 5,
    "title": "Frontier",
    "description": "This is the Frontier milestone for the ethereum protocol soft release. This milestone is not set in stone. Over time issues will be added and removed.",
    "creator": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 167,
    "state": "closed",
    "created_at": "2015-03-09T00:06:47Z",
    "updated_at": "2015-07-28T14:12:54Z",
    "due_on": null,
    "closed_at": "2015-07-28T14:12:54Z"
  },
  "comments": 9,
  "created_at": "2015-01-09T15:49:16Z",
  "updated_at": "2015-04-13T20:20:45Z",
  "closed_at": "2015-04-13T20:20:45Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Assuming a block can be as large as 1Mbyte (this is not specified in the code, but it's a reasonable value) then MsgGetBlocksTy has an return data ratio of 1:31250, which means that a peer sending 32 bytes can get 1 Mbyte of data in return. Two attacks are possible:\n1. It's possible that a node sends a MsgGetBlocksTy packet and then closes silently the local socket, but does not send the CLOSE/FIN packet. The victim will send up to a maximum of the TCP buffer size, which depending on the operation system default and the negotiated connection parameters, can be between 8Kb to 1Gb (but normally is in the 8 - 64 Kbyte range). Then the attacker may perform multiple DoS attacks simultaneously to different peers, without even processing the incoming data.\n2. The attacker can ask for 300 blocks but never read anything from the incoming TCP endpoint. Assuming each block is 1Mbyte in size, this will force the victim node to buffer 300 Mbytes of information. The attacker can continuously send MsgGetBlocksTy messages until the victim node consumes all available process memory or begins trashing. The current ping/pong keep-alive method is ineffective because it does not include a random nonce, so the attacker may send MsgGetBlocksTy messages interleaved with MsgPongTy messages. This attack also works if the block is much smaller in size (e.g. 1 Kbyte), because the attacker can request the same block multiple times.\n   In both cases the Also the attacker can re-connect to the victim node from the same or another IP address when the victim node closes the connection, since a free incoming connection slot will become available.\n### Recommendations\n- A node should not accept MsgGetBlocksTy messages until the the output queue is near empty.\n- The output queue should have a maximum size.\n- A node should not accept any message if the output queue is near full.\n- The ping and pong messages should have a random nonce value to detect if pong messages are related to ping messages or not.\n- The random nonce sent in the ping message should not be taken from the same random pool as the ECDSA signing or private key generation random pool.\n- A node requesting the same block in the same MsgGetBlocksTy message should be punished.\n- A node should force a delay in processing messages from a node that is requesting the same block over and over, or too many blocks. Also a peer should ban a node that asks for a high amount of information and then stops responding to ping messages.\n",
  "closed_by": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/250/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/250/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/69354374",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/250#issuecomment-69354374",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/250",
    "id": 69354374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzU0Mzc0",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-09T16:03:10Z",
    "updated_at": "2015-01-09T16:03:49Z",
    "author_association": "MEMBER",
    "body": "Package `p2p` currently maintains a 64k output buffer. Message writes block until they are delivered (ack'd on the other side). The full data for outgoing messages is never buffered.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/69354374/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/69354524",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/250#issuecomment-69354524",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/250",
    "id": 69354524,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzU0NTI0",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-09T16:04:06Z",
    "updated_at": "2015-01-09T16:04:36Z",
    "author_association": "MEMBER",
    "body": "What happens if the output buffer is full? Do we kick off peers that are stalling?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/69354524/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/69354605",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/250#issuecomment-69354605",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/250",
    "id": 69354605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzU0NjA1",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-09T16:04:41Z",
    "updated_at": "2015-01-09T16:05:36Z",
    "author_association": "MEMBER",
    "body": "All protocols will block until the data has been read. The buffer is [per connection](https://github.com/ethereum/go-ethereum/blob/develop/p2p/peer.go#L125).\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/69354605/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/69355278",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/250#issuecomment-69355278",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/250",
    "id": 69355278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzU1Mjc4",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-09T16:09:17Z",
    "updated_at": "2015-01-09T16:13:17Z",
    "author_association": "MEMBER",
    "body": "OK, wait, I mixed it up with incoming message reads. If the protocol encodes 300 blocks, they will all sit in memory (encoded) until read. It would be good to limit the number of blocks being sent in a single message.\n\nI'm also mistaken about the buffer size, the used (default) buffer size is 4k.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/69355278/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/69356334",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/250#issuecomment-69356334",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/250",
    "id": 69356334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzU2MzM0",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-09T16:16:33Z",
    "updated_at": "2015-01-09T16:27:28Z",
    "author_association": "MEMBER",
    "body": "The concern about the TCP buffer remains. We can limit the size of the buffer using `net.TCPConn.SetWriteBuffer`. Please note that the write timeout for any message [is currently 5 seconds](https://github.com/ethereum/go-ethereum/blob/6eb455032cdf9fec37f7a2abfc833de64003beca/p2p/peer.go#L193).\n\nWhen a write error (e.g. timeout) occurs, the protocol will usually return from its main loop and the peer will be disconnected. It can also ignore the error, but shouldn't. I have a TODO in the code to also handle (serious) write errors directly on the connection level without relying on the protocol to report them.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/69356334/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/69357797",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/250#issuecomment-69357797",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/250",
    "id": 69357797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzU3Nzk3",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-09T16:25:23Z",
    "updated_at": "2015-01-09T16:25:23Z",
    "author_association": "MEMBER",
    "body": "All in all, I think we are prepared for this scenario, mostly because we do not maintain an unbounded output queue and because we limit the number of active peers.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/69357797/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/69359701",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/250#issuecomment-69359701",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/250",
    "id": 69359701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzU5NzAx",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-09T16:36:57Z",
    "updated_at": "2015-01-09T16:36:57Z",
    "author_association": "MEMBER",
    "body": ":+1:  Do limit the output buffer. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/69359701/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/69360277",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/250#issuecomment-69360277",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/250",
    "id": 69360277,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzYwMjc3",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-09T16:40:26Z",
    "updated_at": "2015-01-09T16:40:26Z",
    "author_association": "MEMBER",
    "body": "I will also add a wrapper for `p2p.MsgReadWriter` that limits the incoming/outgoing message size.  \n\n``` go\nfunc LimitRW(maxWriteSize, maxReadSize uint32, rw MsgReadWriter) MsgReadWriter\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/69360277/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/92487102",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/250#issuecomment-92487102",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/250",
    "id": 92487102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkyNDg3MTAy",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-13T20:20:45Z",
    "updated_at": "2015-04-13T20:20:45Z",
    "author_association": "MEMBER",
    "body": "This issue is very old (it was raised during an audit of the previous p2p layer). The situation has improved as follows: \n- We send at most 64 blocks\n- Message sends must finish within 5 seconds\n- We do not maintain an unbounded output queue\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/92487102/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
