{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/279",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/279/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/279/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/279/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/279",
  "id": 55995100,
  "node_id": "MDU6SXNzdWU1NTk5NTEwMA==",
  "number": 279,
  "title": "Improve mist error handling if import of JS file fails",
  "user": {
    "login": "Gustav-Simonsson",
    "id": 293096,
    "node_id": "MDQ6VXNlcjI5MzA5Ng==",
    "avatar_url": "https://avatars.githubusercontent.com/u/293096?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Gustav-Simonsson",
    "html_url": "https://github.com/Gustav-Simonsson",
    "followers_url": "https://api.github.com/users/Gustav-Simonsson/followers",
    "following_url": "https://api.github.com/users/Gustav-Simonsson/following{/other_user}",
    "gists_url": "https://api.github.com/users/Gustav-Simonsson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Gustav-Simonsson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Gustav-Simonsson/subscriptions",
    "organizations_url": "https://api.github.com/users/Gustav-Simonsson/orgs",
    "repos_url": "https://api.github.com/users/Gustav-Simonsson/repos",
    "events_url": "https://api.github.com/users/Gustav-Simonsson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Gustav-Simonsson/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2015-01-30T05:02:25Z",
  "updated_at": "2015-06-23T09:59:05Z",
  "closed_at": "2015-06-23T09:59:03Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "If a non-JS file is imported in Mist, it can cause Mist to hang.\n\nFrom bug report:\n\n\"It never checks if it is a js file. When it is run in the Otto VM, it is not checking for errors as well. It should either check before trying evaluate it or when running it in the otto vm?\n\nhttps://github.com/ethereum/go-ethereum/blob/develop/javascript/javascript_runtime.go#L34\n",
  "closed_by": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/279/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/279/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[

]
