{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23668",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23668/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23668/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23668/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/23668",
  "id": 1012648698,
  "node_id": "I_kwDOAOvK9848W8r6",
  "number": 23668,
  "title": "evm t9n should reject transactions with low gasLimit",
  "user": {
    "login": "marioevz",
    "id": 11726710,
    "node_id": "MDQ6VXNlcjExNzI2NzEw",
    "avatar_url": "https://avatars.githubusercontent.com/u/11726710?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/marioevz",
    "html_url": "https://github.com/marioevz",
    "followers_url": "https://api.github.com/users/marioevz/followers",
    "following_url": "https://api.github.com/users/marioevz/following{/other_user}",
    "gists_url": "https://api.github.com/users/marioevz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/marioevz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/marioevz/subscriptions",
    "organizations_url": "https://api.github.com/users/marioevz/orgs",
    "repos_url": "https://api.github.com/users/marioevz/repos",
    "events_url": "https://api.github.com/users/marioevz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/marioevz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 16,
  "created_at": "2021-09-30T21:38:22Z",
  "updated_at": "2021-10-11T10:30:14Z",
  "closed_at": "2021-10-11T10:30:14Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "# Rationale\r\n\r\nWhy should this feature exist?\r\nevm t9n is used on transaction tests and negative test cases where the transaction is properly formatted but the gasLimit is extremely low or even zero.\r\nCurrently test suite TransactionTests implies that the intrinsic transaction gas requirements must also be checked in order for the transaction to be considered valid.\r\nThe client is currently accepting these transactions, and the negative test cases incorrectly succeed.\r\n\r\nE.g. in String10MbData test case (https://github.com/ethereum/tests/blob/develop/src/TransactionTestsFiller/ttData/String10MbDataFiller.json), reducing the gasLimit to zero results in the client not rejecting the transaction, even though the limit is lower than necessary for the transaction to be valid.\r\n\r\nWhat are the use-cases?\r\nTransaction negative test cases.\r\n",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23668/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23668/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/934572051",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23668#issuecomment-934572051",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23668",
    "id": 934572051,
    "node_id": "IC_kwDOAOvK9843tHAT",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-05T16:34:25Z",
    "updated_at": "2021-10-05T16:34:25Z",
    "author_association": "MEMBER",
    "body": "A note from me. \r\n\r\nt9n does not check intrinsic gas. Our Transaction tests assume that transaction is invalid if it does not specify enough gas to cover its intrinsic costs. this is done to verify transaction intrinsic gas formulas on different clients. \r\n\r\nintrinsic gas = tx.base_cost + tx.data * tx_data_price \r\nand so on. for new transactions it also affects accessLists. \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/934572051/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/934572841",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23668#issuecomment-934572841",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23668",
    "id": 934572841,
    "node_id": "IC_kwDOAOvK9843tHMp",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-05T16:35:15Z",
    "updated_at": "2021-10-05T16:35:15Z",
    "author_association": "MEMBER",
    "body": "Plus. would be nice to still have transaction hash for invalid rlps as the hash does not depend on transaction validity. \r\nwhen t9n return an error it can also return tr hash field with error. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/934572841/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/934575549",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23668#issuecomment-934575549",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23668",
    "id": 934575549,
    "node_id": "IC_kwDOAOvK9843tH29",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-05T16:38:58Z",
    "updated_at": "2021-10-05T16:38:58Z",
    "author_association": "MEMBER",
    "body": "I worked on this a bit today:https://github.com/holiman/go-ethereum/tree/fix_t9n_gascheck \r\n\r\nNeed to add some tests for it, so no PR yet. However, I agree it limits the versatility if the tool doesn't show the hash/signer for a tx which has too low intrinsic gas. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/934575549/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/937246098",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23668#issuecomment-937246098",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23668",
    "id": 937246098,
    "node_id": "IC_kwDOAOvK98433T2S",
    "user": {
      "login": "marioevz",
      "id": 11726710,
      "node_id": "MDQ6VXNlcjExNzI2NzEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11726710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marioevz",
      "html_url": "https://github.com/marioevz",
      "followers_url": "https://api.github.com/users/marioevz/followers",
      "following_url": "https://api.github.com/users/marioevz/following{/other_user}",
      "gists_url": "https://api.github.com/users/marioevz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marioevz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marioevz/subscriptions",
      "organizations_url": "https://api.github.com/users/marioevz/orgs",
      "repos_url": "https://api.github.com/users/marioevz/repos",
      "events_url": "https://api.github.com/users/marioevz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marioevz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-06T22:14:40Z",
    "updated_at": "2021-10-06T22:14:40Z",
    "author_association": "MEMBER",
    "body": "I grabbed the changes and tested against the failing transaction test cases, and all tests now pass with the appropriate expected exception.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/937246098/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/937763426",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23668#issuecomment-937763426",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23668",
    "id": 937763426,
    "node_id": "IC_kwDOAOvK98435SJi",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-07T12:53:29Z",
    "updated_at": "2021-10-07T12:53:29Z",
    "author_association": "MEMBER",
    "body": "So, how about:\r\n\r\n1. If the tx is sufficiently correct, so that it can be interpreted as a transaction, we output the hash, \r\n2. If it's also sufficienty correct, so that a signer can be derived, we output the sender. \r\n3. If the tx does not pass the intrinsic-gas cost, we output an error. \r\n\r\nSo, essentialy, you can have these possible combinations (per tx) \r\n \r\n- only `error`, \r\n- `error` and `hash`\r\n- `error` and `hash` and `sender`\r\n- `hash` and `sender`\r\n\r\nThis should work for you: a fully valid tx does not have `error`. Whereas the tool can still be used to construct/test some forms of invalid transactions. \r\n\r\nSGTY? \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/937763426/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/937786823",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23668#issuecomment-937786823",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23668",
    "id": 937786823,
    "node_id": "IC_kwDOAOvK98435X3H",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-07T13:21:03Z",
    "updated_at": "2021-10-07T13:21:03Z",
    "author_association": "MEMBER",
    "body": "> Plus. would be nice to still have transaction hash for invalid rlps as the hash does not depend on transaction validity\r\n\r\nNot sure what you mean by 'invalid rlps'. The example testdata contains for example an rlp list (a block header) passed in, as if it were a list of rlp transactions ( in reality it's a list of [ number, number, bytes ...]). It outputs errors like these: \r\n```\r\n  {\r\n    \"error\": \"rlp: expected List\"\r\n  },\r\n  {\r\n    \"error\": \"rlp: expected input list for types.AccessListTx\"\r\n  },\r\n  {\r\n    \"error\": \"transaction type not supported\"\r\n  },\r\n  {\r\n    \"error\": \"transaction type not supported\"\r\n  }\r\n\r\n```\r\nThere's no way to spit out the tx hash for those -- it needs to be parse:able into an actual transaction (have a certain rlp format). \r\nIf the _rlp_ is invalid, well, that's simply invalid input. It's like if we have a test format in json, and you pass in invalid json. It's not the json(rlp)-parser we're testing here, it's transaction validation. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/937786823/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/937874392",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23668#issuecomment-937874392",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23668",
    "id": 937874392,
    "node_id": "IC_kwDOAOvK98435tPY",
    "user": {
      "login": "marioevz",
      "id": 11726710,
      "node_id": "MDQ6VXNlcjExNzI2NzEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11726710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marioevz",
      "html_url": "https://github.com/marioevz",
      "followers_url": "https://api.github.com/users/marioevz/followers",
      "following_url": "https://api.github.com/users/marioevz/following{/other_user}",
      "gists_url": "https://api.github.com/users/marioevz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marioevz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marioevz/subscriptions",
      "organizations_url": "https://api.github.com/users/marioevz/orgs",
      "repos_url": "https://api.github.com/users/marioevz/repos",
      "events_url": "https://api.github.com/users/marioevz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marioevz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-07T14:56:51Z",
    "updated_at": "2021-10-07T14:56:51Z",
    "author_association": "MEMBER",
    "body": "If I'm understanding correctly, there could be cases where the rlp is so malformed that we cannot determine which attributes have to be considered in order to obtain an actual transaction hash.\r\n\r\nI think those cases is what @winsvega is referring to. In those cases, perhaps it would be helpful to have an identifier returned along with the error in order to match the error with something that we sent?\r\n\r\nPerhaps if we sent `s`, and `tx` cannot be derived from it, we get back `error` and `H(s)`, and if `tx` can be derived from `s`, we could get back `H(s)` and `H(tx)`, along with a possible `error`. That way, we could always match `error` to something that we sent.\r\n\r\nLet me know what you think @winsvega @holiman ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/937874392/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/937892607",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23668#issuecomment-937892607",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23668",
    "id": 937892607,
    "node_id": "IC_kwDOAOvK98435xr_",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-07T15:16:24Z",
    "updated_at": "2021-10-07T15:16:24Z",
    "author_association": "MEMBER",
    "body": "Not sure what you mean. The input must be an rlp-list. If it's not, that's malformed input to the tool.If it's an rlp-list, then, for each 'thing' in the list, we output a result. Which can contain error, address, hash : depending on how tx-like the 'thing' is. So each result directly maps to one item in the list. There's no ambiguity about what error corresponds to what data. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/937892607/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/937900124",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23668#issuecomment-937900124",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23668",
    "id": 937900124,
    "node_id": "IC_kwDOAOvK98435zhc",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-07T15:24:18Z",
    "updated_at": "2021-10-07T15:24:18Z",
    "author_association": "MEMBER",
    "body": "If input is not a valid rlp the hash could still be calculated as of now",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/937900124/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/937966767",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23668#issuecomment-937966767",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23668",
    "id": 937966767,
    "node_id": "IC_kwDOAOvK98436Dyv",
    "user": {
      "login": "marioevz",
      "id": 11726710,
      "node_id": "MDQ6VXNlcjExNzI2NzEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11726710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marioevz",
      "html_url": "https://github.com/marioevz",
      "followers_url": "https://api.github.com/users/marioevz/followers",
      "following_url": "https://api.github.com/users/marioevz/following{/other_user}",
      "gists_url": "https://api.github.com/users/marioevz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marioevz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marioevz/subscriptions",
      "organizations_url": "https://api.github.com/users/marioevz/orgs",
      "repos_url": "https://api.github.com/users/marioevz/repos",
      "events_url": "https://api.github.com/users/marioevz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marioevz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-07T16:37:45Z",
    "updated_at": "2021-10-07T16:37:45Z",
    "author_association": "MEMBER",
    "body": "So given that `s` is the input to the tool, which is an hex byte sequence, and could be a correctly formatted rlp or not, do you mean `H(s)` ?\r\nSo if `s` is a correctly formatted rlp, and a `tx` was successfully extracted from it, then `hash -> H(tx)`, but otherwise `hash -> H(s)` ?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/937966767/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/938730900",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23668#issuecomment-938730900",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23668",
    "id": 938730900,
    "node_id": "IC_kwDOAOvK98438-WU",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-08T15:27:03Z",
    "updated_at": "2021-10-08T15:27:03Z",
    "author_association": "MEMBER",
    "body": "There are several misconceptions here. So, \r\n\r\n1. The hash of a transaction is not simply `hash(whatever data)`. The hashing rules for legacy differs from typed transactions, to some degree. A future format may hash in a third way -- but we cannot output a hash unless the data does decode into a transaction. \r\n2. The input is an rlp list. I could have chosen to have it as a json-list of blobs, but since block bodies are rlp-list, I thought it useful to have the output/input as block bodies. Now, if we ignore rlp versus json: the thing we want to validate are the blobs. For each blob, we output a result. So if you feed me NOT a list of blobs, there's not much else to do other than exit with \"sorry, bad input\". \r\n\r\n> and a tx was successfully extracted from it, then hash -> H(tx), but otherwise hash -> H(s) ?\r\n\r\nNow, this woudl be possible, but I don't see any point in doing this. What would be the use of returning the keccakhash of random data? \r\n\r\n ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/938730900/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/938949081",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23668#issuecomment-938949081",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23668",
    "id": 938949081,
    "node_id": "IC_kwDOAOvK98439znZ",
    "user": {
      "login": "marioevz",
      "id": 11726710,
      "node_id": "MDQ6VXNlcjExNzI2NzEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11726710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marioevz",
      "html_url": "https://github.com/marioevz",
      "followers_url": "https://api.github.com/users/marioevz/followers",
      "following_url": "https://api.github.com/users/marioevz/following{/other_user}",
      "gists_url": "https://api.github.com/users/marioevz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marioevz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marioevz/subscriptions",
      "organizations_url": "https://api.github.com/users/marioevz/orgs",
      "repos_url": "https://api.github.com/users/marioevz/repos",
      "events_url": "https://api.github.com/users/marioevz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marioevz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-08T17:40:27Z",
    "updated_at": "2021-10-08T17:40:27Z",
    "author_association": "MEMBER",
    "body": "As I understand it, it would be useful for the test side to have a reference hash or identifier to pinpoint which input we sent caused which error, but @winsvega please correct me if I am misunderstanding the request.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/938949081/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/938973442",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23668#issuecomment-938973442",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23668",
    "id": 938973442,
    "node_id": "IC_kwDOAOvK984395kC",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-08T17:51:51Z",
    "updated_at": "2021-10-08T17:53:03Z",
    "author_association": "MEMBER",
    "body": "hash for legacy \r\n`m_hash = spFH32(new FH32(\"0x\" + dev::toString(dev::sha3(out.out()))));   // where out is rlp `\r\n\r\nhash for typed 1559\r\n`m_hash = spFH32(new FH32(\"0x\" + dev::toString(dev::sha3(outa))));     //where outa is  typebyte + out (rlp)`\r\n\r\nso it is not that different whatsoever. the hash can be calculated without parsing the data into transaction",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/938973442/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/939040133",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23668#issuecomment-939040133",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23668",
    "id": 939040133,
    "node_id": "IC_kwDOAOvK9843-J2F",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-08T18:34:23Z",
    "updated_at": "2021-10-08T18:34:23Z",
    "author_association": "MEMBER",
    "body": "it is not a critical requirement. just would be nice to have hash response on invalid transactions. for debug. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/939040133/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/939099932",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23668#issuecomment-939099932",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23668",
    "id": 939099932,
    "node_id": "IC_kwDOAOvK9843-Ycc",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-08T20:31:56Z",
    "updated_at": "2021-10-08T20:31:56Z",
    "author_association": "MEMBER",
    "body": " Well,  as you point out; \r\n- The hash is different between legacy and typed, \r\n- for hashing a typed tx, the type byte is treated special. \r\n\r\nSo in order to hash it correctly, one does need to parse it as a tx, not just feed the bytes into the hasher. Anyway, I'm skipping it for now, but I'm open to making modifications if there are things needed for building certain types of tests. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/939099932/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/939100473",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23668#issuecomment-939100473",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23668",
    "id": 939100473,
    "node_id": "IC_kwDOAOvK9843-Yk5",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-08T20:33:00Z",
    "updated_at": "2021-10-08T20:33:00Z",
    "author_association": "MEMBER",
    "body": "> which input we sent caused which error,\r\n\r\nEach tx has an index in the input, which corresponds to an index in the output",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/939100473/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
