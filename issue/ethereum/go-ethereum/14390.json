{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14390",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14390/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14390/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14390/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/14390",
  "id": 225243532,
  "node_id": "MDU6SXNzdWUyMjUyNDM1MzI=",
  "number": 14390,
  "title": "Transaction not being recorded",
  "user": {
    "login": "boorac",
    "id": 25860364,
    "node_id": "MDQ6VXNlcjI1ODYwMzY0",
    "avatar_url": "https://avatars.githubusercontent.com/u/25860364?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/boorac",
    "html_url": "https://github.com/boorac",
    "followers_url": "https://api.github.com/users/boorac/followers",
    "following_url": "https://api.github.com/users/boorac/following{/other_user}",
    "gists_url": "https://api.github.com/users/boorac/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/boorac/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/boorac/subscriptions",
    "organizations_url": "https://api.github.com/users/boorac/orgs",
    "repos_url": "https://api.github.com/users/boorac/repos",
    "events_url": "https://api.github.com/users/boorac/events{/privacy}",
    "received_events_url": "https://api.github.com/users/boorac/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2017-04-29T08:42:07Z",
  "updated_at": "2017-05-02T10:13:18Z",
  "closed_at": "2017-05-02T10:13:18Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nTruffle version: `Truffle v3.1.2`\r\nOS & Version: \r\n```\r\nLinux Mint 18.1 Serena\r\nKernel: 4.4.0-75-generic x86_64\r\n```\r\nWeb3 version: `\"0.18.4\"`\r\n\r\n#### Expected behaviour\r\n- If `call` passes `sendTransaction` should pass (scenario without gas bump)\r\n- If `sendTransaction`  and `call` pass changes should be recorded on chain (scenario with gas bump)\r\n\r\n#### Actual behaviour\r\n- When `call` passes `sendTransaction` fails (scenario without gas bump)\r\n- When `sendTransaction`  and `call` pass changes are not recorded in state (scenario with gas bump)\r\n\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\nI'm writing a snippet of code that should call an API and record the response to the chain:\r\n\r\n```js\r\nfunction(APIResponse) {\r\n    // Write to chain\r\n    console.log(`API responded with:\\n${APIResponse}`);\r\n    let callResult = instance.writeResponse.call(APIResponse);\r\n    console.log(`Writing api response to chain result: ${callResult}`);\r\n    const ID = instance.writeResponse.sendTransaction(APIResponse);\r\n    console.log(`Transaction ID: ${ID}`)\r\n}\r\n```\r\nIn an attempt to use the proper pattern, I first call to check the function and later send the transaction. The call passes and returns a boolean value, but the sendTransaction fails with the following:\r\n\r\n```js\r\nrequestmanager.js:61 Uncaught Error: VM Exception while processing transaction: out of gas(…)\r\n```\r\n\r\nThen I attempted to add gas to the function calls:\r\n\r\n```js\r\nfunction(APIResponse) {\r\n    // Write to chain\r\n    console.log(`API responded with:\\n${APIResponse}`);\r\n    let callResult = instance.writeResponse.call({gas: helper.averageGasBump}, APIResponse);\r\n    console.log(`Writing api response to chain result: ${callResult}`);\r\n    const ID = instance.writeResponse.sendTransaction({gas: helper.averageGasBump}, APIResponse);\r\n    console.log(`Transaction ID: ${ID}`)\r\n}\r\n```\r\nThis time, no Error is thrown, the transaction gets recorded but when I try to access the varable that should have been stored in the chain as a JSON string, an empty string is being returned.\r\n\r\nInterestingly enough, inside truffle console I can invoke all functions without the need for an additional gas bump and they get recorded properly.\r\n\r\nCould this be related to EVM?\r\n\r\n#### Backtrace\r\n\r\nAs stated above, the only backtrace available is the one when the `call` fails:\r\n```js\r\nrequestmanager.js:61 Uncaught Error: VM Exception while processing transaction: out of gas(…)\r\n```\r\n",
  "closed_by": {
    "login": "boorac",
    "id": 25860364,
    "node_id": "MDQ6VXNlcjI1ODYwMzY0",
    "avatar_url": "https://avatars.githubusercontent.com/u/25860364?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/boorac",
    "html_url": "https://github.com/boorac",
    "followers_url": "https://api.github.com/users/boorac/followers",
    "following_url": "https://api.github.com/users/boorac/following{/other_user}",
    "gists_url": "https://api.github.com/users/boorac/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/boorac/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/boorac/subscriptions",
    "organizations_url": "https://api.github.com/users/boorac/orgs",
    "repos_url": "https://api.github.com/users/boorac/repos",
    "events_url": "https://api.github.com/users/boorac/events{/privacy}",
    "received_events_url": "https://api.github.com/users/boorac/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14390/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14390/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/298592279",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14390#issuecomment-298592279",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14390",
    "id": 298592279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODU5MjI3OQ==",
    "user": {
      "login": "boorac",
      "id": 25860364,
      "node_id": "MDQ6VXNlcjI1ODYwMzY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25860364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/boorac",
      "html_url": "https://github.com/boorac",
      "followers_url": "https://api.github.com/users/boorac/followers",
      "following_url": "https://api.github.com/users/boorac/following{/other_user}",
      "gists_url": "https://api.github.com/users/boorac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/boorac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/boorac/subscriptions",
      "organizations_url": "https://api.github.com/users/boorac/orgs",
      "repos_url": "https://api.github.com/users/boorac/repos",
      "events_url": "https://api.github.com/users/boorac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/boorac/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-02T10:13:18Z",
    "updated_at": "2017-05-02T10:13:18Z",
    "author_association": "NONE",
    "body": "After some tinkering, I found out where the problem was - I was missusing the API.\r\n\r\nThe propper call with the gas bump should have been:\r\n\r\n```js\r\ninstance.writeResponse.call(APIResponse, {gas: helper.averageGasBump});\r\n\r\n```\r\n\r\nI'm closing this.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/298592279/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
