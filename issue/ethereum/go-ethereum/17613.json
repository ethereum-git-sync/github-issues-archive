{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17613",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17613/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17613/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17613/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/17613",
  "id": 358240157,
  "node_id": "MDU6SXNzdWUzNTgyNDAxNTc=",
  "number": 17613,
  "title": "Bloom filter false positive rate w/ ERC-20/721 topics.",
  "user": {
    "login": "ryanschneider",
    "id": 53520,
    "node_id": "MDQ6VXNlcjUzNTIw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53520?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ryanschneider",
    "html_url": "https://github.com/ryanschneider",
    "followers_url": "https://api.github.com/users/ryanschneider/followers",
    "following_url": "https://api.github.com/users/ryanschneider/following{/other_user}",
    "gists_url": "https://api.github.com/users/ryanschneider/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ryanschneider/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ryanschneider/subscriptions",
    "organizations_url": "https://api.github.com/users/ryanschneider/orgs",
    "repos_url": "https://api.github.com/users/ryanschneider/repos",
    "events_url": "https://api.github.com/users/ryanschneider/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ryanschneider/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 856638432,
      "node_id": "MDU6TGFiZWw4NTY2Mzg0MzI=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:inactive",
      "name": "status:inactive",
      "color": "ffffff",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2018-09-07T23:27:47Z",
  "updated_at": "2019-11-30T17:04:59Z",
  "closed_at": "2019-11-30T17:04:59Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "\r\n#### System information\r\n\r\nGeth version: `1.8.13`\r\nOS & Version: Linux\r\n\r\n#### Expected behaviour\r\n\r\nThe bloom filters should have a relatively low, but typically non-zero, false positive rate.\r\n\r\nAlso, geth should expose metrics on per-query and aggregate bloom filter false positive rates.\r\n\r\n#### Actual behaviour\r\n\r\nAs mentioned in #17610, I was surprised to see that this query:\r\n\r\n```json\r\n{\r\n  \"method\":\"eth_getLogs\",\"id\":1,\"jsonrpc\":\"2.0\", \r\n  \"params\":[{\r\n    \"fromBlock\":\"0x1\",\"toBlock\":\"latest\",\r\n    \"topics\":[ \r\n      \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\r\n      \"0x0000000000000000000000009035e9004a4f1e88c296be507c5cea8f99ff8a63\", \r\n      \"0x0000000000000000000000004be0cd2553356b4abb8b6a1882325dabc8d3013d\"\r\n    ],\r\n    \"address\":\"0x09d8b66c48424324b25754a873e290cae5dca439\"\r\n  }]\r\n}\r\n```\r\n\r\nLeads to 547 blocks matching the bloom filter, even though only receipts in 6 blocks actually matched the 3 topics for that address.\r\n\r\nMy suspicion is that the recent uptick of ERC-20 events has made the bloom filters less effective, but I honestly don't know what a baseline false positive rate for the filters should be either.  Since the bloom filter is part of the consensus headers I'm in no way implying they should be changed, but it is possible there's a regression around hit rates which is why I wanted to raise it.\r\n\r\nFrom a recent off-chain indexing scan I did, there are 119,478,594 `0xddf252..` (`Transfer`) events in the chain now, so perhaps I'm just thinking about the false positive rate wrong, it's really `541:119,478,594`, not `541:6`.\r\n\r\nThis paper looks promising for determining the expected FP rate, but I haven't fully read it yet or tried plugging in any of the numbers:\r\n\r\nhttp://cglab.ca/~morin/publications/ds/bloom-submitted.pdf\r\n\r\nAnd there is a caveat:\r\n\r\n> We give an exact formula for the false-positive rate of Bloom filters. Unfortunately, this formula is not anywhere near closed form, but could be useful for small values of k, n and m.\r\n\r\nAs mentioned above, I think a good first step might be to add metrics around the actual false positive rates and attempt to compare those with derived expected rates.\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\nI recorded the number of blocks scanned via this patch:\r\n\r\n```diff\r\ndiff --git a/eth/filters/filter.go b/eth/filters/filter.go\r\nindex 071613ad7..eb942dced 100644\r\n--- a/eth/filters/filter.go\r\n+++ b/eth/filters/filter.go\r\n@@ -19,7 +19,9 @@ package filters\r\n import (\r\n        \"context\"\r\n        \"errors\"\r\n+       \"github.com/ethereum/go-ethereum/log\"\r\n        \"math/big\"\r\n+       \"sync/atomic\"\r\n\r\n        \"github.com/ethereum/go-ethereum/common\"\r\n        \"github.com/ethereum/go-ethereum/core\"\r\n@@ -59,6 +61,8 @@ type Filter struct {\r\n        begin, end int64       // Range interval if filtering multiple blocks\r\n\r\n        matcher *bloombits.Matcher\r\n+\r\n+       blockCount int64\r\n }\r\n\r\n // NewRangeFilter creates a new filter which uses a bloom filter on blocks to\r\n@@ -160,6 +164,8 @@ func (f *Filter) Logs(ctx context.Context) ([]*types.Log, error) {\r\n        }\r\n        rest, err := f.unindexedLogs(ctx, end)\r\n        logs = append(logs, rest...)\r\n+\r\n+       log.Info(\"filter complete\", \"blocks\", f.blockCount)\r\n        return logs, err\r\n }\r\n\r\n@@ -245,6 +251,7 @@ func (f *Filter) blockLogs(ctx context.Context, header *types.Header) (logs []*t\r\n // match the filter criteria. This function is called when the bloom filter signals a potential match.\r\n func (f *Filter) checkMatches(ctx context.Context, header *types.Header) (logs []*types.Log, err error) {\r\n        // Get the logs of the block\r\n+       atomic.AddInt64(&f.blockCount, 1)\r\n        logsList, err := f.backend.GetLogs(ctx, header.Hash())\r\n        if err != nil {\r\n                return nil, err\r\n```\r\n\r\n",
  "closed_by": {
    "login": "stale[bot]",
    "id": 26384082,
    "node_id": "MDM6Qm90MjYzODQwODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stale%5Bbot%5D",
    "html_url": "https://github.com/apps/stale",
    "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17613/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17613/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/420452015",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17613#issuecomment-420452015",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17613",
    "id": 420452015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDQ1MjAxNQ==",
    "user": {
      "login": "ec2",
      "id": 6364934,
      "node_id": "MDQ6VXNlcjYzNjQ5MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6364934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ec2",
      "html_url": "https://github.com/ec2",
      "followers_url": "https://api.github.com/users/ec2/followers",
      "following_url": "https://api.github.com/users/ec2/following{/other_user}",
      "gists_url": "https://api.github.com/users/ec2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ec2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ec2/subscriptions",
      "organizations_url": "https://api.github.com/users/ec2/orgs",
      "repos_url": "https://api.github.com/users/ec2/repos",
      "events_url": "https://api.github.com/users/ec2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ec2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-11T22:48:08Z",
    "updated_at": "2018-09-11T22:48:08Z",
    "author_association": "NONE",
    "body": "According to https://hur.st/bloomfilter/?n=500&p=&m=2048&k=3 , there will be a **1 in 7 chance of a false positive** in a block bloom filter. \r\n\r\n![image](https://user-images.githubusercontent.com/6364934/45391958-62d28400-b5e2-11e8-90ee-0f18381d580b.png)\r\n\r\n\r\n**n=500** because that's around how many logs are in a block according to tests. \r\n**m=2048** because thats 256 bytes (2048 bits), the length of the keccak-256 hash function.\r\n**k=3** because 3 bits of the bloom filter, which should be equivalent to using 3 hash functions in more \"traditional\" bloom filters. (yellowpaper.io, pg. 5)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/420452015/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/420463864",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17613#issuecomment-420463864",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17613",
    "id": 420463864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDQ2Mzg2NA==",
    "user": {
      "login": "ryanschneider",
      "id": 53520,
      "node_id": "MDQ6VXNlcjUzNTIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/53520?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanschneider",
      "html_url": "https://github.com/ryanschneider",
      "followers_url": "https://api.github.com/users/ryanschneider/followers",
      "following_url": "https://api.github.com/users/ryanschneider/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanschneider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanschneider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanschneider/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanschneider/orgs",
      "repos_url": "https://api.github.com/users/ryanschneider/repos",
      "events_url": "https://api.github.com/users/ryanschneider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanschneider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-11T23:48:11Z",
    "updated_at": "2018-09-11T23:48:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI the 500 number that @tueric is referring to is from a recent off-chain indexing we've done, here's some graphs of the same data showing that most recent blocks have around 500 events in them:\r\n\r\n![logsperblock](https://user-images.githubusercontent.com/53520/45393300-2b62d800-b5e0-11e8-83f8-4e215edaeb2b.png)\r\n\r\nAnd the cumulative count of all blocks over time:\r\n\r\n![cumulativelogs](https://user-images.githubusercontent.com/53520/45393307-3158b900-b5e0-11e8-85ed-d42beb34368d.png)\r\n\r\nSo if every block with 500 events in it (which has been more or less the case since block 4m) really does have roughly a 1 in 7 chance of being a false positive for the bloom filter, then we would expect my query above to have roughly `~2.5million * 1/7 = 350,000` false positives, but as shown with my patch it only had 541, so something (thankfully!) must be keeping the false positive rate down.\r\n\r\nThinking about it another way, the fact this query only had 541 false positives, and that blocks have been pretty steadily around 500 events per block starting around block 4m, means that the FP rate was closer to `541 / 2,500,000 = 0.0002164`, so actually very good, or I might be recording the performance of the bloom filter at the wrong spot.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/420463864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/431073923",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17613#issuecomment-431073923",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17613",
    "id": 431073923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTA3MzkyMw==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-18T16:24:11Z",
    "updated_at": "2018-10-18T16:24:11Z",
    "author_association": "MEMBER",
    "body": "In recent blocks the count of bloom filter entries (each event has at least one entry, its address, and one extra one per topic; almost all events have at least one topic) has hovered around 300. This works out to a false positive rate of about 0.5%: https://twitter.com/nicksdjohnson/status/1052943597123895296\r\n\r\nBecause of the base rate fallacy, the rarer the events you actually want are, the more false positives you'll see. One way to think of it is that for every query you should expect a certain number of false positive blocks per day, plus any true positives. Thus a very rare event will naturally see way more false positives than real positives.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/431073923/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/544170867",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17613#issuecomment-544170867",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17613",
    "id": 544170867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDE3MDg2Nw==",
    "user": {
      "login": "stale[bot]",
      "id": 26384082,
      "node_id": "MDM6Qm90MjYzODQwODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stale%5Bbot%5D",
      "html_url": "https://github.com/apps/stale",
      "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-10-19T16:46:41Z",
    "updated_at": "2019-10-19T16:46:41Z",
    "author_association": "NONE",
    "body": "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/544170867/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
