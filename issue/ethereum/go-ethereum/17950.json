{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17950",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17950/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17950/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17950/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/17950",
  "id": 371957035,
  "node_id": "MDU6SXNzdWUzNzE5NTcwMzU=",
  "number": 17950,
  "title": "Problem in `p2p/peer.go` run method",
  "user": {
    "login": "AmirSoleimani",
    "id": 5120554,
    "node_id": "MDQ6VXNlcjUxMjA1NTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5120554?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AmirSoleimani",
    "html_url": "https://github.com/AmirSoleimani",
    "followers_url": "https://api.github.com/users/AmirSoleimani/followers",
    "following_url": "https://api.github.com/users/AmirSoleimani/following{/other_user}",
    "gists_url": "https://api.github.com/users/AmirSoleimani/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AmirSoleimani/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AmirSoleimani/subscriptions",
    "organizations_url": "https://api.github.com/users/AmirSoleimani/orgs",
    "repos_url": "https://api.github.com/users/AmirSoleimani/repos",
    "events_url": "https://api.github.com/users/AmirSoleimani/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AmirSoleimani/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-10-19T13:26:23Z",
  "updated_at": "2018-11-08T11:38:09Z",
  "closed_at": "2018-11-08T11:38:08Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hi there,\r\n\r\n**File: `p2p/peer.go`**\r\n\r\nin `run()` method there are add `2` WaitGroup for `readLoop` and `pingLoop` ,  but when got an error in `readLoop(...) -> msg, err := p.rw.ReadMsg() ` and pass error to `errc chan` at end of the func, call `defer p.wg.Done()` and now we have `1` WaitGroup , but `errc chan` break loop , and after call `close(p.closed)` , `p.rw.close(reason)` never returned any thing in `run()` method because `WaitGroup` waiting for done `pingLoop` and `srv.delpeer` channel in `p2p/server.go` never called.\r\n\r\nif peer closed, `pingLoop` call `p.closed` and now `WaitGroup` is done, but it's not mean `readLoop` WaitGroup is done.\r\n\r\nIs this the problem I explained really happening?\r\n\r\nTnx.\r\n\r\n```go\r\nfunc (p *Peer) run() (remoteRequested bool, err error) {\r\n\tvar (\r\n\t\twriteStart = make(chan struct{}, 1)\r\n\t\twriteErr   = make(chan error, 1)\r\n\t\treadErr    = make(chan error, 1)\r\n\t\treason     DiscReason // sent to the peer\r\n\t)\r\n\tp.wg.Add(2)\r\n\tgo p.readLoop(readErr)\r\n\tgo p.pingLoop()\r\n\r\n\t// Start all protocol handlers.\r\n\twriteStart <- struct{}{}\r\n\tp.startProtocols(writeStart, writeErr)\r\n\r\n\t// Wait for an error or disconnect.\r\nloop:\r\n\tfor {\r\n\t\tselect {\r\n\t\tcase err = <-writeErr:\r\n\t\t\t// A write finished. Allow the next write to start if\r\n\t\t\t// there was no error.\r\n\t\t\tif err != nil {\r\n\t\t\t\treason = DiscNetworkError\r\n\t\t\t\tbreak loop\r\n\t\t\t}\r\n\t\t\twriteStart <- struct{}{}\r\n\t\tcase err = <-readErr:\r\n\t\t\tif r, ok := err.(DiscReason); ok {\r\n\t\t\t\tremoteRequested = true\r\n\t\t\t\treason = r\r\n\t\t\t} else {\r\n\t\t\t\treason = DiscNetworkError\r\n\t\t\t}\r\n\t\t\tbreak loop\r\n\t\tcase err = <-p.protoErr:\r\n\t\t\treason = discReasonForError(err)\r\n\t\t\tbreak loop\r\n\t\tcase err = <-p.disc:\r\n\t\t\treason = discReasonForError(err)\r\n\t\t\tbreak loop\r\n\t\t}\r\n\t}\r\n\r\n\tclose(p.closed)\r\n\tp.rw.close(reason)\r\n\tp.wg.Wait()\r\n\treturn remoteRequested, err\r\n}\r\n\r\nfunc (p *Peer) pingLoop() {\r\n\tping := time.NewTimer(pingInterval)\r\n\tdefer p.wg.Done()\r\n\tdefer ping.Stop()\r\n\tfor {\r\n\t\tselect {\r\n\t\tcase <-ping.C:\r\n\t\t\tif err := SendItems(p.rw, pingMsg); err != nil {\r\n\t\t\t\tp.protoErr <- err\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tping.Reset(pingInterval)\r\n\t\tcase <-p.closed:\r\n\t\t\treturn\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunc (p *Peer) readLoop(errc chan<- error) {\r\n\tdefer p.wg.Done()\r\n\tfor {\r\n\t\tmsg, err := p.rw.ReadMsg()\r\n\t\tif err != nil {\r\n\t\t\terrc <- err\r\n\t\t\treturn\r\n\t\t}\r\n\t\tmsg.ReceivedAt = time.Now()\r\n\t\tif err = p.handle(msg); err != nil {\r\n\t\t\terrc <- err\r\n\t\t\treturn\r\n\t\t}\r\n\t}\r\n}```",
  "closed_by": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17950/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17950/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/436965720",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17950#issuecomment-436965720",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17950",
    "id": 436965720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjk2NTcyMA==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-08T11:38:08Z",
    "updated_at": "2018-11-08T11:38:08Z",
    "author_association": "MEMBER",
    "body": "The problem you are talking about cannot happen. When there is an error in `readLoop` the error is sent on the `readErr` channel. This exits the loop in `run` and closes `p.closed` channel. The `pingLoop` will exit because it waits on `p.closed`.\r\n\r\nBoth `pingLoop` and `readLoop` exit if the underlying connection is closed. This is because read/write operations are unblocked by closing the connection, returning an error.\r\n\r\nIf you have seen a hanging peer, please post the stack trace.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/436965720/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
