{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24413",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24413/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24413/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24413/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/24413",
  "id": 1140650931,
  "node_id": "I_kwDOAOvK985D_POz",
  "number": 24413,
  "title": "[Question] Snap/Fast sync vs. Full sync for Archive nodes?",
  "user": {
    "login": "dzou",
    "id": 3209274,
    "node_id": "MDQ6VXNlcjMyMDkyNzQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3209274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dzou",
    "html_url": "https://github.com/dzou",
    "followers_url": "https://api.github.com/users/dzou/followers",
    "following_url": "https://api.github.com/users/dzou/following{/other_user}",
    "gists_url": "https://api.github.com/users/dzou/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dzou/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dzou/subscriptions",
    "organizations_url": "https://api.github.com/users/dzou/orgs",
    "repos_url": "https://api.github.com/users/dzou/repos",
    "events_url": "https://api.github.com/users/dzou/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dzou/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 268304226,
      "node_id": "MDU6TGFiZWwyNjgzMDQyMjY=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:docs",
      "name": "type:docs",
      "color": "fef2c0",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2022-02-16T22:24:58Z",
  "updated_at": "2022-07-28T03:50:54Z",
  "closed_at": "2022-02-17T09:44:14Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "The documentation describes that there are 3 sync modes `{fast, snap, full}` and different types of nodes including `archive` and `full`.\r\n\r\nWhat is the difference between using snap/fast sync for archive nodes versus if full sync is used for archive nodes? Are archive nodes using snap sync not able to serve the same requests that archive nodes using full sync can serve?\r\n\r\nRunning:\r\n\r\n```\r\ngeth --syncmode snap --gcmode archive\r\n```\r\n\r\nI tried to find some documentation but not clear what the verdict is:\r\n\r\n* https://github.com/ethereum/go-ethereum/pull/1889 -- Introducing fast sync, author notes: \"This allows a fast synced node to still retain its status an an archive node containing all historical data for user queries (and thus not influence the network's health in general), but at the same time to reassemble a recent network state at a fraction of the time it would take full block processing.\"\r\n\r\n* [Ethereum Stackexchange] [Do we have a full archive node after a geth fast sync?](https://ethereum.stackexchange.com/questions/41965/do-we-have-a-full-archive-node-after-a-geth-fast-sync) -- Author speculates that the node is not able to serve requests prior to a \"pivot block\".\r\n\r\n* [Ethereum Stackexchange] [does --gcmode=archive require --syncmode=full?](https://ethereum.stackexchange.com/questions/99308/geth-does-gcmode-archive-require-syncmode-full) -- Answer is not known.\r\n\r\nWould love to receive some clarification on this! Many thanks.",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24413/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24413/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1042756269",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24413#issuecomment-1042756269",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24413",
    "id": 1042756269,
    "node_id": "IC_kwDOAOvK984-JzKt",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-17T09:44:13Z",
    "updated_at": "2022-02-17T09:44:13Z",
    "author_association": "MEMBER",
    "body": "There are two different notions: `gcmode` and `syncmode`. The latter refers how to do the initial sync and the former is how to behave garbage collection wide.\r\n\r\nIn fast/snap sync, the \"current\" state of the network is downloaded directly. As such, any state before it (not block, just the state) will not be available for serving. If you are running with `gcmode=archive` after snap sync, then your node will hold onto all generated state **after** initial sync, but anything before it will still be missing.\r\n\r\nIn `full` sync, blocks are processed one by one from the genesis. By default get will garbage collect the generated state, but if `cgmode=archive` is specified it will hold onto them. Thus you will have all the state available from genesis.\r\n\r\n>  This allows a fast synced node to still retain its status an an archive node\r\n\r\nThat statement is wrong (I guess I messed it up at the time). I was meaning to write it \"retains it's status a a full node\".\r\n\r\n> Author speculates that the node is not able to serve requests prior to a \"pivot block\".\r\n\r\nArchive mode retains all the state that gets generated *during* block processing. If you reprocess all the blocks from genesis - with archive flag set - you will have all that state. If you do the initial sync without block processing, the state for that segment will not be available.\r\n\r\n> Does --gcmode=archive require --syncmode=full? -- Answer is not known.\r\n\r\nDepends on the behavior you want. If you want everything since genesis, then `full` is required. There are also use cases where you don't want everything, only from \"today onward\". In that case you can fast/snap sync and have archive keeping only the states after.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1042756269/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1048113790",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24413#issuecomment-1048113790",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24413",
    "id": 1048113790,
    "node_id": "IC_kwDOAOvK984-ePJ-",
    "user": {
      "login": "dzou",
      "id": 3209274,
      "node_id": "MDQ6VXNlcjMyMDkyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3209274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dzou",
      "html_url": "https://github.com/dzou",
      "followers_url": "https://api.github.com/users/dzou/followers",
      "following_url": "https://api.github.com/users/dzou/following{/other_user}",
      "gists_url": "https://api.github.com/users/dzou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dzou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dzou/subscriptions",
      "organizations_url": "https://api.github.com/users/dzou/orgs",
      "repos_url": "https://api.github.com/users/dzou/repos",
      "events_url": "https://api.github.com/users/dzou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dzou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-22T18:58:21Z",
    "updated_at": "2022-02-22T18:58:21Z",
    "author_association": "NONE",
    "body": "@karalabe -- Thank you so much for the response. I just have one more followup to help me understand --\r\n\r\nWhat would happen if we ran an archive node with `--syncmode full --gcmode archive` and then shut it down for a day then switched to `--syncmode snap --gcmode archive`? Would it be able to sync faster to current time and still retain all information in history to serve?\r\n\r\nWe manage some archive nodes will `syncmode=full` and are wondering if there is someway to speed things up.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1048113790/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1048536599",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24413#issuecomment-1048536599",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24413",
    "id": 1048536599,
    "node_id": "IC_kwDOAOvK984-f2YX",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-23T08:16:34Z",
    "updated_at": "2022-02-23T08:20:42Z",
    "author_association": "MEMBER",
    "body": "> What would happen if we ran an archive node with --syncmode full --gcmode archive\r\n\r\nThen it would store every state from genesis to until you shut it off. \r\n\r\n> day then switched to --syncmode snap --gcmode archive?\r\n\r\nIt would ignore the new syncmdoe and continue. \r\n\r\nI guess what would be desireable for you would be this: \r\n\r\n1. Node `A` has (all) state for blocks `0-2M`, \r\n2. Node `B` has all state for blocks `2M-3M`,\r\n3. etc.. \r\nN. Node `N` has state from `13M` to `head`\r\n\r\nThis is _possible_, but would require a bit of coding, and some special setup. For example, you would run nodes `1`-`N-1` with `--nodiscover --maxpeers=0` to prevent them from importing more data. \r\n\r\nThe way to create a \"archive node from `1M to 2M` could be to: \r\n1. Use `syncmode=full` until 1M, \r\n2. Do a state-pruning\r\n   - After pruning, you can also copy the datadir for use with the `2M-3M` node, which needs to continue without `gcmode=archive` \r\n3. Use `syncmode=full gcmode=archive` between 1M and 2M\r\n4. Stop the node\r\n5. Run the node with `--nodiscover --maxpeers=0`. \r\n\r\nI guess the one thing lacking to script up such a scenario right now is that we don't have a way to stop at a certain block, e.g. `geth ...args.. --exit-at=2000000`.\r\n\r\nAnother useful option would be to extend `gcmode`, so that one could say e.g. `gcmode=0:full,1000000:archive,2000000:full`, meaning it would be given a set of `N:<mode>`, in increasing order, and automatically switch at the given numbers. \r\nI'll file this up as a potential feature.  \r\n \r\n\r\n \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1048536599/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1048958672",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24413#issuecomment-1048958672",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24413",
    "id": 1048958672,
    "node_id": "IC_kwDOAOvK984-hdbQ",
    "user": {
      "login": "dzou",
      "id": 3209274,
      "node_id": "MDQ6VXNlcjMyMDkyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3209274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dzou",
      "html_url": "https://github.com/dzou",
      "followers_url": "https://api.github.com/users/dzou/followers",
      "following_url": "https://api.github.com/users/dzou/following{/other_user}",
      "gists_url": "https://api.github.com/users/dzou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dzou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dzou/subscriptions",
      "organizations_url": "https://api.github.com/users/dzou/orgs",
      "repos_url": "https://api.github.com/users/dzou/repos",
      "events_url": "https://api.github.com/users/dzou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dzou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-23T16:19:46Z",
    "updated_at": "2022-02-23T16:19:46Z",
    "author_association": "NONE",
    "body": "Thank you! 🙏 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1048958672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1141820885",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24413#issuecomment-1141820885",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24413",
    "id": 1141820885,
    "node_id": "IC_kwDOAOvK985EDs3V",
    "user": {
      "login": "shiziwen",
      "id": 1405245,
      "node_id": "MDQ6VXNlcjE0MDUyNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1405245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shiziwen",
      "html_url": "https://github.com/shiziwen",
      "followers_url": "https://api.github.com/users/shiziwen/followers",
      "following_url": "https://api.github.com/users/shiziwen/following{/other_user}",
      "gists_url": "https://api.github.com/users/shiziwen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shiziwen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shiziwen/subscriptions",
      "organizations_url": "https://api.github.com/users/shiziwen/orgs",
      "repos_url": "https://api.github.com/users/shiziwen/repos",
      "events_url": "https://api.github.com/users/shiziwen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shiziwen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-31T08:24:27Z",
    "updated_at": "2022-05-31T08:24:27Z",
    "author_association": "NONE",
    "body": "> 2\\. Do a state-pruning\r\n\r\n@holiman Thanks for your replay. \r\nBut what do you mean by `Do a state-pruning`?  What should I do or which command should I use to complete the state-pruning?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1141820885/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1142029526",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24413#issuecomment-1142029526",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24413",
    "id": 1142029526,
    "node_id": "IC_kwDOAOvK985EEfzW",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-31T11:47:54Z",
    "updated_at": "2022-05-31T11:47:54Z",
    "author_association": "MEMBER",
    "body": "I mean `geth snapshot prune-state`. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1142029526/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1143060560",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24413#issuecomment-1143060560",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24413",
    "id": 1143060560,
    "node_id": "IC_kwDOAOvK985EIbhQ",
    "user": {
      "login": "shiziwen",
      "id": 1405245,
      "node_id": "MDQ6VXNlcjE0MDUyNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1405245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shiziwen",
      "html_url": "https://github.com/shiziwen",
      "followers_url": "https://api.github.com/users/shiziwen/followers",
      "following_url": "https://api.github.com/users/shiziwen/following{/other_user}",
      "gists_url": "https://api.github.com/users/shiziwen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shiziwen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shiziwen/subscriptions",
      "organizations_url": "https://api.github.com/users/shiziwen/orgs",
      "repos_url": "https://api.github.com/users/shiziwen/repos",
      "events_url": "https://api.github.com/users/shiziwen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shiziwen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-01T02:49:32Z",
    "updated_at": "2022-06-01T02:49:32Z",
    "author_association": "NONE",
    "body": "> I mean `geth snapshot prune-state`.\r\n\r\nThank you very much, I will figure out what this command do.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1143060560/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1143091744",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24413#issuecomment-1143091744",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24413",
    "id": 1143091744,
    "node_id": "IC_kwDOAOvK985EIjIg",
    "user": {
      "login": "shiziwen",
      "id": 1405245,
      "node_id": "MDQ6VXNlcjE0MDUyNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1405245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shiziwen",
      "html_url": "https://github.com/shiziwen",
      "followers_url": "https://api.github.com/users/shiziwen/followers",
      "following_url": "https://api.github.com/users/shiziwen/following{/other_user}",
      "gists_url": "https://api.github.com/users/shiziwen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shiziwen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shiziwen/subscriptions",
      "organizations_url": "https://api.github.com/users/shiziwen/orgs",
      "repos_url": "https://api.github.com/users/shiziwen/repos",
      "events_url": "https://api.github.com/users/shiziwen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shiziwen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-01T04:02:04Z",
    "updated_at": "2022-06-01T04:02:04Z",
    "author_association": "NONE",
    "body": "@holiman Hi, I have another question about the state and the snapshot.\r\n\r\nAs I know, every block has its state(accurately, the world state MPT) which contains the account (also the contract) info, for full sync mode + full node, it will use the downloaded transactions to generate the state, and for fast(now is snap) sync + full node, it will not download the state until the pivot block and after that it will work as full sync, right? \r\n\r\nSo the full node actually save the state for every block after the full sync, right?\r\n\r\nBut from some documents and my test, the full node(either snap sync or full sync), it will only preserve state for the latest 128 blocks. Otherwise, it will return error with `missing trie node XXX (path )` when use eth_getBalance to get one account at a specific block number .\r\nSo, I don't understand why, or for the state, what's the difference between full node and archive node?   \r\n\r\nAnd what's the snapshot? what's the differences between state and snapshot?\r\n\r\nThank you very much.\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1143091744/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1197313567",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24413#issuecomment-1197313567",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24413",
    "id": 1197313567,
    "node_id": "IC_kwDOAOvK985HXY4f",
    "user": {
      "login": "MikeC-BC",
      "id": 46449334,
      "node_id": "MDQ6VXNlcjQ2NDQ5MzM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/46449334?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeC-BC",
      "html_url": "https://github.com/MikeC-BC",
      "followers_url": "https://api.github.com/users/MikeC-BC/followers",
      "following_url": "https://api.github.com/users/MikeC-BC/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeC-BC/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeC-BC/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeC-BC/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeC-BC/orgs",
      "repos_url": "https://api.github.com/users/MikeC-BC/repos",
      "events_url": "https://api.github.com/users/MikeC-BC/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeC-BC/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-27T20:09:15Z",
    "updated_at": "2022-07-27T20:11:29Z",
    "author_association": "NONE",
    "body": "A follow-up question: Is it possible to reprocess blocks from a certain block height to retain that state? \r\n\r\nE.g. Say I ran my node with `--syncmode fast` and `--gcmode archive` until block `15000000` when I switched to `--syncmode full`. I now want state starting from block `14000000`. \r\n\r\nCan this be done with some reprocessing of blocks without having to do a full sync from scratch?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1197313567/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1197624141",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24413#issuecomment-1197624141",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24413",
    "id": 1197624141,
    "node_id": "IC_kwDOAOvK985HYktN",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-28T03:50:54Z",
    "updated_at": "2022-07-28T03:50:54Z",
    "author_association": "MEMBER",
    "body": "Only if you reprocess everything from genesis (i.e. a sull sync).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1197624141/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
