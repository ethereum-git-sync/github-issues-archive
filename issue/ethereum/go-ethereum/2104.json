{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/2104",
  "id": 124804423,
  "node_id": "MDU6SXNzdWUxMjQ4MDQ0MjM=",
  "number": 2104,
  "title": "transactions of an address - example code please",
  "user": {
    "login": "altsheets",
    "id": 12915804,
    "node_id": "MDQ6VXNlcjEyOTE1ODA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/12915804?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/altsheets",
    "html_url": "https://github.com/altsheets",
    "followers_url": "https://api.github.com/users/altsheets/followers",
    "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
    "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
    "organizations_url": "https://api.github.com/users/altsheets/orgs",
    "repos_url": "https://api.github.com/users/altsheets/repos",
    "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
    "received_events_url": "https://api.github.com/users/altsheets/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 37,
  "created_at": "2016-01-04T17:40:42Z",
  "updated_at": "2022-08-27T17:15:23Z",
  "closed_at": "2018-02-16T13:16:09Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Please publish **working example code** for at least one of these questions:\n- all transactions TO the address 0xe99356bde974bbe08721d77712168fa070aa8da4\n- all transactions FROM the address 0xe99356bde974bbe08721d77712168fa070aa8da4\n- the past 10 transactions TO address 0xe99356bde974bbe08721d77712168fa070aa8da4\n- the past 11-20 transactions TO  address 0xe99356bde974bbe08721d77712168fa070aa8da4\n- the past 21-30 transactions TO  address 0xe99356bde974bbe08721d77712168fa070aa8da4\n- within the blocks 700,000 to 800,000, show all transactions TO the address 0xe99356bde974bbe08721d77712168fa070aa8da4\n- within _all blocks until the newest_, show _all_ transactions TO the address 0xe99356bde974bbe08721d77712168fa070aa8da4\n\nFor 'transactions' I need an _array of transaction ids_ \ne.g. [0xdf4c18485def00e5a61ea496d66ed0a1880526c291b45e76f91551c6ce0de6ac,   0x1a488b0d71c193d79872a7e0cee43484c3e1c7d1bc794931818cebc8c09880a9, ...].\n\nIf you have working code for ONE of those questions, it will probably be enough to extrapolate to most of the others ones. Please share your code, the [wiki](https://github.com/ethereum/wiki/wiki/JavaScript-API#web3ethfilter) is explicit only about pending transactions.\n\nThanks a lot!\n\nHappy New Year :-)\n",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104/reactions",
    "total_count": 5,
    "+1": 5,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168748944",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-168748944",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 168748944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODc0ODk0NA==",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T17:44:44Z",
    "updated_at": "2016-01-04T17:44:44Z",
    "author_association": "MEMBER",
    "body": "It isn't easy and will be time consuming.\n\n``` javascript\nvar n = eth.blocknumber;\n\nvar txs = [];\nfor(var i = 0; i < n; i++) {\n    var block = eth.getBlock(i, true);\n    for(var j = 0; j < block.transactions; j++) {\n        if( block.transactions[j].to == the_address )\n            txs.push(block.transactions[j]);\n    }\n}\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168748944/reactions",
      "total_count": 10,
      "+1": 10,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168748961",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-168748961",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 168748961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODc0ODk2MQ==",
    "user": {
      "login": "altsheets",
      "id": 12915804,
      "node_id": "MDQ6VXNlcjEyOTE1ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altsheets",
      "html_url": "https://github.com/altsheets",
      "followers_url": "https://api.github.com/users/altsheets/followers",
      "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
      "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
      "organizations_url": "https://api.github.com/users/altsheets/orgs",
      "repos_url": "https://api.github.com/users/altsheets/repos",
      "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altsheets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T17:44:47Z",
    "updated_at": "2016-01-04T17:44:47Z",
    "author_association": "NONE",
    "body": "Related to https://github.com/ethereum/go-ethereum/issues/1749 and https://github.com/ethereum/go-ethereum/issues/1897 .\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168748961/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168749140",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-168749140",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 168749140,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODc0OTE0MA==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T17:45:34Z",
    "updated_at": "2016-01-04T17:45:34Z",
    "author_association": "MEMBER",
    "body": "You have already asked for example code in https://github.com/ethereum/go-ethereum/issues/1897.\n\nAs much as everyone would like to see support for auto-indexing of raw value transfer transactions,\nthe answer you'll always receive is that the way to satisfy such queries is to make your account a wallet contract that emits logs for the things you care about.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168749140/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168749639",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-168749639",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 168749639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODc0OTYzOQ==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T17:47:37Z",
    "updated_at": "2016-01-04T17:47:37Z",
    "author_association": "MEMBER",
    "body": "Did you try the contract option, and if so, what prevents you from using it?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168749639/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168749658",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-168749658",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 168749658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODc0OTY1OA==",
    "user": {
      "login": "altsheets",
      "id": 12915804,
      "node_id": "MDQ6VXNlcjEyOTE1ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altsheets",
      "html_url": "https://github.com/altsheets",
      "followers_url": "https://api.github.com/users/altsheets/followers",
      "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
      "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
      "organizations_url": "https://api.github.com/users/altsheets/orgs",
      "repos_url": "https://api.github.com/users/altsheets/repos",
      "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altsheets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T17:47:43Z",
    "updated_at": "2016-01-04T17:47:43Z",
    "author_association": "NONE",
    "body": "```\nfor(var i = 0; i < eth.blocknumber; i++) {\n```\n\nouch.\n\n> is to make your account a wallet contract that emits logs for the things you care about.\n\nThanks. Please publish example code for that.\n\nThat is faster than traversing 800000 blocks?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168749658/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168750442",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-168750442",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 168750442,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODc1MDQ0Mg==",
    "user": {
      "login": "altsheets",
      "id": 12915804,
      "node_id": "MDQ6VXNlcjEyOTE1ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altsheets",
      "html_url": "https://github.com/altsheets",
      "followers_url": "https://api.github.com/users/altsheets/followers",
      "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
      "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
      "organizations_url": "https://api.github.com/users/altsheets/orgs",
      "repos_url": "https://api.github.com/users/altsheets/repos",
      "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altsheets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T17:51:26Z",
    "updated_at": "2016-01-04T17:54:18Z",
    "author_association": "NONE",
    "body": "> You have already asked for example code in #1897.    \n\nyes - and no one answered there. That made me ask here. You see?  :-)\n\nIs there perhaps a working way to use the **web3.eth.filter** function to achieve the same? Would that be faster than the brute-force-checking-all-blocks-ever-myself suggestion of obscuren (thanks!) ?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168750442/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168751834",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-168751834",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 168751834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODc1MTgzNA==",
    "user": {
      "login": "altsheets",
      "id": 12915804,
      "node_id": "MDQ6VXNlcjEyOTE1ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altsheets",
      "html_url": "https://github.com/altsheets",
      "followers_url": "https://api.github.com/users/altsheets/followers",
      "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
      "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
      "organizations_url": "https://api.github.com/users/altsheets/orgs",
      "repos_url": "https://api.github.com/users/altsheets/repos",
      "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altsheets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T17:56:21Z",
    "updated_at": "2016-01-04T17:56:33Z",
    "author_association": "NONE",
    "body": "> what prevents you from using it?\n\nCan it be applied to _any_ address?\n\ni.e. \nwhat if I want to see all transactions going into, or coming from the address of a friend?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168751834/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168752349",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-168752349",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 168752349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODc1MjM0OQ==",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T17:58:16Z",
    "updated_at": "2016-01-04T17:58:16Z",
    "author_association": "MEMBER",
    "body": "@altsheets use something like this\n\n```\ncontract T {\n    event NewTx(address indexed from, address indexed to, uint256 value)\n    function transact(address to) {\n        to.value(msg.value);\n        NewTx(msg.from, to, msg.value);\n    }\n}\n```\n\n``` javascript\nvar abi = /* abi code */\nvar vContract = web3.eth.contract(abi);\n\nvar wallet = vContract.at(contractAddr);\n\nwallet.NewTx({to: me}, function(error, log) {\n});\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168752349/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168752604",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-168752604",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 168752604,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODc1MjYwNA==",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T17:59:17Z",
    "updated_at": "2016-01-04T17:59:31Z",
    "author_association": "MEMBER",
    "body": "Please note this is an issue tracker for go-ethereum. This isn't your average go-to channel for asking help (though I'm happy to provide it). Please find us on gitter :-)\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168752604/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168752862",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-168752862",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 168752862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODc1Mjg2Mg==",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T18:00:21Z",
    "updated_at": "2016-01-04T18:00:21Z",
    "author_association": "MEMBER",
    "body": "Gitter also has a bigger user base so you'll likely receive help faster\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168752862/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168757869",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-168757869",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 168757869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODc1Nzg2OQ==",
    "user": {
      "login": "altsheets",
      "id": 12915804,
      "node_id": "MDQ6VXNlcjEyOTE1ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altsheets",
      "html_url": "https://github.com/altsheets",
      "followers_url": "https://api.github.com/users/altsheets/followers",
      "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
      "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
      "organizations_url": "https://api.github.com/users/altsheets/orgs",
      "repos_url": "https://api.github.com/users/altsheets/repos",
      "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altsheets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T18:20:32Z",
    "updated_at": "2016-01-04T18:39:27Z",
    "author_association": "NONE",
    "body": "Thanks a lot. I was on gitter several times already. Without success.\n\n> (though I'm happy to provide it)\n\nThanks a lot for that.\n\n---\n\n> note this is an issue tracker for go-ethereum\n\nI know, and I am sorry. But:\n\nI see this same question (\"all tx of an ETH address\") in many places all over the internet - and unanswered. That is why I thought it to be of general interest, and asked here. \n\nAlso it is meant to hint at a \"**request for code**\", for a future version of go-ethereum. Call me a naive dreamer \\* lol \\* - but of course I would rather like a simple basic API call --> please study the [excellent NXT API function 'getAccountTransactions'](http://nxtwiki.org/wiki/The_Nxt_API#Get_Account_Transactions) - that is like where you want to end up at some moment in your future. You do not want to live much longer without that function, which is so essential for coding a money system.\n\nBut until you have created that urgently necessary function in your base code ... I already need its results ... soonish. \n\nThat's why I asked for example code here, to create a workaround. Sadly, it really looks as if I will have to create a whole database, and parse the whole ETH chain myself. Only then I can recycle the information from the 800k-loop. Otherwise with each new address I would need to start anew.\n\nAm I right?\nWhat a hassle ... :-(\n\n---\n\n> contract T { ...\n\nTo create a contract costs money, right?\n\nJust to see the transactions into or out of someone's account ... I have to pay money each time?\n\nI am still a newbie, so please forgive me, if I am understanding some of this stuff completely wrong. \n\n---\n\nP.S.: Is there a better place where I can bring this \"request for code\" to, where it will be read by the essential deciders, and architects?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168757869/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168775239",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-168775239",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 168775239,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODc3NTIzOQ==",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T19:17:10Z",
    "updated_at": "2016-01-04T19:17:10Z",
    "author_association": "MEMBER",
    "body": "> You do not want to live much longer without that function, which is so essential for coding a money system.\n\nEthereum provides you with the tools and means to code up \"features\" through contracts. If you require extra functionality you can extend it, at a cost.\n\nIf you require indexing of some type ... you code it up through a contract.\nIf you require an authentication system ... you code it up through a contract.\nIf you require storing data ... you code it up through a contract.\nIf you require ... you code it up through a contract.\n\nEthereum is a generic, extendible, computation platform with consensus and an immutable data structure . It's not your average Bitcoin blockchain with a very **specific** use case :-)\n\n> To create a contract costs money, right?\n\nCreating a contract costs Ether, correct. But you get so much in return! (an extendible, flexible blockchain).\n\n> Just to see the transactions into or out of someone's account ... I have to pay money each time?\n\nStoring data **on** the blockchain cost money. Retrieving that data does not cost money. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168775239/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168839746",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-168839746",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 168839746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODgzOTc0Ng==",
    "user": {
      "login": "altsheets",
      "id": 12915804,
      "node_id": "MDQ6VXNlcjEyOTE1ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altsheets",
      "html_url": "https://github.com/altsheets",
      "followers_url": "https://api.github.com/users/altsheets/followers",
      "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
      "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
      "organizations_url": "https://api.github.com/users/altsheets/orgs",
      "repos_url": "https://api.github.com/users/altsheets/repos",
      "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altsheets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T23:06:32Z",
    "updated_at": "2016-01-04T23:16:50Z",
    "author_association": "NONE",
    "body": "Thanks a lot for your answer. Very interesting.\n\nI like what ETH is adding to the landscape. Otherwise I would not be here.\n\nHowever, I still don't understand how dropping essential, proven, good concepts is a good thing. \n\nAnd I don't get the defending of the status quo of an unready system, against the introduction of a such much wanted function, which is needed by so many people? Just google it. And even see the above \"... everyone would like to see support for...\".\n\nBut that's politics, anyways. If something's really needed, it will be built, one day.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168839746/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168839771",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-168839771",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 168839771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODgzOTc3MQ==",
    "user": {
      "login": "altsheets",
      "id": 12915804,
      "node_id": "MDQ6VXNlcjEyOTE1ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altsheets",
      "html_url": "https://github.com/altsheets",
      "followers_url": "https://api.github.com/users/altsheets/followers",
      "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
      "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
      "organizations_url": "https://api.github.com/users/altsheets/orgs",
      "repos_url": "https://api.github.com/users/altsheets/repos",
      "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altsheets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T23:06:38Z",
    "updated_at": "2016-01-04T23:18:40Z",
    "author_association": "NONE",
    "body": "> > To create a contract costs money, right?\n> \n> Creating a contract costs Ether, correct.\n\nAh, so the above strategy would cost money then?\n\n> > Just to see the transactions into or out of someone's account ... I have to pay money each time?\n> \n> Storing data on the blockchain cost money. Retrieving that data does not cost money.\n\nGood to know. Not sure I understand how this relates to the case at hand. Creating that above suggested contract would cost money, and later querying it won't cost money anymore? Correct?\n\nWhat if I wanted to study all the transactions of 10 different accounts? Would I need to create 10 contracts for that, and pay 10 times? And what if I wanted to study 100 accounts? 1000 accounts?\n\n> If you require indexing of some type ... you code it up through a contract.\n\nIdea! (-:\nWould it be a working strategy if someone created such a contract for each of all the ETH addresses which appeared on the block chain until now - and then everyone could simply query those contracts to get the answer to the \"missing function\" of in- and out-going transactions? How much would that costs for all ETH addresses in existence now? Perhaps it is cheap, and the solution to our needs could simply be paid for.\n\nThanks a lot.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168839771/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168948211",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-168948211",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 168948211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODk0ODIxMQ==",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-05T09:36:38Z",
    "updated_at": "2016-01-05T09:38:05Z",
    "author_association": "MEMBER",
    "body": "> Ah, so the above strategy would cost money then?\n\nYes. Talking micro cents here tho.\n\n> Good to know. Not sure I understand how this relates to the case at hand.\n\nIt doesn't. I'm trying to show you that if you require any additional functionality not provided by default you'd have to code it up :-)\n\n> Would it be a working strategy if someone ...\n\nIt's a nice strategy but isn't required by default, in fact we used to have this functionality but decided to remove it since it simply isn't required for most use cases. It's only interesting in cases where people actually do value transfers. For example I use my `<address>` as an identity and there's an identity management system on the blockchain that I can interact with. I don't care about the information when I **interact** with the identity system, I only care that it does it right and any of the in or outputs have no additional value, to me, as a user of the identity \"software\". Note here that I'm never sending it any value (hence why I not need any additional overhead of \"storing\" the interaction). \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168948211/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168979624",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-168979624",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 168979624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODk3OTYyNA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-05T11:48:23Z",
    "updated_at": "2016-01-05T11:48:23Z",
    "author_association": "MEMBER",
    "body": "The confusion I think stems from the fact that we have two types of accounts: user accounts and contracts.\n\nThe system was really designed to support complex contracts, where user accounts only initiate a contract function, but otherwise in itself is not interesting. If you use your account in this context, then it's much less interesting what a user did as it \"should\" just interact with contracts. In the contract itself you could add arbitrarily complex logging to meet your specific needs.\n\nNow the two places where this assumption doesn't hold as strongly as it could is:\n- Even though you can code arbitrary contracts to fit your inspection needs, you cannot force this upon someone else. So inspecting 3rd party contracts is not that easy.\n- Even though user accounts should only interact with contracts, people obviously use them as direct person-to-person transactions, but we never really targeted this use case so the associated tooling is limited.\n\nNeither of the use cases above are inherently bad, but as they are not the way the system is \"meant\" to be used, official implementations tend not to focus on them as much. The reason is that it's extra non-insignificant maintenance cost with a potentially significant runtime and storage complexity.\n\nAFAIK, Vitalik's Serenity proposal has a few ideas to move further things into contracts and leave much less complexity in implementations, one of which is to remove the concept of user accounts altogether (haven't spent too much time reading the proposals, so cannot say anything more for sure). In essence, the development direction is to make Ethereum harder to use badly, and inherently ensure that the core functionality can cover all the use cases people what to hit it with, without requiring a constant effort being poured into the implementations themselves to keep up. The more we can push into contracts, the more inherently works in all implementations and less custom code is required client side.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168979624/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/169037531",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-169037531",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 169037531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTAzNzUzMQ==",
    "user": {
      "login": "altsheets",
      "id": 12915804,
      "node_id": "MDQ6VXNlcjEyOTE1ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altsheets",
      "html_url": "https://github.com/altsheets",
      "followers_url": "https://api.github.com/users/altsheets/followers",
      "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
      "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
      "organizations_url": "https://api.github.com/users/altsheets/orgs",
      "repos_url": "https://api.github.com/users/altsheets/repos",
      "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altsheets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-05T15:38:56Z",
    "updated_at": "2016-01-05T15:38:56Z",
    "author_association": "NONE",
    "body": "Thanks for all the background information! Very interesting.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/169037531/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/359150114",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-359150114",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 359150114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTE1MDExNA==",
    "user": {
      "login": "EvilJordan",
      "id": 1364262,
      "node_id": "MDQ6VXNlcjEzNjQyNjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1364262?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EvilJordan",
      "html_url": "https://github.com/EvilJordan",
      "followers_url": "https://api.github.com/users/EvilJordan/followers",
      "following_url": "https://api.github.com/users/EvilJordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/EvilJordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EvilJordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EvilJordan/subscriptions",
      "organizations_url": "https://api.github.com/users/EvilJordan/orgs",
      "repos_url": "https://api.github.com/users/EvilJordan/repos",
      "events_url": "https://api.github.com/users/EvilJordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EvilJordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-20T06:36:57Z",
    "updated_at": "2018-01-20T06:36:57Z",
    "author_association": "NONE",
    "body": "Hey, @altsheets, did you ever figure out a solution for this. You are not wrong in wanting this functionality and I find the intense opposition to it startling.\r\n\r\nI really liked the suggestion, in the now infamous[ #1897](https://github.com/ethereum/go-ethereum/issues/1897), of how a \"full\" node would have a special admin function or the like to avoid the issue of light nodes not having complete information.\r\n\r\nIt's very disappointing to me to see that the conversation around this issue hasn't progressed, gets shut down/turned private, and there seem to be no existing solutions out there (if there are, people are keeping them closely guarded for whatever reason).\r\n\r\nAnyway, just checking in, two years later, to see if you've made any progress you'd be willing to share!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/359150114/reactions",
      "total_count": 26,
      "+1": 17,
      "-1": 0,
      "laugh": 9,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/366230277",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-366230277",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 366230277,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjIzMDI3Nw==",
    "user": {
      "login": "dskvr",
      "id": 299465,
      "node_id": "MDQ6VXNlcjI5OTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/299465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dskvr",
      "html_url": "https://github.com/dskvr",
      "followers_url": "https://api.github.com/users/dskvr/followers",
      "following_url": "https://api.github.com/users/dskvr/following{/other_user}",
      "gists_url": "https://api.github.com/users/dskvr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dskvr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dskvr/subscriptions",
      "organizations_url": "https://api.github.com/users/dskvr/orgs",
      "repos_url": "https://api.github.com/users/dskvr/repos",
      "events_url": "https://api.github.com/users/dskvr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dskvr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-16T13:06:20Z",
    "updated_at": "2018-02-16T13:06:26Z",
    "author_association": "NONE",
    "body": "Developer 1: \"How do I query all transactions belonging to an address?\"\r\nDeveloper 2: \"Iterate the entire blockchain and check against the desired address\"\r\nDeveloper 1: \"Seems legit\" (said no one ever) \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/366230277/reactions",
      "total_count": 11,
      "+1": 0,
      "-1": 0,
      "laugh": 11,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/366232221",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-366232221",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 366232221,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjIzMjIyMQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-16T13:16:09Z",
    "updated_at": "2018-02-16T13:16:09Z",
    "author_association": "MEMBER",
    "body": "Ethereum does not have any consensus mechanism to verify such an information. You're only option is to reprocess all the blocks and transactions since the genesis and whenever your desired account is touched, you make a note of it. This is completely unrealistic for any user other than block explorers, so that's the reason for the opposition to make all nodes bear such burden.\r\n\r\nAs long as there's no consensus mechanism, it's impossible for a fast synced, warp synced or light synced node to verify this information. Without being able to verify it, a remote node can feed you arbitrary junk about what your past transactions were and you have absolutely no means to check it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/366232221/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/366420668",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-366420668",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 366420668,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjQyMDY2OA==",
    "user": {
      "login": "EvilJordan",
      "id": 1364262,
      "node_id": "MDQ6VXNlcjEzNjQyNjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1364262?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EvilJordan",
      "html_url": "https://github.com/EvilJordan",
      "followers_url": "https://api.github.com/users/EvilJordan/followers",
      "following_url": "https://api.github.com/users/EvilJordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/EvilJordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EvilJordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EvilJordan/subscriptions",
      "organizations_url": "https://api.github.com/users/EvilJordan/orgs",
      "repos_url": "https://api.github.com/users/EvilJordan/repos",
      "events_url": "https://api.github.com/users/EvilJordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EvilJordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-17T06:21:49Z",
    "updated_at": "2018-02-17T06:23:33Z",
    "author_association": "NONE",
    "body": "Lol. You closed it. You guys are doing amazing work, but running away from this is going to bite Ethereum in the ass, hard.\r\n\r\nRight now, the only way for any non-custom solution on a developer-owned-full-node running in an external-database in order to view a history of transactions (both \"internal\" and \"external\") is via etherscan or ethplorer or similar... the block explorers you mentioned. These are even _worse_ than a remote node, as they are one system, opaque, proprietary, and without a consensus. There's no way to really know if things aren't being omitted or manipulated.\r\n\r\nSo... the problem you mentioned: \r\n> a remote node can feed you arbitrary junk about what your past transactions were and you have absolutely no means to check it\r\n\r\nexists right now, it's just not integrated programmatically across the network. \r\n\r\nWhat good is an immutable chain if you can't look back and see what's stored in it? How in the world would a future financial institution/economy run an audit if they can't pull the data and know for sure everyone's looking at the same thing? All of their trust would have to be in one of these block explorers. Isn't that exactly the opposite of what's attempting to be built here?\r\n\r\nI'm not trying to be inflammatory or disrespectful, I just don't understand how this is considered a non-issue. Please educate me!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/366420668/reactions",
      "total_count": 30,
      "+1": 30,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/366516938",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-366516938",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 366516938,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjUxNjkzOA==",
    "user": {
      "login": "altsheets",
      "id": 12915804,
      "node_id": "MDQ6VXNlcjEyOTE1ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altsheets",
      "html_url": "https://github.com/altsheets",
      "followers_url": "https://api.github.com/users/altsheets/followers",
      "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
      "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
      "organizations_url": "https://api.github.com/users/altsheets/orgs",
      "repos_url": "https://api.github.com/users/altsheets/repos",
      "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altsheets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-18T13:40:59Z",
    "updated_at": "2018-02-18T13:40:59Z",
    "author_association": "NONE",
    "body": ":-)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/366516938/reactions",
      "total_count": 4,
      "+1": 0,
      "-1": 0,
      "laugh": 4,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/372053735",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-372053735",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 372053735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjA1MzczNQ==",
    "user": {
      "login": "0xae",
      "id": 500179,
      "node_id": "MDQ6VXNlcjUwMDE3OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/500179?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xae",
      "html_url": "https://github.com/0xae",
      "followers_url": "https://api.github.com/users/0xae/followers",
      "following_url": "https://api.github.com/users/0xae/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xae/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xae/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xae/subscriptions",
      "organizations_url": "https://api.github.com/users/0xae/orgs",
      "repos_url": "https://api.github.com/users/0xae/repos",
      "events_url": "https://api.github.com/users/0xae/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xae/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-10T18:38:27Z",
    "updated_at": "2018-03-10T18:39:03Z",
    "author_association": "NONE",
    "body": "@altsheets i'm having the very same problem here as i'm working on a ETH android wallet, processing lots of blocks and all their transactions is a headache even in the testnet, the sugestion regarding contracts is not feasible because it doenst make sense to charge my customers just to show them the transactions, no matter how cheap it is, the only viable solution is a db hosted somewhere indexing interested transactions.\r\n\r\nThe community **needs** this, even if it is implemented with a capping or pagination or something else.\r\nThis is not secondary, since light wallets are the most comfortable way to interact with the coins  and even contracts in my opinion and my customers as well.\r\n\r\nSorry for my poor english, i hope you get it.\r\nAwaiting any reactions...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/372053735/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/385017270",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-385017270",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 385017270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTAxNzI3MA==",
    "user": {
      "login": "abrinckm",
      "id": 8681111,
      "node_id": "MDQ6VXNlcjg2ODExMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8681111?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abrinckm",
      "html_url": "https://github.com/abrinckm",
      "followers_url": "https://api.github.com/users/abrinckm/followers",
      "following_url": "https://api.github.com/users/abrinckm/following{/other_user}",
      "gists_url": "https://api.github.com/users/abrinckm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abrinckm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abrinckm/subscriptions",
      "organizations_url": "https://api.github.com/users/abrinckm/orgs",
      "repos_url": "https://api.github.com/users/abrinckm/repos",
      "events_url": "https://api.github.com/users/abrinckm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abrinckm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-27T16:06:32Z",
    "updated_at": "2018-05-10T14:54:18Z",
    "author_association": "NONE",
    "body": "I'm assuming this conversation will continue though the issue has been closed. @EvilJordan I absolutely agree with you. \r\n\r\nSo from what I understand from reading this thread is that if we as a developer have a need for looking at the transaction ledger for a contract, (say to examine the complete lifecycle of an asset which we have defined in the contract), then we must provide our own functionality for that in the smart contract? Doesn't that become very expensive as it puts O(n) complexity directly into the smart contract?\r\n\r\nI have another scenario which involves using the ledger of transactions to back a local cache of data. I would argue that though local cache is centralized, we have the decentralized blockchain to back its trust. (and yes there are reasons for caching data locally: we can search, filter, and query or ask anything about the asset we've defined on the contract. these things could be done if we indexed data in a local db) If the cache were destroyed or was claimed corrupt, we could regenerate the cache totally from the transactions made to the smart contract... but I need those transactions to do this. And I want to regenerate the cache periodically so sifting through big data to filter these out would be a terrible waste of resources. \r\n\r\nor perhaps I'm the one missing something here. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/385017270/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/385020715",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-385020715",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 385020715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTAyMDcxNQ==",
    "user": {
      "login": "abrinckm",
      "id": 8681111,
      "node_id": "MDQ6VXNlcjg2ODExMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8681111?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abrinckm",
      "html_url": "https://github.com/abrinckm",
      "followers_url": "https://api.github.com/users/abrinckm/followers",
      "following_url": "https://api.github.com/users/abrinckm/following{/other_user}",
      "gists_url": "https://api.github.com/users/abrinckm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abrinckm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abrinckm/subscriptions",
      "organizations_url": "https://api.github.com/users/abrinckm/orgs",
      "repos_url": "https://api.github.com/users/abrinckm/repos",
      "events_url": "https://api.github.com/users/abrinckm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abrinckm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-27T16:19:57Z",
    "updated_at": "2018-04-27T16:19:57Z",
    "author_association": "NONE",
    "body": "@karalabe I don't understand. If I'm running a peer, and have a copy of the blockchain, and my peer is synced, then the data is verified up to the last moment it was synced. Couldn't a filter mechanism be implemented in a way that can only be read locally and safely assume the information is correct up to last sync without placing burden on other peers? I'm new to this whole thing. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/385020715/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/387401719",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-387401719",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 387401719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzQwMTcxOQ==",
    "user": {
      "login": "mdcoon",
      "id": 15849695,
      "node_id": "MDQ6VXNlcjE1ODQ5Njk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/15849695?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mdcoon",
      "html_url": "https://github.com/mdcoon",
      "followers_url": "https://api.github.com/users/mdcoon/followers",
      "following_url": "https://api.github.com/users/mdcoon/following{/other_user}",
      "gists_url": "https://api.github.com/users/mdcoon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mdcoon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mdcoon/subscriptions",
      "organizations_url": "https://api.github.com/users/mdcoon/orgs",
      "repos_url": "https://api.github.com/users/mdcoon/repos",
      "events_url": "https://api.github.com/users/mdcoon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mdcoon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-08T13:27:42Z",
    "updated_at": "2018-05-08T13:27:42Z",
    "author_association": "NONE",
    "body": "I agree with those asking for GETH to simply provide another indexing scheme within the local DB it already maintains. Instead of just indexing by block/hash, I don't see how it's that much work to index by to/from addresses. The only thing we need is a mapping from address=>block#, txnIndex. Given the block# and transaction index, we can retrieve the raw txn and receipt as normal. Otherwise, as already mentioned, we have to rely on centralized solutions or scan 5M+ blocks just to get our transactions. It seems like the benefits of local address indexing would outweigh the costs.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/387401719/reactions",
      "total_count": 8,
      "+1": 8,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/387897391",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-387897391",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 387897391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Nzg5NzM5MQ==",
    "user": {
      "login": "altsheets",
      "id": 12915804,
      "node_id": "MDQ6VXNlcjEyOTE1ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altsheets",
      "html_url": "https://github.com/altsheets",
      "followers_url": "https://api.github.com/users/altsheets/followers",
      "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
      "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
      "organizations_url": "https://api.github.com/users/altsheets/orgs",
      "repos_url": "https://api.github.com/users/altsheets/repos",
      "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altsheets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-09T22:44:28Z",
    "updated_at": "2018-05-10T00:04:52Z",
    "author_association": "NONE",
    "body": "> Hey, @altsheets, did you ever figure out a solution for this. \r\n\r\nNo.\r\n\r\nIt is long ago, and I eventually delivered what I wanted to ... **without** that whole functionality.\r\nWhat a pity, though.\r\n\r\nWhen -under time constraints- I considered whether to build that DB myself or not, I decided it is not my job to create a functionality that sees so much demand from everyone. I still think, it is a core functionality, which is missing.\r\n\r\n> You are not wrong in wanting this functionality \r\n\r\nI know. And we are many. Sometimes feature requests are built into great software ... with much less people wanting it.\r\n\r\n> and I find the intense opposition to it startling.\r\n\r\nYes.\r\n\r\nBy now I understand that Ethereum itself is built in a way that makes it a bit more complicated to implement this -highly useful- functionality.\r\n\r\nBut to refuse it right away - has always puzzled me too. And none of the arguments are convincing, apart from:\r\n\r\nI agree with the opposition that the client *in default mode* should NOT provide that mapping `address --> [ (blocknumber, tx-index) ]`, just because that would blow up the storage need massively.\r\n\r\nHowever, to add an additional switch `--txindex` to geth / parity / ... would not harm Ethereum much, would it?  As Ethereum is one of the richest projects on the planet, the only reason I can think of to oppose a technical innovation, is that it would create a future, in which bad things would be happening because of it. But I can think of no bad thing happening, when we developers get one more RPC call `eth_listTransactionsOfAccount` - or can you?\r\n\r\nImagine I start my `geth --txindex`, what would happen? \r\n\r\nOf course, it would not be able to sync from a snapshot.  \r\nInstead it would have to -once- sync the whole chain, to create that txindex. That (soon Terabyte) download might take days, but once it's done, it's done; each new block would just cause a few extra milliseconds & bytes.   \r\n\r\nAnd imagine it one step cleverer, with `geth --txindex 5000000`, I can ask this revolutionary dangerous luxurious new functionality ... to only sync from block 5000000; because I really do not need the transactions from the stone (or ice) age, but e.g. only this year. Then I can control even the HD storage waste. \r\n\r\nThere could even be a protocol on top which works like the current snapshot syncing, and allows to sync a recent txindex-DB from other nodes.  \r\n\r\n**Security (\"consensus mechanism\"?) idea:**\r\n\r\nIf you put the `address --> [ (blocknumber, tx-index) ]` (or `address --> { nonce --> (blocknumber, tx-index) }` or `address --> [ txHash ]`) mapping into some Merkle trie structure, then an SPV-like mechanism that you actually got the *consensus-*txindex ... should be possible, or not?\r\n\r\n\r\nNow in contrast\r\n\r\n# look at the current situation:\r\n\r\nThe \"opposition\" team refused to build a feature into the clients that dozens (hundreds) of developers were asking (searching) for. What happened since then?\r\n\r\nThen of course, a minority of devs has solved it themselves, traversing the whole chain, putting everything into some local database - done. Without a doubt some of those solutions look almost identical, so it was a huge waste of humanpower (to that waste also add these endless discussions here); and very probably some implementations are even faulty, and are now causing havoc for endusers. But all those implementations together are ... a minority, a small one.  \r\n\r\nAnother, probably larger minority (and my project from back then falls into that category) - never implemented a functionality which would have been really nice to have; or if it was essential, dropped their whole project, because they couldn't do it with simple enough means. There is a big difference between simply calling a standardized RPC function, and implementing a local DB solution. And when you have an idea for an app, you are busy enough with your own questions.\r\n\r\nThe largest group however, is the bad outcome that this \"opposition\" can call itself responsible for:\r\n\r\nThe vast majority of devs who for years have been asking for this functionality ... is now simply querying centralized services like https://etherscan.io/apis . No need to mention any of the dozens of arguments why this is a dangerous and bad outcome. And ideologically just wrong.\r\n\r\nBut ... this issue is closed. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/387897391/reactions",
      "total_count": 9,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 5,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/387897736",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-387897736",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 387897736,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Nzg5NzczNg==",
    "user": {
      "login": "altsheets",
      "id": 12915804,
      "node_id": "MDQ6VXNlcjEyOTE1ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altsheets",
      "html_url": "https://github.com/altsheets",
      "followers_url": "https://api.github.com/users/altsheets/followers",
      "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
      "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
      "organizations_url": "https://api.github.com/users/altsheets/orgs",
      "repos_url": "https://api.github.com/users/altsheets/repos",
      "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altsheets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-09T22:46:19Z",
    "updated_at": "2018-05-09T22:46:19Z",
    "author_association": "NONE",
    "body": "What would be a nice T-Shirt slogan for (or against) the opposition to a `eth_listTransactions` RPC endpoint?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/387897736/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/387899660",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-387899660",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 387899660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Nzg5OTY2MA==",
    "user": {
      "login": "EvilJordan",
      "id": 1364262,
      "node_id": "MDQ6VXNlcjEzNjQyNjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1364262?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EvilJordan",
      "html_url": "https://github.com/EvilJordan",
      "followers_url": "https://api.github.com/users/EvilJordan/followers",
      "following_url": "https://api.github.com/users/EvilJordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/EvilJordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EvilJordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EvilJordan/subscriptions",
      "organizations_url": "https://api.github.com/users/EvilJordan/orgs",
      "repos_url": "https://api.github.com/users/EvilJordan/repos",
      "events_url": "https://api.github.com/users/EvilJordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EvilJordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-09T22:56:50Z",
    "updated_at": "2018-05-09T22:56:50Z",
    "author_association": "NONE",
    "body": "Thank you for the thoughtful reply, and I agree with everything you've said.\r\n\r\nI'm totally in to a t-shirt (for!) slogan!\r\nPerhaps print @obscuren's code block and comment (https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-168748944) with a 🙄 emoji... \r\n\r\n> `eth_listTransactions`... because srsly?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/387899660/reactions",
      "total_count": 7,
      "+1": 3,
      "-1": 0,
      "laugh": 4,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/387900997",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-387900997",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2104",
    "id": 387900997,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzkwMDk5Nw==",
    "user": {
      "login": "altsheets",
      "id": 12915804,
      "node_id": "MDQ6VXNlcjEyOTE1ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altsheets",
      "html_url": "https://github.com/altsheets",
      "followers_url": "https://api.github.com/users/altsheets/followers",
      "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
      "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
      "organizations_url": "https://api.github.com/users/altsheets/orgs",
      "repos_url": "https://api.github.com/users/altsheets/repos",
      "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altsheets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-09T23:04:27Z",
    "updated_at": "2018-05-10T00:05:55Z",
    "author_association": "NONE",
    "body": "I have long moved on, so I am really not bothered by this anymore. But as I had opened this issue,  I thought I reply a last time, and give my [2cents](https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-387897391), now few years later. Be not surprised if I don't get back to this. But I close with some ...\r\n\r\nConstructive suggestions:\r\n\r\n- it is not difficult to build it yourself. Example code is [above](https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-168748944). ((( yes, we want [that T-Shirt](https://github.com/ethereum/go-ethereum/issues/2104#issuecomment-387897736)! Anyone interested in further shortening obscuren's code, so that it nicely fits on the back of a shirt? )))\r\n- [more than 2 years ago](https://github.com/ethereum/go-ethereum/issues/1897#issuecomment-185276610), @Gustav-Simonsson [forked geth](https://github.com/Gustav-Simonsson/go-ethereum/tree/list_transactions), and implemented a solution! And he benchmarked it - 12 hours, 600 MB - at 1 million blocks? No one seemed to have bothered him creating that dangerous functionality (he/his-account is still alive ;-) ) - but they also did not merge it, and the fork is 2500 commits behind now.\r\n- try again: fork geth, and just implement that dangerous-and-unwanted-but-much-asked-for functionality `--txindex 5000000` yourself? Anyone? If you do want to try, then perhaps begin by compiling a concept from all the good ideas in e.g. these places: https://github.com/ethereum/go-ethereum/issues/1749 and https://github.com/ethereum/go-ethereum/issues/1897 and https://github.com/paritytech/parity/issues/3567 and this https://github.com/ethereum/go-ethereum/issues/2104 (and stackoverflow, [bountysource](https://www.bountysource.com/issues/27341437-eth_listtransactions) and many other places - [google](https://www.google.de/search?q=eth_listTransactions))\r\n- perhaps https://github.com/paritytech/parity/issues is more open to this idea, and wants to offer more to developers, to gain an edge over the mainstream geth client? Gav's comments did not read like that, back then - but very smart people sometimes do change their mind.\r\n- perhaps [blk-io/blk-explorer-free](https://github.com/blk-io/blk-explorer-free/blob/master/linux-docker-compose.yaml#L4-L17) helps? Any other open source blockexplorer *DB-backend* available?\r\n- an ICO after which [etherscan opensources their code](https://github.com/etherscan)? ScanCoin ;-)\r\n- as this one is closed, open a new issue?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/387900997/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
