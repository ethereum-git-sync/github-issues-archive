{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15102",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15102/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15102/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15102/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/15102",
  "id": 255574411,
  "node_id": "MDU6SXNzdWUyNTU1NzQ0MTE=",
  "number": 15102,
  "title": "eth_call with a specified block that has not been fetched by the node yet return zero values",
  "user": {
    "login": "wighawag",
    "id": 790580,
    "node_id": "MDQ6VXNlcjc5MDU4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wighawag",
    "html_url": "https://github.com/wighawag",
    "followers_url": "https://api.github.com/users/wighawag/followers",
    "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
    "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
    "organizations_url": "https://api.github.com/users/wighawag/orgs",
    "repos_url": "https://api.github.com/users/wighawag/repos",
    "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wighawag/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 856638432,
      "node_id": "MDU6TGFiZWw4NTY2Mzg0MzI=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:inactive",
      "name": "status:inactive",
      "color": "ffffff",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2017-09-06T11:42:58Z",
  "updated_at": "2019-01-20T07:28:05Z",
  "closed_at": "2019-01-20T07:28:05Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "\r\n#### Expected behaviour\r\neth_call should return a failure if the block requested is not present on the node\r\nThis way we can disregard the data when such error occur.\r\n\r\n**Else you are never sure that your data is actually zero at that particular block or it is the node that has not synced fully yet.**\r\n\r\n#### Actual behaviour\r\nCurrently eth_call will return 0x for calls with a specified block number that the node does not have\r\n\r\nthis means that with the following contract:\r\n\r\n```\r\npragma solidity 0.4.11;\r\n\r\ncontract BlockTest {\r\n     function getBlockInfo() constant returns (\r\n        uint256 blockNumber, \r\n        uint256 timestamp, \r\n        bytes32 previousBlockHash\r\n        ){\r\n        timestamp = block.timestamp;\r\n        blockNumber = block.number;\r\n        previousBlockHash = block.blockhash(blockNumber-1);\r\n    }\r\n}\r\n```\r\n\r\nor this one :\r\n```\r\npragma solidity 0.4.11;\r\n\r\ncontract BlockTest2 {\r\n    uint256 sValue = 7;\r\n     function getBlockInfo() constant returns (\r\n        uint256 storageValue,\r\n        uint256 constantValue,\r\n        uint256 blockNumber, \r\n        uint256 timestamp, \r\n        bytes32 previousBlockHash\r\n        ){\r\n        storageValue = sValue;\r\n        constantValue=4;\r\n        timestamp = block.timestamp;\r\n        blockNumber = block.number;\r\n        previousBlockHash = block.blockhash(blockNumber-1);\r\n    }\r\n}\r\n\r\n```\r\n\r\nan eth_call to getBlockInfo will return 0 for blockNumber, timestamp, previousBlockHash, or any data actually, even constant values.\r\n\r\nOf course in the particular example we could use the values to detect such missing block states since these should never be zero but there are many case where we do not need nor want to return these values\r\n\r\n#### Steps to reproduce the behaviour\r\n- compile and deploy the contract above \r\n(on ropsten BlockTest is at : 0xe315fe71cbe04f3dcb5daeeead5928c1b9ee8486  )  \r\n(on ropsten BlockTest2 is at : 0x50c6adc6370847bc00fa365136dd1d45736c47bc  )  \r\n\r\n- do an eth_call as follow :\r\n```\r\n{\"id\":601555241713,\"jsonrpc\":\"2.0\",\"method\":\"eth_call\",\"params\":[{\"to\":\"0xe315fe71cbe04f3dcb5daeeead5928c1b9ee8486\",\"data\":\"0x00819439\"},\"0x1060EEF\"]}\r\n```\r\nwhere \"0x1060EEF\" is a future block\r\n\r\nyou get :\r\n```\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"id\": 601555241713,\r\n    \"result\": \"0x\"\r\n}\r\n```\r\n\r\nwhile you should get an jsonrpc error\r\n\r\n#### Notes\r\n\r\nThis behaviour have been tested on geth but it might be present on other implementation. If it is the case, should we discuss the issue on the EIP repo ?\r\n\r\nThanks\r\n\r\n",
  "closed_by": {
    "login": "stale[bot]",
    "id": 26384082,
    "node_id": "MDM6Qm90MjYzODQwODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stale%5Bbot%5D",
    "html_url": "https://github.com/apps/stale",
    "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15102/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15102/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/327467777",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15102#issuecomment-327467777",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15102",
    "id": 327467777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzQ2Nzc3Nw==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-06T12:28:24Z",
    "updated_at": "2017-09-06T12:29:00Z",
    "author_association": "NONE",
    "body": "I added to the test another contract\r\n\r\n```\r\npragma solidity 0.4.11;\r\n\r\ncontract BlockTest3 {\r\n    uint256 sValue = 0;\r\n     function getBlockInfo() constant returns (\r\n        uint256 storageValue,\r\n        uint256 constantValue,\r\n        uint256 blockNumber, \r\n        uint256 timestamp, \r\n        bytes32 previousBlockHash\r\n        ){\r\n        storageValue = sValue;\r\n        constantValue=0;\r\n        timestamp = 0;\r\n        blockNumber = 0;\r\n        previousBlockHash = 0;\r\n    }\r\n}\r\n\r\n```\r\nropsten address : 0xb1bdafcde20ab7bcb61d194069a0aa5db5c7c526\r\n\r\nand with a call to an existing block I get\r\n```\r\n {\r\n        \"jsonrpc\": \"2.0\",\r\n        \"id\": 365692253423,\r\n        \"result\": \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"\r\n    }\r\n```\r\nwhile if the blockNumber was not exisiting yet I get:\r\n```\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"id\": 601555241713,\r\n    \"result\": \"0x\"\r\n}\r\n```\r\n\r\nI still think an error is better suited but if we stay with \"0x\" then the issue is in web3 since it does not currently detect such case and will give zero values to every result parameters.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/327467777/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/327471843",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15102#issuecomment-327471843",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15102",
    "id": 327471843,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzQ3MTg0Mw==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-06T12:45:12Z",
    "updated_at": "2017-09-06T12:45:12Z",
    "author_association": "NONE",
    "body": "I realized that \"0x\" is also the value returned when calling a method on block where the contract has not been deployed yet.\r\n\r\nI think that in this case \"0x\" is valid since that the behavior to expect when there is no such method.\r\n\r\nIn the case where the block has not been fetch yet, on the other hand, this is misleading since if it will be  executed at a later time (when the block is finally fetched) it would give a different answer. Something not possible otherwise in the world of blockchain where everything is supposed to be immutable.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/327471843/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/327497860",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15102#issuecomment-327497860",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15102",
    "id": 327497860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzQ5Nzg2MA==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-06T14:18:26Z",
    "updated_at": "2017-09-06T14:18:26Z",
    "author_association": "NONE",
    "body": "In the context of a node service like Infura where nodes are not necessarily (rarely when under pressure) on the same block, a eth_call on that service (with a specified block) will sometime return \"0x\" (when not yet synced up to that block) and sometime some actual data ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/327497860/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/327930141",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15102#issuecomment-327930141",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15102",
    "id": 327930141,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzkzMDE0MQ==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-07T21:18:09Z",
    "updated_at": "2017-09-07T21:18:09Z",
    "author_association": "NONE",
    "body": "\r\nI just tried with a partially synced parity node using default command line param except for the ropsten network:\r\n \r\nI get this both for a future block (0x1060EEF) and a past block (0xF)\r\n\r\n```\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"error\": {\r\n        \"code\": -32000,\r\n        \"message\": \"This request is not supported because your node is running with state pruning. Run with --pruning=archive.\"\r\n    },\r\n    \"id\": 365692253423\r\n}\r\n```\r\n\r\nupon restarting with --pruning=archive (not deleting any data though but it seems to be syncing from scratch)\r\n\r\nI get\r\n\r\n```\r\n    {\r\n        \"jsonrpc\": \"2.0\",\r\n        \"result\": \"0x\",\r\n        \"id\": 365692253423\r\n    }\r\n```\r\n\r\nfor a past block (\"0xF\" for example) which did not contain code for the contract address yet\r\n\r\nbut I get :\r\n\r\n```\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"error\": {\r\n        \"code\": -32000,\r\n        \"message\": \"This request is not supported because your node is running with state pruning. Run with --pruning=archive.\"\r\n    },\r\n    \"id\": 365692253423\r\n}\r\n```\r\nfor a block not yet synced (to be clear this is running with parity --pruning=archive)\r\n\r\nCould not try it with the node synced up a block past the time the contract was deployed (0x18BD6A) yet but I expect it to give the proper data values since otherwise there will be no way to get any data\r\n\r\nIn other words it seems parity behave fine ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/327930141/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/328021340",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15102#issuecomment-328021340",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15102",
    "id": 328021340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODAyMTM0MA==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-08T07:17:40Z",
    "updated_at": "2017-09-08T07:18:43Z",
    "author_association": "NONE",
    "body": "I managed to test on a fully synced parity node and I get the proper result for a existing block\r\n\r\nFor a future block (0x1060EEF for example) I get the error message\r\n\r\nSo I can confirm parity behave as I would expect, except for the message that can be misleading",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/328021340/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/328492264",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15102#issuecomment-328492264",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15102",
    "id": 328492264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODQ5MjI2NA==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-11T10:43:22Z",
    "updated_at": "2017-09-11T10:43:22Z",
    "author_association": "NONE",
    "body": "I had a look at the code and I believe the issue is here (for eth_call) : https://github.com/ethereum/go-ethereum/blob/c91f7beb53ff1ab0376d9aa5fab5a8de8b04631c/internal/ethapi/api.go#L587\r\n\r\nWhen not finding a block, it act if  there were no error (since err will be nil too here)\r\n\r\nA fix could be done there : https://github.com/ethereum/go-ethereum/blob/c4d21bc8e548d909d5b2940cb00d3d068f5697ec/eth/api_backend.go#L92 \r\n\r\nby only checking for err != null here and adding a check for header == nil where in that case an error will be returned for the missing block \r\n\r\nso every call that specific a block Number would get the proper behaviour \r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/328492264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/349541324",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15102#issuecomment-349541324",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15102",
    "id": 349541324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTU0MTMyNA==",
    "user": {
      "login": "egalano",
      "id": 1383412,
      "node_id": "MDQ6VXNlcjEzODM0MTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1383412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/egalano",
      "html_url": "https://github.com/egalano",
      "followers_url": "https://api.github.com/users/egalano/followers",
      "following_url": "https://api.github.com/users/egalano/following{/other_user}",
      "gists_url": "https://api.github.com/users/egalano/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/egalano/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/egalano/subscriptions",
      "organizations_url": "https://api.github.com/users/egalano/orgs",
      "repos_url": "https://api.github.com/users/egalano/repos",
      "events_url": "https://api.github.com/users/egalano/events{/privacy}",
      "received_events_url": "https://api.github.com/users/egalano/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-06T05:45:46Z",
    "updated_at": "2017-12-06T05:45:46Z",
    "author_association": "NONE",
    "body": "This also seems to be affecting nodes that are under heavy RPC load. Our nodes are processing tens of thousands of requests per second and during large traffic spikes some eth_calls that should be returning non-zero balances or values are returning zero. @Arachnid  or @karalabe could you please verify @wighawag's suggested fix?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/349541324/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/349963862",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15102#issuecomment-349963862",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15102",
    "id": 349963862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTk2Mzg2Mg==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T13:16:44Z",
    "updated_at": "2017-12-07T13:16:44Z",
    "author_association": "NONE",
    "body": "Hi @egalano \r\nThere is a PR for it here : https://github.com/ethereum/go-ethereum/pull/3485 but it has not been accepted yet. This is a rather urgent and simple thing to fix in my opinion. geth rpc api currently misbehave. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/349963862/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/445469218",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15102#issuecomment-445469218",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15102",
    "id": 445469218,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTQ2OTIxOA==",
    "user": {
      "login": "stale[bot]",
      "id": 26384082,
      "node_id": "MDM6Qm90MjYzODQwODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stale%5Bbot%5D",
      "html_url": "https://github.com/apps/stale",
      "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-12-08T15:59:32Z",
    "updated_at": "2018-12-08T15:59:32Z",
    "author_association": "NONE",
    "body": "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/445469218/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
