{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20611",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20611/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20611/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20611/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/20611",
  "id": 558174386,
  "node_id": "MDU6SXNzdWU1NTgxNzQzODY=",
  "number": 20611,
  "title": "RPC `debug_traceTransaction` user provided javascript tracer code causes method handler crashes due to go panics",
  "user": {
    "login": "tintinweb",
    "id": 2865694,
    "node_id": "MDQ6VXNlcjI4NjU2OTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2865694?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tintinweb",
    "html_url": "https://github.com/tintinweb",
    "followers_url": "https://api.github.com/users/tintinweb/followers",
    "following_url": "https://api.github.com/users/tintinweb/following{/other_user}",
    "gists_url": "https://api.github.com/users/tintinweb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tintinweb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tintinweb/subscriptions",
    "organizations_url": "https://api.github.com/users/tintinweb/orgs",
    "repos_url": "https://api.github.com/users/tintinweb/repos",
    "events_url": "https://api.github.com/users/tintinweb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tintinweb/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2020-01-31T14:45:25Z",
  "updated_at": "2020-08-20T06:49:03Z",
  "closed_at": "2020-08-20T06:49:03Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Hi there,\r\n\r\nas mentioned 2 weeks ago I finally found some time to debug and file the crashes @holiman. Here are the details.\r\n\r\nThere are multiple opportunities for a user with access to the `debug_traceTransaction` endpoint to crash the remote method handler by providing javascript code that causes the handler to panic. \r\n\r\nPlease note that the node recovers from this error (goroutine -> recover ðŸ™Œ). \r\n\r\nSee test-cases below.\r\n\r\n**Note** Even though the `debug` RPC namespace implies that critical functionality can be accessed I'd recommend adding a note to the `debug_traceTransaction` documentation that clearly outlines the risk of allowing untrusted entities to run untrusted javascript code especially because the interpreter engine is a native C library (duktape) which does not have the memory safety guarantees go provides (vulnerability in duktape).\r\n\r\n#### System information\r\n\r\nrelease and latest master. any os.\r\n\r\nGeth version: `Geth/v1.9.11-unstable-3c776c71-20200131/darwin-amd64/go1.13.6`\r\nOS & Version: OSX\r\nCommit hash : `15d09038a6b1d533bc78662f2f0b77ccf03aaab0`\r\n\r\n#### Expected behaviour\r\n\r\nmethod handler should not crash.\r\n\r\n#### Actual behaviour\r\n\r\n```json\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"id\": 1,\r\n    \"error\": {\r\n        \"code\": -32000,\r\n        \"message\": \"method handler crashed\"\r\n    }\r\n}\r\n```\r\n\r\n#### quick check\r\n\r\n```console\r\n//start\r\ngeth --rpc --gcmode=archive --syncmode=full  --rpcapi eth,web3,debug,admin\r\n\r\nINFO [01-31|14:33:57.470] Starting peer-to-peer node               instance=Geth/v1.9.11-unstable-3c776c71-20200131/darwin-amd64/go1.13.6\r\n```\r\n```json\r\n//REQ\r\n{\r\n    \"id\": 1,\r\n    \"method\": \"debug_traceTransaction\",\r\n    \"params\": [\r\n        \"0xa56249d3ca83cd8ba2e48e3c02532c4ef94f0024004f6332cff00526a3c7de6e\",\r\n        {\r\n            \"tracer\": \"{depths: [],step: function(log, db) {this.depths.push(log.memory.getUint(-100000));},fault: function() {},result: function() { return this.depths; }}\"\r\n        }\r\n    ]\r\n}\r\n//RESP\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"id\": 1,\r\n    \"error\": {\r\n        \"code\": -32000,\r\n        \"message\": \"method handler crashed\"\r\n    }\r\n}\r\n```\r\n\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\n##### Slice(negative, negative) or Slice(negative, >=mw.memory.Len()) panic\r\n\r\n**code:** \r\n\r\n**Note**: see `@note` comments\r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/master/eth/tracers/tracer.go#L94\r\n\r\n```go\r\n\r\n// slice returns the requested range of memory as a byte slice.\r\nfunc (mw *memoryWrapper) slice(begin, end int64) []byte {\r\n\tif mw.memory.Len() < int(end) {\r\n\t\t// TODO(karalabe): We can't js-throw from Go inside duktape inside Go. The Go\r\n\t\t// runtime goes belly up https://github.com/golang/go/issues/15639.\r\n\t\tlog.Warn(\"Tracer accessed out of bound memory\", \"available\", mw.memory.Len(), \"offset\", begin, \"size\", end-begin)\r\n\t\treturn nil  //@note - panics later at ptr := ctx.PushFixedBuffer(len(blob)) \r\n\t}\r\n\treturn mw.memory.GetCopy(begin, end-begin)  //@note - panic (-1, -2)\r\n}\r\n\r\n[...]\r\n\r\n// pushObject assembles a JSVM object wrapping a swappable memory and pushes it\r\n// onto the VM stack.\r\nfunc (mw *memoryWrapper) pushObject(vm *duktape.Context) {\r\n\tobj := vm.PushObject()\r\n\r\n\t// Generate the `slice` method which takes two ints and returns a buffer\r\n\tvm.PushGoFunction(func(ctx *duktape.Context) int {\r\n\t\tblob := mw.slice(int64(ctx.GetInt(-2)), int64(ctx.GetInt(-1)))\r\n\t\tctx.Pop2()\r\n\r\n\t\tptr := ctx.PushFixedBuffer(len(blob))  //@note - panics if blob is nil\r\n\t\tcopy(makeSlice(ptr, uint(len(blob))), blob)\r\n\t\treturn 1\r\n\t})\r\n\tvm.PutPropString(obj, \"slice\")\r\n\r\n\t// Generate the `getUint` method which takes an int and returns a bigint\r\n\tvm.PushGoFunction(func(ctx *duktape.Context) int {\r\n\t\toffset := int64(ctx.GetInt(-1))\r\n\t\tctx.Pop()\r\n\r\n\t\tpushBigInt(mw.getUint(offset), ctx)\r\n\t\treturn 1\r\n\t})\r\n\tvm.PutPropString(obj, \"getUint\")\r\n}\r\n```\r\n\r\n**testcase:** \r\n```javascript\r\n{depths: [], step: function(log) { this.depths.push(log.memory.slice(-1,-2)); }, fault: function() {}, result: function() { return this.depths; }}\r\n```\r\n\r\n**stacktrace:**\r\n\r\n```console\r\nRunning tool: /usr/local/opt/go/libexec/bin/go test -timeout 30s github.com/ethereum/go-ethereum/eth/tracers -run ^(TestRegressionPanicSlice)$\r\n\r\n--- FAIL: TestRegressionPanicSlice (0.01s)\r\npanic: runtime error: makeslice: len out of range [recovered]\r\n\tpanic: runtime error: makeslice: len out of range\r\n\r\ngoroutine 34 [running]:\r\ntesting.tRunner.func1(0xc0000f2400)\r\n\t/usr/local/opt/go/libexec/src/testing/testing.go:874 +0x3a3\r\npanic(0x45749e0, 0x46c8b50)\r\n\t/usr/local/opt/go/libexec/src/runtime/panic.go:679 +0x1b2\r\ngithub.com/ethereum/go-ethereum/core/vm.(*Memory).GetCopy(...)\r\n\t/Users/tintin/workspace/golang/go-ethereum/core/vm/memory.go:79\r\ngithub.com/ethereum/go-ethereum/eth/tracers.(*memoryWrapper).slice(0xc000010580, 0xffffffffffffffff, 0xfffffffffffffffe, 0xc79ab76d, 0xd3ee3a7ae30d56c8, 0xc000264620)\r\n\t/Users/tintin/workspace/golang/go-ethereum/eth/tracers/tracer.go:101 +0xba\r\ngithub.com/ethereum/go-ethereum/eth/tracers.(*memoryWrapper).pushObject.func1(0xc000010598, 0x7e27aa0)\r\n\t/Users/tintin/workspace/golang/go-ethereum/eth/tracers/tracer.go:122 +0x7a\r\ngopkg.in/olebedev/go-duktape%2ev3.goFunctionCall(0x7e01f70, 0x0)\r\n\t/Users/tintin/go/pkg/mod/gopkg.in/olebedev/go-duktape.v3@v3.0.0-20190213234257-ec84240a7772/duktape.go:156 +0xb7\r\ngopkg.in/olebedev/go-duktape%2ev3._cgoexpwrap_062d6de2de8d_goFunctionCall(0x7e01f70, 0x4060901)\r\n\t_cgo_gotypes.go:3511 +0x2b\r\ngopkg.in/olebedev/go-duktape%2ev3._Cfunc_duk_pcall_prop(0x7e01f70, 0x200000000, 0x0)\r\n\t_cgo_gotypes.go:2310 +0x4d\r\ngopkg.in/olebedev/go-duktape%2ev3.(*Context).PcallProp.func1(0xc000010570, 0x0, 0x2, 0x7ea0250)\r\n\t/Users/tintin/go/pkg/mod/gopkg.in/olebedev/go-duktape.v3@v3.0.0-20190213234257-ec84240a7772/api.go:786 +0x76\r\ngopkg.in/olebedev/go-duktape%2ev3.(*Context).PcallProp(0xc000010570, 0x0, 0x2, 0x2)\r\n\t/Users/tintin/go/pkg/mod/gopkg.in/olebedev/go-duktape.v3@v3.0.0-20190213234257-ec84240a7772/api.go:786 +0x3f\r\ngithub.com/ethereum/go-ethereum/eth/tracers.(*Tracer).call(0xc0000b4840, 0x460296c, 0x4, 0xc000264a38, 0x2, 0x2, 0x0, 0x0, 0x0, 0x0, ...)\r\n\t/Users/tintin/workspace/golang/go-ethereum/eth/tracers/tracer.go:508 +0x120\r\ngithub.com/ethereum/go-ethereum/eth/tracers.(*Tracer).CaptureState(0xc0000b4840, 0xc000254000, 0x0, 0xc00026e060, 0x2710, 0x3, 0xc0000ed6e0, 0xc0000ed700, 0xc000118240, 0x1, ...)\r\n\t/Users/tintin/workspace/golang/go-ethereum/eth/tracers/tracer.go:568 +0x237\r\ngithub.com/ethereum/go-ethereum/core/vm.(*EVMInterpreter).Run(0xc000258000, 0xc000118240, 0x4a7b240, 0x0, 0x0, 0x2700, 0x0, 0x0, 0x0, 0x0, ...)\r\n\t/Users/tintin/workspace/golang/go-ethereum/core/vm/interpreter.go:265 +0x69c\r\ngithub.com/ethereum/go-ethereum/eth/tracers.runTrace(0xc0000b4840, 0x92, 0xc0000b4840, 0x0, 0x0, 0x102b48400000000f)\r\n\t/Users/tintin/workspace/golang/go-ethereum/eth/tracers/tracer_test.go:59 +0x283\r\ngithub.com/ethereum/go-ethereum/eth/tracers.TestRegressionPanicSlice(0xc0000f2400)\r\n\t/Users/tintin/workspace/golang/go-ethereum/eth/tracers/tracer_test.go:72 +0xa5\r\ntesting.tRunner(0xc0000f2400, 0x462a118)\r\n\t/usr/local/opt/go/libexec/src/testing/testing.go:909 +0xc9\r\ncreated by testing.(*T).Run\r\n\t/usr/local/opt/go/libexec/src/testing/testing.go:960 +0x350\r\nFAIL\tgithub.com/ethereum/go-ethereum/eth/tracers\t1.144s\r\nFAIL\r\nError: Tests failed.\r\n```\r\n\r\n\r\n##### getUint(<=-32) panic\r\n\r\n**code:** \r\n\r\n**Note**: see `@note` comments\r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/master/eth/tracers/tracer.go#L105\r\n\r\n```go\r\n// getUint returns the 32 bytes at the specified address interpreted as a uint.\r\nfunc (mw *memoryWrapper) getUint(addr int64) *big.Int {\r\n\tif mw.memory.Len() < int(addr)+32 {  //@note - panic addr <= -32\r\n\t\t// TODO(karalabe): We can't js-throw from Go inside duktape inside Go. The Go\r\n\t\t// runtime goes belly up https://github.com/golang/go/issues/15639.\r\n\t\tlog.Warn(\"Tracer accessed out of bound memory\", \"available\", mw.memory.Len(), \"offset\", addr, \"size\", 32)\r\n\t\treturn new(big.Int)\r\n\t}\r\n\treturn new(big.Int).SetBytes(mw.memory.GetPtr(addr, 32))\r\n}\r\n```\r\n\r\n**testcase:** \r\n```javascript\r\n{ depths: [], step: function(log, db) { this.depths.push(log.memory.getUint(-64));}, fault: function() {}, result: function() { return this.depths; }}\r\n```\r\n\r\n**stacktrace:**\r\n\r\n```console\r\nRunning tool: /usr/local/opt/go/libexec/bin/go test -timeout 30s github.com/ethereum/go-ethereum/eth/tracers -run ^(TestRegressionPanicGetUint)$\r\n\r\n--- FAIL: TestRegressionPanicGetUint (0.01s)\r\npanic: runtime error: slice bounds out of range [:-32] [recovered]\r\n\tpanic: runtime error: slice bounds out of range [:-32]\r\n\r\ngoroutine 30 [running]:\r\ntesting.tRunner.func1(0xc000110400)\r\n\t/usr/local/opt/go/libexec/src/testing/testing.go:874 +0x3a3\r\npanic(0x45c6e20, 0xc00014c240)\r\n\t/usr/local/opt/go/libexec/src/runtime/panic.go:679 +0x1b2\r\ngithub.com/ethereum/go-ethereum/core/vm.(*Memory).GetPtr(...)\r\n\t/Users/tintin/workspace/golang/go-ethereum/core/vm/memory.go:95\r\ngithub.com/ethereum/go-ethereum/eth/tracers.(*memoryWrapper).getUint(0xc0000ae570, 0xffffffffffffffc0, 0xffffffffffffffc0)\r\n\t/Users/tintin/workspace/golang/go-ethereum/eth/tracers/tracer.go:112 +0x2aa\r\ngithub.com/ethereum/go-ethereum/eth/tracers.(*memoryWrapper).pushObject.func2(0xc0000ae588, 0x8277a50)\r\n\t/Users/tintin/workspace/golang/go-ethereum/eth/tracers/tracer.go:141 +0x71\r\ngopkg.in/olebedev/go-duktape%2ev3.goFunctionCall(0x8201f70, 0x0)\r\n\t/Users/tintin/go/pkg/mod/gopkg.in/olebedev/go-duktape.v3@v3.0.0-20190213234257-ec84240a7772/duktape.go:156 +0xb7\r\ngopkg.in/olebedev/go-duktape%2ev3._cgoexpwrap_062d6de2de8d_goFunctionCall(0x8201f70, 0x4060901)\r\n\t_cgo_gotypes.go:3511 +0x2b\r\ngopkg.in/olebedev/go-duktape%2ev3._Cfunc_duk_pcall_prop(0x8201f70, 0x200000000, 0x0)\r\n\t_cgo_gotypes.go:2310 +0x4d\r\ngopkg.in/olebedev/go-duktape%2ev3.(*Context).PcallProp.func1(0xc0000ae560, 0x0, 0x2, 0x8279690)\r\n\t/Users/tintin/go/pkg/mod/gopkg.in/olebedev/go-duktape.v3@v3.0.0-20190213234257-ec84240a7772/api.go:786 +0x76\r\ngopkg.in/olebedev/go-duktape%2ev3.(*Context).PcallProp(0xc0000ae560, 0x0, 0x2, 0x2)\r\n\t/Users/tintin/go/pkg/mod/gopkg.in/olebedev/go-duktape.v3@v3.0.0-20190213234257-ec84240a7772/api.go:786 +0x3f\r\ngithub.com/ethereum/go-ethereum/eth/tracers.(*Tracer).call(0xc0000cc790, 0x460296c, 0x4, 0xc000292a38, 0x2, 0x2, 0x0, 0x0, 0x0, 0x0, ...)\r\n\t/Users/tintin/workspace/golang/go-ethereum/eth/tracers/tracer.go:508 +0x120\r\ngithub.com/ethereum/go-ethereum/eth/tracers.(*Tracer).CaptureState(0xc0000cc790, 0xc000282000, 0x0, 0xc00029c060, 0x2710, 0x3, 0xc00010d6a0, 0xc00010d6c0, 0xc00013a240, 0x1, ...)\r\n\t/Users/tintin/workspace/golang/go-ethereum/eth/tracers/tracer.go:568 +0x237\r\ngithub.com/ethereum/go-ethereum/core/vm.(*EVMInterpreter).Run(0xc000286000, 0xc00013a240, 0x4a7b240, 0x0, 0x0, 0x2700, 0x0, 0x0, 0x0, 0x0, ...)\r\n\t/Users/tintin/workspace/golang/go-ethereum/core/vm/interpreter.go:265 +0x69c\r\ngithub.com/ethereum/go-ethereum/eth/tracers.runTrace(0xc0000cc790, 0x96, 0xc0000cc790, 0x0, 0x0, 0xd6fba500000000f)\r\n\t/Users/tintin/workspace/golang/go-ethereum/eth/tracers/tracer_test.go:59 +0x283\r\ngithub.com/ethereum/go-ethereum/eth/tracers.TestRegressionPanicGetUint(0xc000110400)\r\n\t/Users/tintin/workspace/golang/go-ethereum/eth/tracers/tracer_test.go:99 +0xa5\r\ntesting.tRunner(0xc000110400, 0x462a108)\r\n\t/usr/local/opt/go/libexec/src/testing/testing.go:909 +0xc9\r\ncreated by testing.(*T).Run\r\n\t/usr/local/opt/go/libexec/src/testing/testing.go:960 +0x350\r\nFAIL\tgithub.com/ethereum/go-ethereum/eth/tracers\t0.579s\r\nFAIL\r\nError: Tests failed.\r\n\r\n```\r\n\r\n\r\n##### peek(negative) panic\r\n\r\n**code:** \r\n\r\n**Note**: see `@note` comments\r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/master/eth/tracers/tracer.go#L148\r\n\r\n```go\r\n\r\n// peek returns the nth-from-the-top element of the stack.\r\nfunc (sw *stackWrapper) peek(idx int) *big.Int {\r\n\tif len(sw.stack.Data()) <= idx {  //@note - panic if idx is negative\r\n\t\t// TODO(karalabe): We can't js-throw from Go inside duktape inside Go. The Go\r\n\t\t// runtime goes belly up https://github.com/golang/go/issues/15639.\r\n\t\tlog.Warn(\"Tracer accessed out of bound stack\", \"size\", len(sw.stack.Data()), \"index\", idx)\r\n\t\treturn new(big.Int)\r\n\t}\r\n\treturn sw.stack.Data()[len(sw.stack.Data())-idx-1]\r\n}\r\n\r\n```\r\n\r\n**testcase:** \r\n```javascript\r\n{depths: [], step: function(log) { this.depths.push(log.stack.peek(-1)); }, fault: function() {}, result: function() { return this.depths; }}\r\n```\r\n\r\n**stacktrace:**\r\n\r\n```console\r\nRunning tool: /usr/local/opt/go/libexec/bin/go test -timeout 30s github.com/ethereum/go-ethereum/eth/tracers -run ^(TestRegressionPanicPeek)$\r\n\r\n--- FAIL: TestRegressionPanicPeek (0.01s)\r\npanic: runtime error: index out of range [0] with length 0 [recovered]\r\n\tpanic: runtime error: index out of range [0] with length 0\r\n\r\ngoroutine 30 [running]:\r\ntesting.tRunner.func1(0xc00010c400)\r\n\t/usr/local/opt/go/libexec/src/testing/testing.go:874 +0x3a3\r\npanic(0x45c6e20, 0xc000146240)\r\n\t/usr/local/opt/go/libexec/src/runtime/panic.go:679 +0x1b2\r\ngithub.com/ethereum/go-ethereum/eth/tracers.(*stackWrapper).peek(0xc0000b0568, 0xffffffffffffffff, 0xffffffffffffffff)\r\n\t/Users/tintin/workspace/golang/go-ethereum/eth/tracers/tracer.go:160 +0x192\r\ngithub.com/ethereum/go-ethereum/eth/tracers.(*stackWrapper).pushObject.func2(0xc0000b0588, 0x790a930)\r\n\t/Users/tintin/workspace/golang/go-ethereum/eth/tracers/tracer.go:176 +0x71\r\ngopkg.in/olebedev/go-duktape%2ev3.goFunctionCall(0x7801f90, 0x0)\r\n\t/Users/tintin/go/pkg/mod/gopkg.in/olebedev/go-duktape.v3@v3.0.0-20190213234257-ec84240a7772/duktape.go:156 +0xb7\r\ngopkg.in/olebedev/go-duktape%2ev3._cgoexpwrap_062d6de2de8d_goFunctionCall(0x7801f90, 0x4060901)\r\n\t_cgo_gotypes.go:3511 +0x2b\r\ngopkg.in/olebedev/go-duktape%2ev3._Cfunc_duk_pcall_prop(0x7801f90, 0x200000000, 0x0)\r\n\t_cgo_gotypes.go:2310 +0x4d\r\ngopkg.in/olebedev/go-duktape%2ev3.(*Context).PcallProp.func1(0xc0000b0560, 0x0, 0x2, 0x7983ce0)\r\n\t/Users/tintin/go/pkg/mod/gopkg.in/olebedev/go-duktape.v3@v3.0.0-20190213234257-ec84240a7772/api.go:786 +0x76\r\ngopkg.in/olebedev/go-duktape%2ev3.(*Context).PcallProp(0xc0000b0560, 0x0, 0x2, 0x2)\r\n\t/Users/tintin/go/pkg/mod/gopkg.in/olebedev/go-duktape.v3@v3.0.0-20190213234257-ec84240a7772/api.go:786 +0x3f\r\ngithub.com/ethereum/go-ethereum/eth/tracers.(*Tracer).call(0xc0000ca790, 0x460296c, 0x4, 0xc0002aaa38, 0x2, 0x2, 0x0, 0x0, 0x0, 0x0, ...)\r\n\t/Users/tintin/workspace/golang/go-ethereum/eth/tracers/tracer.go:508 +0x120\r\ngithub.com/ethereum/go-ethereum/eth/tracers.(*Tracer).CaptureState(0xc0000ca790, 0xc00029a000, 0x0, 0xc0002b4060, 0x2710, 0x3, 0xc0001096a0, 0xc0001096c0, 0xc000134240, 0x1, ...)\r\n\t/Users/tintin/workspace/golang/go-ethereum/eth/tracers/tracer.go:568 +0x237\r\ngithub.com/ethereum/go-ethereum/core/vm.(*EVMInterpreter).Run(0xc00029e000, 0xc000134240, 0x4a7b240, 0x0, 0x0, 0x2700, 0x0, 0x0, 0x0, 0x0, ...)\r\n\t/Users/tintin/workspace/golang/go-ethereum/core/vm/interpreter.go:265 +0x69c\r\ngithub.com/ethereum/go-ethereum/eth/tracers.runTrace(0xc0000ca790, 0x8d, 0xc0000ca790, 0x0, 0x0, 0x1ec6cca80000000f)\r\n\t/Users/tintin/workspace/golang/go-ethereum/eth/tracers/tracer_test.go:59 +0x283\r\ngithub.com/ethereum/go-ethereum/eth/tracers.TestRegressionPanicPeek(0xc00010c400)\r\n\t/Users/tintin/workspace/golang/go-ethereum/eth/tracers/tracer_test.go:85 +0xa5\r\ntesting.tRunner(0xc00010c400, 0x462a110)\r\n\t/usr/local/opt/go/libexec/src/testing/testing.go:909 +0xc9\r\ncreated by testing.(*T).Run\r\n\t/usr/local/opt/go/libexec/src/testing/testing.go:960 +0x350\r\nFAIL\tgithub.com/ethereum/go-ethereum/eth/tracers\t0.501s\r\nFAIL\r\nError: Tests failed.\r\n```\r\n",
  "closed_by": {
    "login": "adamschmideg",
    "id": 208822,
    "node_id": "MDQ6VXNlcjIwODgyMg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/208822?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/adamschmideg",
    "html_url": "https://github.com/adamschmideg",
    "followers_url": "https://api.github.com/users/adamschmideg/followers",
    "following_url": "https://api.github.com/users/adamschmideg/following{/other_user}",
    "gists_url": "https://api.github.com/users/adamschmideg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/adamschmideg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/adamschmideg/subscriptions",
    "organizations_url": "https://api.github.com/users/adamschmideg/orgs",
    "repos_url": "https://api.github.com/users/adamschmideg/repos",
    "events_url": "https://api.github.com/users/adamschmideg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/adamschmideg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20611/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20611/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/580765356",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20611#issuecomment-580765356",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20611",
    "id": 580765356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDc2NTM1Ng==",
    "user": {
      "login": "tintinweb",
      "id": 2865694,
      "node_id": "MDQ6VXNlcjI4NjU2OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2865694?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tintinweb",
      "html_url": "https://github.com/tintinweb",
      "followers_url": "https://api.github.com/users/tintinweb/followers",
      "following_url": "https://api.github.com/users/tintinweb/following{/other_user}",
      "gists_url": "https://api.github.com/users/tintinweb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tintinweb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tintinweb/subscriptions",
      "organizations_url": "https://api.github.com/users/tintinweb/orgs",
      "repos_url": "https://api.github.com/users/tintinweb/repos",
      "events_url": "https://api.github.com/users/tintinweb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tintinweb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-31T14:53:34Z",
    "updated_at": "2020-01-31T14:53:34Z",
    "author_association": "MEMBER",
    "body": "added regression tests #20612",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/580765356/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/655987109",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20611#issuecomment-655987109",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20611",
    "id": 655987109,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NTk4NzEwOQ==",
    "user": {
      "login": "adamschmideg",
      "id": 208822,
      "node_id": "MDQ6VXNlcjIwODgyMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/208822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamschmideg",
      "html_url": "https://github.com/adamschmideg",
      "followers_url": "https://api.github.com/users/adamschmideg/followers",
      "following_url": "https://api.github.com/users/adamschmideg/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamschmideg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamschmideg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamschmideg/subscriptions",
      "organizations_url": "https://api.github.com/users/adamschmideg/orgs",
      "repos_url": "https://api.github.com/users/adamschmideg/repos",
      "events_url": "https://api.github.com/users/adamschmideg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamschmideg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-09T08:27:56Z",
    "updated_at": "2020-07-09T08:27:56Z",
    "author_association": "MEMBER",
    "body": "It seems #20612 fixes this issue. Can you confirm?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/655987109/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/677353788",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20611#issuecomment-677353788",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20611",
    "id": 677353788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NzM1Mzc4OA==",
    "user": {
      "login": "adamschmideg",
      "id": 208822,
      "node_id": "MDQ6VXNlcjIwODgyMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/208822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamschmideg",
      "html_url": "https://github.com/adamschmideg",
      "followers_url": "https://api.github.com/users/adamschmideg/followers",
      "following_url": "https://api.github.com/users/adamschmideg/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamschmideg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamschmideg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamschmideg/subscriptions",
      "organizations_url": "https://api.github.com/users/adamschmideg/orgs",
      "repos_url": "https://api.github.com/users/adamschmideg/repos",
      "events_url": "https://api.github.com/users/adamschmideg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamschmideg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-20T06:49:03Z",
    "updated_at": "2020-08-20T06:49:03Z",
    "author_association": "MEMBER",
    "body": "I assume this issue has been fixed. If the problem persists, please open a new issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/677353788/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
