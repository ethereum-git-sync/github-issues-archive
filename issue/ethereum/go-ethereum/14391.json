{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14391",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14391/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14391/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14391/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/14391",
  "id": 225262816,
  "node_id": "MDU6SXNzdWUyMjUyNjI4MTY=",
  "number": 14391,
  "title": "MsgEvents for network simulation/tests",
  "user": {
    "login": "zelig",
    "id": 769725,
    "node_id": "MDQ6VXNlcjc2OTcyNQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/769725?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zelig",
    "html_url": "https://github.com/zelig",
    "followers_url": "https://api.github.com/users/zelig/followers",
    "following_url": "https://api.github.com/users/zelig/following{/other_user}",
    "gists_url": "https://api.github.com/users/zelig/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zelig/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zelig/subscriptions",
    "organizations_url": "https://api.github.com/users/zelig/orgs",
    "repos_url": "https://api.github.com/users/zelig/repos",
    "events_url": "https://api.github.com/users/zelig/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zelig/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2017-04-29T15:08:46Z",
  "updated_at": "2017-08-08T12:47:16Z",
  "closed_at": "2017-08-08T12:47:16Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Implement MsgEvents along the lines of https://github.com/ethersphere/go-ethereum/pull/74 and https://github.com/ethersphere/go-ethereum/pull/75\r\n\r\nDidSend and DidReceive should be subscriptions too but i think it should be set to filter MsgTypes (and maybe peers too) already on the sender side. For this I recommend a reporter object, it would create a separate eventer that should be passed to each p2p/protocol constructor, if not nil, each message received would be Post-ed to the eventer. The reporter would set up a Subscription for messages with types subscribed to, add the sender (remote peer id) to the event and send it via the rpc subscription ",
  "closed_by": {
    "login": "zelig",
    "id": 769725,
    "node_id": "MDQ6VXNlcjc2OTcyNQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/769725?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zelig",
    "html_url": "https://github.com/zelig",
    "followers_url": "https://api.github.com/users/zelig/followers",
    "following_url": "https://api.github.com/users/zelig/following{/other_user}",
    "gists_url": "https://api.github.com/users/zelig/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zelig/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zelig/subscriptions",
    "organizations_url": "https://api.github.com/users/zelig/orgs",
    "repos_url": "https://api.github.com/users/zelig/repos",
    "events_url": "https://api.github.com/users/zelig/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zelig/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14391/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14391/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/298232562",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14391#issuecomment-298232562",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14391",
    "id": 298232562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODIzMjU2Mg==",
    "user": {
      "login": "lmars",
      "id": 488515,
      "node_id": "MDQ6VXNlcjQ4ODUxNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/488515?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lmars",
      "html_url": "https://github.com/lmars",
      "followers_url": "https://api.github.com/users/lmars/followers",
      "following_url": "https://api.github.com/users/lmars/following{/other_user}",
      "gists_url": "https://api.github.com/users/lmars/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lmars/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lmars/subscriptions",
      "organizations_url": "https://api.github.com/users/lmars/orgs",
      "repos_url": "https://api.github.com/users/lmars/repos",
      "events_url": "https://api.github.com/users/lmars/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lmars/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-30T13:33:16Z",
    "updated_at": "2017-04-30T13:33:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was imagining we would enhance the current [`PeerEvents`](https://github.com/ethersphere/go-ethereum/blob/network-testing-framework/p2p/adapters/exec.go#L347-L375) API so that the RPC stream also returns p2p messages, so [`PeerEvent.Type`](https://github.com/ethersphere/go-ethereum/blob/network-testing-framework/p2p/peer.go#L76-L81) could take a new value `PeerEventTypeMsg`.\r\n\r\nWe would probably want to update [`p2p.Server.SubscribePeers`](https://github.com/ethersphere/go-ethereum/blob/network-testing-framework/p2p/server.go#L145) so that it takes some message filters in case the client just wants events for particular message types (or no messages at all), and probably rename that to `p2p.Server.PeerEvents` too.\r\n\r\nTo implement this, I was thinking of just wrapping the current [rlpx p2p.MsgReadWriter](https://github.com/ethersphere/go-ethereum/blob/network-testing-framework/p2p/rlpx.go#L71-L97) with an object which emits the events, and then that can be passed transparently to `Protocol.Run`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/298232562/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/320945347",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14391#issuecomment-320945347",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14391",
    "id": 320945347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDk0NTM0Nw==",
    "user": {
      "login": "zelig",
      "id": 769725,
      "node_id": "MDQ6VXNlcjc2OTcyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/769725?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zelig",
      "html_url": "https://github.com/zelig",
      "followers_url": "https://api.github.com/users/zelig/followers",
      "following_url": "https://api.github.com/users/zelig/following{/other_user}",
      "gists_url": "https://api.github.com/users/zelig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zelig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zelig/subscriptions",
      "organizations_url": "https://api.github.com/users/zelig/orgs",
      "repos_url": "https://api.github.com/users/zelig/repos",
      "events_url": "https://api.github.com/users/zelig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zelig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T12:47:16Z",
    "updated_at": "2017-08-08T12:47:16Z",
    "author_association": "MEMBER",
    "body": "https://github.com/ethersphere/go-ethereum/pull/113",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/320945347/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
