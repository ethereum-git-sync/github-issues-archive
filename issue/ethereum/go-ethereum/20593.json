{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20593",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20593/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20593/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20593/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/20593",
  "id": 555079931,
  "node_id": "MDU6SXNzdWU1NTUwNzk5MzE=",
  "number": 20593,
  "title": "Feature Request: A query that returns the most recent event for a given filter.",
  "user": {
    "login": "4c656554",
    "id": 3785748,
    "node_id": "MDQ6VXNlcjM3ODU3NDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3785748?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/4c656554",
    "html_url": "https://github.com/4c656554",
    "followers_url": "https://api.github.com/users/4c656554/followers",
    "following_url": "https://api.github.com/users/4c656554/following{/other_user}",
    "gists_url": "https://api.github.com/users/4c656554/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/4c656554/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/4c656554/subscriptions",
    "organizations_url": "https://api.github.com/users/4c656554/orgs",
    "repos_url": "https://api.github.com/users/4c656554/repos",
    "events_url": "https://api.github.com/users/4c656554/events{/privacy}",
    "received_events_url": "https://api.github.com/users/4c656554/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    },
    {
      "id": 717742232,
      "node_id": "MDU6TGFiZWw3MTc3NDIyMzI=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/help%20wanted",
      "name": "help wanted",
      "color": "0e8a16",
      "default": true,
      "description": null
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2020-01-25T12:29:11Z",
  "updated_at": "2022-05-02T06:41:45Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Thanks to the developers for this great software!\r\n\r\nThis is a \"would be nice to have\" feature request to add a flag to the JSON-RPC/GraphQL query input have Geth search for the events in reverse chronological order and only return the most recent log (or the batch from that block).\r\n\r\nUnless I'm mistaken, at the moment it is only possible to construct queries that return all of the events for a given filter.\r\n\r\nIf you have a case where you only want the most recent event, but you don't know when it occurred, you still need to get back all of the events and filter (potentially not ideal on a client machine).\r\n\r\nSee also: \r\n\r\n[https://ethereum.stackexchange.com/questions/41976/how-to-get-only-latest-log-from-my-event](https://ethereum.stackexchange.com/questions/41976/how-to-get-only-latest-log-from-my-event)\r\n[https://ethereum.stackexchange.com/questions/8699/how-to-get-only-latest-logged-event-via-web3-api](https://ethereum.stackexchange.com/questions/8699/how-to-get-only-latest-logged-event-via-web3-api\r\n)\r\n\r\nThanks,\r\n\r\nLee\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20593/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20593/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/580172903",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20593#issuecomment-580172903",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20593",
    "id": 580172903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDE3MjkwMw==",
    "user": {
      "login": "adamschmideg",
      "id": 208822,
      "node_id": "MDQ6VXNlcjIwODgyMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/208822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamschmideg",
      "html_url": "https://github.com/adamschmideg",
      "followers_url": "https://api.github.com/users/adamschmideg/followers",
      "following_url": "https://api.github.com/users/adamschmideg/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamschmideg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamschmideg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamschmideg/subscriptions",
      "organizations_url": "https://api.github.com/users/adamschmideg/orgs",
      "repos_url": "https://api.github.com/users/adamschmideg/repos",
      "events_url": "https://api.github.com/users/adamschmideg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamschmideg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-30T09:49:29Z",
    "updated_at": "2020-01-30T09:49:29Z",
    "author_association": "MEMBER",
    "body": "A legit feature request. We'd first need a solid test suite for filtering.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/580172903/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/580173023",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20593#issuecomment-580173023",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20593",
    "id": 580173023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDE3MzAyMw==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-30T09:49:47Z",
    "updated_at": "2020-01-30T09:49:47Z",
    "author_association": "MEMBER",
    "body": "This is not a bad idea, but our log filtering is a bit messy and not properly tested. We'd need to start by writing a very comprehensive test suite to avoid introducing regressions.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/580173023/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/580208463",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20593#issuecomment-580208463",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20593",
    "id": 580208463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDIwODQ2Mw==",
    "user": {
      "login": "4c656554",
      "id": 3785748,
      "node_id": "MDQ6VXNlcjM3ODU3NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3785748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/4c656554",
      "html_url": "https://github.com/4c656554",
      "followers_url": "https://api.github.com/users/4c656554/followers",
      "following_url": "https://api.github.com/users/4c656554/following{/other_user}",
      "gists_url": "https://api.github.com/users/4c656554/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/4c656554/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/4c656554/subscriptions",
      "organizations_url": "https://api.github.com/users/4c656554/orgs",
      "repos_url": "https://api.github.com/users/4c656554/repos",
      "events_url": "https://api.github.com/users/4c656554/events{/privacy}",
      "received_events_url": "https://api.github.com/users/4c656554/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-30T11:22:41Z",
    "updated_at": "2020-01-30T11:34:03Z",
    "author_association": "NONE",
    "body": "Something along the lines of this? :- https://github.com/ethereum/rpc-tests\r\n\r\nMy approach would be to:\r\n\r\n1.  duplicate the [unindexedLogs ](https://github.com/ethereum/go-ethereum/blob/d90d1db609c8d77baa422d49bd371207c06b4711/eth/filters/filter.go#L215) function (as `unindexedLogsReverse `) and adjust to iterate from end to head and return when it finds a log. \r\n\r\n2. duplicate [getFilterLogs](https://github.com/ethereum/go-ethereum/blob/d90d1db609c8d77baa422d49bd371207c06b4711/eth/filters/api.go#L372) (as e.g. `getLastFilterLog`) to call above function. \r\n\r\n3. Add a references to a new API call (e.g. `getLastFilterLog` ) and link to above, if this is needed.\r\n\r\nN.b. If it's not apparent, I haven't yet got a good understanding of the architecture, and am not familiar with Go.\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/580208463/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1114545274",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20593#issuecomment-1114545274",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20593",
    "id": 1114545274,
    "node_id": "IC_kwDOAOvK985Cbpx6",
    "user": {
      "login": "lhendre",
      "id": 12551434,
      "node_id": "MDQ6VXNlcjEyNTUxNDM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12551434?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lhendre",
      "html_url": "https://github.com/lhendre",
      "followers_url": "https://api.github.com/users/lhendre/followers",
      "following_url": "https://api.github.com/users/lhendre/following{/other_user}",
      "gists_url": "https://api.github.com/users/lhendre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lhendre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lhendre/subscriptions",
      "organizations_url": "https://api.github.com/users/lhendre/orgs",
      "repos_url": "https://api.github.com/users/lhendre/repos",
      "events_url": "https://api.github.com/users/lhendre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lhendre/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-02T06:41:45Z",
    "updated_at": "2022-05-02T06:41:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@karalabe is there an issue or has the test suite been created?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1114545274/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
