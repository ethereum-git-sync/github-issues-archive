{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22322",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22322/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22322/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22322/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/22322",
  "id": 807485291,
  "node_id": "MDU6SXNzdWU4MDc0ODUyOTE=",
  "number": 22322,
  "title": "Rare occurences of panic: send on closed channel in rpc/subscription.go",
  "user": {
    "login": "samsondav",
    "id": 4147639,
    "node_id": "MDQ6VXNlcjQxNDc2Mzk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4147639?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/samsondav",
    "html_url": "https://github.com/samsondav",
    "followers_url": "https://api.github.com/users/samsondav/followers",
    "following_url": "https://api.github.com/users/samsondav/following{/other_user}",
    "gists_url": "https://api.github.com/users/samsondav/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/samsondav/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/samsondav/subscriptions",
    "organizations_url": "https://api.github.com/users/samsondav/orgs",
    "repos_url": "https://api.github.com/users/samsondav/repos",
    "events_url": "https://api.github.com/users/samsondav/events{/privacy}",
    "received_events_url": "https://api.github.com/users/samsondav/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2021-02-12T19:18:17Z",
  "updated_at": "2021-04-27T19:48:26Z",
  "closed_at": "2021-03-30T18:09:30Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: `1.9.25`\r\nOS & Version: Linux\r\n\r\n#### Expected behaviour\r\n\r\nWe are calling `rpc.Unsubscribe` like so:\r\n\r\n```\r\n\tclient.SubscribeFilterLogs(ctx, filterQuery, ch)\r\n        # ... some time later ...\r\n\tclient.Unsubscribe()\r\n\tclose(ch)\r\n```\r\n\r\nI would expect this to always be safe.\r\n\r\n#### Actual behaviour\r\n\r\nIn very rare cases this can panic with `send on closed channel`. It seems that messages can still be sent on the passed in channel even after `Unsubscribe` returns.\r\n\r\nWe found this while load testing with fast resubscribes and hundreds of thousands of iterations.\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\nAlmost impossible to reproduce. Extremely high rates of subscribe/unsubscribe with channel close as detailed above might expose it.\r\n\r\n#### Backtrace\r\n\r\n````\r\npanic: send on closed channel\r\n\r\ngoroutine 276873727 [running]:\r\nreflect.rselect(0xc03196b860, 0x3, 0x3, 0x188458e, 0xe)\r\n\t/usr/local/go/src/runtime/select.go:544 +0x38a\r\nreflect.Select(0xc013d83ee0, 0x3, 0x3, 0xc02e50f6e0, 0x1796e20, 0xc0353b62c0, 0x0, 0x0)\r\n\t/usr/local/go/src/reflect/value.go:2229 +0x170\r\ngithub.com/ethereum/go-ethereum/rpc.(*ClientSubscription).forward(0xc005e0c090, 0xc0324ef100, 0x0, 0x0)\r\n\t/root/go/pkg/mod/github.com/ethereum/go-ethereum@v1.9.25/rpc/subscription.go:299 +0x2db\r\ngithub.com/ethereum/go-ethereum/rpc.(*ClientSubscription).start(0xc005e0c090)\r\n\t/root/go/pkg/mod/github.com/ethereum/go-ethereum@v1.9.25/rpc/subscription.go:279 +0x2b\r\ncreated by github.com/ethereum/go-ethereum/rpc.(*handler).handleResponse\r\n\t/root/go/pkg/mod/github.com/ethereum/go-ethereum@v1.9.25/rpc/handler.go:284 +0x23d\r\n````\r\n\r\n#### Probable cause and suggested fix\r\n\r\nIt seems that `quitWithError` (https://github.com/ethereum/go-ethereum/blob/231040c633f24b2b0d56aaeb704a0738ba4adb9c/rpc/subscription.go#L251) can race with `forward` (https://github.com/ethereum/go-ethereum/blob/231040c633f24b2b0d56aaeb704a0738ba4adb9c/rpc/subscription.go#L282) causing messages to be sent even after `Unsubscribe` returns.\r\n\r\nA coordination channel so that `quitWithError` waits until `forward` has executed could resolve it.",
  "closed_by": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22322/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22322/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/807022383",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22322#issuecomment-807022383",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22322",
    "id": 807022383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNzAyMjM4Mw==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-25T16:12:27Z",
    "updated_at": "2021-03-25T16:12:43Z",
    "author_association": "MEMBER",
    "body": "I have checked this issue for quite a while today. I'm not sure how this case can occur, unless `sync.Once` is somehow broken.\r\n\r\nThere is only one write to the `sub.err` channel, and it happens in `quitWithError`, which is protected by `quitOnce`.\r\nThe channel is closed in `Unsubscribe`, which calls `quitWithError` before closing the channel. The behavior of `sync.Once.Do(f)` is that \"only the first call will invoke f\" and \"no call to Do returns until the one call to f returns\". This implies that the send must finish before the channel is closed.\r\n\r\n@samsondav did this issue occur only once, or do you have a way to reproduce it?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/807022383/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/808426718",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22322#issuecomment-808426718",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22322",
    "id": 808426718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwODQyNjcxOA==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-26T18:21:05Z",
    "updated_at": "2021-03-26T18:21:05Z",
    "author_association": "MEMBER",
    "body": "Damn, I just now realize that this panic is not related to `sub.err`. The panic happens because `Unsubscribe` does not wait for `forward` to return after closing `sub.quit`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/808426718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/826125463",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22322#issuecomment-826125463",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22322",
    "id": 826125463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNjEyNTQ2Mw==",
    "user": {
      "login": "shoenseiwaso",
      "id": 5861379,
      "node_id": "MDQ6VXNlcjU4NjEzNzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5861379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoenseiwaso",
      "html_url": "https://github.com/shoenseiwaso",
      "followers_url": "https://api.github.com/users/shoenseiwaso/followers",
      "following_url": "https://api.github.com/users/shoenseiwaso/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoenseiwaso/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoenseiwaso/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoenseiwaso/subscriptions",
      "organizations_url": "https://api.github.com/users/shoenseiwaso/orgs",
      "repos_url": "https://api.github.com/users/shoenseiwaso/repos",
      "events_url": "https://api.github.com/users/shoenseiwaso/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoenseiwaso/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-24T17:24:37Z",
    "updated_at": "2021-04-24T17:24:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@samsondav thanks for reporting, @fjl thanks for fixing.\r\n\r\nFor future posterity, we have encountered a deadlock (not a panic) which #22597 has fixed, where:\r\n- Websocket read error is received and the dispatch loop called `conn.close()`\r\n- At the same time, we call `Unsubscribe()` from another goroutine\r\n- `Unsubscribe()` wins the race into `quitWithError()` (refactored away in #22597) but then gets stuck because...\r\n- ...the dispatch loop is stuck waiting on the `Once.Do()` in `quitWithError()`\r\n\r\nDocumenting here in case it comes up in the future. We have seen increased read errors of the form `websocket: close 1011 (internal server error): Internal response error` from one of our node providers, which was triggering this issue every few days.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/826125463/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/827881674",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22322#issuecomment-827881674",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22322",
    "id": 827881674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNzg4MTY3NA==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-27T19:48:26Z",
    "updated_at": "2021-04-27T19:48:26Z",
    "author_association": "MEMBER",
    "body": "Very good to hear it fixed another problem as well.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/827881674/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
