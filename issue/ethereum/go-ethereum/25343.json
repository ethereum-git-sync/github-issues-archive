{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25343",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25343/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25343/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25343/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/25343",
  "id": 1309863564,
  "node_id": "I_kwDOAOvK985OEu6M",
  "number": 25343,
  "title": "no reliable way to retrieve all event logs",
  "user": {
    "login": "pascaldekloe",
    "id": 4867072,
    "node_id": "MDQ6VXNlcjQ4NjcwNzI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4867072?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pascaldekloe",
    "html_url": "https://github.com/pascaldekloe",
    "followers_url": "https://api.github.com/users/pascaldekloe/followers",
    "following_url": "https://api.github.com/users/pascaldekloe/following{/other_user}",
    "gists_url": "https://api.github.com/users/pascaldekloe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pascaldekloe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pascaldekloe/subscriptions",
    "organizations_url": "https://api.github.com/users/pascaldekloe/orgs",
    "repos_url": "https://api.github.com/users/pascaldekloe/repos",
    "events_url": "https://api.github.com/users/pascaldekloe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pascaldekloe/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-07-19T17:57:23Z",
  "updated_at": "2022-08-07T16:24:40Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I would like fetch all logs (matching a `ethereum.FilterQuery`).\r\n\r\n`FilterLogs` from `ethereum.LogFilterer` have a limited capacity.\r\n\r\n```go\r\n&rpc.jsonError{Code:-32602, Message:\"Log response size exceeded. You can make eth_getLogs requests with up to a 2K block range and no limit on the response size, or you can request any block range with a cap of 10K logs in the response. Based on your parameters and the response size limit, this block range should work: [0x0, 0x87fe9]\", Data:interface {}(nil)}\r\n```\r\n\r\nThe suggested block-range is only in the message text. Parsing this error for an iterator implementation seems quite dangerous, especially since most tests won't notice breakage on future changes until production.\r\n\r\nThe `Code` value could be resolved with `errors.As` and `rpc.Error` (for `func ErrorCode() int`).\r\n\r\nCode `-32602` “Invalid method parameter(s)” comes from [JSON-RPC 2.0](\r\nhttps://www.jsonrpc.org/specification). The parameters are not invalid though. The result set is too large. You can't blame the request for the result. ™️\r\n\r\nCode `-32005` “Request exceeds defined limit” from [EIP-1474](https://eips.ethereum.org/EIPS/eip-1474) may be more of a fit.\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25343/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25343/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1195376098",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25343#issuecomment-1195376098",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25343",
    "id": 1195376098,
    "node_id": "IC_kwDOAOvK985HP_3i",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-26T11:44:43Z",
    "updated_at": "2022-07-26T11:44:43Z",
    "author_association": "MEMBER",
    "body": "Thanks for the report. So when the error code changes this would work for you?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1195376098/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1195389439",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25343#issuecomment-1195389439",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25343",
    "id": 1195389439,
    "node_id": "IC_kwDOAOvK985HQDH_",
    "user": {
      "login": "pascaldekloe",
      "id": 4867072,
      "node_id": "MDQ6VXNlcjQ4NjcwNzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4867072?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pascaldekloe",
      "html_url": "https://github.com/pascaldekloe",
      "followers_url": "https://api.github.com/users/pascaldekloe/followers",
      "following_url": "https://api.github.com/users/pascaldekloe/following{/other_user}",
      "gists_url": "https://api.github.com/users/pascaldekloe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pascaldekloe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pascaldekloe/subscriptions",
      "organizations_url": "https://api.github.com/users/pascaldekloe/orgs",
      "repos_url": "https://api.github.com/users/pascaldekloe/repos",
      "events_url": "https://api.github.com/users/pascaldekloe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pascaldekloe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-26T11:58:33Z",
    "updated_at": "2022-07-26T11:58:33Z",
    "author_association": "NONE",
    "body": "The status code may be a way to detect the calacity limit scenario @ligi, i.e., it may help to distinguish between errors of other kinds.\r\n\r\nI have no knowledge of the JSON RPC systematics. Maybe there is a way to expose the block range [int, int] in that (`interface{}(nil)`) `Data` field somehow?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1195389439/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
