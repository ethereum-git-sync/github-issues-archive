{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25852",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25852/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25852/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25852/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/25852",
  "id": 1382931669,
  "node_id": "I_kwDOAOvK985SbdzV",
  "number": 25852,
  "title": "Keystore does not load with large amount of keys (using remote folder)",
  "user": {
    "login": "mesteve",
    "id": 13318901,
    "node_id": "MDQ6VXNlcjEzMzE4OTAx",
    "avatar_url": "https://avatars.githubusercontent.com/u/13318901?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mesteve",
    "html_url": "https://github.com/mesteve",
    "followers_url": "https://api.github.com/users/mesteve/followers",
    "following_url": "https://api.github.com/users/mesteve/following{/other_user}",
    "gists_url": "https://api.github.com/users/mesteve/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mesteve/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mesteve/subscriptions",
    "organizations_url": "https://api.github.com/users/mesteve/orgs",
    "repos_url": "https://api.github.com/users/mesteve/repos",
    "events_url": "https://api.github.com/users/mesteve/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mesteve/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    },
    {
      "id": 1132754722,
      "node_id": "MDU6TGFiZWwxMTMyNzU0NzIy",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/need:more-information",
      "name": "need:more-information",
      "color": "db6fa3",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2022-09-22T19:44:09Z",
  "updated_at": "2022-10-07T11:52:29Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: `1.10.25`\r\nOS & Version: Linux\r\n\r\n#### Expected behaviour\r\nLoad the entire remote keystore folder that we mounted on the machine using gcsfuse.\r\n\r\n#### Actual behaviour\r\nWe just decided to upgrade geth from our old version (1.8.16) to the latest version (1.10.25). Everything runs fine except the fact that when we start our blockchain using the mounted storage hosting the keystore, it only starts loading 5 to 10 files then crashes.\r\nIt works perfectly with our old version (1.8.16) but does not load properly with the new one (1.10.25)\r\nThe error we get when we try to run the command (see command below) is -> No given key or address (but I don't think this error is actually reflective of the real problem)\r\nThe folder does contain the wallet we want to unlock but the problem is that prior unlocking the wallet, it does not load the entire remote folder.\r\nAdditional infos : with 2000 wallets in our remote keystore it works with 1.10.25, but with 6000+ it does not (but does with 1.8.16)\r\n\r\n\r\n#### Steps to reproduce the behaviour\r\ncmd : geth --datadir ./data --keystore ~/bucket-keystore/keystore --syncmode 'full' --miner.gastarget '9000000000000' --port 30310 --http --http.addr \"10.132.0.3\" --http.port 8501 --http.api 'personal,eth,net,web3,txpool,miner' --networkid 4242 --miner.gasprice '0' --miner.etherbase \"XXXXXXXXX\" --unlock \"XXXXXXXXX\" --allow-insecure-unlock  --mine console 2>>/tmp/node1.log \r\n\r\nThe keystore is a mounted folder with gcsfuse using google cloud storage\r\n\r\n\r\n#### Backtrace\r\n\r\nSee below the log of gcsfuse\r\n\r\n````\r\ngcs: 2022/09/22 19:29:27.964314 Req          0x1723e: <- StatObject(\"keystore/\")\r\ngcs: 2022/09/22 19:29:27.964575 Req          0x1723f: <- StatObject(\"keystore\")\r\ngcs: 2022/09/22 19:29:27.989783 Req          0x1723f: -> StatObject(\"keystore\") (25.203681ms): not retrying StatObject(\"keystore\"): gcs.NotFoundError: googleapi: Error 404: No such object: test-dev-private/keystore, notFound\r\ngcs: 2022/09/22 19:29:27.991644 Req          0x1723e: -> StatObject(\"keystore/\") (27.363649ms): OK\r\ngcs: 2022/09/22 19:29:27.993212 Req          0x17240: <- ListObjects(\"keystore/\")\r\ngcs: 2022/09/22 19:29:28.291674 Req          0x17240: -> ListObjects(\"keystore/\") (298.457259ms): OK\r\ngcs: 2022/09/22 19:29:28.332148 Req          0x17241: <- ListObjects(\"keystore/\")\r\ngcs: 2022/09/22 19:29:28.402949 Req          0x17241: -> ListObjects(\"keystore/\") (70.804791ms): OK\r\ngcs: 2022/09/22 19:29:28.430886 Req          0x17242: <- StatObject(\"keystore/\")\r\ngcs: 2022/09/22 19:29:28.453508 Req          0x17242: -> StatObject(\"keystore/\") (22.619107ms): OK\r\ngcs: 2022/09/22 19:29:28.453801 Req          0x17243: <- StatObject(\"keystore/UTC--2018-11-13T21-13-59.453457226Z--0f921a41e37fb106598b8afa2dc8a21709463832\")\r\ngcs: 2022/09/22 19:29:28.475422 Req          0x17243: -> StatObject(\"keystore/UTC--2018-11-13T21-13-59.453457226Z--0f921a41e37fb106598b8afa2dc8a21709463832\") (21.616633ms): OK\r\ngcs: 2022/09/22 19:29:28.475914 Req          0x17244: <- StatObject(\"keystore/UTC--2018-11-13T21-14-10.562417446Z--98527ca208904af1116cac4437b62d1da0978483\")\r\ngcs: 2022/09/22 19:29:28.476031 Req          0x17244: -> StatObject(\"keystore/UTC--2018-11-13T21-14-10.562417446Z--98527ca208904af1116cac4437b62d1da0978483\") (103.736µs): not retrying StatObject(\"keystore/UTC--2018-11-13T21-14-10.562417446Z--98527ca208904af1116cac4437b62d1da0978483\"): Get \"[https://storage.googleapis.com:443/storage/v1/b/test-dev-private/o/keystore%2FUTC--2018-11-13T21-14-10.562417446Z--98527ca208904af1116cac4437b62d1da0978483?projection=full](https://storage.googleapis.com/storage/v1/b/test-dev-private/o/keystore%2FUTC--2018-11-13T21-14-10.562417446Z--98527ca208904af1116cac4437b62d1da0978483?projection=full)\": net/http: request canceled\r\n2022/09/22 19:29:28.476060 LookUpInode: operation canceled, StatObject: not retrying StatObject(\"keystore/UTC--2018-11-13T21-14-10.562417446Z--98527ca208904af1116cac4437b62d1da0978483\"): Get \"[https://storage.googleapis.com:443/storage/v1/b/test-dev-private/o/keystore%2FUTC--2018-11-13T21-14-10.562417446Z--98527ca208904af1116cac4437b62d1da0978483?projection=full](https://storage.googleapis.com/storage/v1/b/test-dev-private/o/keystore%2FUTC--2018-11-13T21-14-10.562417446Z--98527ca208904af1116cac4437b62d1da0978483?projection=full)\": net/http: request canceled\r\nfuse: 2022/09/22 19:29:28.476104 *fuseops.LookUpInodeOp error: operation canceled\r\ngcs: 2022/09/22 19:29:28.476438 Req          0x17245: <- StatObject(\"keystore/UTC--2018-11-13T21-14-10.562417446Z--98527ca208904af1116cac4437b62d1da0978483\")\r\ngcs: 2022/09/22 19:29:28.476520 Req          0x17245: -> StatObject(\"keystore/UTC--2018-11-13T21-14-10.562417446Z--98527ca208904af1116cac4437b62d1da0978483\") (82.425µs): not retrying StatObject(\"keystore/UTC--2018-11-13T21-14-10.562417446Z--98527ca208904af1116cac4437b62d1da0978483\"): Get \"[https://storage.googleapis.com:443/storage/v1/b/test-dev-private/o/keystore%2FUTC--2018-11-13T21-14-10.562417446Z--98527ca208904af1116cac4437b62d1da0978483?projection=full](https://storage.googleapis.com/storage/v1/b/test-dev-private/o/keystore%2FUTC--2018-11-13T21-14-10.562417446Z--98527ca208904af1116cac4437b62d1da0978483?projection=full)\": net/http: request canceled\r\n2022/09/22 19:29:28.476553 LookUpInode: operation canceled, StatObject: not retrying StatObject(\"keystore/UTC--2018-11-13T21-14-10.562417446Z--98527ca208904af1116cac4437b62d1da0978483\"): Get \"[https://storage.googleapis.com:443/storage/v1/b/test-dev-private/o/keystore%2FUTC--2018-11-13T21-14-10.562417446Z--98527ca208904af1116cac4437b62d1da0978483?projection=full](https://storage.googleapis.com/storage/v1/b/test-dev-private/o/keystore%2FUTC--2018-11-13T21-14-10.562417446Z--98527ca208904af1116cac4437b62d1da0978483?projection=full)\": net/http: request canceled\r\nfuse: 2022/09/22 19:29:28.476579 *fuseops.LookUpInodeOp error: operation canceled\r\n````",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25852/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25852/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1259258629",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25852#issuecomment-1259258629",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25852",
    "id": 1259258629,
    "node_id": "IC_kwDOAOvK985LDsMF",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-27T09:48:22Z",
    "updated_at": "2022-09-27T09:48:22Z",
    "author_association": "MEMBER",
    "body": "I see no reason why the behaviour would change, since the account/keystore codebase has been very stable. Most likely suspect I can think of would be that dependencies has changed, and of course the golang version. \r\n\r\nAnyway, you say \"loading 5 to 10 files then crashes\". Could you please provide some stacktraces from such a crash? And also some logs preceding the crash. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1259258629/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1259268089",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25852#issuecomment-1259268089",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25852",
    "id": 1259268089,
    "node_id": "IC_kwDOAOvK985LDuf5",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-27T09:56:43Z",
    "updated_at": "2022-09-27T09:56:43Z",
    "author_association": "MEMBER",
    "body": "Tested using 10K keystores ( locally ) - worked fine. It scanned the keystores in ~15ms: \r\n```\r\nTRACE[09-27|11:55:00.724] Started watching keystore folder         path=/home/user/tmp/manykeys/keystore\r\nDEBUG[09-27|11:55:00.782] FS scan times                            list=13.592053ms set=38.916232ms diff=5.694102ms\r\nTRACE[09-27|11:55:00.953] Handled keystore changes                 time=171.290214ms\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1259268089/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1260649178",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25852#issuecomment-1260649178",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25852",
    "id": 1260649178,
    "node_id": "IC_kwDOAOvK985LI_ra",
    "user": {
      "login": "mesteve",
      "id": 13318901,
      "node_id": "MDQ6VXNlcjEzMzE4OTAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/13318901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mesteve",
      "html_url": "https://github.com/mesteve",
      "followers_url": "https://api.github.com/users/mesteve/followers",
      "following_url": "https://api.github.com/users/mesteve/following{/other_user}",
      "gists_url": "https://api.github.com/users/mesteve/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mesteve/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mesteve/subscriptions",
      "organizations_url": "https://api.github.com/users/mesteve/orgs",
      "repos_url": "https://api.github.com/users/mesteve/repos",
      "events_url": "https://api.github.com/users/mesteve/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mesteve/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-28T09:38:06Z",
    "updated_at": "2022-09-29T12:15:14Z",
    "author_association": "NONE",
    "body": "Thanks you for your reply @holiman \r\n\r\nThe problem is not coming from a simple keystore load but it is coming from loading the keystore from a distant folder.\r\n\r\nThe folder is hosted on Google cloud storage and we are mounting it on our Linux machine.\r\nWith our old version (1.8.16) it load the mounted keystore without any problem.\r\nWith the new version (1.10.25), it stops after loading around 5 to 10 files.\r\n\r\nIt does work with the 1.10.25 version if we load the keystore from a local folder.\r\n\r\nAs I said earlier, the error we get is 'No given key or address' which is normal because all of the keys (files) are not loaded by Geth when we start it with the distant folder. The error we get is then not reflective of the real problem.\r\n\r\nI had to use gcs_debug flag on gcsfuse in order to be able to see what is happening and why it does not load properly the keystore (see attached log on the main post). From there I can see that Geth stops loading from the distant folder after loading a few files. But does work with the older version (1.8.16) \r\n\r\nEDIT :\r\nI just tried using 1.9.25, I have exactly the same problem as with 1.10.25\r\n1.9.18, does not work\r\n1.9.14, does not work\r\n1.9.13, does not work\r\n1.9.12, it works properly\r\n1.9.10, it works properly\r\n1.9.0, it works properly\r\n\r\nI expect the problem coming from the changes done between 1.9.12 and 1.9.13",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1260649178/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1271218487",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25852#issuecomment-1271218487",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25852",
    "id": 1271218487,
    "node_id": "IC_kwDOAOvK985LxUE3",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-07T07:29:45Z",
    "updated_at": "2022-10-07T07:30:31Z",
    "author_association": "MEMBER",
    "body": "These are the milestones for `1.9.13`: https://github.com/ethereum/go-ethereum/milestone/99?closed=1 . Nothing obvious that I could see. \r\n\r\nI assume you used the prebuilt binaries from download? I checked `1.9.12` and `1.9.13` for linux: \r\n```\r\n[user@work tmp]$ ./geth-linux-amd64-1.9.13-cbc4ac26/geth version\r\nGeth\r\nVersion: 1.9.13-stable\r\nGit Commit: cbc4ac264e9671898bff6ec7e434da3eca4bd273\r\nGit Commit Date: 20200416\r\nArchitecture: amd64\r\nProtocol Versions: [65 64 63]\r\nGo Version: go1.14.2\r\nOperating System: linux\r\nGOPATH=\r\nGOROOT=/home/travis/.gimme/versions/go1.14.2.linux.amd64\r\n\r\n[user@work tmp]$ ./geth-linux-amd64-1.9.12-b6f1c8dc/geth version\r\nGeth\r\nVersion: 1.9.12-stable\r\nGit Commit: b6f1c8dcc058a936955eb8e5766e2962218924bc\r\nGit Commit Date: 20200316\r\nArchitecture: amd64\r\nProtocol Versions: [65 64 63]\r\nGo Version: go1.13.8\r\nOperating System: linux\r\nGOPATH=\r\nGOROOT=/home/travis/.gimme/versions/go1.13.8.linux.amd64\r\n```\r\nSo the go version was updated from `1.13.8` to `1.14.2`. \r\nOne interesting experiment would be to compile `1.9.12` with `1.14.2`, or vice versa. But yeah, there are a lot of interesting experiments that can be done. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1271218487/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1271225401",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25852#issuecomment-1271225401",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25852",
    "id": 1271225401,
    "node_id": "IC_kwDOAOvK985LxVw5",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-07T07:36:58Z",
    "updated_at": "2022-10-07T07:36:58Z",
    "author_association": "MEMBER",
    "body": "If you have docker on the machines, I could make a little program which lists a (remote) directory. Then you could compile+run it using the official golang docker images. Something like \r\n\r\n`docker run golang:latest run ./listing.go /my/remote/dir`\r\n`docker run golang:v1.28.8 run ./listing.go /my/remote/dir`\r\n\r\nI'll experiment a bit",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1271225401/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1271394001",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25852#issuecomment-1271394001",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25852",
    "id": 1271394001,
    "node_id": "IC_kwDOAOvK985Lx-7R",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-07T10:06:23Z",
    "updated_at": "2022-10-07T11:52:29Z",
    "author_association": "MEMBER",
    "body": "Ok, so I published this little scanner: https://github.com/holiman/filescan/blob/main/main.go . \r\n\r\nIt can be run like so - in the example here, I scan `/tmp`, and mount it to `/to_scan` in the container: \r\n```\r\n$ docker run -it -v \"/tmp:/to_scan\" --rm golang:1.18.0 go  run  github.com/holiman/filescan@latest /to_scan\r\ngo: downloading github.com/holiman/filescan v0.0.0-20221007094547-29d4d0686daa\r\n1. Scanning directory /to_scan...\r\n   Scan ok, 13 files, elapsed 199.583µs\r\n2. Iterating over files...\r\n   Iteration done, elapsed 308.058µs\r\n```\r\n\r\nFor `14.2`, I had to do it a bit differently, due to changes in how go works:\r\n```\r\n$ docker run -it -v \"/tmp:/to_scan\" --rm golang:1.14.2 bash -c \"go  get  github.com/holiman/filescan &&  filescan /to_scan\"\r\n1. Scanning directory /to_scan...\r\n   Scan ok, 13 files, elapsed 270.178µs\r\n2. Iterating over files...\r\n   Iteration done, elapsed 287.636µs\r\n```\r\nThat works for `13.8` too: \r\n```\r\n$ docker run -it -v \"/tmp:/to_scan\" --rm golang:1.13.8 bash -c \"go  get  github.com/holiman/filescan &&  filescan /to_scan\"\r\n1. Scanning directory /to_scan...\r\n   Scan ok, 13 files, elapsed 202.616µs\r\n2. Iterating over files...\r\n   Iteration done, elapsed 224.157µs\r\n```\r\nHere are them both against a local folder with 10K files: \r\n```\r\nuser@debian-work:~$ docker run -it -v \"/home/user/tmp:/to_scan\" --rm golang:1.13.8 bash -c \"go  get  github.com/holiman/filescan &&  filescan /to_scan\"\r\n1. Scanning directory /to_scan...\r\n   Scan ok, 10001 files, elapsed 33.754537ms\r\n2. Iterating over files...\r\n   Iteration done, elapsed 34.001119ms\r\nuser@debian-work:~$ docker run -it -v \"/home/user/tmp:/to_scan\" --rm golang:1.14.2 bash -c \"go  get  github.com/holiman/filescan &&  filescan /to_scan\"\r\n1. Scanning directory /to_scan...\r\n   Scan ok, 10001 files, elapsed 35.559437ms\r\n2. Iterating over files...\r\n   Iteration done, elapsed 35.965424ms\r\n```\r\n\r\n\r\nSo if you're up for it, you can now\r\n- Check if the regression is due to changes in go-lang or due to changes in geth, \r\n- If the former, pinpoint closer what golang version caused the regression. \r\n ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1271394001/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1271486763",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25852#issuecomment-1271486763",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25852",
    "id": 1271486763,
    "node_id": "IC_kwDOAOvK985LyVkr",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-07T11:45:50Z",
    "updated_at": "2022-10-07T11:45:50Z",
    "author_association": "MEMBER",
    "body": "> I had to use gcs_debug flag on gcsfuse in order to be able to see what is happening and why it does not load properly the keystore\r\n\r\nAnother interesting data-point would be to use a much smaller keystore, containing maybe `10` files. And do a listing with both the working and non-working, __and__ storing the gcsfuse detailed log. \r\n\r\nThen we could compare exactly what operations are performed, and in what order. That might tell us what has changed, and how we can work around it. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1271486763/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
