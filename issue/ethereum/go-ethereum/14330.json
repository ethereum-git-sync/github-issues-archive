{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/14330",
  "id": 221916677,
  "node_id": "MDU6SXNzdWUyMjE5MTY2Nzc=",
  "number": 14330,
  "title": "blockchain synchronisation speed deterioration",
  "user": {
    "login": "allemathor",
    "id": 26977361,
    "node_id": "MDQ6VXNlcjI2OTc3MzYx",
    "avatar_url": "https://avatars.githubusercontent.com/u/26977361?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/allemathor",
    "html_url": "https://github.com/allemathor",
    "followers_url": "https://api.github.com/users/allemathor/followers",
    "following_url": "https://api.github.com/users/allemathor/following{/other_user}",
    "gists_url": "https://api.github.com/users/allemathor/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/allemathor/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/allemathor/subscriptions",
    "organizations_url": "https://api.github.com/users/allemathor/orgs",
    "repos_url": "https://api.github.com/users/allemathor/repos",
    "events_url": "https://api.github.com/users/allemathor/events{/privacy}",
    "received_events_url": "https://api.github.com/users/allemathor/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 32,
  "created_at": "2017-04-15T00:57:14Z",
  "updated_at": "2018-01-31T09:51:32Z",
  "closed_at": "2017-04-19T14:26:58Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\nGeth\r\nVersion: 1.6.0-unstable\r\nArchitecture: amd64\r\nProtocol Versions: [63 62]\r\nNetwork Id: 1\r\nGo Version: go1.8\r\nOperating System: windows\r\n\r\nHardware\r\n Dell XPS i7, 2.20Ghz, 4 cores, 12Gb RAM, HDD  + broadband connection\r\n\r\n#### Expected behaviour\r\nI'm already a week into the sync and would expect it to be done by now.\r\nI also would expect a more or less stable or slightly degrading sync speed.\r\n\r\n#### Actual behaviour\r\nStarted a full node on Apr 07, 2017\r\n>geth --maxpeers 11 --datadir <somedir>\r\n\r\nI witness a pretty much exponential degradation of the sync speed.\r\n\r\nFirst 1 mln blocks synchronised in under 3 hours. After 1 mln blocks the synchronisation continuously deteriorated.\r\n\r\nBlocks  ---------------------- Sync Speed (blocks/hour)\r\n----------------------------------------------------------\r\n0 - 1045923  -----------------   348,641\r\n1045923 - 1726874  --------      54,129\r\n172687 - .2322736   --------      15,777\r\n2322736 - 2344564  --------       1,175\r\n2407424 - 2425581 ---------      1,210\r\n\r\nI can provide data on geth process performance (don't see an option to insert an image here)\r\n\r\nCurrent log as of today 20170414\r\n--------------------------------------------\r\n...........\r\nINFO [04-14|19:27:18] Imported new chain segment               blocks=8   txs=65  mgas=2.213  elapsed=3m19.046s  mgasps=0.011 number=2425486 hash=1e4f1b…39ccc3\r\nINFO [04-14|19:30:20] Imported new chain segment               blocks=7   txs=54  mgas=2.162  elapsed=3m1.833s   mgasps=0.012 number=2425493 hash=dc3cfa…496c62\r\nINFO [04-14|19:32:48] Imported new chain segment               blocks=2   txs=24  mgas=1.433  elapsed=2m27.802s  mgasps=0.010 number=2425495 hash=ec348d…c0b1dc\r\nINFO [04-14|19:33:18] Imported new chain segment               blocks=1   txs=15  mgas=0.182  elapsed=30.056s    mgasps=0.006 number=2425496 hash=6a5fbd…9757d2\r\nINFO [04-14|19:36:17] Imported new chain segment               blocks=5   txs=18  mgas=1.408  elapsed=2m58.670s  mgasps=0.008 number=2425501 hash=3d9d0d…6f6ad2\r\nINFO [04-14|19:37:54] Imported new chain segment               blocks=6   txs=39  mgas=1.192  elapsed=1m37.747s  mgasps=0.012 number=2425507 hash=8e29b3…e9d6e9\r\nINFO [04-14|19:40:49] Imported new chain segment               blocks=2   txs=19  mgas=1.184  elapsed=2m54.397s  mgasps=0.007 number=2425509 hash=dae708…d5bb6b\r\nINFO [04-14|19:44:13] Imported new chain segment               blocks=5   txs=55  mgas=2.033  elapsed=3m23.924s  mgasps=0.010 number=2425514 hash=1da67d…766e67\r\nINFO [04-14|19:44:37] Imported new chain segment               blocks=1   txs=15  mgas=0.350  elapsed=24.452s    mgasps=0.014 number=2425515 hash=5ffe54…25d066\r\nINFO [04-14|19:48:24] Imported new chain segment               blocks=6   txs=61  mgas=2.264  elapsed=3m47.216s  mgasps=0.010 number=2425521 hash=380e9b…75ad4f\r\nINFO [04-14|19:52:34] Imported new chain segment               blocks=6   txs=49  mgas=2.038  elapsed=4m9.630s   mgasps=0.008 number=2425527 hash=d65a17…d45c4a\r\nINFO [04-14|19:54:18] Imported new chain segment               blocks=3   txs=38  mgas=1.000  elapsed=1m44.162s  mgasps=0.010 number=2425530 hash=bc423e…26838f\r\nINFO [04-14|19:58:01] Imported new chain segment               blocks=14  txs=118 mgas=3.030  elapsed=3m42.548s  mgasps=0.014 number=2425544 hash=99d02e…3ae18b\r\nINFO [04-14|20:03:15] Imported new chain segment               blocks=5   txs=23  mgas=1.376  elapsed=5m14.309s  mgasps=0.004 number=2425549 hash=39fda9…8783be\r\nINFO [04-14|20:03:24] Imported new chain segment               blocks=15  txs=158 mgas=3.265  elapsed=9.301s     mgasps=0.351 number=2425564 hash=37c91e…775da7\r\nINFO [04-14|20:07:29] Imported new chain segment               blocks=7   txs=54  mgas=1.369  elapsed=4m4.321s   mgasps=0.006 number=2425571 hash=d61349…2e2bff\r\nINFO [04-14|20:12:35] Imported new chain segment               blocks=8   txs=84  mgas=2.512  elapsed=5m6.364s   mgasps=0.008 number=2425579 hash=d3568c…11326f\r\nINFO [04-14|20:17:43] Imported new chain segment               blocks=2   txs=33  mgas=1.442  elapsed=5m8.283s   mgasps=0.005 number=2425581 hash=de4acd…0bd866\r\n.................\r\n\r\nAs seen from the log many blocks take minutes to sync\r\nThis morning I was at 2407424 blocks and now after 15 hours its 2425581 i.e. 18157 blocks in 15 hours => 1210 blocks/hour\r\n\r\nSync already continues for a week, although during normal work days I only run it at nights.\r\n\r\n#### Steps to reproduce the behaviour\r\nJust run the latest build from Git with default arguments\r\n\r\n#### Backtrace\r\nStart of the today's log\r\n\r\nWARN [04-13|16:59:45] No etherbase set and no accounts found as default\r\nINFO [04-13|16:59:45] Starting peer-to-peer node               instance=Geth/v1.6.0-unstable/windows-amd64/go1.8\r\nINFO [04-13|16:59:45] Allocated cache and file handles         database=C:\\\\Users\\\\xxx\\\\AppData\\\\Roaming\\\\Ethereum_go\\\\geth\\\\chaindata cache=128 handles=1024\r\nINFO [04-13|16:59:51] Initialised chain configuration          config=\"{ChainID: 1 Homestead: 1150000 DAO: 1920000 DAOSupport: true EIP150: 2463000 EIP155: 2675000 EIP158: 2675000 Engine: ethash}\"\r\nINFO [04-13|16:59:51] Disk storage enabled for ethash caches   dir=C:\\\\Users\\\\xxx\\\\AppData\\\\Roaming\\\\Ethereum_go\\\\geth\\\\ethash count=3\r\nINFO [04-13|16:59:51] Disk storage enabled for ethash DAGs     dir=C:\\\\Users\\\\xxx\\\\AppData\\\\Ethash                             count=2\r\nINFO [04-13|16:59:52] Initialising Ethereum protocol           versions=\"[63 62]\" network=1\r\nINFO [04-13|16:59:52] Loaded most recent local header          number=2407424 hash=049007…fa24ce td=71875898511406243634\r\nINFO [04-13|16:59:52] Loaded most recent local full block      number=2407424 hash=049007…fa24ce td=71875898511406243634\r\nINFO [04-13|16:59:52] Loaded most recent local fast block      number=2407424 hash=049007…fa24ce td=71875898511406243634\r\nINFO [04-13|16:59:52] Starting P2P networking\r\nINFO [04-13|16:59:54] RLPx listener up                         self=enode://16d62db982f324a25592c85384341c2938356b8ecedff160ef5aeb4bf1e7ccf4620352aae32f235596b3ec2bdc829692887fd1dc5b6bdf9345466c321b1dd86d@[::]:30303\r\nINFO [04-13|16:59:54] IPC endpoint opened: \\\\.\\pipe\\geth.ipc\r\nINFO [04-13|17:04:04] Block synchronisation started\r\nINFO [04-13|17:04:09] Generating ethash verification cache     epoch=80 percentage=68 elapsed=3.000s\r\nINFO [04-13|17:04:11] Generated ethash verification cache      epoch=80 elapsed=4.498s\r\nERROR[04-13|17:04:11] Failed to generate mapped ethash cache   epoch=80 err=\"FlushFileBuffers: The handle is invalid.\"\r\nINFO [04-13|17:04:14] Generating ethash verification cache     epoch=80 percentage=69 elapsed=3.000s\r\nINFO [04-13|17:04:16] Generated ethash verification cache      epoch=80 elapsed=4.540s\r\nINFO [04-13|17:04:19] Generating ethash verification cache     epoch=81 percentage=68 elapsed=3.000s\r\nINFO [04-13|17:04:20] Generated ethash verification cache      epoch=81 elapsed=4.518s\r\nERROR[04-13|17:04:21] Failed to generate mapped ethash cache   epoch=81 err=\"FlushFileBuffers: The handle is invalid.\"\r\nINFO [04-13|17:04:24] Generating ethash verification cache     epoch=81 percentage=69 elapsed=3.000s\r\nINFO [04-13|17:04:25] Generated ethash verification cache      epoch=81 elapsed=4.413s\r\nINFO [04-13|17:32:59] Imported new chain segment               blocks=1 txs=23 mgas=1.464 elapsed=28m52.334s mgasps=0.001 number=2407425 hash=bb11c2…479783\r\nINFO [04-13|17:33:01] Imported new chain segment               blocks=1 txs=89 mgas=1.455 elapsed=2.384s     mgasps=0.610 number=2407426 hash=d15a0f…6a7b2c\r\nINFO [04-13|17:33:13] Imported new chain segment               blocks=4 txs=49 mgas=3.495 elapsed=11.505s    mgasps=0.304 number=2407430 hash=b08729…74ca3e\r\nINFO [04-13|17:33:23] Imported new chain segment               blocks=8 txs=100 mgas=3.786 elapsed=10.420s    mgasps=0.363 number=2407438 hash=a33f81…ecfc8c\r\nINFO [04-13|17:33:33] Imported new chain segment               blocks=8 txs=89  mgas=3.807 elapsed=10.407s    mgasps=0.366 number=2407446 hash=3201c8…01a925\r\nINFO [04-13|17:33:45] Imported new chain segment               blocks=5 txs=100 mgas=3.643 elapsed=11.719s    mgasps=0.311 number=2407451 hash=e856cc…7bcb91\r\nINFO [04-13|17:33:57] Imported new chain segment               blocks=10 txs=63  mgas=4.668 elapsed=11.393s    mgasps=0.4\r\n\r\n````\r\n[backtrace]\r\n````\r\nI found some relevant issues/discussions e.g.\r\nhttps://github.com/ethereum/go-ethereum/issues/3207\r\nhttps://forum.ethereum.org/discussion/6327/block-sync-so-slow\r\n\r\nThose discussion only accentuate the Slow speed of the sync. My point is however that the speed Deteriorates with the size of the datastore, and I wonder if this is a fundamental problem with the implementation and how it can be improved.\r\n\r\nThe following discussion was started by myself at apparently a dead forum\r\nhttp://forum.ethereum.org/discussion/11826/eth-full-node-running-errors\r\n",
  "closed_by": {
    "login": "allemathor",
    "id": 26977361,
    "node_id": "MDQ6VXNlcjI2OTc3MzYx",
    "avatar_url": "https://avatars.githubusercontent.com/u/26977361?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/allemathor",
    "html_url": "https://github.com/allemathor",
    "followers_url": "https://api.github.com/users/allemathor/followers",
    "following_url": "https://api.github.com/users/allemathor/following{/other_user}",
    "gists_url": "https://api.github.com/users/allemathor/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/allemathor/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/allemathor/subscriptions",
    "organizations_url": "https://api.github.com/users/allemathor/orgs",
    "repos_url": "https://api.github.com/users/allemathor/repos",
    "events_url": "https://api.github.com/users/allemathor/events{/privacy}",
    "received_events_url": "https://api.github.com/users/allemathor/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294297134",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-294297134",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 294297134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDI5NzEzNA==",
    "user": {
      "login": "allemathor",
      "id": 26977361,
      "node_id": "MDQ6VXNlcjI2OTc3MzYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26977361?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/allemathor",
      "html_url": "https://github.com/allemathor",
      "followers_url": "https://api.github.com/users/allemathor/followers",
      "following_url": "https://api.github.com/users/allemathor/following{/other_user}",
      "gists_url": "https://api.github.com/users/allemathor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/allemathor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/allemathor/subscriptions",
      "organizations_url": "https://api.github.com/users/allemathor/orgs",
      "repos_url": "https://api.github.com/users/allemathor/repos",
      "events_url": "https://api.github.com/users/allemathor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/allemathor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-15T14:35:40Z",
    "updated_at": "2017-04-15T14:35:40Z",
    "author_association": "NONE",
    "body": "Further investigation shows that this is Disk I/O i.e. database operations problem.\r\n\r\n* Huge Read response Time on ldb files\r\n* Huge Disk Queue Length. >10 on average all the time (!).\r\n* Disk activity 100% permanently (!)\r\n\r\nSome data from Resource Explorer\r\n\r\nDisk Activity\r\n(only 4 top records shown. Check the Response time 526 ms !!! Only Read operations is problem)\r\n\r\nImage\tPID\tFile\tRead (B/sec)\tWrite (B/sec)\tTotal (B/sec)\tI/O Priority\tResponse Time (ms)\r\ngeth.exe\t14068\tx\\geth\\chaindata\\1169438.ldb\t282\t0\t282\tNormal\t526\r\ngeth.exe\t14068\tx\\geth\\chaindata\\1148274.ldb\t512\t0\t512\tNormal\t228\r\ngeth.exe\t14068\tx\\geth\\chaindata\\1148871.ldb\t155\t0\t155\tNormal\t198\r\ngeth.exe\t14068\tx\\geth\\chaindata\\1167902.ldb\t4,096\t0\t4,096\tNormal\t183\r\n\r\nStorage parameters (only 4 snapshots taken. Note Disk Queue Lenght. I have just one disk)\r\nLogical Disk\tPhysical Disk\tActive Time (%)\tAvailable Space (MB)\tTotal Space (MB)\tDisk Queue Length\r\nC:\t0\t100.00\t209,641\t703,885\t6.82\r\nC:\t0\t100.00\t209,633\t703,885\t8.65\r\nC:\t0\t100.00\t209,644\t703,885\t13.23\r\nC:\t0\t100.00\t209,633\t703,885\t12.48\r\n\r\nCan this be improved on a laptop with a single HDD disk?\r\nI'm surprised that this problem doesn't seem to be anywhere discussed. Or am I just looking at it from a wrong prospective? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294297134/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294325697",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-294325697",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 294325697,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDMyNTY5Nw==",
    "user": {
      "login": "allemathor",
      "id": 26977361,
      "node_id": "MDQ6VXNlcjI2OTc3MzYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26977361?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/allemathor",
      "html_url": "https://github.com/allemathor",
      "followers_url": "https://api.github.com/users/allemathor/followers",
      "following_url": "https://api.github.com/users/allemathor/following{/other_user}",
      "gists_url": "https://api.github.com/users/allemathor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/allemathor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/allemathor/subscriptions",
      "organizations_url": "https://api.github.com/users/allemathor/orgs",
      "repos_url": "https://api.github.com/users/allemathor/repos",
      "events_url": "https://api.github.com/users/allemathor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/allemathor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-16T00:26:25Z",
    "updated_at": "2017-04-16T00:26:25Z",
    "author_association": "NONE",
    "body": "Increasing cache size \"geth --cache 1024 ..\" makes for a not-worth mentioning improvement. I see max response time 291ms vs 526 above ( 20 ms can be considered a problem already).\r\nSeems LevelDB operations have to be tuned up somehow. May be the whole storage mechanism needs a drastic change.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294325697/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294326325",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-294326325",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 294326325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDMyNjMyNQ==",
    "user": {
      "login": "haiitch",
      "id": 23458,
      "node_id": "MDQ6VXNlcjIzNDU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/23458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haiitch",
      "html_url": "https://github.com/haiitch",
      "followers_url": "https://api.github.com/users/haiitch/followers",
      "following_url": "https://api.github.com/users/haiitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/haiitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haiitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haiitch/subscriptions",
      "organizations_url": "https://api.github.com/users/haiitch/orgs",
      "repos_url": "https://api.github.com/users/haiitch/repos",
      "events_url": "https://api.github.com/users/haiitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haiitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-16T00:46:48Z",
    "updated_at": "2017-04-16T00:46:48Z",
    "author_association": "NONE",
    "body": "Can you confirm whether this performance problem with LevelDB is platform-specific?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294326325/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294327165",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-294327165",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 294327165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDMyNzE2NQ==",
    "user": {
      "login": "allemathor",
      "id": 26977361,
      "node_id": "MDQ6VXNlcjI2OTc3MzYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26977361?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/allemathor",
      "html_url": "https://github.com/allemathor",
      "followers_url": "https://api.github.com/users/allemathor/followers",
      "following_url": "https://api.github.com/users/allemathor/following{/other_user}",
      "gists_url": "https://api.github.com/users/allemathor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/allemathor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/allemathor/subscriptions",
      "organizations_url": "https://api.github.com/users/allemathor/orgs",
      "repos_url": "https://api.github.com/users/allemathor/repos",
      "events_url": "https://api.github.com/users/allemathor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/allemathor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-16T01:12:28Z",
    "updated_at": "2017-04-16T01:12:28Z",
    "author_association": "NONE",
    "body": "I didn't try this on Linux yet but I definitely will, and soon. Meanwhile hopefully somebody else can provide supporting evidence on Linux side.\r\nI can confirm though that both eth and geth have this problem on Windows. Eth is much worse.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294327165/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294327581",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-294327581",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 294327581,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDMyNzU4MQ==",
    "user": {
      "login": "haiitch",
      "id": 23458,
      "node_id": "MDQ6VXNlcjIzNDU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/23458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haiitch",
      "html_url": "https://github.com/haiitch",
      "followers_url": "https://api.github.com/users/haiitch/followers",
      "following_url": "https://api.github.com/users/haiitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/haiitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haiitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haiitch/subscriptions",
      "organizations_url": "https://api.github.com/users/haiitch/orgs",
      "repos_url": "https://api.github.com/users/haiitch/repos",
      "events_url": "https://api.github.com/users/haiitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haiitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-16T01:25:42Z",
    "updated_at": "2017-04-16T01:25:42Z",
    "author_association": "NONE",
    "body": "I would offer myself to work improving this storage situation, but I'm away from home and without reliable broadband to sync the full database quickly enough. Do I need to have the full db sync'd to work on this?  In case it's needed, how long would it take to sync the full thing over mobile at somewhere between 1 - 3 mbits/s?  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294327581/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294376030",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-294376030",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 294376030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDM3NjAzMA==",
    "user": {
      "login": "allemathor",
      "id": 26977361,
      "node_id": "MDQ6VXNlcjI2OTc3MzYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26977361?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/allemathor",
      "html_url": "https://github.com/allemathor",
      "followers_url": "https://api.github.com/users/allemathor/followers",
      "following_url": "https://api.github.com/users/allemathor/following{/other_user}",
      "gists_url": "https://api.github.com/users/allemathor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/allemathor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/allemathor/subscriptions",
      "organizations_url": "https://api.github.com/users/allemathor/orgs",
      "repos_url": "https://api.github.com/users/allemathor/repos",
      "events_url": "https://api.github.com/users/allemathor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/allemathor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-16T21:42:46Z",
    "updated_at": "2017-04-16T21:42:46Z",
    "author_association": "NONE",
    "body": "Fast sync works OK in the same setup.\r\n11:20  geth --maxpeers 11 --cache 1024 --fast       started fast sync\r\n16:24  Fast sync complete, auto disabling ...\r\nNumber of blocks 3,547,493 with datastore size: 14.8 GB\r\nCompare to Full node sync that stuck at block 2,427,143 with datastore size of 51.7 GB\r\nIt seems the problems with LevelDB start with datastore size above 20 GB. I wonder if Fast sync will commence choking when its datastore size crosses 20 GB line.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294376030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294376253",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-294376253",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 294376253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDM3NjI1Mw==",
    "user": {
      "login": "allemathor",
      "id": 26977361,
      "node_id": "MDQ6VXNlcjI2OTc3MzYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26977361?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/allemathor",
      "html_url": "https://github.com/allemathor",
      "followers_url": "https://api.github.com/users/allemathor/followers",
      "following_url": "https://api.github.com/users/allemathor/following{/other_user}",
      "gists_url": "https://api.github.com/users/allemathor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/allemathor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/allemathor/subscriptions",
      "organizations_url": "https://api.github.com/users/allemathor/orgs",
      "repos_url": "https://api.github.com/users/allemathor/repos",
      "events_url": "https://api.github.com/users/allemathor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/allemathor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-16T21:47:06Z",
    "updated_at": "2017-04-16T21:47:06Z",
    "author_association": "NONE",
    "body": "Even now when Fast sync is over my disk is 100% busy all the time with average disk queue length >2",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294376253/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294400953",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-294400953",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 294400953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDQwMDk1Mw==",
    "user": {
      "login": "haiitch",
      "id": 23458,
      "node_id": "MDQ6VXNlcjIzNDU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/23458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haiitch",
      "html_url": "https://github.com/haiitch",
      "followers_url": "https://api.github.com/users/haiitch/followers",
      "following_url": "https://api.github.com/users/haiitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/haiitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haiitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haiitch/subscriptions",
      "organizations_url": "https://api.github.com/users/haiitch/orgs",
      "repos_url": "https://api.github.com/users/haiitch/repos",
      "events_url": "https://api.github.com/users/haiitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haiitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-17T04:01:58Z",
    "updated_at": "2017-04-17T04:01:58Z",
    "author_association": "NONE",
    "body": "This seems potentially relevant, and it's still an open issue\r\nhttps://github.com/syndtr/goleveldb/issues/93",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294400953/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294484424",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-294484424",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 294484424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDQ4NDQyNA==",
    "user": {
      "login": "allemathor",
      "id": 26977361,
      "node_id": "MDQ6VXNlcjI2OTc3MzYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26977361?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/allemathor",
      "html_url": "https://github.com/allemathor",
      "followers_url": "https://api.github.com/users/allemathor/followers",
      "following_url": "https://api.github.com/users/allemathor/following{/other_user}",
      "gists_url": "https://api.github.com/users/allemathor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/allemathor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/allemathor/subscriptions",
      "organizations_url": "https://api.github.com/users/allemathor/orgs",
      "repos_url": "https://api.github.com/users/allemathor/repos",
      "events_url": "https://api.github.com/users/allemathor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/allemathor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-17T13:21:26Z",
    "updated_at": "2017-04-17T13:21:26Z",
    "author_association": "NONE",
    "body": "I see one potential problem:  DefaultWriteBuffer  = 4 * MiB (leveldb/opt/options.go)\r\nThis is likely too small especially for HDD. I'll increase it and test today",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294484424/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294634517",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-294634517",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 294634517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDYzNDUxNw==",
    "user": {
      "login": "allemathor",
      "id": 26977361,
      "node_id": "MDQ6VXNlcjI2OTc3MzYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26977361?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/allemathor",
      "html_url": "https://github.com/allemathor",
      "followers_url": "https://api.github.com/users/allemathor/followers",
      "following_url": "https://api.github.com/users/allemathor/following{/other_user}",
      "gists_url": "https://api.github.com/users/allemathor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/allemathor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/allemathor/subscriptions",
      "organizations_url": "https://api.github.com/users/allemathor/orgs",
      "repos_url": "https://api.github.com/users/allemathor/repos",
      "events_url": "https://api.github.com/users/allemathor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/allemathor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-18T00:24:18Z",
    "updated_at": "2017-04-18T00:24:18Z",
    "author_association": "NONE",
    "body": "With\r\nDefaultBlockCacheCapacity     = 80 * MiB\r\nDefaultWriteBuffer                   = 80 * MiB\r\nNothing has changed.\r\nSeems it is a deeper problem. If the leveldb options would be important, then it would show up from the start. But the big chunk of data was synced OK before the problem showed up.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294634517/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294652906",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-294652906",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 294652906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDY1MjkwNg==",
    "user": {
      "login": "haiitch",
      "id": 23458,
      "node_id": "MDQ6VXNlcjIzNDU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/23458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haiitch",
      "html_url": "https://github.com/haiitch",
      "followers_url": "https://api.github.com/users/haiitch/followers",
      "following_url": "https://api.github.com/users/haiitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/haiitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haiitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haiitch/subscriptions",
      "organizations_url": "https://api.github.com/users/haiitch/orgs",
      "repos_url": "https://api.github.com/users/haiitch/repos",
      "events_url": "https://api.github.com/users/haiitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haiitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-18T02:17:15Z",
    "updated_at": "2017-04-18T02:17:15Z",
    "author_association": "NONE",
    "body": "In the meantime I'm taking a look at Rocksdb, checking how hard it would be to have comparable / pluggable datastore based on Rocks.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294652906/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294852537",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-294852537",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 294852537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDg1MjUzNw==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-18T13:57:17Z",
    "updated_at": "2017-04-18T13:57:17Z",
    "author_association": "MEMBER",
    "body": "We've had a PR a while back that relied on rocksdb. The underlying design is the same as leveldb. You won't see any meaningful improvements.\r\n\r\nThe full historical database is huge (>140GB) and contains a humongous number of entries, all indexes by their hash (random). Hash based indexing means the disk is thrashed with inserts all over the place. You can more or less forget doing a full sync on an HDD. As the database gets larger, the disk cannot keep up.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294852537/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295254838",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-295254838",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 295254838,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTI1NDgzOA==",
    "user": {
      "login": "allemathor",
      "id": 26977361,
      "node_id": "MDQ6VXNlcjI2OTc3MzYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26977361?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/allemathor",
      "html_url": "https://github.com/allemathor",
      "followers_url": "https://api.github.com/users/allemathor/followers",
      "following_url": "https://api.github.com/users/allemathor/following{/other_user}",
      "gists_url": "https://api.github.com/users/allemathor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/allemathor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/allemathor/subscriptions",
      "organizations_url": "https://api.github.com/users/allemathor/orgs",
      "repos_url": "https://api.github.com/users/allemathor/repos",
      "events_url": "https://api.github.com/users/allemathor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/allemathor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-19T12:39:58Z",
    "updated_at": "2017-04-19T12:39:58Z",
    "author_association": "NONE",
    "body": "I'm running Parity for comparison. It uses Rocks. So far it works better than geth. In 12 hours it synced 1815098 blocks, which is about half million blocks more than geth did in the same time period.\r\nHowever I see similar problems. 100% disk usage, long read time for many sst files. Parity uses much more memory too. Let's see how it'll perform above 20 mln blocks.\r\nWhat @karalabe says sounds like at some point the full node will require specialised hardware to run i.e. big $$. Mining story repeats for the full node now.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295254838/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295255990",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-295255990",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 295255990,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTI1NTk5MA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-19T12:43:07Z",
    "updated_at": "2017-04-19T12:43:07Z",
    "author_association": "MEMBER",
    "body": "Parity has state pruning, so it's comparing apples to oranges. If your database is much smaller, the speed will obviously be a lot faster, irrelevant whether it's leveldb or rocksdb.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295255990/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295259749",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-295259749",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 295259749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTI1OTc0OQ==",
    "user": {
      "login": "allemathor",
      "id": 26977361,
      "node_id": "MDQ6VXNlcjI2OTc3MzYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26977361?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/allemathor",
      "html_url": "https://github.com/allemathor",
      "followers_url": "https://api.github.com/users/allemathor/followers",
      "following_url": "https://api.github.com/users/allemathor/following{/other_user}",
      "gists_url": "https://api.github.com/users/allemathor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/allemathor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/allemathor/subscriptions",
      "organizations_url": "https://api.github.com/users/allemathor/orgs",
      "repos_url": "https://api.github.com/users/allemathor/repos",
      "events_url": "https://api.github.com/users/allemathor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/allemathor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-19T12:55:10Z",
    "updated_at": "2017-04-19T12:55:10Z",
    "author_association": "NONE",
    "body": "I'm running Parity with \"--pruning archive\". Thought that was similar to geth without \"--fast\". OK then, no need to continue testing.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295259749/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295259829",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-295259829",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 295259829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTI1OTgyOQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-19T12:55:29Z",
    "updated_at": "2017-04-19T12:55:29Z",
    "author_association": "MEMBER",
    "body": "Hmmm, maybe you are right then.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295259829/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295260456",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-295260456",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 295260456,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTI2MDQ1Ng==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-19T12:57:44Z",
    "updated_at": "2017-04-19T12:57:44Z",
    "author_association": "MEMBER",
    "body": "Still, it's not really meaningful imho to compare the two. Parity doesn't store hash->trie mappings as far as I know and they dropped support to serve eth/63 and fast sync in favor of their own warp sync, so the database might contain wildly different data.\r\n\r\nMy point with this being that you can't compare LevelDB vs. RockDB while having wildly different data being stored into them. The only valid way would be to drop in rocksdb in place of leveldb into the codebase and see what it does.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295260456/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295260760",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-295260760",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 295260760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTI2MDc2MA==",
    "user": {
      "login": "allemathor",
      "id": 26977361,
      "node_id": "MDQ6VXNlcjI2OTc3MzYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26977361?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/allemathor",
      "html_url": "https://github.com/allemathor",
      "followers_url": "https://api.github.com/users/allemathor/followers",
      "following_url": "https://api.github.com/users/allemathor/following{/other_user}",
      "gists_url": "https://api.github.com/users/allemathor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/allemathor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/allemathor/subscriptions",
      "organizations_url": "https://api.github.com/users/allemathor/orgs",
      "repos_url": "https://api.github.com/users/allemathor/repos",
      "events_url": "https://api.github.com/users/allemathor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/allemathor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-19T12:58:38Z",
    "updated_at": "2017-04-19T12:58:38Z",
    "author_association": "NONE",
    "body": "agree",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295260760/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295262471",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-295262471",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 295262471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTI2MjQ3MQ==",
    "user": {
      "login": "allemathor",
      "id": 26977361,
      "node_id": "MDQ6VXNlcjI2OTc3MzYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26977361?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/allemathor",
      "html_url": "https://github.com/allemathor",
      "followers_url": "https://api.github.com/users/allemathor/followers",
      "following_url": "https://api.github.com/users/allemathor/following{/other_user}",
      "gists_url": "https://api.github.com/users/allemathor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/allemathor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/allemathor/subscriptions",
      "organizations_url": "https://api.github.com/users/allemathor/orgs",
      "repos_url": "https://api.github.com/users/allemathor/repos",
      "events_url": "https://api.github.com/users/allemathor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/allemathor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-19T13:04:17Z",
    "updated_at": "2017-04-19T13:04:17Z",
    "author_association": "NONE",
    "body": "On the other hand, if both create a Full node, it doesn't seem to matter that the data storage format is different. For as long as the Node is truly Full. My concern if there are more efficient ways to organise the storage or the specialised hardware prospective is a fundamental reality.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295262471/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295286379",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-295286379",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 295286379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTI4NjM3OQ==",
    "user": {
      "login": "allemathor",
      "id": 26977361,
      "node_id": "MDQ6VXNlcjI2OTc3MzYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26977361?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/allemathor",
      "html_url": "https://github.com/allemathor",
      "followers_url": "https://api.github.com/users/allemathor/followers",
      "following_url": "https://api.github.com/users/allemathor/following{/other_user}",
      "gists_url": "https://api.github.com/users/allemathor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/allemathor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/allemathor/subscriptions",
      "organizations_url": "https://api.github.com/users/allemathor/orgs",
      "repos_url": "https://api.github.com/users/allemathor/repos",
      "events_url": "https://api.github.com/users/allemathor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/allemathor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-19T14:19:19Z",
    "updated_at": "2017-04-19T14:19:19Z",
    "author_association": "NONE",
    "body": "Citing https://github.com/ethereum/go-ethereum/pull/1889:\r\nFast synced node can \"act as a full archive node from all intents and purposes\". \r\nIndeed the Fast sync is well-thought through and seems to solve this issue quite well.\r\nConsidering the ever-growing blockchain it's fundamentally just a matter of time when only a super-computer will be able to perform the classical validation. Nothing is wrong with that.\r\nFast sync is the way to go.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295286379/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295292226",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-295292226",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 295292226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTI5MjIyNg==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-19T14:36:41Z",
    "updated_at": "2017-04-19T14:36:41Z",
    "author_association": "MEMBER",
    "body": "Fast sync gets you a full node, but not an archive node. The difference being that opposed to an archive node which can retrieve arbitrarily old state, a full node can only retrieve relatively recent state. Generally though there's not much reason to run an archive node, unless you want to trace transactions from way back (e.g. block explorer).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295292226/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295484107",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-295484107",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 295484107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTQ4NDEwNw==",
    "user": {
      "login": "allemathor",
      "id": 26977361,
      "node_id": "MDQ6VXNlcjI2OTc3MzYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26977361?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/allemathor",
      "html_url": "https://github.com/allemathor",
      "followers_url": "https://api.github.com/users/allemathor/followers",
      "following_url": "https://api.github.com/users/allemathor/following{/other_user}",
      "gists_url": "https://api.github.com/users/allemathor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/allemathor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/allemathor/subscriptions",
      "organizations_url": "https://api.github.com/users/allemathor/orgs",
      "repos_url": "https://api.github.com/users/allemathor/repos",
      "events_url": "https://api.github.com/users/allemathor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/allemathor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-19T23:04:32Z",
    "updated_at": "2017-04-19T23:04:32Z",
    "author_association": "NONE",
    "body": "Well, then the doc has to be corrected. The sentence \"act as a full archive node from all intents and purposes\" is cited word-to-word. Although it is obvious the information is missing from a Fast sync node. ~20GB vs \">140GB\" full archive. I guess the Full archive cannot be created from Fast synced node. I wonder if Fast nodes can serve at all for the purpose of synchronisation. I study the source code now to figure out the details of the Fast sync.\r\nAnyway, the probabilistic validations and pruning seem to be inevitable future directions. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295484107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295491464",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-295491464",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 295491464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTQ5MTQ2NA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-19T23:28:52Z",
    "updated_at": "2017-04-19T23:28:52Z",
    "author_association": "MEMBER",
    "body": "Fast sync has all the blocks of the network so it can reconstruct the\nentire chain and past archival data if it really wants to + yes, it can\nserve the purpose of synchronization (otherwise the entire network would\nhave been long stuck). Only past state trie entries aren't stored (which\nagain, could be regenerated based on locally available data only).\n\nOn Thu, Apr 20, 2017 at 2:04 AM, allemathor <notifications@github.com>\nwrote:\n\n> Well, then the doc has to be corrected. The sentence \"act as a full\n> archive node from all intents and purposes\" is cited word-to-word. Although\n> it is obvious the information is missing from a Fast sync node. ~20GB vs\n> \">140GB\" full archive. I guess the Full archive cannot be created from Fast\n> synced node. I wonder if Fast nodes can serve at all for the purpose of\n> synchronisation. I study the source code now to figure out the details of\n> the Fast sync.\n> Anyway, the probabilistic validations and pruning seem to be inevitable\n> future directions.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-295484107>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAH6GbU3U72MWxt9BgWhjQBf5iogtNQAks5rxpMBgaJpZM4M-NKc>\n> .\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295491464/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295713580",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-295713580",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 295713580,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTcxMzU4MA==",
    "user": {
      "login": "allemathor",
      "id": 26977361,
      "node_id": "MDQ6VXNlcjI2OTc3MzYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26977361?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/allemathor",
      "html_url": "https://github.com/allemathor",
      "followers_url": "https://api.github.com/users/allemathor/followers",
      "following_url": "https://api.github.com/users/allemathor/following{/other_user}",
      "gists_url": "https://api.github.com/users/allemathor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/allemathor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/allemathor/subscriptions",
      "organizations_url": "https://api.github.com/users/allemathor/orgs",
      "repos_url": "https://api.github.com/users/allemathor/repos",
      "events_url": "https://api.github.com/users/allemathor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/allemathor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-20T12:17:42Z",
    "updated_at": "2017-04-20T12:17:42Z",
    "author_association": "NONE",
    "body": "It's better then I thought. So, the trie hashes are pretty much make for the lion share of the datastore size. They will accumulate gradually again. Can geth be commanded to clean the trie up to a certain point (say top - 1024) if desired?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295713580/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295714037",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-295714037",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 295714037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTcxNDAzNw==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-20T12:19:01Z",
    "updated_at": "2017-04-20T12:19:01Z",
    "author_association": "MEMBER",
    "body": "Nick is actually working on that currently.\n\nOn Thu, Apr 20, 2017 at 3:17 PM, allemathor <notifications@github.com>\nwrote:\n\n> It's better then I thought. So, the trie hashes are pretty much make for\n> the lion share of the datastore size. They will accumulate gradually again.\n> Can geth be commanded to clean the trie up to a certain point (say top -\n> 1024) if desired?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-295713580>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAH6GXbxa50HpoFm1p2zFEz6SMVaXtQdks5rx0zngaJpZM4M-NKc>\n> .\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/295714037/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/336957649",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-336957649",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 336957649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjk1NzY0OQ==",
    "user": {
      "login": "vsaraph",
      "id": 5934167,
      "node_id": "MDQ6VXNlcjU5MzQxNjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5934167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vsaraph",
      "html_url": "https://github.com/vsaraph",
      "followers_url": "https://api.github.com/users/vsaraph/followers",
      "following_url": "https://api.github.com/users/vsaraph/following{/other_user}",
      "gists_url": "https://api.github.com/users/vsaraph/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vsaraph/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vsaraph/subscriptions",
      "organizations_url": "https://api.github.com/users/vsaraph/orgs",
      "repos_url": "https://api.github.com/users/vsaraph/repos",
      "events_url": "https://api.github.com/users/vsaraph/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vsaraph/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-16T17:17:14Z",
    "updated_at": "2017-10-16T17:17:14Z",
    "author_association": "NONE",
    "body": "Like @allemathor, I am attempting to sync an archive node, and I found this discussion thread when I also observed that sync speed deteriorates significantly past block ~2,200,000. I am currently at block 2.47M after about 9 days of syncing. I know that the --fast option exists, however I do in fact want to run transaction traces as @karalabe mentioned. Is there any hope of actually being able to obtain traces on transactions in blocks past 3,000,000, without doing an archive sync and potentially waiting 1 month+ for it to finish?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/336957649/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/338746558",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-338746558",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 338746558,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODc0NjU1OA==",
    "user": {
      "login": "Xeenych",
      "id": 11345848,
      "node_id": "MDQ6VXNlcjExMzQ1ODQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11345848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xeenych",
      "html_url": "https://github.com/Xeenych",
      "followers_url": "https://api.github.com/users/Xeenych/followers",
      "following_url": "https://api.github.com/users/Xeenych/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xeenych/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xeenych/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xeenych/subscriptions",
      "organizations_url": "https://api.github.com/users/Xeenych/orgs",
      "repos_url": "https://api.github.com/users/Xeenych/repos",
      "events_url": "https://api.github.com/users/Xeenych/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xeenych/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-23T18:06:08Z",
    "updated_at": "2017-10-23T18:06:08Z",
    "author_association": "NONE",
    "body": "I have the same issue. Syncing almost stops after block#2331165\r\nDatabase is on HDD.\r\nI have 0.002 mgasps. Syncing one chain segment takes 10-15 minutes.\r\nShould I move database to SSD?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/338746558/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/338778401",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-338778401",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 338778401,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODc3ODQwMQ==",
    "user": {
      "login": "vsaraph",
      "id": 5934167,
      "node_id": "MDQ6VXNlcjU5MzQxNjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5934167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vsaraph",
      "html_url": "https://github.com/vsaraph",
      "followers_url": "https://api.github.com/users/vsaraph/followers",
      "following_url": "https://api.github.com/users/vsaraph/following{/other_user}",
      "gists_url": "https://api.github.com/users/vsaraph/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vsaraph/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vsaraph/subscriptions",
      "organizations_url": "https://api.github.com/users/vsaraph/orgs",
      "repos_url": "https://api.github.com/users/vsaraph/repos",
      "events_url": "https://api.github.com/users/vsaraph/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vsaraph/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-23T19:58:35Z",
    "updated_at": "2017-10-23T19:58:35Z",
    "author_association": "NONE",
    "body": "@Xeenych and anyone else who ran into this issue: if it's any help at all, my geth node's syncing sped up for a brief period of time between roughly blocks 2475000 and 2675000. Take a look at this plot illustrating the sync progress of my node: http://cs.brown.edu/~vsaraph/geth_plot.png. If you compare my plot to the growth of the full chaindata directory over time [here](https://etherscan.io/chart/chaindatasizefull), you will see a spike in the size of the blockchain corresponding to the same interval of blocks I just mentioned. As you can see, my syncing has once again almost stopped, but I think this is because there was another spike in chaindata's size around Nov 22, 2016. I am expecting my syncing to pick up again after this second spike.\r\n\r\nI think the sudden growth in the blockchain around these points in time has something to do with the DAO hack and/or resolving it? For example see this block: https://etherscan.io/block/2423581. There are a larger number of internal transactions that supposedly created new accounts. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/338778401/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/338779482",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-338779482",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 338779482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODc3OTQ4Mg==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-23T20:02:34Z",
    "updated_at": "2017-10-23T20:02:34Z",
    "author_association": "MEMBER",
    "body": "@vsaraph Why are you doing a full transaction-processing sync? That will take an insane amount of time and disk storage. A fast sync should get you on track in a couple hours.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/338779482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/338779562",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14330#issuecomment-338779562",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14330",
    "id": 338779562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODc3OTU2Mg==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-23T20:02:54Z",
    "updated_at": "2017-10-23T20:02:54Z",
    "author_association": "MEMBER",
    "body": "@Xeenych Yes, currently it's not feasible to sync the mainnet on an HDD.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/338779562/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
