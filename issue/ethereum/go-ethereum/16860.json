{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16860",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16860/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16860/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16860/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/16860",
  "id": 328587119,
  "node_id": "MDU6SXNzdWUzMjg1ODcxMTk=",
  "number": 16860,
  "title": "build from sources fails on Debian 9.4",
  "user": {
    "login": "pheix",
    "id": 6272762,
    "node_id": "MDQ6VXNlcjYyNzI3NjI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6272762?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pheix",
    "html_url": "https://github.com/pheix",
    "followers_url": "https://api.github.com/users/pheix/followers",
    "following_url": "https://api.github.com/users/pheix/following{/other_user}",
    "gists_url": "https://api.github.com/users/pheix/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pheix/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pheix/subscriptions",
    "organizations_url": "https://api.github.com/users/pheix/orgs",
    "repos_url": "https://api.github.com/users/pheix/repos",
    "events_url": "https://api.github.com/users/pheix/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pheix/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2018-06-01T16:40:14Z",
  "updated_at": "2018-06-08T16:00:50Z",
  "closed_at": "2018-06-08T15:49:04Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hi there,\r\n\r\nTry to build **geth** on Debian 9.4. Got the next error:\r\n\r\n````\r\ngithub.com/ethereum/go-ethereum/vendor/gopkg.in/olebedev/go-duktape.v3\r\n# github.com/ethereum/go-ethereum/vendor/gopkg.in/olebedev/go-duktape.v3\r\nvendor/gopkg.in/olebedev/go-duktape.v3/conts.go:14:11: undefined: Type\r\nvendor/gopkg.in/olebedev/go-duktape.v3/timers.go:11:10: undefined: Context\r\ngithub.com/ethereum/go-ethereum/internal/jsre\r\nutil.go:45: exit status 2\r\nexit status 1\r\nMakefile:15: recipe for target 'geth' failed\r\nmake: *** [geth] Error 1\r\n````\r\n\r\n#### System information\r\n\r\nGo version: `go version go1.10.2 linux/amd64`\r\nOS & Version: Debian 9.4 `SMP Debian 4.9.65-3+deb9u1 (2017-12-23) x86_64 GNU/Linux`\r\nCommit hash : ff9b14617e73c07dfa028bc477fe86c1e04d80c5 `v1.8.9`\r\n",
  "closed_by": {
    "login": "pheix",
    "id": 6272762,
    "node_id": "MDQ6VXNlcjYyNzI3NjI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6272762?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pheix",
    "html_url": "https://github.com/pheix",
    "followers_url": "https://api.github.com/users/pheix/followers",
    "following_url": "https://api.github.com/users/pheix/following{/other_user}",
    "gists_url": "https://api.github.com/users/pheix/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pheix/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pheix/subscriptions",
    "organizations_url": "https://api.github.com/users/pheix/orgs",
    "repos_url": "https://api.github.com/users/pheix/repos",
    "events_url": "https://api.github.com/users/pheix/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pheix/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16860/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16860/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/394285238",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16860#issuecomment-394285238",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16860",
    "id": 394285238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDI4NTIzOA==",
    "user": {
      "login": "jsvisa",
      "id": 3627395,
      "node_id": "MDQ6VXNlcjM2MjczOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3627395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsvisa",
      "html_url": "https://github.com/jsvisa",
      "followers_url": "https://api.github.com/users/jsvisa/followers",
      "following_url": "https://api.github.com/users/jsvisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsvisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jsvisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsvisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jsvisa/orgs",
      "repos_url": "https://api.github.com/users/jsvisa/repos",
      "events_url": "https://api.github.com/users/jsvisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jsvisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T09:04:30Z",
    "updated_at": "2018-06-04T09:04:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pheix Could you please paste the contents in  *vendor/gopkg.in/olebedev/go-duktape.v3/duktape.go*",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/394285238/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/394325706",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16860#issuecomment-394325706",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16860",
    "id": 394325706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDMyNTcwNg==",
    "user": {
      "login": "pheix",
      "id": 6272762,
      "node_id": "MDQ6VXNlcjYyNzI3NjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6272762?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pheix",
      "html_url": "https://github.com/pheix",
      "followers_url": "https://api.github.com/users/pheix/followers",
      "following_url": "https://api.github.com/users/pheix/following{/other_user}",
      "gists_url": "https://api.github.com/users/pheix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pheix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pheix/subscriptions",
      "organizations_url": "https://api.github.com/users/pheix/orgs",
      "repos_url": "https://api.github.com/users/pheix/repos",
      "events_url": "https://api.github.com/users/pheix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pheix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T11:43:13Z",
    "updated_at": "2018-06-04T11:45:24Z",
    "author_association": "NONE",
    "body": "@jsvisa here's the contents of `vendor/gopkg.in/olebedev/go-duktape.v3/duktape.go`:\r\n\r\n```go\r\npackage duktape\r\n\r\n/*\r\n#cgo !windows CFLAGS: -std=c99 -O3 -Wall -fomit-frame-pointer -fstrict-aliasing\r\n#cgo windows CFLAGS: -O3 -Wall -fomit-frame-pointer -fstrict-aliasing\r\n#cgo linux LDFLAGS: -lm\r\n#cgo freebsd LDFLAGS: -lm\r\n#cgo openbsd LDFLAGS: -lm\r\n\r\n#include \"duktape.h\"\r\n#include \"duk_logging.h\"\r\n#include \"duk_print_alert.h\"\r\n#include \"duk_module_duktape.h\"\r\n#include \"duk_console.h\"\r\nextern duk_ret_t goFunctionCall(duk_context *ctx);\r\nextern void goFinalizeCall(duk_context *ctx);\r\n*/\r\nimport \"C\"\r\nimport (\r\n\t\"errors\"\r\n\t\"fmt\"\r\n\t\"regexp\"\r\n\t\"sync\"\r\n\t\"unsafe\"\r\n)\r\n\r\nvar reFuncName = regexp.MustCompile(\"^[a-z_][a-z0-9_]*([A-Z_][a-z0-9_]*)*$\")\r\n\r\nconst (\r\n\tgoFunctionPtrProp = \"\\xff\" + \"goFunctionPtrProp\"\r\n\tgoContextPtrProp  = \"\\xff\" + \"goContextPtrProp\"\r\n)\r\n\r\ntype Context struct {\r\n\t*context\r\n}\r\n\r\n// transmute replaces the value from Context with the value of pointer\r\nfunc (c *Context) transmute(p unsafe.Pointer) {\r\n\t*c = *(*Context)(p)\r\n}\r\n\r\n// this is a pojo containing only the values of the Context\r\ntype context struct {\r\n\tsync.Mutex\r\n\tduk_context *C.duk_context\r\n\tfnIndex     *functionIndex\r\n\ttimerIndex  *timerIndex\r\n}\r\n\r\n// New returns plain initialized duktape context object\r\n// See: http://duktape.org/api.html#duk_create_heap_default\r\nfunc New() *Context {\r\n\td := &Context{\r\n\t\t&context{\r\n\t\t\tduk_context: C.duk_create_heap(nil, nil, nil, nil, nil),\r\n\t\t\tfnIndex:     newFunctionIndex(),\r\n\t\t\ttimerIndex:  &timerIndex{},\r\n\t\t},\r\n\t}\r\n\r\n\tctx := d.duk_context\r\n\tC.duk_logging_init(ctx, 0)\r\n\tC.duk_print_alert_init(ctx, 0)\r\n\tC.duk_module_duktape_init(ctx)\r\n\tC.duk_console_init(ctx, 0)\r\n\r\n\treturn d\r\n}\r\n\r\n// Flags is a set of flags for controlling the behaviour of duktape.\r\ntype Flags struct {\r\n\tLogging    uint\r\n\tPrintAlert uint\r\n\tConsole    uint\r\n}\r\n\r\n// FlagConsoleProxyWrapper is a Console flag.\r\n// Use a proxy wrapper to make undefined methods (console.foo()) no-ops.\r\nconst FlagConsoleProxyWrapper = 1 << 0\r\n\r\n// FlagConsoleFlush is a Console flag.\r\n// Flush output after every call.\r\nconst FlagConsoleFlush = 1 << 1\r\n\r\n// NewWithFlags returns plain initialized duktape context object\r\n// You can control the behaviour of duktape by setting flags.\r\n// See: http://duktape.org/api.html#duk_create_heap_default\r\nfunc NewWithFlags(flags *Flags) *Context {\r\n\td := &Context{\r\n\t\t&context{\r\n\t\t\tduk_context: C.duk_create_heap(nil, nil, nil, nil, nil),\r\n\t\t\tfnIndex:     newFunctionIndex(),\r\n\t\t\ttimerIndex:  &timerIndex{},\r\n\t\t},\r\n\t}\r\n\r\n\tctx := d.duk_context\r\n\tC.duk_logging_init(ctx, C.duk_uint_t(flags.Logging))\r\n\tC.duk_print_alert_init(ctx, C.duk_uint_t(flags.PrintAlert))\r\n\tC.duk_module_duktape_init(ctx)\r\n\tC.duk_console_init(ctx, C.duk_uint_t(flags.Console))\r\n\r\n\treturn d\r\n}\r\n\r\nfunc contextFromPointer(ctx *C.duk_context) *Context {\r\n\treturn &Context{&context{duk_context: ctx}}\r\n}\r\n\r\n// PushGlobalGoFunction push the given function into duktape global object\r\n// Returns non-negative index (relative to stack bottom) of the pushed function\r\n// also returns error if the function name is invalid\r\nfunc (d *Context) PushGlobalGoFunction(name string, fn func(*Context) int) (int, error) {\r\n\tif !reFuncName.MatchString(name) {\r\n\t\treturn -1, errors.New(\"Malformed function name '\" + name + \"'\")\r\n\t}\r\n\r\n\td.PushGlobalObject()\r\n\tidx := d.PushGoFunction(fn)\r\n\td.PutPropString(-2, name)\r\n\td.Pop()\r\n\r\n\treturn idx, nil\r\n}\r\n\r\n// PushGoFunction push the given function into duktape stack, returns non-negative\r\n// index (relative to stack bottom) of the pushed function\r\nfunc (d *Context) PushGoFunction(fn func(*Context) int) int {\r\n\tfunPtr := d.fnIndex.add(fn)\r\n\tctxPtr := contexts.add(d)\r\n\r\n\tidx := d.PushCFunction((*[0]byte)(C.goFunctionCall), C.DUK_VARARGS)\r\n\td.PushCFunction((*[0]byte)(C.goFinalizeCall), 1)\r\n\td.PushPointer(funPtr)\r\n\td.PutPropString(-2, goFunctionPtrProp)\r\n\td.PushPointer(ctxPtr)\r\n\td.PutPropString(-2, goContextPtrProp)\r\n\td.SetFinalizer(-2)\r\n\r\n\td.PushPointer(funPtr)\r\n\td.PutPropString(-2, goFunctionPtrProp)\r\n\td.PushPointer(ctxPtr)\r\n\td.PutPropString(-2, goContextPtrProp)\r\n\r\n\treturn idx\r\n}\r\n\r\n//export goFunctionCall\r\nfunc goFunctionCall(cCtx *C.duk_context) C.duk_ret_t {\r\n\td := contextFromPointer(cCtx)\r\n\r\n\tfunPtr, ctx := d.getFunctionPtrs()\r\n\td.transmute(unsafe.Pointer(ctx))\r\n\r\n\tresult := d.fnIndex.get(funPtr)(d)\r\n\r\n\treturn C.duk_ret_t(result)\r\n}\r\n\r\n//export goFinalizeCall\r\nfunc goFinalizeCall(cCtx *C.duk_context) {\r\n\td := contextFromPointer(cCtx)\r\n\r\n\tfunPtr, ctx := d.getFunctionPtrs()\r\n\td.transmute(unsafe.Pointer(ctx))\r\n\r\n\td.fnIndex.delete(funPtr)\r\n}\r\n\r\nfunc (d *Context) getFunctionPtrs() (unsafe.Pointer, *Context) {\r\n\td.PushCurrentFunction()\r\n\td.GetPropString(-1, goFunctionPtrProp)\r\n\tfunPtr := d.GetPointer(-1)\r\n\r\n\td.Pop()\r\n\r\n\td.GetPropString(-1, goContextPtrProp)\r\n\tctx := contexts.get(d.GetPointer(-1))\r\n\td.Pop2()\r\n\treturn funPtr, ctx\r\n}\r\n\r\n// Destroy destroy all the references to the functions and freed the pointers\r\nfunc (d *Context) Destroy() {\r\n\td.fnIndex.destroy()\r\n\tcontexts.delete(d)\r\n}\r\n\r\ntype Error struct {\r\n\tType       string\r\n\tMessage    string\r\n\tFileName   string\r\n\tLineNumber int\r\n\tStack      string\r\n}\r\n\r\nfunc (e *Error) Error() string {\r\n\treturn fmt.Sprintf(\"%s: %s\", e.Type, e.Message)\r\n}\r\n\r\ntype Type int\r\n\r\nfunc (t Type) IsNone() bool      { return t == TypeNone }\r\nfunc (t Type) IsUndefined() bool { return t == TypeUndefined }\r\nfunc (t Type) IsNull() bool      { return t == TypeNull }\r\nfunc (t Type) IsBool() bool      { return t == TypeBoolean }\r\nfunc (t Type) IsNumber() bool    { return t == TypeNumber }\r\nfunc (t Type) IsString() bool    { return t == TypeString }\r\nfunc (t Type) IsObject() bool    { return t == TypeObject }\r\nfunc (t Type) IsBuffer() bool    { return t == TypeBuffer }\r\nfunc (t Type) IsPointer() bool   { return t == TypePointer }\r\nfunc (t Type) IsLightFunc() bool { return t == TypeLightFunc }\r\n\r\nfunc (t Type) String() string {\r\n\tswitch t {\r\n\tcase TypeNone:\r\n\t\treturn \"None\"\r\n\tcase TypeUndefined:\r\n\t\treturn \"Undefined\"\r\n\tcase TypeNull:\r\n\t\treturn \"Null\"\r\n\tcase TypeBoolean:\r\n\t\treturn \"Boolean\"\r\n\tcase TypeNumber:\r\n\t\treturn \"Number\"\r\n\tcase TypeString:\r\n\t\treturn \"String\"\r\n\tcase TypeObject:\r\n\t\treturn \"Object\"\r\n\tcase TypeBuffer:\r\n\t\treturn \"Buffer\"\r\n\tcase TypePointer:\r\n\t\treturn \"Pointer\"\r\n\tcase TypeLightFunc:\r\n\t\treturn \"LightFunc\"\r\n\tdefault:\r\n\t\treturn \"Unknown\"\r\n\t}\r\n}\r\n\r\ntype functionIndex struct {\r\n\tfunctions map[unsafe.Pointer]func(*Context) int\r\n\tsync.RWMutex\r\n}\r\n\r\ntype timerIndex struct {\r\n\tc float64\r\n\tsync.Mutex\r\n}\r\n\r\nfunc (t *timerIndex) get() float64 {\r\n\tt.Lock()\r\n\tdefer t.Unlock()\r\n\tt.c++\r\n\treturn t.c\r\n}\r\n\r\nfunc newFunctionIndex() *functionIndex {\r\n\treturn &functionIndex{\r\n\t\tfunctions: make(map[unsafe.Pointer]func(*Context) int, 0),\r\n\t}\r\n}\r\n\r\nfunc (i *functionIndex) add(fn func(*Context) int) unsafe.Pointer {\r\n\tptr := C.malloc(1)\r\n\r\n\ti.Lock()\r\n\ti.functions[ptr] = fn\r\n\ti.Unlock()\r\n\r\n\treturn ptr\r\n}\r\n\r\nfunc (i *functionIndex) get(ptr unsafe.Pointer) func(*Context) int {\r\n\ti.RLock()\r\n\tfn := i.functions[ptr]\r\n\ti.RUnlock()\r\n\r\n\treturn fn\r\n}\r\n\r\nfunc (i *functionIndex) delete(ptr unsafe.Pointer) {\r\n\ti.Lock()\r\n\tdelete(i.functions, ptr)\r\n\ti.Unlock()\r\n\r\n\tC.free(ptr)\r\n}\r\n\r\nfunc (i *functionIndex) destroy() {\r\n\ti.Lock()\r\n\r\n\tfor ptr, _ := range i.functions {\r\n\t\tdelete(i.functions, ptr)\r\n\t\tC.free(ptr)\r\n\t}\r\n\ti.Unlock()\r\n}\r\n\r\ntype ctxIndex struct {\r\n\tsync.RWMutex\r\n\tctxs map[unsafe.Pointer]*Context\r\n}\r\n\r\nfunc (ci *ctxIndex) add(ctx *Context) unsafe.Pointer {\r\n\r\n\tci.RLock()\r\n\tfor ptr, ctxPtr := range ci.ctxs {\r\n\t\tif ctxPtr == ctx {\r\n\t\t\tci.RUnlock()\r\n\t\t\treturn ptr\r\n\t\t}\r\n\t}\r\n\tci.RUnlock()\r\n\r\n\tci.Lock()\r\n\tfor ptr, ctxPtr := range ci.ctxs {\r\n\t\tif ctxPtr == ctx {\r\n\t\t\tci.Unlock()\r\n\t\t\treturn ptr\r\n\t\t}\r\n\t}\r\n\tptr := C.malloc(1)\r\n\tci.ctxs[ptr] = ctx\r\n\tci.Unlock()\r\n\r\n\treturn ptr\r\n}\r\n\r\nfunc (ci *ctxIndex) get(ptr unsafe.Pointer) *Context {\r\n\tci.RLock()\r\n\tctx := ci.ctxs[ptr]\r\n\tci.RUnlock()\r\n\treturn ctx\r\n}\r\n\r\nfunc (ci *ctxIndex) delete(ctx *Context) {\r\n\tci.Lock()\r\n\tfor ptr, ctxPtr := range ci.ctxs {\r\n\t\tif ctxPtr == ctx {\r\n\t\t\tdelete(ci.ctxs, ptr)\r\n\t\t\tC.free(ptr)\r\n\t\t\tci.Unlock()\r\n\t\t\treturn\r\n\t\t}\r\n\t}\r\n\tpanic(fmt.Sprintf(\"context (%p) doesn't exist\", ctx))\r\n}\r\n\r\nvar contexts *ctxIndex\r\n\r\nfunc init() {\r\n\tcontexts = &ctxIndex{\r\n\t\tctxs: make(map[unsafe.Pointer]*Context),\r\n\t}\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/394325706/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/394523203",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16860#issuecomment-394523203",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16860",
    "id": 394523203,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDUyMzIwMw==",
    "user": {
      "login": "jsvisa",
      "id": 3627395,
      "node_id": "MDQ6VXNlcjM2MjczOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3627395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsvisa",
      "html_url": "https://github.com/jsvisa",
      "followers_url": "https://api.github.com/users/jsvisa/followers",
      "following_url": "https://api.github.com/users/jsvisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsvisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jsvisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsvisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jsvisa/orgs",
      "repos_url": "https://api.github.com/users/jsvisa/repos",
      "events_url": "https://api.github.com/users/jsvisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jsvisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T22:40:13Z",
    "updated_at": "2018-06-04T22:40:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pheix I'm sorry, the cotent is correct. As what the error said:\r\n> vendor/gopkg.in/olebedev/go-duktape.v3/conts.go:14:11: undefined: Type\r\n> vendor/gopkg.in/olebedev/go-duktape.v3/timers.go:11:10: undefined: Context\r\n\r\nIt missing the struct `Type` and `Context` which were defined in *vendor/gopkg.in/olebedev/go-duktape.v3/duktape.go*, but the contents in *duktape.go* defines it.\r\n\r\nMaybe you can go into the project go-duktape.v3 and build it with a simple demo, like https://github.com/olebedev/go-duktape/blob/v3/README.md#usage to see the go-duktape.v3 is correct or not.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/394523203/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/395803712",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16860#issuecomment-395803712",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16860",
    "id": 395803712,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTgwMzcxMg==",
    "user": {
      "login": "pheix",
      "id": 6272762,
      "node_id": "MDQ6VXNlcjYyNzI3NjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6272762?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pheix",
      "html_url": "https://github.com/pheix",
      "followers_url": "https://api.github.com/users/pheix/followers",
      "following_url": "https://api.github.com/users/pheix/following{/other_user}",
      "gists_url": "https://api.github.com/users/pheix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pheix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pheix/subscriptions",
      "organizations_url": "https://api.github.com/users/pheix/orgs",
      "repos_url": "https://api.github.com/users/pheix/repos",
      "events_url": "https://api.github.com/users/pheix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pheix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-08T15:49:04Z",
    "updated_at": "2018-06-08T16:00:50Z",
    "author_association": "NONE",
    "body": "I have investigated the error - Golang installation was corrupted. Errors dissapear after these steps:\r\n\r\n1. Install Golang from sources via this man: https://golang.org/doc/install/source. The install chain is: 1) install Golang1.4 from binaries -> 2) Install Golang 1.10.2 (today version **1.10.3** is actual one) from repo. It's **important** to clear env after firts step (undef **CGO_ENABLED**) - I'm simply doing logout-login;\r\n\r\n2. If Golang have beed installed successfully, you will get **ALL TEST PASSED**\r\n\r\n3. Setup your env: I have added the next content to $HOME/.profile\r\n```bash\r\nif [ -d \"$HOME/go/bin\" ] ; then\r\n    PATH=\"$HOME/go/bin:$PATH\"\r\nfi\r\n\r\nexport GOPATH=$HOME/tmp/go\r\nexport GOROOT=$HOME/go\r\nexport GOARCH=amd64\r\nexport GOOS=linux\r\n```\r\n\r\n4. Create $HOME/tmp/go\r\n\r\n5. Reinit env - I'm simply doing logout-login once more ;)\r\n\r\n6. Install go additions (paragraph \"[Install additional tools](https://golang.org/doc/install/source#tools)\")\r\n\r\n7. Check that go-duktape installs successfully: `go get gopkg.in/olebedev/go-duktape.v3`\r\n\r\nAfter these step **go-ethereum** installs successfully on my VPS.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/395803712/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
