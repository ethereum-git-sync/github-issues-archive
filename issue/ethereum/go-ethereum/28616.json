{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28616",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28616/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28616/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28616/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/28616",
  "id": 2013726485,
  "node_id": "I_kwDOAOvK9854BwcV",
  "number": 28616,
  "title": "Statedb abstraction",
  "user": {
    "login": "rjl493456442",
    "id": 5959481,
    "node_id": "MDQ6VXNlcjU5NTk0ODE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rjl493456442",
    "html_url": "https://github.com/rjl493456442",
    "followers_url": "https://api.github.com/users/rjl493456442/followers",
    "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
    "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
    "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
    "repos_url": "https://api.github.com/users/rjl493456442/repos",
    "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-11-28T06:08:24Z",
  "updated_at": "2023-11-28T06:08:43Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Statedb has two data sources for state access: Trie and Snapshot.\r\n\r\nThe availability of the state trie is always ensured, allowing it to be utilized for state access and the computation of the post-transition hash.\r\n\r\nOn the other hand, the availability of the state snapshot is not guaranteed. It can be used exclusively for state access, offering a more efficient method.\r\n\r\nNow both trie and snapshot is hardcoded in statedb like\r\n\r\n```go\r\ntype StateDB struct {\r\n\ttrie      Trie\r\n\tsnaps  *snapshot.Tree        // Nil if snapshot is not available\r\n\tsnap    snapshot.Snapshot // Nil if snapshot is not available\r\n}\r\n```\r\n\r\nUnfortunately, this approach is not flexible enough. In path mode archive design, a new data source is required to access state from state history. \r\n\r\nBesides, in the foreseeable future, state snapshot will be merged into underlying pathdb and a comprehensive reader will be offered which can either access node or state. \r\n\r\nIn light of these considerations, I propose the implementation of a `StateReader` abstraction to ensure the necessary flexibility.\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28616/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28616/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
