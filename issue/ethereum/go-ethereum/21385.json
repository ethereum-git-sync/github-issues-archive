{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/21385",
  "id": 668032092,
  "node_id": "MDU6SXNzdWU2NjgwMzIwOTI=",
  "number": 21385,
  "title": "Ethereum transactions apparently not re-broadcast",
  "user": {
    "login": "trailtacos",
    "id": 6495805,
    "node_id": "MDQ6VXNlcjY0OTU4MDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6495805?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/trailtacos",
    "html_url": "https://github.com/trailtacos",
    "followers_url": "https://api.github.com/users/trailtacos/followers",
    "following_url": "https://api.github.com/users/trailtacos/following{/other_user}",
    "gists_url": "https://api.github.com/users/trailtacos/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/trailtacos/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/trailtacos/subscriptions",
    "organizations_url": "https://api.github.com/users/trailtacos/orgs",
    "repos_url": "https://api.github.com/users/trailtacos/repos",
    "events_url": "https://api.github.com/users/trailtacos/events{/privacy}",
    "received_events_url": "https://api.github.com/users/trailtacos/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1132754722,
      "node_id": "MDU6TGFiZWwxMTMyNzU0NzIy",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/need:more-information",
      "name": "need:more-information",
      "color": "db6fa3",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 35,
  "created_at": "2020-07-29T17:58:29Z",
  "updated_at": "2021-09-23T19:41:31Z",
  "closed_at": "2020-09-22T08:28:14Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Yesterday morning we got ourselves into a situation where there were a large number of transactions (with later nonces) held up behind a transaction that had too low gas price. At the time of investigation, none of these transactions appeared on etherescan as pending.\r\n\r\nThe gas price was updated on the transaction that had too low gas price, and it was very quickly mined and confirmed onto a block.\r\n\r\nAt this point the transactions that had previously been stuck had a high enough gas price, and didn't need re-writing, yet they didn't get mined, and continued to not appear on etherscan.  The fact that neither etherscan nor miners knew about these makes me assume that geth is not periodically re-broadcasting transactions, and because of high transaction volume, other nodes had decided to drop the transactions as they couldn't be mined (due to the fact that the earlier transaction had too low gas price).\r\n\r\nI was expecting geth to re-broadcast the transaction and for them to get mined.\r\n\r\nA node restart caused it to re-broadcast the pending transactions, and they were mined within minutes of the restart\r\n\r\n#### System information\r\n\r\nGeth version: 1.9.16-stable\r\nOS & Version: Linux Ubuntu 18.04\r\nCommit hash : ea3b00ad75aebaf1790fe0f8afc9fb7852c87716\r\n\r\n#### Expected behaviour\r\n\r\nGeth re-broadcasts transactions with later nonces when a transaction with an earlier nonce appears on the blockchain\r\n\r\n#### Actual behaviour\r\n\r\nApparently no re-broadcasting, or at least not in a time-frame that works for us (minutes)\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\n1. Send a transaction with a low gas price\r\n2. Wait for network congestion\r\n3. Send a transaction with a high enough gas price\r\n4. Observe that neither transaction appears on etherscan and other nodes (they have dropped these transactions)\r\n5. Re-write the transaction sent at stop 1 (same nonce) with a high enough gas price\r\n6. Observe the newly re-written transaction get mined\r\n7. Observe that the transaction sent at step 3 does not get mined.\r\n\r\nI am wondering if there is any way to get geth to re-broadcast a transaction in its pendingTransaction list.\r\n\r\nThis is very similar to https://github.com/ethereum/go-ethereum/issues/14669 - and is the same infrastructure that @vogelito reported there - although the script to copy pending Transactions from geth -> parity is no longer active in our environment.",
  "closed_by": {
    "login": "adamschmideg",
    "id": 208822,
    "node_id": "MDQ6VXNlcjIwODgyMg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/208822?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/adamschmideg",
    "html_url": "https://github.com/adamschmideg",
    "followers_url": "https://api.github.com/users/adamschmideg/followers",
    "following_url": "https://api.github.com/users/adamschmideg/following{/other_user}",
    "gists_url": "https://api.github.com/users/adamschmideg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/adamschmideg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/adamschmideg/subscriptions",
    "organizations_url": "https://api.github.com/users/adamschmideg/orgs",
    "repos_url": "https://api.github.com/users/adamschmideg/repos",
    "events_url": "https://api.github.com/users/adamschmideg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/adamschmideg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/666184746",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-666184746",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 666184746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NjE4NDc0Ng==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-30T07:22:56Z",
    "updated_at": "2020-07-30T07:22:56Z",
    "author_association": "MEMBER",
    "body": "This is a correct assessment. There is no rebroadcast in Geth. However usually when a new peer connection is made, all txs are exchanged so unless you have a super stable connection, the transactions should sill be leaking out. That said, it's not ideal, and it definitely makes it hard for transactions to flow across the network once initially broadcast. I'm open to suggestions on how we could best do this without spamming the network with txs over and over again. Definitely a good problem to think about.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/666184746/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/666507015",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-666507015",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 666507015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NjUwNzAxNQ==",
    "user": {
      "login": "trailtacos",
      "id": 6495805,
      "node_id": "MDQ6VXNlcjY0OTU4MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6495805?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trailtacos",
      "html_url": "https://github.com/trailtacos",
      "followers_url": "https://api.github.com/users/trailtacos/followers",
      "following_url": "https://api.github.com/users/trailtacos/following{/other_user}",
      "gists_url": "https://api.github.com/users/trailtacos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trailtacos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trailtacos/subscriptions",
      "organizations_url": "https://api.github.com/users/trailtacos/orgs",
      "repos_url": "https://api.github.com/users/trailtacos/repos",
      "events_url": "https://api.github.com/users/trailtacos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trailtacos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-30T16:27:47Z",
    "updated_at": "2020-07-30T16:27:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "My suggestion would be to perform selective broadcasts in the following situations:\r\n1) When a transaction with nonce = X is confirmed on the blockchain, broadcast pending transaction with nonce = X + 1\r\n2) Periodically, e.g. every 15 mins, broadcast transactions in the pending list with the lowest nonce for each sending account.\r\n\r\nGranted, this may spam the network (particularly the second case) when the node is handling lots of sending accounts.  In that case, perhaps both these cases could be amended to only do the broadcast if the gasPrice of the transaction about to be broadcast is within, say, 90% of the gasPrice that geth would use for a new transaction. This would avoid spamming with low gas price transactions.\r\n\r\nAlternatively, or potentially in addition, it would be very helpful to have an RPC call that could force a broadcast - the current strategies we have are either: Wait for a new peer, or restart the node - the former is problematic as we have no idea how long that could be, and the latter is problematic because its a manual process which is unscalable.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/666507015/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/671503751",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-671503751",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 671503751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTUwMzc1MQ==",
    "user": {
      "login": "farukterzioglu",
      "id": 476514,
      "node_id": "MDQ6VXNlcjQ3NjUxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/476514?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/farukterzioglu",
      "html_url": "https://github.com/farukterzioglu",
      "followers_url": "https://api.github.com/users/farukterzioglu/followers",
      "following_url": "https://api.github.com/users/farukterzioglu/following{/other_user}",
      "gists_url": "https://api.github.com/users/farukterzioglu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/farukterzioglu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/farukterzioglu/subscriptions",
      "organizations_url": "https://api.github.com/users/farukterzioglu/orgs",
      "repos_url": "https://api.github.com/users/farukterzioglu/repos",
      "events_url": "https://api.github.com/users/farukterzioglu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/farukterzioglu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-10T18:04:21Z",
    "updated_at": "2020-08-10T18:04:21Z",
    "author_association": "NONE",
    "body": "I can confirm I am having the same issue regularly. \r\nI am sending lots of transaction daily I need to restart the geth like once every 3 days.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/671503751/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/685690520",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-685690520",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 685690520,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTY5MDUyMA==",
    "user": {
      "login": "TurgutBtc",
      "id": 16779158,
      "node_id": "MDQ6VXNlcjE2Nzc5MTU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16779158?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TurgutBtc",
      "html_url": "https://github.com/TurgutBtc",
      "followers_url": "https://api.github.com/users/TurgutBtc/followers",
      "following_url": "https://api.github.com/users/TurgutBtc/following{/other_user}",
      "gists_url": "https://api.github.com/users/TurgutBtc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TurgutBtc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TurgutBtc/subscriptions",
      "organizations_url": "https://api.github.com/users/TurgutBtc/orgs",
      "repos_url": "https://api.github.com/users/TurgutBtc/repos",
      "events_url": "https://api.github.com/users/TurgutBtc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TurgutBtc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-02T12:11:21Z",
    "updated_at": "2020-09-02T12:11:21Z",
    "author_association": "NONE",
    "body": "This issue causes lots of problem on our side, when there are some pending txs on network, I try to override it, but new txs won’t be broadcasted.\r\nThe only solution for me is to restart the node. When will this problem fix.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/685690520/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/686345464",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-686345464",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 686345464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjM0NTQ2NA==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-03T08:41:52Z",
    "updated_at": "2020-09-03T08:41:52Z",
    "author_association": "MEMBER",
    "body": "This isn't a problem on a somewhat large network, where peers enter and drop off regularly, but only for small stable networks. I don't think we want to add a \"generic 15 m rebroadcast\" mechanism, since it'll increase the eth traffic humongously. Not sure if there's anything we can do for small networks. For example, adding rpc endpoint \"rebroadCastTxs\" would just be misused by users who try to solve some unrelated problem, and again, increase network spam. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/686345464/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/686347594",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-686347594",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 686347594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjM0NzU5NA==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-03T08:46:11Z",
    "updated_at": "2020-09-03T08:46:11Z",
    "author_association": "MEMBER",
    "body": "@TurgutBtc are you on mainnet or a private network? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/686347594/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/686348693",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-686348693",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 686348693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjM0ODY5Mw==",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-03T08:48:23Z",
    "updated_at": "2020-09-03T08:48:23Z",
    "author_association": "MEMBER",
    "body": "So one idea would be to resend transactions that depend on a transaction that was updated. So we rebroadcast every transaction with a higher nonce, if the tx with the lowest nonce gets updated. But this could also be used to spam.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/686348693/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/686350568",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-686350568",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 686350568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjM1MDU2OA==",
    "user": {
      "login": "TurgutBtc",
      "id": 16779158,
      "node_id": "MDQ6VXNlcjE2Nzc5MTU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16779158?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TurgutBtc",
      "html_url": "https://github.com/TurgutBtc",
      "followers_url": "https://api.github.com/users/TurgutBtc/followers",
      "following_url": "https://api.github.com/users/TurgutBtc/following{/other_user}",
      "gists_url": "https://api.github.com/users/TurgutBtc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TurgutBtc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TurgutBtc/subscriptions",
      "organizations_url": "https://api.github.com/users/TurgutBtc/orgs",
      "repos_url": "https://api.github.com/users/TurgutBtc/repos",
      "events_url": "https://api.github.com/users/TurgutBtc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TurgutBtc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-03T08:52:01Z",
    "updated_at": "2020-09-03T08:52:01Z",
    "author_association": "NONE",
    "body": "@holiman I'm on mainnet. But it's really problem for us.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/686350568/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/686390721",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-686390721",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 686390721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjM5MDcyMQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-03T10:10:20Z",
    "updated_at": "2020-09-03T10:10:20Z",
    "author_association": "MEMBER",
    "body": "@TurgutBtc could you elaborate a bit on your usecase? I don't think the repro is as simple as making a couple of transactions, I suspect that in order to hit this, a quite large volume of transactions are needed. \r\n\r\nSo I'm basically wondering, \r\n- What are the rate at which txs are sent to the node, \r\n- And do all those txs come from the same account, \r\n- And what are the various `txpool.xx` - queue-limits on the receiving node? \r\n\r\nI guess that all txs are kept locally, and saved to disk, hence why a reboot solves the problem. What's curious is why it doesn't trickle the transactions out 'organically' when peers are rotated. So, are there any particular peering constraints, or does it use the default number of peers?  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/686390721/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/686401901",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-686401901",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 686401901,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjQwMTkwMQ==",
    "user": {
      "login": "TurgutKanceltik",
      "id": 6383216,
      "node_id": "MDQ6VXNlcjYzODMyMTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6383216?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TurgutKanceltik",
      "html_url": "https://github.com/TurgutKanceltik",
      "followers_url": "https://api.github.com/users/TurgutKanceltik/followers",
      "following_url": "https://api.github.com/users/TurgutKanceltik/following{/other_user}",
      "gists_url": "https://api.github.com/users/TurgutKanceltik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TurgutKanceltik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TurgutKanceltik/subscriptions",
      "organizations_url": "https://api.github.com/users/TurgutKanceltik/orgs",
      "repos_url": "https://api.github.com/users/TurgutKanceltik/repos",
      "events_url": "https://api.github.com/users/TurgutKanceltik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TurgutKanceltik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-03T10:35:13Z",
    "updated_at": "2020-09-03T10:35:26Z",
    "author_association": "NONE",
    "body": "@holiman \r\n1) Each 5 sec. we are sending 1 tx. For example yesterday we spent totally 1320 txs. \r\n2) Yes all txs are from same account.\r\n3) How can i check `txpool.xx` - queue-limits ?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/686401901/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/694095542",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-694095542",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 694095542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDA5NTU0Mg==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-17T08:54:59Z",
    "updated_at": "2020-09-17T08:54:59Z",
    "author_association": "MEMBER",
    "body": "> How can i check txpool.xx - queue-limits ?\r\n\r\nUnless you specify some specific options in your commandline, the defautls are used (`geth -h | grep txpool`)\r\n\r\nWe need to implement a better disk-based txpool-backend to better handle transactions. We don't have any good solution currently for this problem. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/694095542/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/694097343",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-694097343",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 694097343,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDA5NzM0Mw==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-17T08:58:18Z",
    "updated_at": "2020-09-17T08:58:18Z",
    "author_association": "MEMBER",
    "body": "We've discussed this a bit further, but at least for now my personal belief is that rebroadcasting will never land because it's too easy to abuse and a successful attack could have catastrophic consequences (network wide amplification attack and self DDoS). The one solution I see working is to get nodes to keep the original data instead of dropping them on the floor, but for that we need a disk backend for the tx pool. There the catch is the performance hit of SPAM, because disk io is already out vulnerable point. We're pondering about how to implement it, current best idea (initial) is a leveldb database where txs are sorted by gas price and indexed by hash and account+nonce. Not sure how well this performs, and even then, we'd need some gas price cutoffs to drop stuff that's too cheap. Maybe that could be done by having a larger limit on the tx count (e.g. 4K in memory, 400K on disk). These are ideas that need a bit of exploring and prototyping.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/694097343/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/696582243",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-696582243",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 696582243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjU4MjI0Mw==",
    "user": {
      "login": "farukterzioglu",
      "id": 476514,
      "node_id": "MDQ6VXNlcjQ3NjUxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/476514?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/farukterzioglu",
      "html_url": "https://github.com/farukterzioglu",
      "followers_url": "https://api.github.com/users/farukterzioglu/followers",
      "following_url": "https://api.github.com/users/farukterzioglu/following{/other_user}",
      "gists_url": "https://api.github.com/users/farukterzioglu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/farukterzioglu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/farukterzioglu/subscriptions",
      "organizations_url": "https://api.github.com/users/farukterzioglu/orgs",
      "repos_url": "https://api.github.com/users/farukterzioglu/repos",
      "events_url": "https://api.github.com/users/farukterzioglu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/farukterzioglu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-22T08:29:47Z",
    "updated_at": "2020-09-22T08:29:47Z",
    "author_association": "NONE",
    "body": "Is this issue resolved and closed?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/696582243/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/696582648",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-696582648",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 696582648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjU4MjY0OA==",
    "user": {
      "login": "TurgutKanceltik",
      "id": 6383216,
      "node_id": "MDQ6VXNlcjYzODMyMTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6383216?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TurgutKanceltik",
      "html_url": "https://github.com/TurgutKanceltik",
      "followers_url": "https://api.github.com/users/TurgutKanceltik/followers",
      "following_url": "https://api.github.com/users/TurgutKanceltik/following{/other_user}",
      "gists_url": "https://api.github.com/users/TurgutKanceltik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TurgutKanceltik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TurgutKanceltik/subscriptions",
      "organizations_url": "https://api.github.com/users/TurgutKanceltik/orgs",
      "repos_url": "https://api.github.com/users/TurgutKanceltik/repos",
      "events_url": "https://api.github.com/users/TurgutKanceltik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TurgutKanceltik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-22T08:30:22Z",
    "updated_at": "2020-09-22T08:30:22Z",
    "author_association": "NONE",
    "body": "Yes, is this issue fixed?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/696582648/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/696602627",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-696602627",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 696602627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjYwMjYyNw==",
    "user": {
      "login": "adamschmideg",
      "id": 208822,
      "node_id": "MDQ6VXNlcjIwODgyMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/208822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamschmideg",
      "html_url": "https://github.com/adamschmideg",
      "followers_url": "https://api.github.com/users/adamschmideg/followers",
      "following_url": "https://api.github.com/users/adamschmideg/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamschmideg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamschmideg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamschmideg/subscriptions",
      "organizations_url": "https://api.github.com/users/adamschmideg/orgs",
      "repos_url": "https://api.github.com/users/adamschmideg/repos",
      "events_url": "https://api.github.com/users/adamschmideg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamschmideg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-22T09:12:55Z",
    "updated_at": "2020-09-22T09:12:55Z",
    "author_association": "MEMBER",
    "body": "No, there is no clear way to fix it. It would take quite some research and it is not a priority at the moment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/696602627/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 2,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/726620223",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-726620223",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 726620223,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjYyMDIyMw==",
    "user": {
      "login": "coinwalletdev",
      "id": 66109181,
      "node_id": "MDQ6VXNlcjY2MTA5MTgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66109181?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/coinwalletdev",
      "html_url": "https://github.com/coinwalletdev",
      "followers_url": "https://api.github.com/users/coinwalletdev/followers",
      "following_url": "https://api.github.com/users/coinwalletdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/coinwalletdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/coinwalletdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/coinwalletdev/subscriptions",
      "organizations_url": "https://api.github.com/users/coinwalletdev/orgs",
      "repos_url": "https://api.github.com/users/coinwalletdev/repos",
      "events_url": "https://api.github.com/users/coinwalletdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/coinwalletdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-13T08:45:23Z",
    "updated_at": "2020-11-13T09:08:38Z",
    "author_association": "NONE",
    "body": "Are you *really* sure this should be closed? How do you expect people to use geth if you can't broadcast TXs with it? The only way seems to have a parity node next to the geth node and use it to broadcast TXs? \r\n\r\nWe had some issues with TXs not being broadcasted when using 1.9.18 and the network was not stable (fees sky rocketing, chain split of 11/12/2020, etc...) but now we just updated to 1.9.24 and this seems to happen a lot more.\r\n\r\nHave to restart geth too often to get the TX broadcasted, this is not really manageable when having a lot of TXs to send.\r\n\r\nI'd be happy to help.  All transactions stack up on `txpool.content.pending`. `geth` recognize the generated TXID. We have the line starting with `Submitted...` on logs. The txid doesn't show up in the mempool of any block explorer.\r\n\r\nI'll try to add some debug statements in the source code to try to pinpoint issue next time it happens, if you have ideas where to add some, please do tell. Thanks.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/726620223/reactions",
      "total_count": 6,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/726698010",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-726698010",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 726698010,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjY5ODAxMA==",
    "user": {
      "login": "nnzo",
      "id": 46167928,
      "node_id": "MDQ6VXNlcjQ2MTY3OTI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/46167928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nnzo",
      "html_url": "https://github.com/nnzo",
      "followers_url": "https://api.github.com/users/nnzo/followers",
      "following_url": "https://api.github.com/users/nnzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/nnzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nnzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nnzo/subscriptions",
      "organizations_url": "https://api.github.com/users/nnzo/orgs",
      "repos_url": "https://api.github.com/users/nnzo/repos",
      "events_url": "https://api.github.com/users/nnzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nnzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-13T10:55:46Z",
    "updated_at": "2020-11-13T10:55:46Z",
    "author_association": "NONE",
    "body": "@coinwalletdev Honestly at this point geth is just a mess.. Probably better long term to just move infrastructure over to OpenEthereum or Besu.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/726698010/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/732234958",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-732234958",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 732234958,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMjIzNDk1OA==",
    "user": {
      "login": "PavelNiedoba",
      "id": 7063851,
      "node_id": "MDQ6VXNlcjcwNjM4NTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7063851?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PavelNiedoba",
      "html_url": "https://github.com/PavelNiedoba",
      "followers_url": "https://api.github.com/users/PavelNiedoba/followers",
      "following_url": "https://api.github.com/users/PavelNiedoba/following{/other_user}",
      "gists_url": "https://api.github.com/users/PavelNiedoba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PavelNiedoba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PavelNiedoba/subscriptions",
      "organizations_url": "https://api.github.com/users/PavelNiedoba/orgs",
      "repos_url": "https://api.github.com/users/PavelNiedoba/repos",
      "events_url": "https://api.github.com/users/PavelNiedoba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PavelNiedoba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-23T15:31:45Z",
    "updated_at": "2020-11-23T15:33:01Z",
    "author_association": "NONE",
    "body": "@Gbogdann93 @coinwalletdev  Please don't close issues just because you can not fix it. There may be somebody else who can.  This one is not difficult. It is real problem on main net. Real for business.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/732234958/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/732237267",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-732237267",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 732237267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMjIzNzI2Nw==",
    "user": {
      "login": "bogdangainusa",
      "id": 13803843,
      "node_id": "MDQ6VXNlcjEzODAzODQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/13803843?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bogdangainusa",
      "html_url": "https://github.com/bogdangainusa",
      "followers_url": "https://api.github.com/users/bogdangainusa/followers",
      "following_url": "https://api.github.com/users/bogdangainusa/following{/other_user}",
      "gists_url": "https://api.github.com/users/bogdangainusa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bogdangainusa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bogdangainusa/subscriptions",
      "organizations_url": "https://api.github.com/users/bogdangainusa/orgs",
      "repos_url": "https://api.github.com/users/bogdangainusa/repos",
      "events_url": "https://api.github.com/users/bogdangainusa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bogdangainusa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-23T15:35:39Z",
    "updated_at": "2020-11-23T15:35:39Z",
    "author_association": "NONE",
    "body": "@PavelNiedoba  i didn't close my previous issue, for me issue is no more present but it looks for others the issue is still there. Will add another comment if will face same problem.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/732237267/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/732240928",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-732240928",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 732240928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMjI0MDkyOA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-23T15:41:55Z",
    "updated_at": "2020-11-23T15:41:55Z",
    "author_association": "MEMBER",
    "body": "> This one is not difficult.\r\n\r\nAh yes, when you have no clue but t's easy to slap on a label and make it someone else's problem.\r\n\r\n[I've explained](https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-694097343) that this is **hard**. Actually, it is **very hard** to do in a way that won't allow someone to attack the network. In 2015 I've spent Xmas trying to prevent the network from going down exactly due to one of these rebroadcast issues. The network almost imploded under the load of that super light usage way way way back. Imagine what would happen now.\r\n\r\nRebroadcasting will never land (unless someone derives a miracle solution). The alternative is persistent txpools, but that has a ton of challenges around disk access so that we don't make chain processing even worse than it is now. It requires figuring out a good solution, prototyping, experimenting, etc.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/732240928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/732363186",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-732363186",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 732363186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMjM2MzE4Ng==",
    "user": {
      "login": "PavelNiedoba",
      "id": 7063851,
      "node_id": "MDQ6VXNlcjcwNjM4NTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7063851?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PavelNiedoba",
      "html_url": "https://github.com/PavelNiedoba",
      "followers_url": "https://api.github.com/users/PavelNiedoba/followers",
      "following_url": "https://api.github.com/users/PavelNiedoba/following{/other_user}",
      "gists_url": "https://api.github.com/users/PavelNiedoba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PavelNiedoba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PavelNiedoba/subscriptions",
      "organizations_url": "https://api.github.com/users/PavelNiedoba/orgs",
      "repos_url": "https://api.github.com/users/PavelNiedoba/repos",
      "events_url": "https://api.github.com/users/PavelNiedoba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PavelNiedoba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-23T19:04:19Z",
    "updated_at": "2020-11-23T19:04:19Z",
    "author_association": "NONE",
    "body": "I understand that rebroadcasting anything anytime is problem. But if I create bump fee transaction, this one needs to be broadcast which does not happen, which renders the the functionality useless. And I don't understand why it's very hard when restarting geth will do the broadcast? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/732363186/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/732399085",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-732399085",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 732399085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMjM5OTA4NQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-23T20:10:34Z",
    "updated_at": "2020-11-23T20:10:34Z",
    "author_association": "MEMBER",
    "body": "New transactions should most definitely be broadcast. Any diagnostic to back up the claim that it is not?\r\n\r\nRestarting Geth will connect to a new set of peers and will push any local transactions out, so that's kind of like a nuclear option.\r\n\r\nStill, it should most definitely broadcast anything newly signed, please provide some details as to why you think it does not.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/732399085/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/732717479",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-732717479",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 732717479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMjcxNzQ3OQ==",
    "user": {
      "login": "coinwalletdev",
      "id": 66109181,
      "node_id": "MDQ6VXNlcjY2MTA5MTgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66109181?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/coinwalletdev",
      "html_url": "https://github.com/coinwalletdev",
      "followers_url": "https://api.github.com/users/coinwalletdev/followers",
      "following_url": "https://api.github.com/users/coinwalletdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/coinwalletdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/coinwalletdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/coinwalletdev/subscriptions",
      "organizations_url": "https://api.github.com/users/coinwalletdev/orgs",
      "repos_url": "https://api.github.com/users/coinwalletdev/repos",
      "events_url": "https://api.github.com/users/coinwalletdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/coinwalletdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-24T07:44:38Z",
    "updated_at": "2020-11-24T07:48:02Z",
    "author_association": "NONE",
    "body": "> Still, it should most definitely broadcast anything newly signed, please provide some details as to why you think it does not.\r\n\r\ngeth creates a TX with a nonce `N`. For [some](https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-694097343) reason, this TX never gets into the mempool of other nodes. We/geth does not know that. We then create TXs with nonce of value `N+k` for any `k>0`. Those TXs never get broadcasted to other node mempools.\r\n\r\nOnce this happens you can:\r\n- use the nuclear option of restarting geth: this works but reduce service availability to our customers\r\n- rebroadcast the TX with nonce `N` not using geth: \r\n-- if the network is stable (if [this](https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-694097343) does not happen again), then geth will hopefully automatically rebroadcast all TXs with a nonce `N+k` with `k>0` once your TX of nonce `N` is in everybody's mempool\r\n-- if the network is not stable yet, then good luck you have to rebroadcast all TXs with a nonce `N+k` with `k>=0`.\r\n\r\nNote that in the hypothetical funky case that `geth` is the only ETH implementation available, the _nuclear option (restarting)_ seems to actually be the only available option...\r\n\r\nTo fix this, assuming that at some point the network will be stable, why not rebroadcast a TX with a nonce `N` if we can't broadcast a TX with a nonce `N+1`. This will mess up with the (re)broadcasting timing but at least fix up this issue for now, no?\r\n\r\n\r\n(N.B: i now understand better [infura post mortem](https://blog.infura.io/infura-mainnet-outage-post-mortem-2020-11-11/) - if you have to make an internal fix to geth just to get a TX broadcasted, no wonder it's a pain to update the versions)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/732717479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/732734728",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-732734728",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 732734728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMjczNDcyOA==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-24T08:20:49Z",
    "updated_at": "2020-11-24T08:20:49Z",
    "author_association": "MEMBER",
    "body": "Two things here: \r\n\r\n> But if I create bump fee transaction, this one needs to be broadcast which does not happen, which renders the the functionality useless.\r\n\r\nand\r\n\r\n>  For some reason, this TX never gets into the mempool of other nodes. We/geth does not know that. We then create TXs with nonce of value N+k for any k>0. Those TXs never get broadcasted to other node mempools.\r\n\r\nThese both seems to be highly different from the original report, and it would be better to open separate tickets for them, instead of posting on an already closed ticket  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/732734728/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/732790116",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-732790116",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 732790116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMjc5MDExNg==",
    "user": {
      "login": "coinwalletdev",
      "id": 66109181,
      "node_id": "MDQ6VXNlcjY2MTA5MTgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66109181?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/coinwalletdev",
      "html_url": "https://github.com/coinwalletdev",
      "followers_url": "https://api.github.com/users/coinwalletdev/followers",
      "following_url": "https://api.github.com/users/coinwalletdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/coinwalletdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/coinwalletdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/coinwalletdev/subscriptions",
      "organizations_url": "https://api.github.com/users/coinwalletdev/orgs",
      "repos_url": "https://api.github.com/users/coinwalletdev/repos",
      "events_url": "https://api.github.com/users/coinwalletdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/coinwalletdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-24T10:01:04Z",
    "updated_at": "2020-11-24T10:59:28Z",
    "author_association": "NONE",
    "body": "> But if I create bump fee transaction, this one needs to be broadcast which does not happen, which renders the the functionality useless.\r\n\r\nWhen trying to broadcast a TX with the same nonce but a different TXID, geth broadcast it well 99.9% of the time - the 0.1% of the time when geth thinks the TX is broadcasted and it is actually not broadcasted seems to be the root cause of the issue, no? \r\n\r\n----\r\n\r\n> These both seems to be highly different from the original report, and it would be better to open separate tickets for them, instead of posting on an already closed ticket\r\n\r\nThe core issue here is that geth doesn't successfully broadcast all TXs 100% of the time. \r\nMy example with the nonce was to show @karalabe that if one TX doesn't get rebroadcasted then on the same address all following TXs with higher nonce don't get broadcasted - hence geth definitely broadcast _nothing_ newly signed after this issue happens, effectively blocking broadcasting of any new transaction.\r\n\r\n----\r\n\r\nAs @CrispinFlowerday put it:\r\n> Yesterday morning we got ourselves into a situation where there were a large number of transactions (with later nonces) held up behind a transaction that had too low gas price. At the time of investigation, none of these transactions appeared on etherescan as pending.\r\n\r\nThis is exactly what I'm describing - geth doesn't brodcast TXs when the network is in bad shape (fees sky rocketing, chain splits, etc..)\r\n\r\n> At this point the transactions that had previously been stuck had a high enough gas price, and didn't need re-writing, yet they didn't get mined, and continued to not appear on etherscan\r\n\r\nThis is what I described with the sentence `-- if the network is not stable yet, then good luck you have to rebroadcast all TXs with a nonce N+k with k>=0.` (except he changed the TXID for the case k=0). The above proposed fix would just solve this issue though, so indeed this is not perfect.\r\n\r\n----\r\n\r\nI'd be happy to create another issue for that but there is already a lot of closed issue with what it seems exactly the same problem: https://github.com/ethereum/go-ethereum/issues/21167 https://github.com/ethereum/go-ethereum/issues/14669 - should I really create a new one? I chose this issue as it seemed to offer the most detailed explanation about its root.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/732790116/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/733075138",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-733075138",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 733075138,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMzA3NTEzOA==",
    "user": {
      "login": "PavelNiedoba",
      "id": 7063851,
      "node_id": "MDQ6VXNlcjcwNjM4NTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7063851?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PavelNiedoba",
      "html_url": "https://github.com/PavelNiedoba",
      "followers_url": "https://api.github.com/users/PavelNiedoba/followers",
      "following_url": "https://api.github.com/users/PavelNiedoba/following{/other_user}",
      "gists_url": "https://api.github.com/users/PavelNiedoba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PavelNiedoba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PavelNiedoba/subscriptions",
      "organizations_url": "https://api.github.com/users/PavelNiedoba/orgs",
      "repos_url": "https://api.github.com/users/PavelNiedoba/repos",
      "events_url": "https://api.github.com/users/PavelNiedoba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PavelNiedoba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-24T16:06:36Z",
    "updated_at": "2020-11-24T16:06:36Z",
    "author_association": "NONE",
    "body": "At simplecoin we send eth to clients from one account. If gas price rise rapidly we end up with chain of unconfirmed tx. If the chain gets long enough, it gets dropped (unknown by ethscan). I can do replace by fee and my geth will create tx wit new hash and same nonce, but ethscan will not show it.  It's not 0.1% problem.  It's maybe 5% problem of the times we need to bum fee. Sending eth from different address/wallet is not option too because we saw tx confirmed even when dropped by etherscan. We using super high fee to cope with this for now. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/733075138/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/733426387",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-733426387",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 733426387,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMzQyNjM4Nw==",
    "user": {
      "login": "coinwalletdev",
      "id": 66109181,
      "node_id": "MDQ6VXNlcjY2MTA5MTgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66109181?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/coinwalletdev",
      "html_url": "https://github.com/coinwalletdev",
      "followers_url": "https://api.github.com/users/coinwalletdev/followers",
      "following_url": "https://api.github.com/users/coinwalletdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/coinwalletdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/coinwalletdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/coinwalletdev/subscriptions",
      "organizations_url": "https://api.github.com/users/coinwalletdev/orgs",
      "repos_url": "https://api.github.com/users/coinwalletdev/repos",
      "events_url": "https://api.github.com/users/coinwalletdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/coinwalletdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-25T02:41:48Z",
    "updated_at": "2020-11-25T02:43:08Z",
    "author_association": "NONE",
    "body": ">  It's not 0.1% problem. It's maybe 5% problem of the times we need to bum fee.\r\n\r\nI guess it depends of the nodes you are connected too and the geth version you are running. Indeed I can't define precisely for the moment what I mean by 'the network is in bad shape' and this is what is lacking to reproduce the issue..\r\n\r\n> We using super high fee to cope with this for now.\r\n\r\nNext time this happens, could you try to rebroadcast the same TX with an identical TXID to show the problem is unrelated to fee bumping?\r\n\r\nGet the blocking TX in hex of the least nonce via (assuming `0xAA..AA` is the blocked address):\r\n```\r\n$ geth attach\r\n> eth.getRawTransaction(txpool.content.pending['0xAA..AA'][Object.keys(txpool.content.pending['0xAA.AA'])[0]]['hash'])\r\n0x.....\r\n```\r\nThen broadcast the TX using a non geth node (or online via https://etherscan.io/pushTx). This should make the TX appears on etherscan and geth should recognize it (and if you're lucky broadcast TXs with higher nonces)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/733426387/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/734294253",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-734294253",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 734294253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNDI5NDI1Mw==",
    "user": {
      "login": "begetan",
      "id": 17225934,
      "node_id": "MDQ6VXNlcjE3MjI1OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/17225934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/begetan",
      "html_url": "https://github.com/begetan",
      "followers_url": "https://api.github.com/users/begetan/followers",
      "following_url": "https://api.github.com/users/begetan/following{/other_user}",
      "gists_url": "https://api.github.com/users/begetan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/begetan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/begetan/subscriptions",
      "organizations_url": "https://api.github.com/users/begetan/orgs",
      "repos_url": "https://api.github.com/users/begetan/repos",
      "events_url": "https://api.github.com/users/begetan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/begetan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-26T13:19:28Z",
    "updated_at": "2020-11-26T13:19:28Z",
    "author_association": "NONE",
    "body": "We faced this not rebroadcasting issue recently.\r\n\r\nFor security reason we run public node separately, while the private nodes (behind the NAT) are used to broadcast TXs from internal signer.\r\n\r\nI check now that each node have only 16 peers, all of them are outgoing because of private connection of the node. So our configuration fit into definition of `very stable network`\r\n\r\nMy question is how to enforce private node to open more peers? Any way to make kind of `reset connected peers` instead of \"nuclear\" restart.\r\n\r\nI am not so comfortable to post into the closed issue. Is there any open issue, where we can track of the progress?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/734294253/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/757505167",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-757505167",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 757505167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NzUwNTE2Nw==",
    "user": {
      "login": "BigMurry",
      "id": 12495406,
      "node_id": "MDQ6VXNlcjEyNDk1NDA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/12495406?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BigMurry",
      "html_url": "https://github.com/BigMurry",
      "followers_url": "https://api.github.com/users/BigMurry/followers",
      "following_url": "https://api.github.com/users/BigMurry/following{/other_user}",
      "gists_url": "https://api.github.com/users/BigMurry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BigMurry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BigMurry/subscriptions",
      "organizations_url": "https://api.github.com/users/BigMurry/orgs",
      "repos_url": "https://api.github.com/users/BigMurry/repos",
      "events_url": "https://api.github.com/users/BigMurry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BigMurry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-10T16:40:38Z",
    "updated_at": "2021-01-10T16:40:38Z",
    "author_association": "NONE",
    "body": "this not rebroadcasting issue caused a lot of mess. The transaction is stored on our local node, but the rest of the world just don't have my transaction.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/757505167/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/757512770",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21385#issuecomment-757512770",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21385",
    "id": 757512770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NzUxMjc3MA==",
    "user": {
      "login": "farukterzioglu",
      "id": 476514,
      "node_id": "MDQ6VXNlcjQ3NjUxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/476514?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/farukterzioglu",
      "html_url": "https://github.com/farukterzioglu",
      "followers_url": "https://api.github.com/users/farukterzioglu/followers",
      "following_url": "https://api.github.com/users/farukterzioglu/following{/other_user}",
      "gists_url": "https://api.github.com/users/farukterzioglu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/farukterzioglu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/farukterzioglu/subscriptions",
      "organizations_url": "https://api.github.com/users/farukterzioglu/orgs",
      "repos_url": "https://api.github.com/users/farukterzioglu/repos",
      "events_url": "https://api.github.com/users/farukterzioglu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/farukterzioglu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-10T17:30:13Z",
    "updated_at": "2021-01-10T17:30:13Z",
    "author_association": "NONE",
    "body": "As addendum, we are constantly having this issue and the only solution we found is to restart the node, then it broadcasts all stuck transactions. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/757512770/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
