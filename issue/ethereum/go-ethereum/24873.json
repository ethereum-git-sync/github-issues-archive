{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24873",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24873/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24873/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24873/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/24873",
  "id": 1235123797,
  "node_id": "I_kwDOAOvK985Jnn5V",
  "number": 24873,
  "title": "proposal: optimize the memory usage when EnableMemory = true for StructLogger ",
  "user": {
    "login": "lispc",
    "id": 2833376,
    "node_id": "MDQ6VXNlcjI4MzMzNzY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2833376?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lispc",
    "html_url": "https://github.com/lispc",
    "followers_url": "https://api.github.com/users/lispc/followers",
    "following_url": "https://api.github.com/users/lispc/following{/other_user}",
    "gists_url": "https://api.github.com/users/lispc/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lispc/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lispc/subscriptions",
    "organizations_url": "https://api.github.com/users/lispc/orgs",
    "repos_url": "https://api.github.com/users/lispc/repos",
    "events_url": "https://api.github.com/users/lispc/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lispc/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    },
    {
      "id": 1132754722,
      "node_id": "MDU6TGFiZWwxMTMyNzU0NzIy",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/need:more-information",
      "name": "need:more-information",
      "color": "db6fa3",
      "default": false,
      "description": ""
    },
    {
      "id": 1817214928,
      "node_id": "MDU6TGFiZWwxODE3MjE0OTI4",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/area:tracer",
      "name": "area:tracer",
      "color": "2111b2",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2022-05-13T11:33:01Z",
  "updated_at": "2022-11-02T14:44:08Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# Rationale\r\n\r\nCurrent code does [a full memory snapshot for every execution step](https://github.com/ethereum/go-ethereum/blob/440c9fcf75d9d5383b72646a65d5e21fa7ab6a26/eth/tracers/logger/logger.go#L167).\r\n\r\nWhile for storage, [it only snapshots storage when the opcode accesses storage](https://github.com/ethereum/go-ethereum/blob/440c9fcf75d9d5383b72646a65d5e21fa7ab6a26/eth/tracers/logger/logger.go#L183) (SLOAD & SSTORE here).\r\n\r\nSo my proposal: only snapshot the full memory when the opcode updates memory. If not, we directly set memory in StructLog to empty slice.   Since evm cannot really free memory, when a StructLog of step contains empty memory, we know this means the step does not update memory, memory stays the same like previous step.\r\n\r\nReason for this proposal: When EnableMemory = true, if we trace a mainnet block, it costs several minutes but still failed even in a server running geth with 64GiB memory. If this proposal is applied, much fewer steps are needed to take a full snapshot of memory, so tracing will cost less time and memory.\r\n\r\nbackwards compatibility: it will break compatibility. But codes using this feature will be pretty easy to adapt the new interface.\r\n\r\n\r\n# Implementation\r\n\r\nAre you willing to implement this feature?: Yes",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24873/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24873/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1126006960",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24873#issuecomment-1126006960",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24873",
    "id": 1126006960,
    "node_id": "IC_kwDOAOvK985DHYCw",
    "user": {
      "login": "lispc",
      "id": 2833376,
      "node_id": "MDQ6VXNlcjI4MzMzNzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2833376?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lispc",
      "html_url": "https://github.com/lispc",
      "followers_url": "https://api.github.com/users/lispc/followers",
      "following_url": "https://api.github.com/users/lispc/following{/other_user}",
      "gists_url": "https://api.github.com/users/lispc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lispc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lispc/subscriptions",
      "organizations_url": "https://api.github.com/users/lispc/orgs",
      "repos_url": "https://api.github.com/users/lispc/repos",
      "events_url": "https://api.github.com/users/lispc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lispc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-13T12:31:53Z",
    "updated_at": "2022-05-13T12:31:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "another approach is to add a flag named \"MemoryTraceMode\".  \r\n\r\nMemoryTraceMode == 0: snapshot full memory every step; \r\nMemoryTraceMode == 1: snapshot full memory when updated;\r\nMemoryTraceMode == 2: snapshot memory diff",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1126006960/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1128804683",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24873#issuecomment-1128804683",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24873",
    "id": 1128804683,
    "node_id": "IC_kwDOAOvK985DSDFL",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-17T12:25:26Z",
    "updated_at": "2022-05-17T12:25:45Z",
    "author_association": "MEMBER",
    "body": "I agree this would be nice as traces are usually pretty heavy. We can deprecate `EnableMemory` and set `MemoryTraceMode` by default to a value that implies memory tracing is disabled for backwards-compatibility.\r\n\r\nI'll mark it for triage to see what others think.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1128804683/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1128904805",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24873#issuecomment-1128904805",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24873",
    "id": 1128904805,
    "node_id": "IC_kwDOAOvK985DSbhl",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-17T13:56:44Z",
    "updated_at": "2022-05-17T13:56:44Z",
    "author_association": "MEMBER",
    "body": "Can you please try this [patch](https://github.com/s1na/go-ethereum/tree/logger/mem-dedup) on the mainnet block you mentioned and see if it makes a big difference?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1128904805/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1129059211",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24873#issuecomment-1129059211",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24873",
    "id": 1129059211,
    "node_id": "IC_kwDOAOvK985DTBOL",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-17T16:11:03Z",
    "updated_at": "2022-05-17T16:15:27Z",
    "author_association": "MEMBER",
    "body": "This PR might also be of interest: https://github.com/ethereum/go-ethereum/pull/24895. By streaming the traces geth shouldn't blow up but it comes with some networking overhead. I'm curious how it performs on a big tx.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1129059211/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1132389318",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24873#issuecomment-1132389318",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24873",
    "id": 1132389318,
    "node_id": "IC_kwDOAOvK985DfuPG",
    "user": {
      "login": "lispc",
      "id": 2833376,
      "node_id": "MDQ6VXNlcjI4MzMzNzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2833376?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lispc",
      "html_url": "https://github.com/lispc",
      "followers_url": "https://api.github.com/users/lispc/followers",
      "following_url": "https://api.github.com/users/lispc/following{/other_user}",
      "gists_url": "https://api.github.com/users/lispc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lispc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lispc/subscriptions",
      "organizations_url": "https://api.github.com/users/lispc/orgs",
      "repos_url": "https://api.github.com/users/lispc/repos",
      "events_url": "https://api.github.com/users/lispc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lispc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-20T02:25:28Z",
    "updated_at": "2022-05-20T02:25:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "I analyzed(traced with mem trace enabled) every tx inside the mentioned block. There are 94 txs in total, 93 of them can be traced successfully(the biggest trace is of ~300MiB size, summing all is about ~900MiB), [the failed one(always makes geth OOM) is an Arbitrum Sequencer tx](https://etherscan.io/tx/0x0ef22f22aa244bdbf2e6b49b6b36f71717f9d18c2a3d7b24be52ff26abd1a220), having calldata of ~100KiB. In the Arbitrum contract, the calldata are copied to memory and hashed. So snapshots of mem for every step will be HUGE..",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1132389318/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1157402971",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24873#issuecomment-1157402971",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24873",
    "id": 1157402971,
    "node_id": "IC_kwDOAOvK985E_JFb",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-16T08:50:06Z",
    "updated_at": "2022-06-16T08:50:06Z",
    "author_association": "MEMBER",
    "body": "Triage discussion: an alternate variant would be to\r\n\r\n> If memory changes between step N and N+1, then output the full memory at N+1. \r\n\r\n\r\nThis means that at any scope-changing operation (revert, return, call-variants) at N, step N+1 would output the memory (unless it was empty in the old and new scope). And also output it at MSTORE/MSTORE8 ops. \r\n\r\nSuch format change would bring down the output size __a lot__, but still make it pretty easy to build a non-intelligent traceviewer. I want to avoid forcing a traceviewer to become a mini-evm.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1157402971/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1210794414",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24873#issuecomment-1210794414",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24873",
    "id": 1210794414,
    "node_id": "IC_kwDOAOvK985IK0Gu",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-10T14:56:40Z",
    "updated_at": "2022-08-10T14:56:40Z",
    "author_association": "MEMBER",
    "body": "cc @yann300",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1210794414/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
