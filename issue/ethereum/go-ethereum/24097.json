{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24097",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24097/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24097/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24097/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/24097",
  "id": 1077564944,
  "node_id": "I_kwDOAOvK985AOlYQ",
  "number": 24097,
  "title": "A crazy idea about MPT storage",
  "user": {
    "login": "qianbin",
    "id": 494645,
    "node_id": "MDQ6VXNlcjQ5NDY0NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/494645?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qianbin",
    "html_url": "https://github.com/qianbin",
    "followers_url": "https://api.github.com/users/qianbin/followers",
    "following_url": "https://api.github.com/users/qianbin/following{/other_user}",
    "gists_url": "https://api.github.com/users/qianbin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qianbin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qianbin/subscriptions",
    "organizations_url": "https://api.github.com/users/qianbin/orgs",
    "repos_url": "https://api.github.com/users/qianbin/repos",
    "events_url": "https://api.github.com/users/qianbin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qianbin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 268304226,
      "node_id": "MDU6TGFiZWwyNjgzMDQyMjY=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:docs",
      "name": "type:docs",
      "color": "fef2c0",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-12-11T15:20:00Z",
  "updated_at": "2021-12-15T07:53:22Z",
  "closed_at": "2021-12-15T07:53:22Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "If globally maintain a sequence number for each MPT commit, and assign the SN to each newly produced nodes, then a node can be uniquely identified by its path with SN.\r\n\r\nThat's to say, the hash pointer which causes state explosion can be dropped. Instead, using a 64-bit SN is enough. A scratch (branch)node storage scheme is like:\r\n\r\n```\r\npath || SN => Self-Hash || Child-SNs || Leaf-Value\r\n```\r\n\r\nFor a full branch node without leaf-value, the RLP encoded length is about 1/5 of current scheme. It will bring great benefits to disk IO/usage, and cache efficiency.\r\n\r\nDisadvantage: it's required to read all child-nodes to get their hashes, before recompute the parent node hash.\r\n\r\n",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24097/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24097/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/994460671",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24097#issuecomment-994460671",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24097",
    "id": 994460671,
    "node_id": "IC_kwDOAOvK9847RkP_",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-15T07:53:22Z",
    "updated_at": "2021-12-15T07:53:22Z",
    "author_association": "MEMBER",
    "body": "I don't fully understand how your scheme would work. \r\nHowever, @rjl493456442 has been working on a path-based schema, in https://github.com/ethereum/go-ethereum/pull/24087 . With that schema, we would only ever have one single trie on disk. And in order to support reorgs, we would have a memory-backed difflayer structure to represent the latest N blocks. \r\n\r\nAny change in this areas is a _huge_ amount of work. I'm going to close this ticket, since it's not really an actionable item from our perspective. \r\nIf you want to flesh out your proposal a bit more, we'd be happy to take a look at it. You can also study the PR linked above, and give comments/feedback on that one. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/994460671/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
