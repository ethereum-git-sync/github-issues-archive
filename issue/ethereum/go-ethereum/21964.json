{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21964",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21964/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21964/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21964/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/21964",
  "id": 757577804,
  "node_id": "MDU6SXNzdWU3NTc1Nzc4MDQ=",
  "number": 21964,
  "title": "CHT's are too new",
  "user": {
    "login": "sidhujag",
    "id": 6238042,
    "node_id": "MDQ6VXNlcjYyMzgwNDI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sidhujag",
    "html_url": "https://github.com/sidhujag",
    "followers_url": "https://api.github.com/users/sidhujag/followers",
    "following_url": "https://api.github.com/users/sidhujag/following{/other_user}",
    "gists_url": "https://api.github.com/users/sidhujag/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sidhujag/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
    "organizations_url": "https://api.github.com/users/sidhujag/orgs",
    "repos_url": "https://api.github.com/users/sidhujag/repos",
    "events_url": "https://api.github.com/users/sidhujag/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sidhujag/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 841716348,
      "node_id": "MDU6TGFiZWw4NDE3MTYzNDg=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/area:les",
      "name": "area:les",
      "color": "c2e0c6",
      "default": false,
      "description": null
    },
    {
      "id": 1132754722,
      "node_id": "MDU6TGFiZWwxMTMyNzU0NzIy",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/need:more-information",
      "name": "need:more-information",
      "color": "db6fa3",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2020-12-05T06:52:05Z",
  "updated_at": "2021-01-16T11:59:35Z",
  "closed_at": "2021-01-16T10:14:30Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "\r\nWe have a couple thousand les nodes running forming consensus externally in our blockchain network (syscoin)\r\n\r\nrelated to https://github.com/ethereum/go-ethereum/issues/19559 and https://github.com/ethereum/go-ethereum/issues/21337 we have seen a new CHT that you guys must have updated to only 6d old which may end up causing our network issues because LES nodes are not downloading blocks before the CHT (geth client simply does not return blocks before CHT (no peers I guess for serving those block headers)). This is why I was asking if we can simply refrain from updating CHT's too close to the tip. What was the motivation to make it so close to the tip?\r\n\r\nCan we make this configurable so we are always looking back atleast X weeks of headers?",
  "closed_by": {
    "login": "no-response[bot]",
    "id": 32965360,
    "node_id": "MDM6Qm90MzI5NjUzNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/26350515?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/no-response%5Bbot%5D",
    "html_url": "https://github.com/apps/no-response",
    "followers_url": "https://api.github.com/users/no-response%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/no-response%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/no-response%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/no-response%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/no-response%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/no-response%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/no-response%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/no-response%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/no-response%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21964/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21964/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/739137628",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21964#issuecomment-739137628",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21964",
    "id": 739137628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTEzNzYyOA==",
    "user": {
      "login": "sidhujag",
      "id": 6238042,
      "node_id": "MDQ6VXNlcjYyMzgwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sidhujag",
      "html_url": "https://github.com/sidhujag",
      "followers_url": "https://api.github.com/users/sidhujag/followers",
      "following_url": "https://api.github.com/users/sidhujag/following{/other_user}",
      "gists_url": "https://api.github.com/users/sidhujag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sidhujag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
      "organizations_url": "https://api.github.com/users/sidhujag/orgs",
      "repos_url": "https://api.github.com/users/sidhujag/repos",
      "events_url": "https://api.github.com/users/sidhujag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sidhujag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-05T07:09:01Z",
    "updated_at": "2020-12-05T07:15:22Z",
    "author_association": "NONE",
    "body": "To further clarify this question: https://github.com/ethereum/go-ethereum/issues/21337#issuecomment-662212817\r\n\r\n\r\nEven if we were verifying against the latest checkpoint, we don't *have* the data for the blockheader to be able to verify it using a merkle path to the latest CHT. So we could not verify it anyway. The problem is, when our nodes notice geth headers are missing (anything around 3w of blocks or newer that are not continuously linked) it will request it from geth, at which point geth never returns and thus the nodes are stuck in a data availability conundrum where they know theres data missing, that probably should be validated and they cannot get the data even though geth is functional and returning recent block headers.\r\n\r\nIn a fresh sync, the data won't be available and then when it tries to fetch blocks prior to CHT it fails, no response from geth on those getblockbynumber queries. When someone tries to move from Eth to Sys they have usually a week to do it or try to cancel and get a refund. Because of this we have to have atleast availability of this amount of blocks so cancellation fraud proofs can be done effectively, but also put a restriction on bandwidth as to how far back to verify those cross-chain transactions (which can be verified via merkle path to latest CHT sure, but still need the block header for that to re-hash it and that doesn't seem possible in this context)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/739137628/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/739445235",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21964#issuecomment-739445235",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21964",
    "id": 739445235,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTQ0NTIzNQ==",
    "user": {
      "login": "sidhujag",
      "id": 6238042,
      "node_id": "MDQ6VXNlcjYyMzgwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sidhujag",
      "html_url": "https://github.com/sidhujag",
      "followers_url": "https://api.github.com/users/sidhujag/followers",
      "following_url": "https://api.github.com/users/sidhujag/following{/other_user}",
      "gists_url": "https://api.github.com/users/sidhujag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sidhujag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
      "organizations_url": "https://api.github.com/users/sidhujag/orgs",
      "repos_url": "https://api.github.com/users/sidhujag/repos",
      "events_url": "https://api.github.com/users/sidhujag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sidhujag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-06T02:29:55Z",
    "updated_at": "2020-12-06T03:45:17Z",
    "author_association": "NONE",
    "body": "As a proposal to fix in short term can we remove the latest CHT? We are finding major *potential* issues with it on mainnet. I say potential because it has ability to stall our network in the right circumstance, Secondly if we can add a configuration so we can configure how many blocks or cht we want to look back to and third maybe we see if geth can and should serve headers prior to any checkpoints (in light mode) where they aren’t downloaded on sync but still served on request. I think changing cht to be atleast 2 or 3 weeks back will help in short term to put out the fire and then we try to solve the problem via config params.\r\n\r\nI know we can run our own geth fork but I refrain to do so as we want to stay on the official branch unless theres real good reasons like you find no reason to make the change (but I think its a good change or feature request, @rjl493456442 has already told me you guys have plans for the config change)\r\n\r\nThanks for reading!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/739445235/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/739490139",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21964#issuecomment-739490139",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21964",
    "id": 739490139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTQ5MDEzOQ==",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-06T11:36:36Z",
    "updated_at": "2020-12-06T11:36:36Z",
    "author_association": "MEMBER",
    "body": "> The problem is, when our nodes notice geth headers are missing (anything around 3w of blocks or newer that are not continuously linked) it will request it from geth, at which point geth never returns and thus the nodes are stuck in a data availability conundrum where they know theres data missing, that probably should be validated and they cannot get the data even though geth is functional and returning recent block headers\r\n\r\nCan you offer some more logs? With the latest CHTs, you can always fetch and verify all the block headers in the past. If it doesn't work, please open the issue and we should fix it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/739490139/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/739490601",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21964#issuecomment-739490601",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21964",
    "id": 739490601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTQ5MDYwMQ==",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-06T11:40:59Z",
    "updated_at": "2020-12-06T11:40:59Z",
    "author_association": "MEMBER",
    "body": "All in all, the best approach is to let the syncing start point configurable, and we have the plan to implement this feature. \r\n\r\nBut I don't think the issue is valid that the CHTs are too new. There are enough blocks upon and we hold the assumption that the blocks covered by the CHT are \"un-reorgable\". So CHTs is safe enough to be updated.\r\n\r\nAnd the CHT mechanism can always let you fetch the past block header by the number. So I don't get why your system will be stuck.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/739490601/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/761538858",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21964#issuecomment-761538858",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21964",
    "id": 761538858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MTUzODg1OA==",
    "user": {
      "login": "no-response[bot]",
      "id": 32965360,
      "node_id": "MDM6Qm90MzI5NjUzNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/26350515?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/no-response%5Bbot%5D",
      "html_url": "https://github.com/apps/no-response",
      "followers_url": "https://api.github.com/users/no-response%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/no-response%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/no-response%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/no-response%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/no-response%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/no-response%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/no-response%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/no-response%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/no-response%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-01-16T10:14:28Z",
    "updated_at": "2021-01-16T10:14:28Z",
    "author_association": "NONE",
    "body": "This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have more relevant information or answers to our questions so that we can investigate further.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/761538858/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
