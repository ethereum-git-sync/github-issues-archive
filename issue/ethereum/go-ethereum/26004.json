{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26004",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26004/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26004/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26004/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/26004",
  "id": 1412510602,
  "node_id": "I_kwDOAOvK985UMTOK",
  "number": 26004,
  "title": "ethclient: set independent http.Header for each request.",
  "user": {
    "login": "storyicon",
    "id": 29772821,
    "node_id": "MDQ6VXNlcjI5NzcyODIx",
    "avatar_url": "https://avatars.githubusercontent.com/u/29772821?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/storyicon",
    "html_url": "https://github.com/storyicon",
    "followers_url": "https://api.github.com/users/storyicon/followers",
    "following_url": "https://api.github.com/users/storyicon/following{/other_user}",
    "gists_url": "https://api.github.com/users/storyicon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/storyicon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/storyicon/subscriptions",
    "organizations_url": "https://api.github.com/users/storyicon/orgs",
    "repos_url": "https://api.github.com/users/storyicon/repos",
    "events_url": "https://api.github.com/users/storyicon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/storyicon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2022-10-18T03:22:11Z",
  "updated_at": "2022-10-20T14:34:05Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# Rationale\r\n\r\nThe blockchain gateway we use supports many additional request parameters, which are specified through the headers of the request. For example, we require the client to pass `x-consistent-hash-key` to support consistent hashing. In fact, if there are any additional extensions on the server side, HTTP Headers is the best way at present.\r\n\r\nHowever, I noticed that currently only global headers are supported:\r\nhttps://github.com/ethereum/go-ethereum/blob/master/rpc/http.go#L215\r\nIt cannot set headers for each independent request. (For example, only for `eth_sendRawTransaction`, without affecting other read requests)\r\n\r\n# Implementation\r\n\r\nI do not deny that there are other ways to achieve the goal, but if there are the following mechanisms, it will be very convenient:\r\n```\r\nclient, _ := ethclient.Dial(\"...\")\r\n\r\nheader := http.Header{}\r\nheader.Set(\"x-consistent-hash\", \"...\")\r\nctx := ethclient.WithHeaders(context.Background(), header)\r\nif err := client.SendTransaction(ctx, tx); err != nil {\r\n\tpanic(err)\r\n}\r\n```\r\n\r\nIf I propose a PR to add this feature, will it be merged?",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26004/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26004/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1283309381",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26004#issuecomment-1283309381",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26004",
    "id": 1283309381,
    "node_id": "IC_kwDOAOvK985Mfb9F",
    "user": {
      "login": "jsvisa",
      "id": 3627395,
      "node_id": "MDQ6VXNlcjM2MjczOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3627395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsvisa",
      "html_url": "https://github.com/jsvisa",
      "followers_url": "https://api.github.com/users/jsvisa/followers",
      "following_url": "https://api.github.com/users/jsvisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsvisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jsvisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsvisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jsvisa/orgs",
      "repos_url": "https://api.github.com/users/jsvisa/repos",
      "events_url": "https://api.github.com/users/jsvisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jsvisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-19T02:24:51Z",
    "updated_at": "2022-10-19T02:24:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Maybe you can check here for an example:\r\n\r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/fb75f11e87420ec25ff72f7eeeb741fa8974e87e/rpc/client_opt_test.go#L13-L25\r\n\r\ninitialize a new instance for sending the transaction",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1283309381/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1283590200",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26004#issuecomment-1283590200",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26004",
    "id": 1283590200,
    "node_id": "IC_kwDOAOvK985Mggg4",
    "user": {
      "login": "storyicon",
      "id": 29772821,
      "node_id": "MDQ6VXNlcjI5NzcyODIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/29772821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/storyicon",
      "html_url": "https://github.com/storyicon",
      "followers_url": "https://api.github.com/users/storyicon/followers",
      "following_url": "https://api.github.com/users/storyicon/following{/other_user}",
      "gists_url": "https://api.github.com/users/storyicon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/storyicon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/storyicon/subscriptions",
      "organizations_url": "https://api.github.com/users/storyicon/orgs",
      "repos_url": "https://api.github.com/users/storyicon/repos",
      "events_url": "https://api.github.com/users/storyicon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/storyicon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-19T08:00:07Z",
    "updated_at": "2022-10-19T08:26:26Z",
    "author_association": "NONE",
    "body": "Thank you @jsvisa , but as mentioned in my description:\r\n```\r\nIt cannot set headers for each independent request. (For example, only for eth_sendRawTransaction, without affecting other read requests)\r\n```\r\nThis method has relatively large limitations.\r\nIn contrast, in the client design of `HTTP` and `gRPC`, the entrance to set up header for each request is provided. I think this is a very basic design problem.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1283590200/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1284629511",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26004#issuecomment-1284629511",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26004",
    "id": 1284629511,
    "node_id": "IC_kwDOAOvK985MkeQH",
    "user": {
      "login": "lightclient",
      "id": 14004106,
      "node_id": "MDQ6VXNlcjE0MDA0MTA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14004106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lightclient",
      "html_url": "https://github.com/lightclient",
      "followers_url": "https://api.github.com/users/lightclient/followers",
      "following_url": "https://api.github.com/users/lightclient/following{/other_user}",
      "gists_url": "https://api.github.com/users/lightclient/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lightclient/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lightclient/subscriptions",
      "organizations_url": "https://api.github.com/users/lightclient/orgs",
      "repos_url": "https://api.github.com/users/lightclient/repos",
      "events_url": "https://api.github.com/users/lightclient/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lightclient/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-19T22:16:36Z",
    "updated_at": "2022-10-19T22:16:51Z",
    "author_association": "MEMBER",
    "body": "The way I've got around this in the past is by calling the inner `rpc.Client`'s `SetHeader` function. You could easily wrap the `ethclient` in a way that this is done automatically for certain calls. If we were to accept a PR for this, I think the best path would be to follow the design of `rpc.Client` and create a `SetHeader` function for `ethclient.Client`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1284629511/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1285051943",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26004#issuecomment-1285051943",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26004",
    "id": 1285051943,
    "node_id": "IC_kwDOAOvK985MmFYn",
    "user": {
      "login": "storyicon",
      "id": 29772821,
      "node_id": "MDQ6VXNlcjI5NzcyODIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/29772821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/storyicon",
      "html_url": "https://github.com/storyicon",
      "followers_url": "https://api.github.com/users/storyicon/followers",
      "following_url": "https://api.github.com/users/storyicon/following{/other_user}",
      "gists_url": "https://api.github.com/users/storyicon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/storyicon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/storyicon/subscriptions",
      "organizations_url": "https://api.github.com/users/storyicon/orgs",
      "repos_url": "https://api.github.com/users/storyicon/repos",
      "events_url": "https://api.github.com/users/storyicon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/storyicon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-20T07:12:03Z",
    "updated_at": "2022-10-20T07:12:03Z",
    "author_association": "NONE",
    "body": "Thanks @lightclient \r\nThis design still sets the same header for all requests, which has great limitations:\r\n![image](https://user-images.githubusercontent.com/29772821/196880273-b027f9ad-97df-4983-a36c-f9b38349b58c.png)\r\nIn a consistent hash scenario, each request may require a different consistent hash. \r\nThere are more scenes. It should be a common requirement.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1285051943/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1285381132",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26004#issuecomment-1285381132",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26004",
    "id": 1285381132,
    "node_id": "IC_kwDOAOvK985MnVwM",
    "user": {
      "login": "lightclient",
      "id": 14004106,
      "node_id": "MDQ6VXNlcjE0MDA0MTA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14004106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lightclient",
      "html_url": "https://github.com/lightclient",
      "followers_url": "https://api.github.com/users/lightclient/followers",
      "following_url": "https://api.github.com/users/lightclient/following{/other_user}",
      "gists_url": "https://api.github.com/users/lightclient/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lightclient/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lightclient/subscriptions",
      "organizations_url": "https://api.github.com/users/lightclient/orgs",
      "repos_url": "https://api.github.com/users/lightclient/repos",
      "events_url": "https://api.github.com/users/lightclient/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lightclient/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-20T11:40:59Z",
    "updated_at": "2022-10-20T11:40:59Z",
    "author_association": "MEMBER",
    "body": "You can call `SetHeader` again after the call is made to unset the header.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1285381132/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1285656549",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26004#issuecomment-1285656549",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26004",
    "id": 1285656549,
    "node_id": "IC_kwDOAOvK985MoY_l",
    "user": {
      "login": "storyicon",
      "id": 29772821,
      "node_id": "MDQ6VXNlcjI5NzcyODIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/29772821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/storyicon",
      "html_url": "https://github.com/storyicon",
      "followers_url": "https://api.github.com/users/storyicon/followers",
      "following_url": "https://api.github.com/users/storyicon/following{/other_user}",
      "gists_url": "https://api.github.com/users/storyicon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/storyicon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/storyicon/subscriptions",
      "organizations_url": "https://api.github.com/users/storyicon/orgs",
      "repos_url": "https://api.github.com/users/storyicon/repos",
      "events_url": "https://api.github.com/users/storyicon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/storyicon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-20T14:34:05Z",
    "updated_at": "2022-10-20T14:34:05Z",
    "author_association": "NONE",
    "body": "Sorry @lightclient , I don't think this is a robust solution. This is based on the assumption that `SetHeader` and `doRequest` are atomic operations, which will cause confusion when concurrent requests are made.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1285656549/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
