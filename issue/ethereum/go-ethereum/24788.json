{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24788",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24788/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24788/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24788/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/24788",
  "id": 1219518038,
  "node_id": "I_kwDOAOvK985IsF5W",
  "number": 24788,
  "title": "block timestamp is older than transaction creation time",
  "user": {
    "login": "mlesterdampios",
    "id": 42646513,
    "node_id": "MDQ6VXNlcjQyNjQ2NTEz",
    "avatar_url": "https://avatars.githubusercontent.com/u/42646513?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mlesterdampios",
    "html_url": "https://github.com/mlesterdampios",
    "followers_url": "https://api.github.com/users/mlesterdampios/followers",
    "following_url": "https://api.github.com/users/mlesterdampios/following{/other_user}",
    "gists_url": "https://api.github.com/users/mlesterdampios/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mlesterdampios/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mlesterdampios/subscriptions",
    "organizations_url": "https://api.github.com/users/mlesterdampios/orgs",
    "repos_url": "https://api.github.com/users/mlesterdampios/repos",
    "events_url": "https://api.github.com/users/mlesterdampios/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mlesterdampios/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 268304226,
      "node_id": "MDU6TGFiZWwyNjgzMDQyMjY=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:docs",
      "name": "type:docs",
      "color": "fef2c0",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-04-29T00:55:00Z",
  "updated_at": "2022-04-29T12:54:03Z",
  "closed_at": "2022-04-29T12:54:03Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I am trying to do some time-sensitive application.\r\nI just noticed that when I created a transaction at let say `12:00:01`,\r\nit's block timestamp is showing at `11:59:XX`\r\n\r\nCorrect me if i'm wrong.\r\nI understand that blocks that started mining can contain new transactions that's why my tx falls to the last block.\r\n\r\nMy main question is, how can I assure that my transaction will fall into the earliest valid block, especially when the condition is `block.timestamp >= someDeadline` ?\r\n\r\nI made some readings here: https://github.com/ethereum/go-ethereum/issues/24152\r\nBut I still got no idea on how to precisely do timers with this.\r\n\r\nThank you so much!",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24788/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24788/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1112920408",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24788#issuecomment-1112920408",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24788",
    "id": 1112920408,
    "node_id": "IC_kwDOAOvK985CVdFY",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-29T06:35:25Z",
    "updated_at": "2022-04-29T06:35:36Z",
    "author_association": "MEMBER",
    "body": "The timestamp of block is assigned when the mining block is constructed. In the next ten seconds (because the average block time is around 12 seconds), miner will try to **re-generate** the mining block with latest pending transaction list  every three seconds, with the **origin timestamp**, to increase the revenue. So it can explain why your transaction is included in a block with smaller timestamp.\r\n\r\n> My main question is, how can I assure that my transaction will fall into the earliest valid block, especially when the condition is block.timestamp >= someDeadline ?\r\n\r\nI will recommend you to set the condition in your contract. Solidity does support to retrieve the timestamp of the current block, so you can compare and control the flow? https://docs.soliditylang.org/en/v0.8.13/units-and-global-variables.html",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1112920408/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
