{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23404",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23404/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23404/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23404/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/23404",
  "id": 971166450,
  "node_id": "MDU6SXNzdWU5NzExNjY0NTA=",
  "number": 23404,
  "title": "How to get TX hashes from a block that matched a bloom filter?",
  "user": {
    "login": "krasi-georgiev",
    "id": 8903888,
    "node_id": "MDQ6VXNlcjg5MDM4ODg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8903888?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krasi-georgiev",
    "html_url": "https://github.com/krasi-georgiev",
    "followers_url": "https://api.github.com/users/krasi-georgiev/followers",
    "following_url": "https://api.github.com/users/krasi-georgiev/following{/other_user}",
    "gists_url": "https://api.github.com/users/krasi-georgiev/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krasi-georgiev/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krasi-georgiev/subscriptions",
    "organizations_url": "https://api.github.com/users/krasi-georgiev/orgs",
    "repos_url": "https://api.github.com/users/krasi-georgiev/repos",
    "events_url": "https://api.github.com/users/krasi-georgiev/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krasi-georgiev/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 268304226,
      "node_id": "MDU6TGFiZWwyNjgzMDQyMjY=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:docs",
      "name": "type:docs",
      "color": "fef2c0",
      "default": false,
      "description": null
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2021-08-15T15:55:29Z",
  "updated_at": "2023-03-22T15:07:45Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I am trying to monitor all TX to a given function in a contract that failed to monitor the cost on these.\r\nThe approach I took is to subscribe to `client.SubscribeNewHead` and use bloom filter to filter only blocks that match a given event. Now I am wondering without sending a query for each function how to figure out what is the TX index in the block that matched the filter or another way to just get the TX hash of the TX of interest. Then can use a single call to just get the receipt and record the gas if the TX has failed.\r\nI would be interested to know if there is another way or how to make my approach work.\r\n\r\n```\r\nsubs, err := self.client.SubscribeNewHead(ctx, events)\r\n..\r\n...\r\ncase event := <-events:\r\n\tif event.Bloom.Test(abi.Events[\"NonceSubmitted\"].ID.Bytes()) {\r\n\t\trcpt,err := client.TransactionReceipt(?????)\r\n\t}\r\n\r\n```",
  "closed_by": {
    "login": "krasi-georgiev",
    "id": 8903888,
    "node_id": "MDQ6VXNlcjg5MDM4ODg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8903888?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krasi-georgiev",
    "html_url": "https://github.com/krasi-georgiev",
    "followers_url": "https://api.github.com/users/krasi-georgiev/followers",
    "following_url": "https://api.github.com/users/krasi-georgiev/following{/other_user}",
    "gists_url": "https://api.github.com/users/krasi-georgiev/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krasi-georgiev/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krasi-georgiev/subscriptions",
    "organizations_url": "https://api.github.com/users/krasi-georgiev/orgs",
    "repos_url": "https://api.github.com/users/krasi-georgiev/repos",
    "events_url": "https://api.github.com/users/krasi-georgiev/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krasi-georgiev/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23404/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23404/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/900907339",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23404#issuecomment-900907339",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23404",
    "id": 900907339,
    "node_id": "IC_kwDOAOvK9841ssFL",
    "user": {
      "login": "krasi-georgiev",
      "id": 8903888,
      "node_id": "MDQ6VXNlcjg5MDM4ODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8903888?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/krasi-georgiev",
      "html_url": "https://github.com/krasi-georgiev",
      "followers_url": "https://api.github.com/users/krasi-georgiev/followers",
      "following_url": "https://api.github.com/users/krasi-georgiev/following{/other_user}",
      "gists_url": "https://api.github.com/users/krasi-georgiev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/krasi-georgiev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krasi-georgiev/subscriptions",
      "organizations_url": "https://api.github.com/users/krasi-georgiev/orgs",
      "repos_url": "https://api.github.com/users/krasi-georgiev/repos",
      "events_url": "https://api.github.com/users/krasi-georgiev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/krasi-georgiev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-18T08:04:22Z",
    "updated_at": "2021-08-18T08:04:22Z",
    "author_association": "NONE",
    "body": "ping :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/900907339/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/900952780",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23404#issuecomment-900952780",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23404",
    "id": 900952780,
    "node_id": "IC_kwDOAOvK9841s3LM",
    "user": {
      "login": "krasi-georgiev",
      "id": 8903888,
      "node_id": "MDQ6VXNlcjg5MDM4ODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8903888?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/krasi-georgiev",
      "html_url": "https://github.com/krasi-georgiev",
      "followers_url": "https://api.github.com/users/krasi-georgiev/followers",
      "following_url": "https://api.github.com/users/krasi-georgiev/following{/other_user}",
      "gists_url": "https://api.github.com/users/krasi-georgiev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/krasi-georgiev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krasi-georgiev/subscriptions",
      "organizations_url": "https://api.github.com/users/krasi-georgiev/orgs",
      "repos_url": "https://api.github.com/users/krasi-georgiev/repos",
      "events_url": "https://api.github.com/users/krasi-georgiev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/krasi-georgiev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-18T09:11:39Z",
    "updated_at": "2021-08-18T09:12:07Z",
    "author_association": "NONE",
    "body": "I got it, you need to run another query to get the full block and match the TX function signature\r\n\r\n```\r\nblock, err := self.client.BlockByHash(self.ctx, event.Hash())\r\nfor _, tx := range block.Transactions() {\r\n\tif len(tx.Data()) > 0 && bytes.Equal(tx.Data()[:4], abi.Methods[\"submitMiningSolution\"].ID[:4])\t\r\n\t{\r\n       ....\r\n\t}\r\n}\r\n```\r\n\r\nif anyone can think of an easier solution please comment ;)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/900952780/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1027995923",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23404#issuecomment-1027995923",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23404",
    "id": 1027995923,
    "node_id": "IC_kwDOAOvK9849RfkT",
    "user": {
      "login": "krasi-georgiev",
      "id": 8903888,
      "node_id": "MDQ6VXNlcjg5MDM4ODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8903888?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/krasi-georgiev",
      "html_url": "https://github.com/krasi-georgiev",
      "followers_url": "https://api.github.com/users/krasi-georgiev/followers",
      "following_url": "https://api.github.com/users/krasi-georgiev/following{/other_user}",
      "gists_url": "https://api.github.com/users/krasi-georgiev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/krasi-georgiev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krasi-georgiev/subscriptions",
      "organizations_url": "https://api.github.com/users/krasi-georgiev/orgs",
      "repos_url": "https://api.github.com/users/krasi-georgiev/repos",
      "events_url": "https://api.github.com/users/krasi-georgiev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/krasi-georgiev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-02T14:29:19Z",
    "updated_at": "2022-02-02T14:30:51Z",
    "author_association": "NONE",
    "body": "re-opening as this is easy to break when people use custom function signatures.\r\n\r\nIs there no way to get the logs that match a bloom filter without getting TX receipts for all TX in a block?\r\n\r\nthis is to save hundreds of calls to `eth_getTransactionReceipt` for each block  or at least get all blocks logs in a single call?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1027995923/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1150693484",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23404#issuecomment-1150693484",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23404",
    "id": 1150693484,
    "node_id": "IC_kwDOAOvK985EljBs",
    "user": {
      "login": "krasi-georgiev",
      "id": 8903888,
      "node_id": "MDQ6VXNlcjg5MDM4ODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8903888?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/krasi-georgiev",
      "html_url": "https://github.com/krasi-georgiev",
      "followers_url": "https://api.github.com/users/krasi-georgiev/followers",
      "following_url": "https://api.github.com/users/krasi-georgiev/following{/other_user}",
      "gists_url": "https://api.github.com/users/krasi-georgiev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/krasi-georgiev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krasi-georgiev/subscriptions",
      "organizations_url": "https://api.github.com/users/krasi-georgiev/orgs",
      "repos_url": "https://api.github.com/users/krasi-georgiev/repos",
      "events_url": "https://api.github.com/users/krasi-georgiev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/krasi-georgiev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-09T05:41:32Z",
    "updated_at": "2022-06-09T05:42:18Z",
    "author_association": "NONE",
    "body": "some input from the smarter people :thinking: ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1150693484/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1164296038",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23404#issuecomment-1164296038",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23404",
    "id": 1164296038,
    "node_id": "IC_kwDOAOvK985FZb9m",
    "user": {
      "login": "krasi-georgiev",
      "id": 8903888,
      "node_id": "MDQ6VXNlcjg5MDM4ODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8903888?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/krasi-georgiev",
      "html_url": "https://github.com/krasi-georgiev",
      "followers_url": "https://api.github.com/users/krasi-georgiev/followers",
      "following_url": "https://api.github.com/users/krasi-georgiev/following{/other_user}",
      "gists_url": "https://api.github.com/users/krasi-georgiev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/krasi-georgiev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krasi-georgiev/subscriptions",
      "organizations_url": "https://api.github.com/users/krasi-georgiev/orgs",
      "repos_url": "https://api.github.com/users/krasi-georgiev/repos",
      "events_url": "https://api.github.com/users/krasi-georgiev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/krasi-georgiev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-23T11:31:49Z",
    "updated_at": "2022-06-23T11:31:49Z",
    "author_association": "NONE",
    "body": "ping",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1164296038/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1479083964",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23404#issuecomment-1479083964",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23404",
    "id": 1479083964,
    "node_id": "IC_kwDOAOvK985YKQe8",
    "user": {
      "login": "jsvisa",
      "id": 3627395,
      "node_id": "MDQ6VXNlcjM2MjczOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3627395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsvisa",
      "html_url": "https://github.com/jsvisa",
      "followers_url": "https://api.github.com/users/jsvisa/followers",
      "following_url": "https://api.github.com/users/jsvisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsvisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jsvisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsvisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jsvisa/orgs",
      "repos_url": "https://api.github.com/users/jsvisa/repos",
      "events_url": "https://api.github.com/users/jsvisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jsvisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-22T08:16:02Z",
    "updated_at": "2023-03-22T08:16:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "How about obtaining a filter for Event Logs (if the function emits Events), and then retrieving the receipts for those transactions instead of filtering with tx.input? Another advantage of this approach is that if the function is called within a contract, tx.input may not be able to filter it out.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1479083964/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1479132143",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23404#issuecomment-1479132143",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23404",
    "id": 1479132143,
    "node_id": "IC_kwDOAOvK985YKcPv",
    "user": {
      "login": "krasi-georgiev",
      "id": 8903888,
      "node_id": "MDQ6VXNlcjg5MDM4ODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8903888?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/krasi-georgiev",
      "html_url": "https://github.com/krasi-georgiev",
      "followers_url": "https://api.github.com/users/krasi-georgiev/followers",
      "following_url": "https://api.github.com/users/krasi-georgiev/following{/other_user}",
      "gists_url": "https://api.github.com/users/krasi-georgiev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/krasi-georgiev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krasi-georgiev/subscriptions",
      "organizations_url": "https://api.github.com/users/krasi-georgiev/orgs",
      "repos_url": "https://api.github.com/users/krasi-georgiev/repos",
      "events_url": "https://api.github.com/users/krasi-georgiev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/krasi-georgiev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-22T08:54:40Z",
    "updated_at": "2023-03-22T08:54:40Z",
    "author_association": "NONE",
    "body": "sorry, didn't understand, can you give an example code?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1479132143/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1479196933",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23404#issuecomment-1479196933",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23404",
    "id": 1479196933,
    "node_id": "IC_kwDOAOvK985YKsEF",
    "user": {
      "login": "jsvisa",
      "id": 3627395,
      "node_id": "MDQ6VXNlcjM2MjczOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3627395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsvisa",
      "html_url": "https://github.com/jsvisa",
      "followers_url": "https://api.github.com/users/jsvisa/followers",
      "following_url": "https://api.github.com/users/jsvisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsvisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jsvisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsvisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jsvisa/orgs",
      "repos_url": "https://api.github.com/users/jsvisa/repos",
      "events_url": "https://api.github.com/users/jsvisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jsvisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-22T09:26:06Z",
    "updated_at": "2023-03-22T09:26:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Let's say, if we are interested with [UniswapV2 Factory's `createPair` function](https://etherscan.io/address/0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f#code)\r\n\r\n```\r\n    function createPair(address tokenA, address tokenB) external returns (address pair) {\r\n        require(tokenA != tokenB, 'UniswapV2: IDENTICAL_ADDRESSES');\r\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\r\n        require(token0 != address(0), 'UniswapV2: ZERO_ADDRESS');\r\n        require(getPair[token0][token1] == address(0), 'UniswapV2: PAIR_EXISTS'); // single check is sufficient\r\n        bytes memory bytecode = type(UniswapV2Pair).creationCode;\r\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\r\n        assembly {\r\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\r\n        }\r\n        IUniswapV2Pair(pair).initialize(token0, token1);\r\n        getPair[token0][token1] = pair;\r\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\r\n        allPairs.push(pair);\r\n        emit PairCreated(token0, token1, pair, allPairs.length);\r\n    })\r\n```\r\n\r\nAnd this function will emit `PairCreated(token0, token1, pair, allPairs.length)`  this event, so we can subscribe to this event:\r\n\r\n1. register a new filter, the json rpc like below:\r\n\r\n\r\n```json\r\n{\r\n  \"jsonrpc\": \"2.0\",\r\n  \"method\": \"eth_newFilter\",\r\n  \"params\": [\r\n    {\r\n      \"topics\": [\r\n        \"0x0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9\"\r\n      ],\r\n      \"fromBlock\": \"latest\",\r\n      \"toBlock\": \"latest\",\r\n      \"address\": [\r\n        \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\"\r\n      ]\r\n    }\r\n  ],\r\n  \"id\": 0\r\n}\r\n```\r\n\r\nhint: topic `0x0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9` is the `sha3(\"PairCreated(address,address,address,uint256)\")`\r\n\r\nAnd the go-ethereum will return a filter id such as:\r\n\r\n\r\n```json\r\n{\r\n  \"jsonrpc\": \"2.0\",\r\n  \"id\": 0,\r\n  \"result\": \"0xc8454563d79f4eae949af390fa1743af\"\r\n}\r\n```\r\n\r\n2. We keep iterating through this filter until we find the result that interests us. json rpc as below:\r\n\r\n```\r\n{\r\n  \"jsonrpc\": \"2.0\",\r\n  \"method\": \"eth_getFilterChanges\",\r\n  \"params\": [\r\n    \"0xc8454563d79f4eae949af390fa1743af\"\r\n  ],\r\n  \"id\": 1\r\n}\r\n```\r\n\r\n\r\nAnd the python code as below:\r\n\r\n\r\n<details>\r\n  <summary>Python code</summary>\r\n\r\n```python\r\nimport json\r\nfrom web3 import Web3\r\nimport asyncio\r\n\r\n# add your blockchain connection information\r\nprovider_uri = \"\"\r\nweb3 = Web3(Web3.HTTPProvider(provider_uri))\r\n\r\n# uniswap address and abi\r\nuniswap_router = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\"\r\nuniswap_factory = \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\"\r\n\r\nuniswap_factory_abi = json.loads(\r\n    \"\"\"\r\n[{\r\n  \"anonymous\": false,\r\n  \"inputs\": [\r\n    { \"indexed\": true, \"internalType\": \"address\", \"name\": \"token0\", \"type\": \"address\" },\r\n    { \"indexed\": true, \"internalType\": \"address\", \"name\": \"token1\", \"type\": \"address\" },\r\n    { \"indexed\": false, \"internalType\": \"address\", \"name\": \"pair\", \"type\": \"address\" },\r\n    { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }\r\n  ],\r\n  \"name\": \"PairCreated\",\r\n  \"type\": \"event\"\r\n}]\r\n\"\"\"\r\n)\r\n\r\ncontract = web3.eth.contract(\r\n    address=Web3.toChecksumAddress(uniswap_factory),\r\n    abi=uniswap_factory_abi,\r\n)\r\n\r\n\r\n# define function to handle events and print to the console\r\ndef handle_event(event):\r\n    print(Web3.toJSON(event))\r\n\r\n\r\n# asynchronous defined function to loop\r\n# this loop sets up an event filter and is looking for new entires for the \"PairCreated\" event\r\n# this loop runs on a poll interval\r\nasync def log_loop(event_filter, poll_interval):\r\n    while True:\r\n        for PairCreated in event_filter.get_new_entries():\r\n            handle_event(PairCreated)\r\n        await asyncio.sleep(poll_interval)\r\n\r\n\r\n# when main is called\r\n# create a filter for the latest block and look for the \"PairCreated\" event for the uniswap factory contract\r\n# run an async loop\r\n# try to run the log_loop function above every 2 seconds\r\ndef main():\r\n    event_filter = contract.events.PairCreated.createFilter(fromBlock=\"latest\")\r\n    loop = asyncio.get_event_loop()\r\n    try:\r\n        loop.run_until_complete(asyncio.gather(log_loop(event_filter, 2)))\r\n    finally:\r\n        # close loop to free up system resources\r\n        loop.close()\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n</details>\r\n\r\n\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1479196933/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1479200497",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23404#issuecomment-1479200497",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23404",
    "id": 1479200497,
    "node_id": "IC_kwDOAOvK985YKs7x",
    "user": {
      "login": "krasi-georgiev",
      "id": 8903888,
      "node_id": "MDQ6VXNlcjg5MDM4ODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8903888?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/krasi-georgiev",
      "html_url": "https://github.com/krasi-georgiev",
      "followers_url": "https://api.github.com/users/krasi-georgiev/followers",
      "following_url": "https://api.github.com/users/krasi-georgiev/following{/other_user}",
      "gists_url": "https://api.github.com/users/krasi-georgiev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/krasi-georgiev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krasi-georgiev/subscriptions",
      "organizations_url": "https://api.github.com/users/krasi-georgiev/orgs",
      "repos_url": "https://api.github.com/users/krasi-georgiev/repos",
      "events_url": "https://api.github.com/users/krasi-georgiev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/krasi-georgiev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-22T09:28:47Z",
    "updated_at": "2023-03-22T09:28:47Z",
    "author_association": "NONE",
    "body": "Yes, but the question is how can you get the TX hash that emitted this event so you can query the cost of this TX?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1479200497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1479468044",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23404#issuecomment-1479468044",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23404",
    "id": 1479468044,
    "node_id": "IC_kwDOAOvK985YLuQM",
    "user": {
      "login": "jsvisa",
      "id": 3627395,
      "node_id": "MDQ6VXNlcjM2MjczOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3627395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsvisa",
      "html_url": "https://github.com/jsvisa",
      "followers_url": "https://api.github.com/users/jsvisa/followers",
      "following_url": "https://api.github.com/users/jsvisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsvisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jsvisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsvisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jsvisa/orgs",
      "repos_url": "https://api.github.com/users/jsvisa/repos",
      "events_url": "https://api.github.com/users/jsvisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jsvisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-22T12:12:30Z",
    "updated_at": "2023-03-22T12:12:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Yes, but the question is how can you get the TX hash that emitted this event so you can query the cost of this TX?\r\n\r\nYou need the gas cost, you need to getTransactionReceipt again. 🙄 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1479468044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1479739402",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23404#issuecomment-1479739402",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23404",
    "id": 1479739402,
    "node_id": "IC_kwDOAOvK985YMwgK",
    "user": {
      "login": "krasi-georgiev",
      "id": 8903888,
      "node_id": "MDQ6VXNlcjg5MDM4ODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8903888?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/krasi-georgiev",
      "html_url": "https://github.com/krasi-georgiev",
      "followers_url": "https://api.github.com/users/krasi-georgiev/followers",
      "following_url": "https://api.github.com/users/krasi-georgiev/following{/other_user}",
      "gists_url": "https://api.github.com/users/krasi-georgiev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/krasi-georgiev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krasi-georgiev/subscriptions",
      "organizations_url": "https://api.github.com/users/krasi-georgiev/orgs",
      "repos_url": "https://api.github.com/users/krasi-georgiev/repos",
      "events_url": "https://api.github.com/users/krasi-georgiev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/krasi-georgiev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-22T15:06:10Z",
    "updated_at": "2023-03-22T15:07:45Z",
    "author_association": "NONE",
    "body": "yes this is the original problem that I am trying to solve\r\nthe logs don't return the TX hash that emitted the log so need to iterate through all Tx in the block.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1479739402/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
