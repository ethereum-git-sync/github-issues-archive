{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19766",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19766/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19766/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19766/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/19766",
  "id": 461971646,
  "node_id": "MDU6SXNzdWU0NjE5NzE2NDY=",
  "number": 19766,
  "title": "How to get an RPC error code?",
  "user": {
    "login": "mushketyk",
    "id": 592286,
    "node_id": "MDQ6VXNlcjU5MjI4Ng==",
    "avatar_url": "https://avatars.githubusercontent.com/u/592286?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mushketyk",
    "html_url": "https://github.com/mushketyk",
    "followers_url": "https://api.github.com/users/mushketyk/followers",
    "following_url": "https://api.github.com/users/mushketyk/following{/other_user}",
    "gists_url": "https://api.github.com/users/mushketyk/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mushketyk/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mushketyk/subscriptions",
    "organizations_url": "https://api.github.com/users/mushketyk/orgs",
    "repos_url": "https://api.github.com/users/mushketyk/repos",
    "events_url": "https://api.github.com/users/mushketyk/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mushketyk/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2019-06-28T10:37:30Z",
  "updated_at": "2021-11-08T18:28:26Z",
  "closed_at": "2019-07-30T08:53:40Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: 1.8.27\r\nOS & Version: Go package\r\n\r\nI would like to get an error code returned by JSON RPC API. The error code is provided in the `rpc.jsonError` struct:\r\n\r\n```go\r\ntype jsonError struct {\r\n\tCode    int         `json:\"code\"`\r\n\tMessage string      `json:\"message\"`\r\n\tData    interface{} `json:\"data,omitempty\"`\r\n}\r\n```\r\n\r\nAnd it is returned by the `CallContext` function in `rpc/client.go`: \r\n\r\n```go\r\n\r\nfunc (c *Client) CallContext(ctx context.Context, result interface{}, method string, args ...interface{}) error {\r\n\tmsg, err := c.newMessage(method, args...)\r\n\t\r\n        ...\r\n\r\n\tswitch resp, err := op.wait(ctx); {\r\n\tcase err != nil:\r\n\t\treturn err\r\n\tcase resp.Error != nil:\r\n\t\treturn resp.Error // <------- HERE\r\n\tcase len(resp.Result) == 0:\r\n\t\treturn ErrNoResult\r\n\tdefault:\r\n\t\treturn json.Unmarshal(resp.Result, &result)\r\n\t}\r\n}\r\n```\r\n\r\nBut this method can also return errors of other types.\r\n\r\nTo get an error code I would need to do something like this:\r\n\r\n```go\r\nerr := c.rpc.CallContext(...)\r\nif e != nil {\r\n\r\n    switch v := e.(type) {\r\n        case *rpc.jsonError:\r\n        // JSON RPC error. I can get an error code from\r\n        default:\r\n        // Not a JSON RPC error \r\n    }\r\n}\r\n```\r\n\r\nUnfortunately, `jsonError` type is not exported.\r\n\r\nIs there another way to get an error code?\r\nWould it make sense to export the `jsonError` type?",
  "closed_by": {
    "login": "adamschmideg",
    "id": 208822,
    "node_id": "MDQ6VXNlcjIwODgyMg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/208822?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/adamschmideg",
    "html_url": "https://github.com/adamschmideg",
    "followers_url": "https://api.github.com/users/adamschmideg/followers",
    "following_url": "https://api.github.com/users/adamschmideg/following{/other_user}",
    "gists_url": "https://api.github.com/users/adamschmideg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/adamschmideg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/adamschmideg/subscriptions",
    "organizations_url": "https://api.github.com/users/adamschmideg/orgs",
    "repos_url": "https://api.github.com/users/adamschmideg/repos",
    "events_url": "https://api.github.com/users/adamschmideg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/adamschmideg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19766/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19766/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/507554869",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19766#issuecomment-507554869",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19766",
    "id": 507554869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNzU1NDg2OQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-02T07:25:45Z",
    "updated_at": "2019-07-02T07:25:45Z",
    "author_association": "MEMBER",
    "body": "Unfortunately the Ethereum JSON RPC spec doesn't cover error codes at all. As such, we haven't been paying much attention to the code itself, since they are probably not used extensively/meaningfully. That said, I think it might make sense to allow casting to our original types back (i.e. to make that public). Ping @fjl for some input?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/507554869/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/508261207",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19766#issuecomment-508261207",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19766",
    "id": 508261207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwODI2MTIwNw==",
    "user": {
      "login": "mushketyk",
      "id": 592286,
      "node_id": "MDQ6VXNlcjU5MjI4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/592286?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mushketyk",
      "html_url": "https://github.com/mushketyk",
      "followers_url": "https://api.github.com/users/mushketyk/followers",
      "following_url": "https://api.github.com/users/mushketyk/following{/other_user}",
      "gists_url": "https://api.github.com/users/mushketyk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mushketyk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mushketyk/subscriptions",
      "organizations_url": "https://api.github.com/users/mushketyk/orgs",
      "repos_url": "https://api.github.com/users/mushketyk/repos",
      "events_url": "https://api.github.com/users/mushketyk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mushketyk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-03T21:28:17Z",
    "updated_at": "2019-07-03T21:28:17Z",
    "author_association": "NONE",
    "body": "@karalabe \r\n\r\n> Unfortunately the Ethereum JSON RPC spec doesn't cover error codes at all\r\n\r\nIt seems that JSON RPC 2.0 [defines error codes](https://www.jsonrpc.org/specification) and from what I see Geth returns an error object with an error code from this range.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/508261207/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/516329297",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19766#issuecomment-516329297",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19766",
    "id": 516329297,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjMyOTI5Nw==",
    "user": {
      "login": "adamschmideg",
      "id": 208822,
      "node_id": "MDQ6VXNlcjIwODgyMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/208822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamschmideg",
      "html_url": "https://github.com/adamschmideg",
      "followers_url": "https://api.github.com/users/adamschmideg/followers",
      "following_url": "https://api.github.com/users/adamschmideg/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamschmideg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamschmideg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamschmideg/subscriptions",
      "organizations_url": "https://api.github.com/users/adamschmideg/orgs",
      "repos_url": "https://api.github.com/users/adamschmideg/repos",
      "events_url": "https://api.github.com/users/adamschmideg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamschmideg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-30T08:53:40Z",
    "updated_at": "2019-07-30T08:53:40Z",
    "author_association": "MEMBER",
    "body": "Right now it's always the same error is returned. We plan to have an EIP later on to define different error codes for different scenarios.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/516329297/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/580122973",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19766#issuecomment-580122973",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19766",
    "id": 580122973,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDEyMjk3Mw==",
    "user": {
      "login": "marknguyen85",
      "id": 19941417,
      "node_id": "MDQ6VXNlcjE5OTQxNDE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19941417?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marknguyen85",
      "html_url": "https://github.com/marknguyen85",
      "followers_url": "https://api.github.com/users/marknguyen85/followers",
      "following_url": "https://api.github.com/users/marknguyen85/following{/other_user}",
      "gists_url": "https://api.github.com/users/marknguyen85/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marknguyen85/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marknguyen85/subscriptions",
      "organizations_url": "https://api.github.com/users/marknguyen85/orgs",
      "repos_url": "https://api.github.com/users/marknguyen85/repos",
      "events_url": "https://api.github.com/users/marknguyen85/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marknguyen85/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-30T07:38:52Z",
    "updated_at": "2020-01-30T07:38:52Z",
    "author_association": "NONE",
    "body": "> #### System information\r\n> Geth version: 1.8.27\r\n> OS & Version: Go package\r\n> \r\n> I would like to get an error code returned by JSON RPC API. The error code is provided in the `rpc.jsonError` struct:\r\n> \r\n> ```go\r\n> type jsonError struct {\r\n> \tCode    int         `json:\"code\"`\r\n> \tMessage string      `json:\"message\"`\r\n> \tData    interface{} `json:\"data,omitempty\"`\r\n> }\r\n> ```\r\n> \r\n> And it is returned by the `CallContext` function in `rpc/client.go`:\r\n> \r\n> ```go\r\n> func (c *Client) CallContext(ctx context.Context, result interface{}, method string, args ...interface{}) error {\r\n> \tmsg, err := c.newMessage(method, args...)\r\n> \t\r\n>         ...\r\n> \r\n> \tswitch resp, err := op.wait(ctx); {\r\n> \tcase err != nil:\r\n> \t\treturn err\r\n> \tcase resp.Error != nil:\r\n> \t\treturn resp.Error // <------- HERE\r\n> \tcase len(resp.Result) == 0:\r\n> \t\treturn ErrNoResult\r\n> \tdefault:\r\n> \t\treturn json.Unmarshal(resp.Result, &result)\r\n> \t}\r\n> }\r\n> ```\r\n> \r\n> But this method can also return errors of other types.\r\n> \r\n> To get an error code I would need to do something like this:\r\n> \r\n> ```go\r\n> err := c.rpc.CallContext(...)\r\n> if e != nil {\r\n> \r\n>     switch v := e.(type) {\r\n>         case *rpc.jsonError:\r\n>         // JSON RPC error. I can get an error code from\r\n>         default:\r\n>         // Not a JSON RPC error \r\n>     }\r\n> }\r\n> ```\r\n> \r\n> Unfortunately, `jsonError` type is not exported.\r\n> \r\n> Is there another way to get an error code?\r\n> Would it make sense to export the `jsonError` type?\r\n\r\n```\r\nerr = c.rpc..Call(nil, method)\r\nif err != nil {\r\n\tvar jsonErr = err.(rpc.Error)\r\n        // and you can use jsonErr.ErrorCode() to get error code\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/580122973/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/963442824",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19766#issuecomment-963442824",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19766",
    "id": 963442824,
    "node_id": "IC_kwDOAOvK9845bPiI",
    "user": {
      "login": "hkalina",
      "id": 3178122,
      "node_id": "MDQ6VXNlcjMxNzgxMjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3178122?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hkalina",
      "html_url": "https://github.com/hkalina",
      "followers_url": "https://api.github.com/users/hkalina/followers",
      "following_url": "https://api.github.com/users/hkalina/following{/other_user}",
      "gists_url": "https://api.github.com/users/hkalina/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hkalina/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hkalina/subscriptions",
      "organizations_url": "https://api.github.com/users/hkalina/orgs",
      "repos_url": "https://api.github.com/users/hkalina/repos",
      "events_url": "https://api.github.com/users/hkalina/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hkalina/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-08T18:28:26Z",
    "updated_at": "2021-11-08T18:28:26Z",
    "author_association": "NONE",
    "body": "**Workaround to get jsonError content:** define custom interface accepting `rpc.jsonError`:\r\n```\r\ntype JsonError interface {\r\n\tError() string\r\n\tErrorCode() int\r\n\tErrorData() interface{}\r\n}\r\n```\r\nNow you can cast unexported jsonError to this interface:\r\n```\r\nif err != nil {\r\n\tjsonErr, ok := err.(JsonError)\r\n\tif ok {\r\n\t\tlog.Errorf(\"json error: %s, data: %s\", jsonErr.Error(), jsonErr.ErrorData())\r\n\t} else {\r\n\t\tlog.Errorf(\"non-json error: %s\", err)\r\n\t}\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/963442824/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
