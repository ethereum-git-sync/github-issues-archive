{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23099",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23099/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23099/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23099/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/23099",
  "id": 928762836,
  "node_id": "MDU6SXNzdWU5Mjg3NjI4MzY=",
  "number": 23099,
  "title": "rpc: Add isSynced method.",
  "user": {
    "login": "JoeGruffins",
    "id": 34998433,
    "node_id": "MDQ6VXNlcjM0OTk4NDMz",
    "avatar_url": "https://avatars.githubusercontent.com/u/34998433?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JoeGruffins",
    "html_url": "https://github.com/JoeGruffins",
    "followers_url": "https://api.github.com/users/JoeGruffins/followers",
    "following_url": "https://api.github.com/users/JoeGruffins/following{/other_user}",
    "gists_url": "https://api.github.com/users/JoeGruffins/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JoeGruffins/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JoeGruffins/subscriptions",
    "organizations_url": "https://api.github.com/users/JoeGruffins/orgs",
    "repos_url": "https://api.github.com/users/JoeGruffins/repos",
    "events_url": "https://api.github.com/users/JoeGruffins/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JoeGruffins/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-06-24T01:24:10Z",
  "updated_at": "2021-11-03T14:41:20Z",
  "closed_at": "2021-11-03T14:41:19Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# Rationale\r\n\r\n### Why should this feature exist?\r\n\r\nWhen contacting a node for data about the state of the chain, we want to know if the node thinks it is synced. That is, has blocks up to the highest known header of a peer(s).\r\n\r\nCurrently, all we can know is if the node is currently syncing. syncProgress will return nil before and after syncing has started, so connecting to a node, if progress is nil, we don't know which.\r\n\r\nWe have explored several options to try and determine whether syncing has started at all. One is waiting for a block to come in, and then checking syncProgress. This is sub optimal because we need to wait for some time if the chain was already synced. Another is to check for peers, and then check syncProgress if peers > 0, but there is a window between finding a peer and sync starting, or it could drop the peer before syncing, so this is racy.\r\n\r\n### What are the use-cases?\r\n\r\nWhen connecting to a node, we know if we should **expect** this node to be synced. I realize there could be blocks the node doesn't know about, but its best guess is better than mine.\r\n\r\n# Implementation\r\n\r\n### Do you have ideas regarding the implementation of this feature?\r\n\r\nCheck if we have any peers. Check if peer's best block matches ours. Possibly check the best block's age isn't under some time that would suggest we aren't just connected to another peer that is not synced.\r\n\r\n### Are you willing to implement this feature?\r\n\r\nUhhhh. Maybe?",
  "closed_by": {
    "login": "MariusVanDerWijden",
    "id": 16664698,
    "node_id": "MDQ6VXNlcjE2NjY0Njk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MariusVanDerWijden",
    "html_url": "https://github.com/MariusVanDerWijden",
    "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
    "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
    "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
    "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
    "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
    "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23099/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23099/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/872013482",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23099#issuecomment-872013482",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23099",
    "id": 872013482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjAxMzQ4Mg==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-01T07:53:49Z",
    "updated_at": "2021-07-01T09:11:40Z",
    "author_association": "MEMBER",
    "body": "As this is a problem touching all clients and not just geth - I think the best place to raise this is: https://ethereum-magicians.org\r\n\r\nAlso if we want to add a new method to RPC we need to add it to the spec - so it would really be good to run it at magicians first - we cannot just add it to geth.\r\n\r\nAnd depending on your use-case maybe it is also an idea to check the timestamp of the last block to get an idea if you are synced. But it's not a trivial problem. Maybe elaborate a bit more on your use-case: so for what do you need the information?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/872013482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/872167191",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23099#issuecomment-872167191",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23099",
    "id": 872167191,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjE2NzE5MQ==",
    "user": {
      "login": "JoeGruffins",
      "id": 34998433,
      "node_id": "MDQ6VXNlcjM0OTk4NDMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/34998433?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoeGruffins",
      "html_url": "https://github.com/JoeGruffins",
      "followers_url": "https://api.github.com/users/JoeGruffins/followers",
      "following_url": "https://api.github.com/users/JoeGruffins/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoeGruffins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoeGruffins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoeGruffins/subscriptions",
      "organizations_url": "https://api.github.com/users/JoeGruffins/orgs",
      "repos_url": "https://api.github.com/users/JoeGruffins/repos",
      "events_url": "https://api.github.com/users/JoeGruffins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoeGruffins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-01T11:31:58Z",
    "updated_at": "2021-07-01T11:31:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Maybe elaborate a bit more on your use-case: so for what do you need the information?\r\n\r\nWhen connecting to a node, we know if we should expect this node to be synced.\r\n\r\nWe're adding ethereum to https://github.com/decred/dcrdex and we are currently discussing this around https://github.com/decred/dcrdex/pull/1082#discussion_r649917244\r\n\r\nWhen a dex's server's operator starts the dex, we want to know if the chains it is running are synced. The reasons for this should be obvious?\r\n\r\nAny recommendation for time's to check? When's that ice age happening again, need to watch for that? ;P",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/872167191/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/959287314",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23099#issuecomment-959287314",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23099",
    "id": 959287314,
    "node_id": "IC_kwDOAOvK9845LZAS",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-03T14:41:19Z",
    "updated_at": "2021-11-03T14:41:19Z",
    "author_association": "MEMBER",
    "body": "We can not unilaterally implement this feature, I would suggest raising this issue here: https://github.com/ethereum/execution-apis\r\n\r\nI would check if the block was within the last minute, even with ice age we should only see blocks on average every 30 seconds. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/959287314/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
