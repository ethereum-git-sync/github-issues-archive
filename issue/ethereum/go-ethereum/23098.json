{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23098",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23098/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23098/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23098/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/23098",
  "id": 928438384,
  "node_id": "MDU6SXNzdWU5Mjg0MzgzODQ=",
  "number": 23098,
  "title": "Feature Request - Add an RPC endpoint to flush the local transaction queue",
  "user": {
    "login": "watersnake1",
    "id": 16307665,
    "node_id": "MDQ6VXNlcjE2MzA3NjY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/16307665?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/watersnake1",
    "html_url": "https://github.com/watersnake1",
    "followers_url": "https://api.github.com/users/watersnake1/followers",
    "following_url": "https://api.github.com/users/watersnake1/following{/other_user}",
    "gists_url": "https://api.github.com/users/watersnake1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/watersnake1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/watersnake1/subscriptions",
    "organizations_url": "https://api.github.com/users/watersnake1/orgs",
    "repos_url": "https://api.github.com/users/watersnake1/repos",
    "events_url": "https://api.github.com/users/watersnake1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/watersnake1/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-06-23T16:25:48Z",
  "updated_at": "2022-06-12T14:48:44Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# Rationale\r\nSometimes buggy external code that is interacting with a geth node causes a transaction to be improperly constructed. A common example of this is using the incorrect nonce value in the transaction. This can cause a backlog in the transaction queue of the node, where no additional transactions can be broadcast to the ETH network until the offending transaction is ‘freed’. \r\n\r\n## Current Solution\r\nCurrently, in order to free the transaction queue of geth and return to normal operation, one must delete the file `transactions.rlp` on the node’s server instance then restart geth. \r\n\r\nThis is a relatively trivial operation, but cannot be done remotely unless one has access to an ssh endpoint where the node is being run, assuming it is not being run locally. In 2020 [decrypt.co](https://decrypt.co/44321/70-of-ethereum-nodes-are-hosted-on-centralized-services) reported that more than 70% of nodes are run on hosted services, so it is likely for the average operator that their node is not on a local computer. In many cases, hosted nodes only provide a URL to access geth’s JSON-RPC API, rather than providing an ssh endpoint on port 22 that one could use to modify the underlying filesystem. Without access to the filesystem, the user must contact their hosting provider’s customer support and open a ticket, which could take several hours or days to process. In a space where minutes and even seconds can be critical, it is critical that there is a way to reduce the time needed to carry out this action.\r\n\r\n\r\n# Implementation\r\n\r\nI suggest that there should be an endpoint in the go-ethereum JSON-RPC API that allows for flushing the transaction queue remotely. Unfortunately I am not a geth developer, so cannot offer advice on how this feature could be implemented. My aim is to raise awareness about this usecase with the hope that others have experienced the same problem. I believe this would be an extremely useful feature to have as a part of the geth client, given that most node operators do not have direct access to the filesystem that their nodes are running on, because they are purchasing access to them through a service like infura. ",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23098/reactions",
    "total_count": 3,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23098/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/867448703",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23098#issuecomment-867448703",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23098",
    "id": 867448703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NzQ0ODcwMw==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-24T08:32:54Z",
    "updated_at": "2021-06-24T08:32:54Z",
    "author_association": "MEMBER",
    "body": "I'm not really sure what your blocker is here.\r\n\r\nIf a transaction you've submitted is unsuitable for whatever reason, you can always submit a replacement transaction with the same nonce. You don't need to clear your local pool to do that.\r\n\r\nFurthermore, deleting stuff from your local pool won't help if the transaction was already propagated through the network and remote nodes still keep hold of it. You'll have to submit a replacement good enough to push it out of remote pools, which essentially is the same as replacing it in your local pool.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/867448703/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/867830910",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23098#issuecomment-867830910",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23098",
    "id": 867830910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NzgzMDkxMA==",
    "user": {
      "login": "nyetwurk",
      "id": 1088639,
      "node_id": "MDQ6VXNlcjEwODg2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1088639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nyetwurk",
      "html_url": "https://github.com/nyetwurk",
      "followers_url": "https://api.github.com/users/nyetwurk/followers",
      "following_url": "https://api.github.com/users/nyetwurk/following{/other_user}",
      "gists_url": "https://api.github.com/users/nyetwurk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nyetwurk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nyetwurk/subscriptions",
      "organizations_url": "https://api.github.com/users/nyetwurk/orgs",
      "repos_url": "https://api.github.com/users/nyetwurk/repos",
      "events_url": "https://api.github.com/users/nyetwurk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nyetwurk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-24T17:45:07Z",
    "updated_at": "2021-06-24T17:45:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "The issue i've seen is that if it makes it out of the local pool, and is properly broadcast, there are no issues with the txn and the (badly designed) client (which the OP refers to) does the right thing. I don't know why it would make a difference, though.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/867830910/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/867899114",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23098#issuecomment-867899114",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23098",
    "id": 867899114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2Nzg5OTExNA==",
    "user": {
      "login": "watersnake1",
      "id": 16307665,
      "node_id": "MDQ6VXNlcjE2MzA3NjY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/16307665?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/watersnake1",
      "html_url": "https://github.com/watersnake1",
      "followers_url": "https://api.github.com/users/watersnake1/followers",
      "following_url": "https://api.github.com/users/watersnake1/following{/other_user}",
      "gists_url": "https://api.github.com/users/watersnake1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/watersnake1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/watersnake1/subscriptions",
      "organizations_url": "https://api.github.com/users/watersnake1/orgs",
      "repos_url": "https://api.github.com/users/watersnake1/repos",
      "events_url": "https://api.github.com/users/watersnake1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/watersnake1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-24T19:33:05Z",
    "updated_at": "2021-06-24T19:33:28Z",
    "author_association": "NONE",
    "body": "> I'm not really sure what your blocker is here.\r\n> \r\n> If a transaction you've submitted is unsuitable for whatever reason, you can always submit a replacement transaction with the same nonce. You don't need to clear your local pool to do that.\r\n\r\nIn cases of simple sends this is true, but when transactions are being constructed by a node on a different network (i.e. a resource network that interfaces with Ethereum) it may not always be trivial to do this. What motivated me to make this request was that a resource network node constructs a tx, but due to a bug in the code, it fails, but when I try to rebroadcast from the resource node, the logic of the node states that it cannot do so because the transaction has already been sent. Thus an option to manually clear the queue would be extremely helpful in simplifying recovery from these types of issues because presently it is the only viable solution.\r\n> \r\n> Furthermore, deleting stuff from your local pool won't help if the transaction was already propagated through the network and remote nodes still keep hold of it. You'll have to submit a replacement good enough to push it out of remote pools, which essentially is the same as replacing it in your local pool.\r\n\r\nThese transactions are malformed and are thus never broadcast. You wouldn't see them on etherscan if you searched the tx hash\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/867899114/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
