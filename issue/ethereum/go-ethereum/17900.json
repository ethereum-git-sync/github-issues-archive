{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17900",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17900/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17900/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17900/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/17900",
  "id": 369597937,
  "node_id": "MDU6SXNzdWUzNjk1OTc5Mzc=",
  "number": 17900,
  "title": "LES Status Message Always Reports `serveStateSince = 0`",
  "user": {
    "login": "EBGToo",
    "id": 673875,
    "node_id": "MDQ6VXNlcjY3Mzg3NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/673875?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/EBGToo",
    "html_url": "https://github.com/EBGToo",
    "followers_url": "https://api.github.com/users/EBGToo/followers",
    "following_url": "https://api.github.com/users/EBGToo/following{/other_user}",
    "gists_url": "https://api.github.com/users/EBGToo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/EBGToo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/EBGToo/subscriptions",
    "organizations_url": "https://api.github.com/users/EBGToo/orgs",
    "repos_url": "https://api.github.com/users/EBGToo/repos",
    "events_url": "https://api.github.com/users/EBGToo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/EBGToo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "zsfelfoldi",
    "id": 9884311,
    "node_id": "MDQ6VXNlcjk4ODQzMTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9884311?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zsfelfoldi",
    "html_url": "https://github.com/zsfelfoldi",
    "followers_url": "https://api.github.com/users/zsfelfoldi/followers",
    "following_url": "https://api.github.com/users/zsfelfoldi/following{/other_user}",
    "gists_url": "https://api.github.com/users/zsfelfoldi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zsfelfoldi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zsfelfoldi/subscriptions",
    "organizations_url": "https://api.github.com/users/zsfelfoldi/orgs",
    "repos_url": "https://api.github.com/users/zsfelfoldi/repos",
    "events_url": "https://api.github.com/users/zsfelfoldi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zsfelfoldi/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "zsfelfoldi",
      "id": 9884311,
      "node_id": "MDQ6VXNlcjk4ODQzMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9884311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zsfelfoldi",
      "html_url": "https://github.com/zsfelfoldi",
      "followers_url": "https://api.github.com/users/zsfelfoldi/followers",
      "following_url": "https://api.github.com/users/zsfelfoldi/following{/other_user}",
      "gists_url": "https://api.github.com/users/zsfelfoldi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zsfelfoldi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zsfelfoldi/subscriptions",
      "organizations_url": "https://api.github.com/users/zsfelfoldi/orgs",
      "repos_url": "https://api.github.com/users/zsfelfoldi/repos",
      "events_url": "https://api.github.com/users/zsfelfoldi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zsfelfoldi/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2018-10-12T15:21:35Z",
  "updated_at": "2019-06-18T08:17:28Z",
  "closed_at": "2019-06-18T08:17:28Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "The LES Status message provided by a full or archival Geth node should include a valid `serveStateSince` optional parameter.  \r\n\r\nThe LES handshake protocol includes an exchange of status messages.   The Light Client receives a status message that includes information about the Geth node.  That received status message ought to represent the capabilities of the Geth node.  In particular, a non-archival node reports `serveStateSince` as block 0 - even though it can serve state only through, perhaps, the last thousand blocks.\r\n\r\nA Light Client issuing a GetProofs message expects a valid result - a proof of the account state, including the account.  If the Geth node reports having state since 0 but only has state since 6,500,000 then the Light Client doesn't get a proof but instead gets RLP `[]`.\r\n\r\nNote.  A related issues arrises: how should a Geth node serving light clients handle the Geth node purging history?  Options: a) boot all light clients (because they think the node is serving from X but now the node is serving from Y with Y > X) or b) don't purge until older light clients (using X) have dropped off.\r\n\r\n#### System information\r\n\r\nGeth version: 1.8.17-stable\r\nOS & Version: OSX\r\n\r\n#### Actual behaviour\r\n\r\nWhen connecting to a non-archival Geth node:\r\n\r\n````\r\nETH: LES: Recv: [ LES,          Status ] <=  35.193.192.189\r\nETH: LES: StatusMessage:\r\nETH: LES:     ProtocolVersion: 2\r\nETH: LES:     NetworkId      : 1\r\nETH: LES:     HeadNum        : 6501892\r\nETH: LES:     HeadHash       : 0x2d842eb36b62ee5e22d6296b951540d510ef54e71a731574da8534879df2faee\r\nETH: LES:     HeadTd         : 7180216660737580096962\r\nETH: LES:     GenesisHash    : 0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3\r\nETH: LES:     ServeHeaders   : Yes\r\nETH: LES:     ServeChainSince: 0\r\nETH: LES:     ServeStateSince: 0\r\nETH: LES:     TxRelay        : Yes\r\nETH: LES:     FlowControl/BL : 300000000\r\nETH: LES:     FlowControl/MRR: 50000\r\nETH: LES:     FlowControl/MRC:\r\nETH: LES:         Request : 0 (Status)\r\n````\r\n#### Expected behaviour\r\n\r\nThe `ServeStateSince` (and likely `ServeChainSince`) should reflect the capabilities of the Node supporting the LES client.\r\n\r\n\r\n",
  "closed_by": {
    "login": "zsfelfoldi",
    "id": 9884311,
    "node_id": "MDQ6VXNlcjk4ODQzMTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9884311?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zsfelfoldi",
    "html_url": "https://github.com/zsfelfoldi",
    "followers_url": "https://api.github.com/users/zsfelfoldi/followers",
    "following_url": "https://api.github.com/users/zsfelfoldi/following{/other_user}",
    "gists_url": "https://api.github.com/users/zsfelfoldi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zsfelfoldi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zsfelfoldi/subscriptions",
    "organizations_url": "https://api.github.com/users/zsfelfoldi/orgs",
    "repos_url": "https://api.github.com/users/zsfelfoldi/repos",
    "events_url": "https://api.github.com/users/zsfelfoldi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zsfelfoldi/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17900/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17900/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/457847318",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17900#issuecomment-457847318",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17900",
    "id": 457847318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Nzg0NzMxOA==",
    "user": {
      "login": "EBGToo",
      "id": 673875,
      "node_id": "MDQ6VXNlcjY3Mzg3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/673875?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EBGToo",
      "html_url": "https://github.com/EBGToo",
      "followers_url": "https://api.github.com/users/EBGToo/followers",
      "following_url": "https://api.github.com/users/EBGToo/following{/other_user}",
      "gists_url": "https://api.github.com/users/EBGToo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EBGToo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EBGToo/subscriptions",
      "organizations_url": "https://api.github.com/users/EBGToo/orgs",
      "repos_url": "https://api.github.com/users/EBGToo/repos",
      "events_url": "https://api.github.com/users/EBGToo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EBGToo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-26T17:05:29Z",
    "updated_at": "2019-01-26T17:05:29Z",
    "author_association": "NONE",
    "body": "Any expected date for addressing this?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/457847318/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/489082042",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17900#issuecomment-489082042",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17900",
    "id": 489082042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4OTA4MjA0Mg==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-03T12:42:11Z",
    "updated_at": "2019-05-03T12:42:11Z",
    "author_association": "MEMBER",
    "body": "@zsfelfoldi !!!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/489082042/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/489115500",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17900#issuecomment-489115500",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17900",
    "id": 489115500,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4OTExNTUwMA==",
    "user": {
      "login": "zsfelfoldi",
      "id": 9884311,
      "node_id": "MDQ6VXNlcjk4ODQzMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9884311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zsfelfoldi",
      "html_url": "https://github.com/zsfelfoldi",
      "followers_url": "https://api.github.com/users/zsfelfoldi/followers",
      "following_url": "https://api.github.com/users/zsfelfoldi/following{/other_user}",
      "gists_url": "https://api.github.com/users/zsfelfoldi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zsfelfoldi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zsfelfoldi/subscriptions",
      "organizations_url": "https://api.github.com/users/zsfelfoldi/orgs",
      "repos_url": "https://api.github.com/users/zsfelfoldi/repos",
      "events_url": "https://api.github.com/users/zsfelfoldi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zsfelfoldi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-03T14:30:44Z",
    "updated_at": "2019-05-03T14:30:44Z",
    "author_association": "MEMBER",
    "body": "@EBGToo Implementing this feature was postponed exactly because of the issue you mentioned. How to handle continous pruning has not been figured out yet but maybe this is the right time.\r\nNow I think that specifying this as an absolute block number was probably a mistake but since it was never used for anything we can just as well change the spec. Since servers are either archive (keeping all state history, at least from a certain point) or automatically pruning (always having the last 128 states available for example, like Geth does) I think the spec should also allow specifying a relative value.\r\nWe could add an optional `serveStateRel` field. A client could assume that the state for block N is available if `serveStateSince` is specified AND `N >= serveStateSince` AND (`serveStateRel` is not specified OR `N >= currentHead - serveStateRel`). This would be easy to implement and could be released in the next Geth version (which will also bump LES protocol version to 3 so it is a good time to add something like this to the spec).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/489115500/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/489126510",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17900#issuecomment-489126510",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17900",
    "id": 489126510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4OTEyNjUxMA==",
    "user": {
      "login": "EBGToo",
      "id": 673875,
      "node_id": "MDQ6VXNlcjY3Mzg3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/673875?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EBGToo",
      "html_url": "https://github.com/EBGToo",
      "followers_url": "https://api.github.com/users/EBGToo/followers",
      "following_url": "https://api.github.com/users/EBGToo/following{/other_user}",
      "gists_url": "https://api.github.com/users/EBGToo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EBGToo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EBGToo/subscriptions",
      "organizations_url": "https://api.github.com/users/EBGToo/orgs",
      "repos_url": "https://api.github.com/users/EBGToo/repos",
      "events_url": "https://api.github.com/users/EBGToo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EBGToo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-03T15:02:32Z",
    "updated_at": "2019-05-03T15:02:32Z",
    "author_association": "NONE",
    "body": "Thanks.\r\n\r\nSo essentially `serveState = max (serveStateSince, currentHead - N)`  (if N is provided)  \r\n\r\nI think there is a race condition that clients would need to deal with... client expects blocks from X and makes a request for X, in the mean time, node moves on (current - N > X).  Maybe this 'race window' is minimized if client assumes N/2 is available (for example).  \r\n\r\nIn practice will the node's serveSince move block-by-block (as current block increments by one) or will it jump, like by N.  Specifically if N is 256, node guarantees `currentHead - 256` but it will actually provide `currentHead - 512` (or 511) and then 'jump' to `currentHead - 256` when purged?\r\n\r\nWhere can I find the 'LESv3' specification?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/489126510/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/489132354",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17900#issuecomment-489132354",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17900",
    "id": 489132354,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4OTEzMjM1NA==",
    "user": {
      "login": "zsfelfoldi",
      "id": 9884311,
      "node_id": "MDQ6VXNlcjk4ODQzMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9884311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zsfelfoldi",
      "html_url": "https://github.com/zsfelfoldi",
      "followers_url": "https://api.github.com/users/zsfelfoldi/followers",
      "following_url": "https://api.github.com/users/zsfelfoldi/following{/other_user}",
      "gists_url": "https://api.github.com/users/zsfelfoldi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zsfelfoldi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zsfelfoldi/subscriptions",
      "organizations_url": "https://api.github.com/users/zsfelfoldi/orgs",
      "repos_url": "https://api.github.com/users/zsfelfoldi/repos",
      "events_url": "https://api.github.com/users/zsfelfoldi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zsfelfoldi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-03T15:19:21Z",
    "updated_at": "2019-05-03T15:19:21Z",
    "author_association": "MEMBER",
    "body": "If we allow automatic pruning on the server side (and this is the purpose of the proposed method) then the client should be prepared for that. Realistically the clients will be interested in new states most of the time, and if not, then they are going to need an archive server anyway. As you wrote, assuming a bit less on the client side is a safe strategy.\r\nProviding more than what was announced in the handshake is always allowed of course so you can still use the relative method if you are not pruning block by block. Alternatively, the protocol allows explicit parameter changes is the Announce messages so if you only prune rarely then you can send a new value of `serveStateSince` at any time. This is also not implemented yet on the receiving end (it is ignored currently) but I will add it together with the other changes.\r\nThe LES/3 spec is still under construction, the new version is not officially released yet, it only exists in a PR: https://github.com/ethereum/go-ethereum/pull/19329",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/489132354/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/502999057",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17900#issuecomment-502999057",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17900",
    "id": 502999057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjk5OTA1Nw==",
    "user": {
      "login": "zsfelfoldi",
      "id": 9884311,
      "node_id": "MDQ6VXNlcjk4ODQzMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9884311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zsfelfoldi",
      "html_url": "https://github.com/zsfelfoldi",
      "followers_url": "https://api.github.com/users/zsfelfoldi/followers",
      "following_url": "https://api.github.com/users/zsfelfoldi/following{/other_user}",
      "gists_url": "https://api.github.com/users/zsfelfoldi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zsfelfoldi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zsfelfoldi/subscriptions",
      "organizations_url": "https://api.github.com/users/zsfelfoldi/orgs",
      "repos_url": "https://api.github.com/users/zsfelfoldi/repos",
      "events_url": "https://api.github.com/users/zsfelfoldi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zsfelfoldi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-18T08:17:28Z",
    "updated_at": "2019-06-18T08:17:28Z",
    "author_association": "MEMBER",
    "body": "Availability announcements relative to current head are now supported by LES/3 which is already on Geth master branch so this issue is resolved.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/502999057/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
