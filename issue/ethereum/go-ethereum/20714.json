{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20714",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20714/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20714/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20714/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/20714",
  "id": 570294696,
  "node_id": "MDU6SXNzdWU1NzAyOTQ2OTY=",
  "number": 20714,
  "title": "Provide a way to get the revert reason string from eth_estimateGas",
  "user": {
    "login": "MicahZoltu",
    "id": 886059,
    "node_id": "MDQ6VXNlcjg4NjA1OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MicahZoltu",
    "html_url": "https://github.com/MicahZoltu",
    "followers_url": "https://api.github.com/users/MicahZoltu/followers",
    "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
    "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
    "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
    "repos_url": "https://api.github.com/users/MicahZoltu/repos",
    "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "rjl493456442",
    "id": 5959481,
    "node_id": "MDQ6VXNlcjU5NTk0ODE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rjl493456442",
    "html_url": "https://github.com/rjl493456442",
    "followers_url": "https://api.github.com/users/rjl493456442/followers",
    "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
    "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
    "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
    "repos_url": "https://api.github.com/users/rjl493456442/repos",
    "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2020-02-25T03:56:28Z",
  "updated_at": "2022-06-24T13:54:28Z",
  "closed_at": "2020-04-30T08:49:06Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: `v1.9.10`\r\nOS & Version: Windows\r\n\r\n#### Summary\r\n\r\nReturn the revert reason string when `eth_estimateGas` fails due to a revert.\r\n\r\n#### Description\r\n\r\nMost dapps execute an `eth_estimateGas` transaction prior to submitting a transaction.  Along with being necessary in order to calculate gas costs for the transaction, it also is an opportunity to make sure the transaction will succeed prior to submitting it to the blockchain where failure still costs the user money (gas).\r\n\r\nHowever, if the transaction fails due to a revert with a revert reason string, Geth will not return the reason string to the caller.  The lack of revert reason string can lead to a frustrating user experience where there is not enough information presented to the dapp to appropriately handle or inform the user.\r\n\r\n`eth_call` currently returns the reason string (though as expressed in #19027 the current mechanism is problematic).  `eth_estimateGas` should similarly return the reason string when it is available.\r\n\r\nNote: I recommend fixing #19027 at the same time as this.  Consider following Parity's lead and returning the error in the `error.data` of a JSON-RPC error response.",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20714/reactions",
    "total_count": 15,
    "+1": 8,
    "-1": 0,
    "laugh": 0,
    "hooray": 4,
    "confused": 0,
    "heart": 0,
    "rocket": 3,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20714/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/601078216",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20714#issuecomment-601078216",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20714",
    "id": 601078216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTA3ODIxNg==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-19T09:31:28Z",
    "updated_at": "2020-03-19T09:31:28Z",
    "author_association": "MEMBER",
    "body": "Hey there. We do think the request is completely valid, but given our past experiences with requests like this, it's super hard to go back and forth on theoretical requests like \"would be nice to return the revert reason\". What would really really be super helpful is if you could deploy some repro contracts on Rinkeby / Goerli and provide a list like:\r\n\r\n- `eth_estimateGas(contract1, input)`, should return error X\r\n- `eth_call(contract2, input)` should return Y\r\n\r\nThat way it would be completely clear what the expected behavior is and it's also easy to debate what is the correct behavior in that specific instance.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/601078216/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/601503496",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20714#issuecomment-601503496",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20714",
    "id": 601503496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTUwMzQ5Ng==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-20T02:50:26Z",
    "updated_at": "2020-03-20T02:50:26Z",
    "author_association": "MEMBER",
    "body": "I don't have a Rinkeby or Goerli node, nor Rinkeby/Goerli ETH, but I do have a private geth, Parity and Nethermind node that I can test against.\r\n\r\nGiven the following contract:\r\n```solidity\r\npragma solidity ^0.6.4;\r\ncontract Apple {\r\n\tfunction banana() external {\r\n\t\trequire(false, \"revert reason\");\r\n\t}\r\n}\r\n```\r\n\r\nCalling `eth_estimateGas` on the `banana` function looks like this:\r\n```json\r\n{\r\n\t\"jsonrpc\":\"2.0\",\r\n\t\"id\":234,\r\n\t\"method\":\"eth_estimateGas\",\r\n\t\"params\":[\r\n\t\t{\r\n\t\t\t\"from\":\"0x913da4198e6be1d5f5e4a40d0667f70c0b5430eb\",\r\n\t\t\t\"to\":\"0xaf517e20601df8d8584035eb895c02713bc1f3a4\",\r\n\t\t\t\"data\":\"0xc3cafc6f\",\r\n\t\t\t\"value\":\"0x0\"\r\n\t\t}\r\n\t]\r\n}\r\n```\r\nThe expected response would look something like this:\r\n```json\r\n{\r\n\t\"jsonrpc\":\"2.0\",\r\n\t\"error\":{\r\n\t\t\"code\":-32015,\r\n\t\t\"message\":\"VM execution error.\",\r\n\t\t\"data\":\"Reverted 0x08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000d72657665727420726561736f6e00000000000000000000000000000000000000\"\r\n\t},\r\n\t\"id\":126\r\n}\r\n```\r\nThe same response would be returned if `eth_call` was used.\r\n\r\nThis format was chosen because it matches what Parity does.  It probably wouldn't by my first choice, having the `Reverted` prefix on the `data` property just makes parsing a bit more painful than necessary, but it isn't terrible and cross-client compatibility is always nice.  I *think* the ABI encoding of the revert reason is done by Solidity when it generates those messages, and I wouldn't want the client to be messing with that.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/601503496/reactions",
      "total_count": 3,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 3,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/604351630",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20714#issuecomment-604351630",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20714",
    "id": 604351630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDM1MTYzMA==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-26T10:32:13Z",
    "updated_at": "2020-03-26T10:32:13Z",
    "author_association": "MEMBER",
    "body": "We've discucssed this a bit, in depth. The problem with how the whole call-chain / evm works right now, is that we convolute evm-errors type 1 (evm could not be constructed, or evm could not properly execute because we have missing data, or the database is toast), with errors type 2 (the interpreter is fine, but the application-layer execution failed due to e.g. OOG). \r\n\r\nSo we have one error representing both \"could not execute evm\" and \"execution fine, result was failure\". \r\nThe way forward is to let evm-Calls return an `ExecutionResult` type, which may contain additional info (result, revert-data, evm-error). And the evm-Calls would return errors only meaning \"the evm could not execute successfully\". \r\n\r\nWhen that is in place, it will be a lot simpler to fix this and related issues. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/604351630/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/604360746",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20714#issuecomment-604360746",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20714",
    "id": 604360746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDM2MDc0Ng==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-26T10:52:21Z",
    "updated_at": "2020-03-26T10:52:21Z",
    "author_association": "MEMBER",
    "body": "@holiman That sounds like a pretty large undertaking and breaking change, not to mention would require buy-in from other clients to be broadly useful by dapps.  While I agree that the design you have described would be superior, I'm a little concerned that such a solution is probably years away and there is perhaps a shorter term solution to the immediate problem.\r\n\r\nDo you have a sense on how high of a priority it is to take on the work you have described?  If it is something that is relatively high priority and likely to happen sooner rather than later, then I would tentatively support the better solution rather than a temporary solution.  If it is \"something on our roadmap, but not yet at the top of the list\" then I'm a bit more hesitant.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/604360746/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/604389283",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20714#issuecomment-604389283",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20714",
    "id": 604389283,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDM4OTI4Mw==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-26T11:58:23Z",
    "updated_at": "2020-03-26T11:58:23Z",
    "author_association": "MEMBER",
    "body": "What Martin suggested is purely a Geth internal refactor.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/604389283/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/604398339",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20714#issuecomment-604398339",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20714",
    "id": 604398339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDM5ODMzOQ==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-26T12:19:51Z",
    "updated_at": "2020-03-26T12:19:51Z",
    "author_association": "MEMBER",
    "body": "Ah, I misunderstood it as a change to the way you return results, not the way you internally process/handle results.  Feel free to ignore the above comment in that case, since an internal refactor doesn't require *nearly* the amount of effort as a significant API change does!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/604398339/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/621701892",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20714#issuecomment-621701892",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20714",
    "id": 621701892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTcwMTg5Mg==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T08:49:06Z",
    "updated_at": "2020-04-30T08:49:06Z",
    "author_association": "MEMBER",
    "body": "This should be fixed by https://github.com/ethereum/go-ethereum/pull/20830.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/621701892/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/707665934",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20714#issuecomment-707665934",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20714",
    "id": 707665934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNzY2NTkzNA==",
    "user": {
      "login": "ryanc414",
      "id": 19290101,
      "node_id": "MDQ6VXNlcjE5MjkwMTAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/19290101?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanc414",
      "html_url": "https://github.com/ryanc414",
      "followers_url": "https://api.github.com/users/ryanc414/followers",
      "following_url": "https://api.github.com/users/ryanc414/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanc414/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanc414/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanc414/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanc414/orgs",
      "repos_url": "https://api.github.com/users/ryanc414/repos",
      "events_url": "https://api.github.com/users/ryanc414/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanc414/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-13T11:05:27Z",
    "updated_at": "2020-10-13T11:05:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm still not seeing revert reasons returned by `EstimateGas()` using go-ethereum v1.9.22. When I bypass go-ethereum and directly make the JSON-RPC calls, I notice that the eth_estimateGas call returns:\r\n\r\n```\r\n{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32016,\"message\":\"The execution failed due to an exception.\",\"data\":\"Reverted\"},\"id\":444}\r\n```\r\n\r\nWhereas if I change the method to \"eth_call\" I get the encoded revert string back:\r\n\r\n```\r\n{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32015,\"message\":\"VM execution error.\",\"data\":\"Reverted 0x08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002a5361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656400000000000000000000000000000000000000000000\"},\"id\":445}\r\n```\r\n\r\nUnfortunately, it seems that the `CallContract()` does not parse and return me the revert string. Knowing why a transaction was reverted is vital when trying to debug gas estimation failures!\r\n\r\nI see two possible solutions:\r\n\r\n1. The CallContract public method is updated to parse and return the revert reason. User code can call EstimateGas, and if that fails it can call CallContract to get the revert reason (simple but a bit ugly).\r\n2. Under the hood, if EstimateGas hits a revert and doesn't get any revert reason back from the JSON-RPC server, it could try to make an \"eth_call\" request with the same params to see if the revert reason can be decoded from that.\r\n\r\nWhat do you think?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/707665934/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1002960273",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20714#issuecomment-1002960273",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20714",
    "id": 1002960273,
    "node_id": "IC_kwDOAOvK9847x_WR",
    "user": {
      "login": "malmod",
      "id": 82238656,
      "node_id": "MDQ6VXNlcjgyMjM4NjU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/82238656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/malmod",
      "html_url": "https://github.com/malmod",
      "followers_url": "https://api.github.com/users/malmod/followers",
      "following_url": "https://api.github.com/users/malmod/following{/other_user}",
      "gists_url": "https://api.github.com/users/malmod/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/malmod/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/malmod/subscriptions",
      "organizations_url": "https://api.github.com/users/malmod/orgs",
      "repos_url": "https://api.github.com/users/malmod/repos",
      "events_url": "https://api.github.com/users/malmod/events{/privacy}",
      "received_events_url": "https://api.github.com/users/malmod/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-30T10:12:00Z",
    "updated_at": "2021-12-30T10:12:00Z",
    "author_association": "NONE",
    "body": "Hitting this too...\r\n\r\nI'm using the simulated backend to deploy and play with smart contracts. Unfortunately, calls to estimategas fail with `\"execution reverted\"`. No details seem to be available (in the error nor the context).\r\n\r\nIf I still proceed to TX, it fails without details as well: it consumes just a bit of gas and returns a zero status. Logs of the receipt are empty and I didn't find anything interesting in the whole receipt.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1002960273/reactions",
      "total_count": 8,
      "+1": 8,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1165600282",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20714#issuecomment-1165600282",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20714",
    "id": 1165600282,
    "node_id": "IC_kwDOAOvK985FeaYa",
    "user": {
      "login": "dlarchikov",
      "id": 3336114,
      "node_id": "MDQ6VXNlcjMzMzYxMTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3336114?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlarchikov",
      "html_url": "https://github.com/dlarchikov",
      "followers_url": "https://api.github.com/users/dlarchikov/followers",
      "following_url": "https://api.github.com/users/dlarchikov/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlarchikov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlarchikov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlarchikov/subscriptions",
      "organizations_url": "https://api.github.com/users/dlarchikov/orgs",
      "repos_url": "https://api.github.com/users/dlarchikov/repos",
      "events_url": "https://api.github.com/users/dlarchikov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlarchikov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-24T13:54:28Z",
    "updated_at": "2022-06-24T13:54:28Z",
    "author_association": "NONE",
    "body": "> Hitting this too...\r\n> \r\n> I'm using the simulated backend to deploy and play with smart contracts. Unfortunately, calls to estimategas fail with `\"execution reverted\"`. No details seem to be available (in the error nor the context).\r\n> \r\n> If I still proceed to TX, it fails without details as well: it consumes just a bit of gas and returns a zero status. Logs of the receipt are empty and I didn't find anything interesting in the whole receipt.\r\n\r\nsame problems",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1165600282/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
