{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26647",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26647/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26647/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26647/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/26647",
  "id": 1577368385,
  "node_id": "I_kwDOAOvK985eBLtB",
  "number": 26647,
  "title": "Possible error re withdrawals empty or missing in rlp-decoded body",
  "user": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2023-02-09T07:14:25Z",
  "updated_at": "2023-02-15T13:44:22Z",
  "closed_at": "2023-02-15T13:44:21Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Received via discord from @michaelsproul. CC @fjl \r\n\r\n----\r\n\r\nI think I may have identified a small Geth bug. I'm not sure though because my Go-fu is terrible so I haven't even tried to look at the code.\r\n\r\nOut of the box, you can't sync Lighthouse+Geth on Zhejiang at the moment. Several users reported this, and I reproduced it just now.\r\n\r\nThe error that Geth reports is\r\n\r\n```\r\nERROR[02-09|14:28:02.610] Beacon backfilling failed                err=\"retrieved hash chain is invalid: missing withdrawals in block body\"\r\nWARN [02-09|14:28:12.188] Marked new chain head as invalid         hash=530ef8..150093 badnumber=42314 badhash=1c5f2c..b07418\r\n\r\n```\r\n\r\n(full error: https://gist.github.com/michaelsproul/9082b5763f7cb90044a646f10aefeb38)\r\n\r\nMy current guess is that Geth is deserializing withdrawals: nil instead of withdrawals: [] when decoding blocks from devp2p. The block hash check passes (because nil and [] are RLP-equivalent, right?) but then Geth realises that there are no withdrawals when there should be based on the timestamp. So a valid block hash gets marked invalid and the chain breaks.\r\n\r\nNodes following the chain since genesis won't have had this issue because they'll have got a JSON execution payload straight from the CL. The reason it happens more often with Lighthouse is that we have an optimisation that skips the newPayload message while syncing, so we don't drip feed every payload to the EL (forcing the EL to download its own payloads). This feature can be turned off with --disable-optimistic-finalized-sync, and indeed syncing Lighthouse-Geth with this flag doesn't trigger the issue.\r\n",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26647/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26647/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1423844278",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26647#issuecomment-1423844278",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26647",
    "id": 1423844278,
    "node_id": "IC_kwDOAOvK985U3iO2",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-09T08:59:26Z",
    "updated_at": "2023-02-09T08:59:26Z",
    "author_association": "MEMBER",
    "body": "It _seems_ to be ok. The rlp optional in geth behaves as I had expected, either \r\n```\r\n  ],\r\n  [],\r\n  [],\r\n]\r\n```\r\ntwo empty lists ( txs, receipts) for blocks that are _lacking_ withdrawals (pre-shanghai), or \r\n```\r\n  [],\r\n  [],\r\n  [],\r\n]\r\n```\r\nThree empty lists, if the withdrawals are present but empty. No ambiguity on the rlp level. \r\nI'll look into the decoder a bit more",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1423844278/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1423879295",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26647#issuecomment-1423879295",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26647",
    "id": 1423879295,
    "node_id": "IC_kwDOAOvK985U3qx_",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-09T09:25:39Z",
    "updated_at": "2023-02-09T09:25:46Z",
    "author_association": "MEMBER",
    "body": "Go unit test for the decoder, also confirms that the rlp decoding in geth looks okay\r\n```go\r\nfunc TestWithdrawalEncoding(t *testing.T) {\r\n\tcheck := func(f string, got, want interface{}) {\r\n\t\tif !reflect.DeepEqual(got, want) {\r\n\t\t\tt.Errorf(\"%s mismatch: got %v, want %v\", f, got, want)\r\n\t\t}\r\n\t}\r\n\r\n\theader := &Header{\r\n\t\tWithdrawalsHash: &EmptyRootHash,\r\n\t}\r\n\twithdrawals := make([]*Withdrawal, 0)\r\n\tblock := NewBlock(header, nil, nil, nil, nil).WithWithdrawals(withdrawals)\r\n\r\n\tencRLP, err := rlp.EncodeToBytes(block)\r\n\tif err != nil {\r\n\t\tt.Fatal(err)\r\n\t}\r\n\r\n\tvar decoded Block\r\n\tif err := rlp.DecodeBytes(encRLP, &decoded); err != nil {\r\n\t\tt.Fatal(\"decode error: \", err)\r\n\t}\r\n\r\n\tcheck(\"withdrawalsHash\", decoded.header.WithdrawalsHash, header.WithdrawalsHash)\r\n\tif decoded.withdrawals == nil {\r\n\t\tpanic(\"asdf\")\r\n\t}\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1423879295/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1425192866",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26647#issuecomment-1425192866",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26647",
    "id": 1425192866,
    "node_id": "IC_kwDOAOvK985U8rei",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-10T05:26:32Z",
    "updated_at": "2023-02-10T05:28:12Z",
    "author_association": "NONE",
    "body": "I added some logging and indeed it seems to be a _header_ with the correct hash, and a block _body_ with `nil` withdrawals:\r\n\r\n> ERROR[02-10|13:23:52.785] Beacon backfilling failed                err=\"retrieved hash chain is invalid: missing withdrawals in block body. withdrawals hash is 56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421, header hash is 1c5f2c9cbaa2e7c7abdb6fa73e7562beea21ce6af8a0e52a5634f6283db07418\"\r\n\r\nthe code change:\r\n\r\n```diff\r\n+++ b/core/block_validator.go\r\n@@ -71,7 +71,7 @@ func (v *BlockValidator) ValidateBody(block *types.Block) error {\r\n        if header.WithdrawalsHash != nil {\r\n                // Withdrawals list must be present in body after Shanghai.\r\n                if block.Withdrawals() == nil {\r\n-                       return fmt.Errorf(\"missing withdrawals in block body\")\r\n+                       return fmt.Errorf(\"missing withdrawals in block body. withdrawals hash is %x, header hash is %x\", header.WithdrawalsHash, header.Hash())\r\n                }\r\n                if hash := types.DeriveSha(block.Withdrawals(), trie.NewStackTrie(nil)); hash != *header.WithdrawalsHash {\r\n                        return fmt.Errorf(\"withdrawals root hash mismatch (header value %x, calculated %x)\", *header.WithdrawalsHash, hash)\r\n```\r\n\r\nI also enabled debug logs to see which client was sending the faulty block body.\r\n\r\nJust after the error occurred I had only 1 connected peer:\r\n\r\n> ERROR[02-10|13:23:52.785] Beacon backfilling failed                err=\"retrieved hash chain is invalid: missing withdrawals in block body but hash is 56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421, header hash is 1c5f2c9cbaa2e7c7abdb6fa73e7562beea21ce6af8a0e52a5634f6283db07418\"\r\n> INFO [02-10|13:23:53.224] Looking for peers                        peercount=1  tried=123 static=0\r\n\r\nAnd just prior to that I see a request to peer `d3185b8457361940` for block bodies:\r\n\r\n> DEBUG[02-10|13:23:52.701] Fetching batch of block bodies           id=d3185b8457361940 conn=dyndial         count=128\r\n\r\nAnd right back at node start up the peer identification is `Geth/v1.11.0` (not sure how to un-truncate the name to get the commit hash, but I suspect this could be one of the Zhejiang bootnodes).\r\n\r\n> Ethereum peer connected                  id=d3185b8457361940 conn=dyndial         name=Geth/v1.11.0-unstabl...\r\n\r\nMaybe the issue isn't actually a bug in Geth's serialisation/deserialisation but in the handling of dodgy data from misconfigured/malicious peers. I tried to poke around to find what validation is applied to block bodies after fetching headers, and AFAICT it only happens in the `insertIterator` here:\r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/77380b9629e4f679778ce9de037ffdaf9c925238/core/blockchain_insert.go#L124\r\n\r\nAt that point, it seems the downloader expects bodies to be valid and won't recover if `ValidateBody` returns an error. This comment seems to suggest that at least:\r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/77380b9629e4f679778ce9de037ffdaf9c925238/eth/downloader/downloader.go#L1553-L1555\r\n\r\nI went looking for other body validation and found the logic in `DeliverBodies`, but was confused when my debugging statements didn't show up for the offending block in question (42314). The debug logs I added are in [this commit](https://github.com/michaelsproul/go-ethereum/commit/61394156b971fd463d09aac4ec7534edd5072a11) and the debug logs from a recent run with that commit are [here](https://gist.github.com/michaelsproul/fc8558c10029a387d1e0d176c247fce3). Maybe this omission is significant, as it seems to imply the logic here is being skipped?\r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/77380b9629e4f679778ce9de037ffdaf9c925238/eth/downloader/queue.go#L783-L788\r\n\r\nAll in all I'm thoroughly confused about what's going on, but can consistently reproduce this issue syncing Lighthouse + Geth on Zhejiang. It just takes about 20-30 minutes each time after nuking Geth's DB and re-syncing it. Someone more experienced with Geth would probably have an easier time debugging it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1425192866/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1425435247",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26647#issuecomment-1425435247",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26647",
    "id": 1425435247,
    "node_id": "IC_kwDOAOvK985U9mpv",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-10T08:51:53Z",
    "updated_at": "2023-02-10T08:51:53Z",
    "author_association": "MEMBER",
    "body": "@michaelsproul I think Mario has found the issue to be in EthereumJS. One problem is that both [] and nil hash to the same emptyRootHash, so we compute the header hash correctly even if the withdrawals are wrong. \r\n\r\nOne fix that we can do is to manually set the withdrawals list to [] if we have an emptyRootHash in the header (and the withdrawals are nil). This would fix it on our side. Either way ethereumjs needs to fix their encoding",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1425435247/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1431392839",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26647#issuecomment-1431392839",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26647",
    "id": 1431392839,
    "node_id": "IC_kwDOAOvK985VUVJH",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-15T13:44:21Z",
    "updated_at": "2023-02-15T13:44:21Z",
    "author_association": "MEMBER",
    "body": "Fixed by https://github.com/ethereum/go-ethereum/pull/26675",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1431392839/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
