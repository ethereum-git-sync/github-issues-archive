{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24079",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24079/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24079/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24079/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/24079",
  "id": 1073551998,
  "node_id": "I_kwDOAOvK984__Rp-",
  "number": 24079,
  "title": "transaction underpriced",
  "user": {
    "login": "XWJACK",
    "id": 15156226,
    "node_id": "MDQ6VXNlcjE1MTU2MjI2",
    "avatar_url": "https://avatars.githubusercontent.com/u/15156226?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/XWJACK",
    "html_url": "https://github.com/XWJACK",
    "followers_url": "https://api.github.com/users/XWJACK/followers",
    "following_url": "https://api.github.com/users/XWJACK/following{/other_user}",
    "gists_url": "https://api.github.com/users/XWJACK/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/XWJACK/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/XWJACK/subscriptions",
    "organizations_url": "https://api.github.com/users/XWJACK/orgs",
    "repos_url": "https://api.github.com/users/XWJACK/repos",
    "events_url": "https://api.github.com/users/XWJACK/events{/privacy}",
    "received_events_url": "https://api.github.com/users/XWJACK/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "zsfelfoldi",
    "id": 9884311,
    "node_id": "MDQ6VXNlcjk4ODQzMTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9884311?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zsfelfoldi",
    "html_url": "https://github.com/zsfelfoldi",
    "followers_url": "https://api.github.com/users/zsfelfoldi/followers",
    "following_url": "https://api.github.com/users/zsfelfoldi/following{/other_user}",
    "gists_url": "https://api.github.com/users/zsfelfoldi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zsfelfoldi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zsfelfoldi/subscriptions",
    "organizations_url": "https://api.github.com/users/zsfelfoldi/orgs",
    "repos_url": "https://api.github.com/users/zsfelfoldi/repos",
    "events_url": "https://api.github.com/users/zsfelfoldi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zsfelfoldi/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "zsfelfoldi",
      "id": 9884311,
      "node_id": "MDQ6VXNlcjk4ODQzMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9884311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zsfelfoldi",
      "html_url": "https://github.com/zsfelfoldi",
      "followers_url": "https://api.github.com/users/zsfelfoldi/followers",
      "following_url": "https://api.github.com/users/zsfelfoldi/following{/other_user}",
      "gists_url": "https://api.github.com/users/zsfelfoldi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zsfelfoldi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zsfelfoldi/subscriptions",
      "organizations_url": "https://api.github.com/users/zsfelfoldi/orgs",
      "repos_url": "https://api.github.com/users/zsfelfoldi/repos",
      "events_url": "https://api.github.com/users/zsfelfoldi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zsfelfoldi/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2021-12-07T16:34:05Z",
  "updated_at": "2021-12-17T14:44:58Z",
  "closed_at": "2021-12-17T14:44:58Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "I found that I cannot send tx today.\r\n\r\n![image](https://user-images.githubusercontent.com/15156226/145066344-e948c506-b5a4-4e56-8371-40569a3ba8e7.png)\r\n\r\nFor example:\r\ncurrent tx pool: `baseFee == 80`\r\nsend tx config: `maxFeePerGas == 75 maxPriorityFeePerGas == 1`\r\n\r\n> The only way to send this tx is to wait for tx pool baseFeed fall down 74 ?",
  "closed_by": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24079/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24079/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/988103419",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24079#issuecomment-988103419",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24079",
    "id": 988103419,
    "node_id": "IC_kwDOAOvK98465UL7",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-07T16:54:04Z",
    "updated_at": "2021-12-07T16:56:39Z",
    "author_association": "MEMBER",
    "body": "Thanks for creating a new issue. I think the behavior of geth is kind of correct here. Your tx data with maxFeePerGas specifies that you want to pay a maximum of 75 wei per gas for this transaction. However, when the baseFee is 80, it will cost at least 80 wei/gas, so the transaction is underpriced.\r\n\r\nThe solution is sending with higher maxFeePerGas.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/988103419/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/988373599",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24079#issuecomment-988373599",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24079",
    "id": 988373599,
    "node_id": "IC_kwDOAOvK98466WJf",
    "user": {
      "login": "XWJACK",
      "id": 15156226,
      "node_id": "MDQ6VXNlcjE1MTU2MjI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/15156226?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/XWJACK",
      "html_url": "https://github.com/XWJACK",
      "followers_url": "https://api.github.com/users/XWJACK/followers",
      "following_url": "https://api.github.com/users/XWJACK/following{/other_user}",
      "gists_url": "https://api.github.com/users/XWJACK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/XWJACK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/XWJACK/subscriptions",
      "organizations_url": "https://api.github.com/users/XWJACK/orgs",
      "repos_url": "https://api.github.com/users/XWJACK/repos",
      "events_url": "https://api.github.com/users/XWJACK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/XWJACK/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-08T00:27:15Z",
    "updated_at": "2021-12-08T00:27:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Thanks for creating a new issue. I think the behavior of geth is kind of correct here. Your tx data with maxFeePerGas specifies that you want to pay a maximum of 75 wei per gas for this transaction. However, when the baseFee is 80, it will cost at least 80 wei/gas, so the transaction is underpriced.\r\n> \r\n> The solution is sending with higher maxFeePerGas.\r\n\r\nPerhaps you are right. But i think `baseFee` is unstable.\r\n![image](https://user-images.githubusercontent.com/15156226/145125895-0a86ee2c-998a-489a-9c7d-1d536d4ab0fe.png)\r\n\r\nAnd `pricelimit ` is a configuration that refuse low gas `maxFeePerGas  <= pricelimit`, not `maxFeePerGas  <= pool.baseFee`\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/988373599/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/988651207",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24079#issuecomment-988651207",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24079",
    "id": 988651207,
    "node_id": "IC_kwDOAOvK98467Z7H",
    "user": {
      "login": "jasonklein",
      "id": 6839162,
      "node_id": "MDQ6VXNlcjY4MzkxNjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6839162?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasonklein",
      "html_url": "https://github.com/jasonklein",
      "followers_url": "https://api.github.com/users/jasonklein/followers",
      "following_url": "https://api.github.com/users/jasonklein/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasonklein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasonklein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasonklein/subscriptions",
      "organizations_url": "https://api.github.com/users/jasonklein/orgs",
      "repos_url": "https://api.github.com/users/jasonklein/repos",
      "events_url": "https://api.github.com/users/jasonklein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasonklein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-08T09:40:03Z",
    "updated_at": "2021-12-08T09:40:27Z",
    "author_association": "NONE",
    "body": "I also just got bit by this, I think.\r\n\r\n> Thanks for creating a new issue. I think the behavior of geth is kind of correct here. Your tx data with maxFeePerGas specifies that you want to pay a maximum of 75 wei per gas for this transaction. However, when the baseFee is 80, it will cost at least 80 wei/gas, so the transaction is underpriced.\r\n> \r\n> The solution is sending with higher maxFeePerGas.\r\n\r\n@fjl: to be clear, does your response mean that the threshold for getting into the pool should be the same as the threshold for getting into the next block? Or, said differently, in order to have a transaction admitted into the pool, a user must price the transaction to be mined quickly, regardless of how quickly they need the transaction to be mined?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/988651207/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/988767397",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24079#issuecomment-988767397",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24079",
    "id": 988767397,
    "node_id": "IC_kwDOAOvK984672Sl",
    "user": {
      "login": "XWJACK",
      "id": 15156226,
      "node_id": "MDQ6VXNlcjE1MTU2MjI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/15156226?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/XWJACK",
      "html_url": "https://github.com/XWJACK",
      "followers_url": "https://api.github.com/users/XWJACK/followers",
      "following_url": "https://api.github.com/users/XWJACK/following{/other_user}",
      "gists_url": "https://api.github.com/users/XWJACK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/XWJACK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/XWJACK/subscriptions",
      "organizations_url": "https://api.github.com/users/XWJACK/orgs",
      "repos_url": "https://api.github.com/users/XWJACK/repos",
      "events_url": "https://api.github.com/users/XWJACK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/XWJACK/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-08T12:25:18Z",
    "updated_at": "2021-12-08T12:25:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "May be we can add new configuration parameters?\r\n\r\n```\r\n--txpool.basefeelimitpercent value           Minimum base fee percent (percent of real-time base fee) limit to enforce for acceptance into the pool (default: 20)\r\n--txpool.priorityfeelimit value              Minimum priority fee (maxPriorityFeePerGas) limit to enforce for acceptance into the pool (default: 1)\r\n```\r\n\r\n- the first param `basefeelimitpercent` represents the percentage of real-time base fee (tx pool).\r\nFor example:\r\n1. `--txpool.basefeelimitpercent 20`\r\n2. `current pool.baseFee == 80`\r\nsending tx with `baseFeePerGas < 16 (80 * 20%)` will be rejected.\r\n\r\n- the second param `priorityfeelimit` represents the tip for miners.\r\nFor example:\r\n1. `--txpool.priorityfeelimit 1`\r\nsending tx with `maxPriorityFeePerGas < 1` will be rejected.\r\n\r\n> to be legacy tx (gasPrice)\r\n> `gasPrice < 16` or `gasPrice - 16 < 1` will be rejected.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/988767397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/988771932",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24079#issuecomment-988771932",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24079",
    "id": 988771932,
    "node_id": "IC_kwDOAOvK984673Zc",
    "user": {
      "login": "jhoenicke",
      "id": 897826,
      "node_id": "MDQ6VXNlcjg5NzgyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/897826?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhoenicke",
      "html_url": "https://github.com/jhoenicke",
      "followers_url": "https://api.github.com/users/jhoenicke/followers",
      "following_url": "https://api.github.com/users/jhoenicke/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoenicke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhoenicke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoenicke/subscriptions",
      "organizations_url": "https://api.github.com/users/jhoenicke/orgs",
      "repos_url": "https://api.github.com/users/jhoenicke/repos",
      "events_url": "https://api.github.com/users/jhoenicke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhoenicke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-08T12:32:08Z",
    "updated_at": "2021-12-08T13:45:48Z",
    "author_association": "NONE",
    "body": "In my opinion this is a bug in geth 1.10.13.  The txpool should not only include transaction that are currently profitable to mine, but also transactions that may be profitable to mine 5 seconds into the future.  However the current code will reject transactions that pay 800 Gwei if the base fee is currently 805 Gwei and the txpool only contains transaction below 300 Gwei.\r\n\r\nTo fix this, revert to the old code and use the maximum priority fee instead of the current priority fee.  The code already makes sure that it only includes the most profitable transactions and will evict the transactions that pay the lowest overall fee.  The new code will evict any new transactions below the current base fee, but keep transactions in the mempool that pay far less.\r\n\r\nTo see this in an image, visit https://mempool.jhoenicke.de/#ETH,2w,count,30\r\nThe geth-1.10.13 behaviour was active from Nov 27-29. After that I reverted my node back to the previous code.  You can see that although the txpool kept transaction below 50 Gwei, it did not include new transactions above 100 Gwei, when the base fee was around 120 Gwei.\r\n\r\nEdit: I should add that my node has a huge number of slot settings.  With the default 4k the node would evict low fee transactions as soon as the pool reaches 4k transactions.  The difference between old and new code is then that the old code would keep the 4k most paying transactions, while the new code would stop accepting new transactions long before it reaches the limit and keep most of the old low fee transactions.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/988771932/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/988811630",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24079#issuecomment-988811630",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24079",
    "id": 988811630,
    "node_id": "IC_kwDOAOvK98468BFu",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-08T13:24:16Z",
    "updated_at": "2021-12-08T13:24:16Z",
    "author_association": "MEMBER",
    "body": "Thanks a lot for your input. @jhoenicke your graph is very helpful.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/988811630/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/989086642",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24079#issuecomment-989086642",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24079",
    "id": 989086642,
    "node_id": "IC_kwDOAOvK98469EOy",
    "user": {
      "login": "mrballsauce",
      "id": 35939171,
      "node_id": "MDQ6VXNlcjM1OTM5MTcx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35939171?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrballsauce",
      "html_url": "https://github.com/mrballsauce",
      "followers_url": "https://api.github.com/users/mrballsauce/followers",
      "following_url": "https://api.github.com/users/mrballsauce/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrballsauce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrballsauce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrballsauce/subscriptions",
      "organizations_url": "https://api.github.com/users/mrballsauce/orgs",
      "repos_url": "https://api.github.com/users/mrballsauce/repos",
      "events_url": "https://api.github.com/users/mrballsauce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrballsauce/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-08T18:45:40Z",
    "updated_at": "2021-12-08T18:45:40Z",
    "author_association": "NONE",
    "body": "This is a bug. It should be possible for a user to choose a gas fee as low as they want. User should be able to wait patiently for network to be less congested and accept a low \"bid.\" Auto rejecting low fee transactions is harmful to the network in long term.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/989086642/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/989703891",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24079#issuecomment-989703891",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24079",
    "id": 989703891,
    "node_id": "IC_kwDOAOvK9846_a7T",
    "user": {
      "login": "zsfelfoldi",
      "id": 9884311,
      "node_id": "MDQ6VXNlcjk4ODQzMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9884311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zsfelfoldi",
      "html_url": "https://github.com/zsfelfoldi",
      "followers_url": "https://api.github.com/users/zsfelfoldi/followers",
      "following_url": "https://api.github.com/users/zsfelfoldi/following{/other_user}",
      "gists_url": "https://api.github.com/users/zsfelfoldi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zsfelfoldi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zsfelfoldi/subscriptions",
      "organizations_url": "https://api.github.com/users/zsfelfoldi/orgs",
      "repos_url": "https://api.github.com/users/zsfelfoldi/repos",
      "events_url": "https://api.github.com/users/zsfelfoldi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zsfelfoldi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-09T10:07:51Z",
    "updated_at": "2021-12-09T10:09:08Z",
    "author_association": "MEMBER",
    "body": "Rejecting transactions with an error because `maxFeePerGas < baseFee` is indeed wrong. We should allow transactions in the pool that have a chance of being included later with lower base fee. Checking `maxPriorityFeePerGas` aagainst a sanity check threshold (like we did earlier) makes sense (even though it's usually the smaller component of the final price). For also sanity checking the `maxFeePerGas` we can go with the suggestion from @XWJACK. I should note though that the suggested check condition is not correct, transactions don't offer a `baseFeePerGas`. The correct check condition should look like\r\n```\r\ntx.maxPriorityFeePerGas >= txpool.priorityfeelimit\r\ntx.maxFeePerGas >= pendingBlock.baseFee * txpool.basefeelimitpercent / 100 + txpool.priorityfeelimit\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/989703891/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/990070515",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24079#issuecomment-990070515",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24079",
    "id": 990070515,
    "node_id": "IC_kwDOAOvK9847A0bz",
    "user": {
      "login": "ryanschneider",
      "id": 53520,
      "node_id": "MDQ6VXNlcjUzNTIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/53520?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanschneider",
      "html_url": "https://github.com/ryanschneider",
      "followers_url": "https://api.github.com/users/ryanschneider/followers",
      "following_url": "https://api.github.com/users/ryanschneider/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanschneider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanschneider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanschneider/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanschneider/orgs",
      "repos_url": "https://api.github.com/users/ryanschneider/repos",
      "events_url": "https://api.github.com/users/ryanschneider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanschneider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-09T17:37:22Z",
    "updated_at": "2021-12-09T17:39:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also, I _think_ there's an off-by-one error?  \r\n\r\nfocusing on the change here: https://github.com/ethereum/go-ethereum/pull/23855\r\n\r\n```golang\r\nif !local && tx.EffectiveGasTipIntCmp(pool.gasPrice, pendingBaseFee) < 0 {\r\n  return ErrUnderpriced\r\n}\r\n```\r\n\r\nI'm not really familar with this code, so it's entirely possible I missed something (I know I got it wrong the first time, this was from my second attempt at unpacking these lines).  This simple-looking check is actually packing a _lot_ of logic into it that takes a bit to unwind, so I do so below, focusing on the `tx.EffectiveGasTipIntCmp` portion.\r\n\r\n- For reference, `pool.gasPrice` for a *non-miner* is taken from the `txpool.pricelimit` arg:\r\n\r\n```\r\n  --txpool.pricelimit value           Minimum gas price limit to enforce for acceptance into the pool (default: 1)\r\n```\r\n\r\nThus for most geth installs we have:\r\n\r\n```golang\r\npool.gasPrice := 1 \r\npendingBaseFee := pool.priced.urgent.baseFee\r\n```\r\n\r\nAnd now if we focus on this part:\r\n\r\n```golang\r\ntx.EffectiveGasTipIntCmp(1, pendingBaseFee) < 0\r\n```\r\n\r\nWe can \"simplify\" it to the code below, based on the logic inside `EffectiveGasTipIntCmp`:\r\n\r\n```golang\r\ntx.EffectiveGasTipValue(pendingBaseFee).Cmp(1)\r\n```\r\n\r\n`EffectiveGasTipValue` is basically `min(tx.GasTipCap(), gasFeeCap.Sub(tx.GasFeeCap(), baseFee))`\r\n\r\n```golang\r\ntx.EffectiveGasTipValue = min(tx.GasTipCap(), tx.GasFeeCap() - pendingBaseFee)\r\n```\r\n\r\nFor legacy TXs, GasTipCap and GasFeeCap are both tx.GasPrice.\r\n\r\n```golang\r\ntx.EffectiveGasTipValue = min(tx.GasPrice, tx.GasPrice - pendingBaseFee)\r\n```\r\n\r\nNow we can plug `EffectiveGasTipValue` back into the original equation:\r\n\r\n```golang\r\nmin(tx.GasPrice, tx.GasPrice - pendingBaseFee).Cmp(1) < 0\r\n```\r\n\r\n`x.Cmp(y)` is basically `return -1 if x < y, return 0 if equal else return 1`. So `x.Cmp(y) < 0` is basically `x < y`.\r\n\r\n```golang\r\nmin(tx.GasPrice, tx.GasPrice - pendingBaseFee) < 1\r\n```\r\n\r\n`min(x, x - N)` should always be `x - N` for non-negative `N` so:\r\n\r\n```golang\r\n(tx.GasPrice - pendingBaseFee) < 1\r\n```\r\n\r\nWon't this lead to txs where `tx.GasPrice == pendingBaseFee` also getting rejected?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/990070515/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/990111116",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24079#issuecomment-990111116",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24079",
    "id": 990111116,
    "node_id": "IC_kwDOAOvK9847A-WM",
    "user": {
      "login": "jhoenicke",
      "id": 897826,
      "node_id": "MDQ6VXNlcjg5NzgyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/897826?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhoenicke",
      "html_url": "https://github.com/jhoenicke",
      "followers_url": "https://api.github.com/users/jhoenicke/followers",
      "following_url": "https://api.github.com/users/jhoenicke/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoenicke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhoenicke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoenicke/subscriptions",
      "organizations_url": "https://api.github.com/users/jhoenicke/orgs",
      "repos_url": "https://api.github.com/users/jhoenicke/repos",
      "events_url": "https://api.github.com/users/jhoenicke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhoenicke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-09T18:26:57Z",
    "updated_at": "2021-12-09T18:38:44Z",
    "author_association": "NONE",
    "body": "> Won't this lead to txs where `tx.GasPrice == pendingBaseFee` also getting rejected?\r\n\r\nYes, but that is intentional.  The comparison is `(tx.GasPrice - pendingBaseFee) < pricelimit`. The pricelimit is the minimum tip a miner wants for himself for including the tx. The default pricelimit is actually 1 ~~Gwei~~wei.  The only problem here is that the actual miner tip changes too fast to use it for deciding txpool inclusion.  So it's better to use the max tip instead.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/990111116/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
