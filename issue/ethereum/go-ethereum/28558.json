{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28558",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28558/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28558/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28558/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/28558",
  "id": 2001974552,
  "node_id": "I_kwDOAOvK9853U7UY",
  "number": 28558,
  "title": "slog: API backwards compatibility investigation",
  "user": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "jwasinger",
      "id": 3411040,
      "node_id": "MDQ6VXNlcjM0MTEwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3411040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jwasinger",
      "html_url": "https://github.com/jwasinger",
      "followers_url": "https://api.github.com/users/jwasinger/followers",
      "following_url": "https://api.github.com/users/jwasinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/jwasinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jwasinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jwasinger/subscriptions",
      "organizations_url": "https://api.github.com/users/jwasinger/orgs",
      "repos_url": "https://api.github.com/users/jwasinger/repos",
      "events_url": "https://api.github.com/users/jwasinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jwasinger/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2023-11-20T11:26:53Z",
  "updated_at": "2023-11-21T10:10:02Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "We need to figure out exactly what the fallout would be from switching to slog from our internal log package and how we can create some adapters to keep the old functionality in dependent code. Ideally, we should have a way for users to use both the old and new APIs/packages until a deprecation period arrives, while we internally would switch over to the new slog version immediately.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28558/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28558/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1818895029",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/28558#issuecomment-1818895029",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28558",
    "id": 1818895029,
    "node_id": "IC_kwDOAOvK985saiK1",
    "user": {
      "login": "jwasinger",
      "id": 3411040,
      "node_id": "MDQ6VXNlcjM0MTEwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3411040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jwasinger",
      "html_url": "https://github.com/jwasinger",
      "followers_url": "https://api.github.com/users/jwasinger/followers",
      "following_url": "https://api.github.com/users/jwasinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/jwasinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jwasinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jwasinger/subscriptions",
      "organizations_url": "https://api.github.com/users/jwasinger/orgs",
      "repos_url": "https://api.github.com/users/jwasinger/repos",
      "events_url": "https://api.github.com/users/jwasinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jwasinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-20T11:43:22Z",
    "updated_at": "2023-11-20T11:43:22Z",
    "author_association": "MEMBER",
    "body": "copying this relevant comment from @holiman on the slog PR:\r\n\r\n---\r\nWe should consider some options to make life simper for projects using `go-ethereum/log` as a library. Some options that I can think of are:\r\n   1. Put our `slog` stuff into `go-ethereum/slog`, and never touch `log` (add deprecation notices though). Easy for downstreams (they probably won't even notice). \r\n   3. Put our `slogs` stuff into either `go-ethereum/slog` or `go-ethereum/log`, but move the old stuff into `go-ethereum/legacylog`. Dependent projects will break, but we can just tell them to repoint the dependency from `log` to `legacylog`. There's even some go alias magic we can make use of. \r\n   4. Put our `slogs` stuff into either `go-ethereum/slog` or `go-ethereum/log`, but put our old stuff into a (dead) new repo: e.g. `ethereum/geth-legacy/log`. Dependent projects will break, but we can just tell them to repoint the dependency to the new repository. (Possibly use alias magic?)\r\n\r\nI don't think it's good to do what we do right now, which just overwrites the `log` package in a non-backwards compatible way with no easy way to un-break. I mean, we don't want people to not be able to upgrade their geth-dependency. \r\n\r\n---\r\n\r\nNow that I think about it, none of these really preserve backwards-compatibility.  Even option 1) breaks backwards compatibility as setting the root logger in the `log` would not apply to any logs made from Geth code.\r\n\r\nWriting an adapter seems like it is something that would be somewhat complex but feasible.  I'd have to think more about how it would be done though.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1818895029/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1818910035",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/28558#issuecomment-1818910035",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28558",
    "id": 1818910035,
    "node_id": "IC_kwDOAOvK985sal1T",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-20T11:52:27Z",
    "updated_at": "2023-11-20T11:52:27Z",
    "author_association": "MEMBER",
    "body": ">Now that I think about it, none of these really preserve backwards-compatibility.\r\n\r\nWell, from an api-perspective, it does. Yes, the go-ethereum won't log to whatever you set from the outside, but that's a different (acceptable) type of breakage IMO.  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1818910035/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1819738043",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/28558#issuecomment-1819738043",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28558",
    "id": 1819738043,
    "node_id": "IC_kwDOAOvK985sdv-7",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-20T20:15:49Z",
    "updated_at": "2023-11-20T20:17:19Z",
    "author_association": "MEMBER",
    "body": "I think what we should do is, move our slog customizations to a new package `internal/slog`, and create an adapter that relays log messages sent with the old logger through slog. That way, if there are any software projects using the geth logger, their messages will just be forwarded to slog. Performance of the adapter doesn't matter since we won't use it. We will also mark the log package deprecated and delete it later.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1819738043/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1820427046",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/28558#issuecomment-1820427046",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28558",
    "id": 1820427046,
    "node_id": "IC_kwDOAOvK985sgYMm",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-21T08:13:30Z",
    "updated_at": "2023-11-21T08:13:30Z",
    "author_association": "MEMBER",
    "body": "I really don't want to move anything into internal. It was a bad idea, we ended up using it as a junk yard. My 2c, nuke everything inside and clean up the code.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1820427046/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1820552800",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/28558#issuecomment-1820552800",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28558",
    "id": 1820552800,
    "node_id": "IC_kwDOAOvK985sg25g",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-21T09:35:21Z",
    "updated_at": "2023-11-21T09:35:21Z",
    "author_association": "MEMBER",
    "body": "Ah wait, I actually agree with @fjl :)) I thought about something else.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1820552800/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1820606613",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/28558#issuecomment-1820606613",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28558",
    "id": 1820606613,
    "node_id": "IC_kwDOAOvK985shECV",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-21T10:10:00Z",
    "updated_at": "2023-11-21T10:10:00Z",
    "author_association": "MEMBER",
    "body": "We've had an hour log discussion today about the compatibility issues and solutions, and we're kind of in agreement with the following approach and fallout:\r\n\r\nThe approach would be to gut out the `log` package and replace it's implementation with `slog`.\r\n\r\nThe fallout:\r\n\r\n- People running Geth as a self contained command should not see any change. The new package internals have tests that verify that the output format is the same with the old and new code. This is IMO the most important thing as an update could silently break things.\r\n- People running bits of go-ethereum as a library directly and being interested in the logs emitted (e.g. txpool logs) would hit a compilation error when upgrading to the new version of go-ethereum. For these people the change needed would be to replace the log initialization (so 1 line) to get their code fixed. Annoying, yes, but the issue would hit during dependency update time and not runtime, so you already have a dev actively doing it.\r\n  - The alternative possibility of keeping the API stable (e.g. deprecating `log` and having a new `slog` for us to save that 1 liner initialization) would mean that the new go-ethereum library would integrate without any issues, **but** the logs would silently disappear as we're be pushing them into an uninitialized slog and not log15 any more which the user inited in their code. IMO this is worse, because instead of a build-time breakage, we have a silent runtime breakage.\r\n- People running go-ethereum as a second order dependency (final app -> direct dependency -> indirect go-ethereum dep) would potentially hit a different issue. When they update their direct dependency, go modules will blindly pull in a new version of go-ethereum as the slog version will be compatible on a semantic versioning level to the log15 version. This will result in a build error on the second order dependencies.\r\n  - This is unfortunate, but it *still* means a build error instead of a runtime error. Fixing the issue is slightly more annoying here, as it would require the indirect dependency to pin the go-ethereum version used by the direct dependency, until the direct dependency updates their code. This breakage would however only happen if the direct dep actually cares about the logs and does log handler inits. If it doesn't, then there's no breakage. We feel the probability is low enough that someone uses go-ethereum in a deep dependency stack, and *does not* care about go-ethereum enough to pin it, but *does* care about the go-ethereum logs.\r\n- People using go-ethereum/log as a dependency will hit a build error upon upgrading, but it should be fixable with a single line initializer change. I don't think there would be many users outside of ourselves as it's a bit strange to rely on Geth's 500MB repo for a clone of log15.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1820606613/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
