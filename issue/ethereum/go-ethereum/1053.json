{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1053",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1053/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1053/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1053/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/1053",
  "id": 78452139,
  "node_id": "MDU6SXNzdWU3ODQ1MjEzOQ==",
  "number": 1053,
  "title": "Separate extra and dapp db",
  "user": {
    "login": "obscuren",
    "id": 6264126,
    "node_id": "MDQ6VXNlcjYyNjQxMjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/obscuren",
    "html_url": "https://github.com/obscuren",
    "followers_url": "https://api.github.com/users/obscuren/followers",
    "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
    "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
    "organizations_url": "https://api.github.com/users/obscuren/orgs",
    "repos_url": "https://api.github.com/users/obscuren/repos",
    "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
    "received_events_url": "https://api.github.com/users/obscuren/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "bas-vk",
    "id": 4280775,
    "node_id": "MDQ6VXNlcjQyODA3NzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4280775?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bas-vk",
    "html_url": "https://github.com/bas-vk",
    "followers_url": "https://api.github.com/users/bas-vk/followers",
    "following_url": "https://api.github.com/users/bas-vk/following{/other_user}",
    "gists_url": "https://api.github.com/users/bas-vk/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bas-vk/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bas-vk/subscriptions",
    "organizations_url": "https://api.github.com/users/bas-vk/orgs",
    "repos_url": "https://api.github.com/users/bas-vk/repos",
    "events_url": "https://api.github.com/users/bas-vk/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bas-vk/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "bas-vk",
      "id": 4280775,
      "node_id": "MDQ6VXNlcjQyODA3NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4280775?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bas-vk",
      "html_url": "https://github.com/bas-vk",
      "followers_url": "https://api.github.com/users/bas-vk/followers",
      "following_url": "https://api.github.com/users/bas-vk/following{/other_user}",
      "gists_url": "https://api.github.com/users/bas-vk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bas-vk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bas-vk/subscriptions",
      "organizations_url": "https://api.github.com/users/bas-vk/orgs",
      "repos_url": "https://api.github.com/users/bas-vk/repos",
      "events_url": "https://api.github.com/users/bas-vk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bas-vk/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/milestones/5",
    "html_url": "https://github.com/ethereum/go-ethereum/milestone/5",
    "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/milestones/5/labels",
    "id": 1011600,
    "node_id": "MDk6TWlsZXN0b25lMTAxMTYwMA==",
    "number": 5,
    "title": "Frontier",
    "description": "This is the Frontier milestone for the ethereum protocol soft release. This milestone is not set in stone. Over time issues will be added and removed.",
    "creator": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 167,
    "state": "closed",
    "created_at": "2015-03-09T00:06:47Z",
    "updated_at": "2015-07-28T14:12:54Z",
    "due_on": null,
    "closed_at": "2015-07-28T14:12:54Z"
  },
  "comments": 10,
  "created_at": "2015-05-20T09:38:28Z",
  "updated_at": "2015-05-21T13:43:18Z",
  "closed_at": "2015-05-21T13:43:17Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "the `extra` database was meant for stuff which isn't important. Extra is now being used by receipts and transactions. DApps have access to this database through `db_XXXPut` and can overwrite entries. We need an extra db or remove the `get` and `put` methods.\n",
  "closed_by": {
    "login": "obscuren",
    "id": 6264126,
    "node_id": "MDQ6VXNlcjYyNjQxMjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/obscuren",
    "html_url": "https://github.com/obscuren",
    "followers_url": "https://api.github.com/users/obscuren/followers",
    "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
    "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
    "organizations_url": "https://api.github.com/users/obscuren/orgs",
    "repos_url": "https://api.github.com/users/obscuren/repos",
    "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
    "received_events_url": "https://api.github.com/users/obscuren/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1053/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1053/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/103830813",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/1053#issuecomment-103830813",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1053",
    "id": 103830813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzgzMDgxMw==",
    "user": {
      "login": "zelig",
      "id": 769725,
      "node_id": "MDQ6VXNlcjc2OTcyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/769725?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zelig",
      "html_url": "https://github.com/zelig",
      "followers_url": "https://api.github.com/users/zelig/followers",
      "following_url": "https://api.github.com/users/zelig/following{/other_user}",
      "gists_url": "https://api.github.com/users/zelig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zelig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zelig/subscriptions",
      "organizations_url": "https://api.github.com/users/zelig/orgs",
      "repos_url": "https://api.github.com/users/zelig/repos",
      "events_url": "https://api.github.com/users/zelig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zelig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-20T09:55:56Z",
    "updated_at": "2015-05-20T09:55:56Z",
    "author_association": "MEMBER",
    "body": "the community indicated they rely on this feature. We shouldnt remove it:\nsuggestions:\n- use another db: `dappDb` for dapps. \n- use a pattern to make sure different dapps would not collide - dapp-specific prefix. \n- could make it even more secure by explicitly having to \n- a way to prevent dapps reading each others db (maybe could require a nonce and a hash for each flush/transaction that is verified against a token you must supply your client on the command line or config file:\n\n```\ngeth --dbsecrets ~/.ethereum/secrets.json  \n```\n\nthen you need to send `db.get(nonce, result)` where `result = sha3(nonce|secret)` and secret is entered by the user and kept in memory by the dapp. Or some similar crypto :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/103830813/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/103834051",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/1053#issuecomment-103834051",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1053",
    "id": 103834051,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzgzNDA1MQ==",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-20T10:10:22Z",
    "updated_at": "2015-05-20T10:10:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "My two cents:\n\nStoring dapp data in the node is imho the wrong way, dapps should have their own mean of storing (local storage, extra db server). The node should only provide ways to communicate with the network.\n\n(Even key management is questionable, but we will need it for mist in the near future)\n\nIf we find a working solution to deliver dapps, over different sub-domains (e.g. `mydapp.localhost`), then dapps have a way to \"safely\" store data and i would see no reason why to keep this extra db.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/103834051/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/103834849",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/1053#issuecomment-103834849",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1053",
    "id": 103834849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzgzNDg0OQ==",
    "user": {
      "login": "zelig",
      "id": 769725,
      "node_id": "MDQ6VXNlcjc2OTcyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/769725?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zelig",
      "html_url": "https://github.com/zelig",
      "followers_url": "https://api.github.com/users/zelig/followers",
      "following_url": "https://api.github.com/users/zelig/following{/other_user}",
      "gists_url": "https://api.github.com/users/zelig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zelig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zelig/subscriptions",
      "organizations_url": "https://api.github.com/users/zelig/orgs",
      "repos_url": "https://api.github.com/users/zelig/repos",
      "events_url": "https://api.github.com/users/zelig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zelig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-20T10:14:25Z",
    "updated_at": "2015-05-20T10:14:25Z",
    "author_association": "MEMBER",
    "body": "brilliant. as long as provide continuity of the feature. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/103834849/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/103834850",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/1053#issuecomment-103834850",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1053",
    "id": 103834850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzgzNDg1MA==",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-20T10:14:26Z",
    "updated_at": "2015-05-20T10:14:26Z",
    "author_association": "MEMBER",
    "body": "@bas-vk I remember you said you had an idea for local storage. Could you briefly describe?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/103834850/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/103835328",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/1053#issuecomment-103835328",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1053",
    "id": 103835328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzgzNTMyOA==",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-20T10:17:46Z",
    "updated_at": "2015-05-20T10:17:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@zelig in this case people need to use local storage in browser/mist, so we would remove this db functions. For now i would just make it into a separate db and don't put more effort in it.. and leave the api as is\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/103835328/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/103856856",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/1053#issuecomment-103856856",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1053",
    "id": 103856856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzg1Njg1Ng==",
    "user": {
      "login": "bas-vk",
      "id": 4280775,
      "node_id": "MDQ6VXNlcjQyODA3NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4280775?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bas-vk",
      "html_url": "https://github.com/bas-vk",
      "followers_url": "https://api.github.com/users/bas-vk/followers",
      "following_url": "https://api.github.com/users/bas-vk/following{/other_user}",
      "gists_url": "https://api.github.com/users/bas-vk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bas-vk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bas-vk/subscriptions",
      "organizations_url": "https://api.github.com/users/bas-vk/orgs",
      "repos_url": "https://api.github.com/users/bas-vk/repos",
      "events_url": "https://api.github.com/users/bas-vk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bas-vk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-20T11:52:38Z",
    "updated_at": "2015-05-20T14:52:44Z",
    "author_association": "MEMBER",
    "body": "Its basically what @frozeman mentioned above. Each DApp should have its own storage and this is exactly what a html 5 container provides in the form of <a href=https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Storage#localStorage\">\"local storage\"</a>.\n\nDApps should be retrieved from their own endpoints through a proxy as Daniel has build for swarm. Due to the same origin policy both DApps cannot access each others local storage. Besides local storage the html 5 webcontainer also provides session storage which is not persisted to disk. DApp developers should be familiar with both techniques since they are not new and commonly used by modern webapplications.\n\nSo I would recommend removing both functions in geth and let web3 store the data in the local storage, or remove them entirely if we are willing to change the API. The same holds `db_putHex` and `db_getHex`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/103856856/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/103972469",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/1053#issuecomment-103972469",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1053",
    "id": 103972469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzk3MjQ2OQ==",
    "user": {
      "login": "scottzer0",
      "id": 934818,
      "node_id": "MDQ6VXNlcjkzNDgxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/934818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scottzer0",
      "html_url": "https://github.com/scottzer0",
      "followers_url": "https://api.github.com/users/scottzer0/followers",
      "following_url": "https://api.github.com/users/scottzer0/following{/other_user}",
      "gists_url": "https://api.github.com/users/scottzer0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scottzer0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scottzer0/subscriptions",
      "organizations_url": "https://api.github.com/users/scottzer0/orgs",
      "repos_url": "https://api.github.com/users/scottzer0/repos",
      "events_url": "https://api.github.com/users/scottzer0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scottzer0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-20T17:48:00Z",
    "updated_at": "2015-05-20T17:48:00Z",
    "author_association": "NONE",
    "body": "perhaps this is unrealistic, but i'd like my DAPP to not rely on a local http server for delivery.  i'm trying to keep it's design very be-delivered-from-anywhere and only assume there's a local ethereum node (even that's flexible).  browser local storage is a solution for some of the persistent data i would like to store (mainly basic user prefs, contact/addresses aliases, etc), but my intention was to lean on the node's db to be further persistent (using other browsers, app origin domain changes, etc.)\n\ni won't cry if support's remove, but that's my $0.02.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/103972469/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/104086678",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/1053#issuecomment-104086678",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1053",
    "id": 104086678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDA4NjY3OA==",
    "user": {
      "login": "niran",
      "id": 106437,
      "node_id": "MDQ6VXNlcjEwNjQzNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/106437?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/niran",
      "html_url": "https://github.com/niran",
      "followers_url": "https://api.github.com/users/niran/followers",
      "following_url": "https://api.github.com/users/niran/following{/other_user}",
      "gists_url": "https://api.github.com/users/niran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/niran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/niran/subscriptions",
      "organizations_url": "https://api.github.com/users/niran/orgs",
      "repos_url": "https://api.github.com/users/niran/repos",
      "events_url": "https://api.github.com/users/niran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/niran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-21T01:13:45Z",
    "updated_at": "2015-05-21T01:13:45Z",
    "author_association": "NONE",
    "body": "Personally, my support for the feature is only because we're already using it. Long term, there are plenty of solutions for client side storage: localStorage in the browser, or for dapps what live outside of a browser as native or [Electron](http://electron.atom.io/) apps, the options are limitless. I'd support deprecating the API but keeping it around for six months or so.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/104086678/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/104163981",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/1053#issuecomment-104163981",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1053",
    "id": 104163981,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDE2Mzk4MQ==",
    "user": {
      "login": "bas-vk",
      "id": 4280775,
      "node_id": "MDQ6VXNlcjQyODA3NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4280775?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bas-vk",
      "html_url": "https://github.com/bas-vk",
      "followers_url": "https://api.github.com/users/bas-vk/followers",
      "following_url": "https://api.github.com/users/bas-vk/following{/other_user}",
      "gists_url": "https://api.github.com/users/bas-vk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bas-vk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bas-vk/subscriptions",
      "organizations_url": "https://api.github.com/users/bas-vk/orgs",
      "repos_url": "https://api.github.com/users/bas-vk/repos",
      "events_url": "https://api.github.com/users/bas-vk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bas-vk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-21T07:21:49Z",
    "updated_at": "2015-05-21T07:21:49Z",
    "author_association": "MEMBER",
    "body": "I absolute can see why such a feature is useful for DApp developers but the current functions are not the correct way to do this. DApps can write to this local DB without any constraints and overwrite each others entries. If you rely on these functions it will fail on you at some time and will introduce vulnerabilities. Due to these problems the use of these functions is really limited and I recommend to remove them to prevent false assumptions. If you want to store key value entries in a reliable store there are other ways to do this.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/104163981/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/104164826",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/1053#issuecomment-104164826",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1053",
    "id": 104164826,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDE2NDgyNg==",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-21T07:28:49Z",
    "updated_at": "2015-05-21T07:29:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@scottzer0 if your dapp runs simply from the file protocol then they will run fine from our dapp delivery system :)\nThe advantage of delivering the dapps over a local server is that you can have routes, which allow you to share locations in you dapp, e.g. profiles, addresses, invite users to chats etc.\nIf you only use relative path you should be fine, if you use absolute path, you should be fine too.\n\nconcerning localstorage: Its a nice feature as its a local db, which is isolated from other dapps through its domain name (we are in the progress to figuring out how to do that). Its available in all browsers and you can simply port you dapp into any desktop app container like node webkit or electron.\n\nTherefor i would recommend using local storage, but stay tuned until we can make a final decision.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/104164826/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
