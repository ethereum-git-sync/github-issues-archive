{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16723",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16723/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16723/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16723/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/16723",
  "id": 321883577,
  "node_id": "MDU6SXNzdWUzMjE4ODM1Nzc=",
  "number": 16723,
  "title": "My SmartContract can not store my array of struct but I can store only uint32 in my private node",
  "user": {
    "login": "ArthurTavaresBezerra",
    "id": 9305320,
    "node_id": "MDQ6VXNlcjkzMDUzMjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9305320?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ArthurTavaresBezerra",
    "html_url": "https://github.com/ArthurTavaresBezerra",
    "followers_url": "https://api.github.com/users/ArthurTavaresBezerra/followers",
    "following_url": "https://api.github.com/users/ArthurTavaresBezerra/following{/other_user}",
    "gists_url": "https://api.github.com/users/ArthurTavaresBezerra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ArthurTavaresBezerra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ArthurTavaresBezerra/subscriptions",
    "organizations_url": "https://api.github.com/users/ArthurTavaresBezerra/orgs",
    "repos_url": "https://api.github.com/users/ArthurTavaresBezerra/repos",
    "events_url": "https://api.github.com/users/ArthurTavaresBezerra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ArthurTavaresBezerra/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 856638432,
      "node_id": "MDU6TGFiZWw4NTY2Mzg0MzI=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:inactive",
      "name": "status:inactive",
      "color": "ffffff",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-05-10T10:25:46Z",
  "updated_at": "2019-06-22T11:28:09Z",
  "closed_at": "2019-06-22T11:28:09Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "My SmartContract can not store my array of struct but I can store only uint32.\r\n\r\nIm using a private node on my Mac, I code and test my smart contract in remix.ethrereum.org and get success in everything but when execute in my private node on my Mac just the data isn't stored. \r\n\r\nI have read about it and see that the blockchain only store data until 32 bytes but I did several tests with uint32 and bytes32 and I get success only uint32. \r\n\r\nBut I need to store my array of structs or at least bytes64 because of Id of my processes. \r\n\r\nMy SmartContract below.\r\n\r\npragma solidity ^0.4.23;\r\n \r\ncontract Votacao {\r\n   \r\n    struct Voto { \r\n        uint uf;\r\n        uint cmun;\r\n        string idCandidato;\r\n        uint256 voteCount; \r\n    } \r\n    \r\n    struct Candidato {\r\n        string id; \r\n        uint uf;\r\n        uint cmun;\r\n        uint256 voteCount;\r\n    }\r\n    \r\n    struct BU {\r\n        string id;\r\n        Voto[] votos;\r\n    }\r\n     \r\n    Candidato[] public candidatos ;\r\n    mapping(string => BU) bus; \r\n\r\n    function vote(string pidBu, string pidCandidato, uint puf, uint pcmun, uint256 pvoteCount) public  {\r\n\r\n        if (strIsEmpty(bus[pidBu].id)){\r\n            bus[pidBu].id = pidBu;\r\n        }\r\n        \r\n        bool isJaFoiVotado = false;\r\n        for (uint i = 0; i < bus[pidBu].votos.length; i++) {\r\n            if (strCompare(bus[pidBu].votos[i].idCandidato,pidCandidato) == 0) {\r\n                if (bus[pidBu].votos[i].uf == puf && bus[pidBu].votos[i].cmun == pcmun) {\r\n                    isJaFoiVotado = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        \r\n        require(!isJaFoiVotado, \"Apenas um voto Ã© permitido.\");\r\n        \r\n        bus[pidBu].votos.push(Voto({uf:puf, cmun:pcmun, idCandidato:pidCandidato, voteCount:pvoteCount}));\r\n\r\n        bool isCandidatoInserido = false;\r\n        for (uint j = 0; j < candidatos.length; j++) {\r\n            if (strCompare(candidatos[j].id,pidCandidato) == 0 && candidatos[j].uf == puf && candidatos[j].cmun == pcmun)\r\n            {\r\n                candidatos[j].voteCount += pvoteCount;\r\n                isCandidatoInserido = true;\r\n            }\r\n        }\r\n        \r\n        if (!isCandidatoInserido) {\r\n            candidatos.push(Candidato({id:pidCandidato, uf:puf, cmun:pcmun, voteCount:pvoteCount }));\r\n        }\r\n    }\r\n  \r\n    function getTotalVotosPorCandidato(string pidCandidato, uint puf, uint pcmun) public view returns (uint256 total, uint256 count)\r\n    {\r\n        for (uint j = 0; j < candidatos.length; j++) {\r\n            if (strCompare(candidatos[j].id, pidCandidato) == 0 && candidatos[j].uf == puf && candidatos[j].cmun == pcmun)\r\n            {\r\n                total = candidatos[j].voteCount;\r\n            }\r\n        }\r\n    } \r\n  \r\n    function getTotalCandidatos() public view returns (uint256 total)\r\n    {\r\n        return candidatos.length;\r\n    }\r\n    \r\n    function strCompare(string _a, string _b) internal pure returns (int) {\r\n        bytes memory a = bytes(_a);\r\n        bytes memory b = bytes(_b);\r\n        uint minLength = a.length;\r\n        if (b.length < minLength) minLength = b.length;\r\n        for (uint i = 0; i < minLength; i ++)\r\n            if (a[i] < b[i])\r\n                return -1;\r\n            else if (a[i] > b[i])\r\n        return 1;\r\n        if (a.length < b.length)\r\n            return -1;\r\n        else if (a.length > b.length)\r\n            return 1;\r\n        else\r\n            return 0;\r\n    }\r\n     \r\n    function strIsEmpty(string _a) internal pure returns (bool) {\r\n        bytes memory a = bytes(_a);\r\n        return (a.length == 0); \r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////Basics tests \r\n    function inc() public returns (uint) {\r\n        Candidato memory candidato = Candidato(\"c1\",1,1,1);\r\n        candidatos.push(candidato);\r\n        return candidatos.length;\r\n    }\r\n\r\n    function get() public view returns (uint) { \r\n        return candidatos.length;\r\n    }\r\n\r\n}\r\n\r\n\r\nGeth version: `1.8.4`\r\nOS & Version:OSX\r\nCommit hash : \r\n\r\n#### Expected behaviour\r\nOnly store data.\r\n\r\n#### Actual behaviour\r\nNo stored data\r\n\r\n#### Steps to reproduce the behaviour\r\nAfter deploy smartContract exec vote (\"b\",\"c\",1,2,3) and exec getTotalCandidatos() \r\nor inc() and get()\r\n\r\n#### Backtrace\r\nnothing wrong\r\n````\r\n[backtrace]\r\n````",
  "closed_by": {
    "login": "stale[bot]",
    "id": 26384082,
    "node_id": "MDM6Qm90MjYzODQwODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stale%5Bbot%5D",
    "html_url": "https://github.com/apps/stale",
    "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16723/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16723/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/388016179",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16723#issuecomment-388016179",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16723",
    "id": 388016179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODAxNjE3OQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-10T10:28:44Z",
    "updated_at": "2018-05-10T10:28:44Z",
    "author_association": "MEMBER",
    "body": "@Arachnid Could you skim this issue to see if it's a bug in the Solidity code or whether it's something we do internally?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/388016179/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/491502926",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16723#issuecomment-491502926",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16723",
    "id": 491502926,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTUwMjkyNg==",
    "user": {
      "login": "stale[bot]",
      "id": 26384082,
      "node_id": "MDM6Qm90MjYzODQwODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stale%5Bbot%5D",
      "html_url": "https://github.com/apps/stale",
      "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-05-11T11:26:17Z",
    "updated_at": "2019-05-11T11:26:17Z",
    "author_association": "NONE",
    "body": "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/491502926/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
