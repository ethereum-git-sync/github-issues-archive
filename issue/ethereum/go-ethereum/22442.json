{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22442",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22442/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22442/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22442/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/22442",
  "id": 823061834,
  "node_id": "MDU6SXNzdWU4MjMwNjE4MzQ=",
  "number": 22442,
  "title": "Healthchek support for containers",
  "user": {
    "login": "willianpaixao",
    "id": 201236,
    "node_id": "MDQ6VXNlcjIwMTIzNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/201236?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/willianpaixao",
    "html_url": "https://github.com/willianpaixao",
    "followers_url": "https://api.github.com/users/willianpaixao/followers",
    "following_url": "https://api.github.com/users/willianpaixao/following{/other_user}",
    "gists_url": "https://api.github.com/users/willianpaixao/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/willianpaixao/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/willianpaixao/subscriptions",
    "organizations_url": "https://api.github.com/users/willianpaixao/orgs",
    "repos_url": "https://api.github.com/users/willianpaixao/repos",
    "events_url": "https://api.github.com/users/willianpaixao/events{/privacy}",
    "received_events_url": "https://api.github.com/users/willianpaixao/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2021-03-05T12:58:05Z",
  "updated_at": "2022-04-25T15:43:50Z",
  "closed_at": "2021-03-25T08:53:55Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# Rationale\r\n\r\n### Why should this feature exist?\r\nTo my knowledge, there's no \"dead simple\" way to know if your geth process is running smooth, syncing, or maybe even frozen.\r\nI know you can send a RPC request asking for the `eth_syncing` object, but in this issue, I'd like to share the concept of liveness and readiness of a process. A container called \"live\" when its underlying process is running (aka not finished, crashed, or frozen), and it's called \"ready\" when is literally ready to receive requests (in this case is synced).  \r\n\r\n\r\n### What are the use-cases?\r\nAnyone running a monitoring tool could benefit from this feature, but especially the ones using a container solution, like Docker and/or Kubernetes. Modern container tools can monitor the state of a container using health checks. [[1]](https://docs.docker.com/engine/reference/builder/#healthcheck)\r\nOnce the health check is implemented, the orchestrating tool can spot, flag, and automatically restart your rouge container. [[2]](https://cloud.ibm.com/docs/go?topic=go-go-healthcheck)\r\n\r\n# Implementation\r\n\r\n### Do you have ideas regarding the implementation of this feature?\r\nYes, in theory, we add one endpoint to signal that our process is running with no problems, that returns HTTP 200. An additional feature would be another endpoint that would indicate an error, maybe syncing state.\r\nThe implementation can be with or without using a library. [[3]](https://github.com/docker/go-healthcheck) [[4]](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22442/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22442/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/796607589",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22442#issuecomment-796607589",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22442",
    "id": 796607589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NjYwNzU4OQ==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-11T09:44:11Z",
    "updated_at": "2021-03-11T09:44:11Z",
    "author_association": "MEMBER",
    "body": "We see the value in it - unfortunately we do not see a way to implement a health-check that has a reliable output. There are cases (e.g. compatction) where false positives could occur. And then it is better not to have such a endpoint at all.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/796607589/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/796618459",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22442#issuecomment-796618459",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22442",
    "id": 796618459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NjYxODQ1OQ==",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-11T10:02:08Z",
    "updated_at": "2021-03-11T10:02:08Z",
    "author_association": "MEMBER",
    "body": "You can always use a trivial endpoint like `eth_version` to see if your node is still responding to requests.\r\nIt's not easy to determine if your node is working \"correctly\" for example if your node has not imported a new block in 5 minutes it might either be that your node crashed, your network is down or that no-one mined a block in five minutes out of pure chance.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/796618459/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/999188579",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22442#issuecomment-999188579",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22442",
    "id": 999188579,
    "node_id": "IC_kwDOAOvK9847jmhj",
    "user": {
      "login": "willianpaixao",
      "id": 201236,
      "node_id": "MDQ6VXNlcjIwMTIzNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/201236?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/willianpaixao",
      "html_url": "https://github.com/willianpaixao",
      "followers_url": "https://api.github.com/users/willianpaixao/followers",
      "following_url": "https://api.github.com/users/willianpaixao/following{/other_user}",
      "gists_url": "https://api.github.com/users/willianpaixao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/willianpaixao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/willianpaixao/subscriptions",
      "organizations_url": "https://api.github.com/users/willianpaixao/orgs",
      "repos_url": "https://api.github.com/users/willianpaixao/repos",
      "events_url": "https://api.github.com/users/willianpaixao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/willianpaixao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-22T00:32:33Z",
    "updated_at": "2021-12-22T00:32:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey @ligi @karalabe,\r\n\r\nJust a question, after Geth v.1.10.x and the release of Snap sync, is this issue possible to be implemented? Has anything changed to allow this feature?\r\n\r\nThanks in advance!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/999188579/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1033302460",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22442#issuecomment-1033302460",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22442",
    "id": 1033302460,
    "node_id": "IC_kwDOAOvK9849lvG8",
    "user": {
      "login": "willianpaixao",
      "id": 201236,
      "node_id": "MDQ6VXNlcjIwMTIzNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/201236?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/willianpaixao",
      "html_url": "https://github.com/willianpaixao",
      "followers_url": "https://api.github.com/users/willianpaixao/followers",
      "following_url": "https://api.github.com/users/willianpaixao/following{/other_user}",
      "gists_url": "https://api.github.com/users/willianpaixao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/willianpaixao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/willianpaixao/subscriptions",
      "organizations_url": "https://api.github.com/users/willianpaixao/orgs",
      "repos_url": "https://api.github.com/users/willianpaixao/repos",
      "events_url": "https://api.github.com/users/willianpaixao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/willianpaixao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-09T03:18:14Z",
    "updated_at": "2022-02-09T03:18:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi again @ligi @MariusVanDerWijden @karalabe, any updates?\r\nI can implement the feature, but need a confirmation that it's desired.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1033302460/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1087222770",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22442#issuecomment-1087222770",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22442",
    "id": 1087222770,
    "node_id": "IC_kwDOAOvK985AzbPy",
    "user": {
      "login": "willianpaixao",
      "id": 201236,
      "node_id": "MDQ6VXNlcjIwMTIzNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/201236?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/willianpaixao",
      "html_url": "https://github.com/willianpaixao",
      "followers_url": "https://api.github.com/users/willianpaixao/followers",
      "following_url": "https://api.github.com/users/willianpaixao/following{/other_user}",
      "gists_url": "https://api.github.com/users/willianpaixao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/willianpaixao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/willianpaixao/subscriptions",
      "organizations_url": "https://api.github.com/users/willianpaixao/orgs",
      "repos_url": "https://api.github.com/users/willianpaixao/repos",
      "events_url": "https://api.github.com/users/willianpaixao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/willianpaixao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-04T07:44:20Z",
    "updated_at": "2022-04-04T07:44:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@holiman @ligi @MariusVanDerWijden I'm not sure if notifications are sent after an issue is closed.\r\n\r\nThings have changed since this issue was closed (details in the comments above) can we implement this now?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1087222770/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1087326679",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22442#issuecomment-1087326679",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22442",
    "id": 1087326679,
    "node_id": "IC_kwDOAOvK985Az0nX",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-04T09:30:12Z",
    "updated_at": "2022-04-04T09:30:12Z",
    "author_association": "MEMBER",
    "body": ">  implement this now?\r\n\r\nWhat specifically is it you want to implement, that isn't covered already by `eth_syncing` and/or `eth_version` ? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1087326679/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1108610685",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22442#issuecomment-1108610685",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22442",
    "id": 1108610685,
    "node_id": "IC_kwDOAOvK985CFA59",
    "user": {
      "login": "willianpaixao",
      "id": 201236,
      "node_id": "MDQ6VXNlcjIwMTIzNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/201236?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/willianpaixao",
      "html_url": "https://github.com/willianpaixao",
      "followers_url": "https://api.github.com/users/willianpaixao/followers",
      "following_url": "https://api.github.com/users/willianpaixao/following{/other_user}",
      "gists_url": "https://api.github.com/users/willianpaixao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/willianpaixao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/willianpaixao/subscriptions",
      "organizations_url": "https://api.github.com/users/willianpaixao/orgs",
      "repos_url": "https://api.github.com/users/willianpaixao/repos",
      "events_url": "https://api.github.com/users/willianpaixao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/willianpaixao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-25T13:54:57Z",
    "updated_at": "2022-04-25T13:54:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@holiman sorry I thought it was clear in the initial issue description. I'll try to summarize and maybe rephrase.\r\n\r\nI am suggesting the addition of two entrypoints (preferably two http endpoints, but could be a geth cli combo as well). The first entrypoint is the simplest, it only states that the process is responsive (aka not frozen or even dead).\r\n\r\nThe second is the one that is tricky and started this discussion, it returns whether the geth process is ready to receive requests (aka is not syncing, or doing some blocking task).\r\n\r\nAs stated in the initial description, these entrypoints will be used by tools that will monitor the state of the process or container.\r\nThis would be specially useful for those orchestrating tools to know when geth is ready to receive requests once a new node is spun. [[1]](https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1108610685/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1108633889",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22442#issuecomment-1108633889",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22442",
    "id": 1108633889,
    "node_id": "IC_kwDOAOvK985CFGkh",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-25T14:14:42Z",
    "updated_at": "2022-04-25T14:14:42Z",
    "author_association": "MEMBER",
    "body": "Right, but those two things should be already covered by `net_version` and `eth_syncing`, respectively... ? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1108633889/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1108740801",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22442#issuecomment-1108740801",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22442",
    "id": 1108740801,
    "node_id": "IC_kwDOAOvK985CFgrB",
    "user": {
      "login": "willianpaixao",
      "id": 201236,
      "node_id": "MDQ6VXNlcjIwMTIzNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/201236?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/willianpaixao",
      "html_url": "https://github.com/willianpaixao",
      "followers_url": "https://api.github.com/users/willianpaixao/followers",
      "following_url": "https://api.github.com/users/willianpaixao/following{/other_user}",
      "gists_url": "https://api.github.com/users/willianpaixao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/willianpaixao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/willianpaixao/subscriptions",
      "organizations_url": "https://api.github.com/users/willianpaixao/orgs",
      "repos_url": "https://api.github.com/users/willianpaixao/repos",
      "events_url": "https://api.github.com/users/willianpaixao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/willianpaixao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-25T15:43:50Z",
    "updated_at": "2022-04-25T15:43:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "In my opinion yes, it should be enough.\r\n\r\nBut @MariusVanDerWijden and @ligi raised the question where corner cases could lead to false positives.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1108740801/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
