{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16382",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16382/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16382/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16382/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/16382",
  "id": 308084729,
  "node_id": "MDU6SXNzdWUzMDgwODQ3Mjk=",
  "number": 16382,
  "title": "Invoke a pre-initialized python console",
  "user": {
    "login": "carver",
    "id": 205327,
    "node_id": "MDQ6VXNlcjIwNTMyNw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/carver",
    "html_url": "https://github.com/carver",
    "followers_url": "https://api.github.com/users/carver/followers",
    "following_url": "https://api.github.com/users/carver/following{/other_user}",
    "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
    "organizations_url": "https://api.github.com/users/carver/orgs",
    "repos_url": "https://api.github.com/users/carver/repos",
    "events_url": "https://api.github.com/users/carver/events{/privacy}",
    "received_events_url": "https://api.github.com/users/carver/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 856638432,
      "node_id": "MDU6TGFiZWw4NTY2Mzg0MzI=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:inactive",
      "name": "status:inactive",
      "color": "ffffff",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2018-03-23T15:54:31Z",
  "updated_at": "2019-05-06T21:26:09Z",
  "closed_at": "2019-05-06T21:26:09Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "@karalabe mentioned interest in invoking a python console via geth. I think this would be sweet too, and wanted to track it here.  cc @pipermerriam\r\n\r\nWhat do you guys think of this as a rough goal?\r\n```sh\r\n$ geth pyconsole\r\n\r\nPython 3.6.3 (default, Oct  3 2017, 21:45:48) \r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 6.2.1 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nConnecting with...\r\nw3 = Web3(IPCProvider('/home/hacker/.ethereum/geth.ipc'))\r\n\r\nIn [1]: w3.version.node\r\nOut[1]: 'Geth/v1.8.2-stable-b8b9f7f4/linux-amd64/go1.9.4'\r\n\r\nIn [2]: \r\n```",
  "closed_by": {
    "login": "stale[bot]",
    "id": 26384082,
    "node_id": "MDM6Qm90MjYzODQwODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stale%5Bbot%5D",
    "html_url": "https://github.com/apps/stale",
    "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16382/reactions",
    "total_count": 2,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 1,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16382/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/375716145",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16382#issuecomment-375716145",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16382",
    "id": 375716145,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTcxNjE0NQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T16:07:34Z",
    "updated_at": "2018-03-23T16:07:34Z",
    "author_association": "MEMBER",
    "body": "Not necessarily via geth btw, I'm completely fine with `pyconsole ws://localhost:8545` too.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/375716145/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/375716480",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16382#issuecomment-375716480",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16382",
    "id": 375716480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTcxNjQ4MA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T16:08:36Z",
    "updated_at": "2018-03-23T16:08:36Z",
    "author_association": "MEMBER",
    "body": "The interesting catch is how to expose non standard methods. E.g. we have admin, debug, whatnot APIs. For the external js console too we were thinking about making an API descriptor endpoint that could return all the extra methods the node supports and then client libs can generate callable wrappers on the fly.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/375716480/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/375735530",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16382#issuecomment-375735530",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16382",
    "id": 375735530,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTczNTUzMA==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T17:07:51Z",
    "updated_at": "2018-03-23T17:07:51Z",
    "author_association": "MEMBER",
    "body": "> Not necessarily via geth btw\r\n\r\nOne thing I kind of like about invoking from geth is that it's natural to reuse configuration parameters that people are familiar with from geth. A couple examples:\r\n\r\n1. A custom IPC file location:\r\n```sh\r\n$ geth --datadir /mnt/ssd/.ethereum/ pyconsole\r\nConnecting with...\r\nw3 = Web3(IPCProvider('/mnt/ssd/.ethereum/geth.ipc'))\r\n\r\nIn [1]:\r\n```\r\n\r\n2. `geth --dev` requires a custom IPC location and a fixup for the long `extraData` field\r\n```sh\r\n$ geth --dev pyconsole\r\nConnecting with...\r\nw3 = Web3(IPCProvider('/tmp/geth.ipc'))\r\nw3.middleware_stack.inject(geth_poa_middleware, layer=0)\r\n\r\nIn [1]:\r\n```\r\n\r\n---\r\n\r\n> For the external js console too we were thinking about making an API descriptor endpoint that could return all the extra methods the node supports and then client libs can generate callable wrappers on the fly.\r\n\r\nThat's really interesting. We describe some of the endpoints using ABI-like definitions here: https://github.com/ethereum/web3.py/blob/master/web3/utils/rpc_abi.py#L29-L50 . A descriptor like that would be the cleanest way for us to automatically support new endpoints. Without any type definitions, it would be awkward|impossible to do type conversions to python native types.\r\n\r\nEven without setting that up though, `geth` is a big enough target that we already support some custom endpoints. We could manually add all the custom endpoints that geth has, and enable them when invoked via `pyconsole`. Of course that would good tiresome if you plan to continue adding many new custom endpoints. :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/375735530/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/375790916",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16382#issuecomment-375790916",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16382",
    "id": 375790916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTc5MDkxNg==",
    "user": {
      "login": "Ruethairat",
      "id": 36818035,
      "node_id": "MDQ6VXNlcjM2ODE4MDM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/36818035?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ruethairat",
      "html_url": "https://github.com/Ruethairat",
      "followers_url": "https://api.github.com/users/Ruethairat/followers",
      "following_url": "https://api.github.com/users/Ruethairat/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ruethairat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ruethairat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ruethairat/subscriptions",
      "organizations_url": "https://api.github.com/users/Ruethairat/orgs",
      "repos_url": "https://api.github.com/users/Ruethairat/repos",
      "events_url": "https://api.github.com/users/Ruethairat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ruethairat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T20:36:16Z",
    "updated_at": "2018-03-23T20:36:16Z",
    "author_association": "NONE",
    "body": "ในวันที่ ส. 24 มี.ค. 2018 00:08 น. Jason Carver <notifications@github.com>\nเขียนว่า:\n\n> Not necessarily via geth btw\n>\n> One thing I kind of like about invoking from geth is that it's natural to\n> reuse configuration parameters that people are familiar with from geth. A\n> couple examples:\n>\n>    1. A custom IPC file location:\n>\n> $ geth --datadir /mnt/ssd/.ethereum/ pyconsole\n> Connecting with...\n> w3 = Web3(IPCProvider('/mnt/ssd/.ethereum/geth.ipc'))\n>\n> In [1]:\n>\n>\n>    1. geth --dev requires a custom IPC location and a fixup for the long\n>    extraData field\n>\n> $ geth --dev pyconsole\n> Connecting with...\n> w3 = Web3(IPCProvider('/tmp/geth.ipc'))\n> w3.middleware_stack.inject(geth_poa_middleware, layer=0)\n>\n> In [1]:\n>\n> ------------------------------\n>\n> For the external js console too we were thinking about making an API\n> descriptor endpoint that could return all the extra methods the node\n> supports and then client libs can generate callable wrappers on the fly.\n>\n> That's really interesting. We describe some of the endpoints using\n> ABI-like definitions here:\n> https://github.com/ethereum/web3.py/blob/master/web3/utils/rpc_abi.py#L29-L50\n> . A descriptor like that would be the cleanest way for us to automatically\n> support new endpoints. Without any type definitions, it would be\n> awkward|impossible to do type conversions to python native types.\n>\n> Even without setting that up though, geth is a big enough target that we\n> already support some custom endpoints. We could manually add all the custom\n> endpoints that geth has, and enable them when invoked via pyconsole. Of\n> course that would good tiresome if you plan to continue adding many new\n> custom endpoints. :)\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ethereum/go-ethereum/issues/16382#issuecomment-375735530>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AjHMcy4mzmmNRnHlZ0xBe-OF1vFZ7WTtks5thSwYgaJpZM4S49jr>\n> .\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/375790916/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 1,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/375868054",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16382#issuecomment-375868054",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16382",
    "id": 375868054,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTg2ODA1NA==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-24T10:32:19Z",
    "updated_at": "2018-03-24T10:32:19Z",
    "author_association": "MEMBER",
    "body": "After sleeping on it, it occurred to me that a natural solution would be a simple alias. So this command:\r\n\r\n```sh\r\ngeth --datadir /home/hacker/.ethereum/ pyconsole\r\n```\r\n\r\nwould simply invoke this shell command:\r\n\r\n```sh\r\npyconsole /home/hacker/.ethereum/geth.ipc\r\n```\r\n\r\n(Some alternate names for `pyconsole`: `ethpy`, `pyeth`, `web3py`. Anyway, the name is not really a critical part of this issue.)\r\n\r\nThat gives us a clean geth integration, and a more general all-node console.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/375868054/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/375919350",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16382#issuecomment-375919350",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16382",
    "id": 375919350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTkxOTM1MA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-24T19:40:18Z",
    "updated_at": "2018-03-24T19:40:18Z",
    "author_association": "MEMBER",
    "body": "Assuming `pyconsole` was a nice easy-to-install stand-alone bash script or something it could also allow us to remove the code from trinity.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/375919350/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/476353286",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16382#issuecomment-476353286",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16382",
    "id": 476353286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjM1MzI4Ng==",
    "user": {
      "login": "stale[bot]",
      "id": 26384082,
      "node_id": "MDM6Qm90MjYzODQwODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stale%5Bbot%5D",
      "html_url": "https://github.com/apps/stale",
      "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-03-25T19:56:34Z",
    "updated_at": "2019-03-25T19:56:34Z",
    "author_association": "NONE",
    "body": "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/476353286/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
