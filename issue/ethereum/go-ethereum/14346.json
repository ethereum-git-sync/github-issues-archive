{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14346",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14346/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14346/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14346/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/14346",
  "id": 222516763,
  "node_id": "MDU6SXNzdWUyMjI1MTY3NjM=",
  "number": 14346,
  "title": "support for configuration as environment variables",
  "user": {
    "login": "MaximilianMeister",
    "id": 5364817,
    "node_id": "MDQ6VXNlcjUzNjQ4MTc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5364817?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MaximilianMeister",
    "html_url": "https://github.com/MaximilianMeister",
    "followers_url": "https://api.github.com/users/MaximilianMeister/followers",
    "following_url": "https://api.github.com/users/MaximilianMeister/following{/other_user}",
    "gists_url": "https://api.github.com/users/MaximilianMeister/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MaximilianMeister/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MaximilianMeister/subscriptions",
    "organizations_url": "https://api.github.com/users/MaximilianMeister/orgs",
    "repos_url": "https://api.github.com/users/MaximilianMeister/repos",
    "events_url": "https://api.github.com/users/MaximilianMeister/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MaximilianMeister/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2017-04-18T19:14:08Z",
  "updated_at": "2018-04-20T09:19:35Z",
  "closed_at": "2018-04-20T09:19:35Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "the config file is already a great feature! thanks a lot for that.\r\nwould it be possible to also add support for setting flags/options via environment variables?\r\n\r\nthis would facilitate the usage of `geth` within a container orchestration engine like kubernetes and containers in general as it will get rid of the requirement to mount a volume with the config file.",
  "closed_by": {
    "login": "MaximilianMeister",
    "id": 5364817,
    "node_id": "MDQ6VXNlcjUzNjQ4MTc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5364817?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MaximilianMeister",
    "html_url": "https://github.com/MaximilianMeister",
    "followers_url": "https://api.github.com/users/MaximilianMeister/followers",
    "following_url": "https://api.github.com/users/MaximilianMeister/following{/other_user}",
    "gists_url": "https://api.github.com/users/MaximilianMeister/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MaximilianMeister/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MaximilianMeister/subscriptions",
    "organizations_url": "https://api.github.com/users/MaximilianMeister/orgs",
    "repos_url": "https://api.github.com/users/MaximilianMeister/repos",
    "events_url": "https://api.github.com/users/MaximilianMeister/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MaximilianMeister/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14346/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14346/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294957484",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14346#issuecomment-294957484",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14346",
    "id": 294957484,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDk1NzQ4NA==",
    "user": {
      "login": "lmars",
      "id": 488515,
      "node_id": "MDQ6VXNlcjQ4ODUxNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/488515?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lmars",
      "html_url": "https://github.com/lmars",
      "followers_url": "https://api.github.com/users/lmars/followers",
      "following_url": "https://api.github.com/users/lmars/following{/other_user}",
      "gists_url": "https://api.github.com/users/lmars/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lmars/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lmars/subscriptions",
      "organizations_url": "https://api.github.com/users/lmars/orgs",
      "repos_url": "https://api.github.com/users/lmars/repos",
      "events_url": "https://api.github.com/users/lmars/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lmars/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-18T19:41:58Z",
    "updated_at": "2017-04-18T19:41:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MaximilianMeister one option for using environment variables is to wrap the running of `geth` with a script which first writes the config using environment variables and then exec's `geth` (I actually prefer this approach as it gives me the opportunity to verify the env vars before starting `geth`).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294957484/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294960928",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14346#issuecomment-294960928",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14346",
    "id": 294960928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDk2MDkyOA==",
    "user": {
      "login": "MaximilianMeister",
      "id": 5364817,
      "node_id": "MDQ6VXNlcjUzNjQ4MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5364817?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MaximilianMeister",
      "html_url": "https://github.com/MaximilianMeister",
      "followers_url": "https://api.github.com/users/MaximilianMeister/followers",
      "following_url": "https://api.github.com/users/MaximilianMeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/MaximilianMeister/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MaximilianMeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MaximilianMeister/subscriptions",
      "organizations_url": "https://api.github.com/users/MaximilianMeister/orgs",
      "repos_url": "https://api.github.com/users/MaximilianMeister/repos",
      "events_url": "https://api.github.com/users/MaximilianMeister/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MaximilianMeister/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-18T19:55:49Z",
    "updated_at": "2017-04-18T19:55:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@lmars makes sense, only problem is that i'd still need to add this wrapper to the container. ideally one could use the official container from dockerhub and just pass it the environment variables.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/294960928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/382874884",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14346#issuecomment-382874884",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14346",
    "id": 382874884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mjg3NDg4NA==",
    "user": {
      "login": "stale[bot]",
      "id": 26384082,
      "node_id": "MDM6Qm90MjYzODQwODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stale%5Bbot%5D",
      "html_url": "https://github.com/apps/stale",
      "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-04-19T20:44:24Z",
    "updated_at": "2018-04-19T20:44:24Z",
    "author_association": "NONE",
    "body": "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/382874884/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/383004657",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14346#issuecomment-383004657",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14346",
    "id": 383004657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzAwNDY1Nw==",
    "user": {
      "login": "MaximilianMeister",
      "id": 5364817,
      "node_id": "MDQ6VXNlcjUzNjQ4MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5364817?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MaximilianMeister",
      "html_url": "https://github.com/MaximilianMeister",
      "followers_url": "https://api.github.com/users/MaximilianMeister/followers",
      "following_url": "https://api.github.com/users/MaximilianMeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/MaximilianMeister/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MaximilianMeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MaximilianMeister/subscriptions",
      "organizations_url": "https://api.github.com/users/MaximilianMeister/orgs",
      "repos_url": "https://api.github.com/users/MaximilianMeister/repos",
      "events_url": "https://api.github.com/users/MaximilianMeister/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MaximilianMeister/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-20T07:16:37Z",
    "updated_at": "2018-04-20T07:16:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fjl @karalabe do you think this is in any way possible or desirable? i still would love such a feature, but i am not sure if something like that is maintainable",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/383004657/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/383035239",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14346#issuecomment-383035239",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14346",
    "id": 383035239,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzAzNTIzOQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-20T09:07:46Z",
    "updated_at": "2018-04-20T09:07:46Z",
    "author_association": "MEMBER",
    "body": "Hmm, it's an interesting question. One one had I can definitely see the utility.\r\n\r\nOn the other hand though, it introduces problematic cases where the presence of an anv var could cause geth to execute differently without the user realizing. Currently if you use the CLI without a config, every behavior is fully specified via the flags. If you switch to a config file, there's already hidden behavior, but it's self contained within a file, that's still explicitly specified via a CLI flag.\r\n\r\nNow with env vars, all of a sudden you have a hidden behavioral modifier in the picture. Since we wouldn't maintain individual env vars, rather would enable support for all, things could get weird if a user has a leftover env var somewhere which influences all future geth invocations. Also it changes the security model a bit, since all of a sudden you need to ensure that noone can tamper with your env vars before trusting your geth instance.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/383035239/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/383038243",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/14346#issuecomment-383038243",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/14346",
    "id": 383038243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzAzODI0Mw==",
    "user": {
      "login": "MaximilianMeister",
      "id": 5364817,
      "node_id": "MDQ6VXNlcjUzNjQ4MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5364817?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MaximilianMeister",
      "html_url": "https://github.com/MaximilianMeister",
      "followers_url": "https://api.github.com/users/MaximilianMeister/followers",
      "following_url": "https://api.github.com/users/MaximilianMeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/MaximilianMeister/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MaximilianMeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MaximilianMeister/subscriptions",
      "organizations_url": "https://api.github.com/users/MaximilianMeister/orgs",
      "repos_url": "https://api.github.com/users/MaximilianMeister/repos",
      "events_url": "https://api.github.com/users/MaximilianMeister/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MaximilianMeister/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-20T09:19:35Z",
    "updated_at": "2018-04-20T09:19:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "> On the other hand though, it introduces problematic cases where the presence of an anv var could cause geth to execute differently without the user realizing. Currently if you use the CLI without a config, every behavior is fully specified via the flags. If you switch to a config file, there's already hidden behavior, but it's self contained within a file, that's still explicitly specified via a CLI flag.\r\n\r\n@karalabe the config file is already good, but it doesn't cover all flags, so it's also not as complete as providing a long list of flags, and you can not easily know which option is supported in the config file. i usually pass the flag to the `dumpconfig` subcommand to see if it changes the config file\r\n\r\n> \r\n> Now with env vars, all of a sudden you have a hidden behavioral modifier in the picture. Since we wouldn't maintain individual env vars, rather would enable support for all, things could get weird if a user has a leftover env var somewhere which influences all future geth invocations. Also it changes the security model a bit, since all of a sudden you need to ensure that noone can tamper with your env vars before trusting your geth instance.\r\n\r\nthe leftovers would definitely be the user's responsibility, it perhaps also would not be encouraged to do that on bare metal, when you have flags/configfile as a better and more explicit alternative.\r\n\r\nthe change in the security model is probably the deal breaker here, thanks for the explanation!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/383038243/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
