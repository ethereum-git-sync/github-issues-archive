{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22025",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22025/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22025/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22025/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/22025",
  "id": 768273986,
  "node_id": "MDU6SXNzdWU3NjgyNzM5ODY=",
  "number": 22025,
  "title": "Add Request Parameters to RPC logging",
  "user": {
    "login": "MysticRyuujin",
    "id": 8877131,
    "node_id": "MDQ6VXNlcjg4NzcxMzE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8877131?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MysticRyuujin",
    "html_url": "https://github.com/MysticRyuujin",
    "followers_url": "https://api.github.com/users/MysticRyuujin/followers",
    "following_url": "https://api.github.com/users/MysticRyuujin/following{/other_user}",
    "gists_url": "https://api.github.com/users/MysticRyuujin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MysticRyuujin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MysticRyuujin/subscriptions",
    "organizations_url": "https://api.github.com/users/MysticRyuujin/orgs",
    "repos_url": "https://api.github.com/users/MysticRyuujin/repos",
    "events_url": "https://api.github.com/users/MysticRyuujin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MysticRyuujin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    },
    {
      "id": 1157707837,
      "node_id": "MDU6TGFiZWwxMTU3NzA3ODM3",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/area:rpc",
      "name": "area:rpc",
      "color": "d4c5f9",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2020-12-15T22:50:21Z",
  "updated_at": "2021-02-25T09:47:09Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# Rationale\r\n\r\nWhen a JSON-RPC request is sent to the node, it would be nice to be able to capture a log of the parameters that were sent.\r\n\r\nCurrently, even at maximum verbosity level, all JSON-RPC requests seem to be logged at `DEBUG` level at the time the request is served:\r\n\r\n```\r\nDEBUG[12-15|16:41:42.323] Served eth_getBlockByNumber         conn=192.168.15.20:56660 reqid=1 t=\"573.915Âµs\"\r\nDEBUG[12-15|16:43:52.926] Served eth_getTransactionByHash     conn=192.168.10.50:37144 reqid=1 t=2.481519ms\r\n```\r\n\r\nAnd as you can see, there's no indication what block was requested, what transaction hash was requested, etc.\r\n\r\n# Implementation\r\n\r\nI think it would make sense to add the rpc request parameters under DETAIL level (or DEBUG, whatever makes sense)",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22025/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22025/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/745878643",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22025#issuecomment-745878643",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22025",
    "id": 745878643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTg3ODY0Mw==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-16T08:06:56Z",
    "updated_at": "2020-12-16T08:06:56Z",
    "author_association": "MEMBER",
    "body": "One small caveat here.. When we implemented `clef`, we added an auditlog, dumping all input and output via the untrusted external api into a log file (and also using a machine-readable output format). That's fine for clef, because there's never any sensitive information passing through the API. \r\n\r\nFor geth, it's not as easy, since there are endpoints which accept keystore password. And people are not always as careful about logs as they are about their keystore, so if we start dumping highly sensitive data into logs, it may well wind up in places such as \r\n- centralized logging facilities (like papertrail), \r\n- go-ethereum issue tickets, \r\n- unprotected shared backup folders, etc. \r\n\r\nI agree it's a super useful feature, and maybe we can reuse the same auditlog mechanism for certian namespace, like `eth`, but not have it enabled on `personal`, `admin` and `debug`. \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/745878643/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/746259410",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22025#issuecomment-746259410",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22025",
    "id": 746259410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NjI1OTQxMA==",
    "user": {
      "login": "MysticRyuujin",
      "id": 8877131,
      "node_id": "MDQ6VXNlcjg4NzcxMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8877131?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MysticRyuujin",
      "html_url": "https://github.com/MysticRyuujin",
      "followers_url": "https://api.github.com/users/MysticRyuujin/followers",
      "following_url": "https://api.github.com/users/MysticRyuujin/following{/other_user}",
      "gists_url": "https://api.github.com/users/MysticRyuujin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MysticRyuujin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MysticRyuujin/subscriptions",
      "organizations_url": "https://api.github.com/users/MysticRyuujin/orgs",
      "repos_url": "https://api.github.com/users/MysticRyuujin/repos",
      "events_url": "https://api.github.com/users/MysticRyuujin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MysticRyuujin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-16T13:06:31Z",
    "updated_at": "2020-12-16T13:36:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd be happy with that compromise.\r\n\r\nAlso another reason for #21963 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/746259410/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/747326436",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22025#issuecomment-747326436",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22025",
    "id": 747326436,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NzMyNjQzNg==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-17T09:38:27Z",
    "updated_at": "2020-12-17T09:40:13Z",
    "author_association": "MEMBER",
    "body": "It will need to be behind a parameter. Also maybe not go to the console but to a dedicated file. Maybe alongside #21926 \r\nAlso @MysticRyuujin can you write more about your use-case? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/747326436/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/747504349",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22025#issuecomment-747504349",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22025",
    "id": 747504349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NzUwNDM0OQ==",
    "user": {
      "login": "MysticRyuujin",
      "id": 8877131,
      "node_id": "MDQ6VXNlcjg4NzcxMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8877131?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MysticRyuujin",
      "html_url": "https://github.com/MysticRyuujin",
      "followers_url": "https://api.github.com/users/MysticRyuujin/followers",
      "following_url": "https://api.github.com/users/MysticRyuujin/following{/other_user}",
      "gists_url": "https://api.github.com/users/MysticRyuujin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MysticRyuujin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MysticRyuujin/subscriptions",
      "organizations_url": "https://api.github.com/users/MysticRyuujin/orgs",
      "repos_url": "https://api.github.com/users/MysticRyuujin/repos",
      "events_url": "https://api.github.com/users/MysticRyuujin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MysticRyuujin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-17T15:21:08Z",
    "updated_at": "2020-12-17T15:21:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Typically I'm trying to figure out why some applications work against one client but not another (often times without access to the application itself - or a steep learning curve to go figure out how to reproduce something). The first thing I want to do here is grab the body of the POST(s) hitting the node, this makes it easy to just re-send some curl commands to various nodes.\r\n\r\nWhile there are certainly things to consider for logging (e.g. passwords) - I feel detailed logging should be available.\r\n\r\nMy alternatives are to packet capture, stick a proxy in front of it, or rely on debugs from other applications making the calls, all of which I may or may not have access to depending on the environment, or even be allowed to do within the environment.\r\n\r\nI'm much more advocating in favor of having the functionality available than I am in dire need of a solution - I understand there are plenty of workaround available to capture this data, but I feel it should be native.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/747504349/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
