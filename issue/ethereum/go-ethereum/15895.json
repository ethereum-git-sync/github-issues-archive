{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15895",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15895/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15895/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15895/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/15895",
  "id": 288693792,
  "node_id": "MDU6SXNzdWUyODg2OTM3OTI=",
  "number": 15895,
  "title": "Question: Parsing event data.",
  "user": {
    "login": "m1ome",
    "id": 5213243,
    "node_id": "MDQ6VXNlcjUyMTMyNDM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5213243?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/m1ome",
    "html_url": "https://github.com/m1ome",
    "followers_url": "https://api.github.com/users/m1ome/followers",
    "following_url": "https://api.github.com/users/m1ome/following{/other_user}",
    "gists_url": "https://api.github.com/users/m1ome/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/m1ome/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/m1ome/subscriptions",
    "organizations_url": "https://api.github.com/users/m1ome/orgs",
    "repos_url": "https://api.github.com/users/m1ome/repos",
    "events_url": "https://api.github.com/users/m1ome/events{/privacy}",
    "received_events_url": "https://api.github.com/users/m1ome/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2018-01-15T19:23:03Z",
  "updated_at": "2019-09-17T07:56:32Z",
  "closed_at": "2019-09-17T07:56:32Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hello, \r\n\r\nI have a couple of questions.\r\nLet's say i have smart-contract with event labeled `Transfer`. \r\n\r\nWith definition\r\n```\r\n[{\"name\": \"test\", \"type\": \"event\", \"inputs\":[{\"indexed\": true,\"name\": \"_from\",\"type\": \"address\"},{\"indexed\": true,\"name\": \"_to\",\"type\": \"address\"},{\"indexed\": false,\"name\": \"_value\",\"type\": \"uint256\"}]}]\r\n```\r\n\r\nHow can i parse all this stuff into `go structure`? \r\nMy testing script:\r\n\r\n```go\r\nfunc fetchLogs(client *ethclient.Client, fromBlock, toBlock *big.Int) {\r\n\tensABI, err := abi.JSON(strings.NewReader(ENSTEmporaryHashRegistryABI))\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\r\n\teventTopicId := ensABI.Events[\"Transfer\"].Id()\r\n\tq := ethereum.FilterQuery{\r\n\t\tFromBlock: fromBlock,\r\n\t\tToBlock:   toBlock,\r\n\t\tAddresses: []common.Address{ENSContractAddress},\r\n\t\tTopics:    [][]common.Hash{[]common.Hash{eventTopicId}},\r\n\t}\r\n\r\n\tctx, _ := context.WithTimeout(context.Background(), rpcTimeout)\r\n\tvmlogs, err := client.FilterLogs(ctx, q)\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\r\n\tfor _, log := range vmlogs {\r\n\t\t// Here i should do binding data to structure, but how?\r\n\t}\r\n}\r\n```",
  "closed_by": {
    "login": "adamschmideg",
    "id": 208822,
    "node_id": "MDQ6VXNlcjIwODgyMg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/208822?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/adamschmideg",
    "html_url": "https://github.com/adamschmideg",
    "followers_url": "https://api.github.com/users/adamschmideg/followers",
    "following_url": "https://api.github.com/users/adamschmideg/following{/other_user}",
    "gists_url": "https://api.github.com/users/adamschmideg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/adamschmideg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/adamschmideg/subscriptions",
    "organizations_url": "https://api.github.com/users/adamschmideg/orgs",
    "repos_url": "https://api.github.com/users/adamschmideg/repos",
    "events_url": "https://api.github.com/users/adamschmideg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/adamschmideg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15895/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15895/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/357819587",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15895#issuecomment-357819587",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15895",
    "id": 357819587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzgxOTU4Nw==",
    "user": {
      "login": "Magicking",
      "id": 284088,
      "node_id": "MDQ6VXNlcjI4NDA4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/284088?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Magicking",
      "html_url": "https://github.com/Magicking",
      "followers_url": "https://api.github.com/users/Magicking/followers",
      "following_url": "https://api.github.com/users/Magicking/following{/other_user}",
      "gists_url": "https://api.github.com/users/Magicking/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Magicking/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Magicking/subscriptions",
      "organizations_url": "https://api.github.com/users/Magicking/orgs",
      "repos_url": "https://api.github.com/users/Magicking/repos",
      "events_url": "https://api.github.com/users/Magicking/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Magicking/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T00:29:39Z",
    "updated_at": "2018-01-16T00:29:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "You can use Unpack from https://godoc.org/github.com/ethereum/go-ethereum/accounts/abi#Arguments.Unpack\r\n```\r\n// It should look something like that for this example\r\n\ttype TransferEvt struct {\r\n\t\tFrom\tcommon.Address\r\n\t\tTo\t\tcommon.Address\r\n\t\tValue\t*bit.Int\r\n\t}\r\n// [...]\r\n\tfor _, log := range vmlogs {\r\n\t\tvar e TransferEvt\r\n\t\tensABI.Unpack(&e, \"Transfer\", log.Data)\r\n\t\t// Do stuff with e\r\n\t}\r\n}\r\n```\r\nSee: https://github.com/ethereum/go-ethereum/blob/master/accounts/abi/unpack_test.go\r\nSoon: https://github.com/ethereum/go-ethereum/pull/15832",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/357819587/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/442770252",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15895#issuecomment-442770252",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15895",
    "id": 442770252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Mjc3MDI1Mg==",
    "user": {
      "login": "jdkanani",
      "id": 1692593,
      "node_id": "MDQ6VXNlcjE2OTI1OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1692593?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdkanani",
      "html_url": "https://github.com/jdkanani",
      "followers_url": "https://api.github.com/users/jdkanani/followers",
      "following_url": "https://api.github.com/users/jdkanani/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdkanani/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdkanani/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdkanani/subscriptions",
      "organizations_url": "https://api.github.com/users/jdkanani/orgs",
      "repos_url": "https://api.github.com/users/jdkanani/repos",
      "events_url": "https://api.github.com/users/jdkanani/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdkanani/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-29T09:44:58Z",
    "updated_at": "2018-11-29T09:45:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Magicking It only parses `log.Data` not topics. Shouldn't abi should expose a method which does both?\r\n\r\nI see there is `parseLog` method which does that. I think we should expose it to abi too or perhaps in abigen contract instead of bound contract",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/442770252/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/450289911",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15895#issuecomment-450289911",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15895",
    "id": 450289911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDI4OTkxMQ==",
    "user": {
      "login": "patelvasu",
      "id": 29474378,
      "node_id": "MDQ6VXNlcjI5NDc0Mzc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/29474378?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/patelvasu",
      "html_url": "https://github.com/patelvasu",
      "followers_url": "https://api.github.com/users/patelvasu/followers",
      "following_url": "https://api.github.com/users/patelvasu/following{/other_user}",
      "gists_url": "https://api.github.com/users/patelvasu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/patelvasu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/patelvasu/subscriptions",
      "organizations_url": "https://api.github.com/users/patelvasu/orgs",
      "repos_url": "https://api.github.com/users/patelvasu/repos",
      "events_url": "https://api.github.com/users/patelvasu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/patelvasu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-28T04:55:08Z",
    "updated_at": "2018-12-28T04:55:08Z",
    "author_association": "NONE",
    "body": "(**abi: cannot marshal in to go type: length insufficient 96 require 128**)  I have found this error after call  ABI.Unpack() \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/450289911/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/450305349",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15895#issuecomment-450305349",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15895",
    "id": 450305349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDMwNTM0OQ==",
    "user": {
      "login": "RodrigoBuendia",
      "id": 6840388,
      "node_id": "MDQ6VXNlcjY4NDAzODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6840388?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RodrigoBuendia",
      "html_url": "https://github.com/RodrigoBuendia",
      "followers_url": "https://api.github.com/users/RodrigoBuendia/followers",
      "following_url": "https://api.github.com/users/RodrigoBuendia/following{/other_user}",
      "gists_url": "https://api.github.com/users/RodrigoBuendia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RodrigoBuendia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RodrigoBuendia/subscriptions",
      "organizations_url": "https://api.github.com/users/RodrigoBuendia/orgs",
      "repos_url": "https://api.github.com/users/RodrigoBuendia/repos",
      "events_url": "https://api.github.com/users/RodrigoBuendia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RodrigoBuendia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-28T07:15:49Z",
    "updated_at": "2018-12-28T07:15:49Z",
    "author_association": "NONE",
    "body": "Je, je\n\nEl 28 dic. 2018 5:55, \"vasudev\" <notifications@github.com> escribió:\n\n(*abi: cannot marshal in to go type: length insufficient 96 require 128*) I\nhave found this error after call ABI.Unpack()\n\n—\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\n<https://github.com/ethereum/go-ethereum/issues/15895#issuecomment-450289911>,\nor mute the thread\n<https://github.com/notifications/unsubscribe-auth/AGhgRDrfZ2W5QkLvoE83vZ__aZpu2q5jks5u9aROgaJpZM4Re2Pm>\n.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/450305349/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/532107162",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15895#issuecomment-532107162",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15895",
    "id": 532107162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMjEwNzE2Mg==",
    "user": {
      "login": "adamschmideg",
      "id": 208822,
      "node_id": "MDQ6VXNlcjIwODgyMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/208822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamschmideg",
      "html_url": "https://github.com/adamschmideg",
      "followers_url": "https://api.github.com/users/adamschmideg/followers",
      "following_url": "https://api.github.com/users/adamschmideg/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamschmideg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamschmideg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamschmideg/subscriptions",
      "organizations_url": "https://api.github.com/users/adamschmideg/orgs",
      "repos_url": "https://api.github.com/users/adamschmideg/repos",
      "events_url": "https://api.github.com/users/adamschmideg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamschmideg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-17T07:56:32Z",
    "updated_at": "2019-09-17T07:56:32Z",
    "author_association": "MEMBER",
    "body": "The original question has been answered. If you think, there's still a problem to be solved, please open a new issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/532107162/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
