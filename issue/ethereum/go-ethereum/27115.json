{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27115",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27115/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27115/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27115/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/27115",
  "id": 1673505143,
  "node_id": "I_kwDOAOvK985jv6l3",
  "number": 27115,
  "title": "Some thoughts on opSload and dynamic type array slot calculation.",
  "user": {
    "login": "joohhnnn",
    "id": 68833933,
    "node_id": "MDQ6VXNlcjY4ODMzOTMz",
    "avatar_url": "https://avatars.githubusercontent.com/u/68833933?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/joohhnnn",
    "html_url": "https://github.com/joohhnnn",
    "followers_url": "https://api.github.com/users/joohhnnn/followers",
    "following_url": "https://api.github.com/users/joohhnnn/following{/other_user}",
    "gists_url": "https://api.github.com/users/joohhnnn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/joohhnnn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/joohhnnn/subscriptions",
    "organizations_url": "https://api.github.com/users/joohhnnn/orgs",
    "repos_url": "https://api.github.com/users/joohhnnn/repos",
    "events_url": "https://api.github.com/users/joohhnnn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/joohhnnn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 268304226,
      "node_id": "MDU6TGFiZWwyNjgzMDQyMjY=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:docs",
      "name": "type:docs",
      "color": "fef2c0",
      "default": false,
      "description": null
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-04-18T16:50:03Z",
  "updated_at": "2023-04-18T16:50:03Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Background: \r\nI have been pondering why Ethereum has an OPCODE like SELFDESTRUCT to clear the entire storage, but no OPCODE to copy the complete storage from a specified address to a new contract during deployment. After discussing with @jsvisa , we concluded that since slots are calculated based on the contract address, even if the storage is copied, it cannot be used due to the slot calculation rules. This has led me to think more deeply about the issue.\r\n### questionï¼š\r\n1. Why doesn't SLOAD have a specified account (contract) input? Currently, it is impossible to use any OPCODE to access data on a specific slot of another account during EVM runtime. Perhaps we can add an input parameter to SLOAD to achieve this, or introduce a brand new opcode.\r\n2. Ethereum may adopt Verkle trees in the future. When calculating the storage location for dynamic data types, the contract address is involved. My understanding is that this design was initially intended to prevent hash collisions and enhance security (this is just my personal speculation; there may be deeper reasons). However, considering the development timeline for Verkle trees, it is unlikely that hash collisions could be caused by computational power. Using a fixed value instead of the contract address to participate in slot calculations could not only optimize performance but also facilitate future expansion (e.g., replicating the entire storage for data migration or adding new SLOAD functionality mentioned above). Keeping forked code slots consistent would be beneficial for the development of fork-based derivatives, aggregators, etc., such as those seen with Uniswap.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27115/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27115/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
