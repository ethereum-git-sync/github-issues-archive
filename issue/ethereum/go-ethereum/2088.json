{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2088",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2088/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2088/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2088/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/2088",
  "id": 123365889,
  "node_id": "MDU6SXNzdWUxMjMzNjU4ODk=",
  "number": 2088,
  "title": "getUncleCount(fromBlock,toBlock) - or: Doesn't total supply depend on uncle count?",
  "user": {
    "login": "altsheets",
    "id": 12915804,
    "node_id": "MDQ6VXNlcjEyOTE1ODA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/12915804?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/altsheets",
    "html_url": "https://github.com/altsheets",
    "followers_url": "https://api.github.com/users/altsheets/followers",
    "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
    "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
    "organizations_url": "https://api.github.com/users/altsheets/orgs",
    "repos_url": "https://api.github.com/users/altsheets/repos",
    "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
    "received_events_url": "https://api.github.com/users/altsheets/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2015-12-21T21:49:21Z",
  "updated_at": "2016-04-12T16:01:51Z",
  "closed_at": "2016-01-08T21:13:08Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I want to calculate the total supply.   But I cannot.\n\n---\n\nI am wondering if I understand the mining rewards correctly. \nI think it is **not** simply \n\n```\nsupply = premine + blocknumber*blockreward\n```\n\nbecause of \"uncles\", right?\n\nAn _uncle miner_ gets 4.375 coins or 3.75 coins (for 0Uncles and 1Uncles).   Correct? More such additional rewards?\n\nPlus _including_ an uncle _into a block_ gives an extra 5/32 coins to the _block miner_. Correct?\n\n---\n\nSo the total supply of ETH is (probably)\n\n```\nsupply = premine \n+ blockReward * eth.blockNumber \n+ 0UncleReward * eth.numberOf0Uncles \n+ 1UncleReward * eth.numberOf1Uncles \n+ includeUnclesReward * NumberOfIncludedUncles\n```\n\n**Correct, or am I completely missing the point?**\n\nEDIT: As far as I understand it, this should be true\n\n```\nNumberOfIncludedUncles = eth.numberOf0Uncles + eth.numberOf1Uncles \nblockReward = 5\n0UncleReward = 4.375\n1UncleReward = 3.75\nincludeUnclesReward = 5/32\n```\n\nso the only new thing a future version needs to provide are these two integers\n\n```\neth.numberOf0Uncles\neth.numberOf1Uncles \n```\n\n---\n\n**If** the above is (near to) correct ... then it is impossible to calculate the REAL current supply at the moment. So: \n\n**I suggest new API functions:**\n\n```\neth.getUncleCount(fromBlock,toBlock)\n```\n\nor at least the aggregate sums until the current block:\n\n```\neth.numberOf0Uncles\neth.numberOf1Uncles \n```\n\nwhere the first one would return the tuple of number of 0Uncles and 1Uncles (and 2Uncles if there are any) in that range of blocks; or the second one would return simple integers with the total number of {0,1}-uncles from genesis until now (similar to the eth.blockNumber integer).\n\n---\n\nOr is there an easier way to do this?\n\nUsed sources:\n- https://github.com/ethereum/go-ethereum/issues/1591#issuecomment-128049106\n- http://gavwood.com/paper.pdf equation 143 & 144\n- https://forum.ethereum.org/discussion/2437/confused-about-block-rewards\n\nP.S.: Even the \"big guys\" are of a differing opinion on the \"supply\" topic - there is a (0.3 percent) difference between the \"supply\" reported at etherscan and CMC. Is that because of the above ?\n",
  "closed_by": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2088/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2088/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168690397",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2088#issuecomment-168690397",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2088",
    "id": 168690397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODY5MDM5Nw==",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T14:26:53Z",
    "updated_at": "2016-01-04T14:26:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't see the point of having these new API calls. Could you please specify why these would be required for DApp development (or any other type of development)?\n\nIf you'd like to get all uncles for statistics just loop over all the blocks in your desired range.\n\nUnsure what `+ includeUnclesReward * NumberOfIncludedUncles` means however. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168690397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168728900",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2088#issuecomment-168728900",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2088",
    "id": 168728900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODcyODkwMA==",
    "user": {
      "login": "altsheets",
      "id": 12915804,
      "node_id": "MDQ6VXNlcjEyOTE1ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altsheets",
      "html_url": "https://github.com/altsheets",
      "followers_url": "https://api.github.com/users/altsheets/followers",
      "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
      "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
      "organizations_url": "https://api.github.com/users/altsheets/orgs",
      "repos_url": "https://api.github.com/users/altsheets/repos",
      "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altsheets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T16:42:27Z",
    "updated_at": "2016-01-04T17:22:15Z",
    "author_association": "NONE",
    "body": "Thanks a lot for your answer.\n\n> I don't see the point of having these new API calls.  \n\nBecause otherwise I would have to iterate over all ~800,000 blocks, checking all of them for uncles. \nAnd each time I want to update that information I either have to store my intermediate results, or completely redo them (and why should I store such a result, which is of such general interest? The ethereum software itself should know about those numbers - they are just small integers, and will not take up much space.).\n\nThe ethereum architects have created a complicated rewards scheme which is not simply blocknumber*blockreward. But the current API is not yet providing all the necessary information to work with that complicated rewards scheme. \n\n> why these would be required\n\n**I would like to calculate the REAL total supply.**\n\nsupply = premine + mined\n\nThe 'mined' part is tricky because of the uncle rewards.\n\nmined = rewards(blocks) + rewards(uncles) + rewards(include-uncle-into-block)\n\n> Unsure what ...\n\nThere is am extra reward given to miners who have included uncles into their mined blocks - right?\n\n> > Plus including an uncle into a block gives an extra 5/32 coins to the block miner. Correct?\n\nOr not? Then rewards(include-uncle-into-block) = 0 ? Yes? No? \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168728900/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/169916015",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2088#issuecomment-169916015",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2088",
    "id": 169916015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTkxNjAxNQ==",
    "user": {
      "login": "tgerring",
      "id": 731472,
      "node_id": "MDQ6VXNlcjczMTQ3Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731472?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tgerring",
      "html_url": "https://github.com/tgerring",
      "followers_url": "https://api.github.com/users/tgerring/followers",
      "following_url": "https://api.github.com/users/tgerring/following{/other_user}",
      "gists_url": "https://api.github.com/users/tgerring/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tgerring/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tgerring/subscriptions",
      "organizations_url": "https://api.github.com/users/tgerring/orgs",
      "repos_url": "https://api.github.com/users/tgerring/repos",
      "events_url": "https://api.github.com/users/tgerring/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tgerring/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T07:21:42Z",
    "updated_at": "2016-01-08T07:22:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Because otherwise I would have to iterate over all ~800,000 blocks, checking all of them for uncles. \n> And each time I want to update that information I either have to store my intermediate results, or completely redo them (and why should I store such a result, which is of such general interest? The ethereum software itself should know about those numbers - they are just small integers, and will not take up much space.).\n\nWhat you're describing are [database indexes](https://en.wikipedia.org/wiki/Database_index) which is a non-trivial topic and why you're not likely to get an answer about aggregates via API any time soon. To effectively respond to queries like this will require more forethought than demanding a new API is created\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/169916015/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/170052158",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2088#issuecomment-170052158",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2088",
    "id": 170052158,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDA1MjE1OA==",
    "user": {
      "login": "altsheets",
      "id": 12915804,
      "node_id": "MDQ6VXNlcjEyOTE1ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altsheets",
      "html_url": "https://github.com/altsheets",
      "followers_url": "https://api.github.com/users/altsheets/followers",
      "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
      "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
      "organizations_url": "https://api.github.com/users/altsheets/orgs",
      "repos_url": "https://api.github.com/users/altsheets/repos",
      "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altsheets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T16:46:44Z",
    "updated_at": "2016-01-08T17:24:43Z",
    "author_association": "NONE",
    "body": "> What you're describing are database indexes \n\nYes. \n\nProbably because I have been coding on top of the fantastic, comfortable, genius [NXT API](http://nxtwiki.org/wiki/The_Nxt_API) for quite some time now, I am lacking the imagination how to live without it \\* lol \\*  They do have a 7 times slower blocktime ... and I don't know how they did it ... but their blockchain size is only 1.7GB after 2.1 years. And still it provides exactly that:\n\nDatabase indices, to directly access all data objects on the chain. Quite an amazing system, really. Get inspired ... :-)\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/170052158/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/170061426",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2088#issuecomment-170061426",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2088",
    "id": 170061426,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDA2MTQyNg==",
    "user": {
      "login": "altsheets",
      "id": 12915804,
      "node_id": "MDQ6VXNlcjEyOTE1ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altsheets",
      "html_url": "https://github.com/altsheets",
      "followers_url": "https://api.github.com/users/altsheets/followers",
      "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
      "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
      "organizations_url": "https://api.github.com/users/altsheets/orgs",
      "repos_url": "https://api.github.com/users/altsheets/repos",
      "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altsheets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T17:15:01Z",
    "updated_at": "2016-01-08T17:43:48Z",
    "author_association": "NONE",
    "body": "> which is a non-trivial topic and why you're not likely to get an answer about aggregates via API any time soon. \n\nExactly.\n\nTo prevent that, I was thinking about a supersimple internal summation, whenever a new block is added. _Just_ **sum up the count** _of {0,1}uncles ..._\n\n---\n\nThese are thoughts about a future API, of course ...\n\nIs my above \"supply = premine + ...\" formula correct at all? Perhaps I am wrong in my assumption how much ether has been mined. But if not ...:\n\nRight now (without iterating over all 800k blocks) it is impossible to name the **correct total supply of ether** - right?  \n\n---\n\nSo what about (in the future) storing just **two integer values**:\n- total NumberOf0Uncles that were included in all blocks until now\n- total NumberOf1Uncles that were included in all blocks until now\n\nThat won't cost anything. And (only) with that information, the REAL supply of ether can be calculated.\n\n---\n\nOr ... if you think you can afford to store 800,000 \\* 4 bytes \\* 2 ... you could store 2 numbers for each block:\n- total NumberOf0Uncles that were included in all blocks until that block \n- total NumberOf1Uncles that were included in all blocks until that block \n\nThat would allow an easy getUncleCount(fromBlock,toBlock), and reveal all information.\n\n---\n\nThe first suggestion is really really easy to include in a future version - don't you think so?\n\nAnd to not be able to correctly name the total supply of a (platform that is also used as a) currency ... is a bit odd, no?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/170061426/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/170124802",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2088#issuecomment-170124802",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2088",
    "id": 170124802,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDEyNDgwMg==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T21:13:08Z",
    "updated_at": "2016-01-08T21:13:08Z",
    "author_association": "MEMBER",
    "body": "If you need detailed information on the uncle headers of all blocks, please consider creating your own index. It is not that hard to build one. You can even update it incrementally using existing features of the web3 API.\n\nJust to be clear on this: We take suggestions for new APIs seriously and keep track of them. This is the first time anyone has requested an API for aggregate information on uncle headers. Consider\nyour suggestion noted.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/170124802/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/170184582",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2088#issuecomment-170184582",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2088",
    "id": 170184582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDE4NDU4Mg==",
    "user": {
      "login": "altsheets",
      "id": 12915804,
      "node_id": "MDQ6VXNlcjEyOTE1ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altsheets",
      "html_url": "https://github.com/altsheets",
      "followers_url": "https://api.github.com/users/altsheets/followers",
      "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
      "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
      "organizations_url": "https://api.github.com/users/altsheets/orgs",
      "repos_url": "https://api.github.com/users/altsheets/repos",
      "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altsheets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-09T03:00:42Z",
    "updated_at": "2016-01-09T20:59:32Z",
    "author_association": "NONE",
    "body": "@fjl one last question: Have I actually understood the mined/supply function correctly - or not?\n\ni.e. in https://github.com/ethereum/go-ethereum/issues/2088#issue-123365889 is the central formula correct? -->\n\n> So the total supply of ETH is (probably)\n> supply = premine + blockReward ...\n\n? \n\nStill wondering if I got it right, or not.\n\nThanks a lot!\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/170184582/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/170279730",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2088#issuecomment-170279730",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2088",
    "id": 170279730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDI3OTczMA==",
    "user": {
      "login": "altsheets",
      "id": 12915804,
      "node_id": "MDQ6VXNlcjEyOTE1ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altsheets",
      "html_url": "https://github.com/altsheets",
      "followers_url": "https://api.github.com/users/altsheets/followers",
      "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
      "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
      "organizations_url": "https://api.github.com/users/altsheets/orgs",
      "repos_url": "https://api.github.com/users/altsheets/repos",
      "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altsheets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-09T20:43:43Z",
    "updated_at": "2016-01-09T20:59:10Z",
    "author_association": "NONE",
    "body": "> We take suggestions for new APIs seriously and keep track of them.\n\nThanks a lot.\n\n> This is the first time anyone has requested ...\n\nThen ... for the first time, anyone has ever wondered what the real supply of ether is - right? :-)\n\n> Consider your suggestion noted.\n\nNice. So one day, I might see that function. Thx.\n\nA tiny thing to add to it: While you are on it anyways, and when that above data is then available, please also create a simple API function that tells me, us, everyone ... about the total real coin supply:\n\neth.supply()\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/170279730/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/185209527",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2088#issuecomment-185209527",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2088",
    "id": 185209527,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NTIwOTUyNw==",
    "user": {
      "login": "altsheets",
      "id": 12915804,
      "node_id": "MDQ6VXNlcjEyOTE1ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altsheets",
      "html_url": "https://github.com/altsheets",
      "followers_url": "https://api.github.com/users/altsheets/followers",
      "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
      "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
      "organizations_url": "https://api.github.com/users/altsheets/orgs",
      "repos_url": "https://api.github.com/users/altsheets/repos",
      "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altsheets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-17T13:45:18Z",
    "updated_at": "2016-02-17T13:46:01Z",
    "author_association": "NONE",
    "body": "> Still wondering if I got it right, or not.\n\nis my rewards calculation correct, or not?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/185209527/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/202067849",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2088#issuecomment-202067849",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2088",
    "id": 202067849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjA2Nzg0OQ==",
    "user": {
      "login": "altsheets",
      "id": 12915804,
      "node_id": "MDQ6VXNlcjEyOTE1ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altsheets",
      "html_url": "https://github.com/altsheets",
      "followers_url": "https://api.github.com/users/altsheets/followers",
      "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
      "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
      "organizations_url": "https://api.github.com/users/altsheets/orgs",
      "repos_url": "https://api.github.com/users/altsheets/repos",
      "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altsheets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-27T13:55:29Z",
    "updated_at": "2016-03-27T15:16:15Z",
    "author_association": "NONE",
    "body": "When I came across this function suggestion `totalSupply()` for '[total token supply](https://github.com/ethereum/wiki/wiki/Standardized_Contract_APIs#totalsupply)' I was reminded of my -still unanswered- question above.\n\n_I actually consider it suboptimal communication, to close github issues before they are actually answered._\n\n--> \n\n**What is the `totalSupply=fn(blocknumber)` of ETH ?**\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/202067849/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/204373843",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2088#issuecomment-204373843",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2088",
    "id": 204373843,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDM3Mzg0Mw==",
    "user": {
      "login": "altsheets",
      "id": 12915804,
      "node_id": "MDQ6VXNlcjEyOTE1ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altsheets",
      "html_url": "https://github.com/altsheets",
      "followers_url": "https://api.github.com/users/altsheets/followers",
      "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
      "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
      "organizations_url": "https://api.github.com/users/altsheets/orgs",
      "repos_url": "https://api.github.com/users/altsheets/repos",
      "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altsheets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-01T12:14:28Z",
    "updated_at": "2016-04-01T12:14:28Z",
    "author_association": "NONE",
    "body": "anyone?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/204373843/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/208981583",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2088#issuecomment-208981583",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2088",
    "id": 208981583,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODk4MTU4Mw==",
    "user": {
      "login": "altsheets",
      "id": 12915804,
      "node_id": "MDQ6VXNlcjEyOTE1ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altsheets",
      "html_url": "https://github.com/altsheets",
      "followers_url": "https://api.github.com/users/altsheets/followers",
      "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
      "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
      "organizations_url": "https://api.github.com/users/altsheets/orgs",
      "repos_url": "https://api.github.com/users/altsheets/repos",
      "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altsheets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-12T16:01:51Z",
    "updated_at": "2016-04-12T16:01:51Z",
    "author_association": "NONE",
    "body": "So here can can see what happens when issues are closed before they are answered. \n\nThey are not on your radar anymore.\n\nThis admin behaviour is just ... wrong.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/208981583/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
