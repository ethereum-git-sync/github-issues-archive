{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27935",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27935/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27935/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27935/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/27935",
  "id": 1851970661,
  "node_id": "I_kwDOAOvK985uYtRl",
  "number": 27935,
  "title": "Allow replay of transactions that are designed to be replayable",
  "user": {
    "login": "SKYBITDev3",
    "id": 141273631,
    "node_id": "U_kgDOCGuqHw",
    "avatar_url": "https://avatars.githubusercontent.com/u/141273631?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/SKYBITDev3",
    "html_url": "https://github.com/SKYBITDev3",
    "followers_url": "https://api.github.com/users/SKYBITDev3/followers",
    "following_url": "https://api.github.com/users/SKYBITDev3/following{/other_user}",
    "gists_url": "https://api.github.com/users/SKYBITDev3/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/SKYBITDev3/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/SKYBITDev3/subscriptions",
    "organizations_url": "https://api.github.com/users/SKYBITDev3/orgs",
    "repos_url": "https://api.github.com/users/SKYBITDev3/repos",
    "events_url": "https://api.github.com/users/SKYBITDev3/events{/privacy}",
    "received_events_url": "https://api.github.com/users/SKYBITDev3/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2023-08-15T19:05:22Z",
  "updated_at": "2023-08-21T10:39:36Z",
  "closed_at": "2023-08-21T08:00:58Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# Rationale\r\nInnovative and useful blockchains have been increasingly appearing, resulting in a growing field of cross-chain platforms and tools, and the need to deploy contracts to the same addresses across many blockchains.\r\n\r\nThe CREATE2 opcode and CREATE3 method make it easier to deploy contracts to the same address on multiple blockchains (because nonce is not used in address calculation). But first CREATE2 and CREATE3 *factory* contracts need to be deployed before CREATE2 and CREATE3 can be used.\r\n\r\nSuch factory contracts need to be deployed to the same address on multiple blockchains in order for the contracts that are deployed from them to have the same address.\r\n\r\nOne example is [Deterministic Deployment Proxy](https://github.com/Zoltu/deterministic-deployment-proxy) by [MicahZoltu](https://github.com/MicahZoltu), whom we know is an Ethereum core developer and EIP author. It offers a CREATE2 factory packaged as a replayable serialized signed raw deployment transaction:\r\n```\r\n0xf87e8085174876e800830186a08080ad601f80600e600039806000f350fe60003681823780368234f58015156014578182fd5b80825250506014600cf31ba02222222222222222222222222222222222222222222222222222222222222222a02222222222222222222222222222222222222222222222222222222222222222\r\n```\r\nTransaction type and chain ID are `0`, with hardcoded gas limit and price.\r\n\r\nAs long as this deployment transaction is broadcast as-is, the transaction hash will always be [0x8ee59123fee2379c81c6fed5fa4310d24b0e40027b3bb04684bde87f0e3caaf1](https://basescan.org/tx/0x8ee59123fee2379c81c6fed5fa4310d24b0e40027b3bb04684bde87f0e3caaf1) and the created contract will always have address [0x7a0d94f55792c434d74a40883c6ed8545e406d12](https://basescan.org/address/0x7a0d94f55792c434d74a40883c6ed8545e406d12). See the raw transaction processed on Base: https://basescan.org/getRawTx?tx=0x8ee59123fee2379c81c6fed5fa4310d24b0e40027b3bb04684bde87f0e3caaf1, which matches with the `0xf87e80...` above.\r\n\r\nThis CREATE2 factory has actually been successfully deployed to the same address on over 20 blockchains, just by pushing the raw transaction `0xf87e80...` to each: https://blockscan.com/address/0x7A0D94F55792C434d74a40883C6ed8545E406D12\r\n\r\nNow with increased enforcement of chain ID as first described in the [Geth v1.10.0 announcement](https://blog.ethereum.org/2021/03/03/geth-v1-10-0#chainid-enforcement), rejections of such deployment transactions with chain ID `0` are becoming more common with node service providers.\r\n\r\nIf we respond to the rejections by setting chain ID to match the blockchain that we want to deploy the factory contract onto, then the raw transaction will be different for each blockchain (as changing other values like gas price would too), hence the address will be different on each blockchain, which is the opposite of what is needed.\r\n\r\n`--rpc.allow-unprotected-txs` is only relevant for those running nodes. Not everyone runs nodes due to the high hardware requirements, and there are now many node service providers. But node service providers may not enable `--rpc.allow-unprotected-txs`, and you also said in the Geth v1.10.0 announcement \"that this is a temporary mechanism that will be removed long term\". Such a heavy-handed banning of transaction replay would be the wrong approach. Such intolerance would stifle innovation in the cross-chain field.\r\n\r\nFactory contracts are a valid use case for replayable transactions. I'm aware that there are security risks when there's no replay protection. So then let's come up with a way to maintain secuirty whilst allowing transactions that are meant to be replayed.\r\n\r\n\r\n# Implementation\r\nOne idea is to agree on a value for chain ID that would indicate that the transaction was designed to be replayable. e.g. if `chainId === -1` then let it through. No wallet app would set a negative chain ID (and none would've done so in the past so there's no risk of replay of past transactions), so normal crypto users remain safe.\r\n\r\nAlso consider whether there should be other checks e.g. allow if the transaction is only for contract deployment.\r\n\r\nLet's discuss and work towards a solution.",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27935/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27935/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1682584311",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27935#issuecomment-1682584311",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27935",
    "id": 1682584311,
    "node_id": "IC_kwDOAOvK985kSjL3",
    "user": {
      "login": "SKYBITDev3",
      "id": 141273631,
      "node_id": "U_kgDOCGuqHw",
      "avatar_url": "https://avatars.githubusercontent.com/u/141273631?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SKYBITDev3",
      "html_url": "https://github.com/SKYBITDev3",
      "followers_url": "https://api.github.com/users/SKYBITDev3/followers",
      "following_url": "https://api.github.com/users/SKYBITDev3/following{/other_user}",
      "gists_url": "https://api.github.com/users/SKYBITDev3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SKYBITDev3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SKYBITDev3/subscriptions",
      "organizations_url": "https://api.github.com/users/SKYBITDev3/orgs",
      "repos_url": "https://api.github.com/users/SKYBITDev3/repos",
      "events_url": "https://api.github.com/users/SKYBITDev3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SKYBITDev3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-17T16:17:47Z",
    "updated_at": "2023-08-17T16:18:41Z",
    "author_association": "NONE",
    "body": "Factory contracts is just one use case which depends on same contract addresses across all blockchains.\r\n\r\nAnother use case is with proxy contracts. e.g. Axelar have cross-chain services, with gateway and gas service proxy contracts on 14 testnets and 13 mainnets:\r\nhttps://docs.axelar.dev/dev/reference/mainnet-contract-addresses\r\nhttps://docs.axelar.dev/dev/reference/testnet-contract-addresses\r\n\r\nThey used EOAs for deployment, which means different From addresses and nonces caused different addresses for their gateway proxy contracts. For their gas service proxy contracts they managed to keep the account and nonce same when deploying, so the addresses are same.\r\n\r\nReplayable deployment transactions would have helped them a lot for keeping the same addresses across the many blockchains that they support, as then nonce and account would not matter.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1682584311/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1684307146",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27935#issuecomment-1684307146",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27935",
    "id": 1684307146,
    "node_id": "IC_kwDOAOvK985kZHzK",
    "user": {
      "login": "SKYBITDev3",
      "id": 141273631,
      "node_id": "U_kgDOCGuqHw",
      "avatar_url": "https://avatars.githubusercontent.com/u/141273631?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SKYBITDev3",
      "html_url": "https://github.com/SKYBITDev3",
      "followers_url": "https://api.github.com/users/SKYBITDev3/followers",
      "following_url": "https://api.github.com/users/SKYBITDev3/following{/other_user}",
      "gists_url": "https://api.github.com/users/SKYBITDev3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SKYBITDev3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SKYBITDev3/subscriptions",
      "organizations_url": "https://api.github.com/users/SKYBITDev3/orgs",
      "repos_url": "https://api.github.com/users/SKYBITDev3/repos",
      "events_url": "https://api.github.com/users/SKYBITDev3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SKYBITDev3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-18T18:47:36Z",
    "updated_at": "2023-08-18T18:48:25Z",
    "author_association": "NONE",
    "body": "I've mentioned factories and proxies as valid use cases, but there would of course be others that we ourselves may not know of, as we shouldn't assume that we can imagine all possible use cases in the present or future.\r\n\r\nBasically any application / platform / framework that deals with multiple blockchains would benefit from having their contracts at the same addresses across all blockchains, as it makes things simpler and more elegant.\r\n\r\ne.g. [OpenGSN](https://opengsn.org) supports 13 different blockchains with 7 contracts on each. Currently they record 7 addresses for each blockchain, so over 90 addresses: https://github.com/opengsn/docs/blob/master/networks/gsn-networks.json. If they could have the same address on all blockchains for each of the contracts then they'd only have to work with 7 different addresses.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1684307146/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1685204750",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27935#issuecomment-1685204750",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27935",
    "id": 1685204750,
    "node_id": "IC_kwDOAOvK985kci8O",
    "user": {
      "login": "SKYBITDev3",
      "id": 141273631,
      "node_id": "U_kgDOCGuqHw",
      "avatar_url": "https://avatars.githubusercontent.com/u/141273631?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SKYBITDev3",
      "html_url": "https://github.com/SKYBITDev3",
      "followers_url": "https://api.github.com/users/SKYBITDev3/followers",
      "following_url": "https://api.github.com/users/SKYBITDev3/following{/other_user}",
      "gists_url": "https://api.github.com/users/SKYBITDev3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SKYBITDev3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SKYBITDev3/subscriptions",
      "organizations_url": "https://api.github.com/users/SKYBITDev3/orgs",
      "repos_url": "https://api.github.com/users/SKYBITDev3/repos",
      "events_url": "https://api.github.com/users/SKYBITDev3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SKYBITDev3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-20T06:58:54Z",
    "updated_at": "2023-08-20T07:30:38Z",
    "author_association": "NONE",
    "body": "Several EIPs require contracts to be deployed for public use. e.g. singleton contracts in [EIP-1820](https://eips.ethereum.org/EIPS/eip-1820) and [EIP-2429](https://gitlab.com/status-im/docs/EIPs/blob/secret-multisig-recovery/EIPS/eip-2429.md), and factory contract in [EIP-4337](https://eips.ethereum.org/EIPS/eip-4337). EIP-1820 itself outlines the [keyless deployment method](https://eips.ethereum.org/EIPS/eip-1820#deployment-transaction) using an already-signed deployment transaction (with no `chainId` or `chainId: 0`), which would require EIP-155 to be unenforced.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1685204750/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1685835197",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27935#issuecomment-1685835197",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27935",
    "id": 1685835197,
    "node_id": "IC_kwDOAOvK985ke829",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-21T07:56:27Z",
    "updated_at": "2023-08-21T07:56:27Z",
    "author_association": "MEMBER",
    "body": "I think this is the wrong place to discuss a change like this, the best way to get such a scheme discussed is to open an EIP and start a discussion on the ethereum magicians forum https://ethereum-magicians.org/top?period=quarterly",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1685835197/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1685954434",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27935#issuecomment-1685954434",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27935",
    "id": 1685954434,
    "node_id": "IC_kwDOAOvK985kfZ-C",
    "user": {
      "login": "SKYBITDev3",
      "id": 141273631,
      "node_id": "U_kgDOCGuqHw",
      "avatar_url": "https://avatars.githubusercontent.com/u/141273631?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SKYBITDev3",
      "html_url": "https://github.com/SKYBITDev3",
      "followers_url": "https://api.github.com/users/SKYBITDev3/followers",
      "following_url": "https://api.github.com/users/SKYBITDev3/following{/other_user}",
      "gists_url": "https://api.github.com/users/SKYBITDev3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SKYBITDev3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SKYBITDev3/subscriptions",
      "organizations_url": "https://api.github.com/users/SKYBITDev3/orgs",
      "repos_url": "https://api.github.com/users/SKYBITDev3/repos",
      "events_url": "https://api.github.com/users/SKYBITDev3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SKYBITDev3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-21T09:15:13Z",
    "updated_at": "2023-08-21T09:15:13Z",
    "author_association": "NONE",
    "body": "Yes, I had already created a thread at ethereum magicians: https://ethereum-magicians.org/t/transaction-replay-blanket-ban-is-wrong\r\n\r\nI hope that we can find an acceptable solution.\r\n\r\nThank you for listening.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1685954434/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1685983298",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27935#issuecomment-1685983298",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27935",
    "id": 1685983298,
    "node_id": "IC_kwDOAOvK985kfhBC",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-21T09:33:25Z",
    "updated_at": "2023-08-21T09:33:25Z",
    "author_association": "MEMBER",
    "body": "> So then let's come up with a way to maintain secuirty whilst allowing transactions that are meant to be replayed.\r\n\r\nI don't see what the problem is. \r\n\r\nGeth does not avoid putting them into blocks, nor reject blocks which contain them, and geth does not refuse to relay them to peers. All geth does is not accept them when users submit them over RPC. \r\n\r\nAt one point in the lifetime of the chain, someone needs to use a modded geth to accept such a transaction over RPC, to then relay it to the network. Or use some other means of getting them into a block, e.g. use a custom block builder such as MEV.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1685983298/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1686082362",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27935#issuecomment-1686082362",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27935",
    "id": 1686082362,
    "node_id": "IC_kwDOAOvK985kf5M6",
    "user": {
      "login": "SKYBITDev3",
      "id": 141273631,
      "node_id": "U_kgDOCGuqHw",
      "avatar_url": "https://avatars.githubusercontent.com/u/141273631?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SKYBITDev3",
      "html_url": "https://github.com/SKYBITDev3",
      "followers_url": "https://api.github.com/users/SKYBITDev3/followers",
      "following_url": "https://api.github.com/users/SKYBITDev3/following{/other_user}",
      "gists_url": "https://api.github.com/users/SKYBITDev3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SKYBITDev3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SKYBITDev3/subscriptions",
      "organizations_url": "https://api.github.com/users/SKYBITDev3/orgs",
      "repos_url": "https://api.github.com/users/SKYBITDev3/repos",
      "events_url": "https://api.github.com/users/SKYBITDev3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SKYBITDev3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-21T10:39:36Z",
    "updated_at": "2023-08-21T10:39:36Z",
    "author_association": "NONE",
    "body": "> All geth does is not accept them when users submit them over RPC.\r\n\r\nI'm a developer, and RPC via node service providers is how I get things done on the many different blockchains that are now out there.\r\n\r\nI don't have the resources to set up and run my own nodes (I'd need a different one for each blockchain) just to be able to occasionally replay a transaction.\r\n\r\nSo I'd welcome more suggestions that wouldn't require much resources.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1686082362/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
