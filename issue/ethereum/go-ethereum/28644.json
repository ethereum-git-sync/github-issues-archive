{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28644",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28644/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28644/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28644/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/28644",
  "id": 2026052474,
  "node_id": "I_kwDOAOvK9854wxt6",
  "number": 28644,
  "title": "tracing: investigate indexing",
  "user": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "s1na",
    "id": 1591639,
    "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/s1na",
    "html_url": "https://github.com/s1na",
    "followers_url": "https://api.github.com/users/s1na/followers",
    "following_url": "https://api.github.com/users/s1na/following{/other_user}",
    "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
    "organizations_url": "https://api.github.com/users/s1na/orgs",
    "repos_url": "https://api.github.com/users/s1na/repos",
    "events_url": "https://api.github.com/users/s1na/events{/privacy}",
    "received_events_url": "https://api.github.com/users/s1na/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-12-05T12:11:34Z",
  "updated_at": "2023-12-05T14:02:56Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "This is a satellite issue with #28643. If we were to store live traces within Geth, then do we want to enable some form of querying of the data? The quick answer is why not, it would be fun to be able to serve queries like \"retrieve all ether receipt transactions\", but it can get very complex very quick:\n\n- Indexing inbound transactions is kind of simple with the call traces (omitting the implementation details for now), but most of the DeFi stuff uses WETH, not ETH directly. So it might not be that interesting in itself.\n- Indexing ERC20 opens a huge can of worms, where the DApp layer stuff creeps into the protocol layer code.\n- Even if we were to make an ERC20 indexer, then why not make an NFT indexer, etc; the list keeps on growing.\n\nAt the end of the day, Geth *must* be precise. The more DApp layer stuff we try to cover, the more ambiguity we introduce (what happens with half-baked implementations of ERC20, what happens with malicious contracts, etc). It feels to *me* that we should not try to compete with explorers and similar tools. We should give them a way to access the data, but now start to do their job.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28644/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28644/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1840853658",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/28644#issuecomment-1840853658",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/28644",
    "id": 1840853658,
    "node_id": "IC_kwDOAOvK985tuTKa",
    "user": {
      "login": "hsyodyssey",
      "id": 47173566,
      "node_id": "MDQ6VXNlcjQ3MTczNTY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47173566?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hsyodyssey",
      "html_url": "https://github.com/hsyodyssey",
      "followers_url": "https://api.github.com/users/hsyodyssey/followers",
      "following_url": "https://api.github.com/users/hsyodyssey/following{/other_user}",
      "gists_url": "https://api.github.com/users/hsyodyssey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hsyodyssey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hsyodyssey/subscriptions",
      "organizations_url": "https://api.github.com/users/hsyodyssey/orgs",
      "repos_url": "https://api.github.com/users/hsyodyssey/repos",
      "events_url": "https://api.github.com/users/hsyodyssey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hsyodyssey/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-05T14:02:54Z",
    "updated_at": "2023-12-05T14:02:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, team; this would be super helpful in many ways. Our current method for those fine-grained data queries is to export all Geth data to a relational database (PostgreSQL so far). It would be wonderful to have a geth-native way to query data at a fine-grained levelüëç.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1840853658/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
