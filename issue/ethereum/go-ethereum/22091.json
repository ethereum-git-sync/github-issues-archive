{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22091",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22091/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22091/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22091/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/22091",
  "id": 776339652,
  "node_id": "MDU6SXNzdWU3NzYzMzk2NTI=",
  "number": 22091,
  "title": "How to make geth keep states for the last 10000 blocks instead of 128?",
  "user": {
    "login": "forencen",
    "id": 30711552,
    "node_id": "MDQ6VXNlcjMwNzExNTUy",
    "avatar_url": "https://avatars.githubusercontent.com/u/30711552?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/forencen",
    "html_url": "https://github.com/forencen",
    "followers_url": "https://api.github.com/users/forencen/followers",
    "following_url": "https://api.github.com/users/forencen/following{/other_user}",
    "gists_url": "https://api.github.com/users/forencen/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/forencen/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/forencen/subscriptions",
    "organizations_url": "https://api.github.com/users/forencen/orgs",
    "repos_url": "https://api.github.com/users/forencen/repos",
    "events_url": "https://api.github.com/users/forencen/events{/privacy}",
    "received_events_url": "https://api.github.com/users/forencen/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 268304226,
      "node_id": "MDU6TGFiZWwyNjgzMDQyMjY=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:docs",
      "name": "type:docs",
      "color": "fef2c0",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2020-12-30T08:41:32Z",
  "updated_at": "2021-01-17T22:23:35Z",
  "closed_at": "2020-12-30T10:19:06Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# geth version\r\n```\r\nGeth\r\nVersion: 1.9.23-stable\r\nGit Commit: 8c2f271528f9cccf541c6ea1c022e98407f26872\r\nGit Commit Date: 20201015\r\nArchitecture: amd64\r\nProtocol Versions: [65 64 63]\r\nGo Version: go1.15.3\r\nOperating System: linux\r\nGOPATH=\r\nGOROOT=go\r\n```\r\n# ubuntu version\r\n`Ubuntu 18.04.5 LTS`\r\n\r\n# node info\r\nrun : `geth --rpc --rpcapi web3,eth,net,txpool,admin,personal,debug --rpcaddr 0.0.0.0 --rpcport 8545 --datadir \"/disk/eth/data\" --syncmode \"full\"`\r\n\r\nnode model: `full-sync with pruning`\r\n\r\n```\r\n> eth.blockNumber\r\n11554317\r\n```\r\n\r\n# my question\r\n\r\n## reqeust parmas\r\n\r\n```\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"debug_traceBlockByNumber\",\r\n    \"params\": [\r\n        \"0xb04d45\",\r\n        {\"tracer\": \"callTracer\"}\r\n    ],\r\n    \"id\": 1\r\n}\r\n```\r\n\r\n## response\r\n\r\n```\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"id\": 1,\r\n    \"error\": {\r\n        \"code\": -32000,\r\n        \"message\": \"required historical state unavailable (reexec=128)\"\r\n    }\r\n}\r\n```\r\n\r\nI checked the [documentation](https://geth.ethereum.org/docs/dapp/tracing), but it’s still not clear.\r\n\r\nI try to use like this：\r\n\r\n```\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"debug_traceBlockByNumber\",\r\n    \"params\": [\r\n        \"0xb04d45\",\r\n        {\"tracer\": \"callTracer\", \"reexec\": 500}\r\n    ],\r\n    \"id\": 1\r\n}\r\n```\r\n\r\nstill have problems:\r\n```\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"id\": 1,\r\n    \"error\": {\r\n        \"code\": -32000,\r\n        \"message\": \"required historical state unavailable (reexec=500)\"\r\n    }\r\n}\r\n```\r\n\r\nI don't know if it is used correctly.\r\n\r\nand\r\n\r\nHow to make geth keep states for the last 10000 blocks instead of 128?\r\n\r\nThank you in advance\r\n\r\n\r\n\r\n\r\n",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22091/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22091/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/752384016",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22091#issuecomment-752384016",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22091",
    "id": 752384016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjM4NDAxNg==",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-30T09:09:25Z",
    "updated_at": "2020-12-30T09:09:25Z",
    "author_association": "MEMBER",
    "body": "You can just set reexec to 10.000\r\n```\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"debug_traceBlockByNumber\",\r\n    \"params\": [\r\n        \"0xb04d45\",\r\n        {\"tracer\": \"callTracer\", \"reexec\": 10000}\r\n    ],\r\n    \"id\": 1\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/752384016/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/752400560",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22091#issuecomment-752400560",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22091",
    "id": 752400560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjQwMDU2MA==",
    "user": {
      "login": "forencen",
      "id": 30711552,
      "node_id": "MDQ6VXNlcjMwNzExNTUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/30711552?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/forencen",
      "html_url": "https://github.com/forencen",
      "followers_url": "https://api.github.com/users/forencen/followers",
      "following_url": "https://api.github.com/users/forencen/following{/other_user}",
      "gists_url": "https://api.github.com/users/forencen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/forencen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/forencen/subscriptions",
      "organizations_url": "https://api.github.com/users/forencen/orgs",
      "repos_url": "https://api.github.com/users/forencen/repos",
      "events_url": "https://api.github.com/users/forencen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/forencen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-30T10:06:42Z",
    "updated_at": "2020-12-30T10:06:42Z",
    "author_association": "NONE",
    "body": "\r\nthank you for your help\r\n\r\nwhen I sent this request: \r\n```\r\ncurl -X POST --data '{\"jsonrpc\": \"2.0\", \"method\": \"debug_traceBlockByNumber\", \"params\": [ \"0xb04d45\", {\"tracer\": \"callTracer\", \"reexec\": 10000}], \"id\": 1}' -H 'content-type:application/json;'  http://127.0.0.1:8545\r\n\r\ncurl: (52) Empty reply from server\r\n```\r\nEvery time I request, the server takes a long time to process.\r\n\r\nBut I need a lot of blocks trace information\r\n\r\n\r\neverytime I use this request, I have to wait a long time. Isn't there a global configuration to replace 128?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/752400560/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/752404715",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22091#issuecomment-752404715",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22091",
    "id": 752404715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjQwNDcxNQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-30T10:19:06Z",
    "updated_at": "2020-12-30T10:19:06Z",
    "author_association": "MEMBER",
    "body": "Unfortunately not. This is not a trivial problem to solve -- in order to keep 10K untouched, it requires us to keep 10K states in memory -- because the pruner is in-memory, and thus in order to do _any_ pruning, we'd have to keep 10K+ states in memory. \r\nSo, that probably won't work. And as long as we only have in-memory pruning and no disk-based pruning, the methods to achieve what you want is either reexec or to simply disable pruning, by using `gcmode=archive`. \r\n\r\nYou can do a fast-sync + `gcmode=archive`, and if it eventually grows too big (because it _will_ grow fast without pruning), you can just wipe it all, do a fresh sync and start over. \r\n\r\nThere's really nothing actionable for us here, so I'll close this ticket.  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/752404715/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/761890942",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22091#issuecomment-761890942",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22091",
    "id": 761890942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MTg5MDk0Mg==",
    "user": {
      "login": "nuliknol",
      "id": 1125368,
      "node_id": "MDQ6VXNlcjExMjUzNjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1125368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nuliknol",
      "html_url": "https://github.com/nuliknol",
      "followers_url": "https://api.github.com/users/nuliknol/followers",
      "following_url": "https://api.github.com/users/nuliknol/following{/other_user}",
      "gists_url": "https://api.github.com/users/nuliknol/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nuliknol/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nuliknol/subscriptions",
      "organizations_url": "https://api.github.com/users/nuliknol/orgs",
      "repos_url": "https://api.github.com/users/nuliknol/repos",
      "events_url": "https://api.github.com/users/nuliknol/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nuliknol/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-17T22:23:34Z",
    "updated_at": "2021-01-17T22:23:34Z",
    "author_association": "NONE",
    "body": "> thank you for your help\r\n> \r\n> when I sent this request:\r\n> \r\n> ```\r\n> curl -X POST --data '{\"jsonrpc\": \"2.0\", \"method\": \"debug_traceBlockByNumber\", \"params\": [ \"0xb04d45\", {\"tracer\": \"callTracer\", \"reexec\": 10000}], \"id\": 1}' -H 'content-type:application/json;'  http://127.0.0.1:8545\r\n> \r\n> curl: (52) Empty reply from server\r\n> ```\r\n> \r\n> Every time I request, the server takes a long time to process.\r\n> \r\n> But I need a lot of blocks trace information\r\n> \r\n> everytime I use this request, I have to wait a long time. Isn't there a global configuration to replace 128?\r\n\r\nyeah, there is a global configuration, the file name is `core/blockchain.go` and the constant is:\r\n\r\n`  TriesInMemory       = 128`\r\n\r\nbut who knows how much states it is going to hold in RAM. Geth has lots of memory management issues. Probably the devs should write a custom allocator for Golang. I have been running `import` command and every 3 hours I need to restart `geth` because it blows out the RAM. There is memory leak somewhere in the code and it eats up all ram in a few hours. Probably some funciton needs a resource-cleaning `defer{}` to be added, but who knows , I am not here to do other's job. \r\n\r\nTraces are going to consume all resources of your server because every instruction is added to the trace object (which probably you don't need), you need to hack into the EVM to extract what you need , it is easy, you just need to modify two files, the `core/vm/evm.go` and `core/vm/instructions.go` . Then you can modify `core/state_transition.go` and dump all the collected data to a file. Do the data collection into the `EVM` object.\r\n\r\nFor archival node you need about 6 terabytes right now, but in March it is going to be needed 8 terabytes. So, you are going to run out of space if you set it up. Also run out of money. But there is a trick. You can set up Linux's kernel module called `bcache` and for an SSD of 1TB it will LRU-cache all the important data and accelerate the processing a lot. It is still slow, but it works and it syncs. And with small amount of resources you can get your archival node for development. \r\n\r\n@forencen ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/761890942/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
