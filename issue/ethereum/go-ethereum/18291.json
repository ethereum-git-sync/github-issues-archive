{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/18291",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/18291/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/18291/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/18291/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/18291",
  "id": 390203608,
  "node_id": "MDU6SXNzdWUzOTAyMDM2MDg=",
  "number": 18291,
  "title": "Implement code signing on macOS and Windows",
  "user": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1269313112,
      "node_id": "MDU6TGFiZWwxMjY5MzEzMTEy",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:backlog",
      "name": "status:backlog",
      "color": "29ceb3",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-12-12T12:27:03Z",
  "updated_at": "2022-06-15T15:54:36Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Ethereum Foundation has developer accounts with Apple and Microsoft. The Mist project uses those to code-sign executables. We should start shipping code-signed executables for those platforms.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/18291/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/18291/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/448976462",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/18291#issuecomment-448976462",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/18291",
    "id": 448976462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODk3NjQ2Mg==",
    "user": {
      "login": "FrankSzendzielarz",
      "id": 33515470,
      "node_id": "MDQ6VXNlcjMzNTE1NDcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/33515470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FrankSzendzielarz",
      "html_url": "https://github.com/FrankSzendzielarz",
      "followers_url": "https://api.github.com/users/FrankSzendzielarz/followers",
      "following_url": "https://api.github.com/users/FrankSzendzielarz/following{/other_user}",
      "gists_url": "https://api.github.com/users/FrankSzendzielarz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FrankSzendzielarz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FrankSzendzielarz/subscriptions",
      "organizations_url": "https://api.github.com/users/FrankSzendzielarz/orgs",
      "repos_url": "https://api.github.com/users/FrankSzendzielarz/repos",
      "events_url": "https://api.github.com/users/FrankSzendzielarz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FrankSzendzielarz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-20T12:07:23Z",
    "updated_at": "2018-12-20T12:09:57Z",
    "author_association": "MEMBER",
    "body": "**Windows AppVeyor code signing guide:**\r\n\r\nTo codesign (Authenticode) the Windows geth executable, the most common option is to use the Windows SDK \"Signtool\" program. \r\n\r\nGeth (and other exes) are built for Windows using Appveyor, the configuration for which is specified by an Appveyor.yml file in the project source.\r\n\r\n(The appveyor.yml file (goethereum\\appveyor.yml) specifies an OS of \"os: Visual Studio 2015\"\r\nAccording to https://www.appveyor.com/docs/appveyor-yml/ \"os:\" is an invalid tag (should be \"image:\") but elsewhere it is stated that \"Visual Studio 2015\" is currently the default image when not specified.)\r\n\r\nAccording to online references the location of signtool.exe on the appveyor machine should be C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.1A\\Bin\\signtool.exe . It is not clear if this location is the appveyor PATH. The below yml file has options for either case.\r\n\r\nThe aim is to use Signtool to sign the executable post-build. In a private environment, the syntaxes for this would be as follows.\r\n\r\n**SHA1**\r\nSignTool.exe sign /f _EthereumCert.pfx_  /p _EthereumCertPassword_ /t http://timestamp.verisign.com/scripts/timstamp.dll _Geth.exe_\r\n\r\n**SHA256**\r\nsigntool.exe sign /f _EthereumCert.pfx_ /p _EthereumCertPassword_ /tr http://timestamp.geotrust.com/tsa /td sha256 /fd sha256 _Geth.exe_\r\n\r\n\r\n\r\nwhere _EthereumCert.pfx_ is a password protected Ethereum Foundation certificate, _EthereumCertPassword_ is the password to that certificate, and the /t or /tr options (depending on algorithm) specify URIs to a timestamping service and indicate the signature should include a timestamp. The timestamp is necessary to determine that the executable was signed during the validity period of the certificate. **Without this, code signatures become invalid as soon as the certificate expires.**\r\n\r\nAn additional requirement though is that the EthereumCertPassword and pfx files cannot be supplied in plain text as part of an open source project.\r\n\r\nThe EF foundation pfx file should be converted to an AppVeyor \"secure file\". To do this [the following steps are suggested by AppVeyor](https://www.appveyor.com/docs/how-to/secure-files/):\r\n\r\nIn summary, those steps describe downloading a tool from AppVeyor to encrypt the file with a secret, and then adding that secret to the AppVeyor build project either as an AppVeyor project setting or as a \"secure variable\" (the latter assumed below)\r\n\r\nThe EF foundation pfx password should also be added to the appveyor.yml file as a \"secure variable\". To do this, [follow the instructions here](https://www.appveyor.com/docs/build-configuration/#secure-variables)\r\n\r\n\r\nWith the above steps complete, the appveyor.yml should be modified to look as follows. Modified lines are indicated with an indent. The geth project should include the encrypted certificate (or it could be downloaded from a secure location).\r\n\r\n\r\n\r\n\t```\r\n\t# Clone directly into GOPATH.\r\n\t\tclone_folder: C:\\gopath\\src\\github.com\\ethereum\\go-ethereum\r\n\t\tclone_depth: 5\r\n\t\tversion: \"{branch}.{build}\"\r\n\t\tenvironment:\r\n\t\t  global:\r\n\t\t\tGOPATH: C:\\gopath\r\n\t\t\tCC: gcc.exe\r\n>\t\t\tenc_secret:\r\n>\t\t\t\tsecure: <cert encryption secret generated via appveyor>\r\n>\t\t\tkey_secret:\r\n>\t\t\t\tsecure: <cert password secret generated via appveyor>\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t  matrix:\r\n\t\t\t- GETH_ARCH: amd64\r\n\t\t\t  MSYS2_ARCH: x86_64\r\n\t\t\t  MSYS2_BITS: 64\r\n\t\t\t  MSYSTEM: MINGW64\r\n\t\t\t  PATH: C:\\msys64\\mingw64\\bin\\;C:\\Program Files (x86)\\NSIS\\;%PATH%\r\n\t\t\t- GETH_ARCH: 386\r\n\t\t\t  MSYS2_ARCH: i686\r\n\t\t\t  MSYS2_BITS: 32\r\n\t\t\t  MSYSTEM: MINGW32\r\n\t\t\t  PATH: C:\\msys64\\mingw32\\bin\\;C:\\Program Files (x86)\\NSIS\\;%PATH%\r\n\r\n\t\tinstall:\r\n>\t\t  - ps: iex ((New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/appveyor/secure-file/master/install.ps1'))\r\n>\t\t  - cmd: appveyor-tools\\secure-file -decrypt <path-to\\encrypted-filename.ext.enc> -secret %enc_secret%\r\n\t\t  - git submodule update --init\r\n\t\t  - rmdir C:\\go /s /q\r\n\t\t  - appveyor DownloadFile https://storage.googleapis.com/golang/go1.11.2.windows-%GETH_ARCH%.zip\r\n\t\t  - 7z x go1.11.2.windows-%GETH_ARCH%.zip -y -oC:\\ > NUL\r\n\t\t  - go version\r\n\t\t  - gcc --version\r\n\r\n\t\tbuild_script:\r\n\t\t  - go run build\\ci.go install\r\n>\t\t  - ps: signtool sign /f <decrypted cert.pfx> /p $env:key_secret /tr http://timestamp.geotrust.com/tsa /td sha256 /fd sha256 <path to geth.exe>\r\n[Or if signtool is not in the path then...]\r\n>\t\t  - ps: &\"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.1A\\Bin\\signtool.exe\" sign /f <decrypted cert.pfx> /p $env:key_secret /tr http://timestamp.geotrust.com/tsa /td sha256 /fd sha256 <path to geth.exe>\r\n \r\n\t\tafter_build:\r\n\t\t  - go run build\\ci.go archive -type zip -signer WINDOWS_SIGNING_KEY -upload gethstore/builds\r\n\t\t  - go run build\\ci.go nsis -signer WINDOWS_SIGNING_KEY -upload gethstore/builds\r\n\r\n\t\ttest_script:\r\n\t\t  - set CGO_ENABLED=1\r\n\t\t  - go run build\\ci.go test -coverage\r\n\r\n\r\n```\r\n\r\n\r\n\r\n\t\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/448976462/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
