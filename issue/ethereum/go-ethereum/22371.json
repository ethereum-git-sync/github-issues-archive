{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22371",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22371/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22371/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22371/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/22371",
  "id": 814902647,
  "node_id": "MDU6SXNzdWU4MTQ5MDI2NDc=",
  "number": 22371,
  "title": "`debug.traceTransaction` With `callTracer` Doesn't Work With Arbitrary/Non-Existent Txns",
  "user": {
    "login": "m-e-r-k-l-e-root",
    "id": 76809797,
    "node_id": "MDQ6VXNlcjc2ODA5Nzk3",
    "avatar_url": "https://avatars.githubusercontent.com/u/76809797?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/m-e-r-k-l-e-root",
    "html_url": "https://github.com/m-e-r-k-l-e-root",
    "followers_url": "https://api.github.com/users/m-e-r-k-l-e-root/followers",
    "following_url": "https://api.github.com/users/m-e-r-k-l-e-root/following{/other_user}",
    "gists_url": "https://api.github.com/users/m-e-r-k-l-e-root/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/m-e-r-k-l-e-root/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/m-e-r-k-l-e-root/subscriptions",
    "organizations_url": "https://api.github.com/users/m-e-r-k-l-e-root/orgs",
    "repos_url": "https://api.github.com/users/m-e-r-k-l-e-root/repos",
    "events_url": "https://api.github.com/users/m-e-r-k-l-e-root/events{/privacy}",
    "received_events_url": "https://api.github.com/users/m-e-r-k-l-e-root/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2021-02-23T23:03:31Z",
  "updated_at": "2021-10-25T19:07:25Z",
  "closed_at": "2021-03-24T23:48:16Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\nGeth version: v1.9.25\r\nOS & Version: Ubuntu 18.04\r\nNode Type: Full (not fast synced)\r\n\r\n#### Expected behaviour\r\n_debug.traceTransaction_ called using tracer _callTracer_ to properly trace calls on txns that are pending (i.e. non-existent).\r\n\r\n#### Actual behaviour\r\n_debug.traceTransaction_ when called using tracer _callTracer_ on a txn that is pending (i.e. non-existent) returns an error indicating that the txn is not found.\r\n\r\n#### Steps to reproduce the behaviour\r\nCall _debug.traceTransaction_ while specifying a txn hash that is associated with a pending (non-existent) txn.\r\n\r\n#### Additional information\r\nI was curious if writing a different tracer, i.e. possibly building on top of the tracer _callTracer_ would achieve what was described above? If not, what suggestions do you have regarding how to trace a txn that is still in a pending state? Thanks.",
  "closed_by": {
    "login": "m-e-r-k-l-e-root",
    "id": 76809797,
    "node_id": "MDQ6VXNlcjc2ODA5Nzk3",
    "avatar_url": "https://avatars.githubusercontent.com/u/76809797?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/m-e-r-k-l-e-root",
    "html_url": "https://github.com/m-e-r-k-l-e-root",
    "followers_url": "https://api.github.com/users/m-e-r-k-l-e-root/followers",
    "following_url": "https://api.github.com/users/m-e-r-k-l-e-root/following{/other_user}",
    "gists_url": "https://api.github.com/users/m-e-r-k-l-e-root/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/m-e-r-k-l-e-root/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/m-e-r-k-l-e-root/subscriptions",
    "organizations_url": "https://api.github.com/users/m-e-r-k-l-e-root/orgs",
    "repos_url": "https://api.github.com/users/m-e-r-k-l-e-root/repos",
    "events_url": "https://api.github.com/users/m-e-r-k-l-e-root/events{/privacy}",
    "received_events_url": "https://api.github.com/users/m-e-r-k-l-e-root/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22371/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22371/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/785751591",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22371#issuecomment-785751591",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22371",
    "id": 785751591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTc1MTU5MQ==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-25T09:27:27Z",
    "updated_at": "2021-02-25T09:27:27Z",
    "author_association": "MEMBER",
    "body": "Can you give some more information about your use-case?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/785751591/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/785752281",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22371#issuecomment-785752281",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22371",
    "id": 785752281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTc1MjI4MQ==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-25T09:28:34Z",
    "updated_at": "2021-02-25T09:28:34Z",
    "author_association": "MEMBER",
    "body": "also please see #22197 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/785752281/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/785752966",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22371#issuecomment-785752966",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22371",
    "id": 785752966,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTc1Mjk2Ng==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-25T09:29:40Z",
    "updated_at": "2021-02-25T09:29:40Z",
    "author_association": "MEMBER",
    "body": "So, what you want, is it the same thing as  (pseudo-code)\r\n```js\r\n\r\nvar tx = txpool.pending(...)[0]\r\ndebug.traceCall({ from:  tx.from, to: tx.to, data: tx.data } )\r\n\r\n```\r\n\r\nwhich would execute some transaction on top of the current state. \r\n\r\nOR \r\nDo you want to execute the entire 'pending state', and then trace a transaction on top? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/785752966/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/786036388",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22371#issuecomment-786036388",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22371",
    "id": 786036388,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NjAzNjM4OA==",
    "user": {
      "login": "m-e-r-k-l-e-root",
      "id": 76809797,
      "node_id": "MDQ6VXNlcjc2ODA5Nzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/76809797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m-e-r-k-l-e-root",
      "html_url": "https://github.com/m-e-r-k-l-e-root",
      "followers_url": "https://api.github.com/users/m-e-r-k-l-e-root/followers",
      "following_url": "https://api.github.com/users/m-e-r-k-l-e-root/following{/other_user}",
      "gists_url": "https://api.github.com/users/m-e-r-k-l-e-root/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/m-e-r-k-l-e-root/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/m-e-r-k-l-e-root/subscriptions",
      "organizations_url": "https://api.github.com/users/m-e-r-k-l-e-root/orgs",
      "repos_url": "https://api.github.com/users/m-e-r-k-l-e-root/repos",
      "events_url": "https://api.github.com/users/m-e-r-k-l-e-root/events{/privacy}",
      "received_events_url": "https://api.github.com/users/m-e-r-k-l-e-root/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-25T16:38:10Z",
    "updated_at": "2021-02-25T16:40:23Z",
    "author_association": "NONE",
    "body": "> So, what you want, is it the same thing as (pseudo-code)\r\n> \r\n> ```js\r\n> var tx = txpool.pending(...)[0]\r\n> debug.traceCall({ from:  tx.from, to: tx.to, data: tx.data } )\r\n> ```\r\n> \r\n> which would execute some transaction on top of the current state.\r\n> \r\n> OR\r\n> Do you want to execute the entire 'pending state', and then trace a transaction on top?\r\n\r\nYes, the pseudocode you've provided is an entirely valid representation of what I am attempting to achieve. We're primarily attempting to get this functionality working to trace calls present within a transaction prior to the transaction being executed in order to provide in depth visualization of call traces pertaining to transactions prior to them being execution (a feature being implemented in our block explorer).\r\n\r\nWe've been able to implement this feature already for existing/executed transactions using the following:\r\n\r\n`debug.traceTransaction(\"<hash>\", {tracer: \"callTracer\"});`\r\n\r\nBut, as mentioned above when calling _debug.traceTransaction_ on a txn hash associated with a non executed/pending txn results in _debug.traceTransaction_ returning an error indicating that the txn hash could not be found.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/786036388/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/790480948",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22371#issuecomment-790480948",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22371",
    "id": 790480948,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MDQ4MDk0OA==",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-04T09:44:41Z",
    "updated_at": "2021-03-04T09:44:41Z",
    "author_association": "MEMBER",
    "body": "`debug.traceTransaction(\"<hash>\", {tracer: \"callTracer\"});` It's only for the included transactions, not for pending.\r\n\r\nSo do you think the `traceCall` API can solve your issues? Can I close it?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/790480948/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/806239166",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22371#issuecomment-806239166",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22371",
    "id": 806239166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNjIzOTE2Ng==",
    "user": {
      "login": "m-e-r-k-l-e-root",
      "id": 76809797,
      "node_id": "MDQ6VXNlcjc2ODA5Nzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/76809797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m-e-r-k-l-e-root",
      "html_url": "https://github.com/m-e-r-k-l-e-root",
      "followers_url": "https://api.github.com/users/m-e-r-k-l-e-root/followers",
      "following_url": "https://api.github.com/users/m-e-r-k-l-e-root/following{/other_user}",
      "gists_url": "https://api.github.com/users/m-e-r-k-l-e-root/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/m-e-r-k-l-e-root/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/m-e-r-k-l-e-root/subscriptions",
      "organizations_url": "https://api.github.com/users/m-e-r-k-l-e-root/orgs",
      "repos_url": "https://api.github.com/users/m-e-r-k-l-e-root/repos",
      "events_url": "https://api.github.com/users/m-e-r-k-l-e-root/events{/privacy}",
      "received_events_url": "https://api.github.com/users/m-e-r-k-l-e-root/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-24T23:03:01Z",
    "updated_at": "2021-03-24T23:03:01Z",
    "author_association": "NONE",
    "body": "> `debug.traceTransaction(\"<hash>\", {tracer: \"callTracer\"});` It's only for the included transactions, not for pending.\r\n> \r\n> So do you think the `traceCall` API can solve your issues? Can I close it?\r\n\r\nYes this issue can be closed, `traceCall` was suitable for my use case.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/806239166/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
