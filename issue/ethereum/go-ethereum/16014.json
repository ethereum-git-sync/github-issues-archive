{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16014",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16014/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16014/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16014/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/16014",
  "id": 294139617,
  "node_id": "MDU6SXNzdWUyOTQxMzk2MTc=",
  "number": 16014,
  "title": "geth shh.newMessageFilter error: \"specify either a symmetric or an asymmetric key data\"",
  "user": {
    "login": "pablochacin",
    "id": 720259,
    "node_id": "MDQ6VXNlcjcyMDI1OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/720259?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pablochacin",
    "html_url": "https://github.com/pablochacin",
    "followers_url": "https://api.github.com/users/pablochacin/followers",
    "following_url": "https://api.github.com/users/pablochacin/following{/other_user}",
    "gists_url": "https://api.github.com/users/pablochacin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pablochacin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pablochacin/subscriptions",
    "organizations_url": "https://api.github.com/users/pablochacin/orgs",
    "repos_url": "https://api.github.com/users/pablochacin/repos",
    "events_url": "https://api.github.com/users/pablochacin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pablochacin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-02-03T19:47:16Z",
  "updated_at": "2018-02-03T20:04:35Z",
  "closed_at": "2018-02-03T20:04:34Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Geth version: Geth/v1.7.3-stable-4bb3c89d/linux-amd64/go1.9\r\n\r\n#### Expected behaviour\r\nthe shh.newMessageFilter method expects creates a Filter object from a given map of options, and optionally a callback function, as well as a filter creation error callback. This is not documented in any documentation (see  #16013), but can be deduced from analysing code from [web3.js/ssh](https://github.com/ethereum/web3.js/blob/develop/lib/web3/methods/shh.js)\r\n\r\n```\r\nShh.prototype.newMessageFilter = function (options, callback, filterCreationErrorCallback) {\r\n    return new Filter(options, 'shh', this._requestManager, watches.shh(), null, callback, filterCreationErrorCallback);\r\n};\r\n```\r\nThe Filter constructor has the following code fragment:\r\n\r\n```\r\n    this.implementation.newFilter(this.options, function(error, id){\r\n        if(error) {\r\n            self.callbacks.forEach(function(cb){\r\n                cb(error);\r\n            });\r\n            if (typeof filterCreationErrorCallback === 'function') {\r\n              filterCreationErrorCallback(error);\r\n            }\r\n        }\r\n```\r\n\r\n#### Actual behaviour\r\n\r\nWhen creating a new filter the filter error callback is called with the error message \r\n\r\n> Error: specify either a symmetric or an asymmetric key data\r\n\r\n#### Steps to reproduce error\r\n\r\n>id = shh.newKeyPair()\r\n\"21fa4f412a760d41fc79b6da933e801030e2ea4f5435b2ac069f465361034a2d\"\r\n> fecb = function(err){console.log(err)}\r\nfunction(err)\r\n>f = shh.newMessageFilter({pubKey: id}, null, fecb)\r\nError: specify either a symmetric or an asymmetric key\r\n```\r\n",
  "closed_by": {
    "login": "pablochacin",
    "id": 720259,
    "node_id": "MDQ6VXNlcjcyMDI1OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/720259?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pablochacin",
    "html_url": "https://github.com/pablochacin",
    "followers_url": "https://api.github.com/users/pablochacin/followers",
    "following_url": "https://api.github.com/users/pablochacin/following{/other_user}",
    "gists_url": "https://api.github.com/users/pablochacin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pablochacin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pablochacin/subscriptions",
    "organizations_url": "https://api.github.com/users/pablochacin/orgs",
    "repos_url": "https://api.github.com/users/pablochacin/repos",
    "events_url": "https://api.github.com/users/pablochacin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pablochacin/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16014/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16014/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/362850002",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16014#issuecomment-362850002",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16014",
    "id": 362850002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mjg1MDAwMg==",
    "user": {
      "login": "pablochacin",
      "id": 720259,
      "node_id": "MDQ6VXNlcjcyMDI1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/720259?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pablochacin",
      "html_url": "https://github.com/pablochacin",
      "followers_url": "https://api.github.com/users/pablochacin/followers",
      "following_url": "https://api.github.com/users/pablochacin/following{/other_user}",
      "gists_url": "https://api.github.com/users/pablochacin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pablochacin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pablochacin/subscriptions",
      "organizations_url": "https://api.github.com/users/pablochacin/orgs",
      "repos_url": "https://api.github.com/users/pablochacin/repos",
      "events_url": "https://api.github.com/users/pablochacin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pablochacin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-03T20:04:34Z",
    "updated_at": "2018-02-03T20:04:34Z",
    "author_association": "NONE",
    "body": "Tracing this message into go-ethereum the problem seams to be the validation of the options:\r\n\r\n```\r\n\t// user must specify either a symmetric or an asymmetric key\r\n\tif (symKeyGiven && asymKeyGiven) || (!symKeyGiven && !asymKeyGiven) {\r\n\t\treturn \"\", ErrSymAsym\r\n\t}\r\n```\r\n\r\nThe newMessageFilter expects an argument of type Criteria:\r\n \r\n```\r\ntype Criteria struct {\r\n\tSymKeyID     string      `json:\"symKeyID\"`\r\n\tPrivateKeyID string      `json:\"privateKeyID\"`\r\n\tSig          []byte      `json:\"sig\"`\r\n\tMinPow       float64     `json:\"minPow\"`\r\n\tTopics       []TopicType `json:\"topics\"`\r\n\tAllowP2P     bool        `json:\"allowP2P\"`\r\n}\r\n```\r\nThe problem is that documentation uses 'pubKey' as filter criteria, but the actual implementation expects either 'privateKeyID' or 'symkeyID'\r\n\r\nSetring this properly fixes the issue.  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/362850002/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
