{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/2586",
  "id": 155803682,
  "node_id": "MDU6SXNzdWUxNTU4MDM2ODI=",
  "number": 2586,
  "title": "internal/ethapi: eth_estimateGas should take block number",
  "user": {
    "login": "kumavis",
    "id": 1474978,
    "node_id": "MDQ6VXNlcjE0NzQ5Nzg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1474978?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kumavis",
    "html_url": "https://github.com/kumavis",
    "followers_url": "https://api.github.com/users/kumavis/followers",
    "following_url": "https://api.github.com/users/kumavis/following{/other_user}",
    "gists_url": "https://api.github.com/users/kumavis/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kumavis/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kumavis/subscriptions",
    "organizations_url": "https://api.github.com/users/kumavis/orgs",
    "repos_url": "https://api.github.com/users/kumavis/repos",
    "events_url": "https://api.github.com/users/kumavis/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kumavis/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 717742232,
      "node_id": "MDU6TGFiZWw3MTc3NDIyMzI=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/help%20wanted",
      "name": "help wanted",
      "color": "0e8a16",
      "default": true,
      "description": null
    },
    {
      "id": 717743019,
      "node_id": "MDU6TGFiZWw3MTc3NDMwMTk=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "006b75",
      "default": true,
      "description": null
    },
    {
      "id": 1157707837,
      "node_id": "MDU6TGFiZWwxMTU3NzA3ODM3",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/area:rpc",
      "name": "area:rpc",
      "color": "d4c5f9",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "MariusVanDerWijden",
    "id": 16664698,
    "node_id": "MDQ6VXNlcjE2NjY0Njk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MariusVanDerWijden",
    "html_url": "https://github.com/MariusVanDerWijden",
    "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
    "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
    "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
    "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
    "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
    "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 30,
  "created_at": "2016-05-19T18:28:04Z",
  "updated_at": "2020-09-23T08:29:49Z",
  "closed_at": "2020-09-23T08:29:49Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "#### System information\n\nGeth version: `Geth/v1.4.3-stable/linux/go1.5.1`\nOS & Version: Linux\n#### Summary\n\nbehaviour of `eth_estimateGas` changed\n1. can no longer estimate gas of a simple value transfer tx. while a simple value transfer has a fixed cost, i normally just dump tx params here for any kind of tx to get the estimated cost) - now i’ll need to fork the logic on the frontend based on whether or not the receiving address has code - unnecesary complexity, geth should handle this case just as it used to.\n2. `eth_estimateGas` params are, according to the wiki, supposed to match the `eth_call` params, and take a blockTag. I don’t use this feature other than setting it to “pending” but now it throws saying wrong arg count. I don't really care how this one is resolved, but this is a breaking change that broke metamask.\n#### Steps to reproduce the behaviour\n\nrejection of simple value transfer\n\n```\ncurl -d '{\"id\": 1, \"method\":\"eth_estimateGas\",\"params\": [{\"to\":\"0x5fda30bb72b8dfe20e48a00dfc108d0915be9bb0\",\"value\":\"0x1234\"}]}' -X POST https://mainnet.infura.io\n```\n\nrejection of blockTag\n\n```\ncurl -d '{\"id\": 1, \"method\":\"eth_estimateGas\",\"params\": [{\"to\":\"0x5fda30bb72b8dfe20e48a00dfc108d0915be9bb0\",\"value\":\"0x1234\"}, \"latest\"]}' -X POST https://mainnet.infura.io\n```\n\nconfirm geth version\n\n```\ncurl -d '{\"id\": 1, \"method\":\"web3_clientVersion\",\"params\": []}' -X POST https://mainnet.infura.io\n```\n",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/220412554",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-220412554",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 220412554,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDQxMjU1NA==",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-19T18:30:44Z",
    "updated_at": "2016-05-19T18:30:44Z",
    "author_association": "MEMBER",
    "body": "1. dup of https://github.com/ethereum/go-ethereum/issues/2577\n2. the specification should change. It's a bit pointless to execute against anything other than the pending state.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/220412554/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/220413065",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-220413065",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 220413065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDQxMzA2NQ==",
    "user": {
      "login": "kumavis",
      "id": 1474978,
      "node_id": "MDQ6VXNlcjE0NzQ5Nzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1474978?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kumavis",
      "html_url": "https://github.com/kumavis",
      "followers_url": "https://api.github.com/users/kumavis/followers",
      "following_url": "https://api.github.com/users/kumavis/following{/other_user}",
      "gists_url": "https://api.github.com/users/kumavis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kumavis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kumavis/subscriptions",
      "organizations_url": "https://api.github.com/users/kumavis/orgs",
      "repos_url": "https://api.github.com/users/kumavis/repos",
      "events_url": "https://api.github.com/users/kumavis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kumavis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-19T18:32:36Z",
    "updated_at": "2016-05-19T18:32:36Z",
    "author_association": "MEMBER",
    "body": "1. whoops, i did a quick initial search for duplicates but missed it\n2. agree\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/220413065/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/220414623",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-220414623",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 220414623,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDQxNDYyMw==",
    "user": {
      "login": "kumavis",
      "id": 1474978,
      "node_id": "MDQ6VXNlcjE0NzQ5Nzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1474978?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kumavis",
      "html_url": "https://github.com/kumavis",
      "followers_url": "https://api.github.com/users/kumavis/followers",
      "following_url": "https://api.github.com/users/kumavis/following{/other_user}",
      "gists_url": "https://api.github.com/users/kumavis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kumavis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kumavis/subscriptions",
      "organizations_url": "https://api.github.com/users/kumavis/orgs",
      "repos_url": "https://api.github.com/users/kumavis/repos",
      "events_url": "https://api.github.com/users/kumavis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kumavis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-19T18:37:55Z",
    "updated_at": "2016-05-19T18:37:55Z",
    "author_association": "MEMBER",
    "body": "reopening bc you should match the spec in the meantime -- even if you ignore the blockTag parameter.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/220414623/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/220561353",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-220561353",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 220561353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDU2MTM1Mw==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-20T09:38:42Z",
    "updated_at": "2016-05-20T09:38:42Z",
    "author_association": "MEMBER",
    "body": "The first issue should be fixed by https://github.com/ethereum/go-ethereum/pull/2589. Could you please check if it sorts out the issue for you?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/220561353/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/220845572",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-220845572",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 220845572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDg0NTU3Mg==",
    "user": {
      "login": "kumavis",
      "id": 1474978,
      "node_id": "MDQ6VXNlcjE0NzQ5Nzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1474978?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kumavis",
      "html_url": "https://github.com/kumavis",
      "followers_url": "https://api.github.com/users/kumavis/followers",
      "following_url": "https://api.github.com/users/kumavis/following{/other_user}",
      "gists_url": "https://api.github.com/users/kumavis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kumavis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kumavis/subscriptions",
      "organizations_url": "https://api.github.com/users/kumavis/orgs",
      "repos_url": "https://api.github.com/users/kumavis/repos",
      "events_url": "https://api.github.com/users/kumavis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kumavis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-22T17:43:13Z",
    "updated_at": "2016-05-22T17:43:13Z",
    "author_association": "MEMBER",
    "body": "@karalabe yes that resolves (1)\nremaining issue is (2) `eth_estimateGas` params does not match spec per wiki\n\nthis can be resolved by changing the spec, or allowing the optional blockTag\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/220845572/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/223884058",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-223884058",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 223884058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzg4NDA1OA==",
    "user": {
      "login": "lastperson",
      "id": 6198746,
      "node_id": "MDQ6VXNlcjYxOTg3NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6198746?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lastperson",
      "html_url": "https://github.com/lastperson",
      "followers_url": "https://api.github.com/users/lastperson/followers",
      "following_url": "https://api.github.com/users/lastperson/following{/other_user}",
      "gists_url": "https://api.github.com/users/lastperson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lastperson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lastperson/subscriptions",
      "organizations_url": "https://api.github.com/users/lastperson/orgs",
      "repos_url": "https://api.github.com/users/lastperson/repos",
      "events_url": "https://api.github.com/users/lastperson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lastperson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-06T07:12:37Z",
    "updated_at": "2016-06-06T07:12:37Z",
    "author_association": "NONE",
    "body": "Dunno if it should be here or not, please point me in the right direction.\nCurrently estimateGas works against the clean pending block, doesn't taking into account even the pending transactions from the same address. This behavior renders it impossible to check if your transaction will be successful(or estimate gas) after your previous transaction, while the previous transaction is still pending. Currently I mitigate this by waiting for the significant transaction to be mined first, then executing estimations and calls for the next one. Probably it is correct to call the default defaultBlock for calls and estimateGas `latest`, and use `pending` optionally if you want to take into account your pending tx's.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/223884058/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/223885148",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-223885148",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 223885148,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzg4NTE0OA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-06T07:19:22Z",
    "updated_at": "2016-06-06T07:19:22Z",
    "author_association": "MEMBER",
    "body": "It should take into account all pending transactions in the particular block. There's little sense to use the latest block for it. AFAIK pending was always the designed use case. Whay Geth version are you using? Can you give us an example of what it does vs. what it should do?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/223885148/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/223885495",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-223885495",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 223885495,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzg4NTQ5NQ==",
    "user": {
      "login": "lastperson",
      "id": 6198746,
      "node_id": "MDQ6VXNlcjYxOTg3NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6198746?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lastperson",
      "html_url": "https://github.com/lastperson",
      "followers_url": "https://api.github.com/users/lastperson/followers",
      "following_url": "https://api.github.com/users/lastperson/following{/other_user}",
      "gists_url": "https://api.github.com/users/lastperson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lastperson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lastperson/subscriptions",
      "organizations_url": "https://api.github.com/users/lastperson/orgs",
      "repos_url": "https://api.github.com/users/lastperson/repos",
      "events_url": "https://api.github.com/users/lastperson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lastperson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-06T07:21:35Z",
    "updated_at": "2016-06-06T07:21:35Z",
    "author_association": "NONE",
    "body": "I'm using the 1.4.5, will prepare an example now. Also all pending transactions is not quite safe, because you can't be sure which transactions will be mined before yours, but you can always be sure that your own transactions will be mined in sequence.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/223885495/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/223899677",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-223899677",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 223899677,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzg5OTY3Nw==",
    "user": {
      "login": "lastperson",
      "id": 6198746,
      "node_id": "MDQ6VXNlcjYxOTg3NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6198746?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lastperson",
      "html_url": "https://github.com/lastperson",
      "followers_url": "https://api.github.com/users/lastperson/followers",
      "following_url": "https://api.github.com/users/lastperson/following{/other_user}",
      "gists_url": "https://api.github.com/users/lastperson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lastperson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lastperson/subscriptions",
      "organizations_url": "https://api.github.com/users/lastperson/orgs",
      "repos_url": "https://api.github.com/users/lastperson/repos",
      "events_url": "https://api.github.com/users/lastperson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lastperson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-06T08:38:51Z",
    "updated_at": "2016-06-06T08:38:51Z",
    "author_association": "NONE",
    "body": "@karalabe \n\n```\ncontract PendingCall {\n    bool step = false;\n    function next() returns(bool) {\n        step = !step;\n        return step;\n    }\n}\n```\n\n``` js\nvar address = web3.eth.accounts[0];\nvar pendingcall = web3.eth.contract([{\"constant\":false,\"inputs\":[],\"name\":\"next\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"}])\n  .at('0x3a6e732c55b7d576c84d65ae0ad02b9bb913006a');\npendingcall.next.call(function(err, afterFirstTx) {\n  console.log(\"After first tx state: \" + afterFirstTx);\n  pendingcall.next({from: address, gas: 50000}, function(err, tx) {\n    console.log(\"Tx: \" + tx);\n    var check = function() { \n      pendingcall.next.call(function(err, afterSecondTx) {\n        console.log(\"After second tx state: \" + afterSecondTx);\n        if (afterFirstTx === afterSecondTx) {\n          // Always getting this on the network.\n          console.log(\"Call didn't take into account pending tx, simulated result is the same as for pending tx.\");\n        } else {\n          // Always getting this on testrpc, because mining is immediate there.\n          console.log(\"Call took into account pending tx(or it was mined blazingly fast), simulated result is the same as starting.\");\n        }\n      });\n    };\n    setTimeout(check, 2000); // Just to make sure there is no race condition in the geth.\n  });\n});\n```\n\nPlease try it. If it is not self explanatory I will do my best to explain.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/223899677/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/223939067",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-223939067",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 223939067,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzkzOTA2Nw==",
    "user": {
      "login": "lastperson",
      "id": 6198746,
      "node_id": "MDQ6VXNlcjYxOTg3NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6198746?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lastperson",
      "html_url": "https://github.com/lastperson",
      "followers_url": "https://api.github.com/users/lastperson/followers",
      "following_url": "https://api.github.com/users/lastperson/following{/other_user}",
      "gists_url": "https://api.github.com/users/lastperson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lastperson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lastperson/subscriptions",
      "organizations_url": "https://api.github.com/users/lastperson/orgs",
      "repos_url": "https://api.github.com/users/lastperson/repos",
      "events_url": "https://api.github.com/users/lastperson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lastperson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-06T12:00:41Z",
    "updated_at": "2016-06-06T12:01:26Z",
    "author_association": "NONE",
    "body": "Btw, if we alter second call in this way:\n\n`pendingcall.next.call('pending', function(err, afterSecondTx) {`\n\nit will start work as expected.\nThe problem is that `estimateGas` doesn't take `defaultBlock` parameter.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/223939067/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/370461433",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-370461433",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 370461433,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDQ2MTQzMw==",
    "user": {
      "login": "stale[bot]",
      "id": 26384082,
      "node_id": "MDM6Qm90MjYzODQwODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stale%5Bbot%5D",
      "html_url": "https://github.com/apps/stale",
      "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-03-05T15:44:35Z",
    "updated_at": "2018-03-05T15:44:35Z",
    "author_association": "NONE",
    "body": "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/370461433/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/452837702",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-452837702",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 452837702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjgzNzcwMg==",
    "user": {
      "login": "LefterisJP",
      "id": 1658405,
      "node_id": "MDQ6VXNlcjE2NTg0MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1658405?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LefterisJP",
      "html_url": "https://github.com/LefterisJP",
      "followers_url": "https://api.github.com/users/LefterisJP/followers",
      "following_url": "https://api.github.com/users/LefterisJP/following{/other_user}",
      "gists_url": "https://api.github.com/users/LefterisJP/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LefterisJP/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LefterisJP/subscriptions",
      "organizations_url": "https://api.github.com/users/LefterisJP/orgs",
      "repos_url": "https://api.github.com/users/LefterisJP/repos",
      "events_url": "https://api.github.com/users/LefterisJP/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LefterisJP/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-09T20:02:54Z",
    "updated_at": "2019-01-09T20:02:54Z",
    "author_association": "MEMBER",
    "body": "Hey guys. @karalabe \r\n\r\nI stumbled upon this problem this week. In Raiden we are using `eth_estimateGas` to see if a transaction we are going to send is going to fail or not so that we don't send it if it's gonna fail anyway.\r\n\r\nWithout specifying a block on which to do the check. the `eth_estimateGas` is going to be flaky by default as there can be other transactions or blocks mined which will invalidate the call you are about to do. Thankfully the [spec](https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_estimategas) allows us to specify a block parameter.\r\n\r\nIt works fine with parity and with py-evm. But geth does not accept the `block_identifier` parameter for `eth_estimateGas` and instead returns `{'code': -32602, 'message': 'too many arguments, want at most 1'}`.\r\n\r\nWhy not implement the call as per the spec? I described a valid use-case that requires a block identifier and where the \"pending\" block is not always the correct answer.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/452837702/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/453146427",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-453146427",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 453146427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzE0NjQyNw==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-10T15:54:55Z",
    "updated_at": "2019-01-10T15:54:55Z",
    "author_association": "MEMBER",
    "body": "I'm unsure that it's a valid use case. If estimating on top of pending fails, why wouldn't it fail when actually executing it? Wouldn't the same failure scenario happen?\r\n\r\nThat said, I don't think there's any particular difficulty in supporting this use case if it's speced.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/453146427/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/453274036",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-453274036",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 453274036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzI3NDAzNg==",
    "user": {
      "login": "LefterisJP",
      "id": 1658405,
      "node_id": "MDQ6VXNlcjE2NTg0MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1658405?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LefterisJP",
      "html_url": "https://github.com/LefterisJP",
      "followers_url": "https://api.github.com/users/LefterisJP/followers",
      "following_url": "https://api.github.com/users/LefterisJP/following{/other_user}",
      "gists_url": "https://api.github.com/users/LefterisJP/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LefterisJP/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LefterisJP/subscriptions",
      "organizations_url": "https://api.github.com/users/LefterisJP/orgs",
      "repos_url": "https://api.github.com/users/LefterisJP/repos",
      "events_url": "https://api.github.com/users/LefterisJP/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LefterisJP/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-10T22:10:33Z",
    "updated_at": "2019-01-10T22:10:33Z",
    "author_association": "MEMBER",
    "body": "> I'm unsure that it's a valid use case. If estimating on top of pending fails, why wouldn't it fail when actually executing it? Wouldn't the same failure scenario happen?\r\n\r\nPerhaps I did not explain my use-case correctly. In a state machine architecture where we have a specific view of the blockchain (a blockhash as identifier) with which to take decisions during the processing of each state change it would be nice if estimateGas  also accepts that identifier and not only use the pending block. We need to have a consistent view of the blockchain in our state machine, even if that means that we are looking at the past.\r\n\r\n> That said, I don't think there's any particular difficulty in supporting this use case if it's speced.\r\n\r\nThat's great to hear!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/453274036/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/493993557",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-493993557",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 493993557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5Mzk5MzU1Nw==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-20T13:44:48Z",
    "updated_at": "2019-05-20T13:44:48Z",
    "author_association": "MEMBER",
    "body": "@LefterisJP can you elaborate a bit more on the use-case? Also opened an magcians thread about it - we should really remove this stumbling block ..\r\n\r\nhttps://ethereum-magicians.org/t/eth-estimategas-and-block-parameter/3302",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/493993557/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/494005604",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-494005604",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 494005604,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDAwNTYwNA==",
    "user": {
      "login": "LefterisJP",
      "id": 1658405,
      "node_id": "MDQ6VXNlcjE2NTg0MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1658405?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LefterisJP",
      "html_url": "https://github.com/LefterisJP",
      "followers_url": "https://api.github.com/users/LefterisJP/followers",
      "following_url": "https://api.github.com/users/LefterisJP/following{/other_user}",
      "gists_url": "https://api.github.com/users/LefterisJP/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LefterisJP/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LefterisJP/subscriptions",
      "organizations_url": "https://api.github.com/users/LefterisJP/orgs",
      "repos_url": "https://api.github.com/users/LefterisJP/repos",
      "events_url": "https://api.github.com/users/LefterisJP/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LefterisJP/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-20T14:14:37Z",
    "updated_at": "2019-05-20T14:14:37Z",
    "author_association": "MEMBER",
    "body": "@ligi It's mostly to run the EVM on a particular state.\r\n\r\nFor real real gas estimation indeed only pending makes sense since you want to know how much gas an operation will cost and that operation can only happen in the next block.\r\n\r\nAt this point I think this should just be implemented for parity between geth, parity and the json-rpc spec.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/494005604/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/494007609",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-494007609",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 494007609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDAwNzYwOQ==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-20T14:19:24Z",
    "updated_at": "2019-05-20T14:19:24Z",
    "author_association": "MEMBER",
    "body": "not sure about this tbh. I rather think that when there is no compelling use-case the spec should be changed. And I do not see a use-case at all currently. Just because parity jumped out the window - why should geth jump?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/494007609/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/494544846",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-494544846",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 494544846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDU0NDg0Ng==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-21T20:25:30Z",
    "updated_at": "2019-05-21T20:25:30Z",
    "author_association": "NONE",
    "body": "I think the blockNumber parameter is valuable.\r\nIt can for example ensure your estimation is executed against a recent block and not some very old block.\r\nIf you specify a recent block and the node you are talking to is not synced up, it will return an error as it does not have the block. This allow you to retry.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/494544846/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/494549839",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-494549839",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 494549839,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDU0OTgzOQ==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-21T20:40:33Z",
    "updated_at": "2019-05-21T20:40:33Z",
    "author_association": "MEMBER",
    "body": "I don't think that's a usecase for this parameter. The default is to \"latest\" anyway.\r\nIMHO what you want to do is better done by just checking the sync state which is already possible and not abusing this parameter for getting this information.\r\nI think this parameter is only useful if you need to get gas-estimation for old blocks - and I struggle to see any use-case for this currently.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/494549839/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/494740972",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-494740972",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 494740972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDc0MDk3Mg==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-22T10:11:09Z",
    "updated_at": "2019-05-22T10:11:09Z",
    "author_association": "NONE",
    "body": "This would require another request which in some setup is not guarantee to reach the same node (infura) \r\nPassing the blockNumber ensure you get the estimate on the state at that blockNumber or an error. This is in no way an abuse, just what you expect for every other call that let you pass the blockNumber.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/494740972/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/494741931",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-494741931",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 494741931,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDc0MTkzMQ==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-22T10:14:20Z",
    "updated_at": "2019-05-22T10:14:20Z",
    "author_association": "MEMBER",
    "body": "ok - that's a good point",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/494741931/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/494745897",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-494745897",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 494745897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDc0NTg5Nw==",
    "user": {
      "login": "LefterisJP",
      "id": 1658405,
      "node_id": "MDQ6VXNlcjE2NTg0MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1658405?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LefterisJP",
      "html_url": "https://github.com/LefterisJP",
      "followers_url": "https://api.github.com/users/LefterisJP/followers",
      "following_url": "https://api.github.com/users/LefterisJP/following{/other_user}",
      "gists_url": "https://api.github.com/users/LefterisJP/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LefterisJP/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LefterisJP/subscriptions",
      "organizations_url": "https://api.github.com/users/LefterisJP/orgs",
      "repos_url": "https://api.github.com/users/LefterisJP/repos",
      "events_url": "https://api.github.com/users/LefterisJP/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LefterisJP/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-22T10:27:14Z",
    "updated_at": "2019-05-22T10:27:14Z",
    "author_association": "MEMBER",
    "body": "@ligi What @wighawag is saying is what I have been trying to say above with the state machine. Can't always be checking the syncing state. When the code goes into a codepatch checking the state in a specific block we need to know it's that block and only that block. Can't have the state of the world change under us.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/494745897/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/494746154",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-494746154",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 494746154,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDc0NjE1NA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-22T10:28:06Z",
    "updated_at": "2019-05-22T10:28:06Z",
    "author_association": "MEMBER",
    "body": "@wighawag How do you know which block number is recent? :) You still need to query it.\r\n@LefterisJP Specifying the block number doens't guarantee that either. A mini reorg can change it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/494746154/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/494746420",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-494746420",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 494746420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDc0NjQyMA==",
    "user": {
      "login": "LefterisJP",
      "id": 1658405,
      "node_id": "MDQ6VXNlcjE2NTg0MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1658405?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LefterisJP",
      "html_url": "https://github.com/LefterisJP",
      "followers_url": "https://api.github.com/users/LefterisJP/followers",
      "following_url": "https://api.github.com/users/LefterisJP/following{/other_user}",
      "gists_url": "https://api.github.com/users/LefterisJP/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LefterisJP/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LefterisJP/subscriptions",
      "organizations_url": "https://api.github.com/users/LefterisJP/orgs",
      "repos_url": "https://api.github.com/users/LefterisJP/repos",
      "events_url": "https://api.github.com/users/LefterisJP/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LefterisJP/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-22T10:28:59Z",
    "updated_at": "2019-05-22T10:28:59Z",
    "author_association": "MEMBER",
    "body": "@karalabe That's why we specify the block identifier (hash) and not just the number. If the block identifier is not found the that means we had a reorg.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/494746420/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/494748115",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-494748115",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 494748115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDc0ODExNQ==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-22T10:34:47Z",
    "updated_at": "2019-05-22T10:35:34Z",
    "author_association": "MEMBER",
    "body": "@LefterisJP but the block parameter would not allow this as far as I see: \r\nhttps://github.com/ethereum/wiki/wiki/JSON-RPC#the-default-block-parameter\r\n\r\n> The following options are possible for the defaultBlock parameter:\r\n> \r\n> HEX String - an integer block number\r\n> String \"earliest\" for the earliest/genesis block\r\n> String \"latest\" - for the latest mined block\r\n> String \"pending\" - for the pending state/transactions\r\n\r\ndoes any implementation allow you to specify a block hash there?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/494748115/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/494751936",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-494751936",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 494751936,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDc1MTkzNg==",
    "user": {
      "login": "LefterisJP",
      "id": 1658405,
      "node_id": "MDQ6VXNlcjE2NTg0MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1658405?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LefterisJP",
      "html_url": "https://github.com/LefterisJP",
      "followers_url": "https://api.github.com/users/LefterisJP/followers",
      "following_url": "https://api.github.com/users/LefterisJP/following{/other_user}",
      "gists_url": "https://api.github.com/users/LefterisJP/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LefterisJP/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LefterisJP/subscriptions",
      "organizations_url": "https://api.github.com/users/LefterisJP/orgs",
      "repos_url": "https://api.github.com/users/LefterisJP/repos",
      "events_url": "https://api.github.com/users/LefterisJP/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LefterisJP/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-22T10:48:23Z",
    "updated_at": "2019-05-22T10:59:03Z",
    "author_association": "MEMBER",
    "body": "Hmmm you are correct. I was confused since we are using `web3.py` and it accepts block hashes as identifiers for all calls. But it seems that under the hood it queries the block number of the block with the particular hash:\r\n\r\nhttps://github.com/ethereum/web3.py/blob/11ef9df28dfbe4b83683a84fec184406165f18d5/web3/contract.py#L1353-L1354\r\n\r\nThat's really unfortunate then. So client implementations don't accept blockhashes as block identifiers at all? That would have been a nice feature.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/494751936/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/494762902",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-494762902",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 494762902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDc2MjkwMg==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-22T11:27:10Z",
    "updated_at": "2019-05-22T11:27:10Z",
    "author_association": "NONE",
    "body": "@karalabe \r\n> How do you know which block number is recent? :) You still need to query it.\r\n\r\nof course you need to query it but you can use whatever method you want here. The point was about state view consistency between 2 different request. \r\n\r\nAnd I agree that blockNumber is not ideal, blockHash would be better, so I would vote for that too\r\n\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/494762902/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/498063143",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-498063143",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 498063143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODA2MzE0Mw==",
    "user": {
      "login": "deacix",
      "id": 762226,
      "node_id": "MDQ6VXNlcjc2MjIyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/762226?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deacix",
      "html_url": "https://github.com/deacix",
      "followers_url": "https://api.github.com/users/deacix/followers",
      "following_url": "https://api.github.com/users/deacix/following{/other_user}",
      "gists_url": "https://api.github.com/users/deacix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deacix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deacix/subscriptions",
      "organizations_url": "https://api.github.com/users/deacix/orgs",
      "repos_url": "https://api.github.com/users/deacix/repos",
      "events_url": "https://api.github.com/users/deacix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deacix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-02T20:33:07Z",
    "updated_at": "2019-06-02T20:33:07Z",
    "author_association": "NONE",
    "body": "Based on Ethereum JSON-RPC specification function eth_estimateGas should support the block tag.\r\nhttps://github.com/ethereum/wiki/wiki/JSON-RPC#eth_estimategas\r\nThat now means, that Geth is not conform with Ethereum JSON-RPC specification.\r\nWhere is the problem to implement it? Parity has it already im place...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/498063143/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/527630819",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-527630819",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 527630819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzYzMDgxOQ==",
    "user": {
      "login": "ankitm123",
      "id": 6242296,
      "node_id": "MDQ6VXNlcjYyNDIyOTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6242296?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ankitm123",
      "html_url": "https://github.com/ankitm123",
      "followers_url": "https://api.github.com/users/ankitm123/followers",
      "following_url": "https://api.github.com/users/ankitm123/following{/other_user}",
      "gists_url": "https://api.github.com/users/ankitm123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ankitm123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ankitm123/subscriptions",
      "organizations_url": "https://api.github.com/users/ankitm123/orgs",
      "repos_url": "https://api.github.com/users/ankitm123/repos",
      "events_url": "https://api.github.com/users/ankitm123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ankitm123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-03T20:41:08Z",
    "updated_at": "2019-09-03T20:41:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is someone working on this? I can work on it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/527630819/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/667257082",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2586#issuecomment-667257082",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2586",
    "id": 667257082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzI1NzA4Mg==",
    "user": {
      "login": "moodysalem",
      "id": 7897876,
      "node_id": "MDQ6VXNlcjc4OTc4NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7897876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moodysalem",
      "html_url": "https://github.com/moodysalem",
      "followers_url": "https://api.github.com/users/moodysalem/followers",
      "following_url": "https://api.github.com/users/moodysalem/following{/other_user}",
      "gists_url": "https://api.github.com/users/moodysalem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moodysalem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moodysalem/subscriptions",
      "organizations_url": "https://api.github.com/users/moodysalem/orgs",
      "repos_url": "https://api.github.com/users/moodysalem/repos",
      "events_url": "https://api.github.com/users/moodysalem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moodysalem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-31T18:00:28Z",
    "updated_at": "2020-07-31T18:00:28Z",
    "author_association": "NONE",
    "body": "> It should take into account all pending transactions in the particular block. There's little sense to use the latest block for it. AFAIK pending was always the designed use case. Whay Geth version are you using? Can you give us an example of what it does vs. what it should do?\r\n\r\nIf the node is not a mining node (e.g. Infura), the pending block is meaningless because the actual transaction order of the next block is random as far as the node is concerned, and all unconfirmed transactions (except for the ones sent from the same account with a lower nonce) in the mempool should be ignored in estimating the gas.\r\n\r\nI think the result is many transactions can be blocked from submission via failing gas estimates, if a pending transaction exists that may never be confirmed due to gas price, but that transaction changes the state so others cannot be confirmed after it.\r\n\r\nWe are seeing many failing gas estimates today for the Uniswap interface, and I suspect it may related to this issue. Could you confirm the behavior of geth `eth_estimateGas` with regards to other pending transactions/ordering?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/667257082/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
