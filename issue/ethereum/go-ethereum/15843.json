{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15843",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15843/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15843/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15843/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/15843",
  "id": 287311749,
  "node_id": "MDU6SXNzdWUyODczMTE3NDk=",
  "number": 15843,
  "title": "Why use the block number as a part of level database key",
  "user": {
    "login": "ysqi",
    "id": 2821085,
    "node_id": "MDQ6VXNlcjI4MjEwODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2821085?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ysqi",
    "html_url": "https://github.com/ysqi",
    "followers_url": "https://api.github.com/users/ysqi/followers",
    "following_url": "https://api.github.com/users/ysqi/following{/other_user}",
    "gists_url": "https://api.github.com/users/ysqi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ysqi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ysqi/subscriptions",
    "organizations_url": "https://api.github.com/users/ysqi/orgs",
    "repos_url": "https://api.github.com/users/ysqi/repos",
    "events_url": "https://api.github.com/users/ysqi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ysqi/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2018-01-10T04:27:12Z",
  "updated_at": "2018-01-11T05:52:12Z",
  "closed_at": "2018-01-10T09:30:39Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "the block hash is unique,  can get block number by block hash.\r\n```go\r\nvar blockHashPrefix     = []byte(\"H\")   // blockHashPrefix + hash -> num (uint64 big endian)\r\n```\r\n> blockHashPrefix + hash -> num\r\n\r\nThis also means that block hash are treated as unique value. then, why use the block number as a part of level database key ? thanks.\r\n```go\r\nvar (\r\n\theaderPrefix        = []byte(\"h\")   // headerPrefix + num (uint64 big endian) + hash -> header\r\n\ttdSuffix            = []byte(\"t\")   // headerPrefix + num (uint64 big endian) + hash + tdSuffix -> td\r\n\tnumSuffix           = []byte(\"n\")   // headerPrefix + num (uint64 big endian) + numSuffix -> hash\r\n\tblockHashPrefix     = []byte(\"H\")   // blockHashPrefix + hash -> num (uint64 big endian)\r\n\tbodyPrefix          = []byte(\"b\")   // bodyPrefix + num (uint64 big endian) + hash -> block body\r\n\tblockReceiptsPrefix = []byte(\"r\")   // blockReceiptsPrefix + num (uint64 big endian) + hash -> block receipts\r\n\tlookupPrefix        = []byte(\"l\")   // lookupPrefix + hash -> transaction/receipt lookup metadata\r\n\tpreimagePrefix      = \"secure-key-\" // preimagePrefix + hash -> preimage\r\n)\r\n```\r\n\r\n\r\n\r\n  ",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15843/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15843/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/356542205",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15843#issuecomment-356542205",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15843",
    "id": 356542205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjU0MjIwNQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T09:04:03Z",
    "updated_at": "2018-01-10T09:04:03Z",
    "author_association": "MEMBER",
    "body": "Often you want to access subsequent blocks (e.g. `N-1`, `N`, `N+1`). Originally we used only the hashes in the index, but leveldb sorts the database by key, so looking up blocks `N-1`, `N`, `N+1` entailed pulling data from 3 random locations from disk (i.e. sorted hashes). Furthermore leveldb doesn't store keys 1-by-1, rather it groups keys into blocks of 4K data and stored that.\r\n\r\nBy prefixing the keys with the block number, the data gets stored close by to each other, often in the same database block, so reading one of them already prefeches it's close neighbors, so if we are answering range queries, the data will already be in memory for the next query.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/356542205/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/356542737",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15843#issuecomment-356542737",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15843",
    "id": 356542737,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjU0MjczNw==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T09:06:15Z",
    "updated_at": "2018-01-10T09:06:15Z",
    "author_association": "MEMBER",
    "body": "It also helps with database compaction, since inserting new blocks gets appended to the \"end\" of a block range, not in the middle, so inserting 1000 new blocks stored by number will make a few database storage slots dirty, whereas inserting the same 1000 blocks by hash would make 1000 (4KB each) database slots dirty.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/356542737/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/356833750",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/15843#issuecomment-356833750",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/15843",
    "id": 356833750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjgzMzc1MA==",
    "user": {
      "login": "ysqi",
      "id": 2821085,
      "node_id": "MDQ6VXNlcjI4MjEwODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2821085?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ysqi",
      "html_url": "https://github.com/ysqi",
      "followers_url": "https://api.github.com/users/ysqi/followers",
      "following_url": "https://api.github.com/users/ysqi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ysqi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ysqi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ysqi/subscriptions",
      "organizations_url": "https://api.github.com/users/ysqi/orgs",
      "repos_url": "https://api.github.com/users/ysqi/repos",
      "events_url": "https://api.github.com/users/ysqi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ysqi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-11T05:52:12Z",
    "updated_at": "2018-01-11T05:52:12Z",
    "author_association": "NONE",
    "body": "@karalabe  thanks a lot! i found document support  your  answer. see [here](https://github.com/google/leveldb/blob/master/doc/index.md#key-layout)\r\n\r\n## Key Layout\r\nNote that the unit of disk transfer and caching is a block. Adjacent keys (according to the database sort order) will usually be placed in the same block. Therefore the application can improve its performance by placing keys that are accessed together near each other and placing infrequently used keys in a separate region of the key space.\r\n\r\nFor example, suppose we are implementing a simple file system on top of leveldb. The types of entries we might wish to store are:\r\n```\r\nfilename -> permission-bits, length, list of file_block_ids\r\nfile_block_id -> data\r\n```\r\nWe might want to prefix filename keys with one letter (say '/') and the file_block_id keys with a different letter (say '0') so that scans over just the metadata do not force us to fetch and cache bulky file contents.\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/356833750/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
