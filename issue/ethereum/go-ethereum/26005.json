{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26005",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26005/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26005/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26005/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/26005",
  "id": 1412578542,
  "node_id": "I_kwDOAOvK985UMjzu",
  "number": 26005,
  "title": "What is the STACK TRIE for?",
  "user": {
    "login": "joonha97",
    "id": 26410791,
    "node_id": "MDQ6VXNlcjI2NDEwNzkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/26410791?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/joonha97",
    "html_url": "https://github.com/joonha97",
    "followers_url": "https://api.github.com/users/joonha97/followers",
    "following_url": "https://api.github.com/users/joonha97/following{/other_user}",
    "gists_url": "https://api.github.com/users/joonha97/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/joonha97/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/joonha97/subscriptions",
    "organizations_url": "https://api.github.com/users/joonha97/orgs",
    "repos_url": "https://api.github.com/users/joonha97/repos",
    "events_url": "https://api.github.com/users/joonha97/events{/privacy}",
    "received_events_url": "https://api.github.com/users/joonha97/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 268304226,
      "node_id": "MDU6TGFiZWwyNjgzMDQyMjY=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:docs",
      "name": "type:docs",
      "color": "fef2c0",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2022-10-18T05:05:30Z",
  "updated_at": "2022-10-19T11:19:23Z",
  "closed_at": "2022-10-18T16:21:52Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hello, \r\n\r\nI am looking inside the Snap Sync process and found that the state/storage trie rebuilding process is accelerated by serialized leaf node insertion called \"Stack Trie update\". And I have 3 questions about the stack trie utilization.\r\n\r\n### _**1. Is the Stack trie faster than a normal trie?**_\r\nI understood that stack trie commits every left child that won't be touched again in the middle of the update process.\r\nBut is it really time-efficient? \r\nWhen I tried to compare the stack trie rebuilding time to the normal trie rebuilding time (including the time for trie commit and db commit), what I found is that the stack trie was much slower than the normal trie.\r\n(I inserted sorted keys to both tries.)\r\n\r\n### _**2. Why does Snap Sync use the Stack Trie?**_\r\nIs it for the time-efficiency or the memory-efficiency?\r\nTo the best of my knowledge, the stack trie seems slower than the normal trie.\r\nThen why did the snap sync choose the stack trie?\r\nIs it because the stack trie fits the concurrent syncing?\r\nIf then, would it really be faster? But then, why does it commit in the middle of the trie update process?\r\nOr is it just because the stack trie consumes less memory?\r\n\r\n### **_3. Is the reason why the incoming snapshot is sorted to use the Stack Trie?_**\r\nI understood that the incoming snap data is sorted and this perfectly fits the stack trie update.\r\nIs this sorting just for the stack trie update?\r\n\r\n\r\n_(code below is for the normal trie update)_\r\n```\r\nnormalTrie, _ := trie.New(common.Hash{}, trie.NewDatabase(diskdb_out_normal))\r\n\r\n// inject the data\r\nRebuildNormalTrieStarts := time.Now().UnixNano() / int64(time.Millisecond)\r\nfor i, enc := range accounts {\r\n\tdata := new(types.StateAccount)\r\n\t\r\n        if err := rlp.DecodeBytes(enc, data); err != nil {\r\n\t\tlog.Error(\"Failed to decode state object\", \"err\", err)\r\n\t}\r\n\r\n\tacc, _ := rlp.EncodeToBytes(data)\r\n       \r\n        // don't worry, we handled key hashing!\r\n\tif err := normalTrie.TryUpdate(keys[i][:], acc); err != nil {\r\n\t\ts.setError(fmt.Errorf(\"updateStateObject (%x) error: %v\", err))\r\n\t}\r\n}\r\n\r\n// commit\r\nvar root common.Hash\r\nif root, _, err = normalTrie.Commit(nil); err != nil {\r\n\tfmt.Println(\"normalTrie.Commit error !!\")\r\n}\r\nnormalTrie.Database().Commit(root, false, nil)\r\n\r\nRebuildNormalTrieEnds := time.Now().UnixNano() / int64(time.Millisecond)\r\n```\r\n\r\n_(and the code below is for the stack trie update)_\r\n```\r\nstackTr := trie.NewStackTrie(diskdb_out_stack.NewBatch())\r\n\r\n// inject the data\r\nRebuildStackTrieStarts := time.Now().UnixNano() / int64(time.Millisecond)\r\nfor index, key := range keys {\r\n\tstackTr.TryUpdate(key[:], accounts[index])\r\n}\r\n\r\nRebuildStackTrieEnds := time.Now().UnixNano() / int64(time.Millisecond)\r\n```\r\n\r\n\r\nCan anyone be so kind and give me a hint?\r\nThanks you so much!",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26005/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26005/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1282660142",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26005#issuecomment-1282660142",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26005",
    "id": 1282660142,
    "node_id": "IC_kwDOAOvK985Mc9cu",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-18T16:21:52Z",
    "updated_at": "2022-10-18T16:21:52Z",
    "author_association": "MEMBER",
    "body": "1. In most cases, yes\r\n\r\nSee https://github.com/ethereum/go-ethereum/pull/21407#issuecomment-694874776 . On small sets, it's probably slower. On larger sets, the stacktrie memory consumption is basically constant -- it can build a trie of infinity elements using a few hundred nodes. A regular trie blows up, so a lot of resources are spent on allocation and gc. \r\n\r\n> what I found is that the stack trie was much slower than the normal trie.\r\n\r\nInteresting. If you show me what you did I can see if there's any obvious flaw. \r\n\r\n\r\n2. Why does Snap Sync use the Stack Trie?\r\n\r\n> Is it for the time-efficiency or the memory-efficiency?\r\n\r\nYes, both. But mostly memory. \r\n\r\n3. Is the reason why the incoming snapshot is sorted to use the Stack Trie?\r\n\r\n> I understood that the incoming snap data is sorted and this perfectly fits the stack trie update. Is this sorting just for the stack trie update?\r\n\r\nNope, it's the other way around. Since the values are sorted, we saw that we could make a more memory-efficient trie evaluation of the values. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1282660142/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1283148162",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26005#issuecomment-1283148162",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26005",
    "id": 1283148162,
    "node_id": "IC_kwDOAOvK985Me0mC",
    "user": {
      "login": "joonha97",
      "id": 26410791,
      "node_id": "MDQ6VXNlcjI2NDEwNzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26410791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joonha97",
      "html_url": "https://github.com/joonha97",
      "followers_url": "https://api.github.com/users/joonha97/followers",
      "following_url": "https://api.github.com/users/joonha97/following{/other_user}",
      "gists_url": "https://api.github.com/users/joonha97/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joonha97/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joonha97/subscriptions",
      "organizations_url": "https://api.github.com/users/joonha97/orgs",
      "repos_url": "https://api.github.com/users/joonha97/repos",
      "events_url": "https://api.github.com/users/joonha97/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joonha97/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-18T23:50:33Z",
    "updated_at": "2022-10-19T02:06:13Z",
    "author_association": "NONE",
    "body": "Thank you so much for your kindness, @holiman !\r\n\r\nI tried to estimate the time by the code below.\r\n[[statedb.go](https://github.com/joonha97/rebuild-ethereum-state-trie/blob/main/statedb.go)](https://github.com/joonha97/rebuild-ethereum-state-trie/blob/main/statedb.go)\r\nIt is really simple code that just updates standard/stack trie by injecting the key-value pairs.\r\n\r\nThere were much more accounts than [#21407](https://github.com/ethereum/go-ethereum/pull/21407#issuecomment-694874776), I injected more than **_1M_** key-value pairs in increasing order.\r\nAnd as the number of key-value pairs increased, the time difference widened.\r\n(Stack Trie was slower..... when injected 4039894 key-value pairs, \r\nstandard trie takes about 30000 ms and stack trie takes 90000 ms.)\r\n\r\n> Hardware spec\r\n> memory : 128 GB\r\n> cache size : 512 KB\r\n\r\n> Geth version\r\n> 1.10.16 stable\r\n\r\nI tried but could not find what the problem is...\r\nCan you help me?\r\nThank you!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1283148162/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1283372683",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26005#issuecomment-1283372683",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26005",
    "id": 1283372683,
    "node_id": "IC_kwDOAOvK985MfraL",
    "user": {
      "login": "joonha97",
      "id": 26410791,
      "node_id": "MDQ6VXNlcjI2NDEwNzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26410791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joonha97",
      "html_url": "https://github.com/joonha97",
      "followers_url": "https://api.github.com/users/joonha97/followers",
      "following_url": "https://api.github.com/users/joonha97/following{/other_user}",
      "gists_url": "https://api.github.com/users/joonha97/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joonha97/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joonha97/subscriptions",
      "organizations_url": "https://api.github.com/users/joonha97/orgs",
      "repos_url": "https://api.github.com/users/joonha97/repos",
      "events_url": "https://api.github.com/users/joonha97/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joonha97/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-19T03:36:04Z",
    "updated_at": "2022-10-19T03:36:04Z",
    "author_association": "NONE",
    "body": "To both tries, I inserted data sorted by its key.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1283372683/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1283513260",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26005#issuecomment-1283513260",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26005",
    "id": 1283513260,
    "node_id": "IC_kwDOAOvK985MgNus",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-19T06:46:19Z",
    "updated_at": "2022-10-19T06:46:19Z",
    "author_association": "MEMBER",
    "body": "> There were much more accounts than https://github.com/ethereum/go-ethereum/pull/21407#issuecomment-694874776, I  injected more than 1M key-value pairs in increasing order.\r\nAnd as the number of key-value pairs increased, the time difference widened.\r\n(Stack Trie was slower..... when injected 4039894 key-value pairs,\r\nstandard trie takes about 30000 ms and stack trie takes 90000 ms.)\r\n\r\n1M key-value leafs means that the normal trie is holding somewhere between 1-2M nodes in memory. This might be fine:ish for a one-off benchmark when your computer is not doing much else, and you have RAM to spare. Qurious though: I'm not sure you actually do any writes in either of the two cases\r\n\r\n```golang\r\n\t\tnormalTr, _ := trie.New(common.Hash{}, trie.NewDatabase(diskdb_out_normal))\r\n```\r\nThe trie will flush to a trie.Database, but I don't think you are ever making that flush to disk. \r\n\r\n```golang\r\n\t\tstackTr := trie.NewStackTrie(diskdb_out_stack.NewBatch())\r\n```\r\nAnd the stacktrie writes to a batch, but I don't think the batch is actually flushed? Also, I think your code is not based off of latest geth, so I'm not sure what the semantics of your code is. For example, Commit now returns the modified nodeset. \r\n\r\n\r\nAlso, I think a better approach is to use golang's built-in benchmark-tests.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1283513260/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1283528524",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26005#issuecomment-1283528524",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26005",
    "id": 1283528524,
    "node_id": "IC_kwDOAOvK985MgRdM",
    "user": {
      "login": "joonha97",
      "id": 26410791,
      "node_id": "MDQ6VXNlcjI2NDEwNzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26410791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joonha97",
      "html_url": "https://github.com/joonha97",
      "followers_url": "https://api.github.com/users/joonha97/followers",
      "following_url": "https://api.github.com/users/joonha97/following{/other_user}",
      "gists_url": "https://api.github.com/users/joonha97/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joonha97/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joonha97/subscriptions",
      "organizations_url": "https://api.github.com/users/joonha97/orgs",
      "repos_url": "https://api.github.com/users/joonha97/repos",
      "events_url": "https://api.github.com/users/joonha97/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joonha97/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-19T07:02:48Z",
    "updated_at": "2022-10-19T07:02:48Z",
    "author_association": "NONE",
    "body": "Thank you so much for the reply again, @holiman !\r\n\r\nI flushed the normal trie by the code below.\r\nAnd I checked that my target disk's size has been increased.\r\n```\r\nif root, _, err = normalTr.Commit(nil); err != nil {\r\n\tfmt.Println(\"normalTr.Commit error !!\")\r\n}\r\nnormalTr.Database().Commit(root, false, nil)\r\n```\r\n\r\nAnd I thought I was flushing by stackTrie's TryUpdate() containing the code below(current geth version!)\r\n```\r\nst.val = hasher.hashData(encodedNode)\r\nif st.db != nil {\r\n        // TODO! Is it safe to Put the slice here?\r\n        // Do all db implementations copy the value provided?\r\n        st.db.Put(st.val, encodedNode)\r\n}\r\n```\r\nShould I do something else to flush the stackTrie?\r\n\r\nSorry for bothering you several times....\r\nThank you so much!\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1283528524/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1283534786",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26005#issuecomment-1283534786",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26005",
    "id": 1283534786,
    "node_id": "IC_kwDOAOvK985MgS_C",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-19T07:08:59Z",
    "updated_at": "2022-10-19T07:08:59Z",
    "author_association": "MEMBER",
    "body": "> Should I do something else to flush the stackTrie?\r\n\r\nSomething like this:\r\n\r\n```golang\r\nbatch := diskdb_out_stack.NewBatch()\r\n...\r\nbatch.Write()\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1283534786/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1283571800",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26005#issuecomment-1283571800",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26005",
    "id": 1283571800,
    "node_id": "IC_kwDOAOvK985MgcBY",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-19T07:43:58Z",
    "updated_at": "2022-10-19T07:43:58Z",
    "author_association": "MEMBER",
    "body": "The stacktrie is serial. Some parallelization can be achieved, by flushing the batch in parallel with the stacktrie inserts happening. \r\nThe normal trie can be parallelized more, for example it's possible to let 8 goroutines traverse different subtries. That's what the hasher does, it spinds up several routines and just descends down different paths.  \r\n\r\n> In general, what makes the stack trie faster than the normal trie if I have enough RAM...?\r\n\r\nIf RAM is not an issue, and garbage-collection is not an issue (i.e: happens after the test), then stacktrie is not inherently faster, I think. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1283571800/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1283582470",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26005#issuecomment-1283582470",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26005",
    "id": 1283582470,
    "node_id": "IC_kwDOAOvK985MgeoG",
    "user": {
      "login": "joonha97",
      "id": 26410791,
      "node_id": "MDQ6VXNlcjI2NDEwNzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26410791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joonha97",
      "html_url": "https://github.com/joonha97",
      "followers_url": "https://api.github.com/users/joonha97/followers",
      "following_url": "https://api.github.com/users/joonha97/following{/other_user}",
      "gists_url": "https://api.github.com/users/joonha97/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joonha97/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joonha97/subscriptions",
      "organizations_url": "https://api.github.com/users/joonha97/orgs",
      "repos_url": "https://api.github.com/users/joonha97/repos",
      "events_url": "https://api.github.com/users/joonha97/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joonha97/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-19T07:53:36Z",
    "updated_at": "2022-10-19T07:53:36Z",
    "author_association": "NONE",
    "body": "I flushed the batch in parallel with the stackTrie insertion and accomplished a wonderful performance increase of the stack trie exactly what I wanted!\r\n\r\nAnd I clearly understood what you let me know, stackTrie performs similarly to the normal trie updates by multi goroutines!\r\n\r\nWith all my heart, thank you my savior, @holiman ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1283582470/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1283594105",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26005#issuecomment-1283594105",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26005",
    "id": 1283594105,
    "node_id": "IC_kwDOAOvK985Mghd5",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-19T08:03:15Z",
    "updated_at": "2022-10-19T08:03:15Z",
    "author_association": "MEMBER",
    "body": "You're welcome. Take a bit of care, though, when flushing a batch in a parallel routine, you need to do it so that you don't have race conditions. E.g. by swapping out the batch for a new batch, and shipping the \"full\" batch to to a routine that calls Write. Or something like that. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1283594105/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1283847874",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26005#issuecomment-1283847874",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26005",
    "id": 1283847874,
    "node_id": "IC_kwDOAOvK985MhfbC",
    "user": {
      "login": "joonha97",
      "id": 26410791,
      "node_id": "MDQ6VXNlcjI2NDEwNzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26410791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joonha97",
      "html_url": "https://github.com/joonha97",
      "followers_url": "https://api.github.com/users/joonha97/followers",
      "following_url": "https://api.github.com/users/joonha97/following{/other_user}",
      "gists_url": "https://api.github.com/users/joonha97/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joonha97/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joonha97/subscriptions",
      "organizations_url": "https://api.github.com/users/joonha97/orgs",
      "repos_url": "https://api.github.com/users/joonha97/repos",
      "events_url": "https://api.github.com/users/joonha97/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joonha97/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-19T11:19:23Z",
    "updated_at": "2022-10-19T11:19:23Z",
    "author_association": "NONE",
    "body": "I'll keep that in mind. Thank you for the kind advice! 👍 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1283847874/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
