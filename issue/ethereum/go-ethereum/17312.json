{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17312",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17312/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17312/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17312/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/17312",
  "id": 347321378,
  "node_id": "MDU6SXNzdWUzNDczMjEzNzg=",
  "number": 17312,
  "title": "Setting ulimit appropriately (too many open files)",
  "user": {
    "login": "yackx",
    "id": 1193689,
    "node_id": "MDQ6VXNlcjExOTM2ODk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1193689?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/yackx",
    "html_url": "https://github.com/yackx",
    "followers_url": "https://api.github.com/users/yackx/followers",
    "following_url": "https://api.github.com/users/yackx/following{/other_user}",
    "gists_url": "https://api.github.com/users/yackx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/yackx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/yackx/subscriptions",
    "organizations_url": "https://api.github.com/users/yackx/orgs",
    "repos_url": "https://api.github.com/users/yackx/repos",
    "events_url": "https://api.github.com/users/yackx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/yackx/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2018-08-03T09:17:08Z",
  "updated_at": "2019-05-02T22:48:23Z",
  "closed_at": "2018-12-11T09:57:32Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "`geth` failed with the dreaded \"too many open files\" error message:\r\n\r\n```\r\nCRIT [08-02|11:33:54] Failed to store hash to number mapping\r\nerr=\"open /home/youri/.ethereum/geth/chaindata/128935.ldb: too many open files\"\r\n```\r\n\r\nIssue has already been [reported](https://github.com/ethereum/go-ethereum/issues/16006) and [workaround suggestion](https://github.com/ethereum/go-ethereum/issues/15582#issuecomment-391127507) can be found. I understand [a fix has already been merged](https://github.com/ethereum/go-ethereum/pull/16009) sot that `geth` honors the OS hard number of files in `ulimit`, and I assume that fix is present in `1.8.13`.\r\n\r\nHowever, my default `ulimit` seems too low for `geth`:\r\n\r\n```\r\n$ ulimit -Sn\r\n1024\r\n$ ulimit -Hn\r\n4096\r\n```\r\n\r\nI am not allowed to increase the hard limit on the shell even with `sudo` so instead:\r\n\r\n```\r\n$ grep youri /etc/security/limits.conf\r\nyouri         soft       nofile     10000\r\nyouri         hard       nofile     20000\r\n\r\n$ reboot\r\n\r\n$ ulimit -Sn\r\n10000\r\n$ ulimit -Hn\r\n20000\r\n```\r\n\r\n### Question / Suggestion\r\n\r\nI have no idea if `20000` is appropriate (too high? too low?), or if it can cause adverse effects on my aging hardware.\r\n\r\n* Is there an official recommendation to set the `ulimit`\r\n    * values for `soft` and `hard`\r\n    * how to, including troubleshooting common `pam` problems if `ulimit` is not taken into account\r\n    * possible side-effects\r\n* Maybe more info in `ERR` when it crashes (current limit, pointer for some help)\r\n* Does it make sense for `geth` to require such a large number of files, that one would normally expect running a large corporate DBMS for instance?\r\n\r\nWhat do you think?\r\n\r\n### Info\r\n\r\n* geth 1.8.13\r\n* Linux Mint 19 XFCE (kernel 4.15.0-29)\r\n* Core2Duo, 4Gb RAM, SSD SATA3  😓",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17312/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17312/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/410216001",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17312#issuecomment-410216001",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17312",
    "id": 410216001,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDIxNjAwMQ==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-03T10:41:56Z",
    "updated_at": "2018-08-03T10:41:56Z",
    "author_association": "MEMBER",
    "body": "> Does it make sense for geth to require such a large number of files, that one would normally expect running a large corporate DBMS for instance?\r\n\r\nbasically geth is a large DBMS instance - not corporate though ,-)\r\n\r\nA lot of projects in this space have to deal with this problem - e.g. @ipfs https://github.com/ipfs/go-ipfs/issues/3792\r\n\r\nI think it would make sense to split this issue into actionable items - meta-issues like this are always hard to deal with and especially hard to close.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/410216001/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/410256561",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17312#issuecomment-410256561",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17312",
    "id": 410256561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDI1NjU2MQ==",
    "user": {
      "login": "yackx",
      "id": 1193689,
      "node_id": "MDQ6VXNlcjExOTM2ODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1193689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yackx",
      "html_url": "https://github.com/yackx",
      "followers_url": "https://api.github.com/users/yackx/followers",
      "following_url": "https://api.github.com/users/yackx/following{/other_user}",
      "gists_url": "https://api.github.com/users/yackx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yackx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yackx/subscriptions",
      "organizations_url": "https://api.github.com/users/yackx/orgs",
      "repos_url": "https://api.github.com/users/yackx/repos",
      "events_url": "https://api.github.com/users/yackx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yackx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-03T13:37:06Z",
    "updated_at": "2018-08-03T13:37:06Z",
    "author_association": "NONE",
    "body": "In order to make it more practical:\r\n\r\n1. Extending error messages to become verbose, let alone to include suggestions on how to resolve usually makes the code less readable. People will google the error message and find relevant info anyway - ideally, some documentation, or at worst, a SO topic or a GitHub issue. So maybe not the way to go (pun intended)\r\n\r\n2. Regarding the number of file handles, I'm in no position to assess, I just wanted to point it out but I assume nobody here will reply and say : \"oh yes, we totally overlooked that, why are we opening so many files again?\" 😉 \r\n\r\n3. This leaves documentation as an actionable item. So, what would be considered a good practice regarding `ulimit`? It crashed with `20000` but I had to turn off that poor machine because of the heat. I'll retry `30000`. I noticed it's `unlimited` on my MBP.\r\n\r\nLet me know if it's ok to discuss the options here, then if you find it relevant, I can create one or several new issues at a later stage (and close this one) to have something more practicable to work on. Not sure I can be of a big help to actually solve it, but I'll try, for sure.\r\n\r\nHTH",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/410256561/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/411086397",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17312#issuecomment-411086397",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17312",
    "id": 411086397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTA4NjM5Nw==",
    "user": {
      "login": "nutmix",
      "id": 5080942,
      "node_id": "MDQ6VXNlcjUwODA5NDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5080942?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nutmix",
      "html_url": "https://github.com/nutmix",
      "followers_url": "https://api.github.com/users/nutmix/followers",
      "following_url": "https://api.github.com/users/nutmix/following{/other_user}",
      "gists_url": "https://api.github.com/users/nutmix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nutmix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nutmix/subscriptions",
      "organizations_url": "https://api.github.com/users/nutmix/orgs",
      "repos_url": "https://api.github.com/users/nutmix/repos",
      "events_url": "https://api.github.com/users/nutmix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nutmix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-07T14:56:39Z",
    "updated_at": "2018-08-07T15:01:48Z",
    "author_association": "NONE",
    "body": "This bug is still there in 1.8.13-stable-225171a4.\r\n\r\nWe are plagued by \"accept: Too many open files\" whenever we try to us the rpc apis.\r\n\r\nWe tried raising the proces and user limits to 32,000, but it always is limited to around 2000.\r\n\r\ncat /proc/sys/fs/file-nr\r\n2112\t0\t3280354\r\ncat /proc/2160/limits | grep files\r\nMax open files            32000                32000                files     \r\n\r\nThe only work around we have found mentioned to this bug is to have a loop continuously resetting the limits, but this is too much of a hack.\r\n\r\nInterestingly, lsof gives a much higher value than the actual open file limits set withing geth and reported by proc/sys/fs.  Presumably this includes additional items.\r\n\r\n```\r\nroot@ethd:~# lsof | awk '{ print $2; }' | uniq -c | sort -rn | head\r\n 272041 2160 <- geth process\r\n    216 1031\r\n    148 978\r\n```\r\n\r\nThis number, 272041, is always between 27000 and 28000, even if the number of open files for a process and user is set to say 1024 (the default soft limit)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/411086397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/411660326",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17312#issuecomment-411660326",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17312",
    "id": 411660326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTY2MDMyNg==",
    "user": {
      "login": "yackx",
      "id": 1193689,
      "node_id": "MDQ6VXNlcjExOTM2ODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1193689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yackx",
      "html_url": "https://github.com/yackx",
      "followers_url": "https://api.github.com/users/yackx/followers",
      "following_url": "https://api.github.com/users/yackx/following{/other_user}",
      "gists_url": "https://api.github.com/users/yackx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yackx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yackx/subscriptions",
      "organizations_url": "https://api.github.com/users/yackx/orgs",
      "repos_url": "https://api.github.com/users/yackx/repos",
      "events_url": "https://api.github.com/users/yackx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yackx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-09T07:12:34Z",
    "updated_at": "2018-08-09T07:12:34Z",
    "author_association": "NONE",
    "body": "> but it always is limited to around 2000\r\n\r\n@nutmix You mean in `geth` itself, not on your OS?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/411660326/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/411702114",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17312#issuecomment-411702114",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17312",
    "id": 411702114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTcwMjExNA==",
    "user": {
      "login": "nutmix",
      "id": 5080942,
      "node_id": "MDQ6VXNlcjUwODA5NDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5080942?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nutmix",
      "html_url": "https://github.com/nutmix",
      "followers_url": "https://api.github.com/users/nutmix/followers",
      "following_url": "https://api.github.com/users/nutmix/following{/other_user}",
      "gists_url": "https://api.github.com/users/nutmix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nutmix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nutmix/subscriptions",
      "organizations_url": "https://api.github.com/users/nutmix/orgs",
      "repos_url": "https://api.github.com/users/nutmix/repos",
      "events_url": "https://api.github.com/users/nutmix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nutmix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-09T09:48:03Z",
    "updated_at": "2018-08-09T09:48:03Z",
    "author_association": "NONE",
    "body": "@YouriAckx it seems to be geth itself setting the 20xx limit.  At least I have read several bugs which say this is its current behaviour, and what I see would agree with this diagnosis. Basically, I can raise the open file limit for all users, and for the geth process, and I see these changes using cat /proc/pid/limits for example, but geth still fails with \"accept: too many open files\" when the total OS open files are around 2000.  I raised every OS limit possible, but geth still fails when I hit the RPC APIs. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/411702114/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/411741333",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17312#issuecomment-411741333",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17312",
    "id": 411741333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTc0MTMzMw==",
    "user": {
      "login": "yackx",
      "id": 1193689,
      "node_id": "MDQ6VXNlcjExOTM2ODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1193689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yackx",
      "html_url": "https://github.com/yackx",
      "followers_url": "https://api.github.com/users/yackx/followers",
      "following_url": "https://api.github.com/users/yackx/following{/other_user}",
      "gists_url": "https://api.github.com/users/yackx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yackx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yackx/subscriptions",
      "organizations_url": "https://api.github.com/users/yackx/orgs",
      "repos_url": "https://api.github.com/users/yackx/repos",
      "events_url": "https://api.github.com/users/yackx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yackx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-09T12:33:11Z",
    "updated_at": "2018-08-09T12:33:11Z",
    "author_association": "NONE",
    "body": "You're right @nutmix, [this fix](https://github.com/ethereum/go-ethereum/pull/16009) is present in tag `v1.8.13` but it does not seem to solve the issue. Before the fix, the limit would be reduced, and after the fix, it can be raised, but not above `2048`. And it is still capped on `master`.\r\n\r\nI don't understand the intent of:\r\n\r\n```\r\nif limit > 2048 { // cap database file descriptors even if more is available\r\n    limit = 2048\r\n}\r\n```\r\n\r\nMaybe some project member could shed some light on that. In the meantime I'll resync to see how it performs.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/411741333/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/411744644",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17312#issuecomment-411744644",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17312",
    "id": 411744644,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTc0NDY0NA==",
    "user": {
      "login": "yackx",
      "id": 1193689,
      "node_id": "MDQ6VXNlcjExOTM2ODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1193689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yackx",
      "html_url": "https://github.com/yackx",
      "followers_url": "https://api.github.com/users/yackx/followers",
      "following_url": "https://api.github.com/users/yackx/following{/other_user}",
      "gists_url": "https://api.github.com/users/yackx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yackx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yackx/subscriptions",
      "organizations_url": "https://api.github.com/users/yackx/orgs",
      "repos_url": "https://api.github.com/users/yackx/repos",
      "events_url": "https://api.github.com/users/yackx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yackx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-09T12:45:18Z",
    "updated_at": "2018-08-09T13:14:53Z",
    "author_association": "NONE",
    "body": "Well, that didn't take long, \"too many open files\" after a few minutes. S=15000 and H=30000.\r\n\r\nSo I ran the following while `geth` was running:\r\n\r\n```\r\n$ while true; do ls -1 /proc/xxx/fd | wc -l; done;\r\n```\r\n\r\nMost of the time it yields `1059` (counting some extra fd) but it happily spikes to my soft limit `15000` and keeps running. Until it crashes.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/411744644/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/412273216",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17312#issuecomment-412273216",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17312",
    "id": 412273216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjI3MzIxNg==",
    "user": {
      "login": "yackx",
      "id": 1193689,
      "node_id": "MDQ6VXNlcjExOTM2ODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1193689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yackx",
      "html_url": "https://github.com/yackx",
      "followers_url": "https://api.github.com/users/yackx/followers",
      "following_url": "https://api.github.com/users/yackx/following{/other_user}",
      "gists_url": "https://api.github.com/users/yackx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yackx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yackx/subscriptions",
      "organizations_url": "https://api.github.com/users/yackx/orgs",
      "repos_url": "https://api.github.com/users/yackx/repos",
      "events_url": "https://api.github.com/users/yackx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yackx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-11T12:52:52Z",
    "updated_at": "2018-08-11T12:52:52Z",
    "author_association": "NONE",
    "body": "I've tried to tweak `makeDatabaseHandles()` in `flags.go` to increase the number of file and database handles, but no luck. The program runs a bit longer but eventually fails. I've tried insanely high numbers (20000) but this makes no sense since the stable code base caps at 2048 (half of it for DB connections) and somehow it works for most people I would assume. And the machine starts to become less responsive, even with `ionice` and `renice`.\r\n\r\n@nutmix Are you running geth on an old hardware like I am, with plain old SATA3 ? Maybe on slower hardware the I/O contentions get higher and somehow exhaust the connection (file or db) handles. But I'm just conjecturing.\r\n\r\nI'm running out of ideas.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/412273216/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/412485160",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17312#issuecomment-412485160",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17312",
    "id": 412485160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjQ4NTE2MA==",
    "user": {
      "login": "nutmix",
      "id": 5080942,
      "node_id": "MDQ6VXNlcjUwODA5NDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5080942?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nutmix",
      "html_url": "https://github.com/nutmix",
      "followers_url": "https://api.github.com/users/nutmix/followers",
      "following_url": "https://api.github.com/users/nutmix/following{/other_user}",
      "gists_url": "https://api.github.com/users/nutmix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nutmix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nutmix/subscriptions",
      "organizations_url": "https://api.github.com/users/nutmix/orgs",
      "repos_url": "https://api.github.com/users/nutmix/repos",
      "events_url": "https://api.github.com/users/nutmix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nutmix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T11:15:31Z",
    "updated_at": "2018-08-13T11:15:31Z",
    "author_association": "NONE",
    "body": "@YouriAckx No, we are running it on fast HW, with SSD and decent IOPS.  Specifically, 8 CPU, 32GB ram, separate volume for OS and Blockchain. (Linode 32GB standard instance).  There is nothing else running on the box.\r\n\r\nWe have given up trying to use geth and the RPC api - there seems to be no workaround for the too many open files issue at the moment.   We tried upping the various file handle limits to crazy levels, still fails with a single app hitting the RPC API, with no parallelisation.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/412485160/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 1,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/413477536",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17312#issuecomment-413477536",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17312",
    "id": 413477536,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzQ3NzUzNg==",
    "user": {
      "login": "yackx",
      "id": 1193689,
      "node_id": "MDQ6VXNlcjExOTM2ODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1193689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yackx",
      "html_url": "https://github.com/yackx",
      "followers_url": "https://api.github.com/users/yackx/followers",
      "following_url": "https://api.github.com/users/yackx/following{/other_user}",
      "gists_url": "https://api.github.com/users/yackx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yackx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yackx/subscriptions",
      "organizations_url": "https://api.github.com/users/yackx/orgs",
      "repos_url": "https://api.github.com/users/yackx/repos",
      "events_url": "https://api.github.com/users/yackx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yackx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T09:06:30Z",
    "updated_at": "2018-08-16T09:06:30Z",
    "author_association": "NONE",
    "body": "No luck on gitter. [Some settings](https://gitter.im/ethereum/go-ethereum?at=5b74381f196bc60b6bd28f27) from somebody who has no problem running geth:\r\n\r\n```\r\n# lsof | grep geth | wc -l\r\n11058\r\n# ulimit -Sn\r\n1024\r\n# ulimit -Hn\r\n1048576\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/413477536/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/446141491",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17312#issuecomment-446141491",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17312",
    "id": 446141491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjE0MTQ5MQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-11T09:57:32Z",
    "updated_at": "2018-12-11T09:57:32Z",
    "author_association": "MEMBER",
    "body": "Geth was previously hard capped to 1K file descriptors for the database. We removed that limit on the latest release, will be pushed shortly.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/446141491/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/488859584",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17312#issuecomment-488859584",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17312",
    "id": 488859584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODg1OTU4NA==",
    "user": {
      "login": "1265578519",
      "id": 6442439,
      "node_id": "MDQ6VXNlcjY0NDI0Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6442439?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/1265578519",
      "html_url": "https://github.com/1265578519",
      "followers_url": "https://api.github.com/users/1265578519/followers",
      "following_url": "https://api.github.com/users/1265578519/following{/other_user}",
      "gists_url": "https://api.github.com/users/1265578519/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/1265578519/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/1265578519/subscriptions",
      "organizations_url": "https://api.github.com/users/1265578519/orgs",
      "repos_url": "https://api.github.com/users/1265578519/repos",
      "events_url": "https://api.github.com/users/1265578519/events{/privacy}",
      "received_events_url": "https://api.github.com/users/1265578519/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-02T22:48:22Z",
    "updated_at": "2019-05-02T22:48:22Z",
    "author_association": "NONE",
    "body": "谢谢，我也发现了S1024限制，等待新版，",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/488859584/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
