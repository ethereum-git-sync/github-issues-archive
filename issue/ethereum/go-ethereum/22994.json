{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22994",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22994/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22994/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22994/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/22994",
  "id": 911154400,
  "node_id": "MDU6SXNzdWU5MTExNTQ0MDA=",
  "number": 22994,
  "title": "Calling debug_traceBlock Against Current State Using Arbitrarily Generated Block",
  "user": {
    "login": "m-e-r-k-l-e-root",
    "id": 76809797,
    "node_id": "MDQ6VXNlcjc2ODA5Nzk3",
    "avatar_url": "https://avatars.githubusercontent.com/u/76809797?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/m-e-r-k-l-e-root",
    "html_url": "https://github.com/m-e-r-k-l-e-root",
    "followers_url": "https://api.github.com/users/m-e-r-k-l-e-root/followers",
    "following_url": "https://api.github.com/users/m-e-r-k-l-e-root/following{/other_user}",
    "gists_url": "https://api.github.com/users/m-e-r-k-l-e-root/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/m-e-r-k-l-e-root/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/m-e-r-k-l-e-root/subscriptions",
    "organizations_url": "https://api.github.com/users/m-e-r-k-l-e-root/orgs",
    "repos_url": "https://api.github.com/users/m-e-r-k-l-e-root/repos",
    "events_url": "https://api.github.com/users/m-e-r-k-l-e-root/events{/privacy}",
    "received_events_url": "https://api.github.com/users/m-e-r-k-l-e-root/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 268304226,
      "node_id": "MDU6TGFiZWwyNjgzMDQyMjY=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:docs",
      "name": "type:docs",
      "color": "fef2c0",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-06-04T06:08:58Z",
  "updated_at": "2022-03-21T09:55:04Z",
  "closed_at": "2021-06-05T03:58:03Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Can _debug_traceBlock_ be used for tracing an arbitrarily generated block against current state?\r\n\r\nI.e. assume there are 2 transactions,\r\n\r\ntx #1 looks something along the lines of:\r\n```\r\n{\r\n  from: \"0xdeadbeef000000000000000000000000000000000, \r\n  to: \"0x55550000000000000000000000000000000000000\", \r\n  gas: \"0x77777\", \r\n  data: \"0x00\"\r\n}\r\n```\r\n\r\nand tx #2 looks something along the lines of:\r\n```\r\n{\r\n  from: \"0xdead0000000000000000000000000000000000000, \r\n  to:\"0x22220000000000000000000000000000000000000\", \r\n  gas: \"0x77777\", \r\n  data: \"0x00\"\r\n}\r\n```\r\n\r\nIs it possible to RLP encode these 2 transactions into a 'custom' block then call _debug_traceBlock_ using the RLP for this 'custom' block in which only contains these 2 tx's? If this is not possible via the usage of _debug_traceBlock_ is there any other way to achieve this?\r\n\r\nHere's some pseudocode demonstrating what I'm attempting to achieve:\r\n```\r\n//calling\r\nvar listOfTxns = [\r\n  {\r\n    from: \"0xdeadbeef000000000000000000000000000000000, \r\n    to: \"0x55550000000000000000000000000000000000000\", \r\n    gas: \"0x77777\", \r\n    data: \"0x00\"\r\n  },\r\n  {\r\n    from: \"0xdead0000000000000000000000000000000000000, \r\n    to:\"0x22220000000000000000000000000000000000000\", \r\n    gas: \"0x77777\", \r\n    data: \"0x00\"\r\n  }\r\n];\r\n\r\nvar txListToRlpEncodedBlock = rlpEncode(listOfTxns);\r\n\r\ndebug_traceCustomBlock(currentBlockNumber, txListToRlpEncodedBlock)\r\n\r\n//return value\r\n[\r\n    {\r\n        <trace results for tx #1>\r\n    },\r\n    {\r\n        <trace results for tx #2>\r\n    }\r\n]\r\n```",
  "closed_by": {
    "login": "m-e-r-k-l-e-root",
    "id": 76809797,
    "node_id": "MDQ6VXNlcjc2ODA5Nzk3",
    "avatar_url": "https://avatars.githubusercontent.com/u/76809797?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/m-e-r-k-l-e-root",
    "html_url": "https://github.com/m-e-r-k-l-e-root",
    "followers_url": "https://api.github.com/users/m-e-r-k-l-e-root/followers",
    "following_url": "https://api.github.com/users/m-e-r-k-l-e-root/following{/other_user}",
    "gists_url": "https://api.github.com/users/m-e-r-k-l-e-root/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/m-e-r-k-l-e-root/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/m-e-r-k-l-e-root/subscriptions",
    "organizations_url": "https://api.github.com/users/m-e-r-k-l-e-root/orgs",
    "repos_url": "https://api.github.com/users/m-e-r-k-l-e-root/repos",
    "events_url": "https://api.github.com/users/m-e-r-k-l-e-root/events{/privacy}",
    "received_events_url": "https://api.github.com/users/m-e-r-k-l-e-root/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22994/reactions",
    "total_count": 2,
    "+1": 0,
    "-1": 0,
    "laugh": 1,
    "hooray": 1,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22994/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/855178743",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22994#issuecomment-855178743",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22994",
    "id": 855178743,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NTE3ODc0Mw==",
    "user": {
      "login": "m-e-r-k-l-e-root",
      "id": 76809797,
      "node_id": "MDQ6VXNlcjc2ODA5Nzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/76809797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m-e-r-k-l-e-root",
      "html_url": "https://github.com/m-e-r-k-l-e-root",
      "followers_url": "https://api.github.com/users/m-e-r-k-l-e-root/followers",
      "following_url": "https://api.github.com/users/m-e-r-k-l-e-root/following{/other_user}",
      "gists_url": "https://api.github.com/users/m-e-r-k-l-e-root/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/m-e-r-k-l-e-root/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/m-e-r-k-l-e-root/subscriptions",
      "organizations_url": "https://api.github.com/users/m-e-r-k-l-e-root/orgs",
      "repos_url": "https://api.github.com/users/m-e-r-k-l-e-root/repos",
      "events_url": "https://api.github.com/users/m-e-r-k-l-e-root/events{/privacy}",
      "received_events_url": "https://api.github.com/users/m-e-r-k-l-e-root/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-05T03:58:00Z",
    "updated_at": "2022-03-21T09:55:04Z",
    "author_association": "NONE",
    "body": "After overviewing the _geth_ codebase I've come to the conclusion there does not appear to be a built-in way to achieve what I'm trying to do, therefore I ended up writing my own _go_ implementation for what I've described above.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/855178743/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
