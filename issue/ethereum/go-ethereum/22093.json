{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/22093",
  "id": 776746520,
  "node_id": "MDU6SXNzdWU3NzY3NDY1MjA=",
  "number": 22093,
  "title": "eth_sendRawTransaction return already known",
  "user": {
    "login": "vae520283995",
    "id": 30487254,
    "node_id": "MDQ6VXNlcjMwNDg3MjU0",
    "avatar_url": "https://avatars.githubusercontent.com/u/30487254?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vae520283995",
    "html_url": "https://github.com/vae520283995",
    "followers_url": "https://api.github.com/users/vae520283995/followers",
    "following_url": "https://api.github.com/users/vae520283995/following{/other_user}",
    "gists_url": "https://api.github.com/users/vae520283995/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vae520283995/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vae520283995/subscriptions",
    "organizations_url": "https://api.github.com/users/vae520283995/orgs",
    "repos_url": "https://api.github.com/users/vae520283995/repos",
    "events_url": "https://api.github.com/users/vae520283995/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vae520283995/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 20,
  "created_at": "2020-12-31T03:34:49Z",
  "updated_at": "2022-08-05T00:02:10Z",
  "closed_at": "2021-02-18T08:49:53Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: `Geth/v1.9.23-stable-8c2f2715`\r\nOS & Version: Linux\r\nCommit hash : stable-8c2f2715\r\n\r\n#### Expected behaviour\r\nBroadcast normally returns txhash\r\n\r\n#### Actual behaviour\r\nreturn already known\r\n\r\n#### Steps to reproduce the behaviour\r\nUnable to reproduce, appeared once\r\n\r\n#### Backtrace\r\n\r\n````\r\n[backtrace]\r\n![image](https://user-images.githubusercontent.com/30487254/103393118-149f7100-4b5c-11eb-885a-1b98431fc03d.png)\r\n\r\n````\r\n",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/752887696",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22093#issuecomment-752887696",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093",
    "id": 752887696,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1Mjg4NzY5Ng==",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-31T08:30:00Z",
    "updated_at": "2020-12-31T08:30:00Z",
    "author_association": "MEMBER",
    "body": "This error is returned if a transaction was already in the mempool. It has to be the exact same transaction, because it is compared by txHash. So there are two possibilities: you either submitted the same rawTransaction twice (maybe because there was a reorg right before it) or there's  a slight race and the rawTransaction was internally handled twice. Since it appeared only once and is not reproducible I would argue for the former, but we should keep our eyes open if more people have this problem ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/752887696/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/752900614",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22093#issuecomment-752900614",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093",
    "id": 752900614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjkwMDYxNA==",
    "user": {
      "login": "vae520283995",
      "id": 30487254,
      "node_id": "MDQ6VXNlcjMwNDg3MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/30487254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vae520283995",
      "html_url": "https://github.com/vae520283995",
      "followers_url": "https://api.github.com/users/vae520283995/followers",
      "following_url": "https://api.github.com/users/vae520283995/following{/other_user}",
      "gists_url": "https://api.github.com/users/vae520283995/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vae520283995/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vae520283995/subscriptions",
      "organizations_url": "https://api.github.com/users/vae520283995/orgs",
      "repos_url": "https://api.github.com/users/vae520283995/repos",
      "events_url": "https://api.github.com/users/vae520283995/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vae520283995/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-31T09:22:47Z",
    "updated_at": "2020-12-31T09:22:47Z",
    "author_association": "NONE",
    "body": "> This error is returned if a transaction was already in the mempool. It has to be the exact same transaction, because it is compared by txHash. So there are two possibilities: you either submitted the same rawTransaction twice (maybe because there was a reorg right before it) or there's a slight race and the rawTransaction was internally handled twice. Since it appeared only once and is not reproducible I would argue for the former, but we should keep our eyes open if more people have this problem\r\n\r\nThank you for your answer, I am sure I only broadcast once, and I only have this situation once, which cannot be reproduced",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/752900614/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/753615307",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22093#issuecomment-753615307",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093",
    "id": 753615307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzYxNTMwNw==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-03T13:15:06Z",
    "updated_at": "2021-01-03T13:15:06Z",
    "author_association": "MEMBER",
    "body": "Which is the code that sends the transactions? Are you sure the bug is not in there that executed a tx twice?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/753615307/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/753615929",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22093#issuecomment-753615929",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093",
    "id": 753615929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzYxNTkyOQ==",
    "user": {
      "login": "vae520283995",
      "id": 30487254,
      "node_id": "MDQ6VXNlcjMwNDg3MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/30487254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vae520283995",
      "html_url": "https://github.com/vae520283995",
      "followers_url": "https://api.github.com/users/vae520283995/followers",
      "following_url": "https://api.github.com/users/vae520283995/following{/other_user}",
      "gists_url": "https://api.github.com/users/vae520283995/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vae520283995/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vae520283995/subscriptions",
      "organizations_url": "https://api.github.com/users/vae520283995/orgs",
      "repos_url": "https://api.github.com/users/vae520283995/repos",
      "events_url": "https://api.github.com/users/vae520283995/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vae520283995/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-03T13:18:59Z",
    "updated_at": "2021-01-03T13:18:59Z",
    "author_association": "NONE",
    "body": "> Which is the code that sends the transactions? Are you sure the bug is not in there that executed a tx twice?\r\n\r\nUse web3j eth_sendRawTransaction,  Not executed twice",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/753615929/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/755977913",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22093#issuecomment-755977913",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093",
    "id": 755977913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NTk3NzkxMw==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-07T08:53:56Z",
    "updated_at": "2021-01-07T08:53:56Z",
    "author_association": "MEMBER",
    "body": "Signing a transaction (at least in geth) is deterministic, if you sign the same data twice, it becomes the exact (hash-wise) duplicate. \r\nSo it's not necessarily that you submit the same signed data blob twice, it could be that whatever backend you used, produced the same (same nonce, same value same recipient etc) twice, and it resulted in the same blob twice. \r\nIf you don't have any more info about how the pipeline looked which produced this transaction, there's not much we can do. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/755977913/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/755982541",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22093#issuecomment-755982541",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093",
    "id": 755982541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NTk4MjU0MQ==",
    "user": {
      "login": "vae520283995",
      "id": 30487254,
      "node_id": "MDQ6VXNlcjMwNDg3MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/30487254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vae520283995",
      "html_url": "https://github.com/vae520283995",
      "followers_url": "https://api.github.com/users/vae520283995/followers",
      "following_url": "https://api.github.com/users/vae520283995/following{/other_user}",
      "gists_url": "https://api.github.com/users/vae520283995/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vae520283995/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vae520283995/subscriptions",
      "organizations_url": "https://api.github.com/users/vae520283995/orgs",
      "repos_url": "https://api.github.com/users/vae520283995/repos",
      "events_url": "https://api.github.com/users/vae520283995/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vae520283995/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-07T09:03:00Z",
    "updated_at": "2021-01-07T09:03:00Z",
    "author_association": "NONE",
    "body": "> Signing a transaction (at least in geth) is deterministic, if you sign the same data twice, it becomes the exact (hash-wise) duplicate.\r\n> So it's not necessarily that you submit the same signed data blob twice, it could be that whatever backend you used, produced the same (same nonce, same value same recipient etc) twice, and it resulted in the same blob twice.\r\n> If you don't have any more info about how the pipeline looked which produced this transaction, there's not much we can do.\r\n\r\nBoth create transaction and sign transaction use web3j, without calling geth, but I called eth_estimateGas before signing",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/755982541/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/756019680",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22093#issuecomment-756019680",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093",
    "id": 756019680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NjAxOTY4MA==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-07T10:09:56Z",
    "updated_at": "2021-01-07T10:09:56Z",
    "author_association": "MEMBER",
    "body": "> Both create transaction and sign transaction use web3j,\r\n\r\nWeb3j gets nonce information from somewhere. And some caller provides a value to send.  That's what I mean by the \"pipeline which produced this transaction\". How does that pipeline look. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/756019680/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/756513993",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22093#issuecomment-756513993",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093",
    "id": 756513993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NjUxMzk5Mw==",
    "user": {
      "login": "vae520283995",
      "id": 30487254,
      "node_id": "MDQ6VXNlcjMwNDg3MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/30487254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vae520283995",
      "html_url": "https://github.com/vae520283995",
      "followers_url": "https://api.github.com/users/vae520283995/followers",
      "following_url": "https://api.github.com/users/vae520283995/following{/other_user}",
      "gists_url": "https://api.github.com/users/vae520283995/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vae520283995/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vae520283995/subscriptions",
      "organizations_url": "https://api.github.com/users/vae520283995/orgs",
      "repos_url": "https://api.github.com/users/vae520283995/repos",
      "events_url": "https://api.github.com/users/vae520283995/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vae520283995/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-08T02:50:06Z",
    "updated_at": "2021-01-08T02:50:06Z",
    "author_association": "NONE",
    "body": "> > Both create transaction and sign transaction use web3j,\r\n> \r\n> Web3j gets nonce information from somewhere. And some caller provides a value to send. That's what I mean by the \"pipeline which produced this transaction\". How does that pipeline look.\r\n\r\nweb3j gets the nonce based on the address, eth_getTransactionCount\r\nIt has appeared several times in a row recently, I first try to update to the latest version",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/756513993/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/758548125",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22093#issuecomment-758548125",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093",
    "id": 758548125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODU0ODEyNQ==",
    "user": {
      "login": "vae520283995",
      "id": 30487254,
      "node_id": "MDQ6VXNlcjMwNDg3MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/30487254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vae520283995",
      "html_url": "https://github.com/vae520283995",
      "followers_url": "https://api.github.com/users/vae520283995/followers",
      "following_url": "https://api.github.com/users/vae520283995/following{/other_user}",
      "gists_url": "https://api.github.com/users/vae520283995/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vae520283995/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vae520283995/subscriptions",
      "organizations_url": "https://api.github.com/users/vae520283995/orgs",
      "repos_url": "https://api.github.com/users/vae520283995/repos",
      "events_url": "https://api.github.com/users/vae520283995/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vae520283995/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-12T10:05:15Z",
    "updated_at": "2021-01-12T11:27:54Z",
    "author_association": "NONE",
    "body": "I updated the node to the latest version, but the problem still occurs\r\n Geth/v1.9.25-stable-e787272\r\n\r\nBelow is the log\r\n\r\n```\r\nWARN [01-12|09:54:23.497] Synchronisation failed, dropping peer    peer=aecb116c787b2dac err=\"action from bad peer ignored: header request timed out\"\r\nINFO [01-12|09:54:24.687] Deep froze chain segment                 blocks=9  elapsed=64.093ms  number=11549438     hash=\"3e9c32…b37c11\"\r\nINFO [01-12|09:54:28.340] Imported new chain segment               blocks=1  txs=207 mgas=12.496 elapsed=715.639ms mgasps=17.461  number=11639439     hash=\"332bae…3c1b8b\" dirty=201.78MiB\r\nINFO [01-12|09:54:30.907] Imported new chain segment               blocks=1  txs=175 mgas=12.484 elapsed=1.323s    mgasps=9.430   number=11639440     hash=\"c54b71…1f93f8\" dirty=202.75MiB\r\nINFO [01-12|09:54:37.597] Imported new chain segment               blocks=1  txs=261 mgas=12.482 elapsed=1.488s    mgasps=8.385   number=11639441     hash=\"5cc161…ecbe42\" dirty=203.89MiB\r\nINFO [01-12|09:54:50.394] Imported new chain segment               blocks=1  txs=219 mgas=12.492 elapsed=968.487ms mgasps=12.898  number=11639442     hash=\"e565f3…e0a128\" dirty=205.16MiB\r\nINFO [01-12|09:55:24.721] Deep froze chain segment                 blocks=4  elapsed=33.194ms  number=11549442     hash=\"da81b4…6e2456\"\r\nWARN [01-12|09:55:55.409] Unexpected transaction delivery          peer=aecb116c787b2dac\r\nWARN [01-12|09:55:55.410] Unexpected transaction delivery          peer=49d1c40d6d552aac\r\nINFO [01-12|09:56:05.833] Imported new chain segment               blocks=1  txs=229 mgas=12.501 elapsed=782.394ms mgasps=15.978  number=11639443     hash=\"5275ff…441913\" age=1m16s dirty=206.30MiB\r\nINFO [01-12|09:56:06.125] Submitted transaction                    fullhash=0xc441a97925485f01e436bf2cdf5a5f4c8a4ba4d2b2fecb424a54554a2d386e09 recipient=0xB4D51645A4466EBD87faefAc421b68523097baFB\r\nWARN [01-12|09:56:06.133] Served eth_sendRawTransaction            conn=18.139.60.104:39374 reqid=eth_sendRawTransaction_id t=\"67.842µs\"   err=\"already known\"\r\nINFO [01-12|09:56:15.659] Imported new chain segment               blocks=1  txs=250 mgas=12.507 elapsed=2.368s    mgasps=5.280   number=11639444     hash=\"10962b…408429\" age=1m9s  dirty=207.74MiB\r\nWARN [01-12|09:56:20.861] Checkpoint challenge timed out, dropping id=3379f0a23d69f23c conn=dyndial             addr=89.141.238.195:30303  type=Geth/v1.9.25-stable-...\r\nINFO [01-12|09:56:24.756] Deep froze chain segment                 blocks=2  elapsed=34.892ms  number=11549444     hash=\"afbbfd…bab8b8\"\r\nINFO [01-12|09:56:29.052] Imported new chain segment               blocks=1  txs=169 mgas=12.523 elapsed=604.197ms mgasps=20.727  number=11639445     hash=\"4624ba…e49d6d\" dirty=208.47MiB\r\nINFO [01-12|09:56:29.685] Imported new chain segment               blocks=1  txs=231 mgas=12.346 elapsed=534.181ms mgasps=23.111  number=11639446     hash=\"8cb940…22a2b1\" dirty=209.45MiB\r\nWARN [01-12|09:56:37.801] Checkpoint challenge timed out, dropping id=182de2cfe29eaab5 conn=inbound             addr=47.242.46.63:55514    type=Geth/v1.9.23-stable-...\r\nINFO [01-12|09:56:42.311] Imported new chain segment               blocks=1  txs=196 mgas=12.526 elapsed=1.267s    mgasps=9.886   number=11639447     hash=\"d16183…9953cc\" age=1m6s  dirty=210.59MiB\r\nINFO [01-12|09:56:45.331] Imported new chain segment               blocks=1  txs=173 mgas=12.540 elapsed=2.511s    mgasps=4.994   number=11639448     hash=\"b58014…9aec8f\" dirty=211.09MiB\r\nWARN [01-12|09:56:50.946] Checkpoint challenge timed out, dropping id=28ff98b27ea153cc conn=inbound             addr=90.145.247.162:51474  type=Geth/v1.9.11-stable-...\r\nINFO [01-12|09:56:57.603] Imported new chain segment               blocks=1  txs=229 mgas=12.518 elapsed=580.130ms mgasps=21.577  number=11639449     hash=\"320f16…123455\" age=1m4s  dirty=211.95MiB\r\nWARN [01-12|09:56:57.863] Checkpoint challenge timed out, dropping id=39f9dc1f2159e119 conn=inbound             addr=184.145.60.30:52626   type=Geth/v1.9.26-unstabl...\r\nINFO [01-12|09:57:04.244] Imported new chain segment               blocks=1  txs=195 mgas=12.507 elapsed=484.194ms mgasps=25.830  number=11639450     hash=\"8ec79d…ef4dcb\" dirty=212.37MiB\r\nINFO [01-12|09:57:05.949] Imported new chain segment               blocks=1  txs=568 mgas=12.510 elapsed=1.644s    mgasps=7.608   number=11639451     hash=\"3a79fc…72c25f\" dirty=212.95MiB\r\nWARN [01-12|09:57:12.185] Checkpoint challenge timed out, dropping id=46776dff2667d129 conn=inbound             addr=95.216.34.53:44942    type=OpenEthereum/v3.0.1-...\r\nINFO [01-12|09:57:20.433] Imported new chain segment               blocks=1  txs=174 mgas=12.513 elapsed=591.962ms mgasps=21.138  number=11639452     hash=\"2facee…72ec1b\" dirty=213.87MiB\r\nINFO [01-12|09:57:21.404] Imported new chain segment               blocks=1  txs=153 mgas=12.527 elapsed=794.334ms mgasps=15.770  number=11639453     hash=\"48731c…276f95\" dirty=214.86MiB\r\nINFO [01-12|09:57:24.784] Deep froze chain segment                 blocks=9  elapsed=26.259ms  number=11549453     hash=\"e56425…ac40f6\"\r\nINFO [01-12|09:57:32.351] Submitted transaction                    fullhash=0x658cc27aee12e603831c3888180d5e2abe5068be3d494a7c050253d80dd841cf recipient=0xf775956E1E9d9ddc63104A52626fE1A607B5769B\r\nINFO [01-12|09:57:32.374] Imported new chain segment               blocks=1  txs=215 mgas=12.524 elapsed=372.419ms mgasps=33.629  number=11639454     hash=\"841a9a…4fbcbb\" dirty=216.12MiB\r\nWARN [01-12|09:57:35.289] Checkpoint challenge timed out, dropping id=94b82260db33e63d conn=inbound             addr=15.236.39.217:57856   type=Geth/v1.9.22-unstabl...\r\nINFO [01-12|09:57:36.089] Imported new chain segment               blocks=1  txs=154 mgas=12.519 elapsed=3.280s    mgasps=3.816   number=11639455     hash=\"736492…b8a412\" dirty=217.42MiB\r\nINFO [01-12|09:57:43.071] Imported new chain segment               blocks=1  txs=140 mgas=12.522 elapsed=2.215s    mgasps=5.653   number=11639456     hash=\"8721f3…d6e2b7\" dirty=218.39MiB\r\nINFO [01-12|09:57:43.840] Imported new chain segment               blocks=1  txs=203 mgas=12.529 elapsed=762.649ms mgasps=16.428  number=11639457     hash=\"69e796…546c10\" dirty=218.92MiB\r\n```\r\nTwo transactions were submitted in the log, but one of them returned already known",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/758548125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/758596971",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22093#issuecomment-758596971",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093",
    "id": 758596971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODU5Njk3MQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-12T11:33:46Z",
    "updated_at": "2021-01-12T11:33:46Z",
    "author_association": "MEMBER",
    "body": "This is the transaction which is 'already known': https://etherscan.io/tx/0xc441a97925485f01e436bf2cdf5a5f4c8a4ba4d2b2fecb424a54554a2d386e09 . It was mined in block `11639449`. \r\nI can't see how that can possibly happen, unless you either have a second node which _also_ sends transactions with the same key, or double-send the transactions using `sendRaw`. \r\n\r\nIf you use `getTransactionCount`, it returns the `canon` transaction count, IIRC, which does not take `pending` into account. So invoking it twice will give the same nonce, even if you submit a transaction inbetween. \r\nAs opposed to if you send a transaction using `sendTransaction` but without specifying a nonce -- in that case it will check what the next nonce should be based on current state and the transactions floating around in `pending`. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/758596971/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/781184832",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22093#issuecomment-781184832",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093",
    "id": 781184832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTE4NDgzMg==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-18T08:49:53Z",
    "updated_at": "2021-02-18T08:49:53Z",
    "author_association": "MEMBER",
    "body": "> If you use getTransactionCount, it returns the canon transaction count, IIRC, which does not take pending into account. So invoking it twice will give the same nonce, even if you submit a transaction inbetween.\r\n\r\nSince we haven't heard back, I'll assume that this indeed was/is the issue, and I'll close this. Feel free to get back to us if there's something still not clear. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/781184832/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/944993979",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22093#issuecomment-944993979",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093",
    "id": 944993979,
    "node_id": "IC_kwDOAOvK9844U3a7",
    "user": {
      "login": "justinf123",
      "id": 6662803,
      "node_id": "MDQ6VXNlcjY2NjI4MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6662803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/justinf123",
      "html_url": "https://github.com/justinf123",
      "followers_url": "https://api.github.com/users/justinf123/followers",
      "following_url": "https://api.github.com/users/justinf123/following{/other_user}",
      "gists_url": "https://api.github.com/users/justinf123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/justinf123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justinf123/subscriptions",
      "organizations_url": "https://api.github.com/users/justinf123/orgs",
      "repos_url": "https://api.github.com/users/justinf123/repos",
      "events_url": "https://api.github.com/users/justinf123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/justinf123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-16T19:39:23Z",
    "updated_at": "2021-10-16T19:54:19Z",
    "author_association": "NONE",
    "body": "I am getting this error also, GETH Geth/v1.10.8-stable-26675454/windows-amd64/go1.16.4\r\n\r\nYou can see the log from my application, this is try number one:\r\n\r\n16/10/2021 07:14:01 PM\r\nBlock: 11,240,720\r\nTo: 0x86a632C97920119c4b855f7De01d4244EdAa96d0\r\nGWei sent: 64,465\r\nNonce: 474,151\r\n*FAILED* Attempt: 1\r\nError code: {'code': -32000, 'message': 'already known'}\r\n\r\nI can see the transaction on Etherscan, though looking over the code & the logs, there is no way it could have been submitted more than once.  It was transaction 34,334 in a series of transactions.  I have observed this error several times after GETH has processed a significant number of transactions.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/944993979/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1051257593",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22093#issuecomment-1051257593",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093",
    "id": 1051257593,
    "node_id": "IC_kwDOAOvK984-qOr5",
    "user": {
      "login": "feizerl",
      "id": 88751631,
      "node_id": "MDQ6VXNlcjg4NzUxNjMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/88751631?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/feizerl",
      "html_url": "https://github.com/feizerl",
      "followers_url": "https://api.github.com/users/feizerl/followers",
      "following_url": "https://api.github.com/users/feizerl/following{/other_user}",
      "gists_url": "https://api.github.com/users/feizerl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/feizerl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/feizerl/subscriptions",
      "organizations_url": "https://api.github.com/users/feizerl/orgs",
      "repos_url": "https://api.github.com/users/feizerl/repos",
      "events_url": "https://api.github.com/users/feizerl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/feizerl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-25T20:52:22Z",
    "updated_at": "2022-02-25T20:52:22Z",
    "author_association": "NONE",
    "body": "Hello,\r\n\r\nI am getting this error as well. Here my alchemy screenshot:\r\n\r\n<img width=\"1182\" alt=\"Screenshot 2022-02-25 at 3 50 12 PM\" src=\"https://user-images.githubusercontent.com/88751631/155800905-51715423-ee71-4b13-8e62-ccd96e981974.png\">\r\n\r\nI have checked the nonces, and am pretty sure the txn was not submitted twice. \r\n\r\nOne interesting thing (in my case) is that I observed this on polygon. (which seems to have a significant number of reorgs: https://polygonscan.com/blocks_forked). I am wondering if that could be potentially a reason for this. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1051257593/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1162978272",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22093#issuecomment-1162978272",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093",
    "id": 1162978272,
    "node_id": "IC_kwDOAOvK985FUaPg",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-22T11:25:29Z",
    "updated_at": "2022-06-22T11:25:29Z",
    "author_association": "MEMBER",
    "body": "I think this behavior is incorrect and Geth should return the transaction hash.  Calling `eth_sendRawTransaction` is (should be) an idempotent operation and no matter how many times you call it, you should always get the same result.  If the dapp actually wants to know if the transaction already exists, they can query for it.\r\n\r\nGenerally speaking, idempotency in API design improves robustness because it allows application authors to do \"at least once\" without having to worry about hitting unexpected code paths, rather than \"at most once\" (\"exactly once\" being impossible across failure domains of course).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1162978272/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1163054863",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22093#issuecomment-1163054863",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093",
    "id": 1163054863,
    "node_id": "IC_kwDOAOvK985FUs8P",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-22T12:47:33Z",
    "updated_at": "2022-06-22T12:47:33Z",
    "author_association": "MEMBER",
    "body": ">  Calling eth_sendRawTransaction is (should be) an idempotent operation and no matter how many times you call it, you should always get the same result.\r\n\r\nThat sounds odd to me. Typical things that can happen: \r\n- The tx is rejected outright, due to too low basefee. Ten minutes later it would have been fine\r\n- The tx is rejected, because the nonce is already passed. Might, or might not, be because this exact tx was already included in a block\r\n\r\nSo what  you're saying is that in these cases, the node should just squelch the error message and return the transaction hash? I don't see how that makes the UX any better. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1163054863/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1163123905",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22093#issuecomment-1163123905",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093",
    "id": 1163123905,
    "node_id": "IC_kwDOAOvK985FU9zB",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-22T13:49:49Z",
    "updated_at": "2022-06-22T13:50:14Z",
    "author_association": "MEMBER",
    "body": "I'm not suggest that it should *never* error.  If the node actually has a reason for rejecting the transaction then an error is appropriate.  In this case, the node hasn't actually rejected the transaction at all, it just already has the transaction in the mempool.  This is not an error state, it is a success state because the *intent* of the caller was to get a transaction into the mempool and that is a success (by way of it already being done).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1163123905/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1163127483",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22093#issuecomment-1163127483",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093",
    "id": 1163127483,
    "node_id": "IC_kwDOAOvK985FU-q7",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-22T13:52:34Z",
    "updated_at": "2022-06-22T13:52:34Z",
    "author_association": "MEMBER",
    "body": "Ah, I just reread the quoted part of my comment and I see the confusion.  I think this should be idempotent when a write happens, in the sense that if you do two writes of the same data to a database they will both succeed (even though the second was redundant).  You are correct, this call isn't idempotent if the transaction is rejected for any reason, and calling again after receiving a rejection may give a different result.  If the transaction is in a block already or in the mempool though, you should get a success result (transaction hash) no matter how many times you execute the call.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1163127483/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1163138173",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22093#issuecomment-1163138173",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093",
    "id": 1163138173,
    "node_id": "IC_kwDOAOvK985FVBR9",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-22T14:00:51Z",
    "updated_at": "2022-06-22T14:01:33Z",
    "author_association": "MEMBER",
    "body": "> If the transaction is in a block already [...] , you should get a success\r\n\r\nSo, if a node receives a tx, it will check the nonce of that tx pretty early. It will see that the nonce is _old_, and the tx is rejected. In order to figure out that this exact tx was already included in a block, it would have to do a lookup in the `txhash->block number` index (if such exist). And it would still be pretty quirky behaviour, basically\r\n\r\n> If the tx-nonce is too low (tx is old), we return an error. Except if this exact tx was already included in a block somewhere between now and genesis, in which case we return the tx hash instead (best effort: assuming we can locate it in our index)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1163138173/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1163142293",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22093#issuecomment-1163142293",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093",
    "id": 1163142293,
    "node_id": "IC_kwDOAOvK985FVCSV",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-22T14:03:55Z",
    "updated_at": "2022-06-22T14:03:55Z",
    "author_association": "MEMBER",
    "body": ">  This is not an error state, it is a success state because the intent of the caller was to get a transaction into the mempool and that is a success \r\n\r\nI do kind of agree with this statement though.\r\n\r\n ... In theory, theory and practice is the same thing... ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1163142293/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1163202931",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22093#issuecomment-1163202931",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22093",
    "id": 1163202931,
    "node_id": "IC_kwDOAOvK985FVRFz",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-22T14:47:58Z",
    "updated_at": "2022-06-22T14:47:58Z",
    "author_association": "MEMBER",
    "body": "While I wouldn't be ecstatic about it, I would accept at least returning the transaction hash in the `AlreadyKnown` case.  In this scenario you presumably have identified the presence of that transaction in the mempool so no additional work would be required, and you can simply choose to send back success instead of failure.\r\n\r\nSeparately, for the scenario you mentioned it *feels* to me like doing the lookup you described would be the right course of action here.  Is the concern that this would turn a lightweight call into a heavyweight one in some scenarios, or that it adds significant complexity to what is currently a simple codepath?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1163202931/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
