{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25169",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25169/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25169/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25169/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/25169",
  "id": 1284098957,
  "node_id": "I_kwDOAOvK985MicuN",
  "number": 25169,
  "title": "JS tracer `log.memory` object does not handle uninitialized memory correctly",
  "user": {
    "login": "danielmh0",
    "id": 55253812,
    "node_id": "MDQ6VXNlcjU1MjUzODEy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55253812?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/danielmh0",
    "html_url": "https://github.com/danielmh0",
    "followers_url": "https://api.github.com/users/danielmh0/followers",
    "following_url": "https://api.github.com/users/danielmh0/following{/other_user}",
    "gists_url": "https://api.github.com/users/danielmh0/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/danielmh0/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/danielmh0/subscriptions",
    "organizations_url": "https://api.github.com/users/danielmh0/orgs",
    "repos_url": "https://api.github.com/users/danielmh0/repos",
    "events_url": "https://api.github.com/users/danielmh0/events{/privacy}",
    "received_events_url": "https://api.github.com/users/danielmh0/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "s1na",
    "id": 1591639,
    "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/s1na",
    "html_url": "https://github.com/s1na",
    "followers_url": "https://api.github.com/users/s1na/followers",
    "following_url": "https://api.github.com/users/s1na/following{/other_user}",
    "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
    "organizations_url": "https://api.github.com/users/s1na/orgs",
    "repos_url": "https://api.github.com/users/s1na/repos",
    "events_url": "https://api.github.com/users/s1na/events{/privacy}",
    "received_events_url": "https://api.github.com/users/s1na/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-06-24T19:10:24Z",
  "updated_at": "2022-09-26T07:56:46Z",
  "closed_at": "2022-09-26T07:56:46Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: `1.10.19-stable`\r\nOS & Version: Windows/Linux/OSX\r\n\r\n#### Expected behaviour\r\nIn `debug_traceTransaction`, with a custom JavaScript tracer, accessing `log.memory.slice()` on uninitialized memory should return zero'd bytes.\r\n\r\n#### Actual behaviour\r\nThere is an error `Tracer access out of bound memory` from https://sourcegraph.com/github.com/ethereum/go-ethereum/-/blob/eth/tracers/js/goja.go?L453.\r\n\r\nSome smart contracts make CALLs pointing to uninitialized (0) memory, but geth will not expand the memory buffer until after the CALL is executed. But the tracer needs to access the memory before the CALL, in order to extract input data (particularly in case the CALL eventually fails). \r\n\r\n#### Steps to reproduce the behaviour\r\nHere is a mainnet transaction that refers to unininitalized memory for a CALL's input data: https://etherscan.io/tx/0x65546ff3a5ff18b06226d1f1af4f9386d9dfd8a0e37afd1871ffa73a863bbd58\r\n\r\nTo reproduce, use the following simple tracer:\r\n```bash\r\n$ curl -H 'Content-Type: application/json' -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"debug_traceTransaction\",\"params\":[\"0x65546ff3a5ff18b06226d1f1af4f9386d9dfd8a0e37afd1871ffa73a863bbd58\", {\"tracer\": \"{ step(log,db){ if(log.op.toString() === '\"'\"'CALL'\"'\"') { const inputOffset = log.stack.peek(3).valueOf(); const inputLength = log.stack.peek(4).valueOf();  const inputEnd = inputOffset + inputLength; log.memory.slice(inputOffset, inputLength); } }, fault(log,db){}, result(){ return '\"'\"'success'\"'\"'; } }\"}] ,\"id\":\"test\"}' GETH_ARCHIVE_HOST:8544\r\n```\r\n\r\nResult on erigon:\r\n```\r\n{\"jsonrpc\":\"2.0\",\"id\":\"test\",\"result\":\"success\"}\r\n```\r\n\r\nResult on geth:\r\n```\r\n{\"jsonrpc\":\"2.0\",\"id\":\"test\",\"error\":{\"code\":-32000,\"message\":\"Tracer accessed out of bound memory: available 288, offset 0, size 304 at step (\\u003ceval\\u003e:1:212(41))    in server-side tracer function 'step'\"}}\r\n```",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25169/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25169/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1167209049",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25169#issuecomment-1167209049",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25169",
    "id": 1167209049,
    "node_id": "IC_kwDOAOvK985FkjJZ",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-27T11:02:15Z",
    "updated_at": "2022-06-27T11:02:15Z",
    "author_association": "MEMBER",
    "body": "Yes there was a change of behaviour as of this PR: https://github.com/ethereum/go-ethereum/pull/24867 where the tracer now reports memory pre-expansion. This was done for consistency reasons. Everything else the tracer emitted was for pre-opcode-execution and memory expansion.\r\n\r\nI also noticed recently this causes the `callTracerLegacy` to fail on various mainnet txes with the same error. But `callTracer` works which is the recommended tracer.\r\n\r\nHave you considered using the `enter` hook to get the calldata? This is a recent feature. You can see the docs here: https://geth.ethereum.org/docs/rpc/ns-debug#enter--exit. For example:\r\n\r\nhttps://github.com/s1na/go-ethereum/blob/a1e77af4182054684dae9cbe148df973f07184c4/eth/tracers/internal/tracers/call_tracer_js.js#L54",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1167209049/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1167423175",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25169#issuecomment-1167423175",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25169",
    "id": 1167423175,
    "node_id": "IC_kwDOAOvK985FlXbH",
    "user": {
      "login": "danielmh0",
      "id": 55253812,
      "node_id": "MDQ6VXNlcjU1MjUzODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/55253812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielmh0",
      "html_url": "https://github.com/danielmh0",
      "followers_url": "https://api.github.com/users/danielmh0/followers",
      "following_url": "https://api.github.com/users/danielmh0/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielmh0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielmh0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielmh0/subscriptions",
      "organizations_url": "https://api.github.com/users/danielmh0/orgs",
      "repos_url": "https://api.github.com/users/danielmh0/repos",
      "events_url": "https://api.github.com/users/danielmh0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielmh0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-27T14:25:49Z",
    "updated_at": "2022-06-27T14:25:49Z",
    "author_association": "NONE",
    "body": "`enter` would be good for this, yes, but I'd like to keep a single tracer compatible with old+new versions of geth, as well as erigon.\r\n\r\nThis is still technically a bug, because the bytes are defined to be 0 even before they are read/written by the EVM, right? If we don't want to modify the actual buffer, the tracer hook can just pad 0s?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1167423175/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1169789598",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25169#issuecomment-1169789598",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25169",
    "id": 1169789598,
    "node_id": "IC_kwDOAOvK985FuZKe",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-29T10:05:52Z",
    "updated_at": "2022-06-29T10:07:01Z",
    "author_association": "MEMBER",
    "body": "@holiman What do you say? on the one hand we have memory pre-allocation, and on the other getting a out-of-bounds slice of memory panics.\r\n\r\nMy gut says padding memory in the tracer with zeros might hide user mistakes?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1169789598/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1170921850",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25169#issuecomment-1170921850",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25169",
    "id": 1170921850,
    "node_id": "IC_kwDOAOvK985Fytl6",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-30T08:26:59Z",
    "updated_at": "2022-06-30T08:26:59Z",
    "author_association": "MEMBER",
    "body": "I think the consensus was to allow OOB accesses (within some limits, e.g. 1MB) and pad it with zeroes. It's the simplest and is consistent with how EVM initializes memory.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1170921850/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
