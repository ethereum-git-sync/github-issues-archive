{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22040",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22040/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22040/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22040/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/22040",
  "id": 771528315,
  "node_id": "MDU6SXNzdWU3NzE1MjgzMTU=",
  "number": 22040,
  "title": "command option to specify different ports for discovery (UDP) and listening (TCP)",
  "user": {
    "login": "salanfe",
    "id": 7328581,
    "node_id": "MDQ6VXNlcjczMjg1ODE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7328581?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/salanfe",
    "html_url": "https://github.com/salanfe",
    "followers_url": "https://api.github.com/users/salanfe/followers",
    "following_url": "https://api.github.com/users/salanfe/following{/other_user}",
    "gists_url": "https://api.github.com/users/salanfe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/salanfe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/salanfe/subscriptions",
    "organizations_url": "https://api.github.com/users/salanfe/orgs",
    "repos_url": "https://api.github.com/users/salanfe/repos",
    "events_url": "https://api.github.com/users/salanfe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/salanfe/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    },
    {
      "id": 1380070748,
      "node_id": "MDU6TGFiZWwxMzgwMDcwNzQ4",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/area:p2p",
      "name": "area:p2p",
      "color": "ea9adb",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2020-12-20T06:55:39Z",
  "updated_at": "2022-06-28T15:26:17Z",
  "closed_at": "2022-06-28T15:25:57Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# Rationale\r\n\r\ncurrently the flag `--port value` of the [networking options](https://geth.ethereum.org/docs/interface/command-line-options) sets the **same port** for both UDP and TCP connections.\r\n\r\nThe issue is that Kubernetes does not support `Service` of type `LoadBalancer` with mix protocol on the same port. Creating the following `Service`:\r\n\r\n```yaml\r\napiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  name: geth-p2p\r\n  labels:\r\n    app: geth-p2p\r\nspec:\r\n  type: LoadBalancer\r\n  selector:\r\n    app: geth\r\n  ports:\r\n    - name: listening\r\n      port: 30303\r\n      targetPort: 30303\r\n      protocol: TCP\r\n    - name: discovery\r\n      port: 30303\r\n      targetPort: 30303\r\n      protocol: UDP\r\n```\r\n\r\nfails with the error:\r\n\r\n```\r\nthe Service \"geth-p2p\" is invalid: spec.ports: Invalid value [...] cannot create an external load balancer with mix protocols\r\n```\r\n\r\nI'm currently deploying a eth2.0 staking system with multiple validators and kubernetes is for me the platform of choice for managing multiple workloads.\r\n\r\nThere are some workarounds like this one https://medium.com/asl19-developers/build-your-own-cloud-agnostic-tcp-udp-loadbalancer-for-your-kubernetes-apps-3959335f4ec3 but I would hope it's not necessary to rely on such hacks.\r\n\r\nHowever TCP only is working fine, my node can sync. Nonetheless, the discovery through UDP is obviously not working for workloads in kubernetes that share the same port for TCP or UDP.\r\n\r\n# Implementation\r\n\r\nI havenâ€™t looked in details in the code-base what would be the effort to decouple the 2 protocols. I believe I would start from there https://github.com/ethereum/go-ethereum/blob/053ed9cc847647a9b3ef707d0efe7104c4ab2a4c/cmd/devp2p/keycmd.go#L63",
  "closed_by": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22040/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22040/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/748595201",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22040#issuecomment-748595201",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22040",
    "id": 748595201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODU5NTIwMQ==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-20T11:29:31Z",
    "updated_at": "2020-12-20T11:29:31Z",
    "author_association": "MEMBER",
    "body": "I can understand a load balancer for the RPC port - but I fail to understand a load balancer for the P2P port. Guess this might even fail to work as the nodes will have different node-keys (hope @fjl can chime in here). Can you elaborate a bit why you want a load balancer in front of the P2P port?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/748595201/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/748606820",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22040#issuecomment-748606820",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22040",
    "id": 748606820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODYwNjgyMA==",
    "user": {
      "login": "salanfe",
      "id": 7328581,
      "node_id": "MDQ6VXNlcjczMjg1ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7328581?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/salanfe",
      "html_url": "https://github.com/salanfe",
      "followers_url": "https://api.github.com/users/salanfe/followers",
      "following_url": "https://api.github.com/users/salanfe/following{/other_user}",
      "gists_url": "https://api.github.com/users/salanfe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/salanfe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/salanfe/subscriptions",
      "organizations_url": "https://api.github.com/users/salanfe/orgs",
      "repos_url": "https://api.github.com/users/salanfe/repos",
      "events_url": "https://api.github.com/users/salanfe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/salanfe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-20T13:18:31Z",
    "updated_at": "2020-12-20T13:18:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @ligi for the comment. Here the LoadBalancer has a 1 to 1 relationship with the stateful upstream Geth node. The LoadBalancer service is just a way to expose Geth to the outside world so that ingress TCP (and UDP) traffic can reach the node ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/748606820/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/749716125",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22040#issuecomment-749716125",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22040",
    "id": 749716125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTcxNjEyNQ==",
    "user": {
      "login": "salanfe",
      "id": 7328581,
      "node_id": "MDQ6VXNlcjczMjg1ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7328581?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/salanfe",
      "html_url": "https://github.com/salanfe",
      "followers_url": "https://api.github.com/users/salanfe/followers",
      "following_url": "https://api.github.com/users/salanfe/following{/other_user}",
      "gists_url": "https://api.github.com/users/salanfe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/salanfe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/salanfe/subscriptions",
      "organizations_url": "https://api.github.com/users/salanfe/orgs",
      "repos_url": "https://api.github.com/users/salanfe/repos",
      "events_url": "https://api.github.com/users/salanfe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/salanfe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-22T18:50:55Z",
    "updated_at": "2020-12-22T18:50:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ligi i[n the doc](https://eth.wiki/en/fundamentals/enode-url-format), and from the logs of my node, I see that there is a `discport`. Example\r\n\r\n```\r\nenode://6f8a80d14311c39f35f516fa664deaaaa13e85b2f7493f37f6144d86991ec012937307647bd3b9a82abe2974e1407241d54947bbb39763a4cac9f77166ad92a0@10.3.58.6:30303?discport=30301\r\n```\r\n\r\nHowever I fail to understand how to set this discport. Do you have a hint ?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/749716125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/750282351",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22040#issuecomment-750282351",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22040",
    "id": 750282351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MDI4MjM1MQ==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-23T12:46:21Z",
    "updated_at": "2020-12-23T12:46:21Z",
    "author_association": "MEMBER",
    "body": "This is totally possible to implement, we just need to do it. The best place for this would be a new field in p2p.Config, then pass that through from cmd/utils/flags.go initialization code.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/750282351/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/848251349",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22040#issuecomment-848251349",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22040",
    "id": 848251349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0ODI1MTM0OQ==",
    "user": {
      "login": "ioitiki",
      "id": 26385844,
      "node_id": "MDQ6VXNlcjI2Mzg1ODQ0",
      "avatar_url": "https://avatars.githubusercontent.com/u/26385844?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ioitiki",
      "html_url": "https://github.com/ioitiki",
      "followers_url": "https://api.github.com/users/ioitiki/followers",
      "following_url": "https://api.github.com/users/ioitiki/following{/other_user}",
      "gists_url": "https://api.github.com/users/ioitiki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ioitiki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ioitiki/subscriptions",
      "organizations_url": "https://api.github.com/users/ioitiki/orgs",
      "repos_url": "https://api.github.com/users/ioitiki/repos",
      "events_url": "https://api.github.com/users/ioitiki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ioitiki/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-25T20:48:23Z",
    "updated_at": "2021-05-25T20:48:23Z",
    "author_association": "NONE",
    "body": "+1 This would be very useful. Is there any progress on this?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/848251349/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1105530866",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22040#issuecomment-1105530866",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22040",
    "id": 1105530866,
    "node_id": "IC_kwDOAOvK985B5Q_y",
    "user": {
      "login": "Nayshins",
      "id": 5025057,
      "node_id": "MDQ6VXNlcjUwMjUwNTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5025057?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nayshins",
      "html_url": "https://github.com/Nayshins",
      "followers_url": "https://api.github.com/users/Nayshins/followers",
      "following_url": "https://api.github.com/users/Nayshins/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nayshins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nayshins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nayshins/subscriptions",
      "organizations_url": "https://api.github.com/users/Nayshins/orgs",
      "repos_url": "https://api.github.com/users/Nayshins/repos",
      "events_url": "https://api.github.com/users/Nayshins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nayshins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-21T17:53:02Z",
    "updated_at": "2022-04-21T17:53:02Z",
    "author_association": "NONE",
    "body": "Here is a workaround for the time being: https://people.lsdopen.io/gke-mixed-udp-tcp-loadbalancer/",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1105530866/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1139129444",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22040#issuecomment-1139129444",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22040",
    "id": 1139129444,
    "node_id": "IC_kwDOAOvK985D5bxk",
    "user": {
      "login": "zeim839",
      "id": 50573884,
      "node_id": "MDQ6VXNlcjUwNTczODg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/50573884?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zeim839",
      "html_url": "https://github.com/zeim839",
      "followers_url": "https://api.github.com/users/zeim839/followers",
      "following_url": "https://api.github.com/users/zeim839/following{/other_user}",
      "gists_url": "https://api.github.com/users/zeim839/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zeim839/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zeim839/subscriptions",
      "organizations_url": "https://api.github.com/users/zeim839/orgs",
      "repos_url": "https://api.github.com/users/zeim839/repos",
      "events_url": "https://api.github.com/users/zeim839/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zeim839/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-26T23:03:07Z",
    "updated_at": "2022-05-26T23:03:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey all, here's a proposed solution:\r\n\r\nCreate a new discport flag in [networking settings](https://github.com/ethereum/go-ethereum/blob/master/cmd/utils/flags.go#L687):\r\n```go\r\n// ...\r\nDiscPortFlag = cli.IntFlag {\r\n    Name:  \"discport\",\r\n    Usage: \"Use a custom UDP port for P2P discovery\",\r\n    Value: 30303,\r\n}\r\n```\r\n\r\nAdd the flag to geth's [node options](https://github.com/ethereum/go-ethereum/blob/master/cmd/geth/main.go#L121):\r\n```go\r\nutils.DiscPortFlag\r\n```\r\n\r\nCreate a DiscAddr config parameter in P2P's [server](https://github.com/ethereum/go-ethereum/blob/master/p2p/server.go#L137):\r\n```go\r\nDiscAddr string\r\n```\r\n\r\nModify the flag parser's [setListenAddress](https://github.com/ethereum/go-ethereum/blob/master/cmd/utils/flags.go#L986) to interpret the new flag and P2P server config parameter:\r\n```go\r\nfunc setListenAddress(ctx *cli.Context, cfg *p2p.Config) {\r\n\tif ctx.GlobalIsSet(ListenPortFlag.Name) {\r\n\t\tcfg.ListenAddr = fmt.Sprintf(\":%d\", ctx.GlobalInt(ListenPortFlag.Name))\r\n\t}\r\n\tif ctx.GlobalIsSet(DiscPortFlag.Name) {\r\n\t\tcfg.DiscAddr = fmt.Sprintf(\":%d\", ctx.GlobalInt(DiscPortFlag.Name))\r\n\t}\r\n}\r\n```\r\n\r\nModify the P2P server's [setupDiscovery](https://github.com/ethereum/go-ethereum/blob/master/p2p/server.go#L552) to initialize with the custom port:\r\n```go\r\nfunc (srv *Server) setupDiscovery() error {\r\n        // ...\r\n\r\n        if srv.NoDiscovery && !srv.DiscoveryV5 {\r\n\t\treturn nil\r\n\t}\r\n\r\n        // MODIFICATION:\r\n\tlistenAddr := srv.ListenAddr\r\n\tif (srv.DiscAddr != \"\") {\r\n\t\tlistenAddr = srv.Config.DiscAddr\r\n\t}\r\n\r\n\taddr, err := net.ResolveUDPAddr(\"udp\", listenAddr)\r\n\tif err != nil {\r\n\t\treturn err\r\n\t}\r\n\r\n        // ...\r\n}\r\n```\r\n\r\nNow, running geth with the flag:\r\n```\r\ngeth --discport=1234\r\n```\r\n\r\nYields an enode address with a custom UDP discport:\r\n```\r\nINFO [05-26|18:39:44.962] Started P2P networking                   self=\"enode://<id>@127.0.0.1:30303?discport=1234\"\r\n```\r\n\r\nLet me know what you all think. Note that If this is implemented then the command will also have to be included in `--help`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1139129444/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1168870288",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22040#issuecomment-1168870288",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22040",
    "id": 1168870288,
    "node_id": "IC_kwDOAOvK985Fq4uQ",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-28T15:26:17Z",
    "updated_at": "2022-06-28T15:26:17Z",
    "author_association": "MEMBER",
    "body": "Flag `--discovery.port` added in #24979 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1168870288/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 2,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
