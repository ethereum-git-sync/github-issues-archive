{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22261",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22261/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22261/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22261/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/22261",
  "id": 798812319,
  "node_id": "MDU6SXNzdWU3OTg4MTIzMTk=",
  "number": 22261,
  "title": "Simulated Backend Math Based Operations Dont Necessarily Match Expected Results",
  "user": {
    "login": "bonedaddy",
    "id": 17089485,
    "node_id": "MDQ6VXNlcjE3MDg5NDg1",
    "avatar_url": "https://avatars.githubusercontent.com/u/17089485?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bonedaddy",
    "html_url": "https://github.com/bonedaddy",
    "followers_url": "https://api.github.com/users/bonedaddy/followers",
    "following_url": "https://api.github.com/users/bonedaddy/following{/other_user}",
    "gists_url": "https://api.github.com/users/bonedaddy/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bonedaddy/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bonedaddy/subscriptions",
    "organizations_url": "https://api.github.com/users/bonedaddy/orgs",
    "repos_url": "https://api.github.com/users/bonedaddy/repos",
    "events_url": "https://api.github.com/users/bonedaddy/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bonedaddy/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2021-02-02T00:15:32Z",
  "updated_at": "2021-02-18T09:49:55Z",
  "closed_at": "2021-02-18T09:49:55Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I'm attempting to port some math contracts from the balancer system into Golang equivalents. To run tests locally I'm using the simulated backend to deploy the contracts and test them.\r\n\r\nI'm using the following contract\r\n\r\n```javascript\r\n// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.8.0;\r\n\r\n/************************************************************************************************\r\nOriginally from https://github.com/balancer-labs/balancer-core/blob/master/contracts/BNum.sol\r\n\r\nThis source code has been modified from the original, which was copied from the github repository\r\nat commit hash f4ed5d65362a8d6cec21662fb6eae233b0babc1f.\r\n\r\nSubject to the GPL-3.0 license\r\n*************************************************************************************************/\r\n\r\ncontract BConst {\r\n  uint256 public constant VERSION_NUMBER = 1;\r\n\r\n/* ---  Weight Updates  --- */\r\n\r\n  // Minimum time passed between each weight update for a token.\r\n  uint256 public constant WEIGHT_UPDATE_DELAY = 1 hours;\r\n\r\n  // Maximum percent by which a weight can adjust at a time\r\n  // relative to the current weight.\r\n  // The number of iterations needed to move from weight A to weight B is the floor of:\r\n  // (A > B): (ln(A) - ln(B)) / ln(1.01)\r\n  // (B > A): (ln(A) - ln(B)) / ln(0.99)\r\n  uint256 public constant WEIGHT_CHANGE_PCT = BONE/100;\r\n\r\n  uint256 public constant BONE = 10**18;\r\n\r\n  uint256 public constant MIN_BOUND_TOKENS = 2;\r\n  uint256 public constant MAX_BOUND_TOKENS = 10;\r\n\r\n  // Minimum swap fee.\r\n  uint256 public constant MIN_FEE = BONE / 10**6;\r\n  // Maximum swap or exit fee.\r\n  uint256 public constant MAX_FEE = BONE / 10;\r\n  // Actual exit fee.\r\n  uint256 public constant EXIT_FEE = 0;\r\n\r\n  // Default total of all desired weights. Can differ by up to BONE.\r\n  uint256 public constant DEFAULT_TOTAL_WEIGHT = BONE * 25;\r\n  // Minimum weight for any token (1/100).\r\n  uint256 public constant MIN_WEIGHT = BONE / 4;\r\n  uint256 public constant MAX_WEIGHT = BONE * 25;\r\n  // Maximum total weight.\r\n  uint256 public constant MAX_TOTAL_WEIGHT = BONE * 26;\r\n  // Minimum balance for a token (only applied at initialization)\r\n  uint256 public constant MIN_BALANCE = BONE / 10**12;\r\n  // Initial pool tokens\r\n  uint256 public constant INIT_POOL_SUPPLY = BONE * 100;\r\n\r\n  uint256 public constant MIN_BPOW_BASE = 1 wei;\r\n  uint256 public constant MAX_BPOW_BASE = (2 * BONE) - 1 wei;\r\n  uint256 public constant BPOW_PRECISION = BONE / 10**10;\r\n\r\n  // Maximum ratio of input tokens to balance for swaps.\r\n  uint256 public constant MAX_IN_RATIO = BONE / 2;\r\n  // Maximum ratio of output tokens to balance for swaps.\r\n  uint256 public constant MAX_OUT_RATIO = (BONE / 3) + 1 wei;\r\n}\r\n\r\ncontract BNum is BConst {\r\n  function btoi(uint256 a) public pure returns (uint256) {\r\n    return a / BONE;\r\n  }\r\n\r\n  function bfloor(uint256 a) public pure returns (uint256) {\r\n    return btoi(a) * BONE;\r\n  }\r\n\r\n  function badd(uint256 a, uint256 b) public pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"ERR_ADD_OVERFLOW\");\r\n    return c;\r\n  }\r\n\r\n  function bsub(uint256 a, uint256 b) public pure returns (uint256) {\r\n    (uint256 c, bool flag) = bsubSign(a, b);\r\n    require(!flag, \"ERR_SUB_UNDERFLOW\");\r\n    return c;\r\n  }\r\n\r\n  function bsubSign(uint256 a, uint256 b)\r\n    public\r\n    pure\r\n    returns (uint256, bool)\r\n  {\r\n    if (a >= b) {\r\n      return (a - b, false);\r\n    } else {\r\n      return (b - a, true);\r\n    }\r\n  }\r\n\r\n  function bmul(uint256 a, uint256 b) public pure returns (uint256) {\r\n    uint256 c0 = a * b;\r\n    require(a == 0 || c0 / a == b, \"ERR_MUL_OVERFLOW\");\r\n    uint256 c1 = c0 + (BONE / 2);\r\n    require(c1 >= c0, \"ERR_MUL_OVERFLOW\");\r\n    uint256 c2 = c1 / BONE;\r\n    return c2;\r\n  }\r\n\r\n  function bdiv(uint256 a, uint256 b) public pure returns (uint256) {\r\n    require(b != 0, \"ERR_DIV_ZERO\");\r\n    uint256 c0 = a * BONE;\r\n    require(a == 0 || c0 / a == BONE, \"ERR_DIV_INTERNAL\"); // bmul overflow\r\n    uint256 c1 = c0 + (b / 2);\r\n    require(c1 >= c0, \"ERR_DIV_INTERNAL\"); //  badd require\r\n    uint256 c2 = c1 / b;\r\n    return c2;\r\n  }\r\n\r\n  // DSMath.wpow\r\n  function bpowi(uint256 a, uint256 n) public pure returns (uint256) {\r\n    uint256 z = n % 2 != 0 ? a : BONE;\r\n\r\n    for (n /= 2; n != 0; n /= 2) {\r\n      a = bmul(a, a);\r\n\r\n      if (n % 2 != 0) {\r\n        z = bmul(z, a);\r\n      }\r\n    }\r\n    return z;\r\n  }\r\n\r\n  // Compute b^(e.w) by splitting it into (b^e)*(b^0.w).\r\n  // Use `bpowi` for `b^e` and `bpowK` for k iterations\r\n  // of approximation of b^0.w\r\n  function bpow(uint256 base, uint256 exp) public pure returns (uint256) {\r\n    require(base >= MIN_BPOW_BASE, \"ERR_BPOW_BASE_TOO_LOW\");\r\n    require(base <= MAX_BPOW_BASE, \"ERR_BPOW_BASE_TOO_HIGH\");\r\n\r\n    uint256 whole = bfloor(exp);\r\n    uint256 remain = bsub(exp, whole);\r\n\r\n    uint256 wholePow = bpowi(base, btoi(whole));\r\n\r\n    if (remain == 0) {\r\n      return wholePow;\r\n    }\r\n\r\n    uint256 partialResult = bpowApprox(base, remain, BPOW_PRECISION);\r\n    return bmul(wholePow, partialResult);\r\n  }\r\n\r\n  function bpowApprox(\r\n    uint256 base,\r\n    uint256 exp,\r\n    uint256 precision\r\n  ) public pure returns (uint256) {\r\n    // term 0:\r\n    uint256 a = exp;\r\n    (uint256 x, bool xneg) = bsubSign(base, BONE);\r\n    uint256 term = BONE;\r\n    uint256 sum = term;\r\n    bool negative = false;\r\n\r\n    // term(k) = numer / denom\r\n    //         = (product(a - i - 1, i=1-->k) * x^k) / (k!)\r\n    // each iteration, multiply previous term by (a-(k-1)) * x / k\r\n    // continue until term is less than precision\r\n    for (uint256 i = 1; term >= precision; i++) {\r\n      uint256 bigK = i * BONE;\r\n      (uint256 c, bool cneg) = bsubSign(a, bsub(bigK, BONE));\r\n      term = bmul(term, bmul(c, x));\r\n      term = bdiv(term, bigK);\r\n      if (term == 0) break;\r\n\r\n      if (xneg) negative = !negative;\r\n      if (cneg) negative = !negative;\r\n      if (negative) {\r\n        sum = bsub(sum, term);\r\n      } else {\r\n        sum = badd(sum, term);\r\n      }\r\n    }\r\n\r\n    return sum;\r\n  }\r\n}\r\n```\r\n\r\nIn the case of the `Bpowi` function when supplying the following values:\r\n\r\n* `a` = `9999`\r\n* `b` = `1`\r\n\r\nThe returned value should be `9999` but the simulated backend is giving `1000000000000000000`.\r\n\r\nI'm using go-ethereum 1.9.25 and using contract bindings generated by `abigen`. So far the only problematic function I've experienced with the simulated backend is `Bpowi`",
  "closed_by": {
    "login": "bonedaddy",
    "id": 17089485,
    "node_id": "MDQ6VXNlcjE3MDg5NDg1",
    "avatar_url": "https://avatars.githubusercontent.com/u/17089485?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bonedaddy",
    "html_url": "https://github.com/bonedaddy",
    "followers_url": "https://api.github.com/users/bonedaddy/followers",
    "following_url": "https://api.github.com/users/bonedaddy/following{/other_user}",
    "gists_url": "https://api.github.com/users/bonedaddy/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bonedaddy/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bonedaddy/subscriptions",
    "organizations_url": "https://api.github.com/users/bonedaddy/orgs",
    "repos_url": "https://api.github.com/users/bonedaddy/repos",
    "events_url": "https://api.github.com/users/bonedaddy/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bonedaddy/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22261/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22261/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/772465965",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22261#issuecomment-772465965",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22261",
    "id": 772465965,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MjQ2NTk2NQ==",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-03T12:17:26Z",
    "updated_at": "2021-02-03T12:17:34Z",
    "author_association": "MEMBER",
    "body": "Hmm it works for me (I compiled with solidity 0.6.5)\r\n```go\r\nfunc TestStruct(t *testing.T) {\r\n\t// Generate a new random account and a funded simulator\r\n\tkey, _ := crypto.GenerateKey()\r\n\tauth, _ := bind.NewKeyedTransactorWithChainID(key, big.NewInt(1337))\r\n\r\n\tsim := backends.NewSimulatedBackend(core.GenesisAlloc{auth.From: {Balance: big.NewInt(10000000000)}}, 10000000)\r\n\tdefer sim.Close()\r\n\r\n\t// Deploy a structs method invoker contract and execute its default method\r\n\t_, _, structs, err := DeployBNum(auth, sim)\r\n\tif err != nil {\r\n\t\tt.Fatalf(\"Failed to deploy defaulter contract: %v\", err)\r\n\t}\r\n\tsim.Commit()\r\n\tout, err := structs.Bpowi(nil, big.NewInt(9999), big.NewInt(1))\r\n\tif err != nil {\r\n\t\tt.Fatalf(\"Failed to deploy defaulter contract: %v\", err)\r\n\t}\r\n\tpanic(out) // panic: 9999\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/772465965/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/773613744",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22261#issuecomment-773613744",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22261",
    "id": 773613744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzYxMzc0NA==",
    "user": {
      "login": "bonedaddy",
      "id": 17089485,
      "node_id": "MDQ6VXNlcjE3MDg5NDg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17089485?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bonedaddy",
      "html_url": "https://github.com/bonedaddy",
      "followers_url": "https://api.github.com/users/bonedaddy/followers",
      "following_url": "https://api.github.com/users/bonedaddy/following{/other_user}",
      "gists_url": "https://api.github.com/users/bonedaddy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bonedaddy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bonedaddy/subscriptions",
      "organizations_url": "https://api.github.com/users/bonedaddy/orgs",
      "repos_url": "https://api.github.com/users/bonedaddy/repos",
      "events_url": "https://api.github.com/users/bonedaddy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bonedaddy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-04T21:25:35Z",
    "updated_at": "2021-02-04T21:25:35Z",
    "author_association": "NONE",
    "body": "@MariusVanDerWijden can you try using solidity compilers 0.7.0 or in the `0.7.x` range?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/773613744/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/773945199",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22261#issuecomment-773945199",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22261",
    "id": 773945199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3Mzk0NTE5OQ==",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-05T10:28:51Z",
    "updated_at": "2021-02-05T10:28:51Z",
    "author_association": "MEMBER",
    "body": "Recompiled with still produces 9999\r\n```\r\nsolc, the solidity compiler commandline interface\r\nVersion: 0.7.0+commit.9e61f92b.Linux.g++\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/773945199/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/774363183",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22261#issuecomment-774363183",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22261",
    "id": 774363183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NDM2MzE4Mw==",
    "user": {
      "login": "bonedaddy",
      "id": 17089485,
      "node_id": "MDQ6VXNlcjE3MDg5NDg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17089485?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bonedaddy",
      "html_url": "https://github.com/bonedaddy",
      "followers_url": "https://api.github.com/users/bonedaddy/followers",
      "following_url": "https://api.github.com/users/bonedaddy/following{/other_user}",
      "gists_url": "https://api.github.com/users/bonedaddy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bonedaddy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bonedaddy/subscriptions",
      "organizations_url": "https://api.github.com/users/bonedaddy/orgs",
      "repos_url": "https://api.github.com/users/bonedaddy/repos",
      "events_url": "https://api.github.com/users/bonedaddy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bonedaddy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-06T00:46:08Z",
    "updated_at": "2021-02-06T00:46:08Z",
    "author_association": "NONE",
    "body": ":confused: ill do some more testing i guess.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/774363183/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/781158325",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22261#issuecomment-781158325",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22261",
    "id": 781158325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTE1ODMyNQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-18T08:29:52Z",
    "updated_at": "2021-02-18T08:29:52Z",
    "author_association": "MEMBER",
    "body": "Can this be closed? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/781158325/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/781221700",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22261#issuecomment-781221700",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22261",
    "id": 781221700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTIyMTcwMA==",
    "user": {
      "login": "bonedaddy",
      "id": 17089485,
      "node_id": "MDQ6VXNlcjE3MDg5NDg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17089485?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bonedaddy",
      "html_url": "https://github.com/bonedaddy",
      "followers_url": "https://api.github.com/users/bonedaddy/followers",
      "following_url": "https://api.github.com/users/bonedaddy/following{/other_user}",
      "gists_url": "https://api.github.com/users/bonedaddy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bonedaddy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bonedaddy/subscriptions",
      "organizations_url": "https://api.github.com/users/bonedaddy/orgs",
      "repos_url": "https://api.github.com/users/bonedaddy/repos",
      "events_url": "https://api.github.com/users/bonedaddy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bonedaddy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-18T09:49:55Z",
    "updated_at": "2021-02-18T09:49:55Z",
    "author_association": "NONE",
    "body": "Yea i think this can be closed, looks like some transient issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/781221700/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
