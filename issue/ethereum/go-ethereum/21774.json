{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21774",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21774/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21774/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21774/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/21774",
  "id": 734448332,
  "node_id": "MDU6SXNzdWU3MzQ0NDgzMzI=",
  "number": 21774,
  "title": "admin.addPeer not symmetric to admin.addTrustedPeer",
  "user": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1380070748,
      "node_id": "MDU6TGFiZWwxMzgwMDcwNzQ4",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/area:p2p",
      "name": "area:p2p",
      "color": "ea9adb",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2020-11-02T11:59:59Z",
  "updated_at": "2024-01-12T23:21:41Z",
  "closed_at": "2020-11-19T10:15:11Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "These two methods should allow configuring persistent connections that have higher priority and guarantees than all the others. `addTrustedPeer` should ensure that a remote dial is always permitted (independent of limits) and `addPeer` should ensure that a dial is always attempted, if not connected yet.\r\n\r\nUnfortunately, `addPeer` is limited by the node's maximum configured peer count, independent if the remote node is considered trusted or not. This is a problem, because if 2 nodes are fully saturated with peers, it makes it impossible to connect them as neither will dial from their own initiative.\r\n\r\nThe fix could be:\r\n\r\n- Make `addPeer` (static peers) ignore the maximum allowance. This seems simpler, but it might break people's setup who've been adding peers via shared lists (especially on Ropsten), since all of a sudden they'd try to dial hundreds of nodes.\r\n- Make `addTrustedPeer` (trusted peers) also have an effect on outboud dials, so that if a remote peer is trusted and we're attempting to dial it, it should not take into consideration the peer count limit.\r\n\r\nEither solution would work, but one of them is needed, otherwise manual peering is not reliably possible.\r\n\r\nEdit: An example is running a publicly routed node with only-manual connections. Ideally we'd run with `--nodiscover --maxpeers=0` and manually add peers, but the maxpeer limit prevents us from dialing out. Removing the maxpeer limit also permits inbound dials, so if the node was already in the DHT it will get insta-flooded (and then have no more room to manually dial). Connecting remotely to our node has the same fault that long running existing nodes will be already saturated networking wise so they'll not dial.",
  "closed_by": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21774/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21774/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/730271491",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21774#issuecomment-730271491",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21774",
    "id": 730271491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMDI3MTQ5MQ==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-19T10:15:08Z",
    "updated_at": "2020-11-19T10:15:08Z",
    "author_association": "MEMBER",
    "body": "I changed the design of `addPeer` because it is a user-facing API. The addPeer function previously behaved as you request here, but had the unfortunate downside that listing, say, 500 nodes in the static-nodes.json file would create a lot of dial load.\r\n\r\n> Removing the maxpeer limit also permits inbound dials, so if the node was already in the DHT it will get insta-flooded (and then have no more room to manually dial).\r\n\r\nWe discussed this in the issue triage call today, and the solution for such issues is regenerating the node key.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/730271491/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1890133986",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21774#issuecomment-1890133986",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21774",
    "id": 1890133986,
    "node_id": "IC_kwDOAOvK985wqSfi",
    "user": {
      "login": "holisticode",
      "id": 88287,
      "node_id": "MDQ6VXNlcjg4Mjg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/88287?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holisticode",
      "html_url": "https://github.com/holisticode",
      "followers_url": "https://api.github.com/users/holisticode/followers",
      "following_url": "https://api.github.com/users/holisticode/following{/other_user}",
      "gists_url": "https://api.github.com/users/holisticode/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holisticode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holisticode/subscriptions",
      "organizations_url": "https://api.github.com/users/holisticode/orgs",
      "repos_url": "https://api.github.com/users/holisticode/repos",
      "events_url": "https://api.github.com/users/holisticode/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holisticode/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-12T23:18:50Z",
    "updated_at": "2024-01-12T23:21:41Z",
    "author_association": "MEMBER",
    "body": "Sorry to peruse this old thread again but I am stuck at an issue related to this.\r\n\r\nI am optimizing some connections. I want validators to connect to specific other nodes only. So the maximum added peercount on top of MaxPeers would only be around 10. No overkill I suppose.\r\n\r\nBut when I try to `AddTrustedPeer` for my peers, and MaxPeers is reached (testing with a deliberate low MaxPeers), then the p2p server only adds the peer to `trusted[]` but not to the connection, because the peer is not added yet (not in `peers[]`). But if I add the peer first with `AddPeer`, then obviously this will be rejected because MaxPeers is reached.\r\n\r\nCatch22. In other words I can't run dynamically `AddTrustedPeer`. I think this is what @karalabe was pointing to initially if I understand correctly.\r\n\r\nAny suggestion about how to circumvent this?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1890133986/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
