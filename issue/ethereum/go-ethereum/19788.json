{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19788",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19788/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19788/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19788/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/19788",
  "id": 463684937,
  "node_id": "MDU6SXNzdWU0NjM2ODQ5Mzc=",
  "number": 19788,
  "title": "When I run EVM in a local single server and get error evm: execution reverted when I call callcode function.",
  "user": {
    "login": "IsaacHuang",
    "id": 9307402,
    "node_id": "MDQ6VXNlcjkzMDc0MDI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9307402?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/IsaacHuang",
    "html_url": "https://github.com/IsaacHuang",
    "followers_url": "https://api.github.com/users/IsaacHuang/followers",
    "following_url": "https://api.github.com/users/IsaacHuang/following{/other_user}",
    "gists_url": "https://api.github.com/users/IsaacHuang/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/IsaacHuang/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/IsaacHuang/subscriptions",
    "organizations_url": "https://api.github.com/users/IsaacHuang/orgs",
    "repos_url": "https://api.github.com/users/IsaacHuang/repos",
    "events_url": "https://api.github.com/users/IsaacHuang/events{/privacy}",
    "received_events_url": "https://api.github.com/users/IsaacHuang/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1132754722,
      "node_id": "MDU6TGFiZWwxMTMyNzU0NzIy",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/need:more-information",
      "name": "need:more-information",
      "color": "db6fa3",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2019-07-03T10:56:21Z",
  "updated_at": "2019-08-02T16:09:28Z",
  "closed_at": "2019-08-02T16:09:28Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I run the EVM on my single server.\r\nHere is my test code\r\n```\r\nfunc NewContext() Params {\r\n  var param Params\r\n  canTransferFunc := func(db vm.StateDB, addr common.Address, amount *big.Int) bool {\r\n    return true\r\n  }\r\n  transferFunc := func(db vm.StateDB, sender, recipient common.Address, amount *big.Int) {\r\n  }\r\n  getHashFunc := func(height uint64) common.Hash {\r\n    return common.HexToHash(\"0x1A0b54D5dc17e0AadC383d2db43B0a0D3E029c4c\")//common.Hash{}\r\n  }\r\n  fromAddress := common.BytesToAddress([]byte(\"0x\"))\r\n  //coinbase := common.BytesToAddress([]byte(\"0x5A0b54D5dc17e0AadC383d2db43B0a0D3E029c4c\"))\r\n  coinbase := common.BytesToAddress([]byte(\"0x2A0b54D5dc17e0AadC383d2db43B0a0D3E029c4c\"))\r\n  param.context = vm.Context{\r\n    CanTransfer: canTransferFunc,\r\n    Transfer:    transferFunc,\r\n    GetHash:     getHashFunc,\r\n    Origin:      fromAddress,\r\n    Coinbase:    coinbase,\r\n    BlockNumber: new(big.Int).SetUint64(10000000),\r\n    Time:        new(big.Int).SetInt64(1),\r\n    GasLimit:    uint64(50000000),\r\n    GasPrice:    new(big.Int).SetInt64(100),\r\n  }\r\n  return param\r\n}\r\nret, remainingGas, err = evm.CallCode(executor, target,input, params.gaslimit, new(big.Int).SetInt64(0))\r\n```\r\n\r\nHere is my contract code :\r\n```\r\npragma solidity ^0.4.26;\r\n\r\ncontract D {\r\n  uint public n;\r\n  address public sender;\r\n\r\n  function callSetN(address _e, uint _n) {\r\n    _e.call(bytes4(sha3(\"setN(uint256)\")), _n); // E's storage is set, D is not modified \r\n  }\r\n\r\n  function callcodeSetN(address _e, uint _n) {\r\n    _e.callcode(bytes4(sha3(\"setN(uint256)\")), _n); // D's storage is set, E is not modified \r\n  }\r\n\r\n  function delegatecallSetN(address _e, uint _n) {\r\n    _e.delegatecall(bytes4(sha3(\"setN(uint256)\")), _n); // D's storage is set, E is not modified \r\n  }\r\n}\r\n\r\ncontract E {\r\n  uint public n;\r\n  address public sender;\r\n\r\n  function setN(uint _n) {\r\n    n = _n;\r\n    sender = msg.sender;\r\n    // msg.sender is D if invoked by D's callcodeSetN. None of E's storage is updated\r\n    // msg.sender is C if invoked by C.foo(). None of E's storage is updated\r\n\r\n    // the value of \"this\" is D, when invoked by either D's callcodeSetN or C.foo()\r\n  }\r\n}\r\n\r\ncontract C {\r\n    function foo(D _d, E _e, uint _n) {\r\n        _d.delegatecallSetN(_e, _n);\r\n    }\r\n}\r\n```\r\nHere is my contract step :\r\n1. Deploy contract E.\r\n2. Delploy contract D.\r\n3. Call callcodeSetN on contract D and input contract E address.\r\n4. Call n and sender on contract D to check the value.\r\n\r\nI try my contract on Remix is fine. Please help me that why I always get the \"evm: execution reverted\" message.\r\n\r\n",
  "closed_by": {
    "login": "no-response[bot]",
    "id": 32965360,
    "node_id": "MDM6Qm90MzI5NjUzNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/26350515?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/no-response%5Bbot%5D",
    "html_url": "https://github.com/apps/no-response",
    "followers_url": "https://api.github.com/users/no-response%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/no-response%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/no-response%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/no-response%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/no-response%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/no-response%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/no-response%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/no-response%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/no-response%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19788/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19788/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/508152645",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19788#issuecomment-508152645",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19788",
    "id": 508152645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwODE1MjY0NQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-03T15:55:09Z",
    "updated_at": "2019-07-03T15:55:09Z",
    "author_association": "MEMBER",
    "body": "Make sure you enabled all the fork rules. E.g. you could test via running a developer chain, that enables everything by default `geth --dev`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/508152645/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/517758168",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19788#issuecomment-517758168",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19788",
    "id": 517758168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzc1ODE2OA==",
    "user": {
      "login": "no-response[bot]",
      "id": 32965360,
      "node_id": "MDM6Qm90MzI5NjUzNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/26350515?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/no-response%5Bbot%5D",
      "html_url": "https://github.com/apps/no-response",
      "followers_url": "https://api.github.com/users/no-response%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/no-response%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/no-response%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/no-response%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/no-response%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/no-response%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/no-response%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/no-response%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/no-response%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-08-02T16:09:27Z",
    "updated_at": "2019-08-02T16:09:27Z",
    "author_association": "NONE",
    "body": "This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have more relevant information or answers to our questions so that we can investigate further.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/517758168/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
