{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24436",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24436/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24436/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24436/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/24436",
  "id": 1145132525,
  "node_id": "I_kwDOAOvK985EQVXt",
  "number": 24436,
  "title": "In GraphQL endpoints, `Account`’s `transactionCount` doesn’t take the pending status into account",
  "user": {
    "login": "amyodov",
    "id": 672311,
    "node_id": "MDQ6VXNlcjY3MjMxMQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/672311?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amyodov",
    "html_url": "https://github.com/amyodov",
    "followers_url": "https://api.github.com/users/amyodov/followers",
    "following_url": "https://api.github.com/users/amyodov/following{/other_user}",
    "gists_url": "https://api.github.com/users/amyodov/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amyodov/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amyodov/subscriptions",
    "organizations_url": "https://api.github.com/users/amyodov/orgs",
    "repos_url": "https://api.github.com/users/amyodov/repos",
    "events_url": "https://api.github.com/users/amyodov/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amyodov/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-02-20T20:59:33Z",
  "updated_at": "2022-02-22T09:45:12Z",
  "closed_at": "2022-02-22T09:45:12Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I tried to use GraphQL exclusively to get the nonces for some address, taking the “pending” status into account (i.e. do the GraphQL analog of `eth.getTransactionCount(ADDRESS, 'pending')`), but seems like currently it is impossible.\r\n\r\n#### System information\r\n\r\nGeth version: 1.10.16\r\nOS & Version: Linux\r\nCommit hash : release\r\n\r\n#### Expected behaviour\r\n\r\nUsing regular CLI, I found some addresses with pending transactions:\r\n\r\n```\r\n> eth.getTransactionCount('0xffeBaF265d6653C40e635F5C7891089dC4C8E9bE')\r\n14\r\n> eth.getTransactionCount('0xffeBaF265d6653C40e635F5C7891089dC4C8E9bE', 'pending')\r\n15\r\n```\r\n\r\n```\r\n> eth.getTransactionCount('0x017213b1fc02caEc42369C954AAdD4106007B522')\r\n0\r\n> eth.getTransactionCount('0x017213b1fc02caEc42369C954AAdD4106007B522', 'pending')\r\n1\r\n```\r\n\r\n```\r\n> eth.getTransactionCount('0x80e757a835644465ab4fb62b00969c771ee026c3')\r\n46\r\n> eth.getTransactionCount('0x80e757a835644465ab4fb62b00969c771ee026c3', 'pending')\r\n47\r\n```\r\n\r\nI queried them as \r\n\r\n```graphql\r\n{\r\n    block {\r\n        account(address: \"0x80e757a835644465ab4fb62b00969c771ee026c3\") { address transactionCount }\r\n    }\r\n    pending {\r\n        account(address: \"0x80e757a835644465ab4fb62b00969c771ee026c3\") { address transactionCount }\r\n    }\r\n}\r\n```\r\n\r\n(... and other addresses)\r\n\r\nI expected to have the results like:\r\n\r\n```json\r\n{\r\n  \"data\": {\r\n    \"block\": {\r\n      \"account\": {\r\n        \"address\": \"0x80e757a835644465ab4fb62b00969c771ee026c3\",\r\n        \"transactionCount\": \"0x2e\"\r\n      }\r\n    },\r\n    \"pending\": {\r\n      \"account\": {\r\n        \"address\": \"0x80e757a835644465ab4fb62b00969c771ee026c3\",\r\n        \"transactionCount\": \"0x2f\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n#### Actual behaviour\r\n\r\n```json\r\n{\r\n  \"data\": {\r\n    \"block\": {\r\n      \"account\": {\r\n        \"address\": \"0x80e757a835644465ab4fb62b00969c771ee026c3\",\r\n        \"transactionCount\": \"0x2e\"\r\n      }\r\n    },\r\n    \"pending\": {\r\n      \"account\": {\r\n        \"address\": \"0x80e757a835644465ab4fb62b00969c771ee026c3\",\r\n        \"transactionCount\": \"0x2e\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nSimilar behavior was observed not with just this address, but with any other addresses found in pending pool as transaction originators (e.g. 0xffeBaF265d6653C40e635F5C7891089dC4C8E9bE, 0x017213b1fc02caEc42369C954AAdD4106007B522 mentioned above).\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\nUsing `txpool.content.pending`, find some address with pending transactions (preferrably being pending for quite a long already – can be seen in Etherscan).\r\n\r\nInsert them in GraphQL query like\r\n\r\n```graphql\r\n{\r\n    block {\r\n        account(address: \"ADDRESS\") { address transactionCount }\r\n    }\r\n    pending {\r\n        account(address: \"ADDRESS\") { address transactionCount }\r\n    }\r\n}\r\n```\r\n\r\n, execute query.\r\n\r\n...\r\n\r\nAlso, I had some other interesting observation. Deeper in `pending` endpoint, we have transactions; which, in their turn, have the `Account` fields as well. And these account-in-transactions-in-pending should be referring to “pending” status of account, right? No they don’t.\r\n\r\nRan the following query:\r\n\r\n```graphql\r\n{\r\n    block {\r\n        account(address: \"0x80e757a835644465ab4fb62b00969c771ee026c3\") {\r\n            address\r\n            transactionCount\r\n        }\r\n    }\r\n    pending {\r\n        account(address: \"0x80e757a835644465ab4fb62b00969c771ee026c3\") {\r\n            address\r\n            transactionCount\r\n        }\r\n        transactions {\r\n            hash\r\n            from { address transactionCount }\r\n            to { address }\r\n            nonce\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nAnd here is what I’ve got (cutting out the irrelevant transactions):\r\n\r\n```json\r\n{\r\n  \"data\": {\r\n    \"block\": {\r\n      \"account\": {\r\n        \"address\": \"0x80e757a835644465ab4fb62b00969c771ee026c3\",\r\n        \"transactionCount\": \"0x2e\"\r\n      }\r\n    },\r\n    \"pending\": {\r\n      \"account\": {\r\n        \"address\": \"0x80e757a835644465ab4fb62b00969c771ee026c3\",\r\n        \"transactionCount\": \"0x2e\"\r\n      },\r\n      \"transactions\": [\r\n// ...\r\n        {\r\n          \"hash\": \"0x9df001be03e3ccfc0049efeaa1109b17bec58f5b6d011157217e9e7e62e94261\",\r\n          \"from\": {\r\n            \"address\": \"0x80e757a835644465ab4fb62b00969c771ee026c3\",\r\n            \"transactionCount\": \"0x2e\"\r\n          },\r\n          \"to\": {\r\n            \"address\": \"0x639d20f70bcc01a25355720ef6590beab6e4a0e7\"\r\n          },\r\n          \"nonce\": \"0x2e\"\r\n        },\r\n// ...\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nIt finds a transaction in pending pool; and shows the transactionCount `0x2e` no matter that the nonce in the same transaction is `0x2e` too.",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24436/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24436/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1046930609",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24436#issuecomment-1046930609",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24436",
    "id": 1046930609,
    "node_id": "IC_kwDOAOvK984-ZuSx",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-21T14:20:41Z",
    "updated_at": "2022-02-21T14:20:41Z",
    "author_association": "MEMBER",
    "body": "Hey @amyodov, thanks for reporting all these graphql issues. Keep them coming!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1046930609/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
