{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27746",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27746/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27746/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27746/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/27746",
  "id": 1810860062,
  "node_id": "I_kwDOAOvK985r74ge",
  "number": 27746,
  "title": "callTracer reports inaccurate gasUsed",
  "user": {
    "login": "geomad",
    "id": 7707517,
    "node_id": "MDQ6VXNlcjc3MDc1MTc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7707517?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/geomad",
    "html_url": "https://github.com/geomad",
    "followers_url": "https://api.github.com/users/geomad/followers",
    "following_url": "https://api.github.com/users/geomad/following{/other_user}",
    "gists_url": "https://api.github.com/users/geomad/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/geomad/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/geomad/subscriptions",
    "organizations_url": "https://api.github.com/users/geomad/orgs",
    "repos_url": "https://api.github.com/users/geomad/repos",
    "events_url": "https://api.github.com/users/geomad/events{/privacy}",
    "received_events_url": "https://api.github.com/users/geomad/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2023-07-18T23:24:03Z",
  "updated_at": "2023-07-20T15:11:26Z",
  "closed_at": "2023-07-20T08:34:09Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\nGeth version:  v 1.12.0\r\n\r\nThe gas reported from `debug_traceCall` with `callTracer` is often innacurate.\r\nI wrote a script that takes the `index 0` tx of every block and then call `callTracer` on it on the previous block, which should almost always result in the same gas and here are the results:\r\n```\r\nactual gas: 201547 trace gas: 114291\r\nactual gas: 33952 trace gas: 33952\r\nactual gas: 160332 trace gas: 149916\r\nactual gas: 350319 trace gas: 170771\r\nactual gas: 174309 trace gas: 174309\r\nactual gas: 184034 trace gas: 184034\r\nactual gas: 255780 trace gas: 247448\r\nactual gas: 21000 trace gas: 21000\r\nactual gas: 213557 trace gas: 121879\r\n```\r\nThe script: \r\n```\r\nweb3.eth.subscribe('newBlockHeaders')\r\n    .on(\"data\", async function (blockHeader) {\r\n      let block = await web3.eth.getBlock(blockHeader.number);\r\n      let firstTx = await web3.eth.getTransaction(block.transactions[0])\r\n      let firstTxReceipt = await web3.eth.getTransactionReceipt(firstTx.hash)\r\n      let tx = {\r\n        from: firstTx.from,\r\n        to: firstTx.to,\r\n        value: web3.utils.toHex(firstTx.value),\r\n        data: firstTx.input,\r\n        type: web3.utils.toHex(firstTx.type)\r\n      }\r\n      if (firstTx.accessList) tx.accessList = firstTx.accessList\r\n      let trace = await web3.debug.traceCall(tx, web3.utils.toHex(blockHeader.number - 1), {\r\n        tracer: 'callTracer',\r\n        tracerConfig: { onlyTopCall: true }\r\n      })\r\n      console.log(\"actual gas:\", firstTxReceipt.gasUsed.toString(), \"trace gas:\", new BN(trace.gasUsed).toString())\r\n    })\r\n```\r\n",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27746/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27746/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1641628275",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27746#issuecomment-1641628275",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27746",
    "id": 1641628275,
    "node_id": "IC_kwDOAOvK985h2UJz",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-19T08:10:39Z",
    "updated_at": "2023-07-19T08:10:39Z",
    "author_association": "MEMBER",
    "body": "My guess is it is inaccurate because you're not providing the `gas` field. Another way to test this is to get the txhash for one of those failing txes and do `debug.traceTransaction` if that reports an inaccurate gas too that indicates a bug.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1641628275/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1641650339",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27746#issuecomment-1641650339",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27746",
    "id": 1641650339,
    "node_id": "IC_kwDOAOvK985h2Zij",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-19T08:26:32Z",
    "updated_at": "2023-07-19T08:26:32Z",
    "author_association": "MEMBER",
    "body": "IMO it's a bit handwavy to just say \"should almost always result in the same gas\", and take the fact that it appears not to, and attribute that to a bug in geth. \r\nPlease find a demo where you can demonstrate somehow that what happens is indeed an error. For example a particular transaction hash which reports inaccurate results this way.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1641650339/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1642459854",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27746#issuecomment-1642459854",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27746",
    "id": 1642459854,
    "node_id": "IC_kwDOAOvK985h5fLO",
    "user": {
      "login": "geomad",
      "id": 7707517,
      "node_id": "MDQ6VXNlcjc3MDc1MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7707517?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geomad",
      "html_url": "https://github.com/geomad",
      "followers_url": "https://api.github.com/users/geomad/followers",
      "following_url": "https://api.github.com/users/geomad/following{/other_user}",
      "gists_url": "https://api.github.com/users/geomad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geomad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geomad/subscriptions",
      "organizations_url": "https://api.github.com/users/geomad/orgs",
      "repos_url": "https://api.github.com/users/geomad/repos",
      "events_url": "https://api.github.com/users/geomad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geomad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-19T17:13:36Z",
    "updated_at": "2023-07-19T17:13:36Z",
    "author_association": "NONE",
    "body": "@s1na @holiman thank you!\r\nhere is an example with a specific transaction hash, `debug.traceTransaction` and `gas` field added.\r\n\r\nResult:\r\n`actual gas: 181192 callTracer gas: 170776 traceTransaction gas 181192`\r\nScript:\r\n```\r\n  const transaction = '0xead3428a741f5d012d7203b086b2ffb32e1f1c3536779d62ae129cbffb0908c3'\r\n  let firstTx = await web3.eth.getTransaction(transaction)\r\n  let firstTxReceipt = await web3.eth.getTransactionReceipt(firstTx.hash)\r\n  let tx = {\r\n    from: firstTx.from,\r\n    to: firstTx.to,\r\n    gas: web3.utils.toHex(firstTx.gas),\r\n    value: web3.utils.toHex(firstTx.value),\r\n    data: firstTx.input,\r\n    type: web3.utils.toHex(firstTx.type)\r\n  }\r\n  if (firstTx.accessList) tx.accessList = firstTx.accessList\r\n  let trace = await web3.debug.traceCall(tx, web3.utils.toHex(firstTx.blockNumber - 1), {\r\n    tracer: 'callTracer',\r\n    tracerConfig: { onlyTopCall: true }\r\n  })\r\n  let traceTransaction = await web3.debug.traceTransaction(firstTx.hash)\r\n  console.log(\"actual gas:\", firstTxReceipt.gasUsed.toString(), \"callTracer gas:\", new BN(trace.gasUsed).toString(), \"traceTransaction gas\", traceTransaction.gas.toString())\r\n\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1642459854/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1643423563",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27746#issuecomment-1643423563",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27746",
    "id": 1643423563,
    "node_id": "IC_kwDOAOvK985h9KdL",
    "user": {
      "login": "jsvisa",
      "id": 3627395,
      "node_id": "MDQ6VXNlcjM2MjczOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3627395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsvisa",
      "html_url": "https://github.com/jsvisa",
      "followers_url": "https://api.github.com/users/jsvisa/followers",
      "following_url": "https://api.github.com/users/jsvisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsvisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jsvisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsvisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jsvisa/orgs",
      "repos_url": "https://api.github.com/users/jsvisa/repos",
      "events_url": "https://api.github.com/users/jsvisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jsvisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-20T07:32:41Z",
    "updated_at": "2023-07-20T07:32:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can reproduce this issue, and here is a simple example to reproduce this issue:\r\n\r\n\r\n```python\r\n#!/usr/bin/env python\r\nimport requests\r\n\r\n# tx: 0xead3428a741f5d012d7203b086b2ffb32e1f1c3536779d62ae129cbffb0908c3\r\nreq = {\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"debug_traceCall\",\r\n    \"id\": 67,\r\n    \"params\": [\r\n        {\r\n            \"from\": \"0x0C46dADBc6271511F25273cE856eCF799022dA63\",\r\n            \"to\": \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\",\r\n            \"value\": \"0x1BC16D674EC80000\",\r\n            \"data\": \"0xb6f9de95000000000000000000000000000000000000000000000000000000dc2702dfd000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000c46dadbc6271511f25273ce856ecf799022da630000000000000000000000000000000000000000000000000000000064b818c30000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000005c72bb4774d70058b7761cc963782aa2826c7b81\",\r\n            \"gas\": \"0x47CED\",\r\n            \"maxFeePerGas\": \"0xF9D3F8FC3B\",\r\n            \"maxPriorityFeePerGas\": \"0xE8990A4600\",\r\n        },\r\n        \"0x10e8465\",\r\n        {\r\n            \"timeout\": \"120s\",\r\n            \"tracer\": \"callTracer\",\r\n        },\r\n    ],\r\n}\r\n\r\n\r\nr = requests.post(\"http://geth:8545\", json=req).json()\r\n\r\nprint(int(r[\"result\"][\"gasUsed\"], 16))\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1643423563/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1643506831",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27746#issuecomment-1643506831",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27746",
    "id": 1643506831,
    "node_id": "IC_kwDOAOvK985h9eyP",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-20T08:33:09Z",
    "updated_at": "2023-07-20T08:33:09Z",
    "author_association": "MEMBER",
    "body": "The example transaction contains the `TIMESTAMP` opcode, which affects the contract flow. Any op that accesses the block context (timestamp, blocknumber etc), will be different when executed on _the block before_, and thus the gas used will be different. \r\nThis is not an error. IF you want to trace the tx, you need to trace it differently, e.g. use `traceTransaction`.  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1643506831/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1643511895",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27746#issuecomment-1643511895",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27746",
    "id": 1643511895,
    "node_id": "IC_kwDOAOvK985h9gBX",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-20T08:36:42Z",
    "updated_at": "2023-07-20T08:36:42Z",
    "author_association": "MEMBER",
    "body": "There are two ways to trace stuff: traceCall and traceTransaction. The latter reruns the transaction in the exact same context it was run while executing it originally. The traceCall is slightly different, because you can provide it a starting context on top of which to run, but it's kind of hard to manually make sure that everything is **exactly** the same (you need the parent state, you need the current block timestamp and number, etc). IT would probably even be impossible to do for transactions that are not the first in a block, because the pre-state for those would need rerunning everything before them.\r\n\r\nTL;DR: If you want to trace transactions from blocks, you should use traceTransaction as that will make sure everything's set up correctly. If you want to trace non-existing transactions (or simply non-transaction VM executions), then use traceCall.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1643511895/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1643548568",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27746#issuecomment-1643548568",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27746",
    "id": 1643548568,
    "node_id": "IC_kwDOAOvK985h9o-Y",
    "user": {
      "login": "jsvisa",
      "id": 3627395,
      "node_id": "MDQ6VXNlcjM2MjczOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3627395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsvisa",
      "html_url": "https://github.com/jsvisa",
      "followers_url": "https://api.github.com/users/jsvisa/followers",
      "following_url": "https://api.github.com/users/jsvisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsvisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jsvisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsvisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jsvisa/orgs",
      "repos_url": "https://api.github.com/users/jsvisa/repos",
      "events_url": "https://api.github.com/users/jsvisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jsvisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-20T09:01:18Z",
    "updated_at": "2023-07-20T09:01:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The example transaction contains the `TIMESTAMP` opcode, which affects the contract flow. \r\n\r\nAfter providing the `blockOverrides`, the gasUsed is the same to traceTransaction\r\n\r\n```json\r\n{\r\n  \"jsonrpc\": \"2.0\",\r\n  \"method\": \"debug_traceCall\",\r\n  \"id\": 67,\r\n  \"params\": [\r\n    {\r\n      \"from\": \"0x0C46dADBc6271511F25273cE856eCF799022dA63\",\r\n      \"to\": \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\",\r\n      \"value\": \"0x1bc16d674ec80000\",\r\n      \"data\": \"0xb6f9de95000000000000000000000000000000000000000000000000000000dc2702dfd000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000c46dadbc6271511f25273ce856ecf799022da630000000000000000000000000000000000000000000000000000000064b818c30000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000005c72bb4774d70058b7761cc963782aa2826c7b81\",\r\n      \"gas\": \"0x47ced\",\r\n      \"gasPrice\": \"0xf3f0fd31a0\"\r\n    },\r\n    \"0x10e8465\",\r\n    {\r\n      \"timeout\": \"120s\",\r\n      \"tracer\": \"callTracer\",\r\n      \"blockOverrides\": {\r\n        \"number\": \"0x10e8466\",\r\n        \"time\": \"0x64b81857\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1643548568/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1644102866",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27746#issuecomment-1644102866",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27746",
    "id": 1644102866,
    "node_id": "IC_kwDOAOvK985h_wTS",
    "user": {
      "login": "geomad",
      "id": 7707517,
      "node_id": "MDQ6VXNlcjc3MDc1MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7707517?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geomad",
      "html_url": "https://github.com/geomad",
      "followers_url": "https://api.github.com/users/geomad/followers",
      "following_url": "https://api.github.com/users/geomad/following{/other_user}",
      "gists_url": "https://api.github.com/users/geomad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geomad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geomad/subscriptions",
      "organizations_url": "https://api.github.com/users/geomad/orgs",
      "repos_url": "https://api.github.com/users/geomad/repos",
      "events_url": "https://api.github.com/users/geomad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geomad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-20T15:09:02Z",
    "updated_at": "2023-07-20T15:11:26Z",
    "author_association": "NONE",
    "body": "> > The example transaction contains the `TIMESTAMP` opcode, which affects the contract flow.\r\n> \r\n> After providing the `blockOverrides`, the gasUsed is the same to traceTransaction\r\n> \r\n> ```json\r\n> {\r\n>   \"jsonrpc\": \"2.0\",\r\n>   \"method\": \"debug_traceCall\",\r\n>   \"id\": 67,\r\n>   \"params\": [\r\n>     {\r\n>       \"from\": \"0x0C46dADBc6271511F25273cE856eCF799022dA63\",\r\n>       \"to\": \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\",\r\n>       \"value\": \"0x1bc16d674ec80000\",\r\n>       \"data\": \"0xb6f9de95000000000000000000000000000000000000000000000000000000dc2702dfd000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000c46dadbc6271511f25273ce856ecf799022da630000000000000000000000000000000000000000000000000000000064b818c30000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000005c72bb4774d70058b7761cc963782aa2826c7b81\",\r\n>       \"gas\": \"0x47ced\",\r\n>       \"gasPrice\": \"0xf3f0fd31a0\"\r\n>     },\r\n>     \"0x10e8465\",\r\n>     {\r\n>       \"timeout\": \"120s\",\r\n>       \"tracer\": \"callTracer\",\r\n>       \"blockOverrides\": {\r\n>         \"number\": \"0x10e8466\",\r\n>         \"time\": \"0x64b81857\"\r\n>       }\r\n>     }\r\n>   ]\r\n> }\r\n> ```\r\n\r\nThis worked perfectly! What I wanted to do is predict the gas a tx will use on the next block before I send it, so `traceTransaction` wouldn't work.\r\nI didn't know number and time could be overridden, since I didn't find `blockOverrides` anywhere mentioned in the docs. @karalabe maybe it should be added?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1644102866/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
