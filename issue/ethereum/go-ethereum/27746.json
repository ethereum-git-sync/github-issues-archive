{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27746",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27746/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27746/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27746/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/27746",
  "id": 1810860062,
  "node_id": "I_kwDOAOvK985r74ge",
  "number": 27746,
  "title": "callTracer reports inaccurate gasUsed",
  "user": {
    "login": "geomad",
    "id": 7707517,
    "node_id": "MDQ6VXNlcjc3MDc1MTc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7707517?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/geomad",
    "html_url": "https://github.com/geomad",
    "followers_url": "https://api.github.com/users/geomad/followers",
    "following_url": "https://api.github.com/users/geomad/following{/other_user}",
    "gists_url": "https://api.github.com/users/geomad/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/geomad/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/geomad/subscriptions",
    "organizations_url": "https://api.github.com/users/geomad/orgs",
    "repos_url": "https://api.github.com/users/geomad/repos",
    "events_url": "https://api.github.com/users/geomad/events{/privacy}",
    "received_events_url": "https://api.github.com/users/geomad/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-07-18T23:24:03Z",
  "updated_at": "2023-07-19T17:13:37Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\nGeth version:  v 1.12.0\r\n\r\nThe gas reported from `debug_traceCall` with `callTracer` is often innacurate.\r\nI wrote a script that takes the `index 0` tx of every block and then call `callTracer` on it on the previous block, which should almost always result in the same gas and here are the results:\r\n```\r\nactual gas: 201547 trace gas: 114291\r\nactual gas: 33952 trace gas: 33952\r\nactual gas: 160332 trace gas: 149916\r\nactual gas: 350319 trace gas: 170771\r\nactual gas: 174309 trace gas: 174309\r\nactual gas: 184034 trace gas: 184034\r\nactual gas: 255780 trace gas: 247448\r\nactual gas: 21000 trace gas: 21000\r\nactual gas: 213557 trace gas: 121879\r\n```\r\nThe script: \r\n```\r\nweb3.eth.subscribe('newBlockHeaders')\r\n    .on(\"data\", async function (blockHeader) {\r\n      let block = await web3.eth.getBlock(blockHeader.number);\r\n      let firstTx = await web3.eth.getTransaction(block.transactions[0])\r\n      let firstTxReceipt = await web3.eth.getTransactionReceipt(firstTx.hash)\r\n      let tx = {\r\n        from: firstTx.from,\r\n        to: firstTx.to,\r\n        value: web3.utils.toHex(firstTx.value),\r\n        data: firstTx.input,\r\n        type: web3.utils.toHex(firstTx.type)\r\n      }\r\n      if (firstTx.accessList) tx.accessList = firstTx.accessList\r\n      let trace = await web3.debug.traceCall(tx, web3.utils.toHex(blockHeader.number - 1), {\r\n        tracer: 'callTracer',\r\n        tracerConfig: { onlyTopCall: true }\r\n      })\r\n      console.log(\"actual gas:\", firstTxReceipt.gasUsed.toString(), \"trace gas:\", new BN(trace.gasUsed).toString())\r\n    })\r\n```\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27746/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27746/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1641628275",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27746#issuecomment-1641628275",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27746",
    "id": 1641628275,
    "node_id": "IC_kwDOAOvK985h2UJz",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-19T08:10:39Z",
    "updated_at": "2023-07-19T08:10:39Z",
    "author_association": "MEMBER",
    "body": "My guess is it is inaccurate because you're not providing the `gas` field. Another way to test this is to get the txhash for one of those failing txes and do `debug.traceTransaction` if that reports an inaccurate gas too that indicates a bug.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1641628275/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1641650339",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27746#issuecomment-1641650339",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27746",
    "id": 1641650339,
    "node_id": "IC_kwDOAOvK985h2Zij",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-19T08:26:32Z",
    "updated_at": "2023-07-19T08:26:32Z",
    "author_association": "MEMBER",
    "body": "IMO it's a bit handwavy to just say \"should almost always result in the same gas\", and take the fact that it appears not to, and attribute that to a bug in geth. \r\nPlease find a demo where you can demonstrate somehow that what happens is indeed an error. For example a particular transaction hash which reports inaccurate results this way.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1641650339/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1642459854",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27746#issuecomment-1642459854",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27746",
    "id": 1642459854,
    "node_id": "IC_kwDOAOvK985h5fLO",
    "user": {
      "login": "geomad",
      "id": 7707517,
      "node_id": "MDQ6VXNlcjc3MDc1MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7707517?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geomad",
      "html_url": "https://github.com/geomad",
      "followers_url": "https://api.github.com/users/geomad/followers",
      "following_url": "https://api.github.com/users/geomad/following{/other_user}",
      "gists_url": "https://api.github.com/users/geomad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geomad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geomad/subscriptions",
      "organizations_url": "https://api.github.com/users/geomad/orgs",
      "repos_url": "https://api.github.com/users/geomad/repos",
      "events_url": "https://api.github.com/users/geomad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geomad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-19T17:13:36Z",
    "updated_at": "2023-07-19T17:13:36Z",
    "author_association": "NONE",
    "body": "@s1na @holiman thank you!\r\nhere is an example with a specific transaction hash, `debug.traceTransaction` and `gas` field added.\r\n\r\nResult:\r\n`actual gas: 181192 callTracer gas: 170776 traceTransaction gas 181192`\r\nScript:\r\n```\r\n  const transaction = '0xead3428a741f5d012d7203b086b2ffb32e1f1c3536779d62ae129cbffb0908c3'\r\n  let firstTx = await web3.eth.getTransaction(transaction)\r\n  let firstTxReceipt = await web3.eth.getTransactionReceipt(firstTx.hash)\r\n  let tx = {\r\n    from: firstTx.from,\r\n    to: firstTx.to,\r\n    gas: web3.utils.toHex(firstTx.gas),\r\n    value: web3.utils.toHex(firstTx.value),\r\n    data: firstTx.input,\r\n    type: web3.utils.toHex(firstTx.type)\r\n  }\r\n  if (firstTx.accessList) tx.accessList = firstTx.accessList\r\n  let trace = await web3.debug.traceCall(tx, web3.utils.toHex(firstTx.blockNumber - 1), {\r\n    tracer: 'callTracer',\r\n    tracerConfig: { onlyTopCall: true }\r\n  })\r\n  let traceTransaction = await web3.debug.traceTransaction(firstTx.hash)\r\n  console.log(\"actual gas:\", firstTxReceipt.gasUsed.toString(), \"callTracer gas:\", new BN(trace.gasUsed).toString(), \"traceTransaction gas\", traceTransaction.gas.toString())\r\n\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1642459854/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
