{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17882",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17882/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17882/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17882/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/17882",
  "id": 368461603,
  "node_id": "MDU6SXNzdWUzNjg0NjE2MDM=",
  "number": 17882,
  "title": "CREATE2 can re-run constructor multiple times in a selfdestructed contract",
  "user": {
    "login": "eggy-eth",
    "id": 44010363,
    "node_id": "MDQ6VXNlcjQ0MDEwMzYz",
    "avatar_url": "https://avatars.githubusercontent.com/u/44010363?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/eggy-eth",
    "html_url": "https://github.com/eggy-eth",
    "followers_url": "https://api.github.com/users/eggy-eth/followers",
    "following_url": "https://api.github.com/users/eggy-eth/following{/other_user}",
    "gists_url": "https://api.github.com/users/eggy-eth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/eggy-eth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/eggy-eth/subscriptions",
    "organizations_url": "https://api.github.com/users/eggy-eth/orgs",
    "repos_url": "https://api.github.com/users/eggy-eth/repos",
    "events_url": "https://api.github.com/users/eggy-eth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/eggy-eth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2018-10-10T01:45:13Z",
  "updated_at": "2018-10-10T12:41:39Z",
  "closed_at": "2018-10-10T07:03:22Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: `geth Version: 1.8.17-stable`\r\n\r\n#### Expected behaviour\r\nVia EIP [1014](https://eips.ethereum.org/EIPS/eip-1014): \r\n\r\n`Specifically, if nonce or code is nonzero, then the create-operation fails.`\r\n\r\n`It should also be noted that SELFDESTRUCT has no immediate effect on nonce or code, thus a contract cannot be destroyed and recreated within one transaction.`\r\n\r\nHence if you selfdestruct a contract created with the same init_code and salt via CREATE2 and then redeploy it with the same parameters it should *not* be able to recreate.\r\n\r\n#### Actual behaviour\r\nYou can selfdestruct a contract and redeploy it.\r\n\r\n#### Steps to reproduce the behaviour\r\nStep 1: Deploy TestMe:\r\n\r\n```solidity\r\ncontract TestMe{\r\n    \r\n    address public Last;\r\n    \r\n    uint public Argument;\r\n    \r\n    uint public time;\r\n    \r\n    function Deploy(uint seed, uint arg) public returns (address) {\r\n        Argument = arg;\r\n        // ctr is the actual runtime bytecode of contract A \r\n        // compiled with 0.5.0-nightly.2018.10.9+commit.4ab2e03b.Emscripten.clang in remix\r\n        bytes memory ctr = hex'608060405234801561001057600080fd5b50600033905080600160a060020a0316631543b3136040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561006b57600080fd5b505afa15801561007f573d6000803e3d6000fd5b505050506040513d602081101561009557600080fd5b50516000908155604080517f64dac4080000000000000000000000000000000000000000000000000000000081529051600160a060020a038416926364dac408926004808201939182900301818387803b1580156100f257600080fd5b505af1158015610106573d6000803e3d6000fd5b503392505050fffe';\r\n        address a;\r\n        assembly{\r\n            let pointer := ctr\r\n            let len := mload(pointer)\r\n            let start := add(pointer, 0x20)\r\n            a := create2(0, start, len, seed)\r\n        }\r\n        Last = a;\r\n        return (a);\r\n    }\r\n    \r\n    function Go() public {\r\n        time = now;\r\n    }\r\n}\r\n\r\ncontract A{\r\n    uint public CurrVal;\r\n    constructor() public {\r\n        TestMe target = TestMe(msg.sender);\r\n        CurrVal = target.Argument();\r\n        target.Go();\r\n        selfdestruct(msg.sender);\r\n    }\r\n}\r\n```\r\n\r\nStep 2) Validate that Go() has been called by calling time() in TestMe.\r\nStep 3) Re-call Deploy() with the same seed (note: for this implementation use a different block)\r\nStep 4) Validate that time() has been changed hence the constructor has ran twice.\r\n",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17882/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17882/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/428460918",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17882#issuecomment-428460918",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17882",
    "id": 428460918,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODQ2MDkxOA==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T07:03:22Z",
    "updated_at": "2018-10-10T07:03:22Z",
    "author_association": "MEMBER",
    "body": "So, a 'constructor' is built out of a piece of `init_code`. The `init_code` must return the contract-bytecode in order for any code to be deployed. \r\nIn the constructor of `A`, you perform a `selfdestruct`. Thus, it does not deploy any code, and the account is marked for deletion. \r\n\r\nI'll use the same numbering as you and explain some quirks \r\n1. Testme is created, `Deploy` is called. It calls `create2` to create a contract `A`.\r\n  * In the `A` constructor, it invokes `A.Go()`, which updates the timestamp. \r\n  * execution of constructor is aborted by a `selfdestruct` (so no code is deployed). \r\n  * I am not sure if the returnvalue `a` here actually contains an address or not (wheter `Last` is `0` or an address), but for the sake of argument, let's assume it does. \r\n2. Validation works, `Go()` was called before the initcode terminated\r\n3. Regardless of whether the contract was created or not, the selfdestruct went into effect when the block finished. Either the contract was never created, or it has now been cleaned. A new invocation has the exact same effect as the first one. \r\n4. Yes, it did run again. \r\n\r\nQuoting from the EIP:\r\n\r\n> It should also be noted that SELFDESTRUCT has no **immediate** effect on nonce or code, thus a contract cannot be destroyed and recreated within one transaction.\r\n\r\n(emphasis mine) -- **immediate** effect means that it does not go into effect within the same transaction/block, but only after the block postprocessing where selfdestructs are handled. \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/428460918/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/428462331",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17882#issuecomment-428462331",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17882",
    "id": 428462331,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODQ2MjMzMQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T07:09:25Z",
    "updated_at": "2018-10-10T07:09:25Z",
    "author_association": "MEMBER",
    "body": "ps: I don't know what type of setup you are using, but it might be simpler to investigate if you trace the execution. If you're using the raw `evm` executable, you can use `--json`. If you're using a proper `geth` node on an private network, you can invoke `debug.traceTransaction` to get the execution trace. Then you can see exactly what each operation does, and what the returnvalues are, etc. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/428462331/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/428511992",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17882#issuecomment-428511992",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17882",
    "id": 428511992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODUxMTk5Mg==",
    "user": {
      "login": "eggy-eth",
      "id": 44010363,
      "node_id": "MDQ6VXNlcjQ0MDEwMzYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/44010363?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eggy-eth",
      "html_url": "https://github.com/eggy-eth",
      "followers_url": "https://api.github.com/users/eggy-eth/followers",
      "following_url": "https://api.github.com/users/eggy-eth/following{/other_user}",
      "gists_url": "https://api.github.com/users/eggy-eth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eggy-eth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eggy-eth/subscriptions",
      "organizations_url": "https://api.github.com/users/eggy-eth/orgs",
      "repos_url": "https://api.github.com/users/eggy-eth/repos",
      "events_url": "https://api.github.com/users/eggy-eth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eggy-eth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T09:56:48Z",
    "updated_at": "2018-10-10T09:56:48Z",
    "author_association": "NONE",
    "body": "@holiman What confuses me here is that I thought that when constructor code is deployed the nonce of the target account is actually set to 1. If this happens, then if the constructor is ran again it should fail (and set a to 0x0).\r\n\r\nSo the question here is, if no bytecode is deployed at a contract then the nonce of the contract we are deploying to is not set to 1. (In case of a CREATE this would still increase the nonce of the contract which is trying to create this new contract)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/428511992/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/428548171",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17882#issuecomment-428548171",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17882",
    "id": 428548171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODU0ODE3MQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T12:12:53Z",
    "updated_at": "2018-10-10T12:12:53Z",
    "author_association": "MEMBER",
    "body": "So, it's totally ok not to return bytecode from the constructor, and thereby create a code-less contract with nonce 1. And then it shouldn't be possible to recreate it. \r\n\r\nHowever, you're also selfdestructing the account, so it becomes erased. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/428548171/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/428556280",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17882#issuecomment-428556280",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17882",
    "id": 428556280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODU1NjI4MA==",
    "user": {
      "login": "eggy-eth",
      "id": 44010363,
      "node_id": "MDQ6VXNlcjQ0MDEwMzYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/44010363?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eggy-eth",
      "html_url": "https://github.com/eggy-eth",
      "followers_url": "https://api.github.com/users/eggy-eth/followers",
      "following_url": "https://api.github.com/users/eggy-eth/following{/other_user}",
      "gists_url": "https://api.github.com/users/eggy-eth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eggy-eth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eggy-eth/subscriptions",
      "organizations_url": "https://api.github.com/users/eggy-eth/orgs",
      "repos_url": "https://api.github.com/users/eggy-eth/repos",
      "events_url": "https://api.github.com/users/eggy-eth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eggy-eth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T12:41:38Z",
    "updated_at": "2018-10-10T12:41:38Z",
    "author_association": "NONE",
    "body": "Yes the latter is an assumption of mine which was wrong. I assumed that when you selfdestruct an existing contract it would *not* erase the nonce.\r\n\r\nThanks again =)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/428556280/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
