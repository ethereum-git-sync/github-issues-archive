{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23132",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23132/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23132/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23132/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/23132",
  "id": 933546462,
  "node_id": "MDU6SXNzdWU5MzM1NDY0NjI=",
  "number": 23132,
  "title": "For some blocks, Batch RPC return only some replies, or the replies have null/mismatched fields",
  "user": {
    "login": "wizzard0",
    "id": 424619,
    "node_id": "MDQ6VXNlcjQyNDYxOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/424619?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wizzard0",
    "html_url": "https://github.com/wizzard0",
    "followers_url": "https://api.github.com/users/wizzard0/followers",
    "following_url": "https://api.github.com/users/wizzard0/following{/other_user}",
    "gists_url": "https://api.github.com/users/wizzard0/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wizzard0/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wizzard0/subscriptions",
    "organizations_url": "https://api.github.com/users/wizzard0/orgs",
    "repos_url": "https://api.github.com/users/wizzard0/repos",
    "events_url": "https://api.github.com/users/wizzard0/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wizzard0/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2021-06-30T10:32:22Z",
  "updated_at": "2021-07-19T11:43:22Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: 1.10.1, 1.10.4\r\nOS & Version: Win10, Ubuntu 18, Ubuntu 20\r\n\r\n#### Expected behaviour\r\nFor the batch call over websocket, replies for all requests, for all blocks are consistent.\r\n\r\n#### Actual behaviour\r\n- For some blocks, the received JSON contains NULLs in place of some replies, or NULL/mismatched data fields.\r\n- Replies with wrong fields fail to deserialize into strongly typed data structures if one uses Golang RPC client\r\nNotes:\r\n- Does not look related to chain reorgs, as no orphan headers are received before/after the bug is observed, and no reorgs are registered on Etherscan (i.e. the block being queried stays canonical)\r\n- Does not reproduce with regular (non-batch) RPC calls.\r\n\r\n#### Steps to reproduce the behaviour\r\n1. Subscribe to newHeads\r\n2. For each block header, submit batch request (ethclient.BatchCallContext) with batch of `eth_getTransactionReceipt` or `debug_traceTransaction` for every transaction.\r\n3. Optional: For Golang RPC client, add logging of raw resp.Result in `rpc/client.go` right before json.Unmarshal (https://github.com/ethereum/go-ethereum/blob/master/rpc/client.go#L391)\r\n4. Wait about 100-300 blocks\r\n5. Observe NULLs/garbage in resp.result bytes instead of expected replies, and/or JSON unmarshal error\r\n#### Backtrace\r\nN/A\r\n\r\nWhen submitting logs: please submit them as text and not screenshots.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23132/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23132/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/872039236",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23132#issuecomment-872039236",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23132",
    "id": 872039236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjAzOTIzNg==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-01T08:27:03Z",
    "updated_at": "2021-07-01T08:27:03Z",
    "author_association": "MEMBER",
    "body": "Which network are you on?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/872039236/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/872040003",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23132#issuecomment-872040003",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23132",
    "id": 872040003,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjA0MDAwMw==",
    "user": {
      "login": "wizzard0",
      "id": 424619,
      "node_id": "MDQ6VXNlcjQyNDYxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wizzard0",
      "html_url": "https://github.com/wizzard0",
      "followers_url": "https://api.github.com/users/wizzard0/followers",
      "following_url": "https://api.github.com/users/wizzard0/following{/other_user}",
      "gists_url": "https://api.github.com/users/wizzard0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wizzard0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wizzard0/subscriptions",
      "organizations_url": "https://api.github.com/users/wizzard0/orgs",
      "repos_url": "https://api.github.com/users/wizzard0/repos",
      "events_url": "https://api.github.com/users/wizzard0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wizzard0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-01T08:28:03Z",
    "updated_at": "2021-07-01T08:28:03Z",
    "author_association": "NONE",
    "body": "mainnet\n\n> On 1 Jul 2021, at 11:27, ligi ***@***.***> wrote:\n>\n> Which network are you on?\n>\n> â€”\n> You are receiving this because you authored the thread.\n> Reply to this email directly, [view it on GitHub](https://github.com/ethereum/go-ethereum/issues/23132#issuecomment-872039236), or [unsubscribe](https://github.com/notifications/unsubscribe-auth/AADHVK6JUCAY37DROV5TTUTTVQRGDANCNFSM47SBJDXQ).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/872040003/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/872042062",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23132#issuecomment-872042062",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23132",
    "id": 872042062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjA0MjA2Mg==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-01T08:30:52Z",
    "updated_at": "2021-07-01T08:30:52Z",
    "author_association": "MEMBER",
    "body": "Our hunch is that it might be mini 1 block \"reorgs\". E.g. when a new block becomes canonical in place of an equal height old block. It might be a data race in that case: header gets announced, you request receipts, but by that time another header gets swapped in, so some of the transactions might be \"undone\".\r\n\r\nCould you check if those txs that do get sent back, whether the inclusion header hash matches the one you requested? Could you extend your tester so that if you see a `null`, you double check if a new header became canonical?\r\n\r\n---\r\n\r\nIf you have a snippet you could give us to repro exactly, that would help understand it better.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/872042062/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/872046869",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23132#issuecomment-872046869",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23132",
    "id": 872046869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjA0Njg2OQ==",
    "user": {
      "login": "wizzard0",
      "id": 424619,
      "node_id": "MDQ6VXNlcjQyNDYxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wizzard0",
      "html_url": "https://github.com/wizzard0",
      "followers_url": "https://api.github.com/users/wizzard0/followers",
      "following_url": "https://api.github.com/users/wizzard0/following{/other_user}",
      "gists_url": "https://api.github.com/users/wizzard0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wizzard0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wizzard0/subscriptions",
      "organizations_url": "https://api.github.com/users/wizzard0/orgs",
      "repos_url": "https://api.github.com/users/wizzard0/repos",
      "events_url": "https://api.github.com/users/wizzard0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wizzard0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-01T08:37:23Z",
    "updated_at": "2021-07-01T08:37:23Z",
    "author_association": "NONE",
    "body": "Yeah the header hash matches, reorgs were the first thing I suspected.\n\nBut I receive header 0xaaa, then notification for header 0xbbb, request receipts for 0xbbb, get like half of them (randomly), all referring to block 0xbbb, then receive notification for header 0xccc which references 0xbbb as parent, and nothing else.\n\nIf those were reorgs, then I assume I should have received more header notifications?\n\nWith tester, do you mean the client code, or try to patch to the node itself?\n\n> On 1 Jul 2021, at 11:31, PÃ©ter SzilÃ¡gyi ***@***.***> wrote:\n>\n> Our hunch is that it might be mini 1 block \"reorgs\". E.g. when a new block becomes canonical in place of an equal height old block. It might be a data race in that case: header gets announced, you request receipts, but by that time another header gets swapped in, so some of the transactions might be \"undone\".\n>\n> Could you check if those txs that do get sent back, whether the inclusion header hash matches the one you requested? Could you extend your tester so that if you see a null, you double check if a new header became canonical?\n>\n> ---------------------------------------------------------------\n>\n> If you have a snippet you could give us to repro exactly, that would help understand it better.\n>\n> â€”\n> You are receiving this because you authored the thread.\n> Reply to this email directly, [view it on GitHub](https://github.com/ethereum/go-ethereum/issues/23132#issuecomment-872042062), or [unsubscribe](https://github.com/notifications/unsubscribe-auth/AADHVK4ISJEGCB6G3ZOAQPLTVQRVTANCNFSM47SBJDXQ).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/872046869/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/882480515",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23132#issuecomment-882480515",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23132",
    "id": 882480515,
    "node_id": "IC_kwDOAOvK9840mZWD",
    "user": {
      "login": "pinkiebell",
      "id": 40266861,
      "node_id": "MDQ6VXNlcjQwMjY2ODYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/40266861?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pinkiebell",
      "html_url": "https://github.com/pinkiebell",
      "followers_url": "https://api.github.com/users/pinkiebell/followers",
      "following_url": "https://api.github.com/users/pinkiebell/following{/other_user}",
      "gists_url": "https://api.github.com/users/pinkiebell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pinkiebell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pinkiebell/subscriptions",
      "organizations_url": "https://api.github.com/users/pinkiebell/orgs",
      "repos_url": "https://api.github.com/users/pinkiebell/repos",
      "events_url": "https://api.github.com/users/pinkiebell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pinkiebell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-19T11:42:06Z",
    "updated_at": "2021-07-19T11:43:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "I observe similar behaviour with a light-mode enabled node. Block hashes and transaction list etc. are all fine but if I invoke `eth_getTransactionByHash...` I sometimes receive the tx object with `input` being `null`.\r\nBut this is not easy to reproduce. Trying the call again may return the '0x...' data of the transaction - OR - the field stays 'null' unless the node is restarted.\r\n\r\nMust have something todo with error handing/caching in the LES layer and maybe bad peers.\r\n\r\n**edit** Btw, I didn't use batch calls in my example.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/882480515/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
