{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16708",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16708/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16708/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16708/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/16708",
  "id": 321256925,
  "node_id": "MDU6SXNzdWUzMjEyNTY5MjU=",
  "number": 16708,
  "title": "Raw messages in Whisper",
  "user": {
    "login": "sprusr",
    "id": 7497084,
    "node_id": "MDQ6VXNlcjc0OTcwODQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7497084?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sprusr",
    "html_url": "https://github.com/sprusr",
    "followers_url": "https://api.github.com/users/sprusr/followers",
    "following_url": "https://api.github.com/users/sprusr/following{/other_user}",
    "gists_url": "https://api.github.com/users/sprusr/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sprusr/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sprusr/subscriptions",
    "organizations_url": "https://api.github.com/users/sprusr/orgs",
    "repos_url": "https://api.github.com/users/sprusr/repos",
    "events_url": "https://api.github.com/users/sprusr/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sprusr/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "gballet",
    "id": 3272758,
    "node_id": "MDQ6VXNlcjMyNzI3NTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3272758?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gballet",
    "html_url": "https://github.com/gballet",
    "followers_url": "https://api.github.com/users/gballet/followers",
    "following_url": "https://api.github.com/users/gballet/following{/other_user}",
    "gists_url": "https://api.github.com/users/gballet/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gballet/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gballet/subscriptions",
    "organizations_url": "https://api.github.com/users/gballet/orgs",
    "repos_url": "https://api.github.com/users/gballet/repos",
    "events_url": "https://api.github.com/users/gballet/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gballet/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "gballet",
      "id": 3272758,
      "node_id": "MDQ6VXNlcjMyNzI3NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3272758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gballet",
      "html_url": "https://github.com/gballet",
      "followers_url": "https://api.github.com/users/gballet/followers",
      "following_url": "https://api.github.com/users/gballet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gballet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gballet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gballet/subscriptions",
      "organizations_url": "https://api.github.com/users/gballet/orgs",
      "repos_url": "https://api.github.com/users/gballet/repos",
      "events_url": "https://api.github.com/users/gballet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gballet/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2018-05-08T16:25:51Z",
  "updated_at": "2018-07-31T12:21:54Z",
  "closed_at": "2018-07-31T12:21:53Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Moving this to an issue after after a discussion with @gballet on Gitter.\r\n\r\n## Proposal\r\n\r\nAt present, when sending a message via Whisper, all crypto is done by the node. While this does provide us with a level of security when using a local node, many users of dApps use tools such as MetaMask which connect to a public node to interact with Ethereum.\r\n\r\nUsers don't particularly want to be handing over their keys to a public node (even if generating for a single-use), in the same way that this isn't the case for sending transactions - instead the transaction is signed locally before being submitted to the node with `eth_sendRawTransaction`.\r\n\r\nIn a similar fashion it would be useful to have something like a `shh_sendRawMessage` method.\r\n\r\n## Problems\r\n\r\nAs @frozeman pointed out when I first discussed this with him, Whisper also requires that the user listen for messages intended for them. Receiving raw messages would probably not be as trivial as sending them, although it is certainly possible.\r\n\r\n@gballet also raised concerns about the leaking of metadata when using a public node to forward Whisper messages onto the network.\r\n\r\n## Other Thoughts\r\n\r\nWhile there are security concerns where the sender wishes to remain entirely anonymous, the majority of uses cases do not require this level of absolute privacy. So long as the payload remains secret, this is enough for most users.\r\n\r\nThe addition of such a feature could pave the way for MetaMask, Infura, etc. adding Whisper support (see https://github.com/INFURA/infura/issues/19). That would make it much more feasible to use Whisper in dApps.",
  "closed_by": {
    "login": "gballet",
    "id": 3272758,
    "node_id": "MDQ6VXNlcjMyNzI3NTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3272758?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gballet",
    "html_url": "https://github.com/gballet",
    "followers_url": "https://api.github.com/users/gballet/followers",
    "following_url": "https://api.github.com/users/gballet/following{/other_user}",
    "gists_url": "https://api.github.com/users/gballet/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gballet/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gballet/subscriptions",
    "organizations_url": "https://api.github.com/users/gballet/orgs",
    "repos_url": "https://api.github.com/users/gballet/repos",
    "events_url": "https://api.github.com/users/gballet/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gballet/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16708/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16708/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/387696695",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16708#issuecomment-387696695",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16708",
    "id": 387696695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzY5NjY5NQ==",
    "user": {
      "login": "gballet",
      "id": 3272758,
      "node_id": "MDQ6VXNlcjMyNzI3NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3272758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gballet",
      "html_url": "https://github.com/gballet",
      "followers_url": "https://api.github.com/users/gballet/followers",
      "following_url": "https://api.github.com/users/gballet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gballet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gballet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gballet/subscriptions",
      "organizations_url": "https://api.github.com/users/gballet/orgs",
      "repos_url": "https://api.github.com/users/gballet/repos",
      "events_url": "https://api.github.com/users/gballet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gballet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-09T10:33:42Z",
    "updated_at": "2018-05-09T10:33:42Z",
    "author_association": "MEMBER",
    "body": "Thanks for moving the discussion right here. Right now, the best approach is to run a local `wnode` and connect to the network (possibly with a very limited filter, in order to reduce traffic) instead of using infura directly. This being said, there is indeed a case for sending raw transactions. I'm perfectly happy with having an initial \"message in a bottle\" proof of concept, where it is only possible to send messages this way.\r\n\r\nPolling the server is a problem, given the amount of traffic and the short time to live of messages in memory. It would be possible to poll for a specific topic, but this implies a trade-off with respect to metadata security.\r\n\r\nIs there a use case when the user would want to send messages and not read them?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/387696695/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/387696923",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16708#issuecomment-387696923",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16708",
    "id": 387696923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzY5NjkyMw==",
    "user": {
      "login": "fukumitsu76",
      "id": 11704441,
      "node_id": "MDQ6VXNlcjExNzA0NDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/11704441?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fukumitsu76",
      "html_url": "https://github.com/fukumitsu76",
      "followers_url": "https://api.github.com/users/fukumitsu76/followers",
      "following_url": "https://api.github.com/users/fukumitsu76/following{/other_user}",
      "gists_url": "https://api.github.com/users/fukumitsu76/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fukumitsu76/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fukumitsu76/subscriptions",
      "organizations_url": "https://api.github.com/users/fukumitsu76/orgs",
      "repos_url": "https://api.github.com/users/fukumitsu76/repos",
      "events_url": "https://api.github.com/users/fukumitsu76/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fukumitsu76/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-09T10:34:48Z",
    "updated_at": "2018-05-09T10:34:48Z",
    "author_association": "NONE",
    "body": "2018年5月9日(水) 19:34 Guillaume Ballet <notifications@github.com>:\n\n> Thanks for moving the discussion right here. Right now, the best approach\n> is to run a local wnode and connect to the network (possibly with a very\n> limited filter, in order to reduce traffic) instead of using infura\n> directly. This being said, there is indeed a case for sending raw\n> transactions. I'm perfectly happy with having an initial \"message in a\n> bottle\" proof of concept, where it is only possible to send messages this\n> way.\n>\n> Polling the server is a problem, given the amount of traffic and the short\n> time to live of messages in memory. It would be possible to poll for a\n> specific topic, but this implies a trade-off with respect to metadata\n> security.\n>\n> Is there a use case when the user would want to send messages and not read\n> them?\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ethereum/go-ethereum/issues/16708#issuecomment-387696695>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ALKYeV81yaCHdoD1Lc2J_59x8BAe7xdPks5twsYngaJpZM4T284E>\n> .\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/387696923/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/387696979",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16708#issuecomment-387696979",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16708",
    "id": 387696979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzY5Njk3OQ==",
    "user": {
      "login": "fukumitsu76",
      "id": 11704441,
      "node_id": "MDQ6VXNlcjExNzA0NDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/11704441?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fukumitsu76",
      "html_url": "https://github.com/fukumitsu76",
      "followers_url": "https://api.github.com/users/fukumitsu76/followers",
      "following_url": "https://api.github.com/users/fukumitsu76/following{/other_user}",
      "gists_url": "https://api.github.com/users/fukumitsu76/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fukumitsu76/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fukumitsu76/subscriptions",
      "organizations_url": "https://api.github.com/users/fukumitsu76/orgs",
      "repos_url": "https://api.github.com/users/fukumitsu76/repos",
      "events_url": "https://api.github.com/users/fukumitsu76/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fukumitsu76/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-09T10:35:02Z",
    "updated_at": "2018-05-09T10:35:02Z",
    "author_association": "NONE",
    "body": "2018年5月9日(水) 19:34 Akiyoshi Fukumitsu <fukumitsu@hivelocity.co.jp>:\n\n>\n> 2018年5月9日(水) 19:34 Guillaume Ballet <notifications@github.com>:\n>\n>> Thanks for moving the discussion right here. Right now, the best approach\n>> is to run a local wnode and connect to the network (possibly with a very\n>> limited filter, in order to reduce traffic) instead of using infura\n>> directly. This being said, there is indeed a case for sending raw\n>> transactions. I'm perfectly happy with having an initial \"message in a\n>> bottle\" proof of concept, where it is only possible to send messages this\n>> way.\n>>\n>> Polling the server is a problem, given the amount of traffic and the\n>> short time to live of messages in memory. It would be possible to poll for\n>> a specific topic, but this implies a trade-off with respect to metadata\n>> security.\n>>\n>> Is there a use case when the user would want to send messages and not\n>> read them?\n>>\n>> —\n>> You are receiving this because you are subscribed to this thread.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/ethereum/go-ethereum/issues/16708#issuecomment-387696695>,\n>> or mute the thread\n>> <https://github.com/notifications/unsubscribe-auth/ALKYeV81yaCHdoD1Lc2J_59x8BAe7xdPks5twsYngaJpZM4T284E>\n>> .\n>>\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/387696979/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/387698651",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16708#issuecomment-387698651",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16708",
    "id": 387698651,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzY5ODY1MQ==",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-09T10:42:34Z",
    "updated_at": "2018-05-09T10:42:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "The pub sub would be a great fit here, as it reduces unnecessary polling.\nAt the same time I agree, giving the node the topic is a security concern.\n\n@gballet to decide a message encrypted for a specific address, does the node just tries to decide it with all its stored private keys, or is in those messages the “to” always present?\n\n\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/387698651/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/387719256",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16708#issuecomment-387719256",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16708",
    "id": 387719256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzcxOTI1Ng==",
    "user": {
      "login": "gballet",
      "id": 3272758,
      "node_id": "MDQ6VXNlcjMyNzI3NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3272758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gballet",
      "html_url": "https://github.com/gballet",
      "followers_url": "https://api.github.com/users/gballet/followers",
      "following_url": "https://api.github.com/users/gballet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gballet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gballet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gballet/subscriptions",
      "organizations_url": "https://api.github.com/users/gballet/orgs",
      "repos_url": "https://api.github.com/users/gballet/repos",
      "events_url": "https://api.github.com/users/gballet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gballet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-09T12:15:25Z",
    "updated_at": "2018-05-09T12:15:25Z",
    "author_association": "MEMBER",
    "body": "> The pub sub would be a great fit here, as it reduces unnecessary polling.\r\n\r\n@frozeman I don't know the details of the pub-sub implementation; it seems to me however that you would need to keep a list of sockets open and I see a scalability issue here: not only must the server send whisper messages over devp2p, but it must maintain a list of its clients and send the same data as many times over `ws://` as there are clients. As you point out, you could indeed reduce the traffic by only registering for some specific topics, but that would leak metadata.\r\n\r\nOn the plus side, the overwhelming traffic would be an improvement in plausible deniability compared to web3; the bad part is that even more code needs to be duplicated between the Go client and the Javascript client.\r\n\r\nThis is becoming messy and I'm not necessary this is worth the work. Hence my question: is there a use case where sending messages and not reading them with the same method would make sense ?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/387719256/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389453465",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16708#issuecomment-389453465",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16708",
    "id": 389453465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTQ1MzQ2NQ==",
    "user": {
      "login": "gballet",
      "id": 3272758,
      "node_id": "MDQ6VXNlcjMyNzI3NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3272758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gballet",
      "html_url": "https://github.com/gballet",
      "followers_url": "https://api.github.com/users/gballet/followers",
      "following_url": "https://api.github.com/users/gballet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gballet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gballet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gballet/subscriptions",
      "organizations_url": "https://api.github.com/users/gballet/orgs",
      "repos_url": "https://api.github.com/users/gballet/repos",
      "events_url": "https://api.github.com/users/gballet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gballet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-16T09:20:20Z",
    "updated_at": "2018-05-16T09:20:40Z",
    "author_association": "MEMBER",
    "body": "I discussed the matter with @gluk256; this) approach is not dark (neither is using web3, FYI - for reference, the proper approach is to run `wnode` locally.), but it presents some practical aspects. There are two approaches to doing this:\r\n\r\n  * Port part of the Whisper code to javascript; that's a long endeavor and it would require extra maintenance work.\r\n  * compile `wnode` to WASM (Go will support it by the end of the summer); this is definitely easier to maintain and receiving messages is no longer a problem, but it will likely turn impractical because of the traffic (at least).\r\n\r\nNote though, that we will soon offer a signer process like [Clef](https://github.com/ethereum/go-ethereum/tree/master/cmd/clef), which could be extended to call the Go Whisper code directly and therefore remove the need for code duplication.\r\n\r\nThe steps are therefore:\r\n\r\n  * Add a whisper signing feature to Clef (@holiman do you think that would be hard to do?)\r\n  * Add a `shh_sendRawMessage` to the RPC interface\r\n\r\nTwo questions remain here:\r\n  * How to recover the messages on the other side? We won't work on this until there is a clear use case for pushing messages without expecting a response. Just :+1: that issue if you think it makes sense.\r\n  * What kind of checks should be performed on the messages that are sent? This call should not be used to spam the network, so at least the proof of work needs to be required.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/389453465/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/390401601",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16708#issuecomment-390401601",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16708",
    "id": 390401601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDQwMTYwMQ==",
    "user": {
      "login": "sprusr",
      "id": 7497084,
      "node_id": "MDQ6VXNlcjc0OTcwODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7497084?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sprusr",
      "html_url": "https://github.com/sprusr",
      "followers_url": "https://api.github.com/users/sprusr/followers",
      "following_url": "https://api.github.com/users/sprusr/following{/other_user}",
      "gists_url": "https://api.github.com/users/sprusr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sprusr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sprusr/subscriptions",
      "organizations_url": "https://api.github.com/users/sprusr/orgs",
      "repos_url": "https://api.github.com/users/sprusr/repos",
      "events_url": "https://api.github.com/users/sprusr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sprusr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-19T12:26:46Z",
    "updated_at": "2018-05-19T12:26:46Z",
    "author_association": "NONE",
    "body": "Yeah, I don't think there are many use cases where one would send a message without expecting a response. Therefore, it does not make sense to add only sending in this way.\r\n\r\nI understand your concerns about achieving darkness, however I think for many users this is not a priority, as long as the contents of the message is secret. Notifying a public node of which topics a user wishes to receive will leak a certain amount of metadata, but for users where this is a concern they may simply run their own local node and not use public ones.\r\n\r\nPerhaps it would help to explain the context I'm considering this all in: from the point of view of a browser-based dApp, to do things such as off-chain negotiation before a contract-based agreement. As a dApp developer, I want to be able to use Whisper in my application without the user having to install a separate browser (e.g. with MetaMask).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/390401601/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/409201317",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16708#issuecomment-409201317",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16708",
    "id": 409201317,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTIwMTMxNw==",
    "user": {
      "login": "gballet",
      "id": 3272758,
      "node_id": "MDQ6VXNlcjMyNzI3NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3272758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gballet",
      "html_url": "https://github.com/gballet",
      "followers_url": "https://api.github.com/users/gballet/followers",
      "following_url": "https://api.github.com/users/gballet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gballet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gballet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gballet/subscriptions",
      "organizations_url": "https://api.github.com/users/gballet/orgs",
      "repos_url": "https://api.github.com/users/gballet/repos",
      "events_url": "https://api.github.com/users/gballet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gballet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-31T12:21:53Z",
    "updated_at": "2018-07-31T12:21:53Z",
    "author_association": "MEMBER",
    "body": "@sprusr I'm closing this issue because new developments are on the way: with the up and coming availability of WASM as an output target for Go, it will be possible to run a browser-specific version of `wnode`, which removes the need to make RPC calls. If you feel otherwise, feel free to re-open it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/409201317/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
