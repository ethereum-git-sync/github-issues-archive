{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22366",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22366/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22366/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22366/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/22366",
  "id": 814095339,
  "node_id": "MDU6SXNzdWU4MTQwOTUzMzk=",
  "number": 22366,
  "title": "Benchmarks for Increasing Block Gas Limit",
  "user": {
    "login": "Mister-Meeseeks",
    "id": 18204987,
    "node_id": "MDQ6VXNlcjE4MjA0OTg3",
    "avatar_url": "https://avatars.githubusercontent.com/u/18204987?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Mister-Meeseeks",
    "html_url": "https://github.com/Mister-Meeseeks",
    "followers_url": "https://api.github.com/users/Mister-Meeseeks/followers",
    "following_url": "https://api.github.com/users/Mister-Meeseeks/following{/other_user}",
    "gists_url": "https://api.github.com/users/Mister-Meeseeks/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Mister-Meeseeks/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Mister-Meeseeks/subscriptions",
    "organizations_url": "https://api.github.com/users/Mister-Meeseeks/orgs",
    "repos_url": "https://api.github.com/users/Mister-Meeseeks/repos",
    "events_url": "https://api.github.com/users/Mister-Meeseeks/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Mister-Meeseeks/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    },
    {
      "id": 1132689577,
      "node_id": "MDU6TGFiZWwxMTMyNjg5NTc3",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:triage",
      "name": "status:triage",
      "color": "6be514",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-02-23T04:40:48Z",
  "updated_at": "2021-06-17T08:21:05Z",
  "closed_at": "2021-06-17T08:21:05Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# Rationale\r\n\r\nTeam lead Peter Szilagyi has cited Geth client performance as the main reason not to increase block size gas limit. Major miners appear to be [listening to this advice](https://twitter.com/sparkpool_eth/status/1357753534033330178). However it's pretty clear that there's a major gas shortage, that's resulting in millions per day in unnecessary gas fees. Therefore improving Geth performance would literally be worth hundreds of millions to the community. \r\n\r\nBased on this, can we please define and build a performance benchmark suite for transparently determining what the safe block gas limit is. That way instead of just going off the core team's gut feeling, we can all point the current client code at the performance suite, run it through with the proposed block size and get a simple, transparent, easy to interpret yay or nay. If we pre-commit to this benchmark it makes the project much more transparent, and eliminates the inside baseball and back channeling between core devs and miners.\r\n\r\nEven more importantly, it gives clear feedback and would-be performance improvements. Automated performance benchmarks built into the Geth project, would invite many more people to contribute performance improvements. It would be much simpler for pull requests to clearly show how much they increase block size capacity.\r\n\r\n# Implementation\r\n\r\nThe performance benchmark suites should stress all the pain points that come with larger block sizes. That includes validation time, memory usage, bandwidth, simulated uncle rate, pre-mine commit, storage, disk I/O. It should also include tunable parameters for different runtime environments. Obviously the most important is simulated block size. But other components might be cache size, network connection, the number of CPUs, etc. The transaction data used to run the performance benchmark should probably be pulled as close as possible from the live block chain. Periodically that may need to be updated, as the contracts that run on chain change over time. ",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22366/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22366/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/784285906",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22366#issuecomment-784285906",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22366",
    "id": 784285906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDI4NTkwNg==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-23T15:31:35Z",
    "updated_at": "2021-02-23T15:31:35Z",
    "author_association": "MEMBER",
    "body": "You can just use mainnet as your benchmark. See how long it takes to sync it, see how fast the state grows, see how much time a block import takes while in sync. Though the catch is that we need to cover the worst possible case, not the average case.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/784285906/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/784317165",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22366#issuecomment-784317165",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22366",
    "id": 784317165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDMxNzE2NQ==",
    "user": {
      "login": "Mister-Meeseeks",
      "id": 18204987,
      "node_id": "MDQ6VXNlcjE4MjA0OTg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/18204987?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mister-Meeseeks",
      "html_url": "https://github.com/Mister-Meeseeks",
      "followers_url": "https://api.github.com/users/Mister-Meeseeks/followers",
      "following_url": "https://api.github.com/users/Mister-Meeseeks/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mister-Meeseeks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mister-Meeseeks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mister-Meeseeks/subscriptions",
      "organizations_url": "https://api.github.com/users/Mister-Meeseeks/orgs",
      "repos_url": "https://api.github.com/users/Mister-Meeseeks/repos",
      "events_url": "https://api.github.com/users/Mister-Meeseeks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mister-Meeseeks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-23T16:13:15Z",
    "updated_at": "2021-02-23T16:13:15Z",
    "author_association": "NONE",
    "body": "Thanks for the explanation. I'm currently running a custom fork that simulates an expanded pending block against mainnet. I've already got some benchmarks on block validation time.\r\n\r\nI'm having trouble imagining how to benchmark state growth against mainnet. Obviously, all you can do is fork on the next pending block. Do you think it makes sense to compare the per-block difference in state growth, then extrapolate to long-term rates? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/784317165/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/858440637",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22366#issuecomment-858440637",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22366",
    "id": 858440637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1ODQ0MDYzNw==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-10T08:52:11Z",
    "updated_at": "2021-06-10T08:52:11Z",
    "author_association": "MEMBER",
    "body": "Sorry for not going into too many details before, was trying to not reveal too much of the DoS problems.\r\n\r\nEssentially currently it takes 0.3s to execute a 25M gas block with all the Geth optimizations in place. Without snapshots, it takes 1.5s. The code is available at https://blog.ethereum.org/2021/05/18/eth_state_problems/ .\r\n\r\nThis attack is IMHO a fairly good worst case scenario for benchmarking apart of doing a mainnet sync.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/858440637/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
