{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25936",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25936/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25936/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25936/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/25936",
  "id": 1398599486,
  "node_id": "I_kwDOAOvK985TXO8-",
  "number": 25936,
  "title": "latest 1.10.25 won't do initial sync until CL is sync",
  "user": {
    "login": "garyng2000",
    "id": 241666,
    "node_id": "MDQ6VXNlcjI0MTY2Ng==",
    "avatar_url": "https://avatars.githubusercontent.com/u/241666?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/garyng2000",
    "html_url": "https://github.com/garyng2000",
    "followers_url": "https://api.github.com/users/garyng2000/followers",
    "following_url": "https://api.github.com/users/garyng2000/following{/other_user}",
    "gists_url": "https://api.github.com/users/garyng2000/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/garyng2000/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/garyng2000/subscriptions",
    "organizations_url": "https://api.github.com/users/garyng2000/orgs",
    "repos_url": "https://api.github.com/users/garyng2000/repos",
    "events_url": "https://api.github.com/users/garyng2000/events{/privacy}",
    "received_events_url": "https://api.github.com/users/garyng2000/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-10-06T01:30:20Z",
  "updated_at": "2022-10-06T06:56:23Z",
  "closed_at": "2022-10-06T06:56:23Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "The 1.10.25 add the condition that it would only start to sync when the CL layer is fully sync. This make setting up a new node more time consuming(may need 1-2 days to first sync in prysm) then geth.\r\n\r\nand in prysm, I am seeing this because EL is not synced, so it becomes a chicken and egg issue.\r\n\r\n\"ERROR powchain: Unable to process past deposit contract logs, perhaps your execution client is not fully synced error=no contract code at given address\"\r\n\r\nI assume that even though it is shown as error, it probably is fine but just odd.\r\n\r\nCan there be a flag to disable this behaviour ? As pre-merge data can be synced without CL.",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25936/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25936/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1269440031",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25936#issuecomment-1269440031",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25936",
    "id": 1269440031,
    "node_id": "IC_kwDOAOvK985Lqh4f",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-06T06:56:22Z",
    "updated_at": "2022-10-06T06:56:22Z",
    "author_association": "MEMBER",
    "body": ">  I am seeing this because EL is not synced, so it becomes a chicken and egg issue.\r\n\r\nThe solution to the chicken and egg problem is that CL does an \"optimistic sync\". Using checkpoints usually help. \r\n\r\n> Can there be a flag to disable this behaviour ? As pre-merge data can be synced without CL.\r\n\r\nYes and no. The pre-merge data only helps so far. So, in theory, it could \r\n\r\n- Do a block by block import from genesis until merge, This is still possible, via `syncmode=full`. \r\n- Do a header by header verification up until merge. Geth could download headers and block bodies until this point, but would not be able to download state data, since it's stale and forgotten by the network at this point in time. Geth would still have to wait for CL to direct where to 'go next', and then download the remaining headers (and hope they link up) and bodies, and then sync the state. Since the state-sync is often the most intense part, this way of syncing doesn't help a lot. \r\n\r\nSo not really a lot of good choices here. We're doing what we can",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1269440031/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
