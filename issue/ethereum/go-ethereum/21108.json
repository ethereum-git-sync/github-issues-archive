{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21108",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21108/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21108/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21108/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/21108",
  "id": 622222255,
  "node_id": "MDU6SXNzdWU2MjIyMjIyNTU=",
  "number": 21108,
  "title": "Undocumented change in `eth_call` behavior? ",
  "user": {
    "login": "swaldman",
    "id": 1733981,
    "node_id": "MDQ6VXNlcjE3MzM5ODE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1733981?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/swaldman",
    "html_url": "https://github.com/swaldman",
    "followers_url": "https://api.github.com/users/swaldman/followers",
    "following_url": "https://api.github.com/users/swaldman/following{/other_user}",
    "gists_url": "https://api.github.com/users/swaldman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/swaldman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/swaldman/subscriptions",
    "organizations_url": "https://api.github.com/users/swaldman/orgs",
    "repos_url": "https://api.github.com/users/swaldman/repos",
    "events_url": "https://api.github.com/users/swaldman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/swaldman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2020-05-21T03:33:59Z",
  "updated_at": "2021-02-15T16:33:11Z",
  "closed_at": "2020-07-02T08:35:31Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: `v1.9.13`\r\nOS & Version: Linux\r\n\r\n#### Expected behaviour\r\n\r\nIn prior versions, `eth_call` (with gas price and limit explicitly set) succeeded regardless of the actual eth balance of the calling account. One could access return values in a read only way, even when the sender account had no gas.\r\n\r\n#### Actual behaviour\r\n\r\nAfter upgrading to `v1.9.13` (from an earlier version, alas I'm not sure which), `eth_call` transactions from accounts with no gas fail with \"insufficient balance to pay for gas [code=-32000]\"\r\n\r\n#### Comment\r\n\r\nThe new behavior is a significant break from prior behavior, where applications (well, my applications) specified arbitrary unfunded accounts to hit accessor methods without intending to modify blockchain state.\r\n\r\nFor many applications, the issue is mostly mitigated by the fact that, post-[v1.9.12](https://github.com/ethereum/go-ethereum/releases/tag/v1.9.12), when sender is unspecified, the sender defaults to `0x0000000000000000000000000000000000000000`, which turns out to be a very well funded account. `eth_call` transactions from this address won't fail for lack of gas unless they specify very large quantities in the `value` field of the transaction.\r\n\r\nBut for applications which did specify a sender account, gas price, and gas limit, this is a significant breaking change of behavior. From my perspective, the new behavior is inconvenient. My preference would be that the original behavior be restored. If the new behavior is retained -- one might argue it's \"correct\", in that it more accurately simulates what would occur if a true transaction were attempted -- the change should at least be prominently documented.\r\n\r\nThere is a documented breaking change to `eth_call` in `v1.9.12`, for the case in which the sender account is unspecified. No breaking change is documented or warned for the case where a sender is specified.\r\n\r\nFor an example of what the new behavior might break, see [https://www.sbt-ethereum.io/tutorials/using-a-smart-contract-i.html#accessing-read-only-methods-of-an-smart-contract](https://www.sbt-ethereum.io/tutorials/using-a-smart-contract-i.html#accessing-read-only-methods-of-an-smart-contract). People following this tutorial from the start will have defined a specific sender account (in [Getting Started](https://www.sbt-ethereum.io/tutorials/getting-started.html)), but not funded it. Previously, they could hit methods for read-only access from their new accounts without issue. Now those attempts will fail.\r\n\r\nThank you!",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21108/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21108/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/632498225",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21108#issuecomment-632498225",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21108",
    "id": 632498225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjQ5ODIyNQ==",
    "user": {
      "login": "swaldman",
      "id": 1733981,
      "node_id": "MDQ6VXNlcjE3MzM5ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1733981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swaldman",
      "html_url": "https://github.com/swaldman",
      "followers_url": "https://api.github.com/users/swaldman/followers",
      "following_url": "https://api.github.com/users/swaldman/following{/other_user}",
      "gists_url": "https://api.github.com/users/swaldman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swaldman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swaldman/subscriptions",
      "organizations_url": "https://api.github.com/users/swaldman/orgs",
      "repos_url": "https://api.github.com/users/swaldman/repos",
      "events_url": "https://api.github.com/users/swaldman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swaldman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-22T05:52:16Z",
    "updated_at": "2020-05-22T05:52:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "The source of the undocumented breaking change is this commit: https://github.com/ethereum/go-ethereum/commit/39f502329fac4640cfb71959c3496f19ea88bc85\r\n\r\nPreviously, when the EVM in which `eth_call` is executed was created, the sender's balance was set to `math.MaxBig256`. Now the sender's balance is left alone, but `gasPrice` is set to 0 _if and only if_ `gasPrice` is not explicitly specified as an argument.\r\n\r\nSo previously, calls to `eth_call` with `gasPrice` and `gas` both set would always succeed (or at least they would never fail for lack of gas). Now the same calls will fail if the sender account is unfunded, unless `gasPrice` is left unspecified or explicitly set to zero.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/632498225/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/652870319",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21108#issuecomment-652870319",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21108",
    "id": 652870319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mjg3MDMxOQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T08:35:31Z",
    "updated_at": "2020-07-02T08:35:31Z",
    "author_association": "MEMBER",
    "body": "We changed this in the commit you found, for several reasons  (see e.g. https://github.com/ethereum/go-ethereum/issues/16999)\r\n\r\n- We now do the same thing parity does, which is nice, \r\n- Previously, the return value from the call would vary depending on whatever accounts the local node had. This is quirky, especially when using a remote node for RPC calls. \r\n\r\nSo now we do use the `0x00` account when it's unspecified, and we use `gasPrice` of zero, so that even an unfunded account can do gas-measurements and test-calls. If you need to actually have some 'ether' for the call, you can just specify a sender, and add an override to how much ether you want the sender-account to have. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/652870319/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/653291204",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21108#issuecomment-653291204",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21108",
    "id": 653291204,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzI5MTIwNA==",
    "user": {
      "login": "swaldman",
      "id": 1733981,
      "node_id": "MDQ6VXNlcjE3MzM5ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1733981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swaldman",
      "html_url": "https://github.com/swaldman",
      "followers_url": "https://api.github.com/users/swaldman/followers",
      "following_url": "https://api.github.com/users/swaldman/following{/other_user}",
      "gists_url": "https://api.github.com/users/swaldman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swaldman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swaldman/subscriptions",
      "organizations_url": "https://api.github.com/users/swaldman/orgs",
      "repos_url": "https://api.github.com/users/swaldman/repos",
      "events_url": "https://api.github.com/users/swaldman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swaldman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-03T01:54:29Z",
    "updated_at": "2020-07-03T01:54:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree the dependency-on-local-node accounts when a sender account was unspecified was bad. Fixing that was [documented](https://github.com/ethereum/go-ethereum/releases/tag/v1.9.12) and good. That when an account was specified, calls that used to succeed suddenly failed was not so good, and I think should have been documented, as far as I can tell was not. In any case, once found the PR and understood the behavior, it was easy to modify my code to work again by [not setting a gas price](https://github.com/swaldman/consuela/blob/master/src/main/scala/com/mchange/sc/v1/consuela/ethereum/jsonrpc/Invoker.scala#L505) unless a new `strict` flag is set. So I'm over it, and always very grateful for work.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/653291204/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/779332387",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21108#issuecomment-779332387",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21108",
    "id": 779332387,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTMzMjM4Nw==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-15T16:32:08Z",
    "updated_at": "2021-02-15T16:33:11Z",
    "author_association": "MEMBER",
    "body": "Any chance this could get revisited?  Specifically, if you specify a `gasPrice` (because some contracts have behavior changes based on `GASPRICE` opcode) but you do *not* specify a `gasLimit` then a `gasLimit` of `125,000,000` will be supplied which will result in a 12.5 ETH gas requirement (at today's gas prices) and cause a failure for most average users.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/779332387/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
