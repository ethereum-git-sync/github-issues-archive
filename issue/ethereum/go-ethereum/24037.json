{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24037",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24037/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24037/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24037/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/24037",
  "id": 1069603278,
  "node_id": "I_kwDOAOvK984_wNnO",
  "number": 24037,
  "title": "Error: invalid gas used",
  "user": {
    "login": "TonyHzr",
    "id": 37975300,
    "node_id": "MDQ6VXNlcjM3OTc1MzAw",
    "avatar_url": "https://avatars.githubusercontent.com/u/37975300?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/TonyHzr",
    "html_url": "https://github.com/TonyHzr",
    "followers_url": "https://api.github.com/users/TonyHzr/followers",
    "following_url": "https://api.github.com/users/TonyHzr/following{/other_user}",
    "gists_url": "https://api.github.com/users/TonyHzr/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/TonyHzr/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/TonyHzr/subscriptions",
    "organizations_url": "https://api.github.com/users/TonyHzr/orgs",
    "repos_url": "https://api.github.com/users/TonyHzr/repos",
    "events_url": "https://api.github.com/users/TonyHzr/events{/privacy}",
    "received_events_url": "https://api.github.com/users/TonyHzr/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 268304226,
      "node_id": "MDU6TGFiZWwyNjgzMDQyMjY=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:docs",
      "name": "type:docs",
      "color": "fef2c0",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2021-12-02T14:19:29Z",
  "updated_at": "2022-02-16T21:00:09Z",
  "closed_at": "2022-02-16T21:00:09Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Error: invalid gas used (remote: 7979005 local: 7979332)\r\n\r\nGeth version: 1.10.13\r\n\r\nBlock Number: 8262819\r\n\r\nBlock Hash: 0x1bdbbded4f50d074bef4683da452b5ed06a22caa00cc219dd6078690263c22fd\r\n\r\nTransaction Hash: 0xb4acf2df75e7e798a86e9bd9874eb1bddd8f45e1a5618baad979d86d3083e86a\r\n\r\nExpect usage by Txn is 54,904, but result is 55, 231\r\n\r\n> 361: cumulative: 7815754 gas: 55231 contract: 0x0000000000000000000000000000000000000000 status: 0 tx: 0xb4acf2df75e7e798a86e9bd9874eb1bddd8f45e1a5618baad979d86d3083e86a logs: [] bloomstate:",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24037/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24037/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/984822345",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24037#issuecomment-984822345",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24037",
    "id": 984822345,
    "node_id": "IC_kwDOAOvK9846szJJ",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-02T17:05:49Z",
    "updated_at": "2021-12-02T17:05:49Z",
    "author_association": "MEMBER",
    "body": "I assume geth reported this as a bad block? Can you please post more logs surrounding the error and also the startup logs? specifically if there were unclean shutdowns",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/984822345/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/985502802",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24037#issuecomment-985502802",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24037",
    "id": 985502802,
    "node_id": "IC_kwDOAOvK9846vZRS",
    "user": {
      "login": "TonyHzr",
      "id": 37975300,
      "node_id": "MDQ6VXNlcjM3OTc1MzAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/37975300?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TonyHzr",
      "html_url": "https://github.com/TonyHzr",
      "followers_url": "https://api.github.com/users/TonyHzr/followers",
      "following_url": "https://api.github.com/users/TonyHzr/following{/other_user}",
      "gists_url": "https://api.github.com/users/TonyHzr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TonyHzr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TonyHzr/subscriptions",
      "organizations_url": "https://api.github.com/users/TonyHzr/orgs",
      "repos_url": "https://api.github.com/users/TonyHzr/repos",
      "events_url": "https://api.github.com/users/TonyHzr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TonyHzr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-03T13:05:23Z",
    "updated_at": "2021-12-03T13:22:10Z",
    "author_association": "NONE",
    "body": "Thank you very much for your reply. Forgive my confusing description, I was so anxious yesterday.\r\n\r\nIn fact, I am trying to run an archived node. I downloaded the original blocks data, including block header, transactions, uncles, from the infura due to network reasons and re-executed all blocks to get the world states of each block height. I have verified them through the block header hash and MPT root hash of transactions.\r\n\r\nThe following is the re-executed code omitting the part that reads the block. It started from the genesis block and worked to a block height of 8262818. However, the error described earlier occurred at that height of 8262819.\r\n\r\nThe content of the output indicates that the gas consumed for execution is different from that indicated in the block (that is 8262819). According to my observation, this happened in the 361st transaction: 7979332 - 7979005 = 55231 - 54904 = 327.\r\n\r\nAmong them, 7979332 is the gas consumed by my execution, 7979005 is the value indicated in the block, 55231 is the consumed gas of the 361st transaction by the execution, and 54904 is from the web etherscan.\r\n\r\nAnd, in this block, only the 361st transaction failed to execute, I am not sure if the error is related to it.\r\n\r\nWhat should I do to fix this error, thank you again for your help.\r\n\r\n```golang\r\n    // Initialize the genesis block\r\n\tchainConfig, genesisHash, genesisErr := core.SetupGenesisBlockWithOverride(chainDb, nil, ethconfig.Defaults.OverrideArrowGlacier)\r\n\tif _, ok := genesisErr.(*params.ConfigCompatError); genesisErr != nil && !ok {\r\n\t\treturn genesisErr\r\n\t}\r\n\r\n    // Initialize the eth config\r\n\tconfig := ethconfig.Defaults\r\n\tconfig.SnapshotCache = 0          \r\n\tconfig.Ethash.CachesInMem = 10    \r\n\tconfig.Ethash.CachesOnDisk = 15   \r\n\tconfig.Ethash.DatasetsInMem = 5   \r\n\tconfig.Ethash.DatasetsOnDisk = 10 \r\n\tconfig.DatabaseCache = 2048       \r\n\tconfig.TrieCleanCache = 512       \r\n\tconfig.NoPruning = true\r\n\tconfig.Ethash.CacheDir = filepath.Join(rootDir, geth, \"ethash\")\r\n\tconfig.Ethash.DatasetDir = filepath.Join(rootDir, geth, \"ethash_DatasetDir\")\r\n\tethashConfig := config.Ethash\r\n\r\n    // New an evm engine\r\n\tengine := ethash.New(ethash.Config{\r\n\t\tPowMode:          ethashConfig.PowMode,\r\n\t\tCacheDir:         config.Ethash.CacheDir,\r\n\t\tCachesInMem:      ethashConfig.CachesInMem,\r\n\t\tCachesOnDisk:     ethashConfig.CachesOnDisk,\r\n\t\tCachesLockMmap:   ethashConfig.CachesLockMmap,\r\n\t\tDatasetDir:       ethashConfig.DatasetDir,\r\n\t\tDatasetsInMem:    ethashConfig.DatasetsInMem,\r\n\t\tDatasetsOnDisk:   ethashConfig.DatasetsOnDisk,\r\n\t\tDatasetsLockMmap: ethashConfig.DatasetsLockMmap,\r\n\t\tNotifyFull:       ethashConfig.NotifyFull,\r\n\t}, config.Miner.Notify, config.Miner.Noverify)\r\n\tengine.SetThreads(-1) // Disable CPU mining\r\n\r\n    // Initialize evm config\r\n\tvmConfig := vm.Config{\r\n\t\tEnablePreimageRecording: config.EnablePreimageRecording,\r\n\t}\r\n\r\n\tcacheConfig := &core.CacheConfig{\r\n\t\tTrieCleanLimit:      config.TrieCleanCache,\r\n\t\tTrieCleanJournal:    filepath.Join(rootDir, geth, \"triecache\"),\r\n\t\tTrieCleanRejournal:  config.TrieCleanCacheRejournal,\r\n\t\tTrieCleanNoPrefetch: config.NoPrefetch,\r\n\t\tTrieDirtyLimit:      config.TrieDirtyCache,\r\n\t\tTrieDirtyDisabled:   config.NoPruning,\r\n\t\tTrieTimeLimit:       config.TrieTimeout,\r\n\t\tSnapshotLimit:       config.SnapshotCache,\r\n\t\tPreimages:           config.Preimages,\r\n\t}\r\n\r\n    // Initialize the BlochChain\r\n\tblockchain, err := core.NewBlockChain(chainDb, cacheConfig, chainConfig, engine, vmConfig, nil, &config.TxLookupLimit)\r\n\tif err != nil {\r\n\t\treturn err\r\n\t}\r\n\r\n    // Read blocks from the local database, then insert them into the blockchain\r\n\tfor blocks := range blocksCh {\r\n\t\t_, err := blockchain.InsertChain(blocks)\r\n\t\tif err != nil {\r\n\t\t\treturn err\r\n\t\t}\r\n\t}\r\n\r\n\treturn nil\r\n```\r\n```\r\n> INFO [12-03|20:10:00.144] Allocated cache and file handles         database=D:\\ethereum-data\\database\\block cache=16.00MiB handles=16 readonly=true\r\n> INFO [12-03|20:10:01.937] Allocated cache and file handles         database=D:\\ethereum-data\\geth\\block            cache=1024.00MiB handles=64\r\n> INFO [12-03|20:10:18.548] Disk storage enabled for ethash caches   dir=D:\\ethereum-data\\geth\\ethash count=15\r\n> INFO [12-03|20:10:18.548] Disk storage enabled for ethash DAGs     dir=D:\\ethereum-data\\geth\\ethash_DatasetDir count=10\r\n> INFO [12-03|20:10:19.407] Loaded most recent local header          number=8,262,798 hash=11a784..b155b1 td=11,263,920,799,902,470,277,371 age=2y4mo2w\r\n> INFO [12-03|20:10:19.410] Loaded most recent local full block      number=8,262,818 hash=abceba..a6e6b3 td=11,263,964,860,786,644,365,862 age=2y4mo2w\r\n> INFO [12-03|20:10:19.410] Loaded most recent local fast block      number=8,262,818 hash=abceba..a6e6b3 td=11,263,964,860,786,644,365,862 age=2y4mo2w\r\n> INFO [12-03|20:10:19.792] Skip duplicated bad block                number=8,262,819 hash=1bdbbd..3c22fd\r\n> ERROR[12-03|20:10:19.808]\r\n> ########## BAD BLOCK #########\r\n> Chain config: {ChainID: 1 Homestead: 1150000 DAO: 1920000 DAOSupport: true EIP150: 2463000 EIP155: 2675000 EIP158: 2675000 Byzantium: 4370000 Constantinople: 7280000 Petersburg: 7280000 Istanbul: 9069000, Muir Glacier: 9200000, Berlin: 12244000, London: 12965000, Arrow Glacier: 13773000, Engine: ethash}\r\n> \r\n> Number: 8262819\r\n> Hash: 0x1bdbbded4f50d074bef4683da452b5ed06a22caa00cc219dd6078690263c22fd\r\n>         0: cumulative: 21000 gas: 21000 contract: 0x0000000000000000000000000000000000000000 status: 1 tx: 0x9043ad8ae274b8ade7854c71d03c053bfbfbfd290b5c9c4076cf54ae67ce5962 logs: [] bloomstate:\r\n>         ...\r\n>         361: cumulative: 7815754 gas: 55231 contract: 0x0000000000000000000000000000000000000000 status: 0 tx: 0xb4acf2df75e7e798a86e9bd9874eb1bddd8f45e1a5618baad979d86d3083e86a logs: [] bloomstate:\r\n>         ...\r\n>         366: cumulative: 7979332 gas: 21000 contract: 0x0000000000000000000000000000000000000000 status: 1 tx: 0x7d93afc481408aac39c3b8c7e8519a4657ffb568ce17c3d42705ac5d5bc61146 logs: [] bloomstate:\r\n>\r\n>\r\n> Error: invalid gas used (remote: 7979005 local: 7979332)\r\n> ##############################\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/985502802/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/985504343",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24037#issuecomment-985504343",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24037",
    "id": 985504343,
    "node_id": "IC_kwDOAOvK9846vZpX",
    "user": {
      "login": "TonyHzr",
      "id": 37975300,
      "node_id": "MDQ6VXNlcjM3OTc1MzAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/37975300?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TonyHzr",
      "html_url": "https://github.com/TonyHzr",
      "followers_url": "https://api.github.com/users/TonyHzr/followers",
      "following_url": "https://api.github.com/users/TonyHzr/following{/other_user}",
      "gists_url": "https://api.github.com/users/TonyHzr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TonyHzr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TonyHzr/subscriptions",
      "organizations_url": "https://api.github.com/users/TonyHzr/orgs",
      "repos_url": "https://api.github.com/users/TonyHzr/repos",
      "events_url": "https://api.github.com/users/TonyHzr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TonyHzr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-03T13:07:16Z",
    "updated_at": "2021-12-03T13:07:16Z",
    "author_association": "NONE",
    "body": "> I assume geth reported this as a bad block? Can you please post more logs surrounding the error and also the startup logs? specifically if there were unclean shutdowns\r\n\r\nThanks for your reply, I added some information above",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/985504343/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/985514557",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24037#issuecomment-985514557",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24037",
    "id": 985514557,
    "node_id": "IC_kwDOAOvK9846vcI9",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-03T13:21:36Z",
    "updated_at": "2021-12-03T13:21:36Z",
    "author_association": "MEMBER",
    "body": "Normally, one could do somethink like this via `geth import`. which can take a bunch of blocks in rlp-form (just a dump of the rlp block, one after the other), instead of doing it programmatically, as you have done. \r\nThe way you have done it, it's a bit hard to know whether you have handled the service shutdown correctly. When geth shuts down, there are a sequence of events that need to be performed, which we handle via deferred methods. If you have not followed the same sequence, it's fully possible that one of your previous shutdowns did not properly persist some of the trie data, leading to missing trie data, and finally to a bad block. \r\n\r\nBut it's a bit hard to say for sure. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/985514557/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/985533537",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24037#issuecomment-985533537",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24037",
    "id": 985533537,
    "node_id": "IC_kwDOAOvK9846vgxh",
    "user": {
      "login": "TonyHzr",
      "id": 37975300,
      "node_id": "MDQ6VXNlcjM3OTc1MzAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/37975300?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TonyHzr",
      "html_url": "https://github.com/TonyHzr",
      "followers_url": "https://api.github.com/users/TonyHzr/followers",
      "following_url": "https://api.github.com/users/TonyHzr/following{/other_user}",
      "gists_url": "https://api.github.com/users/TonyHzr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TonyHzr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TonyHzr/subscriptions",
      "organizations_url": "https://api.github.com/users/TonyHzr/orgs",
      "repos_url": "https://api.github.com/users/TonyHzr/repos",
      "events_url": "https://api.github.com/users/TonyHzr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TonyHzr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-03T13:46:20Z",
    "updated_at": "2021-12-03T13:46:20Z",
    "author_association": "NONE",
    "body": "> Normally, one could do somethink like this via `geth import`. which can take a bunch of blocks in rlp-form (just a dump of the rlp block, one after the other), instead of doing it programmatically, as you have done. The way you have done it, it's a bit hard to know whether you have handled the service shutdown correctly. When geth shuts down, there are a sequence of events that need to be performed, which we handle via deferred methods. If you have not followed the same sequence, it's fully possible that one of your previous shutdowns did not properly persist some of the trie data, leading to missing trie data, and finally to a bad block.\r\n> \r\n> But it's a bit hard to say for sure.\r\n\r\nThank you for your reply.\r\n\r\nI didn’t know about this feature `geth import` before, maybe I should give it a try.\r\n\r\nBut, is there a way to detect what trie data I’m missing now? It’s a waste of time to re-execute.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/985533537/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/985552257",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24037#issuecomment-985552257",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24037",
    "id": 985552257,
    "node_id": "IC_kwDOAOvK9846vlWB",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-03T14:11:51Z",
    "updated_at": "2021-12-03T14:11:51Z",
    "author_association": "MEMBER",
    "body": "> But, is there a way to detect what trie data I’m missing now? It’s a waste of time to re-execute.\r\n\r\nYes, there is. Check out `geth snapshot traverse-state -h` \r\n```\r\ntraverse-state [command options] <root>\r\n\r\ngeth snapshot traverse-state <state-root>\r\nwill traverse the whole state from the given state root and will abort if any\r\nreferenced trie node or contract code is missing. This command can be used for\r\nstate integrity verification. The default checking target is the HEAD state.\r\n\r\nIt's also usable without snapshot enabled.\r\n\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/985552257/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/985553404",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24037#issuecomment-985553404",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24037",
    "id": 985553404,
    "node_id": "IC_kwDOAOvK9846vln8",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-03T14:13:17Z",
    "updated_at": "2021-12-03T14:13:17Z",
    "author_association": "MEMBER",
    "body": "That will only find where the error is, it won't actually fix it for you. But theoretically it's pretty easy to fix with the new db commands -- one node could export the exact data you need, and you could import it. I might be able to help out with that, to try out the UX around the new exporters/importers a bit",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/985553404/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/985568556",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24037#issuecomment-985568556",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24037",
    "id": 985568556,
    "node_id": "IC_kwDOAOvK9846vpUs",
    "user": {
      "login": "TonyHzr",
      "id": 37975300,
      "node_id": "MDQ6VXNlcjM3OTc1MzAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/37975300?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TonyHzr",
      "html_url": "https://github.com/TonyHzr",
      "followers_url": "https://api.github.com/users/TonyHzr/followers",
      "following_url": "https://api.github.com/users/TonyHzr/following{/other_user}",
      "gists_url": "https://api.github.com/users/TonyHzr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TonyHzr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TonyHzr/subscriptions",
      "organizations_url": "https://api.github.com/users/TonyHzr/orgs",
      "repos_url": "https://api.github.com/users/TonyHzr/repos",
      "events_url": "https://api.github.com/users/TonyHzr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TonyHzr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-03T14:33:25Z",
    "updated_at": "2021-12-03T14:33:25Z",
    "author_association": "NONE",
    "body": "> That will only find where the error is, it won't actually fix it for you. But theoretically it's pretty easy to fix with the new db commands -- one node could export the exact data you need, and you could import it. I might be able to help out with that, to try out the UX around the new exporters/importers a bit\r\n\r\nThank you again. That's great news for me, I will try it now.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/985568556/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1005641824",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24037#issuecomment-1005641824",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24037",
    "id": 1005641824,
    "node_id": "IC_kwDOAOvK98478OBg",
    "user": {
      "login": "MoGuGuai-hzr",
      "id": 66289672,
      "node_id": "MDQ6VXNlcjY2Mjg5Njcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/66289672?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MoGuGuai-hzr",
      "html_url": "https://github.com/MoGuGuai-hzr",
      "followers_url": "https://api.github.com/users/MoGuGuai-hzr/followers",
      "following_url": "https://api.github.com/users/MoGuGuai-hzr/following{/other_user}",
      "gists_url": "https://api.github.com/users/MoGuGuai-hzr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MoGuGuai-hzr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MoGuGuai-hzr/subscriptions",
      "organizations_url": "https://api.github.com/users/MoGuGuai-hzr/orgs",
      "repos_url": "https://api.github.com/users/MoGuGuai-hzr/repos",
      "events_url": "https://api.github.com/users/MoGuGuai-hzr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MoGuGuai-hzr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-05T12:24:31Z",
    "updated_at": "2022-01-05T12:24:31Z",
    "author_association": "NONE",
    "body": "Hi, brother. I seem to locate this problem, but I don't know how and why it happened.\r\n\r\nThe error occurred on transaction `0xb4acf2df75e7e798a86e9bd9874eb1bddd8f45e1a5618baad979d86d3083e86a` in block `8262819`.\r\n\r\nI found that this transaction uses `STATICCALL` to send some data to address `0x0000000000000000000000000000000000000001`, that is, the method `ecrecover` is called.\r\n\r\nThis method returns different results in different systems. \r\n\r\nIn ubuntu, its results are as follows, which is exactly what we expect and consistent with the current results on Ethereum.\r\n> ecrecover input: [187 96 219 168 155 3 169 4 121 177 81 151 52 171 4 70 63 107 57 13 239 31 227 245 37 152 194 136 190 12 160 188 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 28 175 213 44 44 157 70 98 170 123 13 188 240 91 160 47 101 215 183 32 89 157 103 110 15 33 90 222 137 70 187 65 238 26 171 201 10 15 215 197 247 232 145 134 173 164 40 30 36 208 100 103 222 129 78 22 77 104 166 49 40 31 50 80 147]\r\n> ecrecover return: []\r\n> ecrecover err: \\<nil\\>\r\n\r\nBecause some errors occurred in the process of executing method `ecrecover`: the return of the function `crypto.Ecrecover` is `recovery failed`.\r\n\r\nBut in windows, its results are as follows.\r\n> ecrecover input: [187 96 219 168 155 3 169 4 121 177 81 151 52 171 4 70 63 107 57 13 239 31 227 245 37 152 194 136 190 12 160 188 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 28 175 213 44 44 157 70 98 170 123 13 188 240 91 160 47 101 215 183 32 89 157 103 110 15 33 90 222 137 70 187 65 238 26 171 201 10 15 215 197 247 232 145 134 173 164 40 30 36 208 100 103 222 129 78 22 77 104 166 49 40 31 50 80 147]\r\n> ecrecover return: [0 0 0 0 0 0 0 0 0 0 0 0 63 23 241 150 43 54 228 145 179 10 64 178 64 88 73 229 151 186 95 181]\r\n> ecrecover err: \\<nil\\>\r\n\r\nNo error occurred.\r\n\r\nI noticed that CGO is used in the method `crypto.Ecrecover`, but I am not sure if the problem is caused by it.\r\n\r\nAnd I must confess that the executable program in windows is obtained by using the following cross-compilation command on ubuntu, which may be the cause of the inconsistency:\r\n> GOOS=windows GOARCH=amd64 env GO111MODULE=on go build -o ./build/bin ./my-geth",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1005641824/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1039206039",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24037#issuecomment-1039206039",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24037",
    "id": 1039206039,
    "node_id": "IC_kwDOAOvK98498QaX",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-14T15:16:00Z",
    "updated_at": "2022-02-14T15:16:00Z",
    "author_association": "MEMBER",
    "body": "@MoGuGuai-hzr could  you please test https://github.com/ethereum/go-ethereum/pull/24387 ? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1039206039/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1039758691",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24037#issuecomment-1039758691",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24037",
    "id": 1039758691,
    "node_id": "IC_kwDOAOvK9849-XVj",
    "user": {
      "login": "MoGuGuai-hzr",
      "id": 66289672,
      "node_id": "MDQ6VXNlcjY2Mjg5Njcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/66289672?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MoGuGuai-hzr",
      "html_url": "https://github.com/MoGuGuai-hzr",
      "followers_url": "https://api.github.com/users/MoGuGuai-hzr/followers",
      "following_url": "https://api.github.com/users/MoGuGuai-hzr/following{/other_user}",
      "gists_url": "https://api.github.com/users/MoGuGuai-hzr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MoGuGuai-hzr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MoGuGuai-hzr/subscriptions",
      "organizations_url": "https://api.github.com/users/MoGuGuai-hzr/orgs",
      "repos_url": "https://api.github.com/users/MoGuGuai-hzr/repos",
      "events_url": "https://api.github.com/users/MoGuGuai-hzr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MoGuGuai-hzr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-15T01:37:56Z",
    "updated_at": "2022-02-15T01:37:56Z",
    "author_association": "NONE",
    "body": "> @MoGuGuai-hzr could you please test #24387 ?\r\n\r\nI seem to end up with it. This inconsistency error comes from a stupid operation of mine: when compiling the windows version, I used cross-compile, but did not specify the correct cross-compiler. The error no longer appears after using the cross compiler.\r\n\r\nThank you very much for your kind help.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1039758691/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
