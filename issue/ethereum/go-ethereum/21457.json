{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21457",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21457/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21457/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21457/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/21457",
  "id": 681017169,
  "node_id": "MDU6SXNzdWU2ODEwMTcxNjk=",
  "number": 21457,
  "title": "Enable simulated back-end to be used via JSON RPC",
  "user": {
    "login": "Pet3ris",
    "id": 224585,
    "node_id": "MDQ6VXNlcjIyNDU4NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/224585?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Pet3ris",
    "html_url": "https://github.com/Pet3ris",
    "followers_url": "https://api.github.com/users/Pet3ris/followers",
    "following_url": "https://api.github.com/users/Pet3ris/following{/other_user}",
    "gists_url": "https://api.github.com/users/Pet3ris/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Pet3ris/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Pet3ris/subscriptions",
    "organizations_url": "https://api.github.com/users/Pet3ris/orgs",
    "repos_url": "https://api.github.com/users/Pet3ris/repos",
    "events_url": "https://api.github.com/users/Pet3ris/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Pet3ris/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1486629004,
      "node_id": "MDU6TGFiZWwxNDg2NjI5MDA0",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/priority:2",
      "name": "priority:2",
      "color": "f76ac8",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2020-08-18T12:51:38Z",
  "updated_at": "2022-04-11T06:23:54Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hi there,\r\n\r\nThis is to continue the discussion in the following thread: https://github.com/ethereum/go-ethereum/issues/20212. The original thread proposed moving ethapi out of internal but was closed as the problem was solved a different way.\r\n\r\nThere's another good reason to consider moving ethapi out of internal:\r\n\r\n***\r\n\r\nI'm trying to use `go-ethereum`'s RPC API over a simulated back-end object as a library. I'm using a simulated back-end for smart contracts from another programming language and would like to have some fallback access to the simulated back-end state through the RPC API rather than having to implement each end-point one by one.\r\n\r\nIn order to set up the RPC API I'm using `NewServer()` and using a bi-directional pipe as the `codec`. The place where this approach fails is that `APIs()` are only available to full or light ethereum clients, but not the simulated back-end. The simulated back-end exposes `GetAPIs()` but this function is only available as part of `internal/ethapi`.\r\n\r\nAs a result I'm trying to effectively copy & paste the whole `internal/api` folder in my codebase but running into another related [issue](https://github.com/ethereum/go-ethereum/issues/20226) that I've filed.\r\n\r\nWould love to also hear your guidance on how to achieve this and hope this helps support the overall thinking around the `ethapi`!\r\n\r\n***\r\n\r\n**To summarize - from my perspective there should be a way to use `APIs` or `GetAPIs` with the simulated back-end, I wouldn't actually need the whole `ethapi` package to be exposed.**\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21457/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21457/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/762780204",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21457#issuecomment-762780204",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21457",
    "id": 762780204,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2Mjc4MDIwNA==",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-19T11:23:39Z",
    "updated_at": "2021-01-19T11:23:39Z",
    "author_association": "MEMBER",
    "body": "I spent some time thinking about this issue, but I don't think that we should implement it. The SimulatedBackend should imo only be used from go code and I don't think setting up a RPC API on it should be a priority. The sim backend is mainly useful for unit testing in go, for other use cases the `--dev` mode of ethereum is better suited. \r\n\r\nFor the simulated backend to be able to provide all necessary functions to create a meaningful RPC API, it needs to implement the `ethapi.Backend` interface https://github.com/ethereum/go-ethereum/blob/45cb1a580abad0d4e8caa1c8b7dfacd5ef3d27bc/internal/ethapi/backend.go#L41. This would mean adding a lot more functionality into it, that is not needed by most users, so I would prefer not to do it. \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/762780204/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/860301161",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21457#issuecomment-860301161",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21457",
    "id": 860301161,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MDMwMTE2MQ==",
    "user": {
      "login": "trajan0x",
      "id": 83933037,
      "node_id": "MDQ6VXNlcjgzOTMzMDM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/83933037?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trajan0x",
      "html_url": "https://github.com/trajan0x",
      "followers_url": "https://api.github.com/users/trajan0x/followers",
      "following_url": "https://api.github.com/users/trajan0x/following{/other_user}",
      "gists_url": "https://api.github.com/users/trajan0x/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trajan0x/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trajan0x/subscriptions",
      "organizations_url": "https://api.github.com/users/trajan0x/orgs",
      "repos_url": "https://api.github.com/users/trajan0x/repos",
      "events_url": "https://api.github.com/users/trajan0x/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trajan0x/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-14T00:57:06Z",
    "updated_at": "2021-06-14T03:21:05Z",
    "author_association": "NONE",
    "body": "Massive +1 on this for e2e testing.\r\n\r\nAlternatively, is there a way to run with `--dev` from go?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/860301161/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/860393248",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21457#issuecomment-860393248",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21457",
    "id": 860393248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MDM5MzI0OA==",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-14T06:03:29Z",
    "updated_at": "2021-06-14T06:03:29Z",
    "author_association": "MEMBER",
    "body": "You can start it similar to every other command\r\n```go\r\n// start geth in one thread\r\ngo func() {\r\ncmd := exec.Command(\"geth\", \"dev\", \"http.port=8545\")\r\nerr := cmd.Start()\r\nif err != nil {\r\n\tlog.Fatal(err)\r\n}\r\nerr = cmd.Wait()\r\n}\r\n```\r\nand then connect to it using the ethclient in another thread\r\n```go\r\ncl, err := ethclient.Dial(\"127.0.0.1:8545\")\r\n```\r\n(Untested code)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/860393248/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/863385713",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21457#issuecomment-863385713",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21457",
    "id": 863385713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzM4NTcxMw==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-17T16:28:04Z",
    "updated_at": "2021-06-17T16:28:13Z",
    "author_association": "MEMBER",
    "body": "I think what @0xnero was asking is whether there is a way to spin up an RPC server that behaves like `geth --dev` does though a Go API function. For Go apps and libraries, it would be much more convenient to just import the dev RPC server instead of requiring geth to be installed as a CLI tool.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/863385713/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1044060895",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21457#issuecomment-1044060895",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21457",
    "id": 1044060895,
    "node_id": "IC_kwDOAOvK984-Oxrf",
    "user": {
      "login": "nettrino",
      "id": 4614044,
      "node_id": "MDQ6VXNlcjQ2MTQwNDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4614044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nettrino",
      "html_url": "https://github.com/nettrino",
      "followers_url": "https://api.github.com/users/nettrino/followers",
      "following_url": "https://api.github.com/users/nettrino/following{/other_user}",
      "gists_url": "https://api.github.com/users/nettrino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nettrino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nettrino/subscriptions",
      "organizations_url": "https://api.github.com/users/nettrino/orgs",
      "repos_url": "https://api.github.com/users/nettrino/repos",
      "events_url": "https://api.github.com/users/nettrino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nettrino/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-18T07:32:37Z",
    "updated_at": "2022-02-18T07:32:37Z",
    "author_association": "NONE",
    "body": "Came across this issue as I was trying to see if its possible to run https://github.com/crytic/etheno to capture calls made during tests using a simulated backend, so +1 to be able to capture JSON RPC sequences. Will give @MariusVanDerWijden 's snippet a try but definitely +1 on the feature overall.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1044060895/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1094354841",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21457#issuecomment-1094354841",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21457",
    "id": 1094354841,
    "node_id": "IC_kwDOAOvK985BOoeZ",
    "user": {
      "login": "kalverra",
      "id": 10038988,
      "node_id": "MDQ6VXNlcjEwMDM4OTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/10038988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kalverra",
      "html_url": "https://github.com/kalverra",
      "followers_url": "https://api.github.com/users/kalverra/followers",
      "following_url": "https://api.github.com/users/kalverra/following{/other_user}",
      "gists_url": "https://api.github.com/users/kalverra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kalverra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kalverra/subscriptions",
      "organizations_url": "https://api.github.com/users/kalverra/orgs",
      "repos_url": "https://api.github.com/users/kalverra/repos",
      "events_url": "https://api.github.com/users/kalverra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kalverra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-10T19:37:03Z",
    "updated_at": "2022-04-10T19:47:19Z",
    "author_association": "NONE",
    "body": "Plus one on this.\r\n\r\n> I spent some time thinking about this issue, but I don't think that we should implement it. The SimulatedBackend should imo only be used from go code and I don't think setting up a RPC API on it should be a priority. The sim backend is mainly useful for unit testing in go, for other use cases the `--dev` mode of ethereum is better suited.\r\n> \r\n> For the simulated backend to be able to provide all necessary functions to create a meaningful RPC API, it needs to implement the `ethapi.Backend` interface\r\n> \r\n> https://github.com/ethereum/go-ethereum/blob/45cb1a580abad0d4e8caa1c8b7dfacd5ef3d27bc/internal/ethapi/backend.go#L41\r\n> \r\n> . This would mean adding a lot more functionality into it, that is not needed by most users, so I would prefer not to do it.\r\n\r\nI often run into a situation of wrapping eth client methods like so\r\n\r\n```go\r\nfunc WaitForTransactionConfirmed(ctxt context.Context, ethClient *ethclient.Client, txHash common.Hash) (bool, error)\r\n```\r\n\r\nwith no real way to unit test them without a `--dev` node. I could work on it depending on the scope. Not sure if things have changed drastically since you made this comment @MariusVanDerWijden\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1094354841/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1094599464",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21457#issuecomment-1094599464",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21457",
    "id": 1094599464,
    "node_id": "IC_kwDOAOvK985BPkMo",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-11T06:23:54Z",
    "updated_at": "2022-04-11T06:23:54Z",
    "author_association": "MEMBER",
    "body": "You can also start a normal geth node from code like this:\r\n```\r\nfunc StartGethNode(filename string) *GethNode {\r\n\t// import genesis\r\n\tgenesis := new(core.Genesis)\r\n\tfile, err := os.Open(filename)\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\tif err := json.NewDecoder(file).Decode(genesis); err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\t// Create node\r\n\tn, err := node.New(&node.Config{HTTPPort: 1234, AuthPort: 1235})\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\r\n\tethcfg := &ethconfig.Config{Genesis: genesis, TrieTimeout: time.Minute, TrieDirtyCache: 256, TrieCleanCache: 256, Miner: miner.Config{GasCeil: 30_000_000}}\r\n\tethservice, err := eth.New(n, ethcfg)\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\tif err := n.Start(); err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn &GethNode{\r\n\t\tEth: ethservice,\r\n\t\tapi: *catalyst.NewConsensusAPI(ethservice),\r\n\t}\r\n}\r\n```\r\n(You need to provide a genesis file to this method",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1094599464/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
