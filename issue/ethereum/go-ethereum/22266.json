{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22266",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22266/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22266/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22266/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/22266",
  "id": 801648626,
  "node_id": "MDU6SXNzdWU4MDE2NDg2MjY=",
  "number": 22266,
  "title": "Allow Graceful Handling Of WebSockets Connection Errors in Ethclient",
  "user": {
    "login": "bonedaddy",
    "id": 17089485,
    "node_id": "MDQ6VXNlcjE3MDg5NDg1",
    "avatar_url": "https://avatars.githubusercontent.com/u/17089485?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bonedaddy",
    "html_url": "https://github.com/bonedaddy",
    "followers_url": "https://api.github.com/users/bonedaddy/followers",
    "following_url": "https://api.github.com/users/bonedaddy/following{/other_user}",
    "gists_url": "https://api.github.com/users/bonedaddy/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bonedaddy/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bonedaddy/subscriptions",
    "organizations_url": "https://api.github.com/users/bonedaddy/orgs",
    "repos_url": "https://api.github.com/users/bonedaddy/repos",
    "events_url": "https://api.github.com/users/bonedaddy/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bonedaddy/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2021-02-04T21:28:25Z",
  "updated_at": "2022-05-06T14:09:58Z",
  "closed_at": "2022-05-06T14:09:34Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# Rationale\r\n\r\nAt the moment the `ethclient` package supports websockets connection to target servers. Websockets can occasionally experience issues that basically require a \"rehup\" of the connection otherwise the connection will permanently return errors.\r\n\r\nI experienced this last night when one of my services returned the following error:\r\n```\r\nwebsocket: close 1006 (abnormal closure): unexpected EOF\r\n```\r\n\r\nI had no choice but to shutdown the service, and restart it it. This is very undesirable in production workloads, and I dont see any easy way to \"rehup\" the connection.\r\n\r\n# Implementation\r\n\r\nI have no ideas as to how to implement this, maybe some sort of post-request processing handler that allows you to specify what errors that are received which should trigger a \"rehup\"? I would be willing to implement this.",
  "closed_by": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22266/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22266/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/790469665",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22266#issuecomment-790469665",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22266",
    "id": 790469665,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MDQ2OTY2NQ==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-04T09:29:09Z",
    "updated_at": "2021-03-04T09:29:09Z",
    "author_association": "MEMBER",
    "body": "Would be nice to figure out when this happens. Can you provide more information about the error? When you say that it 'permanently returns errors', are those errors returned by the RPC call? Is it the error message you posted?\r\n\r\nManaging the connection is the responsibility of `rpc.Client`. In the client, we close the connection and reconnect when reading fails. So what you are suggesting is already implemented, it just seems to miss this error.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/790469665/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/815055870",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22266#issuecomment-815055870",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22266",
    "id": 815055870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNTA1NTg3MA==",
    "user": {
      "login": "xr9kayu",
      "id": 30830116,
      "node_id": "MDQ6VXNlcjMwODMwMTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/30830116?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xr9kayu",
      "html_url": "https://github.com/xr9kayu",
      "followers_url": "https://api.github.com/users/xr9kayu/followers",
      "following_url": "https://api.github.com/users/xr9kayu/following{/other_user}",
      "gists_url": "https://api.github.com/users/xr9kayu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xr9kayu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xr9kayu/subscriptions",
      "organizations_url": "https://api.github.com/users/xr9kayu/orgs",
      "repos_url": "https://api.github.com/users/xr9kayu/repos",
      "events_url": "https://api.github.com/users/xr9kayu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xr9kayu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-07T16:33:58Z",
    "updated_at": "2021-04-07T16:33:58Z",
    "author_association": "NONE",
    "body": "@fjl from wich version there is rehup. Because i met such error using 1.9.13 version of go-ethereum package. Im listening new events for the specified contract. As i now infura node can close connection if there is no any transferred data within n minutes, if ethclient can rpc.Client can handle this and reopen closed connection?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/815055870/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/819572818",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22266#issuecomment-819572818",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22266",
    "id": 819572818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTU3MjgxOA==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-14T14:42:44Z",
    "updated_at": "2021-04-14T14:42:44Z",
    "author_association": "MEMBER",
    "body": "When the connection fails while the client is idle, the rpc.Client will try to re-create it on the next request. So if a call fails, you must retry it to get a new connection.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/819572818/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1119493697",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22266#issuecomment-1119493697",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22266",
    "id": 1119493697,
    "node_id": "IC_kwDOAOvK985Cuh5B",
    "user": {
      "login": "apecollector",
      "id": 100589991,
      "node_id": "U_kgDOBf7hpw",
      "avatar_url": "https://avatars.githubusercontent.com/u/100589991?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apecollector",
      "html_url": "https://github.com/apecollector",
      "followers_url": "https://api.github.com/users/apecollector/followers",
      "following_url": "https://api.github.com/users/apecollector/following{/other_user}",
      "gists_url": "https://api.github.com/users/apecollector/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apecollector/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apecollector/subscriptions",
      "organizations_url": "https://api.github.com/users/apecollector/orgs",
      "repos_url": "https://api.github.com/users/apecollector/repos",
      "events_url": "https://api.github.com/users/apecollector/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apecollector/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-06T10:56:07Z",
    "updated_at": "2022-05-06T10:56:07Z",
    "author_association": "NONE",
    "body": "I'm using subscriptions for event logs and got a similar error, unsure how to handle it correctly without restarting the server.\r\n\r\n```\r\nwebsocket: close 1012: Service Restart\r\n```\r\n\r\nThe docs for `sub.Err()` say:\r\n\r\n> Err returns the subscription error channel. The error channel receives a value if there is an issue with the subscription (e.g. the network connection delivering the events has been closed). Only one value will ever be sent. The error channel is closed by Unsubscribe.\r\n\r\nThe part about `Only one value will ever be sent.` leads me to believe that it won't reconnect automatically.\r\n\r\nHere's the example code, I'm also running geth locally which it's connecting to.\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"log\"\r\n\r\n\tethereum \"github.com/ethereum/go-ethereum\"\r\n\t\"github.com/ethereum/go-ethereum/common\"\r\n\t\"github.com/ethereum/go-ethereum/ethclient\"\r\n)\r\n\r\nvar contractAddressHex = \"0x34d85c9cdeb23fa97cb08333b511ac86e1c4e258\"\r\nvar contractAddress = common.HexToAddress(contractAddressHex)\r\n\r\nfunc main() {\r\n\tconn, err := ethclient.Dial(\"ws://127.0.0.1:8546\")\r\n\tif err != nil {\r\n\t\tlog.Fatalf(\"Failed to connect to the Ethereum client: %v\", err)\r\n\t}\r\n\t\r\n\tquery := ethereum.FilterQuery{\r\n\t\tAddresses: []common.Address{contractAddress},\r\n\t}\r\n\r\n\tlogs := make(chan types.Log)\r\n\tsub, err := conn.SubscribeFilterLogs(context.Background(), query, logs)\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\r\n\tfor {\r\n\t\tselect {\r\n\t\tcase err := <-sub.Err():\r\n\t\t\tlog.Fatal(err)\r\n\t\tcase vLog := <-logs:\r\n\t\t\tlog.Println(vLog)\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1119493697/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1119664666",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22266#issuecomment-1119664666",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22266",
    "id": 1119664666,
    "node_id": "IC_kwDOAOvK985CvLoa",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-06T14:09:28Z",
    "updated_at": "2022-05-06T14:09:58Z",
    "author_association": "MEMBER",
    "body": "When a subscription fails, you need to re-establish it. There is no automatic re-subscribe in ethclient because your application may need to handle the error. However, if you are sure you don't care about it, you can use [`event.Resubscribe`](https://pkg.go.dev/github.com/ethereum/go-ethereum/event#Resubscribe):\r\n\r\n```\r\nlogs := make(chan types.Log, 1000)\r\nsub := event.Resubscribe(2 * time.Second, func (ctx context.Context) (event.Subscription, error) {\r\n    return conn.SubscribeFilterLogs(ctx, query, logs)\r\n})\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1119664666/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
