{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22364",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22364/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22364/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22364/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/22364",
  "id": 813552833,
  "node_id": "MDU6SXNzdWU4MTM1NTI4MzM=",
  "number": 22364,
  "title": "Question: How can I make my new variable specify with interger like gaslimit?",
  "user": {
    "login": "fantasticWolff",
    "id": 29246352,
    "node_id": "MDQ6VXNlcjI5MjQ2MzUy",
    "avatar_url": "https://avatars.githubusercontent.com/u/29246352?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fantasticWolff",
    "html_url": "https://github.com/fantasticWolff",
    "followers_url": "https://api.github.com/users/fantasticWolff/followers",
    "following_url": "https://api.github.com/users/fantasticWolff/following{/other_user}",
    "gists_url": "https://api.github.com/users/fantasticWolff/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fantasticWolff/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fantasticWolff/subscriptions",
    "organizations_url": "https://api.github.com/users/fantasticWolff/orgs",
    "repos_url": "https://api.github.com/users/fantasticWolff/repos",
    "events_url": "https://api.github.com/users/fantasticWolff/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fantasticWolff/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 268304226,
      "node_id": "MDU6TGFiZWwyNjgzMDQyMjY=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:docs",
      "name": "type:docs",
      "color": "fef2c0",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2021-02-22T14:29:29Z",
  "updated_at": "2021-03-01T09:27:01Z",
  "closed_at": "2021-03-01T09:27:01Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I add a new variable TimeLimit\r\n\r\ncore/types/transaction.go\r\n```\r\ntype txdata struct {\r\n\tAccountNonce uint64          `json:\"nonce\"    gencodec:\"required\"`\r\n\tPrice        *big.Int        `json:\"gasPrice\" gencodec:\"required\"`\r\n\tGasLimit     uint64          `json:\"gas\"      gencodec:\"required\"`\r\n\tTimeLimit    uint64          `json:\"time\"     gencodec:\"required\"`\r\n\tRecipient    *common.Address `json:\"to\"       rlp:\"nil\"` // nil means contract creation\r\n\tAmount       *big.Int        `json:\"value\"    gencodec:\"required\"`\r\n\tPayload      []byte          `json:\"input\"    gencodec:\"required\"`\r\n\r\n\t// Signature values\r\n\tV *big.Int `json:\"v\" gencodec:\"required\"`\r\n\tR *big.Int `json:\"r\" gencodec:\"required\"`\r\n\tS *big.Int `json:\"s\" gencodec:\"required\"`\r\n\r\n\t// This is only used when marshaling to JSON.\r\n\tHash *common.Hash `json:\"hash\" rlp:\"-\"`\r\n}\r\n```\r\ninternal/ethapi/api.go\r\n```\r\ntype SendTxArgs struct {\r\n\tFrom     common.Address  `json:\"from\"`\r\n\tTo       *common.Address `json:\"to\"`\r\n\tGas      *hexutil.Uint64 `json:\"gas\"`\r\n\tTime     *hexutil.Uint64 `json:\"time\"`\r\n\tGasPrice *hexutil.Big    `json:\"gasPrice\"`\r\n\tValue    *hexutil.Big    `json:\"value\"`\r\n\tNonce    *hexutil.Uint64 `json:\"nonce\"`\r\n\t// We accept \"data\" and \"input\" for backwards-compatibility reasons. \"input\" is the\r\n\t// newer name and should be preferred by clients.\r\n\tData  *hexutil.Bytes `json:\"data\"`\r\n\tInput *hexutil.Bytes `json:\"input\"`\r\n}\r\n```\r\nThen,\r\nwhen I do below in geth\r\n```\r\neth.sendTransaction({from:\"0xb58042d7bfc549933494e00c25cb00fadba8453a\", to:\"0xb58042d7bfc549933494e00c25cb00fadba8453a\", value: web3.toWei(0.05, \"ether\"), gas:21000, time:16});\r\n```\r\nI get\r\n```\r\nError: invalid argument 0: json: cannot unmarshal non-string into Go struct field SendTxArgs.time of type hexutil.Uint64\r\n```\r\n\r\nI can only do time:\"0x10\" (transaction send successfully)\r\n```\r\neth.sendTransaction({from:\"0xb58042d7bfc549933494e00c25cb00fadba8453a\", to:\"0xb58042d7bfc549933494e00c25cb00fadba8453a\", value: web3.toWei(0.05, \"ether\"), gas:21000, time:\"0x10\"});\r\n```\r\n![Screenshot from 2021-02-22 22-28-13](https://user-images.githubusercontent.com/29246352/108721808-63b2c280-755d-11eb-9242-9cc053a5dcf7.png)\r\n\r\n How can I make my new variable specify with interger like gaslimit?\r\n\r\n\r\n",
  "closed_by": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22364/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22364/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/785755098",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22364#issuecomment-785755098",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22364",
    "id": 785755098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTc1NTA5OA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-25T09:32:39Z",
    "updated_at": "2021-02-25T09:32:39Z",
    "author_association": "MEMBER",
    "body": "If you are forking Geth to add new feature, we won't be able to support you.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/785755098/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/785755205",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22364#issuecomment-785755205",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22364",
    "id": 785755205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTc1NTIwNQ==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-25T09:32:50Z",
    "updated_at": "2021-02-25T09:32:50Z",
    "author_association": "MEMBER",
    "body": "If you add a new field in transaction, you need to re-generate the MarshalJSON/UnmarshalJSON code using `go generate ./core/types`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/785755205/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/785756883",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22364#issuecomment-785756883",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22364",
    "id": 785756883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTc1Njg4Mw==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-25T09:35:19Z",
    "updated_at": "2021-02-25T09:35:19Z",
    "author_association": "MEMBER",
    "body": "Oh, wait, now I understand what you want to do. The integer to hex conversion happens in web3.js, the RPC API only accepts hex.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/785756883/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/785827402",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22364#issuecomment-785827402",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22364",
    "id": 785827402,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTgyNzQwMg==",
    "user": {
      "login": "fantasticWolff",
      "id": 29246352,
      "node_id": "MDQ6VXNlcjI5MjQ2MzUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/29246352?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fantasticWolff",
      "html_url": "https://github.com/fantasticWolff",
      "followers_url": "https://api.github.com/users/fantasticWolff/followers",
      "following_url": "https://api.github.com/users/fantasticWolff/following{/other_user}",
      "gists_url": "https://api.github.com/users/fantasticWolff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fantasticWolff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fantasticWolff/subscriptions",
      "organizations_url": "https://api.github.com/users/fantasticWolff/orgs",
      "repos_url": "https://api.github.com/users/fantasticWolff/repos",
      "events_url": "https://api.github.com/users/fantasticWolff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fantasticWolff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-25T11:29:23Z",
    "updated_at": "2021-02-25T12:07:36Z",
    "author_association": "NONE",
    "body": "> Oh, wait, now I understand what you want to do. The integer to hex conversion happens in web3.js, the RPC API only accepts hex.\r\n------------------------------------------------------------------------\r\nIn short:\r\n\r\nI don't know why \"gas\" can be specified in both hex and integer\r\n```\r\nGas      *hexutil.Uint64 `json:\"gas\"`\r\n```\r\ncan be specified in both hex and integer\r\nsendTransaction({gas:123456789}) or sendTransaction({gas:\"0x100000\"})\r\n\r\n```\r\nTime    *hexutil.Uint64  `json:\"time\"\r\n```\r\ncan only be specified in hex\r\nsendTransaction({time:\"0x10\"})\r\n\r\n```\r\nTimeLimit *uint64         `json:\"timeLimit\"`\r\n```\r\ncan only be specified in integer\r\nsendTransaction({timeLimit:888888})\r\n(I rename \"time\" as \"timeLimit\")\r\n\r\n------------------------------------------------------------------------\r\nLonger:\r\n\r\n\"gasPrice\" and \"gas\" can be specified in both hex and integer\r\nI want my \"time\" can be specified in both hex and integer too \r\n(I rename \"time\" as \"timeLimit\")\r\n\r\nBefore \r\nI use  *hexutil.Uint64 `json:\"time\"`, it can only be specified in hex\r\n```\r\ntype SendTxArgs struct {\r\n\tGas      *hexutil.Uint64  `json:\"gas\"`\r\n\tTime    *hexutil.Uint64  `json:\"time\"`\r\n}\r\n```\r\n\r\nNow\r\nI use  *uint64 `json:\"timeLimit\"`, it can only be specified in integer\r\n```\r\ntype SendTxArgs struct {\r\n\tGas           *hexutil.Uint64 `json:\"gas\"`\r\n\tTimeLimit *uint64             `json:\"timeLimit\"`\r\n}\r\n```\r\n\r\ngasPrice:987654321, gas:123456789, timeLimit:888888\r\n![image](https://user-images.githubusercontent.com/29246352/109146089-55071e00-779e-11eb-894e-afc15fd95685.png)\r\n\r\ngasPrice:\"0x200000\", gas:\"0x100000\", timeLimit:777777\r\n![image](https://user-images.githubusercontent.com/29246352/109146568-f2fae880-779e-11eb-8b99-e8327cd10d1e.png)\r\n\r\n\r\n\r\n\r\nI want my \"time\" be like gas\r\n(I rename \"time\" as \"timeLimit\")\r\n\r\nI want it be \"hexutil.Uint64\" in struct SendTxArgs like gas\r\n```\r\ntype SendTxArgs struct {\r\n\tGas      *hexutil.Uint64  `json:\"gas\"`\r\n\tTime    *hexutil.Uint64  `json:\"time\"`\r\n}\r\n```\r\n\r\nand can sendTransaction like gas\r\nboth sendTransaction(gas:123456789) and sendTransaction(gas:\"0x100000\") work\r\n\r\nand in getTransaction\r\nprint in integer like gas ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/785827402/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/785847600",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22364#issuecomment-785847600",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22364",
    "id": 785847600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTg0NzYwMA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-25T12:05:54Z",
    "updated_at": "2021-02-25T12:05:54Z",
    "author_association": "MEMBER",
    "body": "The console is running a web3.js wrapper. The gas fields are interpreted and reencoded by web3. It's not done by Geth.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/785847600/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/787200654",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/22364#issuecomment-787200654",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/22364",
    "id": 787200654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NzIwMDY1NA==",
    "user": {
      "login": "fantasticWolff",
      "id": 29246352,
      "node_id": "MDQ6VXNlcjI5MjQ2MzUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/29246352?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fantasticWolff",
      "html_url": "https://github.com/fantasticWolff",
      "followers_url": "https://api.github.com/users/fantasticWolff/followers",
      "following_url": "https://api.github.com/users/fantasticWolff/following{/other_user}",
      "gists_url": "https://api.github.com/users/fantasticWolff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fantasticWolff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fantasticWolff/subscriptions",
      "organizations_url": "https://api.github.com/users/fantasticWolff/orgs",
      "repos_url": "https://api.github.com/users/fantasticWolff/repos",
      "events_url": "https://api.github.com/users/fantasticWolff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fantasticWolff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-27T22:59:18Z",
    "updated_at": "2021-02-27T22:59:18Z",
    "author_association": "NONE",
    "body": "> The console is running a web3.js wrapper. The gas fields are interpreted and reencoded by web3. It's not done by Geth.\r\n\r\nThank you!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/787200654/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
