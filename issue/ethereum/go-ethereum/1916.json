{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1916",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1916/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1916/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1916/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/1916",
  "id": 112253026,
  "node_id": "MDU6SXNzdWUxMTIyNTMwMjY=",
  "number": 1916,
  "title": "core: re-write hard dependency from the block chain on the block processor",
  "user": {
    "login": "obscuren",
    "id": 6264126,
    "node_id": "MDQ6VXNlcjYyNjQxMjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/obscuren",
    "html_url": "https://github.com/obscuren",
    "followers_url": "https://api.github.com/users/obscuren/followers",
    "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
    "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
    "organizations_url": "https://api.github.com/users/obscuren/orgs",
    "repos_url": "https://api.github.com/users/obscuren/repos",
    "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
    "received_events_url": "https://api.github.com/users/obscuren/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 202012689,
      "node_id": "MDU6TGFiZWwyMDIwMTI2ODk=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/area:core",
      "name": "area:core",
      "color": "fbca04",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/milestones/21",
    "html_url": "https://github.com/ethereum/go-ethereum/milestone/21",
    "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/milestones/21/labels",
    "id": 1301898,
    "node_id": "MDk6TWlsZXN0b25lMTMwMTg5OA==",
    "number": 21,
    "title": "Refactor",
    "description": "Generic refactoring milestone",
    "creator": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 3,
    "state": "closed",
    "created_at": "2015-09-11T22:29:07Z",
    "updated_at": "2016-06-14T14:35:44Z",
    "due_on": null,
    "closed_at": "2016-06-14T14:35:44Z"
  },
  "comments": 1,
  "created_at": "2015-10-19T23:24:17Z",
  "updated_at": "2016-03-25T09:33:42Z",
  "closed_at": "2016-03-25T09:33:39Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "The current approach to block and state processing is done in two stages.\n1. Pass block to block chain\n   \n   a. pass the block to a block processor [2]\n   b. check errors and bail if erroneous\n   c. persist block & receipts to database; all state information is lost / unknown\n2. Validate block\n   \n   a. validate header\n   b. validate block's miner nonce\n   c. process transactions and validate receipts\n   d. persist state data\n\nThese separated stages makes it rather difficult to add different kind of block validators. Changing to a simpler model where validators are used rather than processors (technically the block chain is the processor) it will become much easier to implement private chains and different block validators.\n\nThe block chain and block processor are more or less intertwined with one another which doesn't allow for arbitrary validators to be set. The `BlockProcessor` takes care of saving state information to the database while the `BlockChain` takes care of saving block (header + body), receipts & logs to the database. This approach is weird because we are having persistency in two different layers.\n1. The block chain should take care of all synchronisation of state, block and receipts and should use validator functions to make sure that blocks-to-be-processed pass all consensus tests. \n2. Add said validator functions that:\n   \n   i. Validates block, header and block receipts\n   ii. Attempts to transition from previous state `X` to next state `Y` and pass handles to any to-yet-to-persist data.\n- [x] Split out validator & processor\n  - [x] Move `log` event firing to the `BlockChain`\n  - [x] Remove `db` and `evmux` from `BlockValidator`\n- [x] Remove `batch.Write` from `BlockProcessor`\n- [x] Update all test\n- [x] Remove unneeded mutex\n",
  "closed_by": {
    "login": "obscuren",
    "id": 6264126,
    "node_id": "MDQ6VXNlcjYyNjQxMjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/obscuren",
    "html_url": "https://github.com/obscuren",
    "followers_url": "https://api.github.com/users/obscuren/followers",
    "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
    "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
    "organizations_url": "https://api.github.com/users/obscuren/orgs",
    "repos_url": "https://api.github.com/users/obscuren/repos",
    "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
    "received_events_url": "https://api.github.com/users/obscuren/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1916/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1916/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/149844790",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/1916#issuecomment-149844790",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1916",
    "id": 149844790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTg0NDc5MA==",
    "user": {
      "login": "Gustav-Simonsson",
      "id": 293096,
      "node_id": "MDQ6VXNlcjI5MzA5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/293096?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gustav-Simonsson",
      "html_url": "https://github.com/Gustav-Simonsson",
      "followers_url": "https://api.github.com/users/Gustav-Simonsson/followers",
      "following_url": "https://api.github.com/users/Gustav-Simonsson/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gustav-Simonsson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gustav-Simonsson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gustav-Simonsson/subscriptions",
      "organizations_url": "https://api.github.com/users/Gustav-Simonsson/orgs",
      "repos_url": "https://api.github.com/users/Gustav-Simonsson/repos",
      "events_url": "https://api.github.com/users/Gustav-Simonsson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gustav-Simonsson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-21T10:07:31Z",
    "updated_at": "2015-10-21T10:12:59Z",
    "author_association": "NONE",
    "body": "## Ethereum block header fields dependency graph\n\n<img width=\"1482\" alt=\"screen shot 2015-10-19 at 18 29 37\" src=\"https://cloud.githubusercontent.com/assets/293096/10633621/4bffe90c-77ec-11e5-8107-b8c1bef213fe.png\">\n\n### Block (header) validation\n\nFrom gitter: It makes sense to split block (header) validation into three main parts:\n- Validation of all block header fields except PoW and fields requiring tx processing (e.g. state root). This is very cheap.\n- Validation of PoW. Somewhat expensive.\n- Validation of fields requiring tx processing. Cost depends on number of txs and associated contract code. Can range from very cheap to expensive.\n\n### Interfaces\n- The `PoW` interface could be changed to take the full block header as input. This would be the most generic approach to simplify implementation of private chains / different consensus protocols. For example, it would then be easy to add a new field to the block header containing (multi) signatures from a defined validator set, and implement the `PoW` interface `Verify` function to validate such signatures against a static set of public keys. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/149844790/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
