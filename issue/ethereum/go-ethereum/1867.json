{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1867",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1867/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1867/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1867/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/1867",
  "id": 109469530,
  "node_id": "MDU6SXNzdWUxMDk0Njk1MzA=",
  "number": 1867,
  "title": "event: proposal for improving the API",
  "user": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2015-10-02T10:39:01Z",
  "updated_at": "2017-02-03T11:56:01Z",
  "closed_at": "2017-02-03T11:56:01Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Package event provides a mechanism for pushing change notifications to an unknown number of\ninterested parties. This issue is a collection of ideas for improving package event. We've lived with the current API for almost a year now and while it has held up well, there are a few things that can be improved. \n### Posting events should not be synchronous by default.\n\nWe've learned this the hard way, with several hard-to-see deadlocks being caused by a blocking call to `Post` while a mutex is held.\n### Posting should return the number of recipients.\n\nThis allows for response gathering, e.g.\n\n``` go\nresp := make(chan Reply)\nn := mux.Post(SomeEvent{resp})\nfor i := 0; i < n; i++ {\n    <-resp\n}\n```\n### Implementation improvements\n\nThe current implementation of `TypeMux` assumes that event subscriptions are mostly static (set up once, then used). Adding and removing subscriptions has non-trivial overhead, halting all event processing while the internal state is updated. \n\nDelivery of each event of a certain type is sequential, waiting for each subscriber to receive the event before attempting to send to the next. This can delay reception if subscribers are blocked.\n### Provide helpers for shutdown coordination\n\nPackage event might also be the right place to contain a generic solution for shutdown signaling. Many components in go-ethereum have boilerplate that coordinates shutdown of one or more 'worker loop' \ngoroutines when the `Stop` method is called. Since quite a lot of boilerplate is involved to get this right, components usually cheat and implement a simple solution that doesn't wait for workers to terminate and\npanics with \"close of closed channel\" if `Stop` is called multiple times.\n\nI propose that we add a generic solution for shutdown coordination to package event.\n",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1867/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1867/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/145185664",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/1867#issuecomment-145185664",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1867",
    "id": 145185664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTE4NTY2NA==",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-03T00:00:58Z",
    "updated_at": "2015-10-03T00:00:58Z",
    "author_association": "MEMBER",
    "body": "This does introduce tight coupling again. The purpose of the venter is to reduce the tight coupling to some amount while depending on Go's type system and package dependencies.\n\nI do not like this suggestion.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/145185664/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/193510326",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/1867#issuecomment-193510326",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1867",
    "id": 193510326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzUxMDMyNg==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-07T23:46:26Z",
    "updated_at": "2016-03-07T23:46:49Z",
    "author_association": "MEMBER",
    "body": "@obscuren I have updated the proposal and removed the offending section.\nThe new part is the one about gathering responses, which we'll need for #2254.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/193510326/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/233182850",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/1867#issuecomment-233182850",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1867",
    "id": 233182850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzE4Mjg1MA==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-17T13:47:28Z",
    "updated_at": "2016-07-17T19:27:12Z",
    "author_association": "MEMBER",
    "body": "Having thought about events in the context of #2808 and #2798, I'd like us to reconsider the removal of TypeMux as originally suggested above. In the linked PRs, we are introducing a model for event subscriptions that looks like this:\n\n``` go\nfunc (x *X) SubscribeSomething(chan Y, ...) (Subscription, error) { ... }\n```\n\nWhere Subscription is an object that implements the interface below.\n\n``` go\n\ntype Subscription interface{\n    // Unsubscribe cancels the sending of events to the data channel\n    // and closes the error channel.\n    Unsubscribe()\n\n    // Err returns the subscription error channel. The error channel receives\n    // a value if there is an issue with the subscription (e.g. the network connection\n    // delivering the events has been closed). Only one value will ever be sent.\n    // The error channel is closed by Unsubscribe.\n    Err() <-chan error\n}\n```\n\nTo help with this model, package event would provide a reduced version of TypeMux that handles a single type of event, e.g.\n\n``` go\ntype Feed struct { ... } \n\n// Subscribe adds a channel to the feed. Future sends will be\n// delivered on the channel until the subscription is canceled.\n// All channels added must have the same element type.\nfunc (Feed) Subscribe(channel interface{}) Subscription { ... }\n\n// Send delivers to all subscribed channels simultaneously.\nfunc (Feed) Send(v interface{}) { ... } \n```\n\nComponents which send events would use this type to manage their subscriptions, e.g.\n\n``` go\npackage core\n\ntype HeaderChain struct {\n    ...\n    newHeadFeed event.Feed\n}\n\nfunc (hc *HeaderChain) InsertHeaderChain(chain []*types.Header) {\n    ...\n    hc.newHeadFeed.Send(lastHeader)\n}\n\nfunc (hc *HeaderChain) SubscribeNewHead(c chan<- *types.Header) (event.Subscription, error) {\n    return hc.newHeadEvent.Subscribe(c), nil\n}\n```\n\nIf you wonder about the error, consider that the same method can also be implemented by\nthe typed RPC API client:\n\n``` go\npackage ethclient\n\nfunc (c *Client) SubscribeNewHead(c chan<- *types.Header) (event.Subscription, error) {\n    return c.rpcClient.EthSubscribe(c, \"newHead\")\n}\n```\n\n@obscuren You previously said that you don't like this approach because it couples the subscriber\nto a particular source of events. Please consider that the SubscribeSomething method can be put\ninto an interface. This is a huge advantage.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/233182850/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/233185789",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/1867#issuecomment-233185789",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1867",
    "id": 233185789,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzE4NTc4OQ==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-17T14:53:34Z",
    "updated_at": "2016-07-17T14:53:34Z",
    "author_association": "MEMBER",
    "body": "Removed 1.5.0 milestone because the scope of this issue is too broad. I would like to start adding code to support the model outlined above, but we won't switch everything at once.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/233185789/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/233185826",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/1867#issuecomment-233185826",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1867",
    "id": 233185826,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzE4NTgyNg==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-17T14:54:13Z",
    "updated_at": "2016-07-17T14:54:13Z",
    "author_association": "MEMBER",
    "body": "The other ideas listed in the issue description still sound nice, but seem less important now.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/233185826/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/233491854",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/1867#issuecomment-233491854",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/1867",
    "id": 233491854,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzQ5MTg1NA==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-18T23:43:56Z",
    "updated_at": "2016-08-13T12:16:31Z",
    "author_association": "MEMBER",
    "body": "I have done an initial implementation of Feed in https://github.com/fjl/go-ethereum/blob/event-feed/event/feed.go\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/233491854/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
