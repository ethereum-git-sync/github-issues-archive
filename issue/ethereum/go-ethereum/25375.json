{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25375",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25375/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25375/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25375/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/25375",
  "id": 1314964318,
  "node_id": "I_kwDOAOvK985OYMNe",
  "number": 25375,
  "title": "Error: could not decrypt key with given password (in geth when personal.signTransaction after personal.unlockAccount)",
  "user": {
    "login": "mars4science",
    "id": 108170960,
    "node_id": "U_kgDOBnKO0A",
    "avatar_url": "https://avatars.githubusercontent.com/u/108170960?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mars4science",
    "html_url": "https://github.com/mars4science",
    "followers_url": "https://api.github.com/users/mars4science/followers",
    "following_url": "https://api.github.com/users/mars4science/following{/other_user}",
    "gists_url": "https://api.github.com/users/mars4science/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mars4science/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mars4science/subscriptions",
    "organizations_url": "https://api.github.com/users/mars4science/orgs",
    "repos_url": "https://api.github.com/users/mars4science/repos",
    "events_url": "https://api.github.com/users/mars4science/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mars4science/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    },
    {
      "id": 1132754722,
      "node_id": "MDU6TGFiZWwxMTMyNzU0NzIy",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/need:more-information",
      "name": "need:more-information",
      "color": "db6fa3",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-07-22T12:46:00Z",
  "updated_at": "2022-08-04T15:38:27Z",
  "closed_at": "2022-08-01T11:26:44Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth\r\nVersion: 1.10.20-stable\r\nArchitecture: amd64\r\nGo Version: go1.18.4\r\nOperating System: linux\r\n\r\n#### Expected behaviour\r\n\r\nTransaction gets signed, output of signed transaction. Why does not work? personal.unlockAccount returns true so I have reason to expect `geth` be able to sign transactions w/out using other way (via `clef`). Web search found several pages \r\n1. https://github.com/ethereum/go-ethereum/issues/23824 (this one about clef)\r\n2. https://ethereum.stackexchange.com/questions/23944/nodejs-web3j-error-could-not-decrypt-key-with-given-passphrase (from 2017 with answer to do eth.sendTransaction after successful personal.unlockAccount)\r\n\r\n#### Actual behaviour\r\n\r\nError: could not decrypt key with given password\r\n\tat web3.js:6365:9(45)\r\n\tat send (web3.js:5099:62(34))\r\n\tat <eval>:1:25(27)\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\n```\r\n./geth --keystore ./keystore account new\r\n./geth --keystore ./keystore account new\r\n\r\n./geth --keystore ./keystore --nodiscover --maxpeers 0 console\r\n> eth.accounts\r\n// shows 2 accounts\r\n> personal.unlockAccount(eth.accounts[0],\"given_pass\",0)\r\ntrue\r\n> personal.unlockAccount(eth.accounts[1],\"given_pass\",0)\r\ntrue\r\n> personal.signTransaction({from: eth.accounts[0], to: eth.accounts[1], value: web3.toWei(0.5, \"ether\"),nonce: 1, gas: 10, gasPrice: 10})\r\nWARN [07-22|12:35:49.170] Failed transaction sign attempt          from=0x962ce8D388eCB05B273C418B94B66E69dFe7a55A to=0x1c92EE9f718e768125E54310b544Af594166F994 value=500,000,000,000,000,000 err=\"could not decrypt key with given password\"\r\nWARN [07-22|12:35:49.170] Served personal_signTransaction          reqid=18 duration=643.594166ms err=\"could not decrypt key with given password\"\r\nError: could not decrypt key with given password\r\n\tat web3.js:6365:9(45)\r\n\tat send (web3.js:5099:62(34))\r\n\tat <eval>:1:25(27)\r\n```\r\n\r\n#### Backtrace\r\n\r\n````\r\n[backtrace]\r\n````\r\n\r\nWhen submitting logs: please submit them as text and not screenshots.",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25375/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25375/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1193608208",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25375#issuecomment-1193608208",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25375",
    "id": 1193608208,
    "node_id": "IC_kwDOAOvK985HJQQQ",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-25T05:47:32Z",
    "updated_at": "2022-07-25T05:47:32Z",
    "author_association": "MEMBER",
    "body": "Are you using the Geth console? `personal.signTransaction` should ask you for a password there. If you're calling it from the outside, you might need to specify the password as the second parameter.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1193608208/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1195676448",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25375#issuecomment-1195676448",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25375",
    "id": 1195676448,
    "node_id": "IC_kwDOAOvK985HRJMg",
    "user": {
      "login": "mars4science",
      "id": 108170960,
      "node_id": "U_kgDOBnKO0A",
      "avatar_url": "https://avatars.githubusercontent.com/u/108170960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mars4science",
      "html_url": "https://github.com/mars4science",
      "followers_url": "https://api.github.com/users/mars4science/followers",
      "following_url": "https://api.github.com/users/mars4science/following{/other_user}",
      "gists_url": "https://api.github.com/users/mars4science/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mars4science/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mars4science/subscriptions",
      "organizations_url": "https://api.github.com/users/mars4science/orgs",
      "repos_url": "https://api.github.com/users/mars4science/repos",
      "events_url": "https://api.github.com/users/mars4science/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mars4science/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-26T16:03:16Z",
    "updated_at": "2022-07-26T16:03:16Z",
    "author_association": "NONE",
    "body": "@karalabe, thanks for the tip. Surprisingly (to me) I've tried to run `personal.signTransaction({from: eth.accounts[0], to: eth.accounts[1], value: web3.toWei(0.5, \"ether\"),nonce: 1, gas: 10, gasPrice: 10},\"given_pass\")` and it worked! \r\n\r\nWhere am I expected to find out how commands within console work? Even you wrote in console it should ask for password (it had not). I understood `personal.unlockAccount` (it asked for password) allows later to make any actions for set period of time (I got that idea from several sources, one was https://ethereum.stackexchange.com/questions/23944/nodejs-web3j-error-could-not-decrypt-key-with-given-passphrase) - is it used for RPC only? TIA\r\n\r\nP.S. do you know if one can send transaction with `geth` (e.g. `eth.sendRawTransaction`) w/out syncing all blockchain?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1195676448/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1201074024",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25375#issuecomment-1201074024",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25375",
    "id": 1201074024,
    "node_id": "IC_kwDOAOvK985Hlu9o",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-01T11:26:44Z",
    "updated_at": "2022-08-01T11:26:44Z",
    "author_association": "MEMBER",
    "body": "re `personal.signTransaction`: \r\n\r\n> SignTransaction will create a transaction from the given arguments and\r\n> tries to sign it with the key associated with args.From. If the given passwd isn't\r\n>  able to decrypt the key it fails.\r\n\r\nSo it requires a second argument, and if you do not supply one, it tries to use the empty string as password. Hence why it failed first, and later worked when you submitted `\"given_pass\"` as second argument. \r\n\r\nThe console-based password prompt does not seem to be working for sendTransaction or signTransaction, but does for `personal.sign`. \r\n```\r\n> personal.signTransaction({from: eth.accounts[0], to: eth.accounts[0], value:\"0x0\", nonce:1, gas:10, gasPrice:10})\r\nWARN [08-01|13:19:12.284] Failed transaction sign attempt          from=0x9CD932F670F7eDe5dE86F756A6D02548e5899f47 to=0x9CD932F670F7eDe5dE86F756A6D02548e5899f47 value=0                       err=\"could not decrypt key with given password\"\r\nWARN [08-01|13:19:12.284] Served personal_signTransaction          reqid=14 duration=836.152597ms err=\"could not decrypt key with given password\"\r\nError: could not decrypt key with given password\r\n\tat web3.js:6365:9(45)\r\n\tat send (web3.js:5099:62(34))\r\n\tat <eval>:1:25(22)\r\n\r\n> personal.sendTransaction({from: eth.accounts[0], to: eth.accounts[0], value:\"0x0\", nonce:1, gas:10, gasPrice:10})\r\nWARN [08-01|13:19:49.426] Failed transaction send attempt          from=0x9CD932F670F7eDe5dE86F756A6D02548e5899f47 to=0x9CD932F670F7eDe5dE86F756A6D02548e5899f47 value=0                       err=\"could not decrypt key with given password\"\r\nWARN [08-01|13:19:49.426] Served personal_sendTransaction          reqid=17 duration=838.138536ms err=\"could not decrypt key with given password\"\r\nError: could not decrypt key with given password\r\n\tat web3.js:6365:9(45)\r\n\tat send (web3.js:5099:62(34))\r\n\tat <eval>:1:25(22)\r\n\r\n> personal.sign(\"message\", eth.accounts[0])\r\nGive password for account 0x9cd932f670f7ede5de86f756a6d02548e5899f47\r\nPassword: ^C\r\nGoError: prompt aborted\r\n\tat github.com/ethereum/go-ethereum/internal/jsre.MakeCallback.func1 (native)\r\n\tat <eval>:1:26(7)\r\n\r\n```\r\nIt seems that the `bridge.go` shim which does a prompter for passwords is only set for `newAccount`, `unlockAccount`, `sign`  and a few more, but not `signTransaction`. \r\n```\r\n// Sign is a wrapper around the personal.sign RPC method that uses a non-echoing password\r\n// prompt to acquire the passphrase and executes the original RPC method (saved in\r\n// jeth.sign) with it to actually execute the RPC call.\r\nfunc (b *bridge) Sign(call jsre.Call) (goja.Value, error) {\r\n```\r\n\r\nAnyway, I reckon this ticket should be closed. A follow-up ticket might be opened if we think that the password-prompter should be incorporated into `personal.signTransaction`. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1201074024/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1205424353",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25375#issuecomment-1205424353",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25375",
    "id": 1205424353,
    "node_id": "IC_kwDOAOvK985H2VDh",
    "user": {
      "login": "mars4science",
      "id": 108170960,
      "node_id": "U_kgDOBnKO0A",
      "avatar_url": "https://avatars.githubusercontent.com/u/108170960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mars4science",
      "html_url": "https://github.com/mars4science",
      "followers_url": "https://api.github.com/users/mars4science/followers",
      "following_url": "https://api.github.com/users/mars4science/following{/other_user}",
      "gists_url": "https://api.github.com/users/mars4science/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mars4science/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mars4science/subscriptions",
      "organizations_url": "https://api.github.com/users/mars4science/orgs",
      "repos_url": "https://api.github.com/users/mars4science/repos",
      "events_url": "https://api.github.com/users/mars4science/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mars4science/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-04T15:38:27Z",
    "updated_at": "2022-08-04T15:38:27Z",
    "author_association": "NONE",
    "body": "@holiman, thanks! I've learned I can have empty password! That works for me, just have to remember this all.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1205424353/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
