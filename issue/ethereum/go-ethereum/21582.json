{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21582",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21582/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21582/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21582/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/21582",
  "id": 704799595,
  "node_id": "MDU6SXNzdWU3MDQ3OTk1OTU=",
  "number": 21582,
  "title": "Ask a question about stateObject.updateTrie",
  "user": {
    "login": "james-ray",
    "id": 26137182,
    "node_id": "MDQ6VXNlcjI2MTM3MTgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/26137182?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/james-ray",
    "html_url": "https://github.com/james-ray",
    "followers_url": "https://api.github.com/users/james-ray/followers",
    "following_url": "https://api.github.com/users/james-ray/following{/other_user}",
    "gists_url": "https://api.github.com/users/james-ray/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/james-ray/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/james-ray/subscriptions",
    "organizations_url": "https://api.github.com/users/james-ray/orgs",
    "repos_url": "https://api.github.com/users/james-ray/repos",
    "events_url": "https://api.github.com/users/james-ray/events{/privacy}",
    "received_events_url": "https://api.github.com/users/james-ray/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1132689577,
      "node_id": "MDU6TGFiZWwxMTMyNjg5NTc3",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:triage",
      "name": "status:triage",
      "color": "6be514",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2020-09-19T04:32:04Z",
  "updated_at": "2020-10-15T08:37:33Z",
  "closed_at": "2020-10-15T08:37:33Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "```\r\nfunc (s *stateObject) updateTrie(db Database) Trie {\r\n\t// Make sure all dirty slots are finalized into the pending storage area\r\n\ts.finalise()\r\n\tif len(s.pendingStorage) == 0 {\r\n\t\treturn s.trie\r\n\t}\r\n\t// Track the amount of time wasted on updating the storge trie\r\n\tif metrics.EnabledExpensive {\r\n\t\tdefer func(start time.Time) { s.db.StorageUpdates += time.Since(start) }(time.Now())\r\n\t}\r\n\t// Insert all the pending updates into the trie\r\n\ttr := s.getTrie(db)\r\n\tfor key, value := range s.pendingStorage {\r\n\t\t// Skip noop changes, persist actual changes\r\n\t\tif value == s.originStorage[key] {\r\n\t\t\tcontinue\r\n\t\t}\r\n\t\ts.originStorage[key] = value\r\n\r\n\t\tif (value == common.Hash{}) {\r\n\t\t\ts.setError(tr.TryDelete(key[:]))\r\n\t\t\tcontinue\r\n\t\t}\r\n\t\t// Encoding []byte cannot fail, ok to ignore the error.\r\n\t\tv, _ := rlp.EncodeToBytes(common.TrimLeftZeroes(value[:]))\r\n\t\ts.setError(tr.TryUpdate(key[:], v))\r\n\t}\r\n\tif len(s.pendingStorage) > 0 {\r\n\t\ts.pendingStorage = make(Storage)\r\n\t}\r\n\treturn tr\r\n}\r\n```\r\n\r\nThe deletion of the key value in the contract does not delete the key value in stateDB.  The tr.TryDelete(key[:]) does not delete stateDB.\r\nWhy can't we delete the obsolete unused key values from the stateDB to release disk space?",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21582/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21582/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/697170296",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21582#issuecomment-697170296",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21582",
    "id": 697170296,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NzE3MDI5Ng==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-23T06:50:47Z",
    "updated_at": "2020-09-23T06:50:47Z",
    "author_association": "MEMBER",
    "body": "Statedb is only a memory cache + convenience API on top of the tries. It's reset after every block so there's no point to manage life cycles in there too.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/697170296/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/698751706",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21582#issuecomment-698751706",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21582",
    "id": 698751706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODc1MTcwNg==",
    "user": {
      "login": "james-ray",
      "id": 26137182,
      "node_id": "MDQ6VXNlcjI2MTM3MTgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/26137182?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/james-ray",
      "html_url": "https://github.com/james-ray",
      "followers_url": "https://api.github.com/users/james-ray/followers",
      "following_url": "https://api.github.com/users/james-ray/following{/other_user}",
      "gists_url": "https://api.github.com/users/james-ray/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/james-ray/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/james-ray/subscriptions",
      "organizations_url": "https://api.github.com/users/james-ray/orgs",
      "repos_url": "https://api.github.com/users/james-ray/repos",
      "events_url": "https://api.github.com/users/james-ray/events{/privacy}",
      "received_events_url": "https://api.github.com/users/james-ray/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-25T06:39:06Z",
    "updated_at": "2020-09-25T09:37:56Z",
    "author_association": "NONE",
    "body": "> Statedb is only a memory cache + convenience API on top of the tries. It's reset after every block so there's no point to manage life cycles in there too.\r\n\r\nI mean, the key values in the LevelDB, the storage trie of each contract is stored in the LevelDB. If there is a map in the contract, for example, a map named \"taskList\", I want to delete the finished tasks, but seems like this does not free any disk space, because the deleted key values are still stored in LevelDB, though the storage root of the contract stateObject changes.  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/698751706/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/708994411",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21582#issuecomment-708994411",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21582",
    "id": 708994411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODk5NDQxMQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-15T08:37:33Z",
    "updated_at": "2020-10-15T08:37:33Z",
    "author_association": "MEMBER",
    "body": "> because the deleted key values are still stored in LevelDB, though the storage root of the contract stateObject changes.\r\n\r\nWe store data by hash, and thus there's this inherent deduplication of data. Thus, we cannot blindly remove an item just because _one_ trie is no longer refernecing it, other tries might be. This is what 'pruning' is all about, and the reason that the state grows more when processing block-by-block compared to fast-sync. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/708994411/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
