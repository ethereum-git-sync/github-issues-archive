{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21007",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21007/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21007/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21007/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/21007",
  "id": 609780960,
  "node_id": "MDU6SXNzdWU2MDk3ODA5NjA=",
  "number": 21007,
  "title": "Can't send any amount of eth, \"gas required exceeds allowance or always failing transaction\"",
  "user": {
    "login": "l4zygreed",
    "id": 9384565,
    "node_id": "MDQ6VXNlcjkzODQ1NjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9384565?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/l4zygreed",
    "html_url": "https://github.com/l4zygreed",
    "followers_url": "https://api.github.com/users/l4zygreed/followers",
    "following_url": "https://api.github.com/users/l4zygreed/following{/other_user}",
    "gists_url": "https://api.github.com/users/l4zygreed/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/l4zygreed/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/l4zygreed/subscriptions",
    "organizations_url": "https://api.github.com/users/l4zygreed/orgs",
    "repos_url": "https://api.github.com/users/l4zygreed/repos",
    "events_url": "https://api.github.com/users/l4zygreed/events{/privacy}",
    "received_events_url": "https://api.github.com/users/l4zygreed/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "rjl493456442",
    "id": 5959481,
    "node_id": "MDQ6VXNlcjU5NTk0ODE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rjl493456442",
    "html_url": "https://github.com/rjl493456442",
    "followers_url": "https://api.github.com/users/rjl493456442/followers",
    "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
    "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
    "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
    "repos_url": "https://api.github.com/users/rjl493456442/repos",
    "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2020-04-30T10:03:10Z",
  "updated_at": "2020-07-27T23:00:10Z",
  "closed_at": "2020-05-11T08:08:21Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "After updating geth to latest version, can't send any amount of eth\r\n\r\n#### System information\r\nGeth version: ` 1.9.13-stable`\r\nOS & Version: CentOS 7\r\n\r\n#### Expected behaviour\r\nCould send 0.001-0.0046 eth to another address from account with 0.005 eth\r\n\r\n#### Actual behaviour\r\nAlways getting error like \r\n`gas required exceeds allowance (%amount%) or always failing transaction`\r\n\r\n```\r\n> web3.fromWei(eth.getBalance('0xae6c49f8e7dcd277067fa79422a3b7e7ddb8e368'), 'ether')\r\n0.00505881\r\n\r\n> eth.sendTransaction({from: '0xae6c49f8e7dcd277067fa79422a3b7e7ddb8e368', to: '0xe205B0ea9A15538Eb4DDCd40267bf19189B6D23a', value: web3.toWei(0.0015,'ether')})\r\nError: gas required exceeds allowance (9975503) or always failing transaction\r\n\tat web3.js:6347:37(47)\r\n\tat web3.js:5081:62(37)\r\n\tat <eval>:1:20(15)\r\n\r\neth.estimateGas({from: '0xae6c49f8e7dcd277067fa79422a3b7e7ddb8e368', to: '0xe205B0ea9A15538Eb4DDCd40267bf19189B6D23a', value: web3.toWei(0.0015,'ether')})\r\n21000\r\n```\r\n",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21007/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21007/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/621753371",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21007#issuecomment-621753371",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21007",
    "id": 621753371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTc1MzM3MQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T10:38:12Z",
    "updated_at": "2020-04-30T10:38:12Z",
    "author_association": "MEMBER",
    "body": "That seems odd because that error message originates from `estimateGas`, which seems to run well in your second invocation.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/621753371/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/621761764",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21007#issuecomment-621761764",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21007",
    "id": 621761764,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTc2MTc2NA==",
    "user": {
      "login": "l4zygreed",
      "id": 9384565,
      "node_id": "MDQ6VXNlcjkzODQ1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9384565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l4zygreed",
      "html_url": "https://github.com/l4zygreed",
      "followers_url": "https://api.github.com/users/l4zygreed/followers",
      "following_url": "https://api.github.com/users/l4zygreed/following{/other_user}",
      "gists_url": "https://api.github.com/users/l4zygreed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l4zygreed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l4zygreed/subscriptions",
      "organizations_url": "https://api.github.com/users/l4zygreed/orgs",
      "repos_url": "https://api.github.com/users/l4zygreed/repos",
      "events_url": "https://api.github.com/users/l4zygreed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l4zygreed/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T10:57:33Z",
    "updated_at": "2020-04-30T10:57:33Z",
    "author_association": "NONE",
    "body": "Seems like this error appears only on accounts where eth amount is under the specific value\r\nI have access to account with 0.2 eth and transactions runs well on it",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/621761764/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/621770162",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21007#issuecomment-621770162",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21007",
    "id": 621770162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTc3MDE2Mg==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T11:17:10Z",
    "updated_at": "2020-04-30T11:17:10Z",
    "author_association": "MEMBER",
    "body": "Yes, hence 'always failing'. Regardless of the amount of gas, the tx fails (balance too low).This is working as expected, no?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/621770162/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/621784969",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21007#issuecomment-621784969",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21007",
    "id": 621784969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTc4NDk2OQ==",
    "user": {
      "login": "l4zygreed",
      "id": 9384565,
      "node_id": "MDQ6VXNlcjkzODQ1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9384565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l4zygreed",
      "html_url": "https://github.com/l4zygreed",
      "followers_url": "https://api.github.com/users/l4zygreed/followers",
      "following_url": "https://api.github.com/users/l4zygreed/following{/other_user}",
      "gists_url": "https://api.github.com/users/l4zygreed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l4zygreed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l4zygreed/subscriptions",
      "organizations_url": "https://api.github.com/users/l4zygreed/orgs",
      "repos_url": "https://api.github.com/users/l4zygreed/repos",
      "events_url": "https://api.github.com/users/l4zygreed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l4zygreed/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T11:51:47Z",
    "updated_at": "2020-04-30T11:51:47Z",
    "author_association": "NONE",
    "body": "Using Ethereum logic I can transfer ~0.0046 eth from account with 0.005 eth and rest will be used as gas.\r\nBut I can't transfer even 0.001 eth.\r\nEthereum guis like mist or metamask doesn't show any errors and they propose to transfer the same amount of eth as I wrote as maximum available to transfer. \r\nSo it doesn't seems like account have too low balance.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/621784969/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/621812482",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21007#issuecomment-621812482",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21007",
    "id": 621812482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTgxMjQ4Mg==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T12:48:27Z",
    "updated_at": "2020-04-30T12:48:27Z",
    "author_association": "MEMBER",
    "body": "Hmm, @holiman I think this may be a legit bug. If gas estimation uses non-zero gas price (sendTransaction should do that), then binary search can fail if the attempted gas limit is larger than what the account can cover.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/621812482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/621813243",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21007#issuecomment-621813243",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21007",
    "id": 621813243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTgxMzI0Mw==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T12:49:46Z",
    "updated_at": "2020-04-30T12:49:46Z",
    "author_association": "MEMBER",
    "body": "I think we'd need to add an extra clause to estimateGas, so the max cap is also capped by available balance?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/621813243/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/664678676",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21007#issuecomment-664678676",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21007",
    "id": 664678676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NDY3ODY3Ng==",
    "user": {
      "login": "visopsys",
      "id": 510036,
      "node_id": "MDQ6VXNlcjUxMDAzNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/510036?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/visopsys",
      "html_url": "https://github.com/visopsys",
      "followers_url": "https://api.github.com/users/visopsys/followers",
      "following_url": "https://api.github.com/users/visopsys/following{/other_user}",
      "gists_url": "https://api.github.com/users/visopsys/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/visopsys/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/visopsys/subscriptions",
      "organizations_url": "https://api.github.com/users/visopsys/orgs",
      "repos_url": "https://api.github.com/users/visopsys/repos",
      "events_url": "https://api.github.com/users/visopsys/events{/privacy}",
      "received_events_url": "https://api.github.com/users/visopsys/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-27T22:53:44Z",
    "updated_at": "2020-07-27T22:53:44Z",
    "author_association": "NONE",
    "body": "FYI, I still have this error after https://github.com/ethereum/go-ethereum/pull/21043\r\n\r\n```\r\n2020/07/27 15:44:38 gas required exceeds allowance (8000029) or always failing transaction\r\nexit status 1\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/664678676/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/664680665",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21007#issuecomment-664680665",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21007",
    "id": 664680665,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NDY4MDY2NQ==",
    "user": {
      "login": "visopsys",
      "id": 510036,
      "node_id": "MDQ6VXNlcjUxMDAzNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/510036?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/visopsys",
      "html_url": "https://github.com/visopsys",
      "followers_url": "https://api.github.com/users/visopsys/followers",
      "following_url": "https://api.github.com/users/visopsys/following{/other_user}",
      "gists_url": "https://api.github.com/users/visopsys/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/visopsys/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/visopsys/subscriptions",
      "organizations_url": "https://api.github.com/users/visopsys/orgs",
      "repos_url": "https://api.github.com/users/visopsys/repos",
      "events_url": "https://api.github.com/users/visopsys/events{/privacy}",
      "received_events_url": "https://api.github.com/users/visopsys/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-27T23:00:10Z",
    "updated_at": "2020-07-27T23:00:10Z",
    "author_association": "NONE",
    "body": "@rjl493456442 Here is the code that I use to send token from a smart contract (some info are obfuscated) but you can reproduce them with your own smart contract & account address.\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n    \"context\"\r\n    \"crypto/ecdsa\"\r\n    \"fmt\"\r\n    \"log\"\r\n    \"math/big\"\r\n\r\n    \"github.com/miguelmota/go-ethereum-hdwallet\"\r\n\r\n    ethereum \"github.com/ethereum/go-ethereum\"\r\n    \"github.com/ethereum/go-ethereum/common\"\r\n    \"github.com/ethereum/go-ethereum/common/hexutil\"\r\n    \"github.com/ethereum/go-ethereum/core/types\"\r\n    \"github.com/ethereum/go-ethereum/crypto\"\r\n    \"github.com/ethereum/go-ethereum/ethclient\"\r\n    \"github.com/ethereum/go-ethereum/accounts\"\r\n    \"golang.org/x/crypto/sha3\"\r\n)\r\n\r\nconst TOKEN_ADDRESS = \"0xOBFUSCATED\"\r\nconst TO_ADDRESS = \"0xOBFUSCATED\"\r\n\r\nfunc getAccount() (*hdwallet.Wallet, accounts.Account, error) {\r\n    // Metamask test mnemonic\r\n    mnemonic := \"0xOBFUSCATED\"\r\n    wallet, err := hdwallet.NewFromMnemonic(mnemonic)\r\n    if err != nil {\r\n        log.Fatal(err)\r\n    }\r\n\r\n    path := hdwallet.MustParseDerivationPath(\"OBFUSCATED\")\r\n    account, err := wallet.Derive(path, false)\r\n    return wallet, account, err\r\n}\r\n\r\nfunc getPrivateKey() (string, error) {\r\n    wallet, account, err := getAccount()\r\n    if err != nil {\r\n        log.Fatal(err)\r\n    }\r\n\r\n    privateKey, err := wallet.PrivateKeyHex(account)\r\n    if err != nil {\r\n        log.Fatal(err)\r\n    }\r\n\r\n    fmt.Printf(\"Private key in hex: %s\\n\", privateKey)\r\n    return privateKey, err\r\n}\r\n\r\nfunc run() {\r\n    client, err := ethclient.Dial(\"https://ropsten.infura.io/v3/OBFUSCATED\")\r\n    if err != nil {\r\n        log.Fatal(err)\r\n    }\r\n\r\n    privateKeyHex, err := getPrivateKey()\r\n    privateKey, err := crypto.HexToECDSA(privateKeyHex)\r\n    if err != nil {\r\n        log.Fatal(err)\r\n    }\r\n\r\n    publicKey := privateKey.Public()\r\n    publicKeyECDSA, ok := publicKey.(*ecdsa.PublicKey)\r\n    if !ok {\r\n        log.Fatal(\"cannot assert type: publicKey is not of type *ecdsa.PublicKey\")\r\n    }\r\n\r\n    fromAddress := crypto.PubkeyToAddress(*publicKeyECDSA)\r\n    nonce, err := client.PendingNonceAt(context.Background(), fromAddress)\r\n    if err != nil {\r\n        log.Fatal(err)\r\n    }\r\n    fmt.Println(\"fromAddress = \", fromAddress.Hex())\r\n\r\n    value := big.NewInt(0) // in wei (0 eth)\r\n    gasPrice, err := client.SuggestGasPrice(context.Background())\r\n    if err != nil {\r\n        log.Fatal(err)\r\n    }\r\n    fmt.Println(\"gasPrice = \", gasPrice)\r\n\r\n    toAddress := common.HexToAddress(TO_ADDRESS)\r\n    tokenAddress := common.HexToAddress(TOKEN_ADDRESS)\r\n\r\n    transferFnSignature := []byte(\"transfer(address,uint256)\")\r\n    hash := sha3.NewLegacyKeccak256()\r\n    hash.Write(transferFnSignature)\r\n    methodID := hash.Sum(nil)[:4]\r\n    fmt.Println(hexutil.Encode(methodID)) // 0xa9059cbb\r\n\r\n    paddedAddress := common.LeftPadBytes(toAddress.Bytes(), 32)\r\n    fmt.Println(hexutil.Encode(paddedAddress)) \r\n\r\n    amount := new(big.Int)\r\n    amount.SetString(\"1000000000000000000\", 10) // sets the value to 1000 tokens, in the token denomination\r\n\r\n    paddedAmount := common.LeftPadBytes(amount.Bytes(), 32)\r\n    fmt.Println(hexutil.Encode(paddedAmount)) \r\n\r\n    var data []byte\r\n    data = append(data, methodID...)\r\n    data = append(data, paddedAddress...)\r\n    data = append(data, paddedAmount...)\r\n\r\n    fmt.Println(\"Getting gas limit...\")\r\n\r\n    gasLimit, err := client.EstimateGas(context.Background(), ethereum.CallMsg{\r\n        To:   &tokenAddress,\r\n        Data: data,\r\n    })\r\n    if err != nil {\r\n        log.Fatal(err)\r\n    }\r\n    // gasLimit := uint64(80000)\r\n    fmt.Println(\"gasLimit = \", gasLimit) \r\n\r\n    tx := types.NewTransaction(nonce, tokenAddress, value, gasLimit, gasPrice, data)\r\n\r\n    chainID, err := client.NetworkID(context.Background())\r\n    if err != nil {\r\n        log.Fatal(err)\r\n    }\r\n\r\n    signedTx, err := types.SignTx(tx, types.NewEIP155Signer(chainID), privateKey)\r\n    if err != nil {\r\n        log.Fatal(err)\r\n    }\r\n\r\n    err = client.SendTransaction(context.Background(), signedTx)\r\n    if err != nil {\r\n        log.Fatal(err)\r\n    }\r\n\r\n    fmt.Printf(\"tx sent: %s\", signedTx.Hash().Hex())\r\n}\r\n\r\nfunc main() {\r\n    run()\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/664680665/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
