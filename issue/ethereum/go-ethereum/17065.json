{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17065",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17065/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17065/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17065/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/17065",
  "id": 335220975,
  "node_id": "MDU6SXNzdWUzMzUyMjA5NzU=",
  "number": 17065,
  "title": "Whisper: How could we print received messages that are actually stored in the memory when geth was closed or shh.newMessageFilter() is not activated?",
  "user": {
    "login": "avatar-lavventura",
    "id": 18537398,
    "node_id": "MDQ6VXNlcjE4NTM3Mzk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/18537398?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avatar-lavventura",
    "html_url": "https://github.com/avatar-lavventura",
    "followers_url": "https://api.github.com/users/avatar-lavventura/followers",
    "following_url": "https://api.github.com/users/avatar-lavventura/following{/other_user}",
    "gists_url": "https://api.github.com/users/avatar-lavventura/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avatar-lavventura/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avatar-lavventura/subscriptions",
    "organizations_url": "https://api.github.com/users/avatar-lavventura/orgs",
    "repos_url": "https://api.github.com/users/avatar-lavventura/repos",
    "events_url": "https://api.github.com/users/avatar-lavventura/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avatar-lavventura/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 264067675,
      "node_id": "MDU6TGFiZWwyNjQwNjc2NzU=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/area:whisper",
      "name": "area:whisper",
      "color": "d4c5f9",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-06-24T23:11:14Z",
  "updated_at": "2019-03-26T08:26:26Z",
  "closed_at": "2019-03-26T08:26:26Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Geth version: `1.8.0-unstable`\r\nOS & Version: Linux\r\n\r\n-----------\r\n\r\n[Whisper Protocol][1] is not well documented related to its usage. I believe this issue will help other users who might face with similar problem.\r\n\r\nEach sent message has time-to-live in seconds (`ttl`), that is defined by the sender. For more detail please see [Whisper v5 RPC API => shh_post][2]. `Whisper Protocol` keeps received messages in the memory until messages' `time-to-live` time is over, when `geth` was closed or `shh.newMessageFilter()` is not activated.\r\n\r\n**=>** How could we access and print those received messages that are actually stored in the memory?\r\n\r\n------ \r\n\r\n[Whisper v5 RPC API][3]:\r\n\r\n> shh_getFilterMessages\r\n> \r\n> Retrieve messages that match the filter criteria and are received\r\n> between the last time this function was called and now. \r\n\r\n- But there is no `getFilterMessages()` method with the latest `shh`. [Please see][4].\r\n\r\n------------\r\n\r\nOn this [solution][5]; we can use same key pairs after `geth` is restarted.  But the issue after `geth` is restarted and later when we run `shh.newMessageFilter()`; it does not retrieve/return any message that was sent while `geth` was closed.\r\n\r\n**[Q]** How could we obtain/filter messages that sent when `geth` was closed or `shh.newMessageFilter()` is not activated?. When we run `web3.shh.newMessageFilter()`, it only retrieves/filters messages right after it start running and it does not filter/print any message before it starts running. \r\n\r\n**Example Scenario:**\r\n\r\n**=>** On the receiver node I closed `geth` and from the sender node, I have sent multiple messages into receiver node. Later, when I reopened `geth` on the receiver node, `shh.info.memory` verifies that there are received messages in memory, but I was not able to retrieve/filter those messages using `web3.shh.newMessageFilter()`. \r\n\r\n    > shh.info.memory\r\n    780\r\n\r\n--------\r\n\r\n**Here is some logs:**\r\n\r\n**Creating `web3.shh.newMessageFilter()`:**\r\n\r\n    > kId=shh.addPrivateKey('0x8de0b39f3a4a109f27bb06a92dab680d58e8f029eaca61da6be7115981a2ed11')\r\n    \"439bfd6aa63a81b404ba20e4fc250e11c326d72ad9943c72dc445f476638989d\"\r\n\r\n    > filter=web3.shh.newMessageFilter(\r\n    ...         {privateKeyID:kId},\r\n    ...         function(err, res) {console.log(web3.toUtf8(res.payload))});\r\n    {\r\n      callbacks: [function(err, res)],\r\n      filterId: \"a0b4194651c9143d977c2fa4848ab681b414720364461b4096fb17588d84ae78\",\r\n      formatter: null,\r\n      getLogsCallbacks: [],\r\n      implementation: {\r\n        getLogs: function(),\r\n        newFilter: function(),\r\n        poll: function(),\r\n        uninstallFilter: function()\r\n      },\r\n      options: {\r\n        privateKeyID: \"439bfd6aa63a81b404ba20e4fc250e11c326d72ad9943c72dc445f476638989d\"\r\n      },\r\n      pollFilters: [],\r\n      requestManager: {\r\n        polls: {\r\n          82f08d2d7fe974a69acdadcfac39f788575d337eed9577969b617ae28462e597: {\r\n            data: {...},\r\n            id: \"82f08d2d7fe974a69acdadcfac39f788575d337eed9577969b617ae28462e597\",\r\n            callback: function(error, messages),\r\n            uninstall: function()\r\n          },\r\n          a0b4194651c9143d977c2fa4848ab681b414720364461b4096fb17588d84ae78: {\r\n            data: {...},\r\n            id: \"a0b4194651c9143d977c2fa4848ab681b414720364461b4096fb17588d84ae78\",\r\n            callback: function(error, messages),\r\n            uninstall: function()\r\n          }\r\n        },\r\n        provider: {\r\n          newAccount: function(),\r\n          openWallet: function(),\r\n          send: function github.com/ethereum/go-ethereum/console.(*bridge).Send-fm(),\r\n          sendAsync: function github.com/ethereum/go-ethereum/console.(*bridge).Send-fm(),\r\n          sign: function(),\r\n          unlockAccount: function()\r\n        },\r\n        timeout: {},\r\n        poll: function(),\r\n        reset: function(keepIsSyncing),\r\n        send: function(data),\r\n        sendAsync: function(data, callback),\r\n        sendBatch: function(data, callback),\r\n        setProvider: function(p),\r\n        startPolling: function(data, pollId, callback, uninstall),\r\n        stopPolling: function(pollId)\r\n      },\r\n      get: function(callback),\r\n      stopWatching: function(callback),\r\n      watch: function(callback)\r\n    }\r\n\r\n------------\r\n\r\nI can see `shh_getFilterMessages` under `filter.requestManager.polls` but I cannot call it.\r\n\r\n    > filter.requestManager.polls\r\n    {\r\n      82f08d2d7fe974a69acdadcfac39f788575d337eed9577969b617ae28462e597: {\r\n        data: {\r\n          method: \"shh_getFilterMessages\",\r\n          params: [\"82f08d2d7fe974a69acdadcfac39f788575d337eed9577969b617ae28462e597\"]\r\n        },\r\n        id: \"82f08d2d7fe974a69acdadcfac39f788575d337eed9577969b617ae28462e597\",\r\n        callback: function(error, messages),\r\n        uninstall: function()\r\n      },\r\n      a0b4194651c9143d977c2fa4848ab681b414720364461b4096fb17588d84ae78: {\r\n        data: {\r\n          method: \"shh_getFilterMessages\",\r\n          params: [\"a0b4194651c9143d977c2fa4848ab681b414720364461b4096fb17588d84ae78\"]\r\n        },\r\n        id: \"a0b4194651c9143d977c2fa4848ab681b414720364461b4096fb17588d84ae78\",\r\n        callback: function(error, messages),\r\n        uninstall: function()\r\n      }\r\n    }\r\n\r\n    > a.requestManager.polls.82f08d2d7fe974a69acdadcfac39f788575d337eed9577969b617ae28462e597\r\n    (anonymous): Line 1:23 Unexpected token ILLEGAL\r\n\r\n\r\n  [1]: https://github.com/ethereum/wiki/wiki/Whisper\r\n  [2]: https://github.com/ethereum/go-ethereum/wiki/Whisper-v5-RPC-API#shh_post\r\n  [3]: https://github.com/ethereum/go-ethereum/wiki/Whisper-v5-RPC-API#shh_getfiltermessages\r\n  [4]: https://github.com/ethereum/go-ethereum/issues/16013\r\n  [5]: https://ethereum.stackexchange.com/a/51856/4575\r\n",
  "closed_by": {
    "login": "gballet",
    "id": 3272758,
    "node_id": "MDQ6VXNlcjMyNzI3NTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3272758?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gballet",
    "html_url": "https://github.com/gballet",
    "followers_url": "https://api.github.com/users/gballet/followers",
    "following_url": "https://api.github.com/users/gballet/following{/other_user}",
    "gists_url": "https://api.github.com/users/gballet/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gballet/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gballet/subscriptions",
    "organizations_url": "https://api.github.com/users/gballet/orgs",
    "repos_url": "https://api.github.com/users/gballet/repos",
    "events_url": "https://api.github.com/users/gballet/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gballet/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17065/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17065/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/476521234",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17065#issuecomment-476521234",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17065",
    "id": 476521234,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjUyMTIzNA==",
    "user": {
      "login": "gballet",
      "id": 3272758,
      "node_id": "MDQ6VXNlcjMyNzI3NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3272758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gballet",
      "html_url": "https://github.com/gballet",
      "followers_url": "https://api.github.com/users/gballet/followers",
      "following_url": "https://api.github.com/users/gballet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gballet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gballet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gballet/subscriptions",
      "organizations_url": "https://api.github.com/users/gballet/orgs",
      "repos_url": "https://api.github.com/users/gballet/repos",
      "events_url": "https://api.github.com/users/gballet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gballet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-26T08:25:37Z",
    "updated_at": "2019-03-26T08:25:37Z",
    "author_association": "MEMBER",
    "body": "This is a multi-dimensional question, here's my best take at it:\r\n\r\n  * Most of these messages stored in memory are not intended for you; so listing all the messages make no sense and doesn't justify providing a specific function for this;\r\n  * `newMessageFilter`, like filters for other modules, doesn't work in the console at this stage; there are talks to replace the interpreter to make this possible, but the decision process is still ongoing;\r\n  * A simple way to recover the messages is to connect `wnode` to your geth instance, with the proper key. Or simply to write a `node` app that will get the messages for you.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/476521234/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/476521503",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17065#issuecomment-476521503",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17065",
    "id": 476521503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjUyMTUwMw==",
    "user": {
      "login": "gballet",
      "id": 3272758,
      "node_id": "MDQ6VXNlcjMyNzI3NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3272758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gballet",
      "html_url": "https://github.com/gballet",
      "followers_url": "https://api.github.com/users/gballet/followers",
      "following_url": "https://api.github.com/users/gballet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gballet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gballet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gballet/subscriptions",
      "organizations_url": "https://api.github.com/users/gballet/orgs",
      "repos_url": "https://api.github.com/users/gballet/repos",
      "events_url": "https://api.github.com/users/gballet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gballet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-26T08:26:26Z",
    "updated_at": "2019-03-26T08:26:26Z",
    "author_association": "MEMBER",
    "body": "No further work can be done until a new interpreter comes into geth, closing this issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/476521503/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
