{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21254",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21254/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21254/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21254/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/21254",
  "id": 643437737,
  "node_id": "MDU6SXNzdWU2NDM0Mzc3Mzc=",
  "number": 21254,
  "title": "Transactions in Status 0 in a private POA Network",
  "user": {
    "login": "otto-mora",
    "id": 16960403,
    "node_id": "MDQ6VXNlcjE2OTYwNDAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/16960403?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/otto-mora",
    "html_url": "https://github.com/otto-mora",
    "followers_url": "https://api.github.com/users/otto-mora/followers",
    "following_url": "https://api.github.com/users/otto-mora/following{/other_user}",
    "gists_url": "https://api.github.com/users/otto-mora/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/otto-mora/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/otto-mora/subscriptions",
    "organizations_url": "https://api.github.com/users/otto-mora/orgs",
    "repos_url": "https://api.github.com/users/otto-mora/repos",
    "events_url": "https://api.github.com/users/otto-mora/events{/privacy}",
    "received_events_url": "https://api.github.com/users/otto-mora/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2020-06-23T00:16:51Z",
  "updated_at": "2020-08-13T22:55:10Z",
  "closed_at": "2020-08-13T21:12:52Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hi there,\r\n\r\nWe seem to be receiving status 0 transactions whenever we try scenarios in our network with a higher number of transactions involved. Even after checking the transaction a few minutes after they remain in Status 0 permanently. \r\n\r\n#### System information\r\n\r\nGeth version: `1.9.15`\r\nOS & Version: Ubuntu Linux \r\n\r\n#### Expected behaviour\r\n\r\nSubmit a transaction for an NFT transfer or mint and receive a transaction in status 1, even if it takes longer to get a result due to the higher number of transactions being requested.\r\n\r\n#### Actual behaviour\r\n\r\nAfter getting a few hundred transactions through the network, we start getting some transactions in Status 0:\r\n\r\n``` Javascript\r\n{\r\n    \"to\": \"0x285Ee90f706CbF03b91aFeCA01b63825aB5824A5\",\r\n    \"from\": \"0x35128869b8c24a76c1850728B5dE1D94d53344C9\",\r\n    \"contractAddress\": null,\r\n    \"transactionIndex\": 0,\r\n    \"gasUsed\": {\r\n        \"_hex\": \"0x66bf\"\r\n    },\r\n    \"logsBloom\": \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\r\n    \"blockHash\": \"0x4f678da466099356f0a5f1af642588ac34e381058ac96430e03d230244f09c7a\",\r\n    \"transactionHash\": \"0xcbe9ff154cf90536f271f05aec0ae07a1621bfbba044d079ace52518c0e6f4aa\",\r\n    \"logs\": [],\r\n    \"blockNumber\": 7142,\r\n    \"confirmations\": 1,\r\n    \"cumulativeGasUsed\": {\r\n        \"_hex\": \"0x66bf\"\r\n    },\r\n    \"status\": 0,\r\n    \"byzantium\": true\r\n}\r\n```\r\nInitially we thought this might be something related to byzantium and our genesis block not enabling the latest hardforks (since the byzantium value is set to true in the transactions receipt, however even after changing our genesis block we are still getting this status 0 on certain occasions when we try to run scenarios with a higher number of transactions.\r\n\r\nThis how the hardforks are setup in the genesis block:\r\n\r\n``` Javascript\r\n{\r\n  \"config\": {\r\n    \"chainId\": 15,\r\n    \"homesteadBlock\": 0,\r\n    \"eip150Block\": 0,\r\n    \"eip150Hash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\r\n    \"eip155Block\": 0,\r\n    \"eip158Block\": 0,\r\n    \"byzantiumBlock\": 0,\r\n    \"constantinopleBlock\": 0,\r\n    \"petersburgBlock\": 0\r\n}\r\n```\r\n\r\nWe even implemented some logic to wait 15 seconds before re-attempting to submit a new transaction again (thinking that we might be overwhelming the geth node with too many concurrent transactions) however this seems to be failing even after several re-attempts (up to 20 re-attempts)\r\n\r\nAny ideas as to why this might be occurring?  Are we missing anything in our genesis block or anything else?",
  "closed_by": {
    "login": "otto-mora",
    "id": 16960403,
    "node_id": "MDQ6VXNlcjE2OTYwNDAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/16960403?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/otto-mora",
    "html_url": "https://github.com/otto-mora",
    "followers_url": "https://api.github.com/users/otto-mora/followers",
    "following_url": "https://api.github.com/users/otto-mora/following{/other_user}",
    "gists_url": "https://api.github.com/users/otto-mora/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/otto-mora/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/otto-mora/subscriptions",
    "organizations_url": "https://api.github.com/users/otto-mora/orgs",
    "repos_url": "https://api.github.com/users/otto-mora/repos",
    "events_url": "https://api.github.com/users/otto-mora/events{/privacy}",
    "received_events_url": "https://api.github.com/users/otto-mora/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21254/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21254/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/648644556",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21254#issuecomment-648644556",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21254",
    "id": 648644556,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODY0NDU1Ng==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-24T07:23:57Z",
    "updated_at": "2020-06-24T07:23:57Z",
    "author_association": "MEMBER",
    "body": "Status 0 means the tx failed execution. It's not related to the amount of txs or the amount of time you wait. Something failed in the EVM.\r\n\r\nIn your genesis block, you are still missing the latest fork, `istanbulBlock`. Perhaps your Solidity compiler relies on an opcode introduced in Istanbul, and that's the issue? Could you try enabling that last fork too and check again?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/648644556/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/648824033",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21254#issuecomment-648824033",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21254",
    "id": 648824033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODgyNDAzMw==",
    "user": {
      "login": "garyng2000",
      "id": 241666,
      "node_id": "MDQ6VXNlcjI0MTY2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/garyng2000",
      "html_url": "https://github.com/garyng2000",
      "followers_url": "https://api.github.com/users/garyng2000/followers",
      "following_url": "https://api.github.com/users/garyng2000/following{/other_user}",
      "gists_url": "https://api.github.com/users/garyng2000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/garyng2000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/garyng2000/subscriptions",
      "organizations_url": "https://api.github.com/users/garyng2000/orgs",
      "repos_url": "https://api.github.com/users/garyng2000/repos",
      "events_url": "https://api.github.com/users/garyng2000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/garyng2000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-24T13:35:26Z",
    "updated_at": "2020-06-24T13:35:26Z",
    "author_association": "NONE",
    "body": "yes, that hard fork config is important",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/648824033/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/649183013",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21254#issuecomment-649183013",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21254",
    "id": 649183013,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTE4MzAxMw==",
    "user": {
      "login": "otto-mora",
      "id": 16960403,
      "node_id": "MDQ6VXNlcjE2OTYwNDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16960403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/otto-mora",
      "html_url": "https://github.com/otto-mora",
      "followers_url": "https://api.github.com/users/otto-mora/followers",
      "following_url": "https://api.github.com/users/otto-mora/following{/other_user}",
      "gists_url": "https://api.github.com/users/otto-mora/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/otto-mora/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/otto-mora/subscriptions",
      "organizations_url": "https://api.github.com/users/otto-mora/orgs",
      "repos_url": "https://api.github.com/users/otto-mora/repos",
      "events_url": "https://api.github.com/users/otto-mora/events{/privacy}",
      "received_events_url": "https://api.github.com/users/otto-mora/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-25T02:53:07Z",
    "updated_at": "2020-06-25T02:53:07Z",
    "author_association": "NONE",
    "body": "Thank you Peter and Gary!  Good suggestions indeed. We have enabled the `istanbulBlock` and even though we are still getting the error, we at least are able to obtain more details on the error by performing an `eth_call` :\r\n\r\n```\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"id\": 1,\r\n    \"error\": {\r\n        \"code\": -32000,\r\n        \"message\": \"execution reverted\"\r\n    }\r\n}\r\n```\r\nI am not quite sure the meaning of error code 32000, though this [link](https://github.com/ethereum/web3.js/pull/3571) refers to it as an \"ABI Mismatch\" not sure what that means.\r\n\r\nI appreciate any other suggestions you may have. We already tried increasing the gas limit to see if that would make it go away, but this did not resolve it. Other ideas we have are:  1) Switching from EthersJSv4 to Web3,  2) Trying to implementing a queue mechanism so that transactions are sent to the Ethereum node one at a time (thinking that it might be a concurrency problem of some kind).\r\n\r\nHere is a more detailed look at our Genesis block settings:\r\n```\r\n{\r\n  \"alloc\": {\r\n      \"0x0c1c28336F5F256bD6657215F00eE83121e51336\": {\"balance\": \"7500000000000000000000000000000\"}\r\n  },\r\n  \"config\": {\r\n    \"chainId\": 15,\r\n     \"homesteadBlock\": 0,\r\n    \"eip150Block\": 0,\r\n    \"eip150Hash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\r\n    \"eip155Block\": 0,\r\n    \"eip158Block\": 0,\r\n    \"byzantiumBlock\": 0,\r\n    \"petersburgBlock\": 0,\r\n    \"constantinopleBlock\": 0,\r\n    \"istanbulBlock\": 0,\r\n    \"clique\": {\r\n        \"period\": 0,\r\n        \"epoch\": 30000\r\n     }         \r\n  },\r\n   \"nonce\": \"0x0\",\r\n  \"timestamp\": \"0x59e50516\",\r\n  \"extraData\": \"0x41756775720000000000000000000000000000000000000000000000000000000c1c28336F5F256bD6657215F00eE83121e513360000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\r\n  \"gasLimit\": \"0x7270E0\",\r\n  \"difficulty\": \"0x1\",\r\n  \"mixHash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\r\n  \"coinbase\": \"0x0000000000000000000000000000000000000000\",\r\n  \"number\": \"0x0\",\r\n  \"gasUsed\": \"0x0\",\r\n  \"parentHash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\r\n}\r\n```\r\nGeth version:  1.9.15 \r\n\r\n\r\nThank you!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/649183013/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/649222885",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21254#issuecomment-649222885",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21254",
    "id": 649222885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTIyMjg4NQ==",
    "user": {
      "login": "garyng2000",
      "id": 241666,
      "node_id": "MDQ6VXNlcjI0MTY2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/garyng2000",
      "html_url": "https://github.com/garyng2000",
      "followers_url": "https://api.github.com/users/garyng2000/followers",
      "following_url": "https://api.github.com/users/garyng2000/following{/other_user}",
      "gists_url": "https://api.github.com/users/garyng2000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/garyng2000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/garyng2000/subscriptions",
      "organizations_url": "https://api.github.com/users/garyng2000/orgs",
      "repos_url": "https://api.github.com/users/garyng2000/repos",
      "events_url": "https://api.github.com/users/garyng2000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/garyng2000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-25T05:12:31Z",
    "updated_at": "2020-06-25T05:12:31Z",
    "author_association": "NONE",
    "body": "you are still missing another hard fork after Istanbul. I don't know if that is important but based on my experience in another reported 'issue', make sure they are all there. another thing or two which I have found, 'mint on demand'(block period 0) can be tricky, I end up set it to 15(sort of the same as POW) and on the safe side, I space out each hard fork(i.e. each has different block number). It may or may not make a difference but I just try to avoid corner cases.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/649222885/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/649237576",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21254#issuecomment-649237576",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21254",
    "id": 649237576,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTIzNzU3Ng==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-25T05:59:54Z",
    "updated_at": "2020-06-25T05:59:54Z",
    "author_association": "MEMBER",
    "body": "@otto-mora Could you provide a repro that we might check. It's probably easier to see what could be wrong if we had something to run ourselves.\r\n\r\n@garyng2000 The only fork after Istanbul was Muir Glacier, but that just adjusted the ethash PoW difficulty, so it's not relevant for this chain/issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/649237576/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/665327700",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21254#issuecomment-665327700",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21254",
    "id": 665327700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTMyNzcwMA==",
    "user": {
      "login": "lucachaco",
      "id": 85146,
      "node_id": "MDQ6VXNlcjg1MTQ2",
      "avatar_url": "https://avatars.githubusercontent.com/u/85146?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lucachaco",
      "html_url": "https://github.com/lucachaco",
      "followers_url": "https://api.github.com/users/lucachaco/followers",
      "following_url": "https://api.github.com/users/lucachaco/following{/other_user}",
      "gists_url": "https://api.github.com/users/lucachaco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lucachaco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lucachaco/subscriptions",
      "organizations_url": "https://api.github.com/users/lucachaco/orgs",
      "repos_url": "https://api.github.com/users/lucachaco/repos",
      "events_url": "https://api.github.com/users/lucachaco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lucachaco/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-28T22:32:03Z",
    "updated_at": "2020-07-28T22:44:02Z",
    "author_association": "NONE",
    "body": "Hi @karalabe,\r\nWhen we call a function (_mint_) on our smart contract we don’t get the error if we set the _gasLimit_ override option as an extra parameter. The following code shows this example.\r\n\r\n```Javascript\r\nconst instance = new ethers.Contract(contractAddress, contractABI, provider);\r\nconst wallet = await getWallet(privateKey);\r\nconst  contractnstance = contract.connect(wallet);\r\nconst overrides = {\r\n  gasLimit: 750000,\r\n};\r\ncontractInstance.mint(… , overrides)\r\n```\r\n\r\nBut the above option is not a good fit for us since we want to sign and send the transaction separately. \r\nThat's why we want to use the _wallet.sign_ function as shown in the following code.\r\nIn summary, we get the error if we don't set gasLimit overrides option. How can we get the same _'gasLimit overrides option'_ behavior using the approach below?  \r\n\r\n\r\n```Javascript\r\nconst wallet = await getWallet(privateKey);\r\nconst tx = {\r\n  ...transaction,\r\n  gasLimit: 750000,\r\n  nonce: transaction.nonce || (await getTransactionCount(wallet.address)),\r\n};\r\nconst  signedTransaction = wallet.sign(tx);\r\nconst provider = await getProviderResolver();\r\nprovider.sendTransaction(signedTransaction);\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/665327700/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/665910957",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21254#issuecomment-665910957",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21254",
    "id": 665910957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTkxMDk1Nw==",
    "user": {
      "login": "otto-mora",
      "id": 16960403,
      "node_id": "MDQ6VXNlcjE2OTYwNDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16960403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/otto-mora",
      "html_url": "https://github.com/otto-mora",
      "followers_url": "https://api.github.com/users/otto-mora/followers",
      "following_url": "https://api.github.com/users/otto-mora/following{/other_user}",
      "gists_url": "https://api.github.com/users/otto-mora/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/otto-mora/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/otto-mora/subscriptions",
      "organizations_url": "https://api.github.com/users/otto-mora/orgs",
      "repos_url": "https://api.github.com/users/otto-mora/repos",
      "events_url": "https://api.github.com/users/otto-mora/events{/privacy}",
      "received_events_url": "https://api.github.com/users/otto-mora/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-29T20:32:08Z",
    "updated_at": "2020-07-29T20:32:08Z",
    "author_association": "NONE",
    "body": "Hi @karalabe,\r\n\r\nYou can see the error in a public repo that was posted by @lucachaco :  https://github.com/lucachaco/etherum-node-runner\r\n\r\nAs he indicated, the issue goes away when we add the gasLimit override, however we would prefer to be able to construct the transaction separately, by first signing it and then sending it (separate components in our application do these functions). Is there a way to do that?\r\n\r\nThank you!!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/665910957/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/665925071",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21254#issuecomment-665925071",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21254",
    "id": 665925071,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTkyNTA3MQ==",
    "user": {
      "login": "garyng2000",
      "id": 241666,
      "node_id": "MDQ6VXNlcjI0MTY2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/garyng2000",
      "html_url": "https://github.com/garyng2000",
      "followers_url": "https://api.github.com/users/garyng2000/followers",
      "following_url": "https://api.github.com/users/garyng2000/following{/other_user}",
      "gists_url": "https://api.github.com/users/garyng2000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/garyng2000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/garyng2000/subscriptions",
      "organizations_url": "https://api.github.com/users/garyng2000/orgs",
      "repos_url": "https://api.github.com/users/garyng2000/repos",
      "events_url": "https://api.github.com/users/garyng2000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/garyng2000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-29T21:01:03Z",
    "updated_at": "2020-07-29T21:01:03Z",
    "author_association": "NONE",
    "body": "@otto-mora \r\n\r\na bit confused here. This is pure client side thing, nothing to do with go-Ethereum. I am pretty sure I have done this before using Nethereum, basically construct the tx as raw data(no wallet needed, I don't even think gasLimit is needed other than may be estimate) then sign it and sendRawTransaction or something like that.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/665925071/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/665929137",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21254#issuecomment-665929137",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21254",
    "id": 665929137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTkyOTEzNw==",
    "user": {
      "login": "garyng2000",
      "id": 241666,
      "node_id": "MDQ6VXNlcjI0MTY2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/garyng2000",
      "html_url": "https://github.com/garyng2000",
      "followers_url": "https://api.github.com/users/garyng2000/followers",
      "following_url": "https://api.github.com/users/garyng2000/following{/other_user}",
      "gists_url": "https://api.github.com/users/garyng2000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/garyng2000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/garyng2000/subscriptions",
      "organizations_url": "https://api.github.com/users/garyng2000/orgs",
      "repos_url": "https://api.github.com/users/garyng2000/repos",
      "events_url": "https://api.github.com/users/garyng2000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/garyng2000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-29T21:08:56Z",
    "updated_at": "2020-07-29T21:08:56Z",
    "author_association": "NONE",
    "body": "talking about gasLimit and estimate(if you do that before submit), make sure give it some room as the estimate changes from version to version and the real gas used also depends on the state at the time of execution. I used to add 50% but in 1.9.15, I have to make it like 200%.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/665929137/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/673713119",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21254#issuecomment-673713119",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21254",
    "id": 673713119,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MzcxMzExOQ==",
    "user": {
      "login": "otto-mora",
      "id": 16960403,
      "node_id": "MDQ6VXNlcjE2OTYwNDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16960403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/otto-mora",
      "html_url": "https://github.com/otto-mora",
      "followers_url": "https://api.github.com/users/otto-mora/followers",
      "following_url": "https://api.github.com/users/otto-mora/following{/other_user}",
      "gists_url": "https://api.github.com/users/otto-mora/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/otto-mora/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/otto-mora/subscriptions",
      "organizations_url": "https://api.github.com/users/otto-mora/orgs",
      "repos_url": "https://api.github.com/users/otto-mora/repos",
      "events_url": "https://api.github.com/users/otto-mora/events{/privacy}",
      "received_events_url": "https://api.github.com/users/otto-mora/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-13T21:12:52Z",
    "updated_at": "2020-08-13T21:12:52Z",
    "author_association": "NONE",
    "body": "Hello Gary and Peter,\r\n\r\nThank you both for your comments. After much head-scratching inside our development team, we were able to figure out that the error was caused by us using a random function in javascript to assign the NFT token id. The code in question was:\r\n\r\n```javascript\r\nconst tokenId = parseInt((Math.random() * 100000).toString(), 10);\r\n```\r\n\r\nAmazing how something so simple can cause so much chaos :-p\r\n\r\nLessons learned: \r\n\r\n- NEVER trust the math.random function from Javascript V8, you can easily get collisions when frequently used\r\n- Handle the revert reasons from the EVM better, in particular open zeppelin has a [require check for the token ID ](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol#L335)that we should have been detecting better from our side.\r\n\r\nThank you again. Closing this issue now.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/673713119/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/673749248",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21254#issuecomment-673749248",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21254",
    "id": 673749248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3Mzc0OTI0OA==",
    "user": {
      "login": "garyng2000",
      "id": 241666,
      "node_id": "MDQ6VXNlcjI0MTY2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/garyng2000",
      "html_url": "https://github.com/garyng2000",
      "followers_url": "https://api.github.com/users/garyng2000/followers",
      "following_url": "https://api.github.com/users/garyng2000/following{/other_user}",
      "gists_url": "https://api.github.com/users/garyng2000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/garyng2000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/garyng2000/subscriptions",
      "organizations_url": "https://api.github.com/users/garyng2000/orgs",
      "repos_url": "https://api.github.com/users/garyng2000/repos",
      "events_url": "https://api.github.com/users/garyng2000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/garyng2000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-13T22:55:10Z",
    "updated_at": "2020-08-13T22:55:10Z",
    "author_association": "NONE",
    "body": "@otto-mora\r\nglad you find it. In a related note, the 1.9.15+ of returning failed reason helps a lot for these logic related issues. At least, if you have a require(condition, 'something is not supposed to be') in the contract, at least it is easier to pin point than the previous just 'failed' and in some clients it said out of gas(and that is completely unrelated) :-)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/673749248/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
