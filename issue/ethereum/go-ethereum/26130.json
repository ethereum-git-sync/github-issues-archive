{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26130",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26130/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26130/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26130/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/26130",
  "id": 1438885970,
  "node_id": "I_kwDOAOvK985Vw6hS",
  "number": 26130,
  "title": "Align some struct fields to use less memory ",
  "user": {
    "login": "estensen",
    "id": 9142800,
    "node_id": "MDQ6VXNlcjkxNDI4MDA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9142800?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/estensen",
    "html_url": "https://github.com/estensen",
    "followers_url": "https://api.github.com/users/estensen/followers",
    "following_url": "https://api.github.com/users/estensen/following{/other_user}",
    "gists_url": "https://api.github.com/users/estensen/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/estensen/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/estensen/subscriptions",
    "organizations_url": "https://api.github.com/users/estensen/orgs",
    "repos_url": "https://api.github.com/users/estensen/repos",
    "events_url": "https://api.github.com/users/estensen/events{/privacy}",
    "received_events_url": "https://api.github.com/users/estensen/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    },
    {
      "id": 1132689577,
      "node_id": "MDU6TGFiZWwxMTMyNjg5NTc3",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:triage",
      "name": "status:triage",
      "color": "6be514",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-11-07T19:50:04Z",
  "updated_at": "2022-11-08T14:09:01Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# Rationale\r\n\r\nNot having structs in the order you'd like reduces readability, but for some structs that are used internally and in large amounts it might be worth the memory savings:\r\n\r\n1. Pack fields better to use less memory\r\n2. Put pointer fields at the beginning to [avoid GC scanning](https://github.com/1pkg/gopium/issues/24#issuecomment-951203325) in the worst case the entire struct\r\n\r\n# Implementation\r\n\r\nUsually you have to run `fieldalignment -fix ./...` a couple of times until it converges. Unfortunately it removes the comment, so some manual labor is required. \r\n\r\nI'd be happy to work on this if I can get some guidance on which structs are worth it.\r\n\r\n```\r\n# Excluded tests from output\r\nfieldalignment ./...\r\n/Users/estensen/Developer/go-ethereum/common/format.go:47:18: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/common/types.go:372:23: struct with 32 pointer bytes could be 8\r\n/Users/estensen/Library/Caches/go-build/d5/d5b38088c641b03757c0e9f7d0b519ec60773c48a721e75f5918f763d5faf27c-d:103:45: struct with 216 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/rlp/internal/rlpstruct/rlpstruct.go:30:12: struct with 80 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/rlp/internal/rlpstruct/rlpstruct.go:39:11: struct with 40 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/rlp/decode.go:561:13: struct with 56 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/rlp/encbuffer.go:210:16: struct with 32 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/rlp/iterator.go:19:19: struct with 64 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/rlp/typecache.go:49:16: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/rlp/typecache.go:121:12: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/rlp/typecache.go:172:23: struct with 40 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/params/config.go:338:29: struct with 32 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/params/config.go:349:18: struct of size 216 could be 208\r\n/Users/estensen/Developer/go-ethereum/params/config.go:601:12: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/params/config.go:748:24: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/core/types/block.go:70:13: struct with 552 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/core/types/block.go:98:23: struct with 72 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/core/types/block.go:170:12: struct with 128 pointer bytes could be 112\r\n/Users/estensen/Developer/go-ethereum/core/types/gen_access_tuple.go:14:19: struct with 32 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/core/types/gen_header_json.go:18:14: struct with 552 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/core/types/gen_log_json.go:17:11: struct of size 168 could be 160\r\n/Users/estensen/Developer/go-ethereum/core/types/gen_log_json.go:43:11: struct with 88 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/core/types/gen_receipt_json.go:18:15: struct with 432 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/core/types/gen_receipt_json.go:50:15: struct with 112 pointer bytes could be 96\r\n/Users/estensen/Developer/go-ethereum/core/types/log.go:31:10: struct of size 168 could be 160\r\n/Users/estensen/Developer/go-ethereum/core/types/log.go:67:13: struct with 56 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/core/types/log.go:74:26: struct with 56 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/core/types/receipt.go:52:14: struct of size 440 could be 432\r\n/Users/estensen/Developer/go-ethereum/core/types/receipt.go:74:24: struct with 64 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/core/types/receipt.go:85:17: struct with 296 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/core/types/receipt.go:93:23: struct with 40 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/core/types/receipt.go:100:25: struct with 96 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/core/types/receipt.go:110:25: struct with 352 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/core/types/state_account.go:29:19: struct with 56 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/core/types/transaction.go:518:34: struct with 56 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/core/types/transaction.go:586:14: struct of size 136 could be 128\r\n/Users/estensen/Developer/go-ethereum/core/types/transaction_marshalling.go:29:13: struct with 112 pointer bytes could be 104\r\n/Users/estensen/Developer/go-ethereum/core/types/tx_access_list.go:31:18: struct with 32 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/core/types/tx_access_list.go:46:19: struct with 120 pointer bytes could be 88\r\n/Users/estensen/Developer/go-ethereum/core/types/tx_dynamic_fee.go:25:19: struct with 128 pointer bytes could be 96\r\n/Users/estensen/Developer/go-ethereum/core/types/tx_legacy.go:26:15: struct with 88 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/interfaces.go:134:14: struct with 104 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/common/mclock/simclock.go:34:16: struct with 64 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/common/mclock/simclock.go:42:15: struct with 40 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/event/event.go:41:14: struct with 32 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/event/event.go:148:26: struct with 96 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/event/feed.go:35:11: struct with 104 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/event/feed.go:192:14: struct with 56 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/event/subscription.go:134:21: struct with 64 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/event/subscription.go:238:24: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/accounts/accounts.go:33:14: struct with 48 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/accounts/manager.go:49:14: struct with 200 pointer bytes could be 184\r\n/Users/estensen/Developer/go-ethereum/accounts/abi/abi.go:138:15: struct with 88 pointer bytes could be 80\r\n/Users/estensen/Developer/go-ethereum/accounts/abi/argument.go:29:15: struct with 136 pointer bytes could be 128\r\n/Users/estensen/Developer/go-ethereum/accounts/abi/error.go:29:12: struct with 64 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/accounts/abi/event.go:30:12: struct with 88 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/accounts/abi/method.go:52:13: struct with 152 pointer bytes could be 136\r\n/Users/estensen/Developer/go-ethereum/accounts/abi/type.go:50:11: struct with 120 pointer bytes could be 88\r\n/Users/estensen/Developer/go-ethereum/log/handler_glog.go:39:18: struct with 72 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/log/logger.go:91:13: struct with 208 pointer bytes could be 192\r\n/Users/estensen/Developer/go-ethereum/log/logger.go:128:13: struct with 32 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/metrics/config.go:20:13: struct of size 176 could be 160\r\n/Users/estensen/Developer/go-ethereum/metrics/graphite.go:15:21: struct with 64 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/metrics/meter.go:171:20: struct with 104 pointer bytes could be 80\r\n/Users/estensen/Developer/go-ethereum/metrics/meter.go:279:19: struct with 48 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/metrics/opentsdb.go:17:21: struct with 48 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/metrics/resetting_timer.go:142:29: struct with 40 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/metrics/sample.go:37:21: struct with 88 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/metrics/sample.go:300:21: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/metrics/sample.go:400:20: struct with 32 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/metrics/writer.go:86:18: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/p2p/netutil/iptrack.go:27:16: struct with 56 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/p2p/netutil/net.go:220:21: struct with 32 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/rpc/client.go:64:16: struct with 72 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/rpc/client.go:77:13: struct of size 128 could be 120\r\n/Users/estensen/Developer/go-ethereum/rpc/client.go:131:16: struct with 56 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/rpc/errors.go:23:16: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/rpc/errors.go:112:26: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/rpc/handler.go:51:14: struct with 136 pointer bytes could be 104\r\n/Users/estensen/Developer/go-ethereum/rpc/http.go:41:15: struct with 72 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/rpc/json.go:128:16: struct with 40 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/rpc/json.go:169:16: struct with 80 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/rpc/server.go:45:13: struct with 48 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/rpc/service.go:38:22: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/rpc/service.go:44:14: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/rpc/service.go:51:15: struct of size 96 could be 88\r\n/Users/estensen/Developer/go-ethereum/rpc/subscription.go:93:15: struct with 48 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/rpc/subscription.go:187:19: struct with 40 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/rpc/subscription.go:205:25: struct with 136 pointer bytes could be 112\r\n/Users/estensen/Developer/go-ethereum/rpc/types.go:32:10: struct with 48 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/rpc/websocket.go:275:21: struct with 136 pointer bytes could be 112\r\n/Users/estensen/Developer/go-ethereum/signer/core/apitypes/types.go:84:17: struct with 152 pointer bytes could be 120\r\n/Users/estensen/Developer/go-ethereum/signer/core/apitypes/types.go:195:20: struct with 32 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/signer/core/apitypes/types.go:201:16: struct with 104 pointer bytes could be 96\r\n/Users/estensen/Developer/go-ethereum/accounts/external/backend.go:63:21: struct with 72 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/accounts/external/backend.go:190:28: struct with 32 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/accounts/keystore/account_cache.go:49:25: struct with 32 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/accounts/keystore/account_cache.go:66:19: struct with 120 pointer bytes could be 104\r\n/Users/estensen/Developer/go-ethereum/accounts/keystore/key.go:41:10: struct with 48 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/accounts/keystore/keystore.go:62:15: struct with 184 pointer bytes could be 176\r\n/Users/estensen/Developer/go-ethereum/accounts/keystore/wallet.go:30:21: struct with 64 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/accounts/keystore/watch.go:29:14: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/accounts/abi/bind/base.go:42:15: struct with 48 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/accounts/abi/bind/base.go:51:19: struct of size 104 could be 96\r\n/Users/estensen/Developer/go-ethereum/accounts/abi/bind/base.go:69:17: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/accounts/abi/bind/base.go:84:15: struct with 56 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/accounts/abi/bind/base.go:109:20: struct with 600 pointer bytes could be 560\r\n/Users/estensen/Developer/go-ethereum/accounts/abi/bind/template.go:22:15: struct with 40 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/accounts/abi/bind/template.go:30:19: struct with 272 pointer bytes could be 256\r\n/Users/estensen/Developer/go-ethereum/accounts/abi/bind/template.go:62:16: struct with 152 pointer bytes could be 144\r\n/Users/estensen/Developer/go-ethereum/common/prque/lazyqueue.go:35:16: struct with 88 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/common/prque/sstack.go:33:13: struct with 72 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/ethdb/leveldb/leveldb.go:62:15: struct with 248 pointer bytes could be 232\r\n/Users/estensen/Developer/go-ethereum/ethdb/memorydb/memorydb.go:282:15: struct with 40 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/core/rawdb/accessors_chain.go:672:23: struct with 40 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/core/rawdb/accessors_metadata.go:100:16: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/core/rawdb/ancient_utils.go:32:18: struct with 40 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/core/rawdb/chain_freezer.go:45:19: struct with 48 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/core/rawdb/chain_iterator.go:86:20: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/core/rawdb/chain_iterator.go:97:17: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/core/rawdb/database.go:38:16: struct with 48 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/core/rawdb/freezer.go:64:14: struct of size 96 could be 88\r\n/Users/estensen/Developer/go-ethereum/core/rawdb/freezer_table.go:90:19: struct with 176 pointer bytes could be 120\r\n/Users/estensen/Developer/go-ethereum/core/rawdb/key_length_iterator.go:23:24: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/trie/database.go:70:15: struct with 168 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/trie/database.go:123:19: struct with 40 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/trie/database.go:133:17: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/trie/database.go:267:13: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/trie/errors.go:28:23: struct with 104 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/trie/hasher.go:29:13: struct with 64 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/trie/iterator.go:29:15: struct with 80 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/trie/iterator.go:126:24: struct with 48 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/trie/iterator.go:134:19: struct with 88 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/trie/iterator.go:147:16: struct with 40 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/trie/nodeset.go:29:17: struct with 56 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/trie/nodeset.go:89:21: struct with 32 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/trie/nodeset.go:96:14: struct with 56 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/trie/preimages.go:28:20: struct with 48 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/trie/secure_trie.go:51:16: struct with 128 pointer bytes could be 96\r\n/Users/estensen/Developer/go-ethereum/trie/stacktrie.go:55:16: struct with 232 pointer bytes could be 176\r\n/Users/estensen/Developer/go-ethereum/trie/stacktrie.go:101:37: struct with 72 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/trie/stacktrie.go:137:10: struct with 72 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/trie/sync.go:78:18: struct with 104 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/trie/sync.go:89:18: struct with 88 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/trie/sync.go:103:21: struct with 40 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/trie/sync.go:391:17: struct with 40 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/trie/trie.go:61:11: struct with 72 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/trie/trie_reader.go:47:17: struct with 56 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/core/state/snapshot/account.go:31:14: struct with 48 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/core/state/snapshot/context.go:40:21: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/core/state/snapshot/conversion.go:38:13: struct with 40 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/core/state/snapshot/conversion.go:108:20: struct with 88 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/core/state/snapshot/difflayer.go:100:16: struct with 136 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/core/state/snapshot/disklayer.go:32:16: struct with 112 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/core/state/snapshot/generate.go:126:18: struct with 80 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/core/state/snapshot/generate.go:579:11: struct with 56 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/core/state/snapshot/iterator.go:73:26: struct with 80 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/core/state/snapshot/iterator.go:232:26: struct with 112 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/core/state/snapshot/iterator.go:332:26: struct with 56 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/core/state/snapshot/iterator_binary.go:28:21: struct with 120 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/core/state/snapshot/iterator_fast.go:65:19: struct with 136 pointer bytes could be 80\r\n/Users/estensen/Developer/go-ethereum/core/state/snapshot/journal.go:39:23: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/core/state/snapshot/journal.go:57:21: struct with 40 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/core/state/snapshot/journal.go:63:21: struct with 64 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/core/state/snapshot/snapshot.go:168:11: struct with 80 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/core/state/dump.go:34:17: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/core/state/dump.go:51:18: struct with 120 pointer bytes could be 112\r\n/Users/estensen/Developer/go-ethereum/core/state/dump.go:64:11: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/core/state/iterator.go:31:19: struct with 208 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/core/state/journal.go:38:14: struct with 32 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/core/state/journal.go:96:16: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/core/state/state_object.go:67:18: struct of size 232 could be 224\r\n/Users/estensen/Developer/go-ethereum/core/state/statedb.go:64:14: struct with 272 pointer bytes could be 184\r\n/Users/estensen/Developer/go-ethereum/core/state/trie_prefetcher.go:37:21: struct with 208 pointer bytes could be 176\r\n/Users/estensen/Developer/go-ethereum/core/state/trie_prefetcher.go:207:17: struct with 216 pointer bytes could be 104\r\n/Users/estensen/Developer/go-ethereum/consensus/ethash/ethash.go:169:10: struct with 64 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/consensus/ethash/ethash.go:221:12: struct with 48 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/consensus/ethash/ethash.go:300:14: struct with 48 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/consensus/ethash/ethash.go:419:13: struct of size 112 could be 96\r\n/Users/estensen/Developer/go-ethereum/consensus/ethash/ethash.go:439:13: struct with 184 pointer bytes could be 176\r\n/Users/estensen/Developer/go-ethereum/consensus/ethash/sealer.go:193:19: struct with 232 pointer bytes could be 192\r\n/Users/estensen/Developer/go-ethereum/consensus/ethash/sealer.go:222:17: struct with 80 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/consensus/ethash/sealer.go:231:15: struct with 72 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/core/bloombits/matcher.go:52:21: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/core/bloombits/matcher.go:63:16: struct with 88 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/core/bloombits/matcher.go:75:14: struct with 72 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/core/bloombits/matcher.go:507:21: struct with 64 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/core/bloombits/scheduler.go:31:15: struct with 32 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/core/bloombits/scheduler.go:41:16: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/crypto/bls12381/pairing.go:29:13: struct with 5304 pointer bytes could be 136\r\n/Users/estensen/Developer/go-ethereum/crypto/bn256/cloudflare/lattice.go:37:14: struct with 56 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/core/vm/contract.go:45:15: struct with 192 pointer bytes could be 112\r\n/Users/estensen/Developer/go-ethereum/core/vm/evm.go:62:19: struct with 96 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/core/vm/evm.go:83:16: struct with 32 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/core/vm/evm.go:98:10: struct with 256 pointer bytes could be 232\r\n/Users/estensen/Developer/go-ethereum/core/vm/interpreter.go:27:13: struct of size 64 could be 56\r\n/Users/estensen/Developer/go-ethereum/core/vm/interpreter.go:47:21: struct with 136 pointer bytes could be 96\r\n/Users/estensen/Developer/go-ethereum/core/vm/jump_table.go:32:16: struct with 48 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/core/blockchain.go:128:18: struct of size 80 could be 64\r\n/Users/estensen/Developer/go-ethereum/core/blockchain.go:167:17: struct with 1016 pointer bytes could be 976\r\n/Users/estensen/Developer/go-ethereum/core/blockchain_insert.go:85:21: struct with 80 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/core/bloom_indexer.go:39:19: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/core/chain_indexer.go:72:19: struct with 224 pointer bytes could be 112\r\n/Users/estensen/Developer/go-ethereum/core/chain_makers.go:36:15: struct with 160 pointer bytes could be 136\r\n/Users/estensen/Developer/go-ethereum/core/events.go:33:17: struct with 48 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/core/gen_genesis.go:20:15: struct with 184 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/core/gen_genesis_account.go:19:22: struct with 56 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/core/genesis.go:49:14: struct with 184 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/core/genesis.go:209:21: struct with 56 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/core/genesis.go:218:28: struct with 88 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/core/genesis.go:230:31: struct with 56 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/core/headerchain.go:59:18: struct with 136 pointer bytes could be 104\r\n/Users/estensen/Developer/go-ethereum/core/headerchain.go:128:24: struct with 64 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/core/sender_cacher.go:42:21: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/core/state_transition.go:56:22: struct with 120 pointer bytes could be 88\r\n/Users/estensen/Developer/go-ethereum/core/state_transition.go:89:22: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/eth/filters/api.go:37:13: struct with 168 pointer bytes could be 144\r\n/Users/estensen/Developer/go-ethereum/eth/filters/api.go:49:16: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/eth/filters/filter.go:31:13: struct with 88 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/eth/filters/filter_system.go:148:19: struct with 160 pointer bytes could be 136\r\n/Users/estensen/Developer/go-ethereum/eth/filters/filter_system.go:162:18: struct with 176 pointer bytes could be 168\r\n/Users/estensen/Developer/go-ethereum/eth/filters/filter_system.go:222:19: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/accounts/abi/bind/backends/simulated.go:62:23: struct with 96 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/accounts/scwallet/apdu.go:26:18: struct of size 40 could be 32\r\n/Users/estensen/Developer/go-ethereum/accounts/scwallet/hub.go:63:23: struct with 64 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/accounts/scwallet/hub.go:71:10: struct with 224 pointer bytes could be 208\r\n/Users/estensen/Developer/go-ethereum/accounts/scwallet/wallet.go:113:13: struct with 152 pointer bytes could be 128\r\n/Users/estensen/Developer/go-ethereum/accounts/scwallet/wallet.go:1022:20: struct with 40 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/accounts/usbwallet/hub.go:47:10: struct of size 312 could be 296\r\n/Users/estensen/Developer/go-ethereum/accounts/usbwallet/ledger.go:74:19: struct with 56 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/accounts/usbwallet/trezor.go:53:19: struct of size 88 could be 80\r\n/Users/estensen/Developer/go-ethereum/accounts/usbwallet/wallet.go:77:13: struct with 344 pointer bytes could be 304\r\n/Users/estensen/Developer/go-ethereum/signer/fourbyte/abi.go:39:22: struct with 160 pointer bytes could be 152\r\n/Users/estensen/Developer/go-ethereum/console/prompt/prompter.go:72:23: struct with 48 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/core/txpool/journal.go:46:14: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/core/txpool/list.go:252:11: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/core/txpool/list.go:482:17: struct with 64 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/core/txpool/txpool.go:155:13: struct with 40 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/core/txpool/txpool.go:235:13: struct with 488 pointer bytes could be 360\r\n/Users/estensen/Developer/go-ethereum/core/txpool/txpool.go:1568:25: struct with 48 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/core/txpool/txpool.go:1661:13: struct with 48 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/consensus/clique/api.go:126:13: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/consensus/clique/clique.go:172:13: struct of size 112 could be 104\r\n/Users/estensen/Developer/go-ethereum/consensus/clique/snapshot.go:51:15: struct with 104 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/core/state/pruner/pruner.go:84:13: struct with 80 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/p2p/enr/enr.go:86:13: struct with 64 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/p2p/enr/entries.go:37:14: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/p2p/enr/entries.go:171:15: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/p2p/enode/iter.go:64:16: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/p2p/enode/iter.go:136:14: struct with 64 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/p2p/enode/localnode.go:47:16: struct with 232 pointer bytes could be 168\r\n/Users/estensen/Developer/go-ethereum/p2p/enode/nodedb.go:72:9: struct with 32 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/p2p/discover/v4wire/v4wire.go:49:7: struct with 96 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/p2p/discover/v4wire/v4wire.go:60:7: struct with 80 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/p2p/discover/v4wire/v4wire.go:74:11: struct with 80 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/p2p/discover/v4wire/v4wire.go:82:12: struct with 40 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/p2p/discover/v4wire/v4wire.go:90:13: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/p2p/discover/v5wire/encoding.go:41:13: struct with 48 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/p2p/discover/v5wire/encoding.go:65:20: struct with 96 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/p2p/discover/v5wire/msg.go:63:12: struct with 72 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/p2p/discover/v5wire/msg.go:83:7: struct with 40 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/p2p/discover/v5wire/msg.go:97:8: struct with 40 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/p2p/discover/v5wire/msg.go:129:11: struct with 56 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/p2p/discover/v5wire/session.go:47:16: struct with 40 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/p2p/discover/common.go:39:13: struct with 96 pointer bytes could be 80\r\n/Users/estensen/Developer/go-ethereum/p2p/discover/common.go:72:17: struct with 32 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/p2p/discover/lookup.go:30:13: struct with 112 pointer bytes could be 80\r\n/Users/estensen/Developer/go-ethereum/p2p/discover/lookup.go:175:21: struct with 64 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/p2p/discover/node.go:34:11: struct with 136 pointer bytes could be 88\r\n/Users/estensen/Developer/go-ethereum/p2p/discover/table.go:67:12: struct with 304 pointer bytes could be 280\r\n/Users/estensen/Developer/go-ethereum/p2p/discover/v4_udp.go:67:12: struct with 144 pointer bytes could be 112\r\n/Users/estensen/Developer/go-ethereum/p2p/discover/v4_udp.go:93:19: struct with 120 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/p2p/discover/v4_udp.go:120:12: struct with 80 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/p2p/discover/v5_udp.go:61:12: struct with 240 pointer bytes could be 216\r\n/Users/estensen/Developer/go-ethereum/p2p/discover/v5_udp.go:101:13: struct of size 120 could be 112\r\n/Users/estensen/Developer/go-ethereum/p2p/nat/nat.go:182:15: struct with 64 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/p2p/nat/natpmp.go:30:10: struct with 32 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/p2p/nat/natupnp.go:37:11: struct with 72 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/crypto/ecies/params.go:60:18: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/p2p/rlpx/rlpx.go:62:19: struct with 296 pointer bytes could be 232\r\n/Users/estensen/Developer/go-ethereum/p2p/rlpx/rlpx.go:371:14: struct with 88 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/p2p/rlpx/rlpx.go:378:21: struct with 120 pointer bytes could be 104\r\n/Users/estensen/Developer/go-ethereum/p2p/rlpx/rlpx.go:390:16: struct with 184 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/p2p/rlpx/rlpx.go:401:17: struct with 112 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/p2p/dial.go:93:20: struct with 320 pointer bytes could be 280\r\n/Users/estensen/Developer/go-ethereum/p2p/dial.go:131:17: struct with 128 pointer bytes could be 80\r\n/Users/estensen/Developer/go-ethereum/p2p/dial.go:464:15: struct with 24 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/p2p/message.go:39:10: struct of size 96 could be 88\r\n/Users/estensen/Developer/go-ethereum/p2p/message.go:122:16: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/p2p/message.go:258:17: struct with 96 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/p2p/peer.go:60:21: struct with 88 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/p2p/peer.go:94:16: struct with 120 pointer bytes could be 88\r\n/Users/estensen/Developer/go-ethereum/p2p/peer.go:106:11: struct with 96 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/p2p/peer.go:438:14: struct with 152 pointer bytes could be 128\r\n/Users/estensen/Developer/go-ethereum/p2p/peer.go:484:15: struct with 136 pointer bytes could be 120\r\n/Users/estensen/Developer/go-ethereum/p2p/peer_error.go:34:16: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/p2p/protocol.go:27:15: struct with 80 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/p2p/server.go:70:13: struct of size 304 could be 296\r\n/Users/estensen/Developer/go-ethereum/p2p/server.go:166:13: struct with 624 pointer bytes could be 592\r\n/Users/estensen/Developer/go-ethereum/p2p/server.go:225:11: struct with 88 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/p2p/server.go:1071:15: struct with 120 pointer bytes could be 96\r\n/Users/estensen/Developer/go-ethereum/p2p/transport.go:48:20: struct with 64 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/p2p/tracker/tracker.go:49:14: struct with 72 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/p2p/tracker/tracker.go:62:14: struct with 48 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/eth/discovery.go:27:15: struct with 24 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/eth/dispatcher.go:43:14: struct with 104 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/eth/dispatcher.go:90:13: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/eth/dispatcher.go:98:15: struct with 96 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/eth/handler.go:129:15: struct with 56 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/eth/peer.go:68:11: struct with 184 pointer bytes could be 136\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/eth/protocol.go:89:19: struct with 24 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/eth/protocol.go:130:30: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/eth/protocol.go:175:27: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/eth/protocol.go:185:30: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/eth/protocol.go:213:29: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/eth/protocol.go:222:26: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/eth/protocol.go:233:29: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/eth/protocol.go:261:26: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/eth/protocol.go:270:23: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/eth/protocol.go:279:26: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/eth/protocol.go:288:23: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/eth/protocol.go:297:26: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/eth/protocol.go:315:36: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/eth/protocol.go:324:33: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/eth/protocol.go:334:36: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/light/lightchain.go:51:17: struct with 472 pointer bytes could be 440\r\n/Users/estensen/Developer/go-ethereum/light/odr.go:56:13: struct with 112 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/light/odr.go:90:18: struct with 40 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/light/odr.go:102:18: struct with 48 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/light/odr.go:114:19: struct with 56 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/light/odr.go:127:22: struct with 64 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/light/odr.go:143:17: struct with 80 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/light/odr.go:161:19: struct with 128 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/light/odr.go:185:15: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/light/postprocess.go:108:14: struct with 40 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/light/postprocess.go:129:24: struct with 120 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/light/postprocess.go:328:30: struct with 112 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/light/txpool.go:52:13: struct with 320 pointer bytes could be 256\r\n/Users/estensen/Developer/go-ethereum/p2p/msgrate/msgrate.go:204:15: struct with 72 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/snap/peer.go:26:11: struct with 64 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/snap/protocol.go:82:25: struct with 40 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/snap/protocol.go:89:18: struct with 40 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/snap/protocol.go:117:29: struct with 96 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/snap/protocol.go:127:26: struct with 40 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/snap/protocol.go:134:18: struct with 40 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/snap/protocol.go:158:25: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/snap/protocol.go:165:22: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/snap/protocol.go:171:25: struct with 48 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/snap/protocol.go:191:22: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/snap/sync.go:131:21: struct with 160 pointer bytes could be 80\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/snap/sync.go:169:22: struct with 120 pointer bytes could be 96\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/snap/sync.go:201:21: struct with 216 pointer bytes could be 128\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/snap/sync.go:247:26: struct with 144 pointer bytes could be 120\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/snap/sync.go:282:26: struct with 120 pointer bytes could be 96\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/snap/sync.go:306:18: struct with 208 pointer bytes could be 120\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/snap/sync.go:331:18: struct with 128 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/eth/protocols/snap/sync.go:419:13: struct with 480 pointer bytes could be 256\r\n/Users/estensen/Developer/go-ethereum/eth/downloader/beaconsync.go:34:23: struct of size 56 could be 48\r\n/Users/estensen/Developer/go-ethereum/eth/downloader/downloader.go:99:17: struct of size 360 could be 352\r\n/Users/estensen/Developer/go-ethereum/eth/downloader/peer.go:45:21: struct with 72 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/eth/downloader/queue.go:54:19: struct with 64 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/eth/downloader/queue.go:63:18: struct with 72 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/eth/downloader/queue.go:111:12: struct of size 272 could be 264\r\n/Users/estensen/Developer/go-ethereum/eth/downloader/skeleton.go:110:17: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/eth/downloader/skeleton.go:125:20: struct with 56 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/eth/downloader/skeleton.go:138:21: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/eth/downloader/skeleton.go:191:15: struct with 216 pointer bytes could be 184\r\n/Users/estensen/Developer/go-ethereum/eth/downloader/statesync.go:79:16: struct with 96 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/eth/gasprice/feehistory.go:48:16: struct with 112 pointer bytes could be 88\r\n/Users/estensen/Developer/go-ethereum/eth/gasprice/feehistory.go:60:20: struct with 40 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/eth/gasprice/feehistory.go:68:17: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/gasprice/feehistory.go:273:18: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/gasprice/gasprice.go:42:13: struct with 56 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/eth/gasprice/gasprice.go:64:13: struct with 144 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/eth/gasprice/gasprice.go:224:14: struct with 40 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/eth/gasprice/gasprice.go:229:15: struct with 32 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/core/beacon/errors.go:26:21: struct with 40 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/core/beacon/gen_ed.go:18:24: struct with 280 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/core/beacon/types.go:46:23: struct with 280 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/core/beacon/types.go:64:31: struct with 96 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/core/beacon/types.go:75:22: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/miner/miner.go:47:13: struct of size 128 could be 112\r\n/Users/estensen/Developer/go-ethereum/miner/miner.go:75:12: struct with 96 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/miner/payload_building.go:61:14: struct with 56 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/miner/unconfirmed.go:49:24: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/miner/worker.go:88:18: struct with 160 pointer bytes could be 112\r\n/Users/estensen/Developer/go-ethereum/miner/worker.go:151:11: struct with 64 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/miner/worker.go:193:13: struct of size 592 could be 584\r\n/Users/estensen/Developer/go-ethereum/internal/flags/flags.go:57:20: struct with 96 pointer bytes could be 88\r\n/Users/estensen/Developer/go-ethereum/internal/flags/flags.go:145:24: struct with 96 pointer bytes could be 88\r\n/Users/estensen/Developer/go-ethereum/internal/flags/flags.go:226:14: struct with 88 pointer bytes could be 80\r\n/Users/estensen/Developer/go-ethereum/metrics/exp/exp.go:16:10: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/internal/debug/api.go:48:15: struct with 64 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/node/config.go:46:13: struct of size 816 could be 800\r\n/Users/estensen/Developer/go-ethereum/node/node.go:44:11: struct with 224 pointer bytes could be 176\r\n/Users/estensen/Developer/go-ethereum/node/rpcstack.go:59:17: struct with 424 pointer bytes could be 352\r\n/Users/estensen/Developer/go-ethereum/node/rpcstack.go:497:16: struct with 64 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/eth/ethconfig/config.go:121:13: struct of size 776 could be 744\r\n/Users/estensen/Developer/go-ethereum/eth/ethconfig/gen_config.go:22:14: struct of size 776 could be 744\r\n/Users/estensen/Developer/go-ethereum/eth/ethconfig/gen_config.go:120:14: struct with 408 pointer bytes could be 392\r\n/Users/estensen/Developer/go-ethereum/eth/fetcher/block_fetcher.go:103:20: struct with 104 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/eth/fetcher/block_fetcher.go:116:23: struct with 64 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/eth/fetcher/block_fetcher.go:124:21: struct with 88 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/eth/fetcher/block_fetcher.go:132:26: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/eth/fetcher/block_fetcher.go:157:19: struct with 224 pointer bytes could be 216\r\n/Users/estensen/Developer/go-ethereum/eth/fetcher/tx_fetcher.go:109:16: struct with 32 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/logger/gen_structlog.go:19:17: struct with 176 pointer bytes could be 112\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/logger/gen_structlog.go:55:17: struct with 120 pointer bytes could be 104\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/logger/logger.go:51:13: struct with 24 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/logger/logger.go:66:16: struct with 152 pointer bytes could be 80\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/logger/logger.go:82:26: struct with 88 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/logger/logger.go:109:19: struct with 144 pointer bytes could be 104\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/logger/logger.go:406:22: struct with 40 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/logger/logger.go:415:19: struct with 88 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/logger/logger_json.go:84:14: struct with 40 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/internal/ethapi/addrlock.go:25:17: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/internal/ethapi/api.go:641:20: struct with 136 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/internal/ethapi/api.go:1272:21: struct with 208 pointer bytes could be 112\r\n/Users/estensen/Developer/go-ethereum/internal/ethapi/api.go:1795:28: struct with 32 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/api.go:186:22: struct with 72 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/api.go:216:23: struct with 48 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/tracker.go:27:19: struct with 80 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/p2p/dnsdisc/client.go:50:13: struct with 80 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/p2p/dnsdisc/client.go:222:21: struct with 104 pointer bytes could be 96\r\n/Users/estensen/Developer/go-ethereum/p2p/dnsdisc/error.go:44:16: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/p2p/dnsdisc/error.go:56:17: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/p2p/dnsdisc/sync.go:33:17: struct with 88 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/p2p/dnsdisc/tree.go:230:12: struct with 48 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/p2p/dnsdisc/tree.go:242:12: struct with 40 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/eth/api.go:299:19: struct with 48 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/eth/api_backend.go:46:20: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/eth/backend.go:66:15: struct with 248 pointer bytes could be 192\r\n/Users/estensen/Developer/go-ethereum/eth/handler.go:79:20: struct with 96 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/eth/handler.go:92:14: struct with 216 pointer bytes could be 152\r\n/Users/estensen/Developer/go-ethereum/eth/peer.go:28:18: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/eth/peerset.go:50:14: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/eth/sync.go:65:18: struct with 64 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/eth/sync.go:75:18: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/eth/catalyst/api.go:82:19: struct with 136 pointer bytes could be 112\r\n/Users/estensen/Developer/go-ethereum/eth/catalyst/queue.go:40:23: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/eth/catalyst/queue.go:106:22: struct with 40 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/contracts/checkpointoracle/contract/oracle.go:284:48: struct with 80 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/contracts/checkpointoracle/contract/oracle.go:351:40: struct with 168 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/ethclient/ethclient.go:104:15: struct with 64 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/contracts/checkpointoracle/oracle.go:34:23: struct with 32 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/checkpointoracle/oracle.go:39:23: struct with 72 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/les/downloader/downloader.go:90:17: struct of size 440 could be 432\r\n/Users/estensen/Developer/go-ethereum/les/downloader/peer.go:48:21: struct with 184 pointer bytes could be 152\r\n/Users/estensen/Developer/go-ethereum/les/downloader/queue.go:55:19: struct with 64 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/les/downloader/queue.go:64:18: struct with 72 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/les/downloader/queue.go:112:12: struct of size 232 could be 224\r\n/Users/estensen/Developer/go-ethereum/les/downloader/statesync.go:35:15: struct of size 104 could be 96\r\n/Users/estensen/Developer/go-ethereum/les/downloader/statesync.go:259:16: struct with 160 pointer bytes could be 96\r\n/Users/estensen/Developer/go-ethereum/les/downloader/statesync.go:283:15: struct with 64 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/les/fetcher/block_fetcher.go:105:20: struct with 104 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/les/fetcher/block_fetcher.go:118:23: struct with 64 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/les/fetcher/block_fetcher.go:126:21: struct with 88 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/les/fetcher/block_fetcher.go:134:26: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/les/fetcher/block_fetcher.go:159:19: struct with 224 pointer bytes could be 216\r\n/Users/estensen/Developer/go-ethereum/les/flowcontrol/control.go:58:17: struct with 104 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/les/flowcontrol/control.go:246:17: struct with 80 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/les/flowcontrol/logger.go:35:15: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/flowcontrol/manager.go:60:20: struct with 168 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/les/utils/exec_queue.go:23:16: struct with 48 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/les/utils/limiter.go:31:14: struct of size 96 could be 88\r\n/Users/estensen/Developer/go-ethereum/les/utils/limiter.go:45:16: struct with 64 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/les/utils/limiter.go:58:19: struct with 32 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/les/vflux/requests.go:49:19: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/vflux/requests.go:88:15: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/p2p/nodestate/nodestate.go:64:19: struct of size 216 could be 208\r\n/Users/estensen/Developer/go-ethereum/p2p/nodestate/nodestate.go:91:8: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/p2p/nodestate/nodestate.go:97:8: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/p2p/nodestate/nodestate.go:113:18: struct with 48 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/p2p/nodestate/nodestate.go:121:8: struct with 40 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/p2p/nodestate/nodestate.go:142:11: struct with 48 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/p2p/nodestate/nodestate.go:151:14: struct with 104 pointer bytes could be 88\r\n/Users/estensen/Developer/go-ethereum/p2p/nodestate/nodestate.go:158:11: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/p2p/nodestate/nodestate.go:163:19: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/p2p/nodestate/nodestate.go:173:18: struct with 24 pointer bytes could be 16\r\n```\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26130/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26130/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1306111252",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26130#issuecomment-1306111252",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26130",
    "id": 1306111252,
    "node_id": "IC_kwDOAOvK985N2a0U",
    "user": {
      "login": "estensen",
      "id": 9142800,
      "node_id": "MDQ6VXNlcjkxNDI4MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9142800?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/estensen",
      "html_url": "https://github.com/estensen",
      "followers_url": "https://api.github.com/users/estensen/followers",
      "following_url": "https://api.github.com/users/estensen/following{/other_user}",
      "gists_url": "https://api.github.com/users/estensen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/estensen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/estensen/subscriptions",
      "organizations_url": "https://api.github.com/users/estensen/orgs",
      "repos_url": "https://api.github.com/users/estensen/repos",
      "events_url": "https://api.github.com/users/estensen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/estensen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-07T19:54:07Z",
    "updated_at": "2022-11-07T19:54:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rest of output\r\n```\r\n/Users/estensen/Developer/go-ethereum/les/vflux/client/fillset.go:31:14: struct with 64 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/les/vflux/client/queueiterator.go:28:20: struct with 64 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/les/vflux/client/requestbasket.go:36:22: struct with 40 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/les/vflux/client/serverpool.go:56:17: struct with 504 pointer bytes could be 184\r\n/Users/estensen/Developer/go-ethereum/les/vflux/client/valuetracker.go:45:23: struct with 624 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/les/vflux/client/valuetracker.go:130:19: struct with 160 pointer bytes could be 136\r\n/Users/estensen/Developer/go-ethereum/les/vflux/client/valuetracker.go:151:24: struct with 40 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/les/vflux/client/valuetracker.go:159:28: struct with 280 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/vflux/client/wrsiterator.go:29:18: struct with 40 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/les/vflux/server/balance.go:95:18: struct with 280 pointer bytes could be 152\r\n/Users/estensen/Developer/go-ethereum/les/vflux/server/balance.go:116:14: struct with 64 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/les/vflux/server/balance.go:177:22: struct with 24 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/vflux/server/balance_tracker.go:45:21: struct with 192 pointer bytes could be 88\r\n/Users/estensen/Developer/go-ethereum/les/vflux/server/clientdb.go:58:13: struct with 96 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/les/vflux/server/clientpool.go:58:17: struct with 104 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/les/vflux/server/prioritypool.go:61:19: struct with 168 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/les/vflux/server/prioritypool.go:85:17: struct of size 96 could be 88\r\n/Users/estensen/Developer/go-ethereum/les/vflux/server/service.go:34:9: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/les/vflux/server/service.go:46:15: struct with 48 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/les/api_backend.go:44:20: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/les/benchmark.go:49:28: struct with 48 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/benchmark.go:83:32: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/benchmark.go:208:21: struct with 64 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/les/client.go:53:20: struct with 352 pointer bytes could be 328\r\n/Users/estensen/Developer/go-ethereum/les/client_handler.go:41:20: struct with 88 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/les/client_handler.go:225:12: struct with 24 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/client_handler.go:257:12: struct with 24 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/client_handler.go:273:12: struct with 24 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/client_handler.go:289:12: struct with 24 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/client_handler.go:305:12: struct with 24 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/client_handler.go:321:12: struct with 48 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/les/client_handler.go:337:12: struct with 24 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/commons.go:49:17: struct with 136 pointer bytes could be 104\r\n/Users/estensen/Developer/go-ethereum/les/commons.go:65:15: struct with 56 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/les/costtracker.go:117:18: struct with 128 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/les/distributor.go:31:25: struct with 96 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/les/distributor.go:64:14: struct with 48 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/les/enr_entry.go:27:15: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/enr_entry.go:36:15: struct with 24 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/fetcher.go:51:14: struct with 64 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/les/fetcher.go:60:15: struct with 72 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/les/fetcher.go:130:19: struct with 160 pointer bytes could be 120\r\n/Users/estensen/Developer/go-ethereum/les/odr.go:100:10: struct with 32 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/les/odr_requests.go:185:15: struct with 64 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/les/odr_requests.go:240:14: struct with 40 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/odr_requests.go:303:20: struct with 24 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/peer.go:121:18: struct of size 192 could be 184\r\n/Users/estensen/Developer/go-ethereum/les/peer.go:168:15: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/les/peer.go:338:17: struct with 432 pointer bytes could be 200\r\n/Users/estensen/Developer/go-ethereum/les/peer.go:420:11: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/les/peer.go:759:17: struct with 392 pointer bytes could be 280\r\n/Users/estensen/Developer/go-ethereum/les/peer.go:862:12: struct with 40 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/les/peer.go:870:12: struct with 24 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/peer.go:1218:20: struct with 192 pointer bytes could be 160\r\n/Users/estensen/Developer/go-ethereum/les/peer.go:1337:16: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/protocol.go:102:27: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/protocol.go:108:20: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/protocol.go:114:24: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/protocol.go:120:22: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/protocol.go:126:32: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/protocol.go:132:19: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/protocol.go:138:24: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/protocol.go:243:19: struct with 64 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/les/protocol.go:283:16: struct with 48 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/pruner.go:30:13: struct with 48 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/les/retrieve.go:35:22: struct with 56 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/les/retrieve.go:48:14: struct of size 136 could be 128\r\n/Users/estensen/Developer/go-ethereum/les/retrieve.go:71:20: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/les/retrieve.go:78:19: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/les/server.go:56:16: struct with 288 pointer bytes could be 216\r\n/Users/estensen/Developer/go-ethereum/les/server_handler.go:62:20: struct with 80 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/les/server_requests.go:51:18: struct with 112 pointer bytes could be 96\r\n/Users/estensen/Developer/go-ethereum/les/servingqueue.go:30:19: struct with 136 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/les/servingqueue.go:55:18: struct with 80 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/les/test_helper.go:579:20: struct with 32 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/les/txrelay.go:29:17: struct with 72 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/ethstats/ethstats.go:85:14: struct with 136 pointer bytes could be 128\r\n/Users/estensen/Developer/go-ethereum/ethstats/ethstats.go:447:15: struct with 128 pointer bytes could be 120\r\n/Users/estensen/Developer/go-ethereum/ethstats/ethstats.go:461:14: struct with 168 pointer bytes could be 160\r\n/Users/estensen/Developer/go-ethereum/ethstats/ethstats.go:569:17: struct with 248 pointer bytes could be 80\r\n/Users/estensen/Developer/go-ethereum/graphql/graphql.go:79:14: struct with 48 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/graphql/graphql.go:171:18: struct with 32 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/graphql/graphql.go:186:18: struct with 56 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/graphql/graphql.go:569:12: struct with 72 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/graphql/service.go:34:13: struct with 40 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/metrics/influxdb/influxdb.go:13:15: struct with 256 pointer bytes could be 240\r\n/Users/estensen/Developer/go-ethereum/metrics/influxdb/influxdbv2.go:14:17: struct with 152 pointer bytes could be 136\r\n/Users/estensen/Developer/go-ethereum/cmd/utils/cmd.go:373:19: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/common/compiler/helpers.go:21:15: struct with 216 pointer bytes could be 208\r\n/Users/estensen/Developer/go-ethereum/common/compiler/solidity.go:27:23: struct with 136 pointer bytes could be 128\r\n/Users/estensen/Developer/go-ethereum/common/compiler/solidity.go:38:23: struct with 136 pointer bytes could be 128\r\n/Users/estensen/Developer/go-ethereum/signer/core/api.go:113:16: struct with 72 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/signer/core/api.go:225:16: struct with 248 pointer bytes could be 240\r\n/Users/estensen/Developer/go-ethereum/signer/core/api.go:236:18: struct with 224 pointer bytes could be 216\r\n/Users/estensen/Developer/go-ethereum/signer/core/api.go:254:14: struct with 96 pointer bytes could be 88\r\n/Users/estensen/Developer/go-ethereum/signer/core/cliui.go:34:20: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/signer/core/gnosis_safe.go:32:19: struct with 432 pointer bytes could be 304\r\n/Users/estensen/Developer/go-ethereum/cmd/clef/main.go:1037:27: struct with 104 pointer bytes could be 96\r\n/Users/estensen/Developer/go-ethereum/internal/utesting/utesting.go:35:11: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/internal/utesting/utesting.go:41:13: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/internal/utesting/utesting.go:267:8: struct with 32 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/cmd/devp2p/internal/ethtest/chain.go:36:12: struct with 216 pointer bytes could be 200\r\n/Users/estensen/Developer/go-ethereum/cmd/devp2p/internal/ethtest/snap.go:114:19: struct with 88 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/cmd/devp2p/internal/ethtest/snap.go:206:20: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/cmd/devp2p/internal/ethtest/snap.go:303:20: struct with 72 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/cmd/devp2p/internal/ethtest/types.go:51:12: struct with 88 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/cmd/devp2p/internal/ethtest/types.go:146:11: struct with 56 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/cmd/devp2p/internal/v4test/discv4tests.go:47:19: struct with 96 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/cmd/devp2p/internal/v4test/discv4tests.go:58:20: struct with 48 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/cmd/devp2p/internal/v5test/framework.go:56:11: struct with 80 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/cmd/devp2p/crawl.go:26:14: struct with 88 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/cmd/devp2p/dnscmd.go:295:18: struct with 88 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/cmd/devp2p/nodeset.go:37:15: struct with 96 pointer bytes could be 80\r\n/Users/estensen/Developer/go-ethereum/cmd/devp2p/nodesetcmd.go:131:18: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/cmd/devp2p/nodesetcmd.go:245:11: struct with 24 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/cmd/ethkey/message.go:86:19: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/core/asm/asm.go:28:26: struct of size 88 could be 80\r\n/Users/estensen/Developer/go-ethereum/core/asm/compiler.go:31:15: struct with 56 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/core/asm/lexer.go:35:12: struct with 24 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/core/asm/lexer.go:84:12: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/tests/block_test_util.go:52:13: struct with 680 pointer bytes could be 640\r\n/Users/estensen/Developer/go-ethereum/tests/block_test_util.go:71:15: struct with 584 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/tests/block_test_util.go:91:25: struct with 72 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/tests/difficulty_test_util.go:32:21: struct with 72 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/tests/difficulty_test_util.go:41:31: struct with 32 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/tests/gen_btheader.go:19:16: struct with 584 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/tests/gen_difficultytest.go:17:22: struct with 72 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/tests/gen_stenv.go:18:13: struct with 72 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/tests/gen_sttransaction.go:18:21: struct with 152 pointer bytes could be 144\r\n/Users/estensen/Developer/go-ethereum/tests/gen_sttransaction.go:51:21: struct with 144 pointer bytes could be 128\r\n/Users/estensen/Developer/go-ethereum/tests/state_test_util.go:59:13: struct with 280 pointer bytes could be 264\r\n/Users/estensen/Developer/go-ethereum/tests/state_test_util.go:67:18: struct with 96 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/tests/state_test_util.go:81:12: struct with 72 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/tests/state_test_util.go:91:22: struct with 72 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/tests/state_test_util.go:103:20: struct with 152 pointer bytes could be 144\r\n/Users/estensen/Developer/go-ethereum/tests/state_test_util.go:116:30: struct with 64 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/tests/transaction_test_util.go:69:29: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/cmd/evm/internal/t8ntool/block.go:40:13: struct with 464 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/cmd/evm/internal/t8ntool/block.go:59:23: struct with 72 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/cmd/evm/internal/t8ntool/block.go:69:14: struct with 120 pointer bytes could be 104\r\n/Users/estensen/Developer/go-ethereum/cmd/evm/internal/t8ntool/execution.go:42:15: struct with 184 pointer bytes could be 152\r\n/Users/estensen/Developer/go-ethereum/cmd/evm/internal/t8ntool/execution.go:49:22: struct with 456 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/cmd/evm/internal/t8ntool/execution.go:68:12: struct with 144 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/cmd/evm/internal/t8ntool/execution.go:86:22: struct with 112 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/cmd/evm/internal/t8ntool/execution.go:101:17: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/cmd/evm/internal/t8ntool/gen_header.go:20:14: struct with 464 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/cmd/evm/internal/t8ntool/gen_stenv.go:18:13: struct with 144 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/cmd/evm/internal/t8ntool/gen_stenv.go:56:13: struct with 136 pointer bytes could be 120\r\n/Users/estensen/Developer/go-ethereum/cmd/evm/internal/t8ntool/transaction.go:47:10: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/cmd/evm/internal/t8ntool/transition.go:57:20: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/cmd/evm/internal/t8ntool/transition.go:79:12: struct with 48 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/core/vm/runtime/runtime.go:34:13: struct with 192 pointer bytes could be 120\r\n/Users/estensen/Developer/go-ethereum/cmd/evm/staterunner.go:43:22: struct with 64 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/cmd/faucet/faucet.go:187:14: struct with 72 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/cmd/faucet/faucet.go:195:13: struct with 208 pointer bytes could be 184\r\n/Users/estensen/Developer/go-ethereum/cmd/faucet/faucet.go:386:11: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/cmd/faucet/faucet.go:425:15: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/internal/jsre/jsre.go:41:11: struct with 64 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/internal/jsre/jsre.go:51:11: struct with 48 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/internal/jsre/jsre.go:57:14: struct with 48 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/console/bridge.go:377:18: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/console/console.go:70:14: struct with 136 pointer bytes could be 120\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/js/goja.go:93:15: struct with 240 pointer bytes could be 208\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/js/goja.go:801:16: struct with 120 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/js/goja.go:875:22: struct with 64 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/js/goja.go:912:14: struct with 96 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/native/4byte.go:49:21: struct with 48 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/native/call.go:39:14: struct with 56 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/native/call.go:45:16: struct with 200 pointer bytes could be 120\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/native/call.go:92:26: struct with 72 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/native/call.go:101:17: struct of size 72 could be 64\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/native/gen_account_json.go:17:15: struct with 48 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/native/gen_callframe_json.go:18:18: struct with 208 pointer bytes could be 136\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/native/gen_callframe_json.go:52:18: struct with 128 pointer bytes could be 112\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/native/prestate.go:41:14: struct with 48 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/eth/tracers/native/prestate.go:57:21: struct with 96 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/cmd/geth/dbcmd.go:632:23: struct with 40 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/cmd/geth/version_check.go:43:15: struct with 176 pointer bytes could be 168\r\n/Users/estensen/Developer/go-ethereum/p2p/simulations/adapters/exec.go:54:18: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/p2p/simulations/adapters/exec.go:136:15: struct with 112 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/p2p/simulations/adapters/exec.go:369:21: struct with 840 pointer bytes could be 832\r\n/Users/estensen/Developer/go-ethereum/p2p/simulations/adapters/exec.go:519:22: struct with 40 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/p2p/simulations/adapters/inproc.go:39:17: struct with 48 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/p2p/simulations/adapters/inproc.go:164:14: struct with 96 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/p2p/simulations/adapters/types.go:80:17: struct of size 272 could be 264\r\n/Users/estensen/Developer/go-ethereum/p2p/simulations/adapters/types.go:137:21: struct with 112 pointer bytes could be 96\r\n/Users/estensen/Developer/go-ethereum/p2p/simulations/events.go:42:12: struct with 88 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/p2p/simulations/http.go:48:13: struct with 24 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/p2p/simulations/http.go:91:20: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/p2p/simulations/network.go:52:14: struct with 256 pointer bytes could be 216\r\n/Users/estensen/Developer/go-ethereum/p2p/simulations/network.go:716:11: struct with 40 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/p2p/simulations/network.go:802:11: struct with 112 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/p2p/simulations/network.go:835:10: struct with 72 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/p2p/simulations/simulation.go:128:18: struct with 32 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/cmd/puppeth/module.go:50:21: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/cmd/puppeth/module.go:65:18: struct with 64 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/cmd/puppeth/module_dashboard.go:601:21: struct with 72 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/cmd/puppeth/module_ethstats.go:111:20: struct with 64 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/cmd/puppeth/module_faucet.go:149:18: struct with 104 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/cmd/puppeth/module_node.go:151:16: struct with 160 pointer bytes could be 120\r\n/Users/estensen/Developer/go-ethereum/cmd/puppeth/ssh.go:38:16: struct with 80 pointer bytes could be 64\r\n/Users/estensen/Developer/go-ethereum/cmd/puppeth/wizard.go:42:13: struct with 72 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/cmd/puppeth/wizard.go:72:13: struct with 104 pointer bytes could be 96\r\n/Users/estensen/Developer/go-ethereum/cmd/puppeth/wizard_netstats.go:182:17: struct with 40 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/ethclient/gethclient/gethclient.go:63:20: struct with 136 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/ethclient/gethclient/gethclient.go:89:21: struct with 136 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/ethclient/gethclient/gethclient.go:219:22: struct with 56 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/ethclient/gethclient/gethclient.go:242:11: struct with 56 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/internal/build/archive.go:108:17: struct with 40 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/internal/build/archive.go:144:21: struct with 48 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/internal/build/env.go:40:18: struct of size 128 could be 120\r\n/Users/estensen/Developer/go-ethereum/internal/cmdtest/test_cmd.go:250:17: struct with 64 pointer bytes could be 32\r\n/Users/estensen/Developer/go-ethereum/internal/testlog/testlog.go:53:17: struct with 40 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/metrics/librato/client.go:61:12: struct with 64 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/metrics/librato/librato.go:24:15: struct with 120 pointer bytes could be 96\r\n/Users/estensen/Developer/go-ethereum/miner/stress/beacon/main.go:91:14: struct with 56 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/miner/stress/beacon/main.go:229:18: struct with 72 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/mobile/bind.go:129:20: struct with 40 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/mobile/geth.go:46:17: struct with 80 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/p2p/simulations/examples/ping-pong.go:91:22: struct with 48 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/rlp/rlpgen/gen.go:159:14: struct with 80 pointer bytes could be 72\r\n/Users/estensen/Developer/go-ethereum/rlp/rlpgen/gen.go:447:18: struct with 48 pointer bytes could be 40\r\n/Users/estensen/Developer/go-ethereum/tests/fuzzers/les/les-fuzzer.go:113:13: struct with 160 pointer bytes could be 128\r\n/Users/estensen/Developer/go-ethereum/tests/fuzzers/rlp/rlp_fuzzer.go:66:9: struct with 32 pointer bytes could be 24\r\n/Users/estensen/Developer/go-ethereum/tests/fuzzers/rlp/rlp_fuzzer.go:76:14: struct with 64 pointer bytes could be 56\r\n/Users/estensen/Developer/go-ethereum/tests/fuzzers/rlp/rlp_fuzzer.go:87:17: struct with 136 pointer bytes could be 120\r\n/Users/estensen/Developer/go-ethereum/tests/fuzzers/snap/fuzz_handler.go:95:14: struct with 16 pointer bytes could be 8\r\n/Users/estensen/Developer/go-ethereum/tests/fuzzers/trie/trie-fuzzer.go:32:19: struct with 72 pointer bytes could be 48\r\n/Users/estensen/Developer/go-ethereum/tests/fuzzers/trie/trie-fuzzer.go:60:17: struct with 32 pointer bytes could be 16\r\n/Users/estensen/Developer/go-ethereum/tests/fuzzers/vflux/clientpool-fuzzer.go:47:13: struct with 2088 pointer bytes could be 2072\r\n/Users/estensen/Developer/go-ethereum/tests/fuzzers/vflux/clientpool-fuzzer.go:56:17: struct with 56 pointer bytes could be 40\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1306111252/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1306684284",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26130#issuecomment-1306684284",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26130",
    "id": 1306684284,
    "node_id": "IC_kwDOAOvK985N4mt8",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-08T06:10:09Z",
    "updated_at": "2022-11-08T06:10:09Z",
    "author_association": "MEMBER",
    "body": "It will require a HUGE refactoring cross the entire codebase. Also I am not sure it's worthwhile, the memory usage difference can be neglected compare with other usage(e.g. cache)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1306684284/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1307245759",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26130#issuecomment-1307245759",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26130",
    "id": 1307245759,
    "node_id": "IC_kwDOAOvK985N6vy_",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-08T13:45:26Z",
    "updated_at": "2022-11-08T13:45:26Z",
    "author_association": "MEMBER",
    "body": "Many of the struct types shown in the tool output are not used in a performance-sensitive context.\r\nAlso, some of these are used in reflect-based encoding/decoding, where field order matters.\r\n\r\nSo I think we can't just run the tool to fix it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1307245759/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1307258127",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26130#issuecomment-1307258127",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26130",
    "id": 1307258127,
    "node_id": "IC_kwDOAOvK985N6y0P",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-08T13:55:12Z",
    "updated_at": "2022-11-08T14:09:01Z",
    "author_association": "MEMBER",
    "body": "This *could be* a worthwhile optimization for structs with many instances. You can find the most used struct types using memsize: start geth with `--pprof` and go to `/memsize`, then scan. It could also be useful to check which structs are allocated most times using the heap profile function. \r\n\r\nHowever, as said before, after finding the most-used structs we'd still need to judge whether their field order can be changed at all.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1307258127/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
