{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17791",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17791/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17791/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17791/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/17791",
  "id": 365198272,
  "node_id": "MDU6SXNzdWUzNjUxOTgyNzI=",
  "number": 17791,
  "title": "Geth is unreasonably reducing the cache size ignoring the command line",
  "user": {
    "login": "stricq",
    "id": 1395862,
    "node_id": "MDQ6VXNlcjEzOTU4NjI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1395862?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stricq",
    "html_url": "https://github.com/stricq",
    "followers_url": "https://api.github.com/users/stricq/followers",
    "following_url": "https://api.github.com/users/stricq/following{/other_user}",
    "gists_url": "https://api.github.com/users/stricq/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stricq/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stricq/subscriptions",
    "organizations_url": "https://api.github.com/users/stricq/orgs",
    "repos_url": "https://api.github.com/users/stricq/repos",
    "events_url": "https://api.github.com/users/stricq/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stricq/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1132689577,
      "node_id": "MDU6TGFiZWwxMTMyNjg5NTc3",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:triage",
      "name": "status:triage",
      "color": "6be514",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2018-09-30T06:48:09Z",
  "updated_at": "2021-01-16T19:41:43Z",
  "closed_at": "2019-12-05T10:14:37Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "\r\n#### System information\r\n\r\nGeth version: 1.8.15-stable\r\nOS & Version: Windows 10 16G RAM\r\n\r\n#### Expected behaviour\r\nGeth should respect the amount of cache provided on the command line.\r\n\r\n\r\n#### Actual behaviour\r\nGeth is unreasonably reducing the cache size even though there is more than enough RAM on the PC.\r\n\r\nWARN [09-30|00:36:17.286] Sanitizing cache to Go's GC limits       provided=8192 updated=5461\r\n\r\n\r\n#### Steps to reproduce the behaviour\r\nAdd a cache size on the command line at least 8192.  Notice Geth drops the size regardless of available free RAM on the machine.\r\n\r\nAlso, in previous versions I saw Geth running perfectly fine when specifying a cache as large as 32768 (a different PC), now it won't go any larger than 5461.\r\n\r\nWith the larger cache size, Geth was always able to sync and keep up with the current block chain.  Now that it won't go any larger than 5461, it cannot keep up and falls farther and farther behind.  The blockchain builds faster than Geth can sync.\r\n",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17791/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17791/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/443654982",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17791#issuecomment-443654982",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17791",
    "id": 443654982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzY1NDk4Mg==",
    "user": {
      "login": "FreekPaans",
      "id": 3660777,
      "node_id": "MDQ6VXNlcjM2NjA3Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3660777?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FreekPaans",
      "html_url": "https://github.com/FreekPaans",
      "followers_url": "https://api.github.com/users/FreekPaans/followers",
      "following_url": "https://api.github.com/users/FreekPaans/following{/other_user}",
      "gists_url": "https://api.github.com/users/FreekPaans/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FreekPaans/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FreekPaans/subscriptions",
      "organizations_url": "https://api.github.com/users/FreekPaans/orgs",
      "repos_url": "https://api.github.com/users/FreekPaans/repos",
      "events_url": "https://api.github.com/users/FreekPaans/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FreekPaans/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-03T10:06:26Z",
    "updated_at": "2018-12-03T10:06:26Z",
    "author_association": "NONE",
    "body": "This seems to be related to https://github.com/ethereum/go-ethereum/pull/16800.\r\n\r\nHowever, I think geth is a bit too conservative now, which results in memory going to waste on my machines. It would be nice if we could tune this a little bit.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/443654982/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/454161932",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17791#issuecomment-454161932",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17791",
    "id": 454161932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDE2MTkzMg==",
    "user": {
      "login": "xakepp35",
      "id": 10540956,
      "node_id": "MDQ6VXNlcjEwNTQwOTU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/10540956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xakepp35",
      "html_url": "https://github.com/xakepp35",
      "followers_url": "https://api.github.com/users/xakepp35/followers",
      "following_url": "https://api.github.com/users/xakepp35/following{/other_user}",
      "gists_url": "https://api.github.com/users/xakepp35/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xakepp35/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xakepp35/subscriptions",
      "organizations_url": "https://api.github.com/users/xakepp35/orgs",
      "repos_url": "https://api.github.com/users/xakepp35/repos",
      "events_url": "https://api.github.com/users/xakepp35/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xakepp35/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-14T21:08:30Z",
    "updated_at": "2019-01-14T21:10:38Z",
    "author_association": "NONE",
    "body": "Confirming.\r\n\r\nI have 48gb ram and geth 1.9.0 testing build.\r\nI've tried to allocate 32gb, got error message:\r\n\r\n`Sanitizing cache to Go's GC limits       provided=32768 updated=16381`\r\n\r\n_Blockchain is sized more than 150gb as per today (164 641 936 292 bytes)\r\nSo everything below this limit could be considered sane and not required additional \"sanitizing\", especially if i paid for ram-backed blockchain and \"fat\" optics channel!\r\nRewrite your old crap to modern, speedy and limitless C++. its 2019s, guys! (Actually thinking on how to get rid of GO/Java/JS/.NET in favor of speed, enerhy and memory efficiency - its BACKEND, and BACKEND MUST be written and tuned in assembly, but not on \"[qbasic](https://en.wikipedia.org/wiki/QBasic)\"-like slow, inefficient interpreter stuff! :) :)_",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/454161932/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/562062882",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17791#issuecomment-562062882",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17791",
    "id": 562062882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjA2Mjg4Mg==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-05T10:13:54Z",
    "updated_at": "2019-12-05T10:13:54Z",
    "author_association": "MEMBER",
    "body": "Setting the cache allowance near half your available memory causes problems, due to how the golang memory allocation and garbage collection works.  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/562062882/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/562063167",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17791#issuecomment-562063167",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17791",
    "id": 562063167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjA2MzE2Nw==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-05T10:14:37Z",
    "updated_at": "2019-12-05T10:14:37Z",
    "author_association": "MEMBER",
    "body": "So, in other words, it's not \"unreasonably reducing the cache size\" -- the reason is, that otherwise nodes get hit by OOM.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/562063167/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/562096575",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17791#issuecomment-562096575",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17791",
    "id": 562096575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjA5NjU3NQ==",
    "user": {
      "login": "FreekPaans",
      "id": 3660777,
      "node_id": "MDQ6VXNlcjM2NjA3Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3660777?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FreekPaans",
      "html_url": "https://github.com/FreekPaans",
      "followers_url": "https://api.github.com/users/FreekPaans/followers",
      "following_url": "https://api.github.com/users/FreekPaans/following{/other_user}",
      "gists_url": "https://api.github.com/users/FreekPaans/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FreekPaans/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FreekPaans/subscriptions",
      "organizations_url": "https://api.github.com/users/FreekPaans/orgs",
      "repos_url": "https://api.github.com/users/FreekPaans/repos",
      "events_url": "https://api.github.com/users/FreekPaans/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FreekPaans/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-05T11:50:27Z",
    "updated_at": "2019-12-05T11:50:27Z",
    "author_association": "NONE",
    "body": "> Setting the cache allowance near half your available memory causes problems, due to how the golang memory allocation and garbage collection works.\r\n\r\nMaybe this can be documented a bit so people don't run into this or have questions about this. I personally don't know \"how the golang memory allocation and garbage collection works\", all I see is unused memory on my nodes.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/562096575/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/562119010",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17791#issuecomment-562119010",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17791",
    "id": 562119010,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjExOTAxMA==",
    "user": {
      "login": "stricq",
      "id": 1395862,
      "node_id": "MDQ6VXNlcjEzOTU4NjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1395862?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stricq",
      "html_url": "https://github.com/stricq",
      "followers_url": "https://api.github.com/users/stricq/followers",
      "following_url": "https://api.github.com/users/stricq/following{/other_user}",
      "gists_url": "https://api.github.com/users/stricq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stricq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stricq/subscriptions",
      "organizations_url": "https://api.github.com/users/stricq/orgs",
      "repos_url": "https://api.github.com/users/stricq/repos",
      "events_url": "https://api.github.com/users/stricq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stricq/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-05T12:59:50Z",
    "updated_at": "2019-12-05T13:02:31Z",
    "author_association": "NONE",
    "body": "In my case I wasn't even setting it to 1/4 of available RAM and it still reduced it.  Your \"answer\" does not address the question.  It's a moot point anyway, I stopped running geth when this issue popped up and I don't plan on using it ever again.  Because of this issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/562119010/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/761315061",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17791#issuecomment-761315061",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17791",
    "id": 761315061,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MTMxNTA2MQ==",
    "user": {
      "login": "nuliknol",
      "id": 1125368,
      "node_id": "MDQ6VXNlcjExMjUzNjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1125368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nuliknol",
      "html_url": "https://github.com/nuliknol",
      "followers_url": "https://api.github.com/users/nuliknol/followers",
      "following_url": "https://api.github.com/users/nuliknol/following{/other_user}",
      "gists_url": "https://api.github.com/users/nuliknol/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nuliknol/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nuliknol/subscriptions",
      "organizations_url": "https://api.github.com/users/nuliknol/orgs",
      "repos_url": "https://api.github.com/users/nuliknol/repos",
      "events_url": "https://api.github.com/users/nuliknol/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nuliknol/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-16T03:35:30Z",
    "updated_at": "2021-01-16T03:35:30Z",
    "author_association": "NONE",
    "body": "> In my case I wasn't even setting it to 1/4 of available RAM and it still reduced it. Your \"answer\" does not address the question. It's a moot point anyway, I stopped running geth when this issue popped up and I don't plan on using it ever again. Because of this issue.\r\n\r\nhmmm, yeah. Unbelievable waste of resources despite living in 21 century. I have ordered 128Gigs of RAM for my development archival node, and now I am going to waste 64 gigs of ram because Golang doubles memory by its garbage collector!!! The only solution that comes to mind is that I could use RAM disk to cache the data on disk. I have no words. If a gas station would would trow away half of the gas while dispatching it to the cars it would go out of business immediately, but here in IT industry we can throw away hardware left and right like nothing happened.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/761315061/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/761537276",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17791#issuecomment-761537276",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17791",
    "id": 761537276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MTUzNzI3Ng==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-16T10:00:59Z",
    "updated_at": "2021-01-16T10:00:59Z",
    "author_association": "MEMBER",
    "body": "> going to waste 64 gigs of ram because Golang doubles memory by its garbage collector!!! The only solution that comes to mind is that I could use RAM disk to cache the data on disk\r\n\r\nThat's not how it works. Just because geth doesn't immediately allocate / lay claim to the entire memory bank, it doesn't mean that the rest sits idle. What happens is that the remainder is left for the OS to use wherever is needed. \r\n\r\nSince geth is a very IO-heavy process, a lot of that extra memory will be used for file system caches, making it so that geth doesn't actually have to touch disk very often at all, neither for read nor write. It's even been voiced that app-layer caches should be avoided, in preference of OS-level file system caching. \r\n\r\n> Unbelievable waste of resources despite living in 21 century.\r\n\r\nAye, but back in the 16th century, they didn't have the finer points of mark-and-sweep GC figured out yet, so cut them some slack :) ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/761537276/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/761621489",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17791#issuecomment-761621489",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17791",
    "id": 761621489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MTYyMTQ4OQ==",
    "user": {
      "login": "nuliknol",
      "id": 1125368,
      "node_id": "MDQ6VXNlcjExMjUzNjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1125368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nuliknol",
      "html_url": "https://github.com/nuliknol",
      "followers_url": "https://api.github.com/users/nuliknol/followers",
      "following_url": "https://api.github.com/users/nuliknol/following{/other_user}",
      "gists_url": "https://api.github.com/users/nuliknol/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nuliknol/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nuliknol/subscriptions",
      "organizations_url": "https://api.github.com/users/nuliknol/orgs",
      "repos_url": "https://api.github.com/users/nuliknol/repos",
      "events_url": "https://api.github.com/users/nuliknol/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nuliknol/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-16T19:41:05Z",
    "updated_at": "2021-01-16T19:41:43Z",
    "author_association": "NONE",
    "body": "@holiman \r\n\r\n> That's not how it works. Just because geth doesn't immediately allocate / lay claim to the entire memory bank, it doesn't mean that the rest sits idle. What happens is that the remainder is left for the OS to use wherever is needed.\r\n> \r\n\r\nhmm , that's interesting! So, do you think anything will break if I just comment this code line out in `cmd/geth/main.go` ? Something is telling me that I have to try it.  I mean, if it starts swapping memory to disk in and out I am going to see it immediately in `iostat` so, no worries. I will just restart with lower limit.\r\n\r\n>  in preference of OS-level file system caching.\r\n\r\nbut we don't need that, we need trie caching, not disk block caching. Disk block is 4k bytes, a state object should be under 256 bytes so, its a big difference in memory usage where to cache 4k objects or 256 byte objects.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/761621489/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
