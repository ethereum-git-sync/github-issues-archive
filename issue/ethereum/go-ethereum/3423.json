{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3423",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3423/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3423/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3423/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/3423",
  "id": 194829880,
  "node_id": "MDU6SXNzdWUxOTQ4Mjk4ODA=",
  "number": 3423,
  "title": "Nearly instant full node start by using the light client as a fallback during sync",
  "user": {
    "login": "adridadou",
    "id": 381065,
    "node_id": "MDQ6VXNlcjM4MTA2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/381065?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/adridadou",
    "html_url": "https://github.com/adridadou",
    "followers_url": "https://api.github.com/users/adridadou/followers",
    "following_url": "https://api.github.com/users/adridadou/following{/other_user}",
    "gists_url": "https://api.github.com/users/adridadou/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/adridadou/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/adridadou/subscriptions",
    "organizations_url": "https://api.github.com/users/adridadou/orgs",
    "repos_url": "https://api.github.com/users/adridadou/repos",
    "events_url": "https://api.github.com/users/adridadou/events{/privacy}",
    "received_events_url": "https://api.github.com/users/adridadou/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 856638432,
      "node_id": "MDU6TGFiZWw4NTY2Mzg0MzI=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:inactive",
      "name": "status:inactive",
      "color": "ffffff",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2016-12-11T12:41:55Z",
  "updated_at": "2018-04-16T14:37:22Z",
  "closed_at": "2018-04-16T14:37:22Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### Problem to solve\r\nToday whether you need to synchronize from scratch or if you need to update the local blockchain, the sync time can take 20,30 min even 1h to be ready. \r\n\r\nLight client is the promise to have a very fast boot time but because loading the information is done lazily, this can affect the performance of the node. \r\n\r\nThis means that sometimes, you would like to use a full node but the only reason not to use it is the boot time, we want (nearly) instant boot time. \r\n\r\n#### Proposed solution\r\nWe have two distinctive ways to connect to a network, the \"Normal\" node and the light client.\r\nWhat about booting having a mode that works as follow:\r\n1. We start both the light client and the normal node\r\n2. If we want to access the EVM, the node uses the full node if it is ready or the light client otherwise\r\n\r\n#### Advantage\r\nSome critics have been raised regarding the warp sync of parity. The main drawback of this approach is that it is possible to make a node believe that the actual longest chain is not the best chain by lying on the total difficulty. \r\n\r\nIf we combine the light network & the full node, we can have near instant availability without compromising on the security of the node. \r\n\r\nWild idea: I think that it could even help if we have another DOS attack. This two layers approach could make it possible to support the full node if he has difficulties synchronizing. People who could not sync anymore because their hardware is not powerful enough could automatically switch to the light client in the meantime and therefore make the network available even with problematic transactions. This wouldn't remove the need to resolve such an issue but it could mitigate the impact, at least on the short term. \r\n\r\n#### Open questions\r\nI am not knowledgable enough in how the nodes work today to evaluate how complicated it is to implement but at a first glance it seems pretty simple as I could imagine something:\r\nif(full.isSynced) {\r\n    /// use the full node RPC\r\n} else {\r\n   /// use the light client node RPC\r\n}\r\n\r\n",
  "closed_by": {
    "login": "stale[bot]",
    "id": 26384082,
    "node_id": "MDM6Qm90MjYzODQwODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stale%5Bbot%5D",
    "html_url": "https://github.com/apps/stale",
    "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3423/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3423/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/370423028",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/3423#issuecomment-370423028",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3423",
    "id": 370423028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDQyMzAyOA==",
    "user": {
      "login": "stale[bot]",
      "id": 26384082,
      "node_id": "MDM6Qm90MjYzODQwODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stale%5Bbot%5D",
      "html_url": "https://github.com/apps/stale",
      "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-03-05T13:44:49Z",
    "updated_at": "2018-03-05T13:44:49Z",
    "author_association": "NONE",
    "body": "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/370423028/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
