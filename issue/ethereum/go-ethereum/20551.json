{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20551",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20551/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20551/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20551/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/20551",
  "id": 549387834,
  "node_id": "MDU6SXNzdWU1NDkzODc4MzQ=",
  "number": 20551,
  "title": "Invalid input length for hex data",
  "user": {
    "login": "BattleBird",
    "id": 13298978,
    "node_id": "MDQ6VXNlcjEzMjk4OTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/13298978?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/BattleBird",
    "html_url": "https://github.com/BattleBird",
    "followers_url": "https://api.github.com/users/BattleBird/followers",
    "following_url": "https://api.github.com/users/BattleBird/following{/other_user}",
    "gists_url": "https://api.github.com/users/BattleBird/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/BattleBird/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/BattleBird/subscriptions",
    "organizations_url": "https://api.github.com/users/BattleBird/orgs",
    "repos_url": "https://api.github.com/users/BattleBird/repos",
    "events_url": "https://api.github.com/users/BattleBird/events{/privacy}",
    "received_events_url": "https://api.github.com/users/BattleBird/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2020-01-14T07:37:27Z",
  "updated_at": "2020-01-15T12:34:10Z",
  "closed_at": "2020-01-15T12:34:09Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hi there,\r\n#### System information\r\n\r\nGeth version: `the latest`\r\nOS & Version: Ubuntu16.04\r\nCommit hash : (if `develop`)\r\n\r\n#### Expected behaviour\r\n\r\n\r\n#### Actual behaviour\r\nInvalid input length for hex data (6793)\r\n\r\n#### Steps to reproduce the behaviour\r\nimport subprocess\r\nretcodegeth = subprocess.call(\r\n        \"./benchmarkEVMs/evm --debug --json --code \" + \"6080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100b6578063095ea7b31461014657806318160ddd146101ab57806323b872dd146101d6578063313ce5671461025b57806370a082311461028c5780638da5cb5b146102e357806395d89b411461033a578063a9059cbb146103ca578063dd62ed3e1461042f575b3480156100b057600080fd5b50600080fd5b3480156100c257600080fd5b5061053c6104a6565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561010b5780820151818401526020810190506100f0565b50505050905090810190601f1680156101385780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015257600080fd5b50610191600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610544565b604051808215151515815260200191505060405180910390f35b3480156101b757600080fd5b506101c0610683565b6040518082815260200191505060405180910390f35b3480156101e257600080fd5b50610241600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610689565b604051808215151515815260200191505060405180910390f35b34801561026757600080fd5b50610270610982565b604051808260ff1660ff16815260200191505060405180910390f35b34801561029857600080fd5b506102cd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610995565b6040518082815260200191505060405180910390f35b3480156102ef57600080fd5b506102f86109dd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561034657600080fd5b5061034f610a03565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561038f578082015181840152602081019050610374565b50505050905090810190601f1680156103bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103d657600080fd5b50610415600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aa1565b604051808215151515815260200191505060405180910390f35b34801561043b57600080fd5b50610490600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c91565b6040518082815260200191505060405180910390f35b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156100cb5780601f10610511576101008083540402835291602001916100cb565b820191906000526020600020905b81548152906001019060200180831161051f57829003601f168201915b505050505081565b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561059357600080fd5b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60055481565b6000816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515156106d857600080fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011015151561076557600080fd5b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156107f057600080fd5b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555081600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600460009054906101000a900460ff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a995780601f10610a6e57610100808354040283529160200191610a99565b820191906000526020600020905b815481529060010190602001808311610a7c57829003601f168201915b505050505081565b60008082111515610ab157600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610afe57600080fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401111515610b8a57600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050929150505600a165627a7a72305820a1b27853ca83886f163f898c7e320edd56454c0ce047a6ee725847bf08619c7f30029\"\r\n        + \" --input \" + \"06fdde03\" + \" run > gethout.json 2>&1\",timeout=60,shell=True)\r\n        print(retcodegeth)\r\n\r\n\r\n#### Backtrace\r\nWhat is the meaning of the invalid input length? Why the input length should be even? May odd input length cause some security bugs? Thanks for your explanations:)\r\n",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20551/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20551/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/574047020",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20551#issuecomment-574047020",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20551",
    "id": 574047020,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NDA0NzAyMA==",
    "user": {
      "login": "BattleBird",
      "id": 13298978,
      "node_id": "MDQ6VXNlcjEzMjk4OTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/13298978?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BattleBird",
      "html_url": "https://github.com/BattleBird",
      "followers_url": "https://api.github.com/users/BattleBird/followers",
      "following_url": "https://api.github.com/users/BattleBird/following{/other_user}",
      "gists_url": "https://api.github.com/users/BattleBird/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BattleBird/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BattleBird/subscriptions",
      "organizations_url": "https://api.github.com/users/BattleBird/orgs",
      "repos_url": "https://api.github.com/users/BattleBird/repos",
      "events_url": "https://api.github.com/users/BattleBird/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BattleBird/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-14T07:45:22Z",
    "updated_at": "2020-01-14T07:45:22Z",
    "author_association": "NONE",
    "body": "BTW, when I test the bytecode in the runtime_test.go(/vm/runtime), the result is:\r\n\r\n[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 32 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\r\n\r\nThe ### **Execute function** don't refuse the odd length input\r\n\r\nsteps to reproduce the result:\r\n/* runtime_test.go  */\r\nfunc TestExecute2(t *testing.T) {\r\n\tvar code = common.Hex2Bytes(\"6080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100b6578063095ea7b31461014657806318160ddd146101ab57806323b872dd146101d6578063313ce5671461025b57806370a082311461028c5780638da5cb5b146102e357806395d89b411461033a578063a9059cbb146103ca578063dd62ed3e1461042f575b3480156100b057600080fd5b50600080fd5b3480156100c257600080fd5b5061053c6104a6565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561010b5780820151818401526020810190506100f0565b50505050905090810190601f1680156101385780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015257600080fd5b50610191600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610544565b604051808215151515815260200191505060405180910390f35b3480156101b757600080fd5b506101c0610683565b6040518082815260200191505060405180910390f35b3480156101e257600080fd5b50610241600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610689565b604051808215151515815260200191505060405180910390f35b34801561026757600080fd5b50610270610982565b604051808260ff1660ff16815260200191505060405180910390f35b34801561029857600080fd5b506102cd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610995565b6040518082815260200191505060405180910390f35b3480156102ef57600080fd5b506102f86109dd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561034657600080fd5b5061034f610a03565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561038f578082015181840152602081019050610374565b50505050905090810190601f1680156103bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103d657600080fd5b50610415600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aa1565b604051808215151515815260200191505060405180910390f35b34801561043b57600080fd5b50610490600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c91565b6040518082815260200191505060405180910390f35b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156100cb5780601f10610511576101008083540402835291602001916100cb565b820191906000526020600020905b81548152906001019060200180831161051f57829003601f168201915b505050505081565b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561059357600080fd5b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60055481565b6000816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515156106d857600080fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011015151561076557600080fd5b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156107f057600080fd5b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555081600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600460009054906101000a900460ff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a995780601f10610a6e57610100808354040283529160200191610a99565b820191906000526020600020905b815481529060010190602001808311610a7c57829003601f168201915b505050505081565b60008082111515610ab157600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610afe57600080fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401111515610b8a57600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050929150505600a165627a7a72305820a1b27853ca83886f163f898c7e320edd56454c0ce047a6ee725847bf08619c7f30029\")\r\n\tvar sigName = \"06fdde03\"\r\n\tvar input = common.Hex2Bytes(sigName)\r\n\tret, _, error := Execute(code, input, nil)\r\n\tfmt.Println(ret)\r\n\tif error != nil {\r\n\t\tfmt.Println(error)\r\n\t}\r\n}",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/574047020/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/574640341",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20551#issuecomment-574640341",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20551",
    "id": 574640341,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NDY0MDM0MQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-15T12:34:09Z",
    "updated_at": "2020-01-15T12:34:09Z",
    "author_association": "MEMBER",
    "body": "An odd number of hex digits cannot represent a *binary blob*, because 1 hex character is half a byte. Off hex digits are only allowed for *numbers*, because there `0` prefix is meaningless.\r\n\r\nThe `common` hex operations are legacy crap mostly that we haven't cleaned up fully yet. Use `hexutil` within `common/hexutil` to get the proper behavior.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/574640341/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
