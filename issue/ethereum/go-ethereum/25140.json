{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25140",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25140/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25140/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25140/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/25140",
  "id": 1278096858,
  "node_id": "I_kwDOAOvK985MLjXa",
  "number": 25140,
  "title": "abiv2---abi: cannot unmarshal *big.Int in to *big.Int",
  "user": {
    "login": "jiaohu",
    "id": 13608671,
    "node_id": "MDQ6VXNlcjEzNjA4Njcx",
    "avatar_url": "https://avatars.githubusercontent.com/u/13608671?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jiaohu",
    "html_url": "https://github.com/jiaohu",
    "followers_url": "https://api.github.com/users/jiaohu/followers",
    "following_url": "https://api.github.com/users/jiaohu/following{/other_user}",
    "gists_url": "https://api.github.com/users/jiaohu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jiaohu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jiaohu/subscriptions",
    "organizations_url": "https://api.github.com/users/jiaohu/orgs",
    "repos_url": "https://api.github.com/users/jiaohu/repos",
    "events_url": "https://api.github.com/users/jiaohu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jiaohu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 268304226,
      "node_id": "MDU6TGFiZWwyNjgzMDQyMjY=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:docs",
      "name": "type:docs",
      "color": "fef2c0",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-06-21T08:35:08Z",
  "updated_at": "2022-06-23T03:35:27Z",
  "closed_at": "2022-06-23T03:35:26Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Here is a demo contract to use abiv2\r\n```solidity\r\n// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >0.7.4;\r\npragma abicoder v2;\r\n\r\ncontract Test {\r\n    struct T {uint x; uint y;}\r\n    struct S {uint a; uint[] b; T[] c;}\r\n\r\n    \r\n\r\n    event Event(S ss, T tt, uint uu);\r\n\r\n    function f(S memory ss, T memory tt, uint uu) public returns (S memory, T memory, uint){\r\n        emit Event(ss, tt, uu);\r\n        return (ss, tt, uu);\r\n    }\r\n\r\n    function g() public pure returns (S memory, T memory, uint) {\r\n    }\r\n}\r\n```\r\nthe unit test as below\r\n\r\n```golang\r\nfunc TestName(t *testing.T) {\r\n\tretData := \"0xr\n\tabiStr := \"[{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"components\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"a\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256[]\\\",\\\"name\\\":\\\"b\\\",\\\"type\\\":\\\"uint256[]\\\"},{\\\"components\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"x\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"y\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"internalType\\\":\\\"struct Test.T[]\\\",\\\"name\\\":\\\"c\\\",\\\"type\\\":\\\"tuple[]\\\"}],\\\"indexed\\\":false,\\\"internalType\\\":\\\"struct Test.S\\\",\\\"name\\\":\\\"ss\\\",\\\"type\\\":\\\"tuple\\\"},{\\\"components\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"x\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"y\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"indexed\\\":false,\\\"internalType\\\":\\\"struct Test.T\\\",\\\"name\\\":\\\"tt\\\",\\\"type\\\":\\\"tuple\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"uu\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"Event\\\",\\\"type\\\":\\\"event\\\"},{\\\"inputs\\\":[{\\\"components\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"a\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256[]\\\",\\\"name\\\":\\\"b\\\",\\\"type\\\":\\\"uint256[]\\\"},{\\\"components\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"x\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"y\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"internalType\\\":\\\"struct Test.T[]\\\",\\\"name\\\":\\\"c\\\",\\\"type\\\":\\\"tuple[]\\\"}],\\\"internalType\\\":\\\"struct Test.S\\\",\\\"name\\\":\\\"ss\\\",\\\"type\\\":\\\"tuple\\\"},{\\\"components\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"x\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"y\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"internalType\\\":\\\"struct Test.T\\\",\\\"name\\\":\\\"tt\\\",\\\"type\\\":\\\"tuple\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"uu\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"f\\\",\\\"outputs\\\":[{\\\"components\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"a\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256[]\\\",\\\"name\\\":\\\"b\\\",\\\"type\\\":\\\"uint256[]\\\"},{\\\"components\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"x\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"y\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"internalType\\\":\\\"struct Test.T[]\\\",\\\"name\\\":\\\"c\\\",\\\"type\\\":\\\"tuple[]\\\"}],\\\"internalType\\\":\\\"struct Test.S\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"tuple\\\"},{\\\"components\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"x\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"y\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"internalType\\\":\\\"struct Test.T\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"tuple\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"g\\\",\\\"outputs\\\":[{\\\"components\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"a\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256[]\\\",\\\"name\\\":\\\"b\\\",\\\"type\\\":\\\"uint256[]\\\"},{\\\"components\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"x\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"y\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"internalType\\\":\\\"struct Test.T[]\\\",\\\"name\\\":\\\"c\\\",\\\"type\\\":\\\"tuple[]\\\"}],\\\"internalType\\\":\\\"struct Test.S\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"tuple\\\"},{\\\"components\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"x\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"y\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"internalType\\\":\\\"struct Test.T\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"tuple\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"pure\\\",\\\"type\\\":\\\"function\\\"}]\"\r\n\thandler, err := JSON(strings.NewReader(abiStr))\r\n\tassert.Nil(t, err)\r\n\ttype T struct {\r\n\t\tx *big.Int\r\n\t\ty *big.Int\r\n\t}\r\n\r\n\ttype S struct {\r\n\t\ta *big.Int\r\n\t\tb []*big.Int\r\n\t\tc []T\r\n\t}\r\n\tvar p0 = new(S)\r\n\tvar p1 = new(T)\r\n\tvar p2 = new(big.Int)\r\n\ttestV := []interface{}{p0, p1, p2}\r\n\r\n\terr = handler.UnpackIntoInterface(&testV, \"g\", common.FromHex(retData))\r\n\tif err != nil {\r\n\t\tt.Error(err)\r\n\t\treturn\r\n\t}\r\n}\r\n```\r\nthen I get an ERROR\r\n```\r\nabi: cannot unmarshal *big.Int in to *big.Int\r\n```\r\n\r\nso is there any problem in the demo? TKS for your reply!",
  "closed_by": {
    "login": "rjl493456442",
    "id": 5959481,
    "node_id": "MDQ6VXNlcjU5NTk0ODE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rjl493456442",
    "html_url": "https://github.com/rjl493456442",
    "followers_url": "https://api.github.com/users/rjl493456442/followers",
    "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
    "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
    "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
    "repos_url": "https://api.github.com/users/rjl493456442/repos",
    "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25140/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25140/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1163191143",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25140#issuecomment-1163191143",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25140",
    "id": 1163191143,
    "node_id": "IC_kwDOAOvK985FVONn",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-22T14:39:28Z",
    "updated_at": "2022-06-22T14:39:28Z",
    "author_association": "MEMBER",
    "body": "We have a tool called `abigen`, it can generate the go binding so that you can interact with your contract easily. I strongly recommend you to take this approach.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1163191143/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1163884943",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25140#issuecomment-1163884943",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25140",
    "id": 1163884943,
    "node_id": "IC_kwDOAOvK985FX3mP",
    "user": {
      "login": "jiaohu",
      "id": 13608671,
      "node_id": "MDQ6VXNlcjEzNjA4Njcx",
      "avatar_url": "https://avatars.githubusercontent.com/u/13608671?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jiaohu",
      "html_url": "https://github.com/jiaohu",
      "followers_url": "https://api.github.com/users/jiaohu/followers",
      "following_url": "https://api.github.com/users/jiaohu/following{/other_user}",
      "gists_url": "https://api.github.com/users/jiaohu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jiaohu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jiaohu/subscriptions",
      "organizations_url": "https://api.github.com/users/jiaohu/orgs",
      "repos_url": "https://api.github.com/users/jiaohu/repos",
      "events_url": "https://api.github.com/users/jiaohu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jiaohu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-23T03:30:02Z",
    "updated_at": "2022-06-23T03:30:02Z",
    "author_association": "NONE",
    "body": "> We have a tool called `abigen`, it can generate the go binding so that you can interact with your contract easily. I strongly recommend you to take this approach.\r\n\r\nthanks for your answer! I got it!👍",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1163884943/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1163887311",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25140#issuecomment-1163887311",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25140",
    "id": 1163887311,
    "node_id": "IC_kwDOAOvK985FX4LP",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-23T03:35:26Z",
    "updated_at": "2022-06-23T03:35:26Z",
    "author_association": "MEMBER",
    "body": "Check more details in this doc https://github.com/ethereum/go-ethereum/blob/gh-pages/docs/_dapp/native-bindings.md,\r\nsome content can be stale, but I think it should be enough for you at the moment.\r\n\r\nClose it now, feel free to reopen in case encountering any other issues.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1163887311/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
