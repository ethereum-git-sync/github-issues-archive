{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26984",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26984/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26984/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26984/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/26984",
  "id": 1640950410,
  "node_id": "I_kwDOAOvK985hzuqK",
  "number": 26984,
  "title": "graphql: can't get account's block based tranaction",
  "user": {
    "login": "jsvisa",
    "id": 3627395,
    "node_id": "MDQ6VXNlcjM2MjczOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3627395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jsvisa",
    "html_url": "https://github.com/jsvisa",
    "followers_url": "https://api.github.com/users/jsvisa/followers",
    "following_url": "https://api.github.com/users/jsvisa/following{/other_user}",
    "gists_url": "https://api.github.com/users/jsvisa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jsvisa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jsvisa/subscriptions",
    "organizations_url": "https://api.github.com/users/jsvisa/orgs",
    "repos_url": "https://api.github.com/users/jsvisa/repos",
    "events_url": "https://api.github.com/users/jsvisa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jsvisa/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-03-26T15:11:05Z",
  "updated_at": "2023-03-30T08:40:48Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: `latest`\r\n\r\n\r\n#### Expected behaviour\r\n\r\nI'm extracting data with GraphQL RPC:\r\n\r\n```graphql\r\nquery TxInfo {\r\n  blocks(from: 16857053, to: 16857053) {\r\n    number\r\n    hash\r\n    timestamp\r\n    transactions {\r\n      hash\r\n      from {\r\n        address\r\n        code\r\n        balance\r\n      } \r\n      to {\r\n        address\r\n        balance\r\n      }\r\n      value\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nWhat I expect to get is the `pre` or `post` transaction balance of `from/to` addresses at the time of the transaction (which requires go-ethereum to run in archive mode), but currently only gets the current balance of these addresses. This could be misleading for users who use GraphQL RPC, so we may need to explain in the documentation or not expose these state properties.\r\n\r\n\r\nSeems we read the block info from GraphQL's context, not from the transaction's context, eg:\r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/0137bd69c55ca1edd42c533e543297493d3182ff/graphql/graphql.go#L374\r\n\r\n#### Actual behaviour\r\n\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\n\r\n#### Backtrace\r\n\r\n````\r\n[backtrace]\r\n````\r\n\r\nWhen submitting logs: please submit them as text and not screenshots.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26984/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26984/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1485167672",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26984#issuecomment-1485167672",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26984",
    "id": 1485167672,
    "node_id": "IC_kwDOAOvK985Yhdw4",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-27T14:05:29Z",
    "updated_at": "2023-03-27T14:05:29Z",
    "author_association": "MEMBER",
    "body": "I agree the result might be surprising. You can provide an argument to `from` and `to`, e.g. `from (block: 16857053)` in which case you will get the balance at that block if your node has the state in db.\r\n\r\nI think it will be more user-friendly if by default we provide the state at that TX. But note this will be an expensive operation because in addition to database lookups we will need to do tx processing too.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1485167672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1486279406",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26984#issuecomment-1486279406",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26984",
    "id": 1486279406,
    "node_id": "IC_kwDOAOvK985YltLu",
    "user": {
      "login": "jsvisa",
      "id": 3627395,
      "node_id": "MDQ6VXNlcjM2MjczOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3627395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsvisa",
      "html_url": "https://github.com/jsvisa",
      "followers_url": "https://api.github.com/users/jsvisa/followers",
      "following_url": "https://api.github.com/users/jsvisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsvisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jsvisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsvisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jsvisa/orgs",
      "repos_url": "https://api.github.com/users/jsvisa/repos",
      "events_url": "https://api.github.com/users/jsvisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jsvisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-28T06:19:23Z",
    "updated_at": "2023-03-28T06:19:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, I totally agree with you, tx-related statedb not only required an archive node but also more computer resources were used, maybe we should add more documents in the [graphql's website](https://geth.ethereum.org/docs/interacting-with-geth/rpc/graphql)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1486279406/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1489919615",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26984#issuecomment-1489919615",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26984",
    "id": 1489919615,
    "node_id": "IC_kwDOAOvK985Yzl5_",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-30T08:40:48Z",
    "updated_at": "2023-03-30T08:40:48Z",
    "author_association": "MEMBER",
    "body": "This feature cannot be supported by go-ethereum because we don't maintain transaction-level balances after processing a block. State is kept at block granularity.\r\n\r\nThe query you posted has well-defined semantics: when you access the `balance` of an address, the result is the balance at the current block. The query does not track the 'context' of the balance query in any way.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1489919615/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
