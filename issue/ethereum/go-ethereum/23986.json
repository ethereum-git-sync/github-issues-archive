{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23986",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23986/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23986/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23986/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/23986",
  "id": 1064888771,
  "node_id": "I_kwDOAOvK984_eOnD",
  "number": 23986,
  "title": "New txpool policy doesn't really fill the txpool",
  "user": {
    "login": "jhoenicke",
    "id": 897826,
    "node_id": "MDQ6VXNlcjg5NzgyNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/897826?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jhoenicke",
    "html_url": "https://github.com/jhoenicke",
    "followers_url": "https://api.github.com/users/jhoenicke/followers",
    "following_url": "https://api.github.com/users/jhoenicke/following{/other_user}",
    "gists_url": "https://api.github.com/users/jhoenicke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jhoenicke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jhoenicke/subscriptions",
    "organizations_url": "https://api.github.com/users/jhoenicke/orgs",
    "repos_url": "https://api.github.com/users/jhoenicke/repos",
    "events_url": "https://api.github.com/users/jhoenicke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jhoenicke/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 268304226,
      "node_id": "MDU6TGFiZWwyNjgzMDQyMjY=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:docs",
      "name": "type:docs",
      "color": "fef2c0",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 13,
  "created_at": "2021-11-27T03:01:57Z",
  "updated_at": "2022-11-19T08:04:01Z",
  "closed_at": "2021-12-17T14:58:08Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I'm running txpool statistics to see at which fee-level transactions are processed over time, see https://jochen-hoenicke.de/queue/#ETH,24h,count.  For this I run with `--txpool.globalslots=150000` to ensure I see most of the pending transactions.\r\n\r\nI recently updated to geth 1.10.13 and you can see that almost no transactions are added to the txpool since then.  If I understand the new logic correctly, it will never add any transaction that pays less than the base fee.  This may be not intended as it means that when the base fee drops, miners do not already have the low fee transactions in their pool but now have to wait for them to be resent over the network.  Also it is a bit inconsistent, since the low fee transactions are not purged when the base fee rises but no new transactions are added below the base fee even if they pay more than the transactions already in the pool. \r\n\r\nIMHO for txpool admission it may make more sense to use the maximum fee instead of the current effective fee, since this doesn't change over time.  This is also what I use in my txpool graphs.",
  "closed_by": {
    "login": "jhoenicke",
    "id": 897826,
    "node_id": "MDQ6VXNlcjg5NzgyNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/897826?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jhoenicke",
    "html_url": "https://github.com/jhoenicke",
    "followers_url": "https://api.github.com/users/jhoenicke/followers",
    "following_url": "https://api.github.com/users/jhoenicke/following{/other_user}",
    "gists_url": "https://api.github.com/users/jhoenicke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jhoenicke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jhoenicke/subscriptions",
    "organizations_url": "https://api.github.com/users/jhoenicke/orgs",
    "repos_url": "https://api.github.com/users/jhoenicke/repos",
    "events_url": "https://api.github.com/users/jhoenicke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jhoenicke/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23986/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23986/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/980646854",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23986#issuecomment-980646854",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23986",
    "id": 980646854,
    "node_id": "IC_kwDOAOvK9846c3vG",
    "user": {
      "login": "Kzenox7",
      "id": 93454331,
      "node_id": "U_kgDOBZH_-w",
      "avatar_url": "https://avatars.githubusercontent.com/u/93454331?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kzenox7",
      "html_url": "https://github.com/Kzenox7",
      "followers_url": "https://api.github.com/users/Kzenox7/followers",
      "following_url": "https://api.github.com/users/Kzenox7/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kzenox7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kzenox7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kzenox7/subscriptions",
      "organizations_url": "https://api.github.com/users/Kzenox7/orgs",
      "repos_url": "https://api.github.com/users/Kzenox7/repos",
      "events_url": "https://api.github.com/users/Kzenox7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kzenox7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-27T15:53:34Z",
    "updated_at": "2021-11-27T15:54:57Z",
    "author_association": "NONE",
    "body": "I have observed the same behaviour after updating geth today. It seems like only legacy transactions are entering the mempool now. In the original issue #23837 I had also suggested to use the max fee.\r\n\r\nFor reference this is the pull request that made the change #23855",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/980646854/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/981102247",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23986#issuecomment-981102247",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23986",
    "id": 981102247,
    "node_id": "IC_kwDOAOvK9846em6n",
    "user": {
      "login": "jhoenicke",
      "id": 897826,
      "node_id": "MDQ6VXNlcjg5NzgyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/897826?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhoenicke",
      "html_url": "https://github.com/jhoenicke",
      "followers_url": "https://api.github.com/users/jhoenicke/followers",
      "following_url": "https://api.github.com/users/jhoenicke/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoenicke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhoenicke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoenicke/subscriptions",
      "organizations_url": "https://api.github.com/users/jhoenicke/orgs",
      "repos_url": "https://api.github.com/users/jhoenicke/repos",
      "events_url": "https://api.github.com/users/jhoenicke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhoenicke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-28T15:14:10Z",
    "updated_at": "2021-11-28T15:14:10Z",
    "author_association": "NONE",
    "body": "I would suggest to have two criteria for txpool admission: (1) the maximum priority fee should be greater than the gas price set in the config (1 Gwei is the default, but miners can choose a higher or lower value) and (2) the maximum total gas price should be greater than a dynamically chosen price to keep number of queued transactions to the target size.  This would roughly give the pre eip-1559 behaviour except that miners ignore eip-1559 transaction that pay them too little priority fee.  It would ensure that the miners always have the transactions in the pool that are most likely to be mined by them in the future.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/981102247/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/981115369",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23986#issuecomment-981115369",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23986",
    "id": 981115369,
    "node_id": "IC_kwDOAOvK9846eqHp",
    "user": {
      "login": "Kzenox7",
      "id": 93454331,
      "node_id": "U_kgDOBZH_-w",
      "avatar_url": "https://avatars.githubusercontent.com/u/93454331?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kzenox7",
      "html_url": "https://github.com/Kzenox7",
      "followers_url": "https://api.github.com/users/Kzenox7/followers",
      "following_url": "https://api.github.com/users/Kzenox7/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kzenox7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kzenox7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kzenox7/subscriptions",
      "organizations_url": "https://api.github.com/users/Kzenox7/orgs",
      "repos_url": "https://api.github.com/users/Kzenox7/repos",
      "events_url": "https://api.github.com/users/Kzenox7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kzenox7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-28T16:41:18Z",
    "updated_at": "2021-11-28T16:41:59Z",
    "author_association": "NONE",
    "body": "> (1) the maximum priority fee should be greater than the gas price set in the config\r\n\r\nFrom my observations this is how it used to work before the change. However having this parameter on 1 Gwei caused the txpool to be flooded with many (non useful) low gas legacy transactions (which is why the change was made). \r\n\r\nI believe that the ideal purpose of the `-pricelimit` parameter should be to be able to set a floor level for the **'effective' or 'actual' gas price** of a transaction to be admitted to the pool. This would match the intended pre-EIP1559 filtering behavior. I consider the 'effective' gas price to be the `BaseFee` + `MaxPriorityFee`. However since the `BaseFee` varies each block it perhaps makes the admission logic too complicated.\r\n\r\nTherefore I believe that the next best option would be to test the `-pricelimit` against the `MaxFee` and to simultaneously introduce a new EIP1559 specific variable called `-MinPriorityFee` or `-PriorityFeeLimit`.\r\nBoth could have a default value of 1 Gwei. I believe that these parameters are more intuitive and provide the flexibility that is needed.\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/981115369/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/981159726",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23986#issuecomment-981159726",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23986",
    "id": 981159726,
    "node_id": "IC_kwDOAOvK9846e08u",
    "user": {
      "login": "jhoenicke",
      "id": 897826,
      "node_id": "MDQ6VXNlcjg5NzgyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/897826?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhoenicke",
      "html_url": "https://github.com/jhoenicke",
      "followers_url": "https://api.github.com/users/jhoenicke/followers",
      "following_url": "https://api.github.com/users/jhoenicke/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoenicke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhoenicke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoenicke/subscriptions",
      "organizations_url": "https://api.github.com/users/jhoenicke/orgs",
      "repos_url": "https://api.github.com/users/jhoenicke/repos",
      "events_url": "https://api.github.com/users/jhoenicke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhoenicke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-28T22:00:08Z",
    "updated_at": "2021-11-28T22:03:15Z",
    "author_association": "NONE",
    "body": "The effective gas price level should only be chosen dynamically.  If you set it to something like 65, it would work fine at the moment but it wouldn't have enqueued any transaction in September and it would have enqueued 30k transactions in April.  You don't want users to continuously reconfigure their nodes.  So choosing it automatically such that the number of queued transactions hits the desired size is probably best and this is how geth worked pre-1559. In June when the base fee was 4 Gwei [edit: base fee didn't exists in June, but it would have been 4 Gwei] it would be stupid for a miner to not accept a 24 Gwei transaction.  Currently even accepting all 50 Gwei transactions would just bloat your txpool.\r\n\r\nThe problem with just looking at the priority fee (as the current implementation does) is that it changes faster than the transaction pool.  So during a nft sale you may have a base fee peak of 1000 Gwei but only 50 transaction in total above 500 Gwei.  So why shouldn't you accept a transaction that pays over 500 Gwei? It's very likely to be the most profitable transaction in the next few minutes.  It's current priority fee is -500 though so using the current priority fee as a metric would not work.  If geth was consistent and removed all tx that it wouldn't accept into the pool, then it would currently clear the txpool completely whenever a block that is not 200% full is produced.\r\n\r\nSo my suggestion is to use a dynamic max gas price limit that keeps the pool to the desired size (e.g. 4000 tx), and use user set pricelimit with the priority fee only to discard transactions that don't pay the desired priority fee for the miner.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/981159726/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/981162333",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23986#issuecomment-981162333",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23986",
    "id": 981162333,
    "node_id": "IC_kwDOAOvK9846e1ld",
    "user": {
      "login": "jhoenicke",
      "id": 897826,
      "node_id": "MDQ6VXNlcjg5NzgyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/897826?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhoenicke",
      "html_url": "https://github.com/jhoenicke",
      "followers_url": "https://api.github.com/users/jhoenicke/followers",
      "following_url": "https://api.github.com/users/jhoenicke/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoenicke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhoenicke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoenicke/subscriptions",
      "organizations_url": "https://api.github.com/users/jhoenicke/orgs",
      "repos_url": "https://api.github.com/users/jhoenicke/repos",
      "events_url": "https://api.github.com/users/jhoenicke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhoenicke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-28T22:16:25Z",
    "updated_at": "2021-11-28T22:16:25Z",
    "author_association": "NONE",
    "body": "BTW the difference between \"BaseFee + MaxPriorityFee\" and \"Max Total Fee\" is at most five minutes :)  After five minutes the transaction is either mined, or the base fee has grown by so much that \"Max Total Fee\" is reached.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/981162333/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/981190686",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23986#issuecomment-981190686",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23986",
    "id": 981190686,
    "node_id": "IC_kwDOAOvK9846e8ge",
    "user": {
      "login": "jhoenicke",
      "id": 897826,
      "node_id": "MDQ6VXNlcjg5NzgyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/897826?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhoenicke",
      "html_url": "https://github.com/jhoenicke",
      "followers_url": "https://api.github.com/users/jhoenicke/followers",
      "following_url": "https://api.github.com/users/jhoenicke/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoenicke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhoenicke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoenicke/subscriptions",
      "organizations_url": "https://api.github.com/users/jhoenicke/orgs",
      "repos_url": "https://api.github.com/users/jhoenicke/repos",
      "events_url": "https://api.github.com/users/jhoenicke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhoenicke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-29T00:23:42Z",
    "updated_at": "2021-11-29T00:23:42Z",
    "author_association": "NONE",
    "body": "I think the old logic before #23855 does exactly what I want.  Reject transaction with too little tip cap and of the remaining keep the tx with the largest max fee cap (urgent/floating list). \r\n\r\nI really don't understand what the problem was the pull request was about to solve but for me it changed it from working to broken.  The new implementation will still store the low fee transactions in the txpool, but will not include new higher paying transactions that were sent after the base fee increased. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/981190686/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/981200433",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23986#issuecomment-981200433",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23986",
    "id": 981200433,
    "node_id": "IC_kwDOAOvK9846e-4x",
    "user": {
      "login": "Kzenox7",
      "id": 93454331,
      "node_id": "U_kgDOBZH_-w",
      "avatar_url": "https://avatars.githubusercontent.com/u/93454331?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kzenox7",
      "html_url": "https://github.com/Kzenox7",
      "followers_url": "https://api.github.com/users/Kzenox7/followers",
      "following_url": "https://api.github.com/users/Kzenox7/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kzenox7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kzenox7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kzenox7/subscriptions",
      "organizations_url": "https://api.github.com/users/Kzenox7/orgs",
      "repos_url": "https://api.github.com/users/Kzenox7/repos",
      "events_url": "https://api.github.com/users/Kzenox7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kzenox7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-29T00:54:17Z",
    "updated_at": "2021-11-29T00:54:17Z",
    "author_association": "NONE",
    "body": "The problem I had after the EIP-1559 change was that my node running with the following settings \r\n`--txpool.pricelimit 16000000000 (16 Gwei) --txpool.globalslots 250000 --txpool.globalqueue 2800`\r\nwas receiving no Type 2 transactions (unless MaxPriorityFee was >= 16 Gwei), even if the effective gas price would be well over 100 Gwei.\r\nSetting the txpool.pricelimit to 1 Gwei caused my pool to be filled with 250k (legacy) transactions and made it very slow to send transactions to.\r\n\r\nThis is what I wanted to be solved. Unless I am doing something wrong or am missing something.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/981200433/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/981722799",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23986#issuecomment-981722799",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23986",
    "id": 981722799,
    "node_id": "IC_kwDOAOvK9846g-av",
    "user": {
      "login": "jhoenicke",
      "id": 897826,
      "node_id": "MDQ6VXNlcjg5NzgyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/897826?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhoenicke",
      "html_url": "https://github.com/jhoenicke",
      "followers_url": "https://api.github.com/users/jhoenicke/followers",
      "following_url": "https://api.github.com/users/jhoenicke/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoenicke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhoenicke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoenicke/subscriptions",
      "organizations_url": "https://api.github.com/users/jhoenicke/orgs",
      "repos_url": "https://api.github.com/users/jhoenicke/repos",
      "events_url": "https://api.github.com/users/jhoenicke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhoenicke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-29T15:07:58Z",
    "updated_at": "2021-11-29T15:07:58Z",
    "author_association": "NONE",
    "body": "@Kzenox7 You can reduce the number of global slots.  10k should be more than enough for most application; default value is 4k. With the old code it will then do what you want, namely only retain the 10k transactions with the highest max fee cap.  I use 150k just to get most of the pending transactions so I know roughly how many low fee transactions exists.  But 150k will give you also the 4 Gwei transactions.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/981722799/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/983086780",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23986#issuecomment-983086780",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23986",
    "id": 983086780,
    "node_id": "IC_kwDOAOvK9846mLa8",
    "user": {
      "login": "Kzenox7",
      "id": 93454331,
      "node_id": "U_kgDOBZH_-w",
      "avatar_url": "https://avatars.githubusercontent.com/u/93454331?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kzenox7",
      "html_url": "https://github.com/Kzenox7",
      "followers_url": "https://api.github.com/users/Kzenox7/followers",
      "following_url": "https://api.github.com/users/Kzenox7/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kzenox7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kzenox7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kzenox7/subscriptions",
      "organizations_url": "https://api.github.com/users/Kzenox7/orgs",
      "repos_url": "https://api.github.com/users/Kzenox7/repos",
      "events_url": "https://api.github.com/users/Kzenox7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kzenox7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-30T22:45:44Z",
    "updated_at": "2021-11-30T22:46:59Z",
    "author_association": "NONE",
    "body": "@jhoenicke \r\nI have downgraded my geth and omitted all of the txpool parameters. I don't quite recall why I had to add them in the past but now I'm seeing the behavior that you have described. This is indeed sufficient for most applications. \r\nI might have added the `-txpool.pricelimit` for performance reasons (no processing of low gas transactions).\r\n\r\nI think my point about the `-txpool.pricelimit` remains though. I didn't find the parameter meaningful pre geth 1.10.13 since it seemed to test the pricelimit against Type0.GasPrice or Type2.MaxPriorityFee (which are not the same thing at all). So I'm not sure the best way is to revert it.\r\n\r\nMy original issue remains (pre & post geth 1.10.13) but then again I'm not an expert and I'm not sure if I'm viewing the `pricelimit` in the right way . I also don't know Go so I think this is better suited for someone with more knowledge than me to discuss further.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/983086780/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/996785669",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23986#issuecomment-996785669",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23986",
    "id": 996785669,
    "node_id": "IC_kwDOAOvK9847ab4F",
    "user": {
      "login": "jhoenicke",
      "id": 897826,
      "node_id": "MDQ6VXNlcjg5NzgyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/897826?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhoenicke",
      "html_url": "https://github.com/jhoenicke",
      "followers_url": "https://api.github.com/users/jhoenicke/followers",
      "following_url": "https://api.github.com/users/jhoenicke/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoenicke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhoenicke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoenicke/subscriptions",
      "organizations_url": "https://api.github.com/users/jhoenicke/orgs",
      "repos_url": "https://api.github.com/users/jhoenicke/repos",
      "events_url": "https://api.github.com/users/jhoenicke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhoenicke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-17T14:58:08Z",
    "updated_at": "2021-12-17T14:58:08Z",
    "author_association": "NONE",
    "body": "#24080 fixes my issue",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/996785669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1003170001",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23986#issuecomment-1003170001",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23986",
    "id": 1003170001,
    "node_id": "IC_kwDOAOvK9847yyjR",
    "user": {
      "login": "Mr0xDev",
      "id": 82184770,
      "node_id": "MDQ6VXNlcjgyMTg0Nzcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/82184770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mr0xDev",
      "html_url": "https://github.com/Mr0xDev",
      "followers_url": "https://api.github.com/users/Mr0xDev/followers",
      "following_url": "https://api.github.com/users/Mr0xDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mr0xDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mr0xDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mr0xDev/subscriptions",
      "organizations_url": "https://api.github.com/users/Mr0xDev/orgs",
      "repos_url": "https://api.github.com/users/Mr0xDev/repos",
      "events_url": "https://api.github.com/users/Mr0xDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mr0xDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-30T20:21:57Z",
    "updated_at": "2021-12-30T20:25:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jhoenicke or @Kzenox7 I'm new to running my own node and have been using the `config.toml` file and here are my settings\r\n\r\n```\r\nPriceLimit = 50\r\nPriceBump = 10\r\nAccountSlots = 64\r\nGlobalSlots = 15000\r\nAccountQueue = 1048\r\nGlobalQueue = 2800\r\nLifetime = 10800000000000\r\n```\r\n\r\nIf I have understood things correct my node should not accept txs with less then 50 gwei because I set my price limit to do that. But when I check pending txs a lot of txs with less 20 gwei are included and they are never processed. Any tips on preventing them joining my tx pool?\r\n\r\nAlso one thing I find frustrating is the lack of clear guides out there on what units the different flags the config file uses. For example is the Lifetime in seconds, ms, microseconds etc. It's been a ton of experimentation to figure this all out.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1003170001/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1003545778",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23986#issuecomment-1003545778",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23986",
    "id": 1003545778,
    "node_id": "IC_kwDOAOvK98470OSy",
    "user": {
      "login": "jhoenicke",
      "id": 897826,
      "node_id": "MDQ6VXNlcjg5NzgyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/897826?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhoenicke",
      "html_url": "https://github.com/jhoenicke",
      "followers_url": "https://api.github.com/users/jhoenicke/followers",
      "following_url": "https://api.github.com/users/jhoenicke/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoenicke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhoenicke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoenicke/subscriptions",
      "organizations_url": "https://api.github.com/users/jhoenicke/orgs",
      "repos_url": "https://api.github.com/users/jhoenicke/repos",
      "events_url": "https://api.github.com/users/jhoenicke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhoenicke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-01T11:35:58Z",
    "updated_at": "2022-01-01T11:35:58Z",
    "author_association": "NONE",
    "body": "@fomotrader: I think the price limit is in wei, not in Gwei, so if you only want to propagate super-high-priority transactions with 50 Gwei priority fee, you should set the price limit to 50000000000.  If you also want to accept normally priced transactions, you should not set it below 1 Gwei, though.\r\n\r\nThere is no option to restrict the max fee, as it doesn't make sense.  Why don't you want to allow 10 Gwei transactions if the base fee goes below 10 Gwei?  Or do you want to change the configuration of your node every week to adapt to the base fee?\r\n ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1003545778/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1320829257",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/23986#issuecomment-1320829257",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/23986",
    "id": 1320829257,
    "node_id": "IC_kwDOAOvK985OukFJ",
    "user": {
      "login": "Mr0xDev",
      "id": 82184770,
      "node_id": "MDQ6VXNlcjgyMTg0Nzcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/82184770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mr0xDev",
      "html_url": "https://github.com/Mr0xDev",
      "followers_url": "https://api.github.com/users/Mr0xDev/followers",
      "following_url": "https://api.github.com/users/Mr0xDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mr0xDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mr0xDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mr0xDev/subscriptions",
      "organizations_url": "https://api.github.com/users/Mr0xDev/orgs",
      "repos_url": "https://api.github.com/users/Mr0xDev/repos",
      "events_url": "https://api.github.com/users/Mr0xDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mr0xDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-19T08:01:17Z",
    "updated_at": "2022-11-19T08:04:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jhoenicke for some reason I missed this notification 😄 \r\n\r\nSo in essence I noticed my mempool is filled with many txs that are underpriced and over a year old. I do on chain analytics on the txs in the mempool and seeing txs like this.\r\n\r\nhttps://etherscan.io/address/0x77d2b562d34fc4609df2b2ded37bbe3f707dca23\r\n\r\nIf you decode the input data you'll see the deadline is `1633519114` which is `2021-10-06T11:18:34`. Which tells me that this transaction has been going from mempool to mempool for a very long time. \r\n\r\nI don't want my mempool to have txs that are super high priority only. But I want my it to have transactions that are no older then 24 hours since first seen.  Another way to phrase this would be, I want my mempool to have txs that are likely to be included in a block within 24 hours. \r\n\r\nThis mainly started happening after EIP-1599, do you have any thoughts on this. \r\n\r\nMy initial thought was to check the type of tx and do some kind of gwei check. But the more I think about it the more that seems wrong as that value can't be dynamic and will have to be changing semi regularly.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1320829257/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
