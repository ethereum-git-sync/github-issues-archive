{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27274",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27274/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27274/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27274/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/27274",
  "id": 1710782184,
  "node_id": "I_kwDOAOvK985l-Hbo",
  "number": 27274,
  "title": "Node flag to turn off transaction overdraft protection",
  "user": {
    "login": "evanzbitgo",
    "id": 88683151,
    "node_id": "MDQ6VXNlcjg4NjgzMTUx",
    "avatar_url": "https://avatars.githubusercontent.com/u/88683151?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/evanzbitgo",
    "html_url": "https://github.com/evanzbitgo",
    "followers_url": "https://api.github.com/users/evanzbitgo/followers",
    "following_url": "https://api.github.com/users/evanzbitgo/following{/other_user}",
    "gists_url": "https://api.github.com/users/evanzbitgo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/evanzbitgo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/evanzbitgo/subscriptions",
    "organizations_url": "https://api.github.com/users/evanzbitgo/orgs",
    "repos_url": "https://api.github.com/users/evanzbitgo/repos",
    "events_url": "https://api.github.com/users/evanzbitgo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/evanzbitgo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-05-15T20:31:48Z",
  "updated_at": "2023-12-04T15:26:55Z",
  "closed_at": "2023-12-04T15:26:55Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# Rationale\r\nThe introduction of transaction overdraft protection has created challenges in certain automated transaction broadcasting scenarios, including my company. Our process involves generating a significant number of transactions and submitting them to our internal node's txpool. Our approach is to keep all pending transactions in the txpool, even if the fee address doesn't have enough balance, as we can add funds to the fee address later if needed. We encounter situations where we need to replace a pending transaction with a lower nonce. However, the overdraft protection feature initially rejects these replacement transactions, leading to manual intervention to resolve the issues.\r\n\r\nWhy should this feature exist?\r\nFor users with in-house nodes, they could have the flexibility to turn off this specific protection.\r\n\r\nWhat are the use-cases?\r\nSee above\r\n\r\n# Implementation\r\n\r\nDo you have ideas regarding the implementation of this feature?\r\nAdding a node config flag\r\nAre you willing to implement this feature?\r\nYes",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27274/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27274/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1548864120",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27274#issuecomment-1548864120",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27274",
    "id": 1548864120,
    "node_id": "IC_kwDOAOvK985cUcp4",
    "user": {
      "login": "Georgezhang714",
      "id": 123336089,
      "node_id": "U_kgDOB1n1mQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/123336089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Georgezhang714",
      "html_url": "https://github.com/Georgezhang714",
      "followers_url": "https://api.github.com/users/Georgezhang714/followers",
      "following_url": "https://api.github.com/users/Georgezhang714/following{/other_user}",
      "gists_url": "https://api.github.com/users/Georgezhang714/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Georgezhang714/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Georgezhang714/subscriptions",
      "organizations_url": "https://api.github.com/users/Georgezhang714/orgs",
      "repos_url": "https://api.github.com/users/Georgezhang714/repos",
      "events_url": "https://api.github.com/users/Georgezhang714/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Georgezhang714/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-16T02:09:42Z",
    "updated_at": "2023-05-16T02:09:42Z",
    "author_association": "NONE",
    "body": "> # Rationale\r\n> The introduction of transaction overdraft protection has created challenges in certain automated transaction broadcasting scenarios, including my company. Our process involves generating a significant number of transactions and submitting them to our internal node's txpool. Our approach is to keep all pending transactions in the txpool, even if the fee address doesn't have enough balance, as we can add funds to the fee address later if needed. We encounter situations where we need to replace a pending transaction with a lower nonce. However, the overdraft protection feature initially rejects these replacement transactions, leading to manual intervention to resolve the issues.\r\n> \r\n> Why should this feature exist? For users with in-house nodes, they could have the flexibility to turn off this specific protection.\r\n> \r\n> What are the use-cases? See above\r\n> \r\n> # Implementation\r\n> Do you have ideas regarding the implementation of this feature? Adding a node config flag Are you willing to implement this feature? Yes\r\n\r\nFeature",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1548864120/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1838881895",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27274#issuecomment-1838881895",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27274",
    "id": 1838881895,
    "node_id": "IC_kwDOAOvK985tmxxn",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-04T15:26:55Z",
    "updated_at": "2023-12-04T15:26:55Z",
    "author_association": "MEMBER",
    "body": "It is hard for us to evaluate proposals in text-form. If you have a ready PR, it's easier to look at the code and judge if the maintenance overhead is worth it. \r\n\r\nIn this specific case, I would _guess_ that we would not accept it. The usecase sounds very niche, and our main focus is maintaining an ethereum mainnet clients. At times, we accept modifications for non-ethereum-mainnet downstream usecases though, if they are elegant and/or minimal enough. \r\n\r\nI'll close this ticket, feel free to open a PR with the proposed changes (but yeah, don't hope too much :) ) ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1838881895/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
