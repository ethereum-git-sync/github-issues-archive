{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27315",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27315/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27315/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27315/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/27315",
  "id": 1718767821,
  "node_id": "I_kwDOAOvK985mclDN",
  "number": 27315,
  "title": "ethclient: support for `newFilter` / `getFilterChanges`",
  "user": {
    "login": "kabaluyot",
    "id": 38805756,
    "node_id": "MDQ6VXNlcjM4ODA1NzU2",
    "avatar_url": "https://avatars.githubusercontent.com/u/38805756?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kabaluyot",
    "html_url": "https://github.com/kabaluyot",
    "followers_url": "https://api.github.com/users/kabaluyot/followers",
    "following_url": "https://api.github.com/users/kabaluyot/following{/other_user}",
    "gists_url": "https://api.github.com/users/kabaluyot/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kabaluyot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kabaluyot/subscriptions",
    "organizations_url": "https://api.github.com/users/kabaluyot/orgs",
    "repos_url": "https://api.github.com/users/kabaluyot/repos",
    "events_url": "https://api.github.com/users/kabaluyot/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kabaluyot/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2023-05-22T02:18:48Z",
  "updated_at": "2023-06-23T01:06:50Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "How to use the 'newFilter' and 'filterChanges' for listening to contract event logs?\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27315/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27315/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1557055407",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27315#issuecomment-1557055407",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27315",
    "id": 1557055407,
    "node_id": "IC_kwDOAOvK985czsev",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-22T11:32:16Z",
    "updated_at": "2023-05-22T11:32:16Z",
    "author_association": "MEMBER",
    "body": "I recommend using the log subscription instead if your client supports websocket. Here's an example how you'd do it with `ethers.js`:\r\n\r\n```js\r\nconst ethers = require('ethers')\r\n\r\nasync function main() {\r\n    const provider = new ethers.providers.WebSocketProvider()\r\n    provider.on({ address: '0xabc', topics: [] }, (log) => {\r\n        console.log(txhash)\r\n    })\r\n}\r\n\r\nmain().then(console.log).catch(console.error)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1557055407/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1557058156",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27315#issuecomment-1557058156",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27315",
    "id": 1557058156,
    "node_id": "IC_kwDOAOvK985cztJs",
    "user": {
      "login": "kabaluyot",
      "id": 38805756,
      "node_id": "MDQ6VXNlcjM4ODA1NzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/38805756?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kabaluyot",
      "html_url": "https://github.com/kabaluyot",
      "followers_url": "https://api.github.com/users/kabaluyot/followers",
      "following_url": "https://api.github.com/users/kabaluyot/following{/other_user}",
      "gists_url": "https://api.github.com/users/kabaluyot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kabaluyot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kabaluyot/subscriptions",
      "organizations_url": "https://api.github.com/users/kabaluyot/orgs",
      "repos_url": "https://api.github.com/users/kabaluyot/repos",
      "events_url": "https://api.github.com/users/kabaluyot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kabaluyot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-22T11:34:32Z",
    "updated_at": "2023-05-22T11:34:32Z",
    "author_association": "NONE",
    "body": "Yes -- was doing this all the time using `SubscribeFilterLogs` with websocket.\r\n\r\nBut other clients also use that `newFilter` and `filterChanges` as it is done via long polling and forum's says it is ideal for critical indexers ..",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1557058156/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1559151757",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27315#issuecomment-1559151757",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27315",
    "id": 1559151757,
    "node_id": "IC_kwDOAOvK985c7sSN",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-23T12:02:36Z",
    "updated_at": "2023-05-23T12:02:36Z",
    "author_association": "MEMBER",
    "body": "Oh I thought all clients support the subscription? Do you have a link to the forum post?\r\n\r\nAnyhow, this is a sample how you can use it:\r\n\r\n```js\r\nconst ethers = require(\"ethers\");\r\nconst filter = {\r\n  fromBlock: \"0xe20360\",\r\n  toBlock: \"0xe20411\",\r\n  address: \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",\r\n  topics: [],\r\n};\r\n(async () => {\r\n  const provider = new ethers.providers.JsonRpcProvider();\r\n  const filterId = await provider.send(\"eth_newFilter\", [filter]);\r\n  console.log(filterId);\r\n})();\r\n```\r\n\r\nThis will register a filter. Then you will have to poll `eth_getFilterChanges` to get result back regularly:\r\n\r\n```js\r\nconst ethers = require(\"ethers\");\r\n(async () => {\r\n  const provider = new ethers.providers.JsonRpcProvider();\r\n  const logs = await provider.send(\"eth_getFilterChanges\", [\"YOUR_FILTER_ID\"]);\r\n  console.log(logs);\r\n})();\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1559151757/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1559208419",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27315#issuecomment-1559208419",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27315",
    "id": 1559208419,
    "node_id": "IC_kwDOAOvK985c76Hj",
    "user": {
      "login": "kabaluyot",
      "id": 38805756,
      "node_id": "MDQ6VXNlcjM4ODA1NzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/38805756?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kabaluyot",
      "html_url": "https://github.com/kabaluyot",
      "followers_url": "https://api.github.com/users/kabaluyot/followers",
      "following_url": "https://api.github.com/users/kabaluyot/following{/other_user}",
      "gists_url": "https://api.github.com/users/kabaluyot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kabaluyot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kabaluyot/subscriptions",
      "organizations_url": "https://api.github.com/users/kabaluyot/orgs",
      "repos_url": "https://api.github.com/users/kabaluyot/repos",
      "events_url": "https://api.github.com/users/kabaluyot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kabaluyot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-23T12:32:28Z",
    "updated_at": "2023-05-23T12:32:28Z",
    "author_association": "NONE",
    "body": "Basically I want to use that eth_newFilter and eth_getFilterChanges using this go-ethereum client but can't find any samples",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1559208419/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1559221409",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27315#issuecomment-1559221409",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27315",
    "id": 1559221409,
    "node_id": "IC_kwDOAOvK985c79Sh",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-23T12:39:33Z",
    "updated_at": "2023-05-23T12:39:33Z",
    "author_association": "MEMBER",
    "body": "Which step are you stuck at? I posted a sample script that you can use. You need to run go-ethereum with `--http` enabled. Then you can call these methods from any HTTP client.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1559221409/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1559235313",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27315#issuecomment-1559235313",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27315",
    "id": 1559235313,
    "node_id": "IC_kwDOAOvK985c8Arx",
    "user": {
      "login": "kabaluyot",
      "id": 38805756,
      "node_id": "MDQ6VXNlcjM4ODA1NzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/38805756?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kabaluyot",
      "html_url": "https://github.com/kabaluyot",
      "followers_url": "https://api.github.com/users/kabaluyot/followers",
      "following_url": "https://api.github.com/users/kabaluyot/following{/other_user}",
      "gists_url": "https://api.github.com/users/kabaluyot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kabaluyot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kabaluyot/subscriptions",
      "organizations_url": "https://api.github.com/users/kabaluyot/orgs",
      "repos_url": "https://api.github.com/users/kabaluyot/repos",
      "events_url": "https://api.github.com/users/kabaluyot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kabaluyot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-23T12:44:09Z",
    "updated_at": "2023-05-23T12:44:09Z",
    "author_association": "NONE",
    "body": "What I mean is using this geth client itself to call eth_newFilter and eth_getFilterChanges.\r\n\r\nMy use case is I have a Go API that listens to contract events from an external RPC. Aside from using `SubscribeFilters`, I want to use that filters.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1559235313/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1559256760",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27315#issuecomment-1559256760",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27315",
    "id": 1559256760,
    "node_id": "IC_kwDOAOvK985c8F64",
    "user": {
      "login": "kabaluyot",
      "id": 38805756,
      "node_id": "MDQ6VXNlcjM4ODA1NzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/38805756?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kabaluyot",
      "html_url": "https://github.com/kabaluyot",
      "followers_url": "https://api.github.com/users/kabaluyot/followers",
      "following_url": "https://api.github.com/users/kabaluyot/following{/other_user}",
      "gists_url": "https://api.github.com/users/kabaluyot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kabaluyot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kabaluyot/subscriptions",
      "organizations_url": "https://api.github.com/users/kabaluyot/orgs",
      "repos_url": "https://api.github.com/users/kabaluyot/repos",
      "events_url": "https://api.github.com/users/kabaluyot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kabaluyot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-23T12:51:39Z",
    "updated_at": "2023-05-23T12:51:39Z",
    "author_association": "NONE",
    "body": "Something like this as a client: https://goethereumbook.org/en/event-subscribe/",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1559256760/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1559416238",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27315#issuecomment-1559416238",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27315",
    "id": 1559416238,
    "node_id": "IC_kwDOAOvK985c8s2u",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-23T13:49:36Z",
    "updated_at": "2023-05-23T13:49:36Z",
    "author_association": "MEMBER",
    "body": "Aha, ethclient doesn't support `newFilter` and `getFilterChanges`. Marked it as a feature request. I'm against adding these. I think subscriptions should be used for most use-cases. But I'll wait for others to chime in as well.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1559416238/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1559495802",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27315#issuecomment-1559495802",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27315",
    "id": 1559495802,
    "node_id": "IC_kwDOAOvK985c9AR6",
    "user": {
      "login": "kabaluyot",
      "id": 38805756,
      "node_id": "MDQ6VXNlcjM4ODA1NzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/38805756?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kabaluyot",
      "html_url": "https://github.com/kabaluyot",
      "followers_url": "https://api.github.com/users/kabaluyot/followers",
      "following_url": "https://api.github.com/users/kabaluyot/following{/other_user}",
      "gists_url": "https://api.github.com/users/kabaluyot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kabaluyot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kabaluyot/subscriptions",
      "organizations_url": "https://api.github.com/users/kabaluyot/orgs",
      "repos_url": "https://api.github.com/users/kabaluyot/repos",
      "events_url": "https://api.github.com/users/kabaluyot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kabaluyot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-23T14:16:51Z",
    "updated_at": "2023-05-23T14:16:51Z",
    "author_association": "NONE",
    "body": "From my opinion, it should be supported since most clients do support it too. It's forcing me atm to implement it manually or look for other ethclient just to get the support.\r\n\r\nAlso long polling with newFilter + getFilterChanges combo is a good alternative or a backup for subscription for ensuring no events are missed. From my experience when using most RPC providers (free or dedicated nodes), there are really chances when websocket abnormally closes at the middle of transactions resulting to missed events.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1559495802/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1568355815",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27315#issuecomment-1568355815",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27315",
    "id": 1568355815,
    "node_id": "IC_kwDOAOvK985dezXn",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-30T12:34:11Z",
    "updated_at": "2023-05-30T12:34:11Z",
    "author_association": "MEMBER",
    "body": "The ethclient API does not directly wrap the provided RPC APIs. As we see it, subscriptions are superior way to get this information.  \r\n\r\nHowever, it would be quite useful to add a fallback subscription based on getFilterChanges in ethclient. This subscription implementation would be used when the server does not support subscriptions. It would basically poll the filter and deliver the results into the subscription channel.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1568355815/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1602750959",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27315#issuecomment-1602750959",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27315",
    "id": 1602750959,
    "node_id": "IC_kwDOAOvK985fiAnv",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-22T14:34:12Z",
    "updated_at": "2023-06-22T14:34:12Z",
    "author_association": "MEMBER",
    "body": "Trying out an implementation of the fallback subscription here: https://github.com/ethereum/go-ethereum/pull/27541",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1602750959/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1603496015",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27315#issuecomment-1603496015",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27315",
    "id": 1603496015,
    "node_id": "IC_kwDOAOvK985fk2hP",
    "user": {
      "login": "kabaluyot",
      "id": 38805756,
      "node_id": "MDQ6VXNlcjM4ODA1NzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/38805756?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kabaluyot",
      "html_url": "https://github.com/kabaluyot",
      "followers_url": "https://api.github.com/users/kabaluyot/followers",
      "following_url": "https://api.github.com/users/kabaluyot/following{/other_user}",
      "gists_url": "https://api.github.com/users/kabaluyot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kabaluyot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kabaluyot/subscriptions",
      "organizations_url": "https://api.github.com/users/kabaluyot/orgs",
      "repos_url": "https://api.github.com/users/kabaluyot/repos",
      "events_url": "https://api.github.com/users/kabaluyot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kabaluyot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-23T01:06:33Z",
    "updated_at": "2023-06-23T01:06:50Z",
    "author_association": "NONE",
    "body": "Yes the fallback to filter is nice to have. \r\n\r\nBut is it really not possible to have this wrappers available https://github.com/ethereum/go-ethereum/pull/27541 in ethclient (even still deliver result to subscription) too? \r\n\r\nFor example in my use case I got this subscription via websocket listener but I want to open another listener using the filter polling which have delay say 30s .. Reason is in the event of abnormal websocket closure (sure there is some reconnection happening here but some events might be missed), the filter polling listener will pick up missed transactions",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1603496015/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
