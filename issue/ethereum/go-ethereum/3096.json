{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3096",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3096/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3096/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3096/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/3096",
  "id": 181372866,
  "node_id": "MDU6SXNzdWUxODEzNzI4NjY=",
  "number": 3096,
  "title": "how to execute a contract on peer node in ethereum private network ?",
  "user": {
    "login": "akigaikwad",
    "id": 22368585,
    "node_id": "MDQ6VXNlcjIyMzY4NTg1",
    "avatar_url": "https://avatars.githubusercontent.com/u/22368585?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/akigaikwad",
    "html_url": "https://github.com/akigaikwad",
    "followers_url": "https://api.github.com/users/akigaikwad/followers",
    "following_url": "https://api.github.com/users/akigaikwad/following{/other_user}",
    "gists_url": "https://api.github.com/users/akigaikwad/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/akigaikwad/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/akigaikwad/subscriptions",
    "organizations_url": "https://api.github.com/users/akigaikwad/orgs",
    "repos_url": "https://api.github.com/users/akigaikwad/repos",
    "events_url": "https://api.github.com/users/akigaikwad/events{/privacy}",
    "received_events_url": "https://api.github.com/users/akigaikwad/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2016-10-06T10:03:45Z",
  "updated_at": "2016-10-07T02:55:13Z",
  "closed_at": "2016-10-06T19:24:08Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hi,\nI have set up a private network with one node on Linux virtual machine and one is my local windows pc .\nI have done the peer adding . and I could see peer is added when I do a admin.peers on both the node.\nlets call two machines as machine A and machine B.\nI have created a contract which will store a number on machine A ,\nhere is the contract code [copied from internet ] and deployment steps \n\n1)storeSrc = \"contract SimpleStorage { uint storedData; function set(uint x) { storedData = x; } function get() constant returns (uint retVal) { return storedData; } }\"\n\n2)storeCompiled = web3.eth.compile.solidity(storeSrc)\n\n3)storeContract = web3.eth.contract(storeCompiled.SimpleStorage.info.abiDefinition);\n\n  4)store = storeContract.new({from:web3.eth.accounts[0], data: storeCompiled.SimpleStorage.code, gas: 300000}, function(e, contract){\n      if(!e) {\n        if(!contract.address) {\n         console.log(\"Contract transaction send: TransactionHash: \" + contract.transactionHash + \" waiting to be mined...\");\n       } else {\n         console.log(\"Contract mined! Address: \" + contract.address);\n         console.log(contract);\n       }\n     }\n})\n\nwith following steps I could easily deploy the contract on machine A and was able to execute its as well.\n\nnow since I have machine B as a added peer ideally I should be able to access this contract with its address .\nbut inorder to access the contract function I have to do following steps -\n\n1) storeSrc = \"contract SimpleStorage { uint storedData; function set(uint x) { storedData = x; } function get() constant returns (uint retVal) { return storedData; } }\"\n\n2) storeCompiled = web3.eth.compile.solidity(storeSrc)\n\n3)storeContract = web3.eth.contract(storeCompiled.SimpleStorage.info.abiDefinition);\n\n4)store = storeContract.at(\"contract address\")\n\nSO MY QUESTION HERE IS CAN  I DEPLOY THIS ON MACHINE B WITHOUT DOING STEP 1,2,3 ?\nIS THERE ANY WAY TO AVOID STEP 1,2,3 AND DIRECTLY ACCESS THE CONTRACT USING ITS ADDRESS??\n#### System information\n\nGeth version: `geth version`\nOS & Version: Windows/Linux/OSX\nCommit hash : (if `develop`)\n#### Expected behaviour\n#### Actual behaviour\n#### Steps to reproduce the behaviour\n#### Backtrace\n\n```\n[backtrace]\n```\n",
  "closed_by": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3096/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3096/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/252063237",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/3096#issuecomment-252063237",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3096",
    "id": 252063237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjA2MzIzNw==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-06T19:24:08Z",
    "updated_at": "2016-10-06T19:24:08Z",
    "author_association": "MEMBER",
    "body": "The ABI definition is not stored on the blockchain. A deployed contract is an EVM byte code program and you have to know the ABI of the contract to interact with it.\n\nUsually your software interacts with a small number of known contracts and you can just put the ABI definition JSON into your software source code. In your case you would take the ABI JSON (`storeCompiled.SimpleStorage.info.abiDefinition`) from step (2) on machine A and move it to machine B.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/252063237/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/252141822",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/3096#issuecomment-252141822",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3096",
    "id": 252141822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjE0MTgyMg==",
    "user": {
      "login": "akigaikwad",
      "id": 22368585,
      "node_id": "MDQ6VXNlcjIyMzY4NTg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/22368585?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akigaikwad",
      "html_url": "https://github.com/akigaikwad",
      "followers_url": "https://api.github.com/users/akigaikwad/followers",
      "following_url": "https://api.github.com/users/akigaikwad/following{/other_user}",
      "gists_url": "https://api.github.com/users/akigaikwad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akigaikwad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akigaikwad/subscriptions",
      "organizations_url": "https://api.github.com/users/akigaikwad/orgs",
      "repos_url": "https://api.github.com/users/akigaikwad/repos",
      "events_url": "https://api.github.com/users/akigaikwad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akigaikwad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-07T02:55:13Z",
    "updated_at": "2016-10-07T02:55:13Z",
    "author_association": "NONE",
    "body": "Thanks Felix.............................but in my case if I want store the abi def in block chain what are the steps that I have to follow ...because I dont want to repeat the steps 2,3 and then use \"at\" for refereing to the contract.....\n\nRegards,\nAkshay \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/252141822/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
