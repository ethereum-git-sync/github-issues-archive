{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21314",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21314/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21314/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21314/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/21314",
  "id": 653905037,
  "node_id": "MDU6SXNzdWU2NTM5MDUwMzc=",
  "number": 21314,
  "title": "(Whisper) 'RequestHistoricMessages' function is not exposed to call",
  "user": {
    "login": "LijuJoseJJ",
    "id": 36976825,
    "node_id": "MDQ6VXNlcjM2OTc2ODI1",
    "avatar_url": "https://avatars.githubusercontent.com/u/36976825?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/LijuJoseJJ",
    "html_url": "https://github.com/LijuJoseJJ",
    "followers_url": "https://api.github.com/users/LijuJoseJJ/followers",
    "following_url": "https://api.github.com/users/LijuJoseJJ/following{/other_user}",
    "gists_url": "https://api.github.com/users/LijuJoseJJ/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/LijuJoseJJ/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/LijuJoseJJ/subscriptions",
    "organizations_url": "https://api.github.com/users/LijuJoseJJ/orgs",
    "repos_url": "https://api.github.com/users/LijuJoseJJ/repos",
    "events_url": "https://api.github.com/users/LijuJoseJJ/events{/privacy}",
    "received_events_url": "https://api.github.com/users/LijuJoseJJ/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2020-07-09T09:18:47Z",
  "updated_at": "2020-08-31T09:05:43Z",
  "closed_at": "2020-08-31T09:05:23Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### Expected behaviour\r\nJust like 'targetPeer' key available to parameter of `shh.post({})` to make P2PMessage\r\nSimilarly, some key should be made available to make post as request to mail server for historic messages, \r\nor\r\na new function to 'web3.shh' (probably a getter) to get historic messages\r\n\r\n#### Actual behaviour\r\nCurrently `RequestHistoricMessages` is only called in wnode client setup.\r\nwhy its not kept as part web3 apis ?\r\n\r\n#### code snippet \r\n\r\n```\r\n// send to specific node (skip PoW check)\r\n\tif len(req.TargetPeer) > 0 {\r\n\t\tn, err := enode.Parse(enode.ValidSchemes, req.TargetPeer)\r\n\t\tif err != nil {\r\n\t\t\treturn nil, fmt.Errorf(\"failed to parse target peer: %s\", err)\r\n\t\t}\r\n\t\terr = api.w.SendP2PMessage(n.ID().Bytes(), env)\r\n\t\tif err == nil {\r\n\t\t\thash := env.Hash()\r\n\t\t\tresult = hash[:]\r\n\t\t}\r\n\t\treturn result, err\r\n\t}\r\n```\r\n\r\ncan something be possible for `RequestHistoricMessages`\r\n```\r\n// send to specific node (skip PoW check)\r\n\tif len(req.TargetPeer) > 0 {\r\n\t\tn, err := enode.Parse(enode.ValidSchemes, req.TargetPeer)\r\n\t\tif err != nil {\r\n\t\t\treturn nil, fmt.Errorf(\"failed to parse target peer: %s\", err)\r\n\t\t}\r\n\t\terr = api.w.RequestHistoricMessages(n.ID().Bytes(), env)\r\n\t\tif err == nil {\r\n\t\t\thash := env.Hash()\r\n\t\t\tresult = hash[:]\r\n\t\t}\r\n\t\treturn result, err\r\n\t}\r\n```\r\n\r\n",
  "closed_by": {
    "login": "gballet",
    "id": 3272758,
    "node_id": "MDQ6VXNlcjMyNzI3NTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3272758?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gballet",
    "html_url": "https://github.com/gballet",
    "followers_url": "https://api.github.com/users/gballet/followers",
    "following_url": "https://api.github.com/users/gballet/following{/other_user}",
    "gists_url": "https://api.github.com/users/gballet/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gballet/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gballet/subscriptions",
    "organizations_url": "https://api.github.com/users/gballet/orgs",
    "repos_url": "https://api.github.com/users/gballet/repos",
    "events_url": "https://api.github.com/users/gballet/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gballet/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21314/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21314/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/683660224",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21314#issuecomment-683660224",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21314",
    "id": 683660224,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MzY2MDIyNA==",
    "user": {
      "login": "gballet",
      "id": 3272758,
      "node_id": "MDQ6VXNlcjMyNzI3NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3272758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gballet",
      "html_url": "https://github.com/gballet",
      "followers_url": "https://api.github.com/users/gballet/followers",
      "following_url": "https://api.github.com/users/gballet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gballet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gballet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gballet/subscriptions",
      "organizations_url": "https://api.github.com/users/gballet/orgs",
      "repos_url": "https://api.github.com/users/gballet/repos",
      "events_url": "https://api.github.com/users/gballet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gballet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-31T09:05:23Z",
    "updated_at": "2020-08-31T09:05:23Z",
    "author_association": "MEMBER",
    "body": "Whisper support is being removed from `geth` and being moved to [its own repository](github.com/ethereum/whisper). No action will therefore be taken and I'm closing the PR.\r\n\r\n`RequestHistoricMessages` is a convenience method used for retrieving messages from the mailserver. The mailserver code is only provided as an example and is not considered production code.\r\n\r\nIn the case you have your own, production-grade implementation of the mail server and want to recover the data, I suggest that you `import \"github.com/ethereum/whisper\"` in your code and expose your own RPC call from there.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/683660224/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
