{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24966",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24966/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24966/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24966/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/24966",
  "id": 1248441137,
  "node_id": "I_kwDOAOvK985KabMx",
  "number": 24966,
  "title": "Allow Zero gas price transactions (no baseFee) for permissioned networks",
  "user": {
    "login": "vdamle",
    "id": 5338861,
    "node_id": "MDQ6VXNlcjUzMzg4NjE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5338861?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vdamle",
    "html_url": "https://github.com/vdamle",
    "followers_url": "https://api.github.com/users/vdamle/followers",
    "following_url": "https://api.github.com/users/vdamle/following{/other_user}",
    "gists_url": "https://api.github.com/users/vdamle/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vdamle/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vdamle/subscriptions",
    "organizations_url": "https://api.github.com/users/vdamle/orgs",
    "repos_url": "https://api.github.com/users/vdamle/repos",
    "events_url": "https://api.github.com/users/vdamle/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vdamle/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2022-05-25T17:33:51Z",
  "updated_at": "2022-10-08T06:47:59Z",
  "closed_at": "2022-05-27T16:00:53Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# Rationale\r\n\r\n> Why should this feature exist?\r\n\r\nPermissioned chains are in use fairly widely. Most of these chains operate with a consensus mechanism such as Clique/POA, IBFT/QBFT (GoQuorum) and the clients allow **zero gas price transactions**. This works well in a pre-EIP1559 regime. However, EIP-1559 makes requirements and assumptions about transactions including a `baseFee` and this governs the rules for block validation, state transition and transaction inclusion which means that clients will [no longer mine transactions sent with zero gas price](https://github.com/ethereum/go-ethereum/blob/310f75163928f49151b668faee78f475a1da34ac/miner/worker.go#L1015-L1017). \r\n\r\n> What are the use-cases?\r\n\r\nThe primary use for the feature is in permissioned networks that operate on zero gas price transactions.\r\n\r\n# Implementation\r\n\r\n> Do you have ideas regarding the implementation of this feature?\r\n\r\nHere are two possible ways to support such chains in a post EIP-1559 world:\r\n\r\n* Do not include `londonBlock` in genesis config for new chains, or do not ever include `londonBlock` as a future block - The main concern I have with this approach is that there are other instances where the code assumes that having a block `B` in the genesis config presumes the presence of block `A` (where `A` <= `B` for when the hard fork was introduced on mainnet). So it seems very likely in the future that a future EIP that is added as a hard fork will presume that the chain is operating with `londonBlock` in effect -- or that the absence of `londonBlock` is an unexpected and invalid configuration which will result in bad blocks.\r\n\r\n* Add a chain configuration to `Clique` (IBFT/QBFT or any other pluggable consensus could choose to do something similar) that specifies that the chain shall not consider `baseFee` and use that to determine whether to require or ignore base fee for picking transactions to include in a block, state validation, gas refunds etc.\r\n\r\n> Are you willing to implement this feature?\r\n\r\nYes, I have a change that allows clients to accept and validate zero gas price transactions when running `clique/POA`.",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24966/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24966/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1139315083",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24966#issuecomment-1139315083",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24966",
    "id": 1139315083,
    "node_id": "IC_kwDOAOvK985D6JGL",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-27T06:12:00Z",
    "updated_at": "2022-05-27T06:12:00Z",
    "author_association": "MEMBER",
    "body": "I don't thunk such a change will ever be accepted into the Geth codebase. Our aim is to be an Ethereum client first. Since Ethereum introduced the notion of base fees and the related dynamics + opcode, developers building on top have the assumption that the `BASEFEE` exists in the EVM or that type 1 transactions can be sent from wallets. Even if Geth supported 0 as the base fee, it would mean code and tooling would need to be made aware that some networks can have this quirk. Long term this would be one more tweak to always tiptoe around whilst maintaining Geth.\r\n\r\nOpinions @holiman ?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1139315083/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1139598605",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24966#issuecomment-1139598605",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24966",
    "id": 1139598605,
    "node_id": "IC_kwDOAOvK985D7OUN",
    "user": {
      "login": "vdamle",
      "id": 5338861,
      "node_id": "MDQ6VXNlcjUzMzg4NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5338861?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vdamle",
      "html_url": "https://github.com/vdamle",
      "followers_url": "https://api.github.com/users/vdamle/followers",
      "following_url": "https://api.github.com/users/vdamle/following{/other_user}",
      "gists_url": "https://api.github.com/users/vdamle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vdamle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vdamle/subscriptions",
      "organizations_url": "https://api.github.com/users/vdamle/orgs",
      "repos_url": "https://api.github.com/users/vdamle/repos",
      "events_url": "https://api.github.com/users/vdamle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vdamle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-27T13:03:02Z",
    "updated_at": "2022-05-27T13:03:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thank you for your feedback, @karalabe . For consideration, I have raised a PR that implements the idea described. \r\n\r\nI see that currently https://github.com/ethereum/go-ethereum/blob/be9742721f56eb8bb7ebf4f6a03fb01b13a05408/params/config.go#L264-L269 indicates that `londonBlock` is not included in Clique as reference configuration. This lines up with the first option of `londonBlock` not being included/enabled. Is that a path/assumption that will be maintained over time?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1139598605/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1139738646",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24966#issuecomment-1139738646",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24966",
    "id": 1139738646,
    "node_id": "IC_kwDOAOvK985D7wgW",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-27T15:45:58Z",
    "updated_at": "2022-05-27T15:45:58Z",
    "author_association": "MEMBER",
    "body": "London is enabled in there.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1139738646/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1139739772",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24966#issuecomment-1139739772",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24966",
    "id": 1139739772,
    "node_id": "IC_kwDOAOvK985D7wx8",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-27T15:47:26Z",
    "updated_at": "2022-05-27T15:47:26Z",
    "author_association": "MEMBER",
    "body": "![](https://user-images.githubusercontent.com/129561/170733979-2e710bcd-3d12-433d-b7a9-a7e85107f4ed.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1139739772/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1139750223",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24966#issuecomment-1139750223",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24966",
    "id": 1139750223,
    "node_id": "IC_kwDOAOvK985D7zVP",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-27T16:00:53Z",
    "updated_at": "2022-05-27T16:00:53Z",
    "author_association": "MEMBER",
    "body": "Closing with https://github.com/ethereum/go-ethereum/pull/24982#issuecomment-1139750000",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1139750223/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1272245947",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24966#issuecomment-1272245947",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24966",
    "id": 1272245947,
    "node_id": "IC_kwDOAOvK985L1O67",
    "user": {
      "login": "giskook",
      "id": 5326600,
      "node_id": "MDQ6VXNlcjUzMjY2MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5326600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/giskook",
      "html_url": "https://github.com/giskook",
      "followers_url": "https://api.github.com/users/giskook/followers",
      "following_url": "https://api.github.com/users/giskook/following{/other_user}",
      "gists_url": "https://api.github.com/users/giskook/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/giskook/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/giskook/subscriptions",
      "organizations_url": "https://api.github.com/users/giskook/orgs",
      "repos_url": "https://api.github.com/users/giskook/repos",
      "events_url": "https://api.github.com/users/giskook/events{/privacy}",
      "received_events_url": "https://api.github.com/users/giskook/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-08T06:47:58Z",
    "updated_at": "2022-10-08T06:47:58Z",
    "author_association": "NONE",
    "body": "> * Do not include `londonBlock` in genesis config for new chains, or do not ever include `londonBlock` as a future block - The main concern I have with this approach is that there are other instances where the code assumes that having a block `B` in the genesis config presumes the presence of block `A` (where `A` <= `B` for when the hard fork was introduced on mainnet). So it seems very likely in the future that a future EIP that is added as a hard fork will presume that the chain is operating with `londonBlock` in effect -- or that the absence of `londonBlock` is an unexpected and invalid configuration which will result in bad blocks.\r\n\r\n@vdamle Hi, have you tried disable London block?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1272245947/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
