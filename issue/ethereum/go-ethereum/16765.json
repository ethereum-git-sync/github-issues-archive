{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16765",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16765/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16765/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16765/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/16765",
  "id": 324763472,
  "node_id": "MDU6SXNzdWUzMjQ3NjM0NzI=",
  "number": 16765,
  "title": "[feature request] getTransactionsOfAccount",
  "user": {
    "login": "paulvi",
    "id": 1614482,
    "node_id": "MDQ6VXNlcjE2MTQ0ODI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1614482?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulvi",
    "html_url": "https://github.com/paulvi",
    "followers_url": "https://api.github.com/users/paulvi/followers",
    "following_url": "https://api.github.com/users/paulvi/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulvi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulvi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulvi/subscriptions",
    "organizations_url": "https://api.github.com/users/paulvi/orgs",
    "repos_url": "https://api.github.com/users/paulvi/repos",
    "events_url": "https://api.github.com/users/paulvi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulvi/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    },
    {
      "id": 1141538240,
      "node_id": "MDU6TGFiZWwxMTQxNTM4MjQw",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/need:documentation",
      "name": "need:documentation",
      "color": "b4fcae",
      "default": false,
      "description": ""
    },
    {
      "id": 1486629004,
      "node_id": "MDU6TGFiZWwxNDg2NjI5MDA0",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/priority:2",
      "name": "priority:2",
      "color": "f76ac8",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2018-05-21T01:45:45Z",
  "updated_at": "2020-12-10T09:41:48Z",
  "closed_at": "2020-12-10T09:41:48Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Please implement (experimental) feature go get all transactions for an account.\r\n\r\nCurrently there is **getBalance** https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_getbalance  \r\nand **getTransactionCount** https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_gettransactioncount  \r\nBut to get full list of transaction for an account, one needs to read blocks one by one **getBlockByNumber**, and list and filter.\r\nTraversing through blockchain is slow, but making filtering client-side is even slower and creates a lot of unneeded serialization into JSON, socket communication etc.\r\n\r\nExperimental means that this API is subject to change,  \r\nespecially when becoming API for all ethereum clients, not only for `geth`\r\n\r\nOther idea is having a generic way to add any filter to be executing server side.  \r\nThat is instead of having specific API, extend API with string having JS function for filtering\r\n\"`function (transaction){ if  (transaction.from = \"someaddress\" || transaction.to == \"someaddress\"} \r\n{ return true } else { return false} }`\"\r\n\r\nIf such feature request should never be raised against geth, please point to exact place.",
  "closed_by": {
    "login": "ligi",
    "id": 111600,
    "node_id": "MDQ6VXNlcjExMTYwMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ligi",
    "html_url": "https://github.com/ligi",
    "followers_url": "https://api.github.com/users/ligi/followers",
    "following_url": "https://api.github.com/users/ligi/following{/other_user}",
    "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
    "organizations_url": "https://api.github.com/users/ligi/orgs",
    "repos_url": "https://api.github.com/users/ligi/repos",
    "events_url": "https://api.github.com/users/ligi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ligi/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16765/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16765/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/390585991",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16765#issuecomment-390585991",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16765",
    "id": 390585991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDU4NTk5MQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-21T08:17:24Z",
    "updated_at": "2018-05-21T08:17:24Z",
    "author_association": "MEMBER",
    "body": "How would you gather internal transactions with a fast synced node? This is the blocker issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/390585991/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/390897166",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16765#issuecomment-390897166",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16765",
    "id": 390897166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDg5NzE2Ng==",
    "user": {
      "login": "paulvi",
      "id": 1614482,
      "node_id": "MDQ6VXNlcjE2MTQ0ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1614482?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulvi",
      "html_url": "https://github.com/paulvi",
      "followers_url": "https://api.github.com/users/paulvi/followers",
      "following_url": "https://api.github.com/users/paulvi/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulvi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulvi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulvi/subscriptions",
      "organizations_url": "https://api.github.com/users/paulvi/orgs",
      "repos_url": "https://api.github.com/users/paulvi/repos",
      "events_url": "https://api.github.com/users/paulvi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulvi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-22T07:53:54Z",
    "updated_at": "2018-05-22T09:18:29Z",
    "author_association": "NONE",
    "body": "I don't really know what is \"internal transactions with a fast synced node\".  \r\nI guess in fast synch mode not all transactions are physically present locally.\r\nThat would mean that regardless whether to read just one transaction by hash/txid \r\nhttps://github.com/ethereum/wiki/wiki/JSON-RPC#eth_gettransactionbyhash or via this new proposed API, it will not be there, so it seems that is not really related.\r\n\r\nIf it is known (from state of storage) that fast synch mode was used, then user/application should do full synch before. (like getting full git clone from original shallow copy `git fetch --unshallow` )\r\nA request to get one transaction or a list of them, should fail quickly or return was is present with some warnings, but again this is matter of interaction style.  \r\nFor example, return JSON result may have range of blocks that are present and were scanned.\r\n\r\nThis issue is about convenient way to check account history.\r\n \r\nThe challenge I thought was that this request may be running for long time (several minutes from my tests),\r\nso maybe there should be way to set timeout or some progress updates to let user/app know that the request is still executing. But I think it should be done after initial API itself.\r\n\r\nThere is expectation that when running within blockchain engine, the request will execute much much faster,\r\ne.g. 10s for 1GB of data versus 10-30s for ~100MB I saw.  \r\nIf the smaller blockchain (or last blocks) can be within memory, it will super fast.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/390897166/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/401813075",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16765#issuecomment-401813075",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16765",
    "id": 401813075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTgxMzA3NQ==",
    "user": {
      "login": "ifastchain",
      "id": 36094108,
      "node_id": "MDQ6VXNlcjM2MDk0MTA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/36094108?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ifastchain",
      "html_url": "https://github.com/ifastchain",
      "followers_url": "https://api.github.com/users/ifastchain/followers",
      "following_url": "https://api.github.com/users/ifastchain/following{/other_user}",
      "gists_url": "https://api.github.com/users/ifastchain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ifastchain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ifastchain/subscriptions",
      "organizations_url": "https://api.github.com/users/ifastchain/orgs",
      "repos_url": "https://api.github.com/users/ifastchain/repos",
      "events_url": "https://api.github.com/users/ifastchain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ifastchain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-02T13:56:13Z",
    "updated_at": "2018-07-02T13:57:23Z",
    "author_association": "NONE",
    "body": "this is really needed feature. It can really make client to quickly fetch transactions for account",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/401813075/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/402613493",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16765#issuecomment-402613493",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16765",
    "id": 402613493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjYxMzQ5Mw==",
    "user": {
      "login": "paulvi",
      "id": 1614482,
      "node_id": "MDQ6VXNlcjE2MTQ0ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1614482?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulvi",
      "html_url": "https://github.com/paulvi",
      "followers_url": "https://api.github.com/users/paulvi/followers",
      "following_url": "https://api.github.com/users/paulvi/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulvi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulvi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulvi/subscriptions",
      "organizations_url": "https://api.github.com/users/paulvi/orgs",
      "repos_url": "https://api.github.com/users/paulvi/repos",
      "events_url": "https://api.github.com/users/paulvi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulvi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-05T05:53:14Z",
    "updated_at": "2018-07-05T05:53:14Z",
    "author_association": "NONE",
    "body": "Please vote +1 :+1:  on the 1st post above",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/402613493/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/508902080",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16765#issuecomment-508902080",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16765",
    "id": 508902080,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwODkwMjA4MA==",
    "user": {
      "login": "stale[bot]",
      "id": 26384082,
      "node_id": "MDM6Qm90MjYzODQwODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stale%5Bbot%5D",
      "html_url": "https://github.com/apps/stale",
      "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-07-06T06:42:07Z",
    "updated_at": "2019-07-06T06:42:07Z",
    "author_association": "NONE",
    "body": "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/508902080/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/511758261",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16765#issuecomment-511758261",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16765",
    "id": 511758261,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTc1ODI2MQ==",
    "user": {
      "login": "paulvi",
      "id": 1614482,
      "node_id": "MDQ6VXNlcjE2MTQ0ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1614482?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulvi",
      "html_url": "https://github.com/paulvi",
      "followers_url": "https://api.github.com/users/paulvi/followers",
      "following_url": "https://api.github.com/users/paulvi/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulvi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulvi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulvi/subscriptions",
      "organizations_url": "https://api.github.com/users/paulvi/orgs",
      "repos_url": "https://api.github.com/users/paulvi/repos",
      "events_url": "https://api.github.com/users/paulvi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulvi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-16T10:22:08Z",
    "updated_at": "2019-07-16T10:22:08Z",
    "author_association": "NONE",
    "body": "up, don't close. This is feature request",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/511758261/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/634628772",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16765#issuecomment-634628772",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16765",
    "id": 634628772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNDYyODc3Mg==",
    "user": {
      "login": "DeRain",
      "id": 3999180,
      "node_id": "MDQ6VXNlcjM5OTkxODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3999180?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DeRain",
      "html_url": "https://github.com/DeRain",
      "followers_url": "https://api.github.com/users/DeRain/followers",
      "following_url": "https://api.github.com/users/DeRain/following{/other_user}",
      "gists_url": "https://api.github.com/users/DeRain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DeRain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DeRain/subscriptions",
      "organizations_url": "https://api.github.com/users/DeRain/orgs",
      "repos_url": "https://api.github.com/users/DeRain/repos",
      "events_url": "https://api.github.com/users/DeRain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DeRain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-27T12:32:50Z",
    "updated_at": "2020-05-27T12:32:50Z",
    "author_association": "NONE",
    "body": "Hi all. Any updates on that?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/634628772/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/634690987",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/16765#issuecomment-634690987",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/16765",
    "id": 634690987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNDY5MDk4Nw==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-27T14:16:59Z",
    "updated_at": "2020-05-27T14:16:59Z",
    "author_association": "MEMBER",
    "body": "There's no way to index internal transactions without executing all the blocks one by one.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/634690987/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
