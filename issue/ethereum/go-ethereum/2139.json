{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/2139",
  "id": 127821248,
  "node_id": "MDU6SXNzdWUxMjc4MjEyNDg=",
  "number": 2139,
  "title": "TxByPriceAndNonce comparison is logically incorrect",
  "user": {
    "login": "pnomarev",
    "id": 9689862,
    "node_id": "MDQ6VXNlcjk2ODk4NjI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9689862?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pnomarev",
    "html_url": "https://github.com/pnomarev",
    "followers_url": "https://api.github.com/users/pnomarev/followers",
    "following_url": "https://api.github.com/users/pnomarev/following{/other_user}",
    "gists_url": "https://api.github.com/users/pnomarev/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pnomarev/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pnomarev/subscriptions",
    "organizations_url": "https://api.github.com/users/pnomarev/orgs",
    "repos_url": "https://api.github.com/users/pnomarev/repos",
    "events_url": "https://api.github.com/users/pnomarev/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pnomarev/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    },
    {
      "id": 202012689,
      "node_id": "MDU6TGFiZWwyMDIwMTI2ODk=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/area:core",
      "name": "area:core",
      "color": "fbca04",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 20,
  "created_at": "2016-01-21T01:01:02Z",
  "updated_at": "2016-01-31T15:16:30Z",
  "closed_at": "2016-01-31T15:16:26Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "TxByPriceAndNonce : core/types/transaction.go\n\nSay, I have three transactions in the queue with the same price:\nA: from account x, nonce=1\nB: from account x, nonce=2\nC: from account y, nonce=3\n\naccording to the comparison function:\nA<B = true (comparing by nonce)\nB<C = false (comparing by price)\nA<C = false (comparing by price)\n\nIf the purpose if to \"order by price, nonce\", then the code should be changed accordingly. Otherwise the result of sort is unpredictable.\n\n```\nfunc (s TxByPriceAndNonce) Less(i, j int) bool {\n    comparedByPrice := s.Transactions[i].data.Price.Cmp(s.Transactions[j].data.Price)\n\n    if comparedByPrice == 0 {\n        return s.Transactions[i].data.AccountNonce < s.Transactions[j].data.AccountNonce\n    }\n\n    return comparedByPrice > 0\n}\n```\n",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173419362",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2139#issuecomment-173419362",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139",
    "id": 173419362,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzQxOTM2Mg==",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T01:14:28Z",
    "updated_at": "2016-01-21T01:15:24Z",
    "author_association": "MEMBER",
    "body": "Adjacent account nonces need to be favoured over price **within their own set**. To further detail the above scenario:\n\n```\nA: from account x, nonce=1, gp=4\nB: from account x, nonce=2, gp=2\nC: from account y, nonce=3, gp=4\n```\n\nThis would be included as `[A, C, B]`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173419362/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173428933",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2139#issuecomment-173428933",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139",
    "id": 173428933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzQyODkzMw==",
    "user": {
      "login": "pnomarev",
      "id": 9689862,
      "node_id": "MDQ6VXNlcjk2ODk4NjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9689862?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pnomarev",
      "html_url": "https://github.com/pnomarev",
      "followers_url": "https://api.github.com/users/pnomarev/followers",
      "following_url": "https://api.github.com/users/pnomarev/following{/other_user}",
      "gists_url": "https://api.github.com/users/pnomarev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pnomarev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pnomarev/subscriptions",
      "organizations_url": "https://api.github.com/users/pnomarev/orgs",
      "repos_url": "https://api.github.com/users/pnomarev/repos",
      "events_url": "https://api.github.com/users/pnomarev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pnomarev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T02:15:03Z",
    "updated_at": "2016-01-21T02:15:03Z",
    "author_association": "NONE",
    "body": "Ah, right. Probably gp for A and B should be swapped? (the higher price - the better for miner)\n\n```\nA: from account x, nonce=1, gp=2\nB: from account x, nonce=2, gp=4\nC: from account y, nonce=3, gp=4\n```\n\nThe problem in current implementation is still persist.\n\n```\n    key1, _ := crypto.GenerateKey()\n    key2, _ := crypto.GenerateKey()\n\n    var testTransactions types.Transactions\n\n    for idx := uint64(1); idx<uint64(5); idx++ {\n        tx1 := transaction(idx, big.NewInt(100), key1)\n        tx2 := transaction(idx, big.NewInt(100), key2)\n\n        testTransactions = append(testTransactions, tx1)\n        testTransactions = append(testTransactions, tx2)\n    }\n\n    sort.Sort(types.TxByPriceAndNonce{testTransactions})\n```\n\nI would expect to see the transactions ordered by nonces across the array. However the result is not  correctly ordered:\n\n```\nfrom=29f4da0ecdb8e4b4fb399a9077a44b2a8af293bc, AccountNonce=1\nfrom=29f4da0ecdb8e4b4fb399a9077a44b2a8af293bc, AccountNonce=2\nfrom=2f4e71aa83051eeed0c500caef6656622ef31a4a, AccountNonce=2\nfrom=2f4e71aa83051eeed0c500caef6656622ef31a4a, AccountNonce=3\nfrom=29f4da0ecdb8e4b4fb399a9077a44b2a8af293bc, AccountNonce=3\nfrom=2f4e71aa83051eeed0c500caef6656622ef31a4a, AccountNonce=1\nfrom=2f4e71aa83051eeed0c500caef6656622ef31a4a, AccountNonce=4\nfrom=29f4da0ecdb8e4b4fb399a9077a44b2a8af293bc, AccountNonce=4\n```\n\nAs you can see the transaction with nonce=1 from account=2f4e71aa83051eeed0c500caef6656622ef31a4a appears after transaction with nonce=2 from the same account\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173428933/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173474474",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2139#issuecomment-173474474",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139",
    "id": 173474474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzQ3NDQ3NA==",
    "user": {
      "login": "pnomarev",
      "id": 9689862,
      "node_id": "MDQ6VXNlcjk2ODk4NjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9689862?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pnomarev",
      "html_url": "https://github.com/pnomarev",
      "followers_url": "https://api.github.com/users/pnomarev/followers",
      "following_url": "https://api.github.com/users/pnomarev/following{/other_user}",
      "gists_url": "https://api.github.com/users/pnomarev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pnomarev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pnomarev/subscriptions",
      "organizations_url": "https://api.github.com/users/pnomarev/orgs",
      "repos_url": "https://api.github.com/users/pnomarev/repos",
      "events_url": "https://api.github.com/users/pnomarev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pnomarev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T06:37:05Z",
    "updated_at": "2016-01-21T06:37:05Z",
    "author_association": "NONE",
    "body": "Here is even simpler repeatable example:\n\n```\nfunc transaction(nonce uint64, gaslimit *big.Int, gasprice *big.Int, key *ecdsa.PrivateKey) *types.Transaction {\n    tx, _ := types.NewTransaction(nonce, common.Address{}, big.NewInt(100), gaslimit, gasprice, nil).SignECDSA(key)\n    return tx\n}\n-------------------\n    testTransactions = append(testTransactions, transaction(1, big.NewInt(100), big.NewInt(5), key1))\n    testTransactions = append(testTransactions, transaction(2, big.NewInt(100), big.NewInt(5), key1))\n    testTransactions = append(testTransactions, transaction(3, big.NewInt(100), big.NewInt(5), key1))\n    testTransactions = append(testTransactions, transaction(4, big.NewInt(100), big.NewInt(10), key1))\n\n    testTransactions = append(testTransactions, transaction(1, big.NewInt(100), big.NewInt(7), key2))\n    testTransactions = append(testTransactions, transaction(2, big.NewInt(100), big.NewInt(7), key2))\n    testTransactions = append(testTransactions, transaction(3, big.NewInt(100), big.NewInt(7), key2))\n    testTransactions = append(testTransactions, transaction(4, big.NewInt(100), big.NewInt(7), key2))\n```\n\nresult of 'sort.Sort(types.TxByPriceAndNonce{testTransactions})' : \n\n```\nfrom=93c943759244a669292da515e385ade5363b91e6, AccountNonce=4, Price=10\nfrom=75d640e5d7fcbb1a57756c234ead7f9d8dd20f04, AccountNonce=1, Price=7\nfrom=75d640e5d7fcbb1a57756c234ead7f9d8dd20f04, AccountNonce=2, Price=7\nfrom=75d640e5d7fcbb1a57756c234ead7f9d8dd20f04, AccountNonce=3, Price=7\nfrom=75d640e5d7fcbb1a57756c234ead7f9d8dd20f04, AccountNonce=4, Price=7\nfrom=93c943759244a669292da515e385ade5363b91e6, AccountNonce=1, Price=5\nfrom=93c943759244a669292da515e385ade5363b91e6, AccountNonce=2, Price=5\nfrom=93c943759244a669292da515e385ade5363b91e6, AccountNonce=3, Price=5\n```\n\nIt's clear that the TxByPriceAndNonce comparator violates the basic principle: if A<B and B<C, then A<C.\nIn the above sorted result, every transaction is \"less\" then the next one, therefore the first one is \"less\" then the last one. Which contradicts to the comparator.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173474474/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173527386",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2139#issuecomment-173527386",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139",
    "id": 173527386,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzUyNzM4Ng==",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T10:21:34Z",
    "updated_at": "2016-01-21T10:21:34Z",
    "author_association": "MEMBER",
    "body": "> Ah, right. Probably gp for A and B should be swapped? (the higher price - the better for miner)\n\nPrecisely not because that would violate a basic rule of accounting. Nonces need to be subsequent and need to be included in that order **at all time**.\n\nHere's a basic test that will demonstrate the order:\n\n``` go\nfunc TestOrder(t *testing.T) {\n    key1, _ := crypto.GenerateKey()\n    addr1 := crypto.PubkeyToAddress(key1.PublicKey)\n    key2, _ := crypto.GenerateKey()\n    addr2 := crypto.PubkeyToAddress(key2.PublicKey)\n    key3, _ := crypto.GenerateKey()\n\n    txA, _ := NewTransaction(0, addr2, new(big.Int), new(big.Int), big.NewInt(4), nil).SignECDSA(key1)\n    txB, _ := NewTransaction(1, addr2, new(big.Int), new(big.Int), big.NewInt(2), nil).SignECDSA(key1)\n    txC, _ := NewTransaction(2, addr2, new(big.Int), new(big.Int), big.NewInt(5), nil).SignECDSA(key1)\n    txD, _ := NewTransaction(0, addr1, new(big.Int), new(big.Int), big.NewInt(4), nil).SignECDSA(key2)\n    txE, _ := NewTransaction(0, addr1, new(big.Int), new(big.Int), big.NewInt(6), nil).SignECDSA(key3)\n\n    transactions := Transactions{txA, txB, txC, txD, txE}\n    sort.Sort(TxByPriceAndNonce{transactions})\n\n    for _, tx := range transactions {\n        from, _ := tx.From()\n        fmt.Printf(\"A=%x N=%v GP=%v\\n\", from, tx.Nonce(), tx.GasPrice())\n    }\n}\n```\n\nWhich will result in\n\n```\nA=b1c00741f094559d07f3c391f6f7834e071e719a N=0 GP=6\nA=b2dc7bc7ca7d680c3fee304f243674c4a51601a4 N=0 GP=4\nA=b2dc7bc7ca7d680c3fee304f243674c4a51601a4 N=1 GP=2\nA=b2dc7bc7ca7d680c3fee304f243674c4a51601a4 N=2 GP=5\nA=2d29d94ffa6cf0ca232b750508d65669d602f829 N=0 GP=4\n```\n\nWe reward transactions that are send in batches (e.g. those that can fit in to one block).\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173527386/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173627231",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2139#issuecomment-173627231",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139",
    "id": 173627231,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzYyNzIzMQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T16:36:39Z",
    "updated_at": "2016-01-21T17:01:56Z",
    "author_association": "MEMBER",
    "body": "I think there's a legitimate issue here. Quicksort cannot be used to sort according to two criteria (price and nonce, and even then, nonces are only sporadically compared), so certain invocations indeed produce bad results, depending on the comparisons made during sorting. It's because quicksort makes only a relatively few comparisons and assumes a full ordering of elements, but in out case, transactions do not have a full ordering, as we only compare nonces within the same account.\n\nThe example written out in full code: https://gist.github.com/karalabe/bb32ae9a66480e926f13\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173627231/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173640884",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2139#issuecomment-173640884",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139",
    "id": 173640884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzY0MDg4NA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T17:12:57Z",
    "updated_at": "2016-01-21T17:13:20Z",
    "author_association": "MEMBER",
    "body": "We would need a custom sort to fix this. One that sorts all transactions by nonce into a map associated with individual accounts, and then merge the transactions from the different accounts into one by price, always only comparing the head transaction from each sorted list.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173640884/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173646347",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2139#issuecomment-173646347",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139",
    "id": 173646347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzY0NjM0Nw==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T17:33:57Z",
    "updated_at": "2016-01-21T17:33:57Z",
    "author_association": "MEMBER",
    "body": "You can also do\n\nsort.Sort(txByNonce(txs))\nsort.Stable(txByPrice(txs))\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173646347/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173648367",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2139#issuecomment-173648367",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139",
    "id": 173648367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzY0ODM2Nw==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T17:38:05Z",
    "updated_at": "2016-01-21T17:38:05Z",
    "author_association": "MEMBER",
    "body": "Nope, because that would preffer < nonce globally.\nOn Jan 21, 2016 7:34 PM, \"Felix Lange\" notifications@github.com wrote:\n\n> You can also do\n> \n> sort.Sort(txByNonce(txs))\n> sort.Stable(txByPrice(txs))\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ethereum/go-ethereum/issues/2139#issuecomment-173646347\n> .\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173648367/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173650863",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2139#issuecomment-173650863",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139",
    "id": 173650863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzY1MDg2Mw==",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T17:45:50Z",
    "updated_at": "2016-01-21T17:45:50Z",
    "author_association": "MEMBER",
    "body": "It would be sort price, sort nonce\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173650863/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173652089",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2139#issuecomment-173652089",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139",
    "id": 173652089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzY1MjA4OQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T17:50:36Z",
    "updated_at": "2016-01-21T17:50:36Z",
    "author_association": "MEMBER",
    "body": "But if you don't sort the nonce globally, only per account, then there\nisn't a total order and they will produce invalid results :) Yes, i tried\nit, but maybe I'm wrong? I think still think we need a per account nonce\nsort first, then a heap based merge.\nOn Jan 21, 2016 7:46 PM, \"Jeffrey Wilcke\" notifications@github.com wrote:\n\n> It would be sort price, sort nonce\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ethereum/go-ethereum/issues/2139#issuecomment-173650863\n> .\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173652089/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173653216",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2139#issuecomment-173653216",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139",
    "id": 173653216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzY1MzIxNg==",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T17:54:48Z",
    "updated_at": "2016-01-21T17:54:48Z",
    "author_association": "MEMBER",
    "body": "Global nonce sort will work but isn't ideal. Merge would be idea\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173653216/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173854451",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2139#issuecomment-173854451",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139",
    "id": 173854451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Mzg1NDQ1MQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-22T09:05:39Z",
    "updated_at": "2016-01-22T09:05:39Z",
    "author_association": "MEMBER",
    "body": "Here's a test to repro the error and catch all the inconsistencies that should not be there. Quicksort pretty much screws up the order spectacularly :D I think the reason we didn't catch this is because irrelevant of the ordering, there are always some transactions that can actually go through, which will change the order in the next iteration; so after a while, all will manage to pass. Also this issue only surfaces when there are many transactions from many accounts, which is quite rare currently.\n\n``` go\n// Tests that transactions can be correctly sorted according to their price in\n// decreasing order, but at the same time with increasing nonces when issued by\n// the same account.\nfunc TestTransactionPriceNonceSort(t *testing.T) {\n    // Generate a batch of accounts to start with\n    keys := make([]*ecdsa.PrivateKey, 5)\n    for i := 0; i < len(keys); i++ {\n        keys[i], _ = crypto.GenerateKey()\n    }\n    // Generate a batch of transactions with overlapping values, but shifted nonces\n    txs := []*Transaction{}\n    for start, key := range keys {\n        for i := 0; i < 5; i++ {\n            tx, _ := NewTransaction(uint64(start+i), common.Address{}, big.NewInt(100), big.NewInt(100), big.NewInt(int64(start+i)), nil).SignECDSA(key)\n            txs = append(txs, tx)\n        }\n    }\n    // Sort the transactions and cross check the nonce ordering\n    sort.Sort(TxByPriceAndNonce{txs})\n    for i, txi := range txs {\n        fromi, _ := txi.From()\n\n        // Make sure the nonce order is valid\n        for j, txj := range txs[i+1:] {\n            fromj, _ := txj.From()\n\n            if fromi == fromj && txi.Nonce() > txj.Nonce() {\n                t.Errorf(\"invalid nonce ordering: tx #%d (A=%x N=%v) < tx #%d (A=%x N=%v)\", i, fromi[:4], txi.Nonce(), i+j, fromj[:4], txj.Nonce())\n            }\n        }\n        // Find the previous and next nonce of this account\n        prev, next := i-1, i+1\n        for j := i - 1; j >= 0; j-- {\n            if fromj, _ := txs[j].From(); fromi == fromj {\n                prev = j\n                break\n            }\n        }\n        for j := i + 1; j < len(txs); j++ {\n            if fromj, _ := txs[j].From(); fromi == fromj {\n                next = j\n                break\n            }\n        }\n        // Make sure that in between the neighbor nonces, the transaction is correctly positioned price wise\n        for j := prev + 1; j < next; j++ {\n            fromj, _ := txs[j].From()\n            if j < i && txs[j].GasPrice().Cmp(txi.GasPrice()) < 0 {\n                t.Errorf(\"invalid gasprice ordering: tx #%d (A=%x P=%v) < tx #%d (A=%x P=%v)\", j, fromj[:4], txs[j].GasPrice(), i, fromi[:4], txi.GasPrice())\n            }\n            if j > i && txs[j].GasPrice().Cmp(txi.GasPrice()) > 0 {\n                t.Errorf(\"invalid gasprice ordering: tx #%d (A=%x P=%v) > tx #%d (A=%x P=%v)\", j, fromj[:4], txs[j].GasPrice(), i, fromi[:4], txi.GasPrice())\n            }\n        }\n    }\n}\n```\n\n```\n--- FAIL: TestTransactionPriceNonceSort (0.01s)\n    transaction_test.go:149: invalid nonce ordering: tx #0 (A=64ba7325 N=8) < tx #2 (A=64ba7325 N=6)\n    transaction_test.go:149: invalid nonce ordering: tx #0 (A=64ba7325 N=8) < tx #3 (A=64ba7325 N=7)\n    transaction_test.go:149: invalid nonce ordering: tx #0 (A=64ba7325 N=8) < tx #5 (A=64ba7325 N=5)\n    transaction_test.go:149: invalid nonce ordering: tx #0 (A=64ba7325 N=8) < tx #13 (A=64ba7325 N=4)\n    transaction_test.go:149: invalid nonce ordering: tx #1 (A=df532874 N=6) < tx #6 (A=df532874 N=5)\n    transaction_test.go:149: invalid nonce ordering: tx #1 (A=df532874 N=6) < tx #12 (A=df532874 N=4)\n    transaction_test.go:149: invalid nonce ordering: tx #1 (A=df532874 N=6) < tx #16 (A=df532874 N=3)\n    transaction_test.go:149: invalid nonce ordering: tx #2 (A=df532874 N=7) < tx #6 (A=df532874 N=5)\n    transaction_test.go:149: invalid nonce ordering: tx #2 (A=df532874 N=7) < tx #12 (A=df532874 N=4)\n    transaction_test.go:149: invalid nonce ordering: tx #2 (A=df532874 N=7) < tx #16 (A=df532874 N=3)\n    transaction_test.go:149: invalid nonce ordering: tx #3 (A=64ba7325 N=6) < tx #5 (A=64ba7325 N=5)\n    transaction_test.go:149: invalid nonce ordering: tx #3 (A=64ba7325 N=6) < tx #13 (A=64ba7325 N=4)\n    transaction_test.go:149: invalid nonce ordering: tx #4 (A=64ba7325 N=7) < tx #5 (A=64ba7325 N=5)\n    transaction_test.go:149: invalid nonce ordering: tx #4 (A=64ba7325 N=7) < tx #13 (A=64ba7325 N=4)\n    transaction_test.go:149: invalid nonce ordering: tx #5 (A=fcadf686 N=5) < tx #11 (A=fcadf686 N=4)\n    transaction_test.go:149: invalid nonce ordering: tx #5 (A=fcadf686 N=5) < tx #17 (A=fcadf686 N=3)\n    transaction_test.go:149: invalid nonce ordering: tx #5 (A=fcadf686 N=5) < tx #19 (A=fcadf686 N=2)\n    transaction_test.go:149: invalid nonce ordering: tx #5 (A=fcadf686 N=5) < tx #23 (A=fcadf686 N=1)\n    transaction_test.go:149: invalid nonce ordering: tx #6 (A=64ba7325 N=5) < tx #13 (A=64ba7325 N=4)\n    transaction_test.go:149: invalid nonce ordering: tx #7 (A=df532874 N=5) < tx #12 (A=df532874 N=4)\n    transaction_test.go:149: invalid nonce ordering: tx #7 (A=df532874 N=5) < tx #16 (A=df532874 N=3)\n    transaction_test.go:149: invalid nonce ordering: tx #11 (A=0834844f N=4) < tx #18 (A=0834844f N=3)\n    transaction_test.go:149: invalid nonce ordering: tx #11 (A=0834844f N=4) < tx #20 (A=0834844f N=0)\n    transaction_test.go:149: invalid nonce ordering: tx #11 (A=0834844f N=4) < tx #21 (A=0834844f N=1)\n    transaction_test.go:149: invalid nonce ordering: tx #11 (A=0834844f N=4) < tx #22 (A=0834844f N=2)\n    transaction_test.go:173: invalid gasprice ordering: tx #15 (A=63d9f865 P=5) > tx #11 (A=0834844f P=4)\n    transaction_test.go:173: invalid gasprice ordering: tx #16 (A=63d9f865 P=6) > tx #11 (A=0834844f P=4)\n    transaction_test.go:149: invalid nonce ordering: tx #12 (A=fcadf686 N=4) < tx #17 (A=fcadf686 N=3)\n    transaction_test.go:149: invalid nonce ordering: tx #12 (A=fcadf686 N=4) < tx #19 (A=fcadf686 N=2)\n    transaction_test.go:149: invalid nonce ordering: tx #12 (A=fcadf686 N=4) < tx #23 (A=fcadf686 N=1)\n    transaction_test.go:170: invalid gasprice ordering: tx #8 (A=63d9f865 P=2) < tx #12 (A=fcadf686 P=4)\n    transaction_test.go:170: invalid gasprice ordering: tx #9 (A=63d9f865 P=3) < tx #12 (A=fcadf686 P=4)\n    transaction_test.go:173: invalid gasprice ordering: tx #15 (A=63d9f865 P=5) > tx #12 (A=fcadf686 P=4)\n    transaction_test.go:173: invalid gasprice ordering: tx #16 (A=63d9f865 P=6) > tx #12 (A=fcadf686 P=4)\n    transaction_test.go:149: invalid nonce ordering: tx #13 (A=df532874 N=4) < tx #16 (A=df532874 N=3)\n    transaction_test.go:170: invalid gasprice ordering: tx #8 (A=63d9f865 P=2) < tx #13 (A=df532874 P=4)\n    transaction_test.go:170: invalid gasprice ordering: tx #9 (A=63d9f865 P=3) < tx #13 (A=df532874 P=4)\n    transaction_test.go:173: invalid gasprice ordering: tx #15 (A=63d9f865 P=5) > tx #13 (A=df532874 P=4)\n    transaction_test.go:173: invalid gasprice ordering: tx #16 (A=63d9f865 P=6) > tx #13 (A=df532874 P=4)\n    transaction_test.go:170: invalid gasprice ordering: tx #8 (A=63d9f865 P=2) < tx #14 (A=64ba7325 P=4)\n    transaction_test.go:170: invalid gasprice ordering: tx #9 (A=63d9f865 P=3) < tx #14 (A=64ba7325 P=4)\n    transaction_test.go:170: invalid gasprice ordering: tx #11 (A=0834844f P=4) < tx #15 (A=63d9f865 P=5)\n    transaction_test.go:170: invalid gasprice ordering: tx #12 (A=fcadf686 P=4) < tx #15 (A=63d9f865 P=5)\n    transaction_test.go:170: invalid gasprice ordering: tx #13 (A=df532874 P=4) < tx #15 (A=63d9f865 P=5)\n    transaction_test.go:170: invalid gasprice ordering: tx #14 (A=64ba7325 P=4) < tx #15 (A=63d9f865 P=5)\n    transaction_test.go:149: invalid nonce ordering: tx #18 (A=fcadf686 N=3) < tx #19 (A=fcadf686 N=2)\n    transaction_test.go:149: invalid nonce ordering: tx #18 (A=fcadf686 N=3) < tx #23 (A=fcadf686 N=1)\n    transaction_test.go:149: invalid nonce ordering: tx #19 (A=0834844f N=3) < tx #20 (A=0834844f N=0)\n    transaction_test.go:149: invalid nonce ordering: tx #19 (A=0834844f N=3) < tx #21 (A=0834844f N=1)\n    transaction_test.go:149: invalid nonce ordering: tx #19 (A=0834844f N=3) < tx #22 (A=0834844f N=2)\n    transaction_test.go:149: invalid nonce ordering: tx #20 (A=fcadf686 N=2) < tx #23 (A=fcadf686 N=1)\n    transaction_test.go:170: invalid gasprice ordering: tx #21 (A=0834844f P=0) < tx #24 (A=fcadf686 P=1)\nFAIL\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173854451/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173855043",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2139#issuecomment-173855043",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139",
    "id": 173855043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Mzg1NTA0Mw==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-22T09:09:10Z",
    "updated_at": "2016-01-22T09:09:25Z",
    "author_association": "MEMBER",
    "body": "@fjl Your proposal fails with:\n\n```\n    transaction_test.go:151: invalid nonce ordering: tx #0 (A=8bc41693 N=8) < tx #0 (A=8bc41693 N=7)\n    transaction_test.go:151: invalid nonce ordering: tx #0 (A=8bc41693 N=8) < tx #4 (A=8bc41693 N=6)\n    transaction_test.go:151: invalid nonce ordering: tx #0 (A=8bc41693 N=8) < tx #5 (A=8bc41693 N=5)\n    transaction_test.go:151: invalid nonce ordering: tx #0 (A=8bc41693 N=8) < tx #13 (A=8bc41693 N=4)\n    transaction_test.go:151: invalid nonce ordering: tx #1 (A=8bc41693 N=7) < tx #4 (A=8bc41693 N=6)\n    transaction_test.go:151: invalid nonce ordering: tx #1 (A=8bc41693 N=7) < tx #5 (A=8bc41693 N=5)\n    transaction_test.go:151: invalid nonce ordering: tx #1 (A=8bc41693 N=7) < tx #13 (A=8bc41693 N=4)\n    transaction_test.go:151: invalid nonce ordering: tx #2 (A=c078742b N=7) < tx #3 (A=c078742b N=6)\n    transaction_test.go:151: invalid nonce ordering: tx #2 (A=c078742b N=7) < tx #7 (A=c078742b N=5)\n    transaction_test.go:151: invalid nonce ordering: tx #2 (A=c078742b N=7) < tx #12 (A=c078742b N=4)\n    transaction_test.go:151: invalid nonce ordering: tx #2 (A=c078742b N=7) < tx #14 (A=c078742b N=3)\n    transaction_test.go:151: invalid nonce ordering: tx #3 (A=3e411f6c N=6) < tx #8 (A=3e411f6c N=5)\n    transaction_test.go:151: invalid nonce ordering: tx #3 (A=3e411f6c N=6) < tx #9 (A=3e411f6c N=4)\n    transaction_test.go:151: invalid nonce ordering: tx #3 (A=3e411f6c N=6) < tx #17 (A=3e411f6c N=3)\n    transaction_test.go:151: invalid nonce ordering: tx #3 (A=3e411f6c N=6) < tx #18 (A=3e411f6c N=2)\n    transaction_test.go:151: invalid nonce ordering: tx #4 (A=c078742b N=6) < tx #7 (A=c078742b N=5)\n    transaction_test.go:151: invalid nonce ordering: tx #4 (A=c078742b N=6) < tx #12 (A=c078742b N=4)\n    transaction_test.go:151: invalid nonce ordering: tx #4 (A=c078742b N=6) < tx #14 (A=c078742b N=3)\n    transaction_test.go:151: invalid nonce ordering: tx #5 (A=8bc41693 N=6) < tx #5 (A=8bc41693 N=5)\n    transaction_test.go:151: invalid nonce ordering: tx #5 (A=8bc41693 N=6) < tx #13 (A=8bc41693 N=4)\n    transaction_test.go:151: invalid nonce ordering: tx #6 (A=8bc41693 N=5) < tx #13 (A=8bc41693 N=4)\n    transaction_test.go:151: invalid nonce ordering: tx #7 (A=3008ac02 N=5) < tx #11 (A=3008ac02 N=4)\n    transaction_test.go:151: invalid nonce ordering: tx #7 (A=3008ac02 N=5) < tx #15 (A=3008ac02 N=3)\n    transaction_test.go:151: invalid nonce ordering: tx #7 (A=3008ac02 N=5) < tx #19 (A=3008ac02 N=2)\n    transaction_test.go:151: invalid nonce ordering: tx #7 (A=3008ac02 N=5) < tx #22 (A=3008ac02 N=1)\n    transaction_test.go:151: invalid nonce ordering: tx #8 (A=c078742b N=5) < tx #12 (A=c078742b N=4)\n    transaction_test.go:151: invalid nonce ordering: tx #8 (A=c078742b N=5) < tx #14 (A=c078742b N=3)\n    transaction_test.go:151: invalid nonce ordering: tx #9 (A=3e411f6c N=5) < tx #9 (A=3e411f6c N=4)\n    transaction_test.go:151: invalid nonce ordering: tx #9 (A=3e411f6c N=5) < tx #17 (A=3e411f6c N=3)\n    transaction_test.go:151: invalid nonce ordering: tx #9 (A=3e411f6c N=5) < tx #18 (A=3e411f6c N=2)\n    transaction_test.go:151: invalid nonce ordering: tx #10 (A=3e411f6c N=4) < tx #17 (A=3e411f6c N=3)\n    transaction_test.go:151: invalid nonce ordering: tx #10 (A=3e411f6c N=4) < tx #18 (A=3e411f6c N=2)\n    transaction_test.go:151: invalid nonce ordering: tx #11 (A=ce0e20a6 N=4) < tx #16 (A=ce0e20a6 N=3)\n    transaction_test.go:151: invalid nonce ordering: tx #11 (A=ce0e20a6 N=4) < tx #20 (A=ce0e20a6 N=2)\n    transaction_test.go:151: invalid nonce ordering: tx #11 (A=ce0e20a6 N=4) < tx #21 (A=ce0e20a6 N=1)\n    transaction_test.go:151: invalid nonce ordering: tx #11 (A=ce0e20a6 N=4) < tx #23 (A=ce0e20a6 N=0)\n    transaction_test.go:151: invalid nonce ordering: tx #12 (A=3008ac02 N=4) < tx #15 (A=3008ac02 N=3)\n    transaction_test.go:151: invalid nonce ordering: tx #12 (A=3008ac02 N=4) < tx #19 (A=3008ac02 N=2)\n    transaction_test.go:151: invalid nonce ordering: tx #12 (A=3008ac02 N=4) < tx #22 (A=3008ac02 N=1)\n    transaction_test.go:151: invalid nonce ordering: tx #13 (A=c078742b N=4) < tx #14 (A=c078742b N=3)\n    transaction_test.go:151: invalid nonce ordering: tx #16 (A=3008ac02 N=3) < tx #19 (A=3008ac02 N=2)\n    transaction_test.go:151: invalid nonce ordering: tx #16 (A=3008ac02 N=3) < tx #22 (A=3008ac02 N=1)\n    transaction_test.go:151: invalid nonce ordering: tx #17 (A=ce0e20a6 N=3) < tx #20 (A=ce0e20a6 N=2)\n    transaction_test.go:151: invalid nonce ordering: tx #17 (A=ce0e20a6 N=3) < tx #21 (A=ce0e20a6 N=1)\n    transaction_test.go:151: invalid nonce ordering: tx #17 (A=ce0e20a6 N=3) < tx #23 (A=ce0e20a6 N=0)\n    transaction_test.go:151: invalid nonce ordering: tx #18 (A=3e411f6c N=3) < tx #18 (A=3e411f6c N=2)\n    transaction_test.go:151: invalid nonce ordering: tx #20 (A=3008ac02 N=2) < tx #22 (A=3008ac02 N=1)\n    transaction_test.go:151: invalid nonce ordering: tx #21 (A=ce0e20a6 N=2) < tx #21 (A=ce0e20a6 N=1)\n    transaction_test.go:151: invalid nonce ordering: tx #21 (A=ce0e20a6 N=2) < tx #23 (A=ce0e20a6 N=0)\n    transaction_test.go:151: invalid nonce ordering: tx #22 (A=ce0e20a6 N=1) < tx #23 (A=ce0e20a6 N=0)\n```\n\nInverting the sort order would fail with:\n\n```\n--- FAIL: TestTransactionPriceNonceSort (0.01s)\n    transaction_test.go:175: invalid gasprice ordering: tx #3 (A=197d46b4 P=2) > tx #1 (A=b17b67ef P=1)\n    transaction_test.go:175: invalid gasprice ordering: tx #4 (A=73cb4a16 P=2) > tx #1 (A=b17b67ef P=1)\n    transaction_test.go:175: invalid gasprice ordering: tx #3 (A=197d46b4 P=2) > tx #2 (A=73cb4a16 P=1)\n    transaction_test.go:175: invalid gasprice ordering: tx #6 (A=b17b67ef P=3) > tx #3 (A=197d46b4 P=2)\n    transaction_test.go:175: invalid gasprice ordering: tx #7 (A=1e6e4f2f P=3) > tx #3 (A=197d46b4 P=2)\n    transaction_test.go:175: invalid gasprice ordering: tx #8 (A=73cb4a16 P=3) > tx #3 (A=197d46b4 P=2)\n    transaction_test.go:175: invalid gasprice ordering: tx #6 (A=b17b67ef P=3) > tx #4 (A=73cb4a16 P=2)\n    transaction_test.go:175: invalid gasprice ordering: tx #7 (A=1e6e4f2f P=3) > tx #4 (A=73cb4a16 P=2)\n    transaction_test.go:172: invalid gasprice ordering: tx #2 (A=73cb4a16 P=1) < tx #5 (A=b17b67ef P=2)\n    transaction_test.go:175: invalid gasprice ordering: tx #10 (A=197d46b4 P=4) > tx #6 (A=b17b67ef P=3)\n    transaction_test.go:175: invalid gasprice ordering: tx #10 (A=197d46b4 P=4) > tx #7 (A=1e6e4f2f P=3)\n    transaction_test.go:175: invalid gasprice ordering: tx #11 (A=b17b67ef P=4) > tx #7 (A=1e6e4f2f P=3)\n    transaction_test.go:175: invalid gasprice ordering: tx #12 (A=73cb4a16 P=4) > tx #7 (A=1e6e4f2f P=3)\n    transaction_test.go:172: invalid gasprice ordering: tx #5 (A=b17b67ef P=2) < tx #8 (A=73cb4a16 P=3)\n    transaction_test.go:175: invalid gasprice ordering: tx #10 (A=197d46b4 P=4) > tx #8 (A=73cb4a16 P=3)\n    transaction_test.go:175: invalid gasprice ordering: tx #11 (A=b17b67ef P=4) > tx #8 (A=73cb4a16 P=3)\n    transaction_test.go:172: invalid gasprice ordering: tx #4 (A=73cb4a16 P=2) < tx #9 (A=197d46b4 P=3)\n    transaction_test.go:172: invalid gasprice ordering: tx #5 (A=b17b67ef P=2) < tx #9 (A=197d46b4 P=3)\n    transaction_test.go:175: invalid gasprice ordering: tx #15 (A=73cb4a16 P=5) > tx #10 (A=197d46b4 P=4)\n    transaction_test.go:175: invalid gasprice ordering: tx #16 (A=1e6e4f2f P=5) > tx #10 (A=197d46b4 P=4)\n    transaction_test.go:175: invalid gasprice ordering: tx #17 (A=cca60613 P=5) > tx #10 (A=197d46b4 P=4)\n    transaction_test.go:172: invalid gasprice ordering: tx #7 (A=1e6e4f2f P=3) < tx #11 (A=b17b67ef P=4)\n    transaction_test.go:172: invalid gasprice ordering: tx #8 (A=73cb4a16 P=3) < tx #11 (A=b17b67ef P=4)\n    transaction_test.go:172: invalid gasprice ordering: tx #9 (A=197d46b4 P=3) < tx #11 (A=b17b67ef P=4)\n    transaction_test.go:172: invalid gasprice ordering: tx #9 (A=197d46b4 P=3) < tx #12 (A=73cb4a16 P=4)\n    transaction_test.go:172: invalid gasprice ordering: tx #8 (A=73cb4a16 P=3) < tx #13 (A=1e6e4f2f P=4)\n    transaction_test.go:172: invalid gasprice ordering: tx #9 (A=197d46b4 P=3) < tx #13 (A=1e6e4f2f P=4)\n    transaction_test.go:175: invalid gasprice ordering: tx #15 (A=73cb4a16 P=5) > tx #13 (A=1e6e4f2f P=4)\n    transaction_test.go:175: invalid gasprice ordering: tx #15 (A=73cb4a16 P=5) > tx #14 (A=cca60613 P=4)\n    transaction_test.go:175: invalid gasprice ordering: tx #16 (A=1e6e4f2f P=5) > tx #14 (A=cca60613 P=4)\n    transaction_test.go:172: invalid gasprice ordering: tx #13 (A=1e6e4f2f P=4) < tx #15 (A=73cb4a16 P=5)\n    transaction_test.go:172: invalid gasprice ordering: tx #14 (A=cca60613 P=4) < tx #15 (A=73cb4a16 P=5)\n    transaction_test.go:172: invalid gasprice ordering: tx #14 (A=cca60613 P=4) < tx #16 (A=1e6e4f2f P=5)\n    transaction_test.go:175: invalid gasprice ordering: tx #19 (A=197d46b4 P=6) > tx #16 (A=1e6e4f2f P=5)\n    transaction_test.go:175: invalid gasprice ordering: tx #19 (A=197d46b4 P=6) > tx #17 (A=cca60613 P=5)\n    transaction_test.go:175: invalid gasprice ordering: tx #20 (A=1e6e4f2f P=6) > tx #17 (A=cca60613 P=5)\n    transaction_test.go:172: invalid gasprice ordering: tx #11 (A=b17b67ef P=4) < tx #18 (A=197d46b4 P=5)\n    transaction_test.go:172: invalid gasprice ordering: tx #12 (A=73cb4a16 P=4) < tx #18 (A=197d46b4 P=5)\n    transaction_test.go:172: invalid gasprice ordering: tx #13 (A=1e6e4f2f P=4) < tx #18 (A=197d46b4 P=5)\n    transaction_test.go:172: invalid gasprice ordering: tx #14 (A=cca60613 P=4) < tx #18 (A=197d46b4 P=5)\n    transaction_test.go:172: invalid gasprice ordering: tx #17 (A=cca60613 P=5) < tx #20 (A=1e6e4f2f P=6)\n    transaction_test.go:172: invalid gasprice ordering: tx #18 (A=197d46b4 P=5) < tx #20 (A=1e6e4f2f P=6)\n    transaction_test.go:175: invalid gasprice ordering: tx #22 (A=cca60613 P=7) > tx #20 (A=1e6e4f2f P=6)\n    transaction_test.go:172: invalid gasprice ordering: tx #18 (A=197d46b4 P=5) < tx #21 (A=cca60613 P=6)\n    transaction_test.go:172: invalid gasprice ordering: tx #21 (A=cca60613 P=6) < tx #23 (A=1e6e4f2f P=7)\n    transaction_test.go:172: invalid gasprice ordering: tx #23 (A=1e6e4f2f P=7) < tx #24 (A=cca60613 P=8)\n```\n\nI'll try to write the heap-merge based algo and see how that works.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173855043/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173856370",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2139#issuecomment-173856370",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139",
    "id": 173856370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Mzg1NjM3MA==",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-22T09:16:28Z",
    "updated_at": "2016-01-22T09:16:28Z",
    "author_association": "MEMBER",
    "body": "The latter I don't find so important. The former will actually fail in the system. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173856370/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173861712",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2139#issuecomment-173861712",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139",
    "id": 173861712,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Mzg2MTcxMg==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-22T09:37:25Z",
    "updated_at": "2016-01-22T09:37:25Z",
    "author_association": "MEMBER",
    "body": "Oh yeah :D\n\n```\n=== RUN   TestTransactionPriceNonceSort\n--- PASS: TestTransactionPriceNonceSort (0.01s)\n```\n\n``` go\n// SortByPriceAndNonce sorts the transactions by price in such a way that the\n// nonce orderings within a single account are maintained.\n//\n// Note, this is not as trivial as it seems from the first look as there are three\n// different criteria that need to be taken into account (price, nonce, account\n// match), which cannot be done with any plain sorting method, as certain items\n// cannot be compared without context.\n//\n// This method first sorts the separates the list of transactions into individual\n// sender accounts and sorts them by nonce. After the account nonce ordering is\n// satisfied, the results are merged back together by price, always comparing only\n// the head transaction from each account. This is done via a heap to keep it fast.\nfunc SortByPriceAndNonce(txs []*Transaction) {\n    // Separate the transactions by account and sort by nonce\n    byNonce := make(map[common.Address][]*Transaction)\n    for _, tx := range txs {\n        from, _ := tx.From()\n        byNonce[from] = append(byNonce[from], tx)\n    }\n    for _, accTxs := range byNonce {\n        sort.Sort(TxByNonce{accTxs})\n    }\n    // Merge the transactions using a heap\n    byPrice := TxByPrice{make(Transactions, 0, len(byNonce))}\n    for acc, accTxs := range byNonce {\n        byPrice.Transactions = append(byPrice.Transactions, accTxs[0])\n        byNonce[acc] = accTxs[1:]\n    }\n    heap.Init(&byPrice)\n\n    txs = txs[:0]\n    for len(byPrice.Transactions) > 0 {\n        next := heap.Pop(&byPrice).(*Transaction)\n\n        from, _ := next.From()\n        if accTxs, ok := byNonce[from]; ok {\n            heap.Push(&byPrice, accTxs[0])\n            if len(accTxs) > 1 {\n                byNonce[from] = accTxs[1:]\n            } else {\n                delete(byNonce, from)\n            }\n        }\n        txs = append(txs, next)\n    }\n}\n\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173861712/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173863628",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2139#issuecomment-173863628",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139",
    "id": 173863628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Mzg2MzYyOA==",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-22T09:47:28Z",
    "updated_at": "2016-01-22T09:47:28Z",
    "author_association": "MEMBER",
    "body": "Aww you beat me to it :+1: \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173863628/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173871787",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2139#issuecomment-173871787",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139",
    "id": 173871787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Mzg3MTc4Nw==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-22T10:25:37Z",
    "updated_at": "2016-01-22T10:25:37Z",
    "author_association": "MEMBER",
    "body": "@pnomarev Could you take a look at https://github.com/ethereum/go-ethereum/pull/2143 and check if you see anything wrong with it or if it seems ok to you too? :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/173871787/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/174392869",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2139#issuecomment-174392869",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139",
    "id": 174392869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDM5Mjg2OQ==",
    "user": {
      "login": "pnomarev",
      "id": 9689862,
      "node_id": "MDQ6VXNlcjk2ODk4NjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9689862?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pnomarev",
      "html_url": "https://github.com/pnomarev",
      "followers_url": "https://api.github.com/users/pnomarev/followers",
      "following_url": "https://api.github.com/users/pnomarev/following{/other_user}",
      "gists_url": "https://api.github.com/users/pnomarev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pnomarev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pnomarev/subscriptions",
      "organizations_url": "https://api.github.com/users/pnomarev/orgs",
      "repos_url": "https://api.github.com/users/pnomarev/repos",
      "events_url": "https://api.github.com/users/pnomarev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pnomarev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-25T04:13:00Z",
    "updated_at": "2016-01-25T04:13:00Z",
    "author_association": "NONE",
    "body": "@karalabe just finished testing. looks good to me! nonces && prices are in correct order\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/174392869/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/174550819",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2139#issuecomment-174550819",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139",
    "id": 174550819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDU1MDgxOQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-25T15:51:22Z",
    "updated_at": "2016-01-25T15:51:22Z",
    "author_association": "MEMBER",
    "body": "Brilliant :) Thanks for the check.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/174550819/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/177520724",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2139#issuecomment-177520724",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2139",
    "id": 177520724,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzUyMDcyNA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-31T15:16:26Z",
    "updated_at": "2016-01-31T15:16:26Z",
    "author_association": "MEMBER",
    "body": "Fixed in develop, closing the issue.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/177520724/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
