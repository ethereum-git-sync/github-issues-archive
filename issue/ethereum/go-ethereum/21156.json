{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21156",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21156/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21156/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21156/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/21156",
  "id": 628386340,
  "node_id": "MDU6SXNzdWU2MjgzODYzNDA=",
  "number": 21156,
  "title": "Cannot parse 32 bytes enodes in TOML configuration file",
  "user": {
    "login": "DefiCake",
    "id": 46090742,
    "node_id": "MDQ6VXNlcjQ2MDkwNzQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/46090742?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/DefiCake",
    "html_url": "https://github.com/DefiCake",
    "followers_url": "https://api.github.com/users/DefiCake/followers",
    "following_url": "https://api.github.com/users/DefiCake/following{/other_user}",
    "gists_url": "https://api.github.com/users/DefiCake/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/DefiCake/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/DefiCake/subscriptions",
    "organizations_url": "https://api.github.com/users/DefiCake/orgs",
    "repos_url": "https://api.github.com/users/DefiCake/repos",
    "events_url": "https://api.github.com/users/DefiCake/events{/privacy}",
    "received_events_url": "https://api.github.com/users/DefiCake/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2020-06-01T12:04:48Z",
  "updated_at": "2020-06-09T10:14:24Z",
  "closed_at": "2020-06-04T14:46:13Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## System information\r\n\r\nGeth\r\nVersion: 1.9.14-stable\r\nGit Commit: 6d74d1e5f762e06a6a739a42261886510f842778\r\nGit Commit Date: 20200513\r\nArchitecture: amd64\r\nProtocol Versions: [65 64 63]\r\nGo Version: go1.14.2\r\nOperating System: linux\r\nGOPATH=\r\nGOROOT=/usr/local/go\r\n\r\n#### Expected behaviour\r\nI expect to be able to run geth with a TOML config file.\r\n\r\n#### Actual behaviour\r\nUnable to start geth with a config file where bootnodes are specified in the 32 bytes format (don't know if 64 bytes format works). My current guess is this change https://github.com/ethereum/go-ethereum/pull/17643 wasn't propagated to the config parser, but have not taken a look into the sources.\r\n\r\n#### Steps to reproduce the behaviour\r\nTake any TOML file with bootnodes specified, for example the following one:\r\n\r\n```\r\n[Eth]\r\nNetworkId = 19080880\r\nSyncMode = \"fast\"\r\nNoPruning = false\r\nNoPrefetch = false\r\nLightPeers = 100\r\nUltraLightFraction = 75\r\nDatabaseCache = 512\r\nDatabaseFreezer = \"\"\r\nTrieCleanCache = 256\r\nTrieDirtyCache = 256\r\nTrieTimeout = 3600000000000\r\nEnablePreimageRecording = false\r\nEWASMInterpreter = \"\"\r\nEVMInterpreter = \"\"\r\n\r\n[Eth.Miner]\r\nEtherbase = \"0xdcf7baece1802d21a8226c013f7be99db5941bea\"\r\nGasFloor = 15000000\r\nGasCeil = 8000000\r\nGasPrice = 0\r\nRecommit = 3000000000\r\nNoverify = false\r\n\r\n[Eth.Ethash]\r\nCacheDir = \"ethash\"\r\nCachesInMem = 2\r\nCachesOnDisk = 3\r\nDatasetDir = \"/home/mad/.ethash\"\r\nDatasetsInMem = 1\r\nDatasetsOnDisk = 2\r\nPowMode = 0\r\n\r\n[Eth.TxPool]\r\nLocals = []\r\nNoLocals = false\r\nJournal = \"transactions.rlp\"\r\nRejournal = 3600000000000\r\nPriceLimit = 1\r\nPriceBump = 10\r\nAccountSlots = 16\r\nGlobalSlots = 4096\r\nAccountQueue = 64\r\nGlobalQueue = 1024\r\nLifetime = 10800000000000\r\n\r\n[Eth.GPO]\r\nBlocks = 20\r\nPercentile = 60\r\n\r\n[Shh]\r\nMaxMessageSize = 1048576\r\nMinimumAcceptedPOW = 2e-01\r\nRestrictConnectionBetweenLightClients = true\r\n\r\n[Node]\r\nDataDir = \"/datadir\"\r\nomitempty = \"\"\r\nNoUSB = true\r\nIPCPath = \"geth.ipc\"\r\nHTTPPort = 8545\r\nHTTPVirtualHosts = [\"localhost\"]\r\nHTTPModules = [\"net\", \"web3\", \"eth\", \"shh\"]\r\nWSPort = 8546\r\nWSModules = [\"net\", \"web3\", \"eth\", \"shh\"]\r\nGraphQLPort = 8547\r\nGraphQLVirtualHosts = [\"localhost\"]\r\n\r\n[Node.P2P]\r\nMaxPeers = 50\r\nNoDiscovery = true\r\nBootstrapNodes = [\"enode://de2bff7934321b702bd9b657874ba7095b93a54cb4007049c100bf430d3026ea@172.0.254.129:30303\"]\r\nBootstrapNodesV5 = []\r\nStaticNodes = []\r\nTrustedNodes = []\r\nListenAddr = \":30303\"\r\nEnableMsgEvents = false\r\n\r\n[Node.HTTPTimeouts]\r\nReadTimeout = 30000000000\r\nWriteTimeout = 30000000000\r\nIdleTimeout = 120000000000\r\n```\r\n\r\nAnd try to run geth, `geth --config /config/config.toml --nousb`.\r\n\r\n#### Backtrace\r\n\r\n````\r\nINFO [06-01|10:26:56.549] Maximum peer count                       ETH=50 LES=0 total=50\r\nINFO [06-01|10:26:56.549] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\r\nERROR[06-01|10:26:56.549] Failed to enumerate USB devices          hub=ledger vendor=11415 failcount=1 err=\"failed to initialize libusb: libusb: unknown error [code -99]\"\r\nERROR[06-01|10:26:56.549] Failed to enumerate USB devices          hub=trezor vendor=21324 failcount=1 err=\"failed to initialize libusb: libusb: unknown error [code -99]\"\r\nERROR[06-01|10:26:56.549] Failed to enumerate USB devices          hub=trezor vendor=4617  failcount=1 err=\"failed to initialize libusb: libusb: unknown error [code -99]\"\r\nERROR[06-01|10:26:56.550] Failed to enumerate USB devices          hub=ledger vendor=11415 failcount=2 err=\"failed to initialize libusb: libusb: unknown error [code -99]\"\r\nERROR[06-01|10:26:56.550] Failed to enumerate USB devices          hub=trezor vendor=21324 failcount=2 err=\"failed to initialize libusb: libusb: unknown error [code -99]\"\r\nERROR[06-01|10:26:56.550] Failed to enumerate USB devices          hub=trezor vendor=4617  failcount=2 err=\"failed to initialize libusb: libusb: unknown error [code -99]\"\r\nINFO [06-01|10:26:56.575] Starting Geth on Ethereum mainnet... \r\nINFO [06-01|10:26:56.575] Bumping default cache on mainnet         provided=1024 updated=4096\r\nFatal: /config/config.toml, line 72: (p2p.Config.BootstrapNodes) invalid public key (wrong length, want 128 hex chars)\r\n````\r\n",
  "closed_by": {
    "login": "DefiCake",
    "id": 46090742,
    "node_id": "MDQ6VXNlcjQ2MDkwNzQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/46090742?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/DefiCake",
    "html_url": "https://github.com/DefiCake",
    "followers_url": "https://api.github.com/users/DefiCake/followers",
    "following_url": "https://api.github.com/users/DefiCake/following{/other_user}",
    "gists_url": "https://api.github.com/users/DefiCake/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/DefiCake/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/DefiCake/subscriptions",
    "organizations_url": "https://api.github.com/users/DefiCake/orgs",
    "repos_url": "https://api.github.com/users/DefiCake/repos",
    "events_url": "https://api.github.com/users/DefiCake/events{/privacy}",
    "received_events_url": "https://api.github.com/users/DefiCake/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21156/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21156/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/636835285",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21156#issuecomment-636835285",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21156",
    "id": 636835285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNjgzNTI4NQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-01T12:35:03Z",
    "updated_at": "2020-06-01T12:35:03Z",
    "author_association": "MEMBER",
    "body": "The enode addresses are public keys, which are 64 bytes, so 128 hex characters. The PR you linked introduces an internal 32 byte representation to allow different crypto in the future. I don't think it was meant to change anything related to enode addresses.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/636835285/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/636849460",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21156#issuecomment-636849460",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21156",
    "id": 636849460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNjg0OTQ2MA==",
    "user": {
      "login": "DefiCake",
      "id": 46090742,
      "node_id": "MDQ6VXNlcjQ2MDkwNzQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/46090742?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DefiCake",
      "html_url": "https://github.com/DefiCake",
      "followers_url": "https://api.github.com/users/DefiCake/followers",
      "following_url": "https://api.github.com/users/DefiCake/following{/other_user}",
      "gists_url": "https://api.github.com/users/DefiCake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DefiCake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DefiCake/subscriptions",
      "organizations_url": "https://api.github.com/users/DefiCake/orgs",
      "repos_url": "https://api.github.com/users/DefiCake/repos",
      "events_url": "https://api.github.com/users/DefiCake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DefiCake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-01T13:04:59Z",
    "updated_at": "2020-06-01T13:04:59Z",
    "author_association": "NONE",
    "body": "I see, so if we were to get the enode from a nodekey with the bootnode binary, is there a way to get the 64 bytes representation? Right now, it is printing it in 32 bytes format, is this intended / expected? I 'd expect that the output of the bootnode utility could be used in the config file. \r\n\r\nThe only way I have found to get the 64 bytes format is to actually boot up a geth node and check the console output, where the enode is shown in its 64 bytes format.\r\n\r\nRelated:\r\nhttps://stackoverflow.com/questions/52835449/the-output-length-of-bootnode-writeaddress-command-is-64-bytes-not-128-bytes-a (note the title is misleading, the author probably meant 64/128 characters, not bytes).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/636849460/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/641112721",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21156#issuecomment-641112721",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21156",
    "id": 641112721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTExMjcyMQ==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-09T08:12:13Z",
    "updated_at": "2020-06-09T08:12:13Z",
    "author_association": "MEMBER",
    "body": "I will add a new command to cmd/devp2p to create enode URLs from a private key.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/641112721/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/641189219",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21156#issuecomment-641189219",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21156",
    "id": 641189219,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTE4OTIxOQ==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-09T10:14:23Z",
    "updated_at": "2020-06-09T10:14:23Z",
    "author_association": "MEMBER",
    "body": "https://github.com/ethereum/go-ethereum/pull/21202 adds those commands.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/641189219/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
