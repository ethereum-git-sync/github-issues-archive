{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3638",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3638/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3638/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3638/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/3638",
  "id": 204985662,
  "node_id": "MDU6SXNzdWUyMDQ5ODU2NjI=",
  "number": 3638,
  "title": "Mobile: Bad Packet when connecting to private chain",
  "user": {
    "login": "Omnidip",
    "id": 20955238,
    "node_id": "MDQ6VXNlcjIwOTU1MjM4",
    "avatar_url": "https://avatars.githubusercontent.com/u/20955238?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Omnidip",
    "html_url": "https://github.com/Omnidip",
    "followers_url": "https://api.github.com/users/Omnidip/followers",
    "following_url": "https://api.github.com/users/Omnidip/following{/other_user}",
    "gists_url": "https://api.github.com/users/Omnidip/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Omnidip/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Omnidip/subscriptions",
    "organizations_url": "https://api.github.com/users/Omnidip/orgs",
    "repos_url": "https://api.github.com/users/Omnidip/repos",
    "events_url": "https://api.github.com/users/Omnidip/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Omnidip/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2017-02-02T20:23:13Z",
  "updated_at": "2017-04-24T17:08:39Z",
  "closed_at": "2017-04-24T17:08:28Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: `1.5.8`\r\nOS & Version: Windows/Linux/OSX/Android\r\nCommit hash : f58fb32283fe04cd1d416040c6692b4a7352d556\r\n\r\nNote: Android client running on an emulator, Node running on the host\r\n\r\n#### Expected behaviour\r\n\r\nping and pong packets should be being sent back and forth between the local node and the android client.\r\n\r\n#### Actual behaviour\r\n\r\ndiscv5/udp.go spits out the errors:\r\n`E/GoLog: I0202 20:01:53.926344 p2p/discv5/udp.go:410] Bad packet from 10.0.2.2:30305: rlp: too few elements for discv5.pong`\r\n`E/GoLog: I0202 20:01:53.929642 p2p/discv5/udp.go:410] Bad packet from 10.0.2.2:30305: rlp: too few elements for discv5.ping`\r\n`E/GoLog: I0202 20:01:54.397246 p2p/discv5/net.go:461] --- (0) pongTimeout for f219c0645bffbf64@10.0.2.2:30305: verifyinit -> unknown (ok)`\r\nthen stops trying to connect with the local node.\r\n\r\nNOTE: This does NOT happen when trying to connect to the discv5 bootnodes within params/bootnodes.go, those produce the expected behaviour\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\nCreate a local node with genesis:\r\n```\r\n{ \r\n\t\"nonce\": \"0x0000004857738350273500\",\r\n\t\"timestamp\": \"0x0\",\r\n\t\"parentHash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\r\n\t\"extraData\": \"0x0\",\r\n\t\"gasLimit\": \"0x8000000\",\r\n\t\"difficulty\": \"0x40\",\r\n\t\"mixhash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\r\n\t\"coinbase\": \"0x3333333333333333333333333333333333333356\",\r\n\t\"alloc\": {}\r\n}\r\n```\r\n\r\nCreate an android project with the onCreate:\r\n\r\n`protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        final TextView textbox = (TextView) findViewById(R.id.show_text);\r\n\r\n        setTitle(\"Android In-Process Node\");\r\n\r\n        Context ctx = new Context();\r\n\r\n        try {\r\n\r\n            Enodes bootstrap = new Enodes(1);\r\n            Enode mainBootstrap = Geth.newEnode(\"enode://<ENODE_ID>@10.0.2.2:<PORT>\");\r\n            bootstrap.set(0, mainBootstrap);\r\n\r\n            NodeConfig config = new NodeConfig();\r\n            config.setBootstrapNodes(bootstrap);\r\n            config.setMaxPeers(15);\r\n            config.setEthereumEnabled(true);\r\n            config.setEthereumNetworkID(413);\r\n            config.setEthereumDatabaseCache(512);\r\n            config.setWhisperEnabled(false);\r\n\r\n            Geth.setVerbosity(6);\r\n\r\n            config.setEthereumGenesis(\" {\\n\" +\r\n                    \"    \\\"nonce\\\": \\\"0x0000004857738350273500\\\",\\n\" +\r\n                    \"    \\\"timestamp\\\": \\\"0x0\\\",\\n\" +\r\n                    \"    \\\"parentHash\\\": \\\"0x0000000000000000000000000000000000000000000000000000000000000000\\\",\\n\" +\r\n                    \"    \\\"extraData\\\": \\\"0x0\\\",\\n\" +\r\n                    \"    \\\"gasLimit\\\": \\\"0x8000000\\\",\\n\" +\r\n                    \"    \\\"difficulty\\\": \\\"0x40\\\",\\n\" +\r\n                    \"    \\\"mixhash\\\": \\\"0x0000000000000000000000000000000000000000000000000000000000000000\\\",\\n\" +\r\n                    \"    \\\"coinbase\\\": \\\"0x3333333333333333333333333333333333333356\\\",\\n\" +\r\n                    \"    \\\"alloc\\\": {} \\n\" +\r\n                    \"}\\n\");\r\n\r\n            Node node = Geth.newNode(getFilesDir() + \".ethereum\", config);\r\n            node.start();\r\n\r\n            EthereumClient ec = node.getEthereumClient();\r\n            textbox.append(\"Latest Block: \" + ec.getBlockByNumber(ctx, -1).getNumber() + \" syncing...\");\r\n            textbox.append(\"Count Peers: \" + node.getPeersInfo().size() + \"\\n\\n\");\r\n\r\n\r\n            NewHeadHandler handler = new NewHeadHandler() {\r\n                @Override\r\n                public void onError(String error) {\r\n                }\r\n\r\n                @Override\r\n                public void onNewHead(final Header header) {\r\n                    MainActivity.this.runOnUiThread(new Runnable() {\r\n                        public void run() {\r\n                            textbox.append(\"#\" + header.getNumber() + \": \" + header.getHash().getHex().substring(0, 10) + \"…\\n\");\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n            ec.subscribeNewHead(ctx, handler, 16);\r\n\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }`\r\n\r\n#### Backtrace\r\n\r\n````\r\nE/GoLog: I0202 20:01:53.866071 node/node.go:176] instance: GethDroid/v1.5.8-stable/android/go1.7.4\r\nE/GoLog: I0202 20:01:53.866170 ethdb/database.go:83] Allotted 512MB cache and 16 file handles to /data/user/0/projectTest/files.ethereum/GethDroid/lightchaindata\r\nE/GoLog: I0202 20:01:53.887397 core/state/statedb.go:605] Trie cache stats: 0 misses, 0 unloads\r\nE/GoLog: I0202 20:01:53.887655 core/database_util.go:385] stored block total difficulty [dd926915…]: 64\r\nE/GoLog: I0202 20:01:53.887733 core/database_util.go:371] stored block body [dd926915…]\r\nE/GoLog: I0202 20:01:53.887803 core/database_util.go:352] stored header #0 [dd926915…]\r\nE/GoLog: I0202 20:01:53.887839 core/database_util.go:420] stored block receipts [dd926915…]\r\nE/GoLog: I0202 20:01:53.887873 eth/backend.go:276] Successfully wrote custom genesis block: dd9269151323d70736aa9b81982830b3fef8a8db1550d9f84c659fae8fb45caf\r\nE/GoLog: I0202 20:01:53.888300 light/lightchain.go:172] Last header: #0 [dd926915…] TD=64\r\nE/GoLog: I0202 20:01:53.888335 core/database_util.go:385] stored block total difficulty [dd926915…]: 64\r\nE/GoLog: I0202 20:01:53.888360 core/database_util.go:371] stored block body [dd926915…]\r\nE/GoLog: I0202 20:01:53.888418 core/database_util.go:352] stored header #0 [dd926915…]\r\nE/GoLog: I0202 20:01:53.888533 light/lightchain.go:172] Last header: #0 [dd926915…] TD=64\r\nE/GoLog: I0202 20:01:53.888607 les/handler.go:202] LES: create downloader\r\nE/GoLog: I0202 20:01:53.888680 p2p/server.go:340] Starting Server\r\nE/GoLog: I0202 20:01:53.893464 eth/downloader/downloader.go:1474] Quality of service: rtt 20s, conf 1.000, ttl 1m0s\r\nE/GoLog: I0202 20:01:53.895526 p2p/discv5/net.go:700] seed node (age 412796h1m53.895514844s): enode://f219c0645bffbf643096b7718033a894ebacd652fec90c47af707e25c7877a0e720485cb9a31f44ac7d3397e79061e0821911b0357248d70db39a878e318dc8f@10.0.2.2:30305\r\nE/GoLog: I0202 20:01:53.896597 p2p/discv5/udp.go:351] >>> pingPacket to f219c0645bffbf64@10.0.2.2:30305\r\nE/GoLog: I0202 20:01:53.896828 les/backend.go:191] WARNING: light client mode is an experimental feature\r\nE/GoLog: I0202 20:01:53.897012 node/node.go:304] InProc registered *node.PrivateAdminAPI under 'admin'\r\nE/GoLog: I0202 20:01:53.897049 node/node.go:304] InProc registered *node.PublicAdminAPI under 'admin'\r\nE/GoLog: I0202 20:01:53.897158 node/node.go:304] InProc registered *debug.HandlerT under 'debug'\r\nE/GoLog: I0202 20:01:53.897182 node/node.go:304] InProc registered *node.PublicDebugAPI under 'debug'\r\nE/GoLog: I0202 20:01:53.897203 node/node.go:304] InProc registered *node.PublicWeb3API under 'web3'\r\nE/GoLog: I0202 20:01:53.897223 node/node.go:304] InProc registered *ethapi.PublicCompilerAPI under 'eth'\r\nE/GoLog: I0202 20:01:53.897243 node/node.go:304] InProc registered *ethapi.CompilerAdminAPI under 'admin'\r\nE/GoLog: I0202 20:01:53.897276 node/node.go:304] InProc registered *ethapi.PublicEthereumAPI under 'eth'\r\nE/GoLog: I0202 20:01:53.897443 node/node.go:304] InProc registered *ethapi.PublicBlockChainAPI under 'eth'\r\nE/GoLog: I0202 20:01:53.897612 node/node.go:304] InProc registered *ethapi.PublicTransactionPoolAPI under 'eth'\r\nE/GoLog: I0202 20:01:53.897644 node/node.go:304] InProc registered *ethapi.PublicTxPoolAPI under 'txpool'\r\nE/GoLog: I0202 20:01:53.897674 node/node.go:304] InProc registered *ethapi.PublicDebugAPI under 'debug'\r\nE/GoLog: I0202 20:01:53.897710 node/node.go:304] InProc registered *ethapi.PrivateDebugAPI under 'debug'\r\nE/GoLog: I0202 20:01:53.897725 node/node.go:304] InProc registered *ethapi.PublicAccountAPI under 'eth'\r\nE/GoLog: I0202 20:01:53.897792 node/node.go:304] InProc registered *ethapi.PrivateAccountAPI under 'personal'\r\nE/GoLog: I0202 20:01:53.897823 node/node.go:304] InProc registered *les.LightDummyAPI under 'eth'\r\nE/GoLog: I0202 20:01:53.897845 node/node.go:304] InProc registered *downloader.PublicDownloaderAPI under 'eth'\r\nE/GoLog: I0202 20:01:53.897910 node/node.go:304] InProc registered *filters.PublicFilterAPI under 'eth'\r\nE/GoLog: I0202 20:01:53.897932 node/node.go:304] InProc registered *ethapi.PublicNetAPI under 'net'\r\nE/GoLog: I0202 20:01:53.898107 p2p/server.go:608] Listening on [::]:60859\r\nE/GoLog: I0202 20:01:53.902645 rpc/client.go:412] sending {\"jsonrpc\":\"2.0\",\"id\":1,\"method\":\"eth_getBlockByNumber\",\"params\":[\"latest\",true]}\r\nE/GoLog: I0202 20:01:53.903970 rpc/client.go:505] <-readResp: response {\"jsonrpc\":\"2.0\",\"id\":1,\"result\":{\"difficulty\":\"0x40\",\"extraData\":\"0x00\",\"gasLimit\":\"0x8000000\",\"gasUsed\":\"0x0\",\"hash\":\"0xdd9269151323d70736aa9b81982830b3fef8a8db1550d9f84c659fae8fb45caf\",\"logsBloom\":\"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"miner\":\"0x3333333333333333333333333333333333333334\",\"mixHash\":\"0x0000000000000000000000000000000000000000000000000000000000000000\",\"nonce\":\"0x4857038450293400\",\"number\":\"0x0\",\"parentHash\":\"0x00000000000000000000000000000000000000000000000000000\r\nE/GoLog: 00000000000\",\"receiptsRoot\":\"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\"sha3Uncles\":\"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\",\"size\":\"0x1f9\",\"stateRoot\":\"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\"timestamp\":\"0x0\",\"totalDifficulty\":\"0x40\",\"transactions\":[],\"transactionsRoot\":\"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\"uncles\":[]}}\r\nE/GoLog: I0202 20:01:53.905774 rpc/client.go:412] sending {\"jsonrpc\":\"2.0\",\"id\":2,\"method\":\"eth_subscribe\",\"params\":[\"newHeads\",{}]}\r\nE/GoLog: I0202 20:01:53.906062 rpc/client.go:505] <-readResp: response {\"jsonrpc\":\"2.0\",\"id\":2,\"result\":\"0x3fe0412c7a94e915ffcad1487800293c\"}\r\nE/GoLog: I0202 20:01:53.926344 p2p/discv5/udp.go:410] Bad packet from 10.0.2.2:30305: rlp: too few elements for discv5.pong\r\nE/GoLog: I0202 20:01:53.929642 p2p/discv5/udp.go:410] Bad packet from 10.0.2.2:30305: rlp: too few elements for discv5.ping\r\nE/GoLog: I0202 20:01:54.397246 p2p/discv5/net.go:461] --- (0) pongTimeout for f219c0645bffbf64@10.0.2.2:30305: verifyinit -> unknown (ok)\r\nE/GoLog: I0202 20:01:56.025737 p2p/nat/nat.go:111] mapped network port tcp:60859 -> 60859 (ethereum p2p) using UPNP IGDv1-PPP1\r\n````\r\n",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3638/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3638/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/287724091",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/3638#issuecomment-287724091",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3638",
    "id": 287724091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzcyNDA5MQ==",
    "user": {
      "login": "sekharkumarroy",
      "id": 12453701,
      "node_id": "MDQ6VXNlcjEyNDUzNzAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/12453701?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sekharkumarroy",
      "html_url": "https://github.com/sekharkumarroy",
      "followers_url": "https://api.github.com/users/sekharkumarroy/followers",
      "following_url": "https://api.github.com/users/sekharkumarroy/following{/other_user}",
      "gists_url": "https://api.github.com/users/sekharkumarroy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sekharkumarroy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sekharkumarroy/subscriptions",
      "organizations_url": "https://api.github.com/users/sekharkumarroy/orgs",
      "repos_url": "https://api.github.com/users/sekharkumarroy/repos",
      "events_url": "https://api.github.com/users/sekharkumarroy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sekharkumarroy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T10:37:05Z",
    "updated_at": "2017-03-20T10:37:05Z",
    "author_association": "NONE",
    "body": "Hi,\r\nI'm getting the same issue while connecting a mobile geth light client. Did you get any luck connecting to private-net ? Error is \"(0) pongTimeout for 50eed70dc26bd864@XX.XX.XX.XX:31113: verifyinit -> unknown (ok)\" Any help is greatly appreciated. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/287724091/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/289325868",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/3638#issuecomment-289325868",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3638",
    "id": 289325868,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTMyNTg2OA==",
    "user": {
      "login": "beatrizsanchez",
      "id": 6515216,
      "node_id": "MDQ6VXNlcjY1MTUyMTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6515216?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beatrizsanchez",
      "html_url": "https://github.com/beatrizsanchez",
      "followers_url": "https://api.github.com/users/beatrizsanchez/followers",
      "following_url": "https://api.github.com/users/beatrizsanchez/following{/other_user}",
      "gists_url": "https://api.github.com/users/beatrizsanchez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beatrizsanchez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beatrizsanchez/subscriptions",
      "organizations_url": "https://api.github.com/users/beatrizsanchez/orgs",
      "repos_url": "https://api.github.com/users/beatrizsanchez/repos",
      "events_url": "https://api.github.com/users/beatrizsanchez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beatrizsanchez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-26T23:37:53Z",
    "updated_at": "2017-03-27T00:00:54Z",
    "author_association": "NONE",
    "body": "I am having the same issue in Ubuntu when trying to connect to a bootnode in a private network where the node uses `--light --v5disc` modes. This is the error I have on the discovery with the previous configuration:\r\n```\r\nmsg=\"--- (0) pongTimeout for ID@XX.XX.XX.XX:30301: verifyinit -> unknown (ok)\"\r\n```\r\n\r\nHowever,  I have the same problem with protocol v4 :\r\n\r\n```\r\nNew dial task                            task=\"discovery lookup\"\r\nStarting bonding ping/pong               id=X **known=false** failcount=0 age=X\r\n>> PING/v4                               addr=XX.XX.XX.XX:30301 err=nil\r\nNo discv4 seed nodes found \r\nDial task done                           task=\"discovery lookup\"\r\n\r\n```\r\nI am running the latest version of geth.\r\n\r\nI also think that the `--v5` on the bootnode does not work properly: it takes ages to start, if it actually does...\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/289325868/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/292905304",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/3638#issuecomment-292905304",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3638",
    "id": 292905304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjkwNTMwNA==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-10T10:02:47Z",
    "updated_at": "2017-04-10T10:02:47Z",
    "author_association": "MEMBER",
    "body": "@MondyWins please stop posting this type of question on our issue tracker",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/292905304/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/296748594",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/3638#issuecomment-296748594",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/3638",
    "id": 296748594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Njc0ODU5NA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-24T17:08:28Z",
    "updated_at": "2017-04-24T17:08:39Z",
    "author_association": "MEMBER",
    "body": "The issue is that you are trying to connect to the v4 discovery port with the light client. To connect to v5, you need to explicitly specify the discovery port number in the enode url, which will be 1 higher than the normal port number.\r\n\r\nE.g. For rinkeby it's `enode://a24ac7c5484ef4ed0c5eb2d36620ba4e4aa13b8c84684e1b4aab0cebea2ae45cb4d375b77eab56516d34bfbd3c1a833fc51296ff084b770b94fb9028c4d25ccf@52.169.42.101:30303?discport=30304`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/296748594/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
