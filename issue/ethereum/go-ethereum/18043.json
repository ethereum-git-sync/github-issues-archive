{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/18043",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/18043/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/18043/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/18043/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/18043",
  "id": 378168934,
  "node_id": "MDU6SXNzdWUzNzgxNjg5MzQ=",
  "number": 18043,
  "title": "I have some question about worker？",
  "user": {
    "login": "cmdlhh",
    "id": 26730254,
    "node_id": "MDQ6VXNlcjI2NzMwMjU0",
    "avatar_url": "https://avatars.githubusercontent.com/u/26730254?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cmdlhh",
    "html_url": "https://github.com/cmdlhh",
    "followers_url": "https://api.github.com/users/cmdlhh/followers",
    "following_url": "https://api.github.com/users/cmdlhh/following{/other_user}",
    "gists_url": "https://api.github.com/users/cmdlhh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cmdlhh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cmdlhh/subscriptions",
    "organizations_url": "https://api.github.com/users/cmdlhh/orgs",
    "repos_url": "https://api.github.com/users/cmdlhh/repos",
    "events_url": "https://api.github.com/users/cmdlhh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cmdlhh/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2018-11-07T07:19:30Z",
  "updated_at": "2018-12-29T13:36:52Z",
  "closed_at": "2018-12-29T13:36:52Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I can't understand the code in miner/worker.go.\r\n\r\n```\r\nfunc (w *worker) commit(uncles []*types.Header, interval func(), update bool, start time.Time) error {\r\n\t// Deep copy receipts here to avoid interaction between different tasks.\r\n\treceipts := make([]*types.Receipt, len(w.current.receipts))\r\n\tfor i, l := range w.current.receipts {\r\n\t\treceipts[i] = new(types.Receipt)\r\n\t\t*receipts[i] = *l\r\n\t} \r\n     // *** why use state.copy? ***\r\n \ts := w.current.state.Copy()\r\n\tblock, err := w.engine.Finalize(w.chain, w.current.header, s, w.current.txs, uncles, w.current.receipts)\r\n\tif err != nil {\r\n\t\treturn err\r\n\t}\r\n...\r\n```\r\n\r\nIn this function, state has a operation copy.And it will execute Engine.Finalize with state.copy().I think this copy is useless.Who can talk me the effect about this code？Thanks very much.\r\n\r\n\r\n\r\n",
  "closed_by": {
    "login": "cmdlhh",
    "id": 26730254,
    "node_id": "MDQ6VXNlcjI2NzMwMjU0",
    "avatar_url": "https://avatars.githubusercontent.com/u/26730254?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cmdlhh",
    "html_url": "https://github.com/cmdlhh",
    "followers_url": "https://api.github.com/users/cmdlhh/followers",
    "following_url": "https://api.github.com/users/cmdlhh/following{/other_user}",
    "gists_url": "https://api.github.com/users/cmdlhh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cmdlhh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cmdlhh/subscriptions",
    "organizations_url": "https://api.github.com/users/cmdlhh/orgs",
    "repos_url": "https://api.github.com/users/cmdlhh/repos",
    "events_url": "https://api.github.com/users/cmdlhh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cmdlhh/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/18043/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/18043/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/436760184",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/18043#issuecomment-436760184",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/18043",
    "id": 436760184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjc2MDE4NA==",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-07T20:08:27Z",
    "updated_at": "2018-11-07T20:09:21Z",
    "author_association": "MEMBER",
    "body": "Currently, the miner will generate a new mining work in the same round when some events trigger. for example, we will generate an empty work first and then generate a full work with all transactions included based on the empty state, but in the `engine.Finalize` function, consensus engine will do some finalization(miner reward, uncle reward, etc). In order to keep the state clean we create a copy here. \r\nSo that when we receive a new uncle, we can apply it to the current state(and recreate a new work) with lowest recreation cost.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/436760184/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/436864245",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/18043#issuecomment-436864245",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/18043",
    "id": 436864245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjg2NDI0NQ==",
    "user": {
      "login": "cmdlhh",
      "id": 26730254,
      "node_id": "MDQ6VXNlcjI2NzMwMjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/26730254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cmdlhh",
      "html_url": "https://github.com/cmdlhh",
      "followers_url": "https://api.github.com/users/cmdlhh/followers",
      "following_url": "https://api.github.com/users/cmdlhh/following{/other_user}",
      "gists_url": "https://api.github.com/users/cmdlhh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cmdlhh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cmdlhh/subscriptions",
      "organizations_url": "https://api.github.com/users/cmdlhh/orgs",
      "repos_url": "https://api.github.com/users/cmdlhh/repos",
      "events_url": "https://api.github.com/users/cmdlhh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cmdlhh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-08T03:49:28Z",
    "updated_at": "2018-11-08T04:55:18Z",
    "author_association": "NONE",
    "body": "But I am still a bit confused. In the `commitNewWork` function, there is a line of code that `err := w.makeCurrent(parent, header)`. In the `makeCurrent` function, state is `w.chain.StateAt(parent.Root())`, and `w.current.state` will  change.So that every time a new work comes, it will create a state. I can not understand the effect of copy.\r\nAnd what is the meaning about the last sentence? Is it meaning that `state.copy()` only takes effect in the uncle block? Thanks a lot. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/436864245/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/436888666",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/18043#issuecomment-436888666",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/18043",
    "id": 436888666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjg4ODY2Ng==",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-08T06:35:16Z",
    "updated_at": "2018-11-08T06:35:16Z",
    "author_association": "MEMBER",
    "body": "First, there are two ways in which miner can generate work: a) apply new change(new uncle) to current state and b) re-create a state every once in a while.\r\nFor the former, the new change is directly applied to the current state, which is the meaning of the state.copy, for the latter is to recreate the state.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/436888666/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
