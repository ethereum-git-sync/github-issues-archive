{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21917",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21917/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21917/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21917/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/21917",
  "id": 752854636,
  "node_id": "MDU6SXNzdWU3NTI4NTQ2MzY=",
  "number": 21917,
  "title": "leveldb corrupted: Failed to write header markers into disk err=\"leveldb: internal key ... corrupted: invalid type\"",
  "user": {
    "login": "MaximilianMeister",
    "id": 5364817,
    "node_id": "MDQ6VXNlcjUzNjQ4MTc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5364817?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MaximilianMeister",
    "html_url": "https://github.com/MaximilianMeister",
    "followers_url": "https://api.github.com/users/MaximilianMeister/followers",
    "following_url": "https://api.github.com/users/MaximilianMeister/following{/other_user}",
    "gists_url": "https://api.github.com/users/MaximilianMeister/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MaximilianMeister/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MaximilianMeister/subscriptions",
    "organizations_url": "https://api.github.com/users/MaximilianMeister/orgs",
    "repos_url": "https://api.github.com/users/MaximilianMeister/repos",
    "events_url": "https://api.github.com/users/MaximilianMeister/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MaximilianMeister/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2020-11-29T06:57:21Z",
  "updated_at": "2020-12-04T11:25:07Z",
  "closed_at": "2020-12-04T11:25:07Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nVersion: 1.9.24-stable\r\nGit Commit: cc05b050df5f88e80bb26aaf6d2f339c49c2d702\r\nArchitecture: amd64\r\nProtocol Versions: [65 64 63]\r\nGo Version: go1.15.5\r\nOperating System: linux\r\n\r\nRunning geth via systemd\r\n\r\nAll disk checks pass when running `smartctl` - i tried to rule out hardware issues with that\r\n\r\n#### Expected behaviour\r\n\r\ngeth service syncs completely and keeps running\r\n\r\n#### Actual behaviour\r\n\r\ngeth crashes everytime I try a full (fast) sync. I've been trying 3 times now and it constantly fails on a corrupted leveldb\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\n\r\n\r\n#### Backtrace\r\n\r\nThe backtrace at the end has been shortened, as it was really long.\r\n\r\n````\r\n...\r\n...\r\nNov 25 15:56:39 validator geth[51005]: INFO [11-25|15:56:39.589] Imported new state entries               count=1186 elapsed=7.919ms      processed=115544224 pending=251342 trieretry=0    coderetry=0  duplicate=8170 unexpected=49900\r\nNov 25 15:56:39 validator geth[51005]: runtime: marked free object in span 0x7f0e55434a10, elemsize=8 freeindex=0 (bad use of unsafe.Pointer? try -d=checkptr)\r\nNov 25 15:56:39 validator geth[51005]: 0xc10bb76000 free  unmarked\r\nNov 25 15:56:39 validator geth[51005]: 0xc10bb76008 free  unmarked\r\nNov 25 15:56:39 validator geth[51005]: 0xc10bb76010 free  unmarked\r\nNov 25 15:56:39 validator geth[51005]: 0xc10bb76018 free  unmarked\r\nNov 25 15:56:39 validator geth[51005]: 0xc10bb76020 free  unmarked\r\nNov 25 15:56:39 validator geth[51005]: 0xc10bb76028 free  unmarked\r\nNov 25 15:56:39 validator geth[51005]: 0xc10bb76030 free  unmarked\r\nNov 25 15:56:39 validator geth[51005]: 0xc10bb76038 free  unmarked\r\nNov 25 15:56:39 validator geth[51005]: 0xc10bb76040 free  unmarked\r\nNov 25 15:56:39 validator geth[51005]: 0xc10bb76048 free  unmarked\r\nNov 25 15:56:39 validator geth[51005]: 0xc10bb76050 free  unmarked\r\nNov 25 15:56:39 validator geth[51005]: 0xc10bb76058 free  unmarked\r\nNov 25 15:56:39 validator geth[51005]: 0xc10bb76060 free  unmarked\r\nNov 25 15:56:39 validator geth[51005]: 0xc10bb76068 free  unmarked\r\nNov 25 15:56:39 validator geth[51005]: 0xc10bb76070 free  unmarked\r\nNov 25 15:56:39 validator geth[51005]: 0xc10bb76078 free  unmarked\r\nNov 25 15:56:39 validator geth[51005]: 0xc10bb76080 free  unmarked\r\nNov 25 15:56:39 validator geth[51005]: 0xc10bb76088 alloc marked\r\n...\r\n...\r\nNov 25 15:56:39 validator geth[51005]: fatal error: found pointer to free object\r\nNov 25 15:56:39 validator geth[51005]: goroutine 3 [running]:\r\nNov 25 15:56:39 validator geth[51005]: runtime.throw(0x13482fa, 0x1c)\r\nNov 25 15:56:39 validator geth[51005]:         runtime/panic.go:1116 +0x72 fp=0xc00004d5d8 sp=0xc00004d5a8 pc=0x454032\r\nNov 25 15:56:39 validator geth[51005]: runtime.(*mspan).reportZombies(0x7f0e55434a10)\r\nNov 25 15:56:39 validator geth[51005]:         runtime/mgcsweep.go:827 +0x376 fp=0xc00004d658 sp=0xc00004d5d8 pc=0x4424b6\r\nNov 25 15:56:39 validator geth[51005]: runtime.(*mspan).sweep(0x7f0e55434a10, 0x7f0e55434a00, 0x480f00)\r\nNov 25 15:56:39 validator geth[51005]:         runtime/mgcsweep.go:456 +0x4be fp=0xc00004d740 sp=0xc00004d658 pc=0x441a1e\r\nNov 25 15:56:39 validator geth[51005]: runtime.sweepone(0x1407830)\r\nNov 25 15:56:39 validator geth[51005]:         runtime/mgcsweep.go:233 +0x28d fp=0xc00004d7a8 sp=0xc00004d740 pc=0x44132d\r\nNov 25 15:56:39 validator geth[51005]: runtime.bgsweep(0xc000074000)\r\nNov 25 15:56:39 validator geth[51005]:         runtime/mgcsweep.go:166 +0xbe fp=0xc00004d7d8 sp=0xc00004d7a8 pc=0x440fde\r\nNov 25 15:56:39 validator geth[51005]: runtime.goexit()\r\nNov 25 15:56:39 validator geth[51005]:         runtime/asm_amd64.s:1374 +0x1 fp=0xc00004d7e0 sp=0xc00004d7d8 pc=0x48cda1\r\nNov 25 15:56:39 validator geth[51005]: created by runtime.gcenable\r\nNov 25 15:56:39 validator geth[51005]:         runtime/mgc.go:217 +0x5c\r\nNov 25 15:56:39 validator geth[51005]: goroutine 1 [chan receive, 203 minutes]:\r\nNov 25 15:56:39 validator geth[51005]: github.com/ethereum/go-ethereum/node.(*Node).Wait(...)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/node/node.go:407\r\nNov 25 15:56:39 validator geth[51005]: main.geth(0xc0002262c0, 0x0, 0x0)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/cmd/geth/main.go:358 +0x157\r\nNov 25 15:56:39 validator geth[51005]: gopkg.in/urfave/cli%2ev1.HandleAction(0x1156940, 0x1406fe8, 0xc0002262c0, 0xc0001c4ae0, 0x0)\r\nNov 25 15:56:39 validator geth[51005]:         gopkg.in/urfave/cli.v1@v1.20.0/app.go:490 +0x82\r\nNov 25 15:56:39 validator geth[51005]: gopkg.in/urfave/cli%2ev1.(*App).Run(0xc00024e820, 0xc000032080, 0x4, 0x4, 0x0, 0x0)\r\nNov 25 15:56:39 validator geth[51005]:         gopkg.in/urfave/cli.v1@v1.20.0/app.go:264 +0x5f5\r\nNov 25 15:56:39 validator geth[51005]: main.main()\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/cmd/geth/main.go:273 +0x55\r\nNov 25 15:56:39 validator geth[51005]: goroutine 6 [chan receive, 203 minutes]:\r\nNov 25 15:56:39 validator geth[51005]: github.com/rjeczalik/notify.(*nonrecursiveTree).dispatch(0xc000076300, 0xc000076240)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/rjeczalik/notify@v0.9.1/tree_nonrecursive.go:36 +0xb6\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/rjeczalik/notify.newNonrecursiveTree\r\nNov 25 15:56:39 validator geth[51005]:         github.com/rjeczalik/notify@v0.9.1/tree_nonrecursive.go:29 +0xe5\r\nNov 25 15:56:39 validator geth[51005]: goroutine 7 [chan receive, 203 minutes]:\r\nNov 25 15:56:39 validator geth[51005]: github.com/rjeczalik/notify.(*nonrecursiveTree).internal(0xc000076300, 0xc0000762a0)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/rjeczalik/notify@v0.9.1/tree_nonrecursive.go:81 +0x58\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/rjeczalik/notify.newNonrecursiveTree\r\nNov 25 15:56:39 validator geth[51005]:         github.com/rjeczalik/notify@v0.9.1/tree_nonrecursive.go:30 +0x111\r\nNov 25 15:56:39 validator geth[51005]: goroutine 19 [chan receive]:\r\nNov 25 15:56:39 validator geth[51005]: github.com/ethereum/go-ethereum/metrics.(*meterArbiter).tick(0x1e6e6c0)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/metrics/meter.go:290 +0x7d\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/ethereum/go-ethereum/metrics.NewMeterForced\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/metrics/meter.go:71 +0x105\r\nNov 25 15:56:39 validator geth[51005]: goroutine 10 [chan receive, 203 minutes]:\r\nNov 25 15:56:39 validator geth[51005]: github.com/ethereum/go-ethereum/core.(*txSenderCacher).cache(0xc000176ac0)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/core/tx_cacher.go:63 +0x97\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/ethereum/go-ethereum/core.newTxSenderCacher\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/core/tx_cacher.go:55 +0x9f\r\nNov 25 15:56:39 validator geth[51005]: goroutine 11 [chan receive, 203 minutes]:\r\nNov 25 15:56:39 validator geth[51005]: github.com/ethereum/go-ethereum/core.(*txSenderCacher).cache(0xc000176ac0)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/core/tx_cacher.go:63 +0x97\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/ethereum/go-ethereum/core.newTxSenderCacher\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/core/tx_cacher.go:55 +0x9f\r\nNov 25 15:56:39 validator geth[51005]: goroutine 12 [chan receive, 203 minutes]:\r\nNov 25 15:56:39 validator geth[51005]: github.com/ethereum/go-ethereum/core.(*txSenderCacher).cache(0xc000176ac0)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/core/tx_cacher.go:63 +0x97\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/ethereum/go-ethereum/core.newTxSenderCacher\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/core/tx_cacher.go:55 +0x9f\r\nNov 25 15:56:39 validator geth[51005]: goroutine 13 [chan receive, 203 minutes]:\r\nNov 25 15:56:39 validator geth[51005]: github.com/ethereum/go-ethereum/core.(*txSenderCacher).cache(0xc000176ac0)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/core/tx_cacher.go:63 +0x97\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/ethereum/go-ethereum/core.newTxSenderCacher\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/core/tx_cacher.go:55 +0x9f\r\nNov 25 15:56:39 validator geth[51005]: goroutine 20 [select]:\r\nNov 25 15:56:39 validator geth[51005]: github.com/ethereum/go-ethereum/consensus/ethash.(*remoteSealer).loop(0xc0003b81e0)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/consensus/ethash/sealer.go:278 +0x25c\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/ethereum/go-ethereum/consensus/ethash.startRemoteSealer\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/consensus/ethash/sealer.go:262 +0x2b2\r\nNov 25 15:56:39 validator geth[51005]: goroutine 36 [select, 203 minutes]:\r\nNov 25 15:56:39 validator geth[51005]: github.com/ethereum/go-ethereum/core.(*BlockChain).maintainTxIndex(0xc00255a000, 0x0)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/core/blockchain.go:2358 +0x251\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/ethereum/go-ethereum/core.NewBlockChain\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/core/blockchain.go:382 +0x1305\r\nNov 25 15:56:39 validator geth[51005]: goroutine 24 [sleep]:\r\nNov 25 15:56:39 validator geth[51005]: time.Sleep(0x5f5e100)\r\nNov 25 15:56:39 validator geth[51005]:         runtime/time.go:188 +0xbf\r\nNov 25 15:56:39 validator geth[51005]: github.com/ethereum/go-ethereum/trie.(*SyncBloom).meter(0xc0039ac000)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/trie/sync_bloom.go:151 +0x35\r\nNov 25 15:56:39 validator geth[51005]: github.com/ethereum/go-ethereum/trie.NewSyncBloom.func2(0xc0039ac000)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/trie/sync_bloom.go:89 +0x54\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/ethereum/go-ethereum/trie.NewSyncBloom\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/trie/sync_bloom.go:87 +0x1cc\r\nNov 25 15:56:39 validator geth[51005]: goroutine 67 [select, 203 minutes]:\r\nNov 25 15:56:39 validator geth[51005]: github.com/ethereum/go-ethereum/accounts/keystore.(*watcher).loop(0xc000212ca0)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/accounts/keystore/watch.go:94 +0x4c5\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/ethereum/go-ethereum/accounts/keystore.(*watcher).start\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/accounts/keystore/watch.go:52 +0x59\r\nNov 25 15:56:39 validator geth[51005]: goroutine 53 [syscall, 203 minutes]:\r\nNov 25 15:56:39 validator geth[51005]: syscall.Syscall6(0xe8, 0x8, 0xc00052f79c, 0x1, 0xffffffffffffffff, 0x0, 0x0, 0x0, 0x0, 0x0)\r\nNov 25 15:56:39 validator geth[51005]:         syscall/asm_linux_amd64.s:41 +0x5\r\nNov 25 15:56:39 validator geth[51005]: golang.org/x/sys/unix.EpollWait(0x8, 0xc00052f79c, 0x1, 0x1, 0xffffffffffffffff, 0x0, 0x0, 0xc000212ca0)\r\nNov 25 15:56:39 validator geth[51005]:         golang.org/x/sys@v0.0.0-20200824131525-c12d262b63d8/unix/zsyscall_linux_amd64.go:76 +0x72\r\nNov 25 15:56:39 validator geth[51005]: github.com/rjeczalik/notify.(*inotify).loop(0xc000180000, 0xc0001de000)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/rjeczalik/notify@v0.9.1/watcher_inotify.go:194 +0x79\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/rjeczalik/notify.(*inotify).lazyinit\r\nNov 25 15:56:39 validator geth[51005]:         github.com/rjeczalik/notify@v0.9.1/watcher_inotify.go:134 +0x145\r\nNov 25 15:56:39 validator geth[51005]: goroutine 54 [chan receive, 203 minutes]:\r\nNov 25 15:56:39 validator geth[51005]: github.com/rjeczalik/notify.(*inotify).send(0xc000180000, 0xc0001de000)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/rjeczalik/notify@v0.9.1/watcher_inotify.go:254 +0xab\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/rjeczalik/notify.(*inotify).lazyinit\r\nNov 25 15:56:39 validator geth[51005]:         github.com/rjeczalik/notify@v0.9.1/watcher_inotify.go:137 +0x19a\r\nNov 25 15:56:39 validator geth[51005]: goroutine 55 [chan receive, 203 minutes]:\r\nNov 25 15:56:39 validator geth[51005]: github.com/rjeczalik/notify.(*inotify).send(0xc000180000, 0xc0001de000)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/rjeczalik/notify@v0.9.1/watcher_inotify.go:254 +0xab\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/rjeczalik/notify.(*inotify).lazyinit\r\nNov 25 15:56:39 validator geth[51005]:         github.com/rjeczalik/notify@v0.9.1/watcher_inotify.go:137 +0x19a\r\nNov 25 15:56:39 validator geth[51005]: goroutine 68 [select]:\r\nNov 25 15:56:39 validator geth[51005]: github.com/ethereum/go-ethereum/accounts/keystore.(*KeyStore).updater(0xc0003b8870)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/accounts/keystore/keystore.go:209 +0xda\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/ethereum/go-ethereum/accounts/keystore.(*KeyStore).Subscribe\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/accounts/keystore/keystore.go:196 +0x12f\r\nNov 25 15:56:39 validator geth[51005]: goroutine 69 [sleep]:\r\nNov 25 15:56:39 validator geth[51005]: time.Sleep(0x3b9aca00)\r\nNov 25 15:56:39 validator geth[51005]:         runtime/time.go:188 +0xbf\r\nNov 25 15:56:39 validator geth[51005]: github.com/ethereum/go-ethereum/accounts/usbwallet.(*Hub).updater(0xc000242140)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/accounts/usbwallet/hub.go:265 +0x3e\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/ethereum/go-ethereum/accounts/usbwallet.(*Hub).Subscribe\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/accounts/usbwallet/hub.go:254 +0x12f\r\nNov 25 15:56:39 validator geth[51005]: goroutine 70 [sleep]:\r\nNov 25 15:56:39 validator geth[51005]: time.Sleep(0x3b9aca00)\r\nNov 25 15:56:39 validator geth[51005]:         runtime/time.go:188 +0xbf\r\nNov 25 15:56:39 validator geth[51005]: github.com/ethereum/go-ethereum/accounts/usbwallet.(*Hub).updater(0xc0002423c0)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/accounts/usbwallet/hub.go:265 +0x3e\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/ethereum/go-ethereum/accounts/usbwallet.(*Hub).Subscribe\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/accounts/usbwallet/hub.go:254 +0x12f\r\nNov 25 15:56:39 validator geth[51005]: goroutine 71 [sleep]:\r\nNov 25 15:56:39 validator geth[51005]: time.Sleep(0x3b9aca00)\r\nNov 25 15:56:39 validator geth[51005]:         runtime/time.go:188 +0xbf\r\nNov 25 15:56:39 validator geth[51005]: github.com/ethereum/go-ethereum/accounts/usbwallet.(*Hub).updater(0xc000242500)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/accounts/usbwallet/hub.go:265 +0x3e\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/ethereum/go-ethereum/accounts/usbwallet.(*Hub).Subscribe\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/accounts/usbwallet/hub.go:254 +0x12f\r\nNov 25 15:56:39 validator geth[51005]: goroutine 72 [select, 203 minutes]:\r\nNov 25 15:56:39 validator geth[51005]: github.com/ethereum/go-ethereum/accounts.(*Manager).update(0xc000223040)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/accounts/manager.go:111 +0x1a6\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/ethereum/go-ethereum/accounts.NewManager\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/accounts/manager.go:79 +0x4e5\r\nNov 25 15:56:39 validator geth[51005]: goroutine 73 [select]:\r\nNov 25 15:56:39 validator geth[51005]: github.com/syndtr/goleveldb/leveldb/util.(*BufferPool).drain(0xc00031d260)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/syndtr/goleveldb@v1.0.1-0.20200815110645-5c35d600f0ca/leveldb/util/buffer_pool.go:209 +0x128\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/syndtr/goleveldb/leveldb/util.NewBufferPool\r\nNov 25 15:56:39 validator geth[51005]:         github.com/syndtr/goleveldb@v1.0.1-0.20200815110645-5c35d600f0ca/leveldb/util/buffer_pool.go:240 +0x18c\r\nNov 25 15:56:39 validator geth[51005]: goroutine 74 [select]:\r\nNov 25 15:56:39 validator geth[51005]: github.com/syndtr/goleveldb/leveldb.(*session).refLoop(0xc0003b8960)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/syndtr/goleveldb@v1.0.1-0.20200815110645-5c35d600f0ca/leveldb/session_util.go:189 +0x60f\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/syndtr/goleveldb/leveldb.newSession\r\nNov 25 15:56:39 validator geth[51005]:         github.com/syndtr/goleveldb@v1.0.1-0.20200815110645-5c35d600f0ca/leveldb/session.go:93 +0x2bd\r\nNov 25 15:56:39 validator geth[51005]: goroutine 56 [select]:\r\nNov 25 15:56:39 validator geth[51005]: github.com/syndtr/goleveldb/leveldb.(*DB).compactionError(0xc000352000)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/syndtr/goleveldb@v1.0.1-0.20200815110645-5c35d600f0ca/leveldb/db_compaction.go:91 +0xd1\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/syndtr/goleveldb/leveldb.openDB\r\nNov 25 15:56:39 validator geth[51005]:         github.com/syndtr/goleveldb@v1.0.1-0.20200815110645-5c35d600f0ca/leveldb/db.go:148 +0x42b\r\nNov 25 15:56:39 validator geth[51005]: goroutine 57 [select]:\r\nNov 25 15:56:39 validator geth[51005]: github.com/syndtr/goleveldb/leveldb.(*DB).mpoolDrain(0xc000352000)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/syndtr/goleveldb@v1.0.1-0.20200815110645-5c35d600f0ca/leveldb/db_state.go:101 +0x105\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/syndtr/goleveldb/leveldb.openDB\r\nNov 25 15:56:39 validator geth[51005]:         github.com/syndtr/goleveldb@v1.0.1-0.20200815110645-5c35d600f0ca/leveldb/db.go:149 +0x44d\r\nNov 25 15:56:39 validator geth[51005]: goroutine 58 [runnable]:\r\nNov 25 15:56:39 validator geth[51005]: syscall.Syscall(0x1, 0x14b, 0xc0fe82ac00, 0x1029, 0x1029, 0x1029, 0x0)\r\nNov 25 15:56:39 validator geth[51005]:         syscall/asm_linux_amd64.s:18 +0x5\r\nNov 25 15:56:39 validator geth[51005]: syscall.write(0x14b, 0xc0fe82ac00, 0x1029, 0x1300, 0x1028, 0x0, 0x0)\r\nNov 25 15:56:39 validator geth[51005]:         syscall/zsyscall_linux_amd64.go:914 +0x5a\r\nNov 25 15:56:39 validator geth[51005]: syscall.Write(...)\r\nNov 25 15:56:39 validator geth[51005]:         syscall/syscall_unix.go:212\r\nNov 25 15:56:39 validator geth[51005]: internal/poll.(*FD).Write.func1(0x7ffff80000000000, 0x4, 0xc0e352d32c)\r\nNov 25 15:56:39 validator geth[51005]:         internal/poll/fd_unix.go:267 +0x77\r\nNov 25 15:56:39 validator geth[51005]: internal/poll.ignoringEINTR(0xc11a0df230, 0x77, 0x1, 0x0)\r\nNov 25 15:56:39 validator geth[51005]:         internal/poll/fd_unix.go:567 +0x27\r\nNov 25 15:56:39 validator geth[51005]: internal/poll.(*FD).Write(0xc0e352d320, 0xc0fe82ac00, 0x1029, 0x1300, 0x0, 0x0, 0x0)\r\nNov 25 15:56:39 validator geth[51005]:         internal/poll/fd_unix.go:267 +0x19c\r\nNov 25 15:56:39 validator geth[51005]: os.(*File).write(...)\r\nNov 25 15:56:39 validator geth[51005]:         os/file_posix.go:48\r\nNov 25 15:56:39 validator geth[51005]: os.(*File).Write(0xc038edaf50, 0xc0fe82ac00, 0x1029, 0x1300, 0x0, 0x0, 0x0)\r\nNov 25 15:56:39 validator geth[51005]:         os/file.go:173 +0x77\r\nNov 25 15:56:39 validator geth[51005]: github.com/syndtr/goleveldb/leveldb.(*iStorageWriter).Write(0xc0f5dea220, 0xc0fe82ac00, 0x1029, 0x1300, 0x1300, 0x912368b5, 0xc0fe82ac00)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/syndtr/goleveldb@v1.0.1-0.20200815110645-5c35d600f0ca/leveldb/storage.go:60 +0x51\r\nNov 25 15:56:39 validator geth[51005]: github.com/syndtr/goleveldb/leveldb/table.(*Writer).writeBlock(0xc0efa38000, 0xc0efa38058, 0x2, 0xc120331f50, 0xc012d005a0, 0x29, 0x30)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/syndtr/goleveldb@v1.0.1-0.20200815110645-5c35d600f0ca/leveldb/table/writer.go:187 +0x1b1\r\nNov 25 15:56:39 validator geth[51005]: github.com/syndtr/goleveldb/leveldb/table.(*Writer).finishBlock(0xc0efa38000, 0xc012d005a0, 0x29)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/syndtr/goleveldb@v1.0.1-0.20200815110645-5c35d600f0ca/leveldb/table/writer.go:222 +0x55\r\nNov 25 15:56:39 validator geth[51005]: github.com/syndtr/goleveldb/leveldb/table.(*Writer).Append(0xc0efa38000, 0xc012d005a0, 0x29, 0x30, 0xc0d5d7d6e3, 0x3, 0xc22, 0xc012d005d0, 0x29)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/syndtr/goleveldb@v1.0.1-0.20200815110645-5c35d600f0ca/leveldb/table/writer.go:255 +0x25a\r\nNov 25 15:56:39 validator geth[51005]: github.com/syndtr/goleveldb/leveldb.(*tWriter).append(0xc0e352d380, 0xc012d005a0, 0x29, 0x30, 0xc0d5d7d6e3, 0x3, 0xc22, 0xc012d005d0, 0xc012d005a0)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/syndtr/goleveldb@v1.0.1-0.20200815110645-5c35d600f0ca/leveldb/table.go:559 +0xe5\r\nNov 25 15:56:39 validator geth[51005]: github.com/syndtr/goleveldb/leveldb.(*tableCompactionBuilder).appendKV(0xc0f8755220, 0xc012d005a0, 0x29, 0x30, 0xc0d5d7d6e3, 0x3, 0xc22, 0xffffffffffffffff, 0x0)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/syndtr/goleveldb@v1.0.1-0.20200815110645-5c35d600f0ca/leveldb/db_compaction.go:399 +0xa5\r\nNov 25 15:56:39 validator geth[51005]: github.com/syndtr/goleveldb/leveldb.(*tableCompactionBuilder).run(0xc0f8755220, 0xc0e2e2f8c8, 0x0, 0x0)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/syndtr/goleveldb@v1.0.1-0.20200815110645-5c35d600f0ca/leveldb/db_compaction.go:517 +0x545\r\nNov 25 15:56:39 validator geth[51005]: github.com/syndtr/goleveldb/leveldb.(*DB).compactionTransact(0xc000352000, 0x1332746, 0xb, 0x1543f60, 0xc0f8755220)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/syndtr/goleveldb@v1.0.1-0.20200815110645-5c35d600f0ca/leveldb/db_compaction.go:186 +0x18c\r\nNov 25 15:56:39 validator geth[51005]: github.com/syndtr/goleveldb/leveldb.(*DB).tableCompaction(0xc000352000, 0xc00016bb00, 0x1405c00)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/syndtr/goleveldb@v1.0.1-0.20200815110645-5c35d600f0ca/leveldb/db_compaction.go:580 +0x64b\r\nNov 25 15:56:39 validator geth[51005]: github.com/syndtr/goleveldb/leveldb.(*DB).tableAutoCompaction(0xc000352000)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/syndtr/goleveldb@v1.0.1-0.20200815110645-5c35d600f0ca/leveldb/db_compaction.go:644 +0x54\r\nNov 25 15:56:39 validator geth[51005]: github.com/syndtr/goleveldb/leveldb.(*DB).tCompaction(0xc000352000)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/syndtr/goleveldb@v1.0.1-0.20200815110645-5c35d600f0ca/leveldb/db_compaction.go:863 +0x2ee\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/syndtr/goleveldb/leveldb.openDB\r\nNov 25 15:56:39 validator geth[51005]:         github.com/syndtr/goleveldb@v1.0.1-0.20200815110645-5c35d600f0ca/leveldb/db.go:155 +0x5a5\r\nNov 25 15:56:39 validator geth[51005]: goroutine 59 [select, 1 minutes]:\r\nNov 25 15:56:39 validator geth[51005]: github.com/syndtr/goleveldb/leveldb.(*DB).mCompaction(0xc000352000)\r\nNov 25 15:56:39 validator geth[51005]:         github.com/syndtr/goleveldb@v1.0.1-0.20200815110645-5c35d600f0ca/leveldb/db_compaction.go:773 +0x145\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/syndtr/goleveldb/leveldb.openDB\r\nNov 25 15:56:39 validator geth[51005]:         github.com/syndtr/goleveldb@v1.0.1-0.20200815110645-5c35d600f0ca/leveldb/db.go:156 +0x5c7\r\nNov 25 15:56:39 validator geth[51005]: goroutine 60 [select]:\r\nNov 25 15:56:39 validator geth[51005]: github.com/ethereum/go-ethereum/ethdb/leveldb.(*Database).meter(0xc0000aea00, 0xb2d05e00)\r\n...\r\n...\r\n````\r\nGeth service keeps crashing now with:\r\n```\r\nNov 29 06:49:45 validator geth[111279]: CRIT [11-29|06:49:45.509] Failed to write header markers into disk err=\"leveldb: internal key \\\"B\\\\x06\\\\x1c\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x03\\\\x91\\\\xad\\\\u05ee*\\\\x1f\\\\x19b\\\\xe2C\\\\x1a\\\\x1e+\\\\xdb`\\\\xca\\\\xed\\\\xa7\\\\\\\"\\\\x90 \\\\xfb!\\\\xb82N\\\\x9f\\\\xcdQ\\\\xfd\\\\xfa\\\\xf5\\\\u007f\\\\x01\\\\xa1\\\\xfa\\\\xdf*\\\\x00\\\\x00\\\\x00\\\\xffP\\\\xf4\\\\xb4o\\\\b\\\\x80\\\\x02\\\\xf6\\\\x04\\\\x88H\\\\x10P\\\\t\\\\b\\\\x90P0\\\\x10\\\\b\\\\x01,\\\\x04 \\\\x10\\\\x04\\\\x80P0\\\\x84H\\\\x14\\\\xf1\\\\x01\\\\x02\\\\x04\\\\x01\\\\x02\\\\x02\\\\x80 \\\\x01\\\\x10\\\\x80@\\\\x10\\\\x02\\\\x01\\\\x80\\\\x80\\\\x01\\\\x10\\\\x01 \\\\x04\\\\x04\\\\x04\\\\x04\\\\x02  \\\\x01\\\\x01\\\\x10\\\\x01@ \\\\x01@@\\\\x01@ \\\\x02\\\\b\\\\x80\\\\x02@B\\\\x06\\\\x1d\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x03\\\\x91\\\\xad\\\\u05ee*\\\\x1f\\\\x19b\\\\xe2C\\\\x1a\\\\x1e+\\\\xdb`\\\\xca\\\\xed\\\\xa7\\\\\\\"\\\\x90 \\\\xfb!\\\\xb82N\\\\x9f\\\\xcdQ\\\\xfd\\\\xfa\\\\xf5\\\\u007f\\\\x01\\\\xa2\\\\xfa\\\\xdf*\\\\x00\\\" corrupted: invalid type\"\r\n```",
  "closed_by": {
    "login": "ligi",
    "id": 111600,
    "node_id": "MDQ6VXNlcjExMTYwMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ligi",
    "html_url": "https://github.com/ligi",
    "followers_url": "https://api.github.com/users/ligi/followers",
    "following_url": "https://api.github.com/users/ligi/following{/other_user}",
    "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
    "organizations_url": "https://api.github.com/users/ligi/orgs",
    "repos_url": "https://api.github.com/users/ligi/repos",
    "events_url": "https://api.github.com/users/ligi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ligi/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21917/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21917/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/735355373",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21917#issuecomment-735355373",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21917",
    "id": 735355373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNTM1NTM3Mw==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-29T07:29:18Z",
    "updated_at": "2020-11-29T07:29:18Z",
    "author_association": "MEMBER",
    "body": "did you at some point have a unclean shutdown of geth? e.g. a reboot / crash / ..",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/735355373/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/735356839",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21917#issuecomment-735356839",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21917",
    "id": 735356839,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNTM1NjgzOQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-29T07:46:51Z",
    "updated_at": "2020-11-29T07:46:51Z",
    "author_association": "MEMBER",
    "body": "This is the interesting part, and it's very interesting: runtime: marked free object in span 0x7f0e55434a10, elemsize=8 freeindex=0 (bad use of unsafe.Pointer? try -d=checkptr",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/735356839/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/735358360",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21917#issuecomment-735358360",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21917",
    "id": 735358360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNTM1ODM2MA==",
    "user": {
      "login": "MaximilianMeister",
      "id": 5364817,
      "node_id": "MDQ6VXNlcjUzNjQ4MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5364817?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MaximilianMeister",
      "html_url": "https://github.com/MaximilianMeister",
      "followers_url": "https://api.github.com/users/MaximilianMeister/followers",
      "following_url": "https://api.github.com/users/MaximilianMeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/MaximilianMeister/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MaximilianMeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MaximilianMeister/subscriptions",
      "organizations_url": "https://api.github.com/users/MaximilianMeister/orgs",
      "repos_url": "https://api.github.com/users/MaximilianMeister/repos",
      "events_url": "https://api.github.com/users/MaximilianMeister/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MaximilianMeister/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-29T08:03:42Z",
    "updated_at": "2020-11-29T08:04:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "> did you at some point have a unclean shutdown of geth? e.g. a reboot / crash / ..\r\n\r\nyes and no. there was no unclean shutdown before the crash, the shutdown occurred right after the stacktrace:\r\n\r\n```\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/eth/peer.go:259 +0x1a5\r\nNov 25 15:56:39 validator geth[51005]: created by github.com/ethereum/go-ethereum/eth.(*peerSet).Register\r\nNov 25 15:56:39 validator geth[51005]:         github.com/ethereum/go-ethereum/eth/peer.go:728 +0x1ae\r\nNov 25 15:56:40 validator systemd[1]: geth.service: Main process exited, code=exited, status=2/INVALIDARGUMENT\r\nNov 25 15:56:40 validator systemd[1]: geth.service: Failed with result 'exit-code'.\r\nNov 25 15:56:45 validator systemd[1]: geth.service: Scheduled restart job, restart counter is at 1.\r\nNov 25 15:56:45 validator systemd[1]: Stopped Ethereum go client.\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/735358360/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/735360196",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21917#issuecomment-735360196",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21917",
    "id": 735360196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNTM2MDE5Ng==",
    "user": {
      "login": "MaximilianMeister",
      "id": 5364817,
      "node_id": "MDQ6VXNlcjUzNjQ4MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5364817?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MaximilianMeister",
      "html_url": "https://github.com/MaximilianMeister",
      "followers_url": "https://api.github.com/users/MaximilianMeister/followers",
      "following_url": "https://api.github.com/users/MaximilianMeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/MaximilianMeister/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MaximilianMeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MaximilianMeister/subscriptions",
      "organizations_url": "https://api.github.com/users/MaximilianMeister/orgs",
      "repos_url": "https://api.github.com/users/MaximilianMeister/repos",
      "events_url": "https://api.github.com/users/MaximilianMeister/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MaximilianMeister/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-29T08:24:11Z",
    "updated_at": "2020-11-29T08:24:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "> This is the interesting part, and it's very interesting: runtime: marked free object in span 0x7f0e55434a10, elemsize=8 freeindex=0 (bad use of unsafe.Pointer? try -d=checkptr\r\n\r\nnot sure where this log comes from, and what it means, but in all 3 tests i did, it all boils down to a corrupt leveldb at the end, which also causes geth to crash/shutdown.\r\n\r\nI also just noticed that this error was only in the first attempt. The next 2 attempts (after doing `geth removedb` each time) were only failing with this error:\r\n\r\n```\r\nNov 28 21:56:23 validator geth[86309]: CRIT [11-28|21:56:23.725] Failed to store last fast block's hash   err=\"leveldb/table: corruption on data-block (pos=1100421): checksum mismatch, want=\r\n0x2a0e0d6f got=0xb9c184fd [file=061947.ldb]\"\r\n```\r\n\r\nAlso if systemd ist stopping the service I assume it will do that gracefully?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/735360196/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/735360597",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21917#issuecomment-735360597",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21917",
    "id": 735360597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNTM2MDU5Nw==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-29T08:28:20Z",
    "updated_at": "2020-11-29T08:28:20Z",
    "author_association": "MEMBER",
    "body": "> Also if systemd ist stopping the service I assume it will do that gracefully?\r\n\r\nSytemd has parameters to configure this. It they are set too low it might be a problem as geth sometimes takes quite a while to shut down.\r\n\r\nhttps://www.freedesktop.org/software/systemd/man/systemd.service.html",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/735360597/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/735363094",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21917#issuecomment-735363094",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21917",
    "id": 735363094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNTM2MzA5NA==",
    "user": {
      "login": "MaximilianMeister",
      "id": 5364817,
      "node_id": "MDQ6VXNlcjUzNjQ4MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5364817?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MaximilianMeister",
      "html_url": "https://github.com/MaximilianMeister",
      "followers_url": "https://api.github.com/users/MaximilianMeister/followers",
      "following_url": "https://api.github.com/users/MaximilianMeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/MaximilianMeister/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MaximilianMeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MaximilianMeister/subscriptions",
      "organizations_url": "https://api.github.com/users/MaximilianMeister/orgs",
      "repos_url": "https://api.github.com/users/MaximilianMeister/repos",
      "events_url": "https://api.github.com/users/MaximilianMeister/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MaximilianMeister/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-29T08:57:07Z",
    "updated_at": "2020-11-29T08:57:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Sytemd has parameters to configure this. It they are set too low it might be a problem as geth sometimes takes quite a while to shut down.\r\n> \r\n> https://www.freedesktop.org/software/systemd/man/systemd.service.html\r\n\r\nhttps://www.freedesktop.org/software/systemd/man/systemd-system.conf.html#DefaultTimeoutStartSec=\r\n\r\nWithout any configuration it will send a SIGTERM immeditately to geth and waits 90s ... if that's not enough, what would be the best effort config someone could do here?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/735363094/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/735364285",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21917#issuecomment-735364285",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21917",
    "id": 735364285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNTM2NDI4NQ==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-29T09:09:14Z",
    "updated_at": "2020-11-29T09:09:14Z",
    "author_association": "MEMBER",
    "body": "I would set it to a high number - it really depends on state and system - but sometimes geth takes a while to wrap things up. Could be more than 90s in some cases as far as I can see.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/735364285/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/738113663",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21917#issuecomment-738113663",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21917",
    "id": 738113663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczODExMzY2Mw==",
    "user": {
      "login": "vogelito",
      "id": 1325863,
      "node_id": "MDQ6VXNlcjEzMjU4NjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1325863?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vogelito",
      "html_url": "https://github.com/vogelito",
      "followers_url": "https://api.github.com/users/vogelito/followers",
      "following_url": "https://api.github.com/users/vogelito/following{/other_user}",
      "gists_url": "https://api.github.com/users/vogelito/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vogelito/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vogelito/subscriptions",
      "organizations_url": "https://api.github.com/users/vogelito/orgs",
      "repos_url": "https://api.github.com/users/vogelito/repos",
      "events_url": "https://api.github.com/users/vogelito/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vogelito/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-03T16:18:49Z",
    "updated_at": "2020-12-03T16:18:49Z",
    "author_association": "NONE",
    "body": "What is the setting you're using to change this timeout? `TimeoutStopSec=`?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/738113663/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/738639799",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21917#issuecomment-738639799",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21917",
    "id": 738639799,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczODYzOTc5OQ==",
    "user": {
      "login": "MaximilianMeister",
      "id": 5364817,
      "node_id": "MDQ6VXNlcjUzNjQ4MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5364817?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MaximilianMeister",
      "html_url": "https://github.com/MaximilianMeister",
      "followers_url": "https://api.github.com/users/MaximilianMeister/followers",
      "following_url": "https://api.github.com/users/MaximilianMeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/MaximilianMeister/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MaximilianMeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MaximilianMeister/subscriptions",
      "organizations_url": "https://api.github.com/users/MaximilianMeister/orgs",
      "repos_url": "https://api.github.com/users/MaximilianMeister/repos",
      "events_url": "https://api.github.com/users/MaximilianMeister/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MaximilianMeister/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-04T08:23:46Z",
    "updated_at": "2020-12-04T08:23:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "> What is the setting you're using to change this timeout? `TimeoutStopSec=`?\r\n\r\n@vogelito yeah, that's the one",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/738639799/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/738731577",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21917#issuecomment-738731577",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21917",
    "id": 738731577,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczODczMTU3Nw==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-04T11:25:00Z",
    "updated_at": "2020-12-04T11:25:00Z",
    "author_association": "MEMBER",
    "body": "closing with follow up of #21948",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/738731577/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
