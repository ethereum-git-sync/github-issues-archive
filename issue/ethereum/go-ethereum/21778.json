{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21778",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21778/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21778/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21778/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/21778",
  "id": 734886136,
  "node_id": "MDU6SXNzdWU3MzQ4ODYxMzY=",
  "number": 21778,
  "title": "Event Filtering Query is very slow",
  "user": {
    "login": "quentinlesceller",
    "id": 11842328,
    "node_id": "MDQ6VXNlcjExODQyMzI4",
    "avatar_url": "https://avatars.githubusercontent.com/u/11842328?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/quentinlesceller",
    "html_url": "https://github.com/quentinlesceller",
    "followers_url": "https://api.github.com/users/quentinlesceller/followers",
    "following_url": "https://api.github.com/users/quentinlesceller/following{/other_user}",
    "gists_url": "https://api.github.com/users/quentinlesceller/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/quentinlesceller/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/quentinlesceller/subscriptions",
    "organizations_url": "https://api.github.com/users/quentinlesceller/orgs",
    "repos_url": "https://api.github.com/users/quentinlesceller/repos",
    "events_url": "https://api.github.com/users/quentinlesceller/events{/privacy}",
    "received_events_url": "https://api.github.com/users/quentinlesceller/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2020-11-02T22:43:25Z",
  "updated_at": "2020-11-12T14:50:29Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: \r\n```\r\nGeth\r\nVersion: 1.9.22-stable\r\nGit Commit: c71a7e26a8b1e332bbf3262d88ba3ff32071456c\r\nArchitecture: amd64\r\nProtocol Versions: [65 64 63]\r\nGo Version: go1.15\r\nOperating System: linux\r\nGOPATH=\r\nGOROOT=go\r\n```\r\n\r\nGeth is running as a daemon and is fully synced.\r\n\r\n\r\n```\r\n/usr/bin/geth --cache 2048 --http --http.api web3,eth --http.port 8545 --http.addr 0.0.0.0 --http.corsdomain * --http.vhosts *\r\n```\r\nThe server is behind a firewall so no port are accessible from the outside. Another machine will do the call on the RPC server.\r\n\r\nOS & Version: Ubuntu 20.04\r\n\r\n#### Expected behaviour\r\n\r\nThe goal is to fetch the latest implementation address for a proxy ERC-20 following OpenZeppelin Upgradable interface.\r\nHence the way that I found is to get the latest `Upgraded(address)` event.\r\n\r\nThe code below does just that with the USDC contract (0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48). **It works with Infura but does not work with my local geth node**.\r\n\r\nThe `BlockByHash` method was to test that the node was responding properly. The block query works almost instantly however the `ethereum.FilterQuery` is extremely slow and hang for a long time without response. Any advice?\r\n\r\n#### Actual behaviour\r\n\r\nThe query just hang for a very long time.\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\n\r\n```golang\r\npackage main\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"math/big\"\r\n\r\n\t\"github.com/ethereum/go-ethereum\"\r\n\t\"github.com/ethereum/go-ethereum/common\"\r\n\t\"github.com/ethereum/go-ethereum/ethclient\"\r\n)\r\n\r\nfunc main() {\r\n\tclient, err := ethclient.Dial(\"http://127.0.0.1:8545\")\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\r\n\tcontractAddress := common.HexToAddress(\"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\")\r\n\t// sha3 of []byte(\"Upgraded(address)\")\r\n\ttopicHash := common.HexToHash(\"0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\")\r\n\tquery := ethereum.FilterQuery{\r\n\t\tFromBlock: big.NewInt(10743414),\r\n\t\tToBlock:   nil,\r\n\t\tAddresses: []common.Address{\r\n\t\t\tcontractAddress,\r\n\t\t},\r\n\t\tTopics: [][]common.Hash{{topicHash}},\r\n\t}\r\n\tb, err := client.BlockByHash(context.Background(), common.HexToHash(\"4e5a468e1e30332bee7bd3f2fe7ae60386651b4e98e0996548de238e503a1418\"))\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\tfmt.Println(b)\r\n\tlogs, err := client.FilterLogs(context.Background(), query)\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\r\n\tif len(logs) == 0 {\r\n\t\tlog.Fatal(\"empty\")\r\n\t}\r\n\thighestHeight := logs[0].BlockNumber\r\n\tupgradedAddress := common.BytesToAddress(logs[0].Data)\r\n\tfor _, log := range logs {\r\n\t\tif log.BlockNumber > highestHeight {\r\n\t\t\tupgradedAddress = common.BytesToAddress(log.Data)\r\n\t\t}\r\n\t}\r\n\r\n\tfmt.Println(upgradedAddress.String())\r\n}\r\n\r\n```\r\n\r\nThank you.\r\n\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21778/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21778/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/725463375",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21778#issuecomment-725463375",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21778",
    "id": 725463375,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNTQ2MzM3NQ==",
    "user": {
      "login": "AusIV",
      "id": 977954,
      "node_id": "MDQ6VXNlcjk3Nzk1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/977954?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AusIV",
      "html_url": "https://github.com/AusIV",
      "followers_url": "https://api.github.com/users/AusIV/followers",
      "following_url": "https://api.github.com/users/AusIV/following{/other_user}",
      "gists_url": "https://api.github.com/users/AusIV/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AusIV/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AusIV/subscriptions",
      "organizations_url": "https://api.github.com/users/AusIV/orgs",
      "repos_url": "https://api.github.com/users/AusIV/repos",
      "events_url": "https://api.github.com/users/AusIV/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AusIV/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-11T14:45:12Z",
    "updated_at": "2020-11-11T14:45:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Infura has a separate log index that allows it to search logs much more quickly than a conventional node can. A conventional node has to check your queries against the bloom filters for every block, and the receipts of any blocks where there is a hit on the bloom filters. For millions of blocks, that takes a long time.\r\n\r\nMy team has developed [Flume](https://github.com/openrelayxyz/log-flume/) - which is an open source version of Infura's log indexer. It takes a long while and several hundred gigs of disk to index all the data, but once you have the index built up responses are blazing fast.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/725463375/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/725957391",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21778#issuecomment-725957391",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21778",
    "id": 725957391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNTk1NzM5MQ==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-12T09:28:41Z",
    "updated_at": "2020-11-12T09:28:41Z",
    "author_association": "MEMBER",
    "body": "Do you need to search 76 days worth of logs or can you make the span a bit shorter? Can you specify how slow exactly it is on your setup?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/725957391/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/725957626",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21778#issuecomment-725957626",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21778",
    "id": 725957626,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNTk1NzYyNg==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-12T09:29:06Z",
    "updated_at": "2020-11-12T09:29:06Z",
    "author_association": "MEMBER",
    "body": "Some probably relevant context: the filter range is to from `10743414` to `nil` (which is ` 11241994` (as of today)), so almost 500K blocks. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/725957626/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/726082849",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21778#issuecomment-726082849",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21778",
    "id": 726082849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjA4Mjg0OQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-12T13:38:26Z",
    "updated_at": "2020-11-12T13:38:26Z",
    "author_association": "MEMBER",
    "body": "The receipt lookup is a bit suboptimal. We do use a bloom filter to deduce which blocks are even interesting. That's pretty fast. Afterwards, we need to go through the `hits` and compare the topic more granularly, which filters out some false positives. And then we deliver the results. \r\n\r\nHowever, the initial loading of receipts is not a simple \"load from disk\". It's a three-step process: \r\n\r\n1. Load receipts from disk,  \r\n2. Load block body from disk\r\n3. Use block body to populate receipt metadata. \r\n\r\nSo what we could do is \r\n\r\n1. Load 'interesting' receipts from disk, without metadata \r\n2. Filter out those that aren't interesting (doesn't fit topic etc) \r\n2. Load metadata \r\n\r\nThat would probably reduce the time, a little bit. YMMV",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/726082849/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/726125112",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21778#issuecomment-726125112",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21778",
    "id": 726125112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjEyNTExMg==",
    "user": {
      "login": "quentinlesceller",
      "id": 11842328,
      "node_id": "MDQ6VXNlcjExODQyMzI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11842328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/quentinlesceller",
      "html_url": "https://github.com/quentinlesceller",
      "followers_url": "https://api.github.com/users/quentinlesceller/followers",
      "following_url": "https://api.github.com/users/quentinlesceller/following{/other_user}",
      "gists_url": "https://api.github.com/users/quentinlesceller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quentinlesceller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quentinlesceller/subscriptions",
      "organizations_url": "https://api.github.com/users/quentinlesceller/orgs",
      "repos_url": "https://api.github.com/users/quentinlesceller/repos",
      "events_url": "https://api.github.com/users/quentinlesceller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quentinlesceller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-12T14:50:28Z",
    "updated_at": "2020-11-12T14:50:28Z",
    "author_association": "NONE",
    "body": "> Do you need to search 76 days worth of logs or can you make the span a bit shorter? \r\n\r\nI need to know the address of the latest implementation of the Upgradable Contract (OpenZeppelin Upgradable interface). I haven't find any other way to do it. So yeah basically scan the blocks from the latest `Upgraded` event. I need to fetch the exact address in order to check whether or not I have the ABI stored in DB. \r\nConsidering that it doesn't seems to be really feasible with my geth node without additional indexes, I think I'll hardcode the ABI of the original proxy contract for now as I don't think Centre USDC will ever change it. \r\n\r\n> Can you specify how slow exactly it is on your setup?\r\n\r\nTo be honest it was something well above 5/10 minutes so I stopped the query.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/726125112/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
