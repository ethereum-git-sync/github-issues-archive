{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24755",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24755/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24755/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24755/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/24755",
  "id": 1214192721,
  "node_id": "I_kwDOAOvK985IXxxR",
  "number": 24755,
  "title": "les/api.go:  bad loop var capture",
  "user": {
    "login": "suchfun",
    "id": 9260143,
    "node_id": "MDQ6VXNlcjkyNjAxNDM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9260143?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/suchfun",
    "html_url": "https://github.com/suchfun",
    "followers_url": "https://api.github.com/users/suchfun/followers",
    "following_url": "https://api.github.com/users/suchfun/following{/other_user}",
    "gists_url": "https://api.github.com/users/suchfun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/suchfun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/suchfun/subscriptions",
    "organizations_url": "https://api.github.com/users/suchfun/orgs",
    "repos_url": "https://api.github.com/users/suchfun/repos",
    "events_url": "https://api.github.com/users/suchfun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/suchfun/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-04-25T09:00:55Z",
  "updated_at": "2022-05-11T14:22:53Z",
  "closed_at": "2022-05-11T14:22:53Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nwe use tool [scopelint](https://github.com/kyoh86/scopelint) to scan this repo, and find some warnings.\r\n\r\nIn les/api.go: 258-310  line:\r\nloop var is used in some anonymous functions, and these anonymous functions will be executed **after the whole loop iteration**.\r\nbut they always only use the **last element** in the loop instead of all of them.\r\n```\r\n\tbenchmarks := make([]requestBenchmark, len(setups))\r\n\tfor i, setup := range setups {\r\n\t\tif t, ok := setup[\"type\"].(string); ok {\r\n\t\t\tgetInt := func(field string, def int) int {\r\n\t\t\t\tif value, ok := setup[field].(float64); ok {\r\n\t\t\t\t\treturn int(value)\r\n\t\t\t\t}\r\n\t\t\t\treturn def\r\n\t\t\t}\r\n\t\t\tgetBool := func(field string, def bool) bool {\r\n\t\t\t\tif value, ok := setup[field].(bool); ok {\r\n\t\t\t\t\treturn value\r\n\t\t\t\t}\r\n\t\t\t\treturn def\r\n\t\t\t}\r\n\t\t\tswitch t {\r\n\t\t\tcase \"header\":\r\n\t\t\t\tbenchmarks[i] = &benchmarkBlockHeaders{\r\n\t\t\t\t\tamount:  getInt(\"amount\", 1),\r\n\t\t\t\t\tskip:    getInt(\"skip\", 1),\r\n\t\t\t\t\tbyHash:  getBool(\"byHash\", false),\r\n\t\t\t\t\treverse: getBool(\"reverse\", false),\r\n\t\t\t\t}\r\n\t\t\tcase \"body\":\r\n\t\t\t\tbenchmarks[i] = &benchmarkBodiesOrReceipts{receipts: false}\r\n\t\t\tcase \"receipts\":\r\n\t\t\t\tbenchmarks[i] = &benchmarkBodiesOrReceipts{receipts: true}\r\n\t\t\tcase \"proof\":\r\n\t\t\t\tbenchmarks[i] = &benchmarkProofsOrCode{code: false}\r\n\t\t\tcase \"code\":\r\n\t\t\t\tbenchmarks[i] = &benchmarkProofsOrCode{code: true}\r\n\t\t\tcase \"cht\":\r\n\t\t\t\tbenchmarks[i] = &benchmarkHelperTrie{\r\n\t\t\t\t\tbloom:    false,\r\n\t\t\t\t\treqCount: getInt(\"amount\", 1),\r\n\t\t\t\t}\r\n\t\t\tcase \"bloom\":\r\n\t\t\t\tbenchmarks[i] = &benchmarkHelperTrie{\r\n\t\t\t\t\tbloom:    true,\r\n\t\t\t\t\treqCount: getInt(\"amount\", 1),\r\n\t\t\t\t}\r\n\t\t\tcase \"txSend\":\r\n\t\t\t\tbenchmarks[i] = &benchmarkTxSend{}\r\n\t\t\tcase \"txStatus\":\r\n\t\t\t\tbenchmarks[i] = &benchmarkTxStatus{}\r\n\t\t\tdefault:\r\n\t\t\t\treturn nil, errUnknownBenchmarkType\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn nil, errUnknownBenchmarkType\r\n\t\t}\r\n\t}\r\n\trs := api.server.handler.runBenchmark(benchmarks, passCount, time.Millisecond*time.Duration(length))\r\n```\r\n\r\n## Expected behavior\r\n\r\nvalue of loop var is different value from each iteration when getInt/getBool is called instead of a single value.\r\n\r\n### how to fix it\r\n\r\n```\r\n\tbenchmarks := make([]requestBenchmark, len(setups))\r\n\tfor i, setup := range setups {\r\n\r\n                setup := setup   // add this line\r\n\r\n\t\tif t, ok := setup[\"type\"].(string); ok {\r\n\t\t\tgetInt := func(field string, def int) int {\r\n\t\t\t\tif value, ok := setup[field].(float64); ok {\r\n\t\t\t\t\treturn int(value)\r\n\t\t\t\t}\r\n\t\t\t\treturn def\r\n\t\t\t}\r\n\t\t\tgetBool := func(field string, def bool) bool {\r\n\t\t\t\tif value, ok := setup[field].(bool); ok {\r\n\t\t\t\t\treturn value\r\n\t\t\t\t}\r\n\t\t\t\treturn def\r\n\t\t\t}\r\n\t\t\tswitch t {\r\n\t\t\tcase \"header\":\r\n\t\t\t\tbenchmarks[i] = &benchmarkBlockHeaders{\r\n\t\t\t\t\tamount:  getInt(\"amount\", 1),\r\n\t\t\t\t\tskip:    getInt(\"skip\", 1),\r\n\t\t\t\t\tbyHash:  getBool(\"byHash\", false),\r\n\t\t\t\t\treverse: getBool(\"reverse\", false),\r\n\t\t\t\t}\r\n\t\t\tcase \"body\":\r\n\t\t\t\tbenchmarks[i] = &benchmarkBodiesOrReceipts{receipts: false}\r\n\t\t\tcase \"receipts\":\r\n\t\t\t\tbenchmarks[i] = &benchmarkBodiesOrReceipts{receipts: true}\r\n\t\t\tcase \"proof\":\r\n\t\t\t\tbenchmarks[i] = &benchmarkProofsOrCode{code: false}\r\n\t\t\tcase \"code\":\r\n\t\t\t\tbenchmarks[i] = &benchmarkProofsOrCode{code: true}\r\n\t\t\tcase \"cht\":\r\n\t\t\t\tbenchmarks[i] = &benchmarkHelperTrie{\r\n\t\t\t\t\tbloom:    false,\r\n\t\t\t\t\treqCount: getInt(\"amount\", 1),\r\n\t\t\t\t}\r\n\t\t\tcase \"bloom\":\r\n\t\t\t\tbenchmarks[i] = &benchmarkHelperTrie{\r\n\t\t\t\t\tbloom:    true,\r\n\t\t\t\t\treqCount: getInt(\"amount\", 1),\r\n\t\t\t\t}\r\n\t\t\tcase \"txSend\":\r\n\t\t\t\tbenchmarks[i] = &benchmarkTxSend{}\r\n\t\t\tcase \"txStatus\":\r\n\t\t\t\tbenchmarks[i] = &benchmarkTxStatus{}\r\n\t\t\tdefault:\r\n\t\t\t\treturn nil, errUnknownBenchmarkType\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn nil, errUnknownBenchmarkType\r\n\t\t}\r\n\t}\r\n\trs := api.server.handler.runBenchmark(benchmarks, passCount, time.Millisecond*time.Duration(length))\r\n```\r\n",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24755/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24755/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1111893688",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24755#issuecomment-1111893688",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24755",
    "id": 1111893688,
    "node_id": "IC_kwDOAOvK985CRia4",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-28T08:24:50Z",
    "updated_at": "2022-04-28T08:24:50Z",
    "author_association": "MEMBER",
    "body": "Please send a pull request!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1111893688/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1123838885",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24755#issuecomment-1123838885",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24755",
    "id": 1123838885,
    "node_id": "IC_kwDOAOvK985C_Gul",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-11T14:22:53Z",
    "updated_at": "2022-05-11T14:22:53Z",
    "author_association": "MEMBER",
    "body": "I'm closing this. Feel free to open a PR -- I also think that this is fixed in my PR to add more linters: https://github.com/ethereum/go-ethereum/pull/24783 . No need to have it open as a ticket too, IMO",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1123838885/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
