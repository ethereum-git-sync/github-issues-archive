{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21184",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21184/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21184/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21184/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/21184",
  "id": 633238908,
  "node_id": "MDU6SXNzdWU2MzMyMzg5MDg=",
  "number": 21184,
  "title": "Multiple blocks with same timestamp in clique network.",
  "user": {
    "login": "MicahZoltu",
    "id": 886059,
    "node_id": "MDQ6VXNlcjg4NjA1OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MicahZoltu",
    "html_url": "https://github.com/MicahZoltu",
    "followers_url": "https://api.github.com/users/MicahZoltu/followers",
    "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
    "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
    "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
    "repos_url": "https://api.github.com/users/MicahZoltu/repos",
    "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2020-06-07T09:32:47Z",
  "updated_at": "2020-08-27T09:00:56Z",
  "closed_at": "2020-08-27T08:54:56Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "#### System information\r\nGeth version: `1.9.10`\r\nOS & Version: Docker\r\n\r\n#### Expected behaviour\r\nWhen mining a new block, its timestamp should always be higher than the timestamp of its parent.\r\n\r\n#### Actual behaviour\r\nWhen mining a new block in a clique network it is possible to sometimes end up with two blocks in a row that share a timestamp.\r\n\r\n#### Steps to reproduce the behaviour\r\n1. Setup a clique node with a `period` of `0` or run `docker container run --rm -it -p 8545:8545 keydonix/geth-clique`\r\n2. Submit two transactions back to back in rapid succession (less than 1 second between them).\r\n3. Notice that two blocks are mined (one containing each transaction) and they both have the same timestamp (if they don't run test again).\r\n\r\n## Thoughts\r\nI can appreciate that if the throughput of a clique chain with a block time of 0 is higher than 1 transaction per second you may end up far in the future if every block is always *at least* `parentblock.timestamp + 1`, I suspect that anyone running a one-transaction-per-block clique chain is doing it for testing and they likely don't care about time running into the future.  Further, if they are running a test chain, then it should try to mimick the real chain int as many ways as possible which includes the mainnet guarantee that `block.timestamp > block.parent.timestamp`.  At the moment, this guarantee is not upheld in clique networks and it can lead to failures in test that wouldn't present themselves in production.\r\n\r\nIf it is believed that some users desire the behavior of multiple blocks in a row sharing a timestamp, then perhaps an option can be added to the clique config that tells it whether to maintain consistency with the system clock, or maintain internal consistency with the chain.",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21184/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21184/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/640421264",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21184#issuecomment-640421264",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21184",
    "id": 640421264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDQyMTI2NA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-08T07:30:20Z",
    "updated_at": "2020-06-08T07:30:20Z",
    "author_association": "MEMBER",
    "body": "The Geth code is architected to ignore blocks in the future. It would be very messy for us to support a corner case where future blocks are permissible. Why is it important to reject same timestamps? In theory a PoW chain (mainnet) could also mine two blocks in the same second and they should be valid.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/640421264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/640430598",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21184#issuecomment-640430598",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21184",
    "id": 640430598,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDQzMDU5OA==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-08T07:48:53Z",
    "updated_at": "2020-06-08T07:48:53Z",
    "author_association": "MEMBER",
    "body": "https://github.com/ethereum/go-ethereum/blob/master/consensus/ethash/consensus.go#L257 : \r\n\r\n```golang\r\n\tif header.Time <= parent.Time {\r\n\t\treturn errOlderBlockTime\r\n\t}\r\n```\r\n\r\nSo for ethash it's not allowed to have same time on consecutive blocks",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/640430598/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/640434171",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21184#issuecomment-640434171",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21184",
    "id": 640434171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDQzNDE3MQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-08T07:55:23Z",
    "updated_at": "2020-06-08T07:55:23Z",
    "author_association": "MEMBER",
    "body": "Yeah, so this is only ever an issue in clique if the chain is configured with `0` interval blocks\r\n\r\n```golang\r\n\tif parent.Time+c.config.Period > header.Time {\r\n\t\treturn errInvalidTimestamp\r\n\t}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/640434171/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/640458578",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21184#issuecomment-640458578",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21184",
    "id": 640458578,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDQ1ODU3OA==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-08T08:40:57Z",
    "updated_at": "2020-06-08T08:40:57Z",
    "author_association": "MEMBER",
    "body": "Clique has to break one of the two PoW consensus rules.  Either it breaks the \"no future blocks\" rule or it breaks the \"blocks must have timestamp greater than parent blocks\" rule.  As someone who uses clique for testing (which I *suspect* is when this comes up), ensuring that block timestamps are consecutive is more useful than disallowing future blocks because in test.\r\n\r\nIf the internal architecture of Geth makes this a particularly challenging change, I can appreciate that and I'll just have to use other clients for testing (the stuff I'm testing requires blocks follow the consecutive block timestamp consensus rules).  I personally think that violating the \"time in the future\" is a better choice for testing than violating the \"block timestamps are consecutive\", but maybe there is a use-case for choosing the other way around?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/640458578/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/640524421",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21184#issuecomment-640524421",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21184",
    "id": 640524421,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDUyNDQyMQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-08T10:42:42Z",
    "updated_at": "2020-06-08T10:42:42Z",
    "author_association": "MEMBER",
    "body": ">  Either it breaks the \"no future blocks\" rule or\r\n\r\nThere's no such rule in ethash. There's a loose agreement between clients to not import blocks that are too far off in the future though, but it's not a consensus-rule. \r\n\r\n>  or it breaks the \"blocks must have timestamp greater than parent blocks\" rule. \r\n\r\nYeah, well, it has it's own rule, which is the a configurable via `c.config.Period`. If it's set to zero then it's set to zero. \r\n\r\nI guess what you'd want is maybe having `1` blocktime, but _combined_ with \"don't mine empty blocks\"? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/640524421/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/640542094",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21184#issuecomment-640542094",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21184",
    "id": 640542094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDU0MjA5NA==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-08T11:21:54Z",
    "updated_at": "2020-06-08T11:21:54Z",
    "author_association": "MEMBER",
    "body": "> I guess what you'd want is maybe having 1 blocktime, but combined with \"don't mine empty blocks\"?\r\n\r\n@holiman For testing I explicitly want the ability to mine *many* blocks per second.  I very much don't want it to wait for a full second when running a test suite that requires mining thousands of blocks.  😀  Anything that rate limits block creation automatically is a non-starter for anything short of full integration tests against a public network for *all* of my projects.\r\n\r\nSeparately, for the project I'm currently working on (which I admit is a bit niche in its requirements) I have a dependency on `block.timestamp` moving forward during testing.  For the same reason as above, I don't want to have my test suite sleep just to get time to move forward because that would make my tests take *forever* since a single test run mines over a hundred blocks (and I have only just started building out the suite).  Nethermind (and I think Parity) when running in their instant-block-mining mode will set the block.timestamp to `max(now, parentBlock.timestamp + 1)` which is great for testing because time does move forward at a rate of ~1 second per block (though not *exactly* that) but I am not rate limited in the speed at which my tests can burn through blocks.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/640542094/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/681811433",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21184#issuecomment-681811433",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21184",
    "id": 681811433,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MTgxMTQzMw==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-27T08:49:52Z",
    "updated_at": "2020-08-27T08:49:52Z",
    "author_association": "MEMBER",
    "body": "The current limit in geth is that it won't import a block which is `>30s` in the future. If we add a hack to the miner to bump the timestamp, it would still only allow you to operate on 30 blocks per second. Doing a more thorough rewrite of geth-internals to gracefully handle this case is probably not worth it, IMO. \r\n\r\nNot sure what to do here. It's not an error in clique or geth per se, but you have a particular usecase which doesn't work well with how Clique works...   ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/681811433/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/681817993",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21184#issuecomment-681817993",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21184",
    "id": 681817993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MTgxNzk5Mw==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-27T08:54:56Z",
    "updated_at": "2020-08-27T08:54:56Z",
    "author_association": "MEMBER",
    "body": "I think you're going to have to work with the throttling on your end to handle this. We've decided it's not sufficiently motivated to make any changes at this point, so closing this. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/681817993/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/681821280",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21184#issuecomment-681821280",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21184",
    "id": 681821280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MTgyMTI4MA==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-27T09:00:55Z",
    "updated_at": "2020-08-27T09:00:55Z",
    "author_association": "MEMBER",
    "body": "Thanks for closing this with a clear reason why.  😄 (too many GitHub issues just sit forever in an indecisive state).  I think my solution will be to just not test with Geth if I have code that cares about `block.timestamp`.  It is unfortunate, but I at least understand why things are the way they are now so thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/681821280/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
