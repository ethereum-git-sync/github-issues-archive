{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21224",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21224/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21224/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21224/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/21224",
  "id": 638480441,
  "node_id": "MDU6SXNzdWU2Mzg0ODA0NDE=",
  "number": 21224,
  "title": "[Feature Requests] geth --dev --fork",
  "user": {
    "login": "WyseNynja",
    "id": 624221,
    "node_id": "MDQ6VXNlcjYyNDIyMQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/624221?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/WyseNynja",
    "html_url": "https://github.com/WyseNynja",
    "followers_url": "https://api.github.com/users/WyseNynja/followers",
    "following_url": "https://api.github.com/users/WyseNynja/following{/other_user}",
    "gists_url": "https://api.github.com/users/WyseNynja/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/WyseNynja/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/WyseNynja/subscriptions",
    "organizations_url": "https://api.github.com/users/WyseNynja/orgs",
    "repos_url": "https://api.github.com/users/WyseNynja/repos",
    "events_url": "https://api.github.com/users/WyseNynja/events{/privacy}",
    "received_events_url": "https://api.github.com/users/WyseNynja/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    },
    {
      "id": 1132689577,
      "node_id": "MDU6TGFiZWwxMTMyNjg5NTc3",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:triage",
      "name": "status:triage",
      "color": "6be514",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2020-06-15T01:38:27Z",
  "updated_at": "2023-04-05T16:35:31Z",
  "closed_at": "2020-08-27T09:06:53Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "There are so many DeFi projects now that getting them all setup inside a devnet is complicated and very fragile.\r\n\r\nA pattern that is [growing in popularity](https://medium.com/@iamdefinitelyahuman/ethereum-mainnet-testing-with-python-and-brownie-82a61dee0222) is using `ganache-cli --fork`. This lets us deploy our own contracts and test transactions in a private test network built on top of another network's state (usually mainnet).\r\n\r\nWhile `ganache-cli --fork` has been a great help in getting my tests running quickly, over the last few weeks I have been running into several bugs in ganache that are making it difficult to fully test my contracts. Being a production client, I think that having a `--fork` flag in geth would be a lot more reliable way to test things.\r\n\r\n#### Expected behaviour\r\n\r\nThere are a few ways that I can see this working, but one way could look something like this:\r\n\r\n`geth --fork mainnet@$BLOCKNUM --fork-unlock ANYADDRESS --fork-fund SOMEADDRESS`\r\n\r\nThis would launch a node that fast syncs mainnet up to block `$BLOCKNUM`. Once it reaches that block, it hard forks to switch to a POA archive node with itself as the only signer. Blocks could either be mined on a timer or mined whenever a pending transaction is received.\r\n\r\nIt should also be easy to connect a second geth node to this forked node. This will make it simple to test various load-balancing strategies.\r\n\r\nThe switch to POA (or some other non-POW mining) is important since following mainnet's difficulty would make mining very difficult.\r\n\r\nThe node should also unlock any address and accept transactions for them without valid signatures. Similar to funding accounts in `genesis.json`, `--fork` should also be able fund addresses with configurable amounts of ETH. This will let us modify the mainnet contracts however we might need for our testing.\r\n\r\n\r\n#### Actual behaviour\r\n\r\nIt is currently possible to start geth with `--dev`, but that is a fresh chain without any mainnet state.\r\n\r\nI don't see any way to import mainnet blocks into this `--dev` network.\r\n\r\nAlso, if anyone can think of a way to do this today without having to modify geth, please let me know.",
  "closed_by": {
    "login": "adamschmideg",
    "id": 208822,
    "node_id": "MDQ6VXNlcjIwODgyMg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/208822?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/adamschmideg",
    "html_url": "https://github.com/adamschmideg",
    "followers_url": "https://api.github.com/users/adamschmideg/followers",
    "following_url": "https://api.github.com/users/adamschmideg/following{/other_user}",
    "gists_url": "https://api.github.com/users/adamschmideg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/adamschmideg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/adamschmideg/subscriptions",
    "organizations_url": "https://api.github.com/users/adamschmideg/orgs",
    "repos_url": "https://api.github.com/users/adamschmideg/repos",
    "events_url": "https://api.github.com/users/adamschmideg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/adamschmideg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21224/reactions",
    "total_count": 7,
    "+1": 7,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21224/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/643931515",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21224#issuecomment-643931515",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21224",
    "id": 643931515,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MzkzMTUxNQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-15T06:31:51Z",
    "updated_at": "2020-06-15T06:31:51Z",
    "author_association": "MEMBER",
    "body": "This sounds like several features. I haven't used ganache myself for years, so I'm not sure what `--fork` does more in-depth, but this is what I can read out from your descriptions: \r\n\r\n1. This would launch a node that fast syncs mainnet up to block $BLOCKNUM\r\n\r\nThat would be neat, but unfortunately that's not doable, due to the nature of fast-sync. It _might_ be possible, in some circumstances, if you happen to find an archive node which has old state. Otherwise, fast-sync syncs to whatever is the 'highest' block among your peers, and even that is not stable -- we have to move the 'pivot' point while the sync is ongoing, since our peer is pruning state as time goes by, and we can't rely on state older than `128` blocks to be available. \r\n\r\nFor full-sync, this is trivial though. \r\n\r\n2. Once it reaches that block, it hard forks to switch to a POA archive node with itself as the only signer. \r\n\r\nThat's a legit feature-request, switching from PoW to PoA. Not supported today. \r\n\r\n3. It should also be easy to connect a second geth node to this forked node. This will make it simple to test various load-balancing strategies.\r\n\r\nNot a feature-request, this should already be possible. \r\n\r\n4. The node should also unlock any address and accept transactions for them without valid signatures. \r\n\r\nThat's not doable today, and I don't believe it's a feature we'd accept. That means we'd need to have a special type of transaction RLP-encoding where we encode the `sender` also, which today is never encoded anywhere (it's derived from the signature). The change would touch a _lot_ of core areas, and add lots of complexity. \r\n\r\n5. Similar to funding accounts in genesis.json, --fork should also be able fund addresses with configurable amounts of ETH. This will let us modify the mainnet contracts however we might need for our testing.\r\n\r\nI guess that could be done, but it's a non-trivial feature to add. Especially if it should be done in a way that other nodes (parity/besu et al) want's to be able to partake, then we'd need a cross-client consensus definition of how such a distribution of ether should happen. Sounds easier to just add a faucet and do the disbursements from that faucet. We'd still have to \"insert\" a faucet at block N, but that is only one address.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/643931515/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/644229031",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21224#issuecomment-644229031",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21224",
    "id": 644229031,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDIyOTAzMQ==",
    "user": {
      "login": "WyseNynja",
      "id": 624221,
      "node_id": "MDQ6VXNlcjYyNDIyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/624221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WyseNynja",
      "html_url": "https://github.com/WyseNynja",
      "followers_url": "https://api.github.com/users/WyseNynja/followers",
      "following_url": "https://api.github.com/users/WyseNynja/following{/other_user}",
      "gists_url": "https://api.github.com/users/WyseNynja/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WyseNynja/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WyseNynja/subscriptions",
      "organizations_url": "https://api.github.com/users/WyseNynja/orgs",
      "repos_url": "https://api.github.com/users/WyseNynja/repos",
      "events_url": "https://api.github.com/users/WyseNynja/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WyseNynja/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-15T16:11:23Z",
    "updated_at": "2020-06-15T16:11:23Z",
    "author_association": "NONE",
    "body": "This looks similar to what I'm doing: https://github.com/trufflesuite/ganache-core/issues/526#issuecomment-591367152",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/644229031/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/644257948",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21224#issuecomment-644257948",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21224",
    "id": 644257948,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDI1Nzk0OA==",
    "user": {
      "login": "WyseNynja",
      "id": 624221,
      "node_id": "MDQ6VXNlcjYyNDIyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/624221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WyseNynja",
      "html_url": "https://github.com/WyseNynja",
      "followers_url": "https://api.github.com/users/WyseNynja/followers",
      "following_url": "https://api.github.com/users/WyseNynja/following{/other_user}",
      "gists_url": "https://api.github.com/users/WyseNynja/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WyseNynja/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WyseNynja/subscriptions",
      "organizations_url": "https://api.github.com/users/WyseNynja/orgs",
      "repos_url": "https://api.github.com/users/WyseNynja/repos",
      "events_url": "https://api.github.com/users/WyseNynja/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WyseNynja/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-15T17:07:55Z",
    "updated_at": "2020-06-15T17:11:30Z",
    "author_association": "NONE",
    "body": "Thanks for the reply!\r\n\r\n> This sounds like several features.\r\n\r\nYes, this is definitely a very large request. But I think the benefits of using a production client for development and testing make it worthwhile. I also didn't want to open multiple interconnected issues until we figured out exactly what this would look like. One place to talk this through seemed best for now.\r\n\r\n> 1. This would launch a node that fast syncs mainnet up to block $BLOCKNUM\r\n> \r\n> That would be neat, but unfortunately that's not doable, due to the nature of fast-sync. It _might_ be possible, in some circumstances, if you happen to find an archive node which has old state. Otherwise, fast-sync syncs to whatever is the 'highest' block among your peers, and even that is not stable -- we have to move the 'pivot' point while the sync is ongoing, since our peer is pruning state as time goes by, and we can't rely on state older than `128` blocks to be available.\r\n\r\nLuckily, I have an archive node; Using ganache-fork against a fast synced node starts throwing errors after 128 blocks.\r\n\r\nMy main goal was the automatic switching. I'd like a developer to only have to run one geth command, wait a short while, and then be able to develop.\r\n\r\n> 1. Once it reaches that block, it hard forks to switch to a POA archive node with itself as the only signer.\r\n> \r\n> That's a legit feature-request, switching from PoW to PoA. Not supported today.\r\n\r\nI was hoping this could use some existing code for the ETH 2.0 switch, but that works differently and so won't help us.\r\n\r\nFor now, I'm looking into [recompiling geth to have no difficulty to mine blocks](https://github.com/trufflesuite/ganache-core/issues/526#issuecomment-591367152).\r\n\r\n> \r\n> 1. It should also be easy to connect a second geth node to this forked node. This will make it simple to test various load-balancing strategies.\r\n> \r\n> Not a feature-request, this should already be possible.\r\n\r\nPossible yes, but I want to make sure it's easy and well documented.\r\n\r\n> \r\n> 1. The node should also unlock any address and accept transactions for them without valid signatures.\r\n> \r\n> That's not doable today, and I don't believe it's a feature we'd accept. That means we'd need to have a special type of transaction RLP-encoding where we encode the `sender` also, which today is never encoded anywhere (it's derived from the signature). The change would touch a _lot_ of core areas, and add lots of complexity.\r\n\r\nThat's too bad. I wonder how ganache is doing their `--unlock`, since they allow unlocking any account.\r\n\r\n> \r\n> 1. Similar to funding accounts in genesis.json, --fork should also be able fund addresses with configurable amounts of ETH. This will let us modify the mainnet contracts however we might need for our testing.\r\n> \r\n> I guess that could be done, but it's a non-trivial feature to add. Especially if it should be done in a way that other nodes (parity/besu et al) want's to be able to partake, then we'd need a cross-client consensus definition of how such a distribution of ether should happen. Sounds easier to just add a faucet and do the disbursements from that faucet. We'd still have to \"insert\" a faucet at block N, but that is only one address.\r\n\r\nA faucet would work, too. I just need some way to have a bunch of ETH for testing. For now, I think I'll just mine a bunch of low difficulty blocks and use the mining rewards.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/644257948/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/681823059",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21224#issuecomment-681823059",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21224",
    "id": 681823059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MTgyMzA1OQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-27T09:04:21Z",
    "updated_at": "2020-08-27T09:04:21Z",
    "author_association": "MEMBER",
    "body": "`ganache`'s reason for existence is to allow testing of advanced contract flows and events. Whereas `geth`'s primary reason is to  sync ethereum mainnet. If it can be used to do testing, that's great, but it's not the primary focus. \r\n\r\nThese features would be great, but we cannot implement all of this in geth -- it's too complicated and interferes with some core functioning of geth. \r\n\r\nI'm not sure what (if anything) we can do on our end to make lives easier for dapp=devs who wants to use geth. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/681823059/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/681823761",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21224#issuecomment-681823761",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21224",
    "id": 681823761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MTgyMzc2MQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-27T09:05:49Z",
    "updated_at": "2020-08-27T09:05:49Z",
    "author_association": "MEMBER",
    "body": "> While ganache-cli --fork has been a great help in getting my tests running quickly, over the last few weeks I have been running into several bugs in ganache that are making it difficult to fully test my contracts. Being a production client, I think that having a --fork flag in geth would be a lot more reliable way to test things.\r\n\r\nI think it would be better to focus on getting `ganache` to work, as they're already pursuing this feature. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/681823761/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1125843680",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21224#issuecomment-1125843680",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21224",
    "id": 1125843680,
    "node_id": "IC_kwDOAOvK985DGwLg",
    "user": {
      "login": "krasi-georgiev",
      "id": 8903888,
      "node_id": "MDQ6VXNlcjg5MDM4ODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8903888?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/krasi-georgiev",
      "html_url": "https://github.com/krasi-georgiev",
      "followers_url": "https://api.github.com/users/krasi-georgiev/followers",
      "following_url": "https://api.github.com/users/krasi-georgiev/following{/other_user}",
      "gists_url": "https://api.github.com/users/krasi-georgiev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/krasi-georgiev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krasi-georgiev/subscriptions",
      "organizations_url": "https://api.github.com/users/krasi-georgiev/orgs",
      "repos_url": "https://api.github.com/users/krasi-georgiev/repos",
      "events_url": "https://api.github.com/users/krasi-georgiev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/krasi-georgiev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-13T09:28:14Z",
    "updated_at": "2022-05-13T09:28:14Z",
    "author_association": "NONE",
    "body": "@holiman does this still stand difficult with the current codebase? I use hardhat forks, but would be much nicer if I can use go libraries for the tests\r\n\r\nCurrently in the tests I spin a hardhat fork using `exec.Command` but this is fragile. It would be nicer to have something like\r\n\r\n```\r\nimport github.com/ethereum/go-ethereum/fork\r\n\r\nclient:= fork.New()\r\n```\r\n\r\nhttps://github.com/cryptoriums/packages/blob/main/hardhat/hardhat.go#L33",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1125843680/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1219499836",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21224#issuecomment-1219499836",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21224",
    "id": 1219499836,
    "node_id": "IC_kwDOAOvK985IsBc8",
    "user": {
      "login": "root0x0",
      "id": 47841408,
      "node_id": "MDQ6VXNlcjQ3ODQxNDA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/47841408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/root0x0",
      "html_url": "https://github.com/root0x0",
      "followers_url": "https://api.github.com/users/root0x0/followers",
      "following_url": "https://api.github.com/users/root0x0/following{/other_user}",
      "gists_url": "https://api.github.com/users/root0x0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/root0x0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/root0x0/subscriptions",
      "organizations_url": "https://api.github.com/users/root0x0/orgs",
      "repos_url": "https://api.github.com/users/root0x0/repos",
      "events_url": "https://api.github.com/users/root0x0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/root0x0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-18T13:34:06Z",
    "updated_at": "2022-08-18T13:34:06Z",
    "author_association": "NONE",
    "body": "any information about this feature. It's really convenient for testing geth new feature.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1219499836/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1497793767",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21224#issuecomment-1497793767",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21224",
    "id": 1497793767,
    "node_id": "IC_kwDOAOvK985ZRoTn",
    "user": {
      "login": "ChinW",
      "id": 8458838,
      "node_id": "MDQ6VXNlcjg0NTg4Mzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8458838?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChinW",
      "html_url": "https://github.com/ChinW",
      "followers_url": "https://api.github.com/users/ChinW/followers",
      "following_url": "https://api.github.com/users/ChinW/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChinW/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChinW/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChinW/subscriptions",
      "organizations_url": "https://api.github.com/users/ChinW/orgs",
      "repos_url": "https://api.github.com/users/ChinW/repos",
      "events_url": "https://api.github.com/users/ChinW/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChinW/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-05T16:35:30Z",
    "updated_at": "2023-04-05T16:35:30Z",
    "author_association": "NONE",
    "body": "Same idea, how about simulated backend, will this achieve same effect within cost-effectively steps?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1497793767/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
