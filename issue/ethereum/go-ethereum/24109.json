{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24109",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24109/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24109/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24109/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/24109",
  "id": 1080126496,
  "node_id": "I_kwDOAOvK985AYWwg",
  "number": 24109,
  "title": "tracing: memory output erroneously reports post-op memory size",
  "user": {
    "login": "jochem-brouwer",
    "id": 29359032,
    "node_id": "MDQ6VXNlcjI5MzU5MDMy",
    "avatar_url": "https://avatars.githubusercontent.com/u/29359032?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jochem-brouwer",
    "html_url": "https://github.com/jochem-brouwer",
    "followers_url": "https://api.github.com/users/jochem-brouwer/followers",
    "following_url": "https://api.github.com/users/jochem-brouwer/following{/other_user}",
    "gists_url": "https://api.github.com/users/jochem-brouwer/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jochem-brouwer/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jochem-brouwer/subscriptions",
    "organizations_url": "https://api.github.com/users/jochem-brouwer/orgs",
    "repos_url": "https://api.github.com/users/jochem-brouwer/repos",
    "events_url": "https://api.github.com/users/jochem-brouwer/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jochem-brouwer/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    },
    {
      "id": 1153621723,
      "node_id": "MDU6TGFiZWwxMTUzNjIxNzIz",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:on-hold",
      "name": "status:on-hold",
      "color": "d89165",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2021-12-14T19:19:45Z",
  "updated_at": "2022-05-24T08:53:11Z",
  "closed_at": "2022-05-24T08:53:11Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "# Rationale\r\n\r\nCurrently, if you try to trace a transaction which MSTOREs something at an offset previously not written to, then the `debug_traceTransaction` will pad the memory with zeros. In the trace, usually the reported values are what happens *before* running the opcode. For instance, if the first opcode ran is a PUSH opcode, then the reported stack is empty. The next opcode, then the stack will have the single item just pushed on the stack. It is therefore strange that the memory is expanded before running the MSTORE opcode and it also does not reflect reality: if the current frame does not have enough gas to pay for the (quadratic) expansion gas costs of memory, then the memory is never expanded in the first place and the entire frame goes out-of-gas.\r\n\r\nThe current implementation violates [EIP-3155](https://eips.ethereum.org/EIPS/eip-3155), in particular this line: \r\n\r\n\"The `stack`, `memory` and `memSize` are the values before *execution* of the op\"\r\n\r\nWe found this behavior in an end-to-end test in [EthereumJS](https://github.com/ethereumjs/ethereumjs-monorepo/pull/1553).\r\n\r\n# Implementation\r\n\r\nReport memory without expanding it in a trace in case of a `MSTORE` or `MSTORE8` opcode.",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24109/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24109/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/994030061",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24109#issuecomment-994030061",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24109",
    "id": 994030061,
    "node_id": "IC_kwDOAOvK9847P7Ht",
    "user": {
      "login": "holgerd77",
      "id": 931137,
      "node_id": "MDQ6VXNlcjkzMTEzNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/931137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holgerd77",
      "html_url": "https://github.com/holgerd77",
      "followers_url": "https://api.github.com/users/holgerd77/followers",
      "following_url": "https://api.github.com/users/holgerd77/following{/other_user}",
      "gists_url": "https://api.github.com/users/holgerd77/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holgerd77/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holgerd77/subscriptions",
      "organizations_url": "https://api.github.com/users/holgerd77/orgs",
      "repos_url": "https://api.github.com/users/holgerd77/repos",
      "events_url": "https://api.github.com/users/holgerd77/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holgerd77/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-14T21:26:27Z",
    "updated_at": "2021-12-14T21:26:27Z",
    "author_association": "MEMBER",
    "body": "Will \"cc\" me in here. ðŸ™‚ ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/994030061/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/994440718",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24109#issuecomment-994440718",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24109",
    "id": 994440718,
    "node_id": "IC_kwDOAOvK9847RfYO",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-15T07:43:56Z",
    "updated_at": "2021-12-15T07:43:56Z",
    "author_association": "MEMBER",
    "body": "With this diff \r\n```diff\r\ndiff --git a/core/vm/interpreter.go b/core/vm/interpreter.go\r\nindex 1660e3ce0f..5836d1cfba 100644\r\n--- a/core/vm/interpreter.go\r\n+++ b/core/vm/interpreter.go\r\n@@ -221,14 +221,21 @@ func (in *EVMInterpreter) Run(contract *Contract, input []byte, readOnly bool) (\r\n \t\t\tif err != nil || !contract.UseGas(dynamicCost) {\r\n \t\t\t\treturn nil, ErrOutOfGas\r\n \t\t\t}\r\n+\t\t\t// Do the trace before memory is expanded\r\n+\t\t\tif in.cfg.Debug {\r\n+\t\t\t\tin.cfg.Tracer.CaptureState(pc, op, gasCopy, cost, callContext, in.returnData, in.evm.depth, err)\r\n+\t\t\t\tlogged = true\r\n+\t\t\t}\r\n \t\t\tif memorySize > 0 {\r\n \t\t\t\tmem.Resize(memorySize)\r\n \t\t\t}\r\n+\t\t} else {\r\n+\t\t\tif in.cfg.Debug {\r\n+\t\t\t\tin.cfg.Tracer.CaptureState(pc, op, gasCopy, cost, callContext, in.returnData, in.evm.depth, err)\r\n+\t\t\t\tlogged = true\r\n+\t\t\t}\r\n \t\t}\r\n-\t\tif in.cfg.Debug {\r\n-\t\t\tin.cfg.Tracer.CaptureState(pc, op, gasCopy, cost, callContext, in.returnData, in.evm.depth, err)\r\n-\t\t\tlogged = true\r\n-\t\t}\r\n+\r\n \t\t// execute the operation\r\n \t\tres, err = operation.execute(&pc, in, callContext)\r\n \t\tif err != nil {\r\n```\r\nWe get this result: \r\n```\r\n$ go run . --code 60406040526001 --json run \r\n{\"pc\":0,\"op\":96,\"gas\":\"0x2540be400\",\"gasCost\":\"0x3\",\"memory\":\"0x\",\"memSize\":0,\"stack\":[],\"returnData\":\"0x\",\"depth\":1,\"refund\":0,\"opName\":\"PUSH1\",\"error\":\"\"}\r\n{\"pc\":2,\"op\":96,\"gas\":\"0x2540be3fd\",\"gasCost\":\"0x3\",\"memory\":\"0x\",\"memSize\":0,\"stack\":[\"0x40\"],\"returnData\":\"0x\",\"depth\":1,\"refund\":0,\"opName\":\"PUSH1\",\"error\":\"\"}\r\n{\"pc\":4,\"op\":82,\"gas\":\"0x2540be3fa\",\"gasCost\":\"0xc\",\"memory\":\"0x\",\"memSize\":0,\"stack\":[\"0x40\",\"0x40\"],\"returnData\":\"0x\",\"depth\":1,\"refund\":0,\"opName\":\"MSTORE\",\"error\":\"\"}\r\n{\"pc\":5,\"op\":96,\"gas\":\"0x2540be3ee\",\"gasCost\":\"0x3\",\"memory\":\"0x\",\"memSize\":96,\"stack\":[],\"returnData\":\"0x\",\"depth\":1,\"refund\":0,\"opName\":\"PUSH1\",\"error\":\"\"}\r\n{\"pc\":7,\"op\":0,\"gas\":\"0x2540be3eb\",\"gasCost\":\"0x0\",\"memory\":\"0x\",\"memSize\":96,\"stack\":[\"0x1\"],\"returnData\":\"0x\",\"depth\":1,\"refund\":0,\"opName\":\"STOP\",\"error\":\"\"}\r\n```\r\nWhich on `master` returns this: \r\n```\r\n$ go run . --code 60406040526001 --json run \r\n{\"pc\":0,\"op\":96,\"gas\":\"0x2540be400\",\"gasCost\":\"0x3\",\"memory\":\"0x\",\"memSize\":0,\"stack\":[],\"returnData\":\"0x\",\"depth\":1,\"refund\":0,\"opName\":\"PUSH1\",\"error\":\"\"}\r\n{\"pc\":2,\"op\":96,\"gas\":\"0x2540be3fd\",\"gasCost\":\"0x3\",\"memory\":\"0x\",\"memSize\":0,\"stack\":[\"0x40\"],\"returnData\":\"0x\",\"depth\":1,\"refund\":0,\"opName\":\"PUSH1\",\"error\":\"\"}\r\n{\"pc\":4,\"op\":82,\"gas\":\"0x2540be3fa\",\"gasCost\":\"0xc\",\"memory\":\"0x\",\"memSize\":96,\"stack\":[\"0x40\",\"0x40\"],\"returnData\":\"0x\",\"depth\":1,\"refund\":0,\"opName\":\"MSTORE\",\"error\":\"\"}\r\n{\"pc\":5,\"op\":96,\"gas\":\"0x2540be3ee\",\"gasCost\":\"0x3\",\"memory\":\"0x\",\"memSize\":96,\"stack\":[],\"returnData\":\"0x\",\"depth\":1,\"refund\":0,\"opName\":\"PUSH1\",\"error\":\"\"}\r\n{\"pc\":7,\"op\":0,\"gas\":\"0x2540be3eb\",\"gasCost\":\"0x0\",\"memory\":\"0x\",\"memSize\":96,\"stack\":[\"0x1\"],\"returnData\":\"0x\",\"depth\":1,\"refund\":0,\"opName\":\"STOP\",\"error\":\"\"}\r\n```\r\nGo-evmlab does not care about such a change, since it's not supported by all clients, so it won't cause any problems for that fuzzing-engine. How about your fuzzer, @MariusVanDerWijden ? \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/994440718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/994529568",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24109#issuecomment-994529568",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24109",
    "id": 994529568,
    "node_id": "IC_kwDOAOvK9847R1Eg",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-15T09:02:08Z",
    "updated_at": "2021-12-15T09:02:08Z",
    "author_association": "MEMBER",
    "body": "Mine doesn't care either, it uses goevmlab to do the post-processing of traces ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/994529568/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/995600560",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24109#issuecomment-995600560",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24109",
    "id": 995600560,
    "node_id": "IC_kwDOAOvK9847V6iw",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-16T09:38:14Z",
    "updated_at": "2021-12-16T09:38:14Z",
    "author_association": "MEMBER",
    "body": "Let's wait and see what comes out of the https://github.com/ethereum/go-ethereum/pull/24113 , doing any change now might just become reverted when that goes in. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/995600560/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
