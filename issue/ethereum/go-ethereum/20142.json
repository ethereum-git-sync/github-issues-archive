{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20142",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20142/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20142/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20142/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/20142",
  "id": 500801865,
  "node_id": "MDU6SXNzdWU1MDA4MDE4NjU=",
  "number": 20142,
  "title": "ErrFutureBlock doesn't stop inserting weird block to local blockchain",
  "user": {
    "login": "CoreyLin",
    "id": 12689769,
    "node_id": "MDQ6VXNlcjEyNjg5NzY5",
    "avatar_url": "https://avatars.githubusercontent.com/u/12689769?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/CoreyLin",
    "html_url": "https://github.com/CoreyLin",
    "followers_url": "https://api.github.com/users/CoreyLin/followers",
    "following_url": "https://api.github.com/users/CoreyLin/following{/other_user}",
    "gists_url": "https://api.github.com/users/CoreyLin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/CoreyLin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/CoreyLin/subscriptions",
    "organizations_url": "https://api.github.com/users/CoreyLin/orgs",
    "repos_url": "https://api.github.com/users/CoreyLin/repos",
    "events_url": "https://api.github.com/users/CoreyLin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/CoreyLin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-10-01T10:20:10Z",
  "updated_at": "2019-10-01T10:31:01Z",
  "closed_at": "2019-10-01T10:31:01Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "#### Code information\r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/master/eth/fetcher/fetcher.go#L657\r\n\r\n```go\r\n\t\tcase consensus.ErrFutureBlock:\r\n\t\t\t// Weird future block, don't fail, but neither propagate\r\n\r\n\t\tdefault:\r\n```\r\n\r\n#### Expected behaviour\r\n\r\nSince ErrFutureBlock means the propagated block is a weird future block, the `insert` method should **return** immediately instead of continuing to invoking `f.insertChain(types.Blocks{block})` to insert it to current node's local blockchain. Maybe I didn't get it right here, but could you clarify it?\r\n\r\n#### Actual behaviour\r\n\r\nWhen ErrFutureBlock happens, it still continue to insert the weird block to local blockchain. Why?",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20142/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20142/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/536975069",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20142#issuecomment-536975069",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20142",
    "id": 536975069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNjk3NTA2OQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-01T10:30:41Z",
    "updated_at": "2019-10-01T10:30:41Z",
    "author_association": "MEMBER",
    "body": "What you're looking at is the `fetcher`. It isn't too intelligent, and the real import logic happens in blockchain.go. In this case, it will deliver the future block to the blockchain, which will put it into a future-cache and try to reprocess later. \r\n\r\nIt may be the case that our time is off, and our peers will deliver blocks that we consider to be in the future. In that case, we still want the blocks to be (eventually) processed.   ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/536975069/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
