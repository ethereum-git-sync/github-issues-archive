{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/21386",
  "id": 668383892,
  "node_id": "MDU6SXNzdWU2NjgzODM4OTI=",
  "number": 21386,
  "title": "\"Filter Not Found\" random exception with Geth and Web3J",
  "user": {
    "login": "kunalbarchha",
    "id": 15700661,
    "node_id": "MDQ6VXNlcjE1NzAwNjYx",
    "avatar_url": "https://avatars.githubusercontent.com/u/15700661?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kunalbarchha",
    "html_url": "https://github.com/kunalbarchha",
    "followers_url": "https://api.github.com/users/kunalbarchha/followers",
    "following_url": "https://api.github.com/users/kunalbarchha/following{/other_user}",
    "gists_url": "https://api.github.com/users/kunalbarchha/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kunalbarchha/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kunalbarchha/subscriptions",
    "organizations_url": "https://api.github.com/users/kunalbarchha/orgs",
    "repos_url": "https://api.github.com/users/kunalbarchha/repos",
    "events_url": "https://api.github.com/users/kunalbarchha/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kunalbarchha/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1149844711,
      "node_id": "MDU6TGFiZWwxMTQ5ODQ0NzEx",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/need:steps-to-reproduce",
      "name": "need:steps-to-reproduce",
      "color": "67bc12",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 29,
  "created_at": "2020-07-30T05:26:57Z",
  "updated_at": "2022-02-08T15:49:42Z",
  "closed_at": "2020-11-09T12:49:05Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "\r\n\r\nWeb3J version - 5.0.0 Geth version - 1.9.14 -Stable Ubuntu 18.04 - 64-bit 32GB RAM 1.9 TB HDD Geth fully synced and running JDK - 1.8 Spring - 1.5\r\n\r\nI have two subscription method defined as @PostConstruct : TransactionFlowable and BlockFlowable.\r\n\r\nThe problem is that the transactionFlowable subscription randomly throws \"Filter Not Found\" exception. It runs for few minutes to few hours. When I check Geth, it is running perfectly fine and syncing new incoming blocks.\r\n\r\nI have checked Web3J issues, StackOverflow, and what not. Somehow there are many people facing this issue, but there is no working solution posted. Some solutions are dated back to 2018, which are not relevant with latest version.\r\n\r\nIf someone can help out on the issue, that will be really nice. Need to run both the subscription reliably for production, 24x7.\r\n\r\nBelow is the code Snippet: \r\n\r\n```\r\n@PostConstruct\r\npublic void start() throws OnErrorNotImplementedException, ConnectException {\r\n\r\nWebSocketService socketService = new WebSocketService(config.getMainNetSocket(), true);        web3J();\r\nlog.info(\"Started >>>>>>> \");\r\n\r\nWeb3j web3jSocket = Web3j.build(socketService);\r\nsocketService.connect();\r\n\r\nsynchronized (this) {\r\n    Disposable subscription = web3jSocket.transactionFlowable().subscribe(\r\n            tx ->\r\n            {\r\n                log.info(\"Tx Hash > \" + tx.getHash());\r\n                getTransactionByHash(tx.getHash());\r\n\r\n            }, throwable -> {\r\n                log.info(\"Message >>>> \" + throwable.getMessage());\r\n                throwable.printStackTrace();\r\n            });\r\n}\r\n\r\n```\r\nException Log:\r\n\r\n```\r\n2020-06-10 11:27:25.284  INFO 20268 --- [pool-9-thread-1] c.c.e.c.e.services.SubscriptionService   : Tx Hash > 0x3ee4adbe9789189662cdc3d61655a4b68845c791f01c37db83c7e53ba8fa0a4c\r\n2020-06-10 11:27:26.758  INFO 20268 --- [pool-9-thread-1] c.c.e.c.e.services.SubscriptionService   : Got To Address >>>> 0x72ebd62060f78d91dc4bc33e8d88f39307365f87\r\n2020-06-10 11:27:26.760  INFO 20268 --- [pool-9-thread-1] c.c.e.c.e.services.SubscriptionService   : Tx Hash > 0x3d50ebcdb3fa95e81d9ef8f4ee978a80d3aa5a43b8d274d9f4860ee440d36e27\r\n2020-06-10 11:27:28.187  INFO 20268 --- [pool-9-thread-1] c.c.e.c.e.services.SubscriptionService   : Got To Address >>>> 0xdac17f958d2ee523a2206206994597c13d831ec7\r\n2020-06-10 11:27:28.189  INFO 20268 --- [pool-9-thread-1] c.c.e.c.e.services.SubscriptionService   : Tx Hash > 0xde55b36788acdfcf75fe080f1ca808a24e1e8e70bb266e0c6ce875892959d5d5\r\n2020-06-10 11:27:29.602  INFO 20268 --- [pool-9-thread-1] c.c.e.c.e.services.SubscriptionService   : Got To Address >>>> 0x47dcfcaf9aca005cbe955fbaff11165e70d28bca\r\n2020-06-10 11:27:29.603  INFO 20268 --- [pool-9-thread-1] c.c.e.c.e.services.SubscriptionService   : Tx Hash > 0x7592438f0a11f6cdcfb2f8374f8ffb5a2e7f6d0b1605b57676bfd0e26f9de2ff\r\n2020-06-10 11:27:31.020  INFO 20268 --- [pool-9-thread-1] c.c.e.c.e.services.SubscriptionService   : Got To Address >>>> 0xca9ca2dabf9024e7588ab10c8c2116f5809fa561\r\n2020-06-10 11:27:31.023  INFO 20268 --- [pool-9-thread-1] c.c.e.c.e.services.SubscriptionService   : Tx Hash > 0x3f36cd6caaa8b3d158bb3b6535cbe7502925a85ac44c405857473cec9aa8ee9f\r\n2020-06-10 11:27:32.439  INFO 20268 --- [pool-9-thread-1] c.c.e.c.e.services.SubscriptionService   : Got To Address >>>> 0xdac17f958d2ee523a2206206994597c13d831ec7\r\n2020-06-10 11:27:32.441  INFO 20268 --- [pool-9-thread-1] c.c.e.c.e.services.SubscriptionService   : Tx Hash > 0xd42751dded2588e9152bf3d81b3f84b729ee3aa17e6b46ebc8cbf09ee14e35bd\r\n2020-06-10 11:27:34.639  INFO 20268 --- [pool-9-thread-1] c.c.e.c.e.services.SubscriptionService   : Got To Address >>>> 0x98ad263a95f1ab1abff41f4d44b07c3240251a0a\r\n2020-06-10 11:27:34.643  WARN 20268 --- [pool-9-thread-2] org.web3j.protocol.core.filters.Filter   : The filter has not been found. Filter id: 66674882484826508490032443079398703497\r\n2020-06-10 11:27:34.654 ERROR 20268 --- [pool-9-thread-2] org.web3j.protocol.core.filters.Filter   : Error sending request\r\n\r\norg.web3j.protocol.core.filters.FilterException: Error sending request\r\nat org.web3j.protocol.core.filters.Filter.throwException(Filter.java:194) ~[core-5.0.0.jar:na]\r\nat org.web3j.protocol.core.filters.Filter.run(Filter.java:104) ~[core-5.0.0.jar:na]\r\nat org.web3j.protocol.core.filters.Filter.reinstallFilter(Filter.java:155) ~[core-5.0.0.jar:na]\r\nat org.web3j.protocol.core.filters.Filter.pollFilter(Filter.java:137) ~[core-5.0.0.jar:na]\r\nat org.web3j.protocol.core.filters.Filter.lambda$run$0(Filter.java:92) ~[core-5.0.0.jar:na]\r\nat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[na:1.8.0_241]\r\nat java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) ~[na:1.8.0_241]\r\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) ~[na:1.8.0_241]\r\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) ~[na:1.8.0_241]\r\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_241]\r\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_241]\r\nat java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_241]\r\nCaused by: java.io.IOException: Interrupted WebSocket request\r\nat org.web3j.protocol.websocket.WebSocketService.send(WebSocketService.java:168) ~[core-5.0.0.jar:na]\r\nat org.web3j.protocol.core.Request.send(Request.java:87) ~[core-5.0.0.jar:na]\r\nat org.web3j.protocol.core.filters.BlockFilter.sendRequest(BlockFil\r\n\r\nter.java:34) ~[core-5.0.0.jar:na]\r\nat org.web3j.protocol.core.filters.Filter.run(Filter.java:59) ~[core-5.0.0.jar:na]\r\n... 10 common frames omitted\r\nCaused by: java.lang.InterruptedException: null\r\nat java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:347) ~[na:1.8.0_241]\r\nat java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1908) ~[na:1.8.0_241]\r\nat org.web3j.protocol.websocket.WebSocketService.send(WebSocketService.java:165) ~[core-5.0.0.jar:na]\r\n... 13 common frames omitted\r\n```",
  "closed_by": {
    "login": "kunalbarchha",
    "id": 15700661,
    "node_id": "MDQ6VXNlcjE1NzAwNjYx",
    "avatar_url": "https://avatars.githubusercontent.com/u/15700661?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kunalbarchha",
    "html_url": "https://github.com/kunalbarchha",
    "followers_url": "https://api.github.com/users/kunalbarchha/followers",
    "following_url": "https://api.github.com/users/kunalbarchha/following{/other_user}",
    "gists_url": "https://api.github.com/users/kunalbarchha/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kunalbarchha/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kunalbarchha/subscriptions",
    "organizations_url": "https://api.github.com/users/kunalbarchha/orgs",
    "repos_url": "https://api.github.com/users/kunalbarchha/repos",
    "events_url": "https://api.github.com/users/kunalbarchha/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kunalbarchha/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/667855407",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-667855407",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 667855407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2Nzg1NTQwNw==",
    "user": {
      "login": "i-norden",
      "id": 28617060,
      "node_id": "MDQ6VXNlcjI4NjE3MDYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/28617060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/i-norden",
      "html_url": "https://github.com/i-norden",
      "followers_url": "https://api.github.com/users/i-norden/followers",
      "following_url": "https://api.github.com/users/i-norden/following{/other_user}",
      "gists_url": "https://api.github.com/users/i-norden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/i-norden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/i-norden/subscriptions",
      "organizations_url": "https://api.github.com/users/i-norden/orgs",
      "repos_url": "https://api.github.com/users/i-norden/repos",
      "events_url": "https://api.github.com/users/i-norden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/i-norden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-03T07:25:11Z",
    "updated_at": "2020-08-03T07:25:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "This looks like a [likely culprit](https://github.com/ethereum/go-ethereum/blob/master/eth/filters/api.go#L77). If a filter goes stale and is removed then that error could be thrown [here](https://github.com/ethereum/go-ethereum/blob/master/eth/filters/api.go#L379) or [here](https://github.com/ethereum/go-ethereum/blob/master/eth/filters/api.go#L438).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/667855407/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/669792660",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-669792660",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 669792660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTc5MjY2MA==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-06T08:34:09Z",
    "updated_at": "2020-08-06T08:34:09Z",
    "author_association": "MEMBER",
    "body": "> This looks like a likely culprit. If a filter goes stale and is removed then that error could be thrown here or here.\r\n\r\nWell, the linked places does throw `fmt.Errorf(\"filter not found\")`, but that exact sentence is not present in the logs. What we do see, however, is \r\n```\r\nCaused by: java.io.IOException: Interrupted WebSocket request\r\nat org.web3j.protocol.websocket.WebSocketService.send(WebSocketService.java:168) ~[core-5.0.0.jar:na]\r\nat org.web3j.protocol.core.Request.send(Request.java:87) ~[core-5.0.0.jar:na]\r\nat org.web3j.protocol.core.filters.BlockFilter.sendRequest(BlockFil\r\n```\r\nSo the cause might just as well be some websocket error. If geth returned an actual error to a json-rpc request, I would assume that the error message would be surfaced and included in the java log...? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/669792660/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/669795137",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-669795137",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 669795137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTc5NTEzNw==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-06T08:39:09Z",
    "updated_at": "2020-08-06T08:39:09Z",
    "author_association": "MEMBER",
    "body": "@i-norden it would be really helpful if you could provide us with the code to reproduce the issue - ideally reduced to the minimum that triggers the problem.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/669795137/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/670214858",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-670214858",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 670214858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDIxNDg1OA==",
    "user": {
      "login": "i-norden",
      "id": 28617060,
      "node_id": "MDQ6VXNlcjI4NjE3MDYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/28617060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/i-norden",
      "html_url": "https://github.com/i-norden",
      "followers_url": "https://api.github.com/users/i-norden/followers",
      "following_url": "https://api.github.com/users/i-norden/following{/other_user}",
      "gists_url": "https://api.github.com/users/i-norden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/i-norden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/i-norden/subscriptions",
      "organizations_url": "https://api.github.com/users/i-norden/orgs",
      "repos_url": "https://api.github.com/users/i-norden/repos",
      "events_url": "https://api.github.com/users/i-norden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/i-norden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-06T22:05:55Z",
    "updated_at": "2020-08-06T22:06:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ligi sorry for the confusion, it's not my error/issue. I was just throwing a potential lead out there.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/670214858/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/670421187",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-670421187",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 670421187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDQyMTE4Nw==",
    "user": {
      "login": "kunalbarchha",
      "id": 15700661,
      "node_id": "MDQ6VXNlcjE1NzAwNjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/15700661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kunalbarchha",
      "html_url": "https://github.com/kunalbarchha",
      "followers_url": "https://api.github.com/users/kunalbarchha/followers",
      "following_url": "https://api.github.com/users/kunalbarchha/following{/other_user}",
      "gists_url": "https://api.github.com/users/kunalbarchha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kunalbarchha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kunalbarchha/subscriptions",
      "organizations_url": "https://api.github.com/users/kunalbarchha/orgs",
      "repos_url": "https://api.github.com/users/kunalbarchha/repos",
      "events_url": "https://api.github.com/users/kunalbarchha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kunalbarchha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-07T09:18:42Z",
    "updated_at": "2020-08-07T09:18:42Z",
    "author_association": "NONE",
    "body": "@ligi That's my error. \r\n\r\n\"2020-06-10 11:27:34.643  WARN 20268 --- [pool-9-thread-2] org.web3j.protocol.core.filters.Filter   : The filter has not been found. Filter id: 66674882484826508490032443079398703497\"\r\n\r\nI am subscribing to pending transaction, it works perfectly fine for few minutes, but after that it throws above mentioned error. The same happens with block subscription. In short, Geth removes the filter after sometime and that causes this error. \r\n\r\nGoogle \" Random Filter not found web3j\" the issue is dated back to 2017 and I wonder why no one has yet posted it here. \r\n\r\nP.S : I tried running the local instance of GETH after full sync and also on Infura. The problem is same. I also talked with Infura support and they said it is a general issue most are facing. However, no one gave me a production-ready solution to this problem. \r\nBelow is the minimum code to reproduce the error: \r\n```\r\n\r\nWebSocketService socketService = new WebSocketService(\"wss://mainnet.infura.io/ws/v3/<infura token>\", true);\r\n    Web3j web3j = Web3j.build(new HttpService(\"https://rinkeby.infura.io/v3/<infura token>\"));\r\n\r\n    @PostConstruct\r\n    public void start() throws OnErrorNotImplementedException, ConnectException {\r\n\r\n        log.info(\"Started >>>>>>> \");\r\n\r\n        Web3j web3jSocket = Web3j.build(socketService);\r\n        socketService.connect();\r\n\r\n        web3jSocket.transactionFlowable().subscribe(tx ->\r\n                {\r\n                    log.info(\"Tx Hash > \" +tx.getHash());\r\n//                    saveTxHash(tx.getHash());\r\n\r\n//                }, throwable -> {\r\n//                    log.info(\"Message >>>> \"+throwable.getMessage());\r\n//                        throwable.printStackTrace();\r\n                        }); \r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/670421187/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/670924211",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-670924211",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 670924211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDkyNDIxMQ==",
    "user": {
      "login": "kunalbarchha",
      "id": 15700661,
      "node_id": "MDQ6VXNlcjE1NzAwNjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/15700661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kunalbarchha",
      "html_url": "https://github.com/kunalbarchha",
      "followers_url": "https://api.github.com/users/kunalbarchha/followers",
      "following_url": "https://api.github.com/users/kunalbarchha/following{/other_user}",
      "gists_url": "https://api.github.com/users/kunalbarchha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kunalbarchha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kunalbarchha/subscriptions",
      "organizations_url": "https://api.github.com/users/kunalbarchha/orgs",
      "repos_url": "https://api.github.com/users/kunalbarchha/repos",
      "events_url": "https://api.github.com/users/kunalbarchha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kunalbarchha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-08T12:36:33Z",
    "updated_at": "2020-08-08T12:36:33Z",
    "author_association": "NONE",
    "body": "I think @i-norden  's comment makes sense : https://github.com/ethereum/go-ethereum/blob/master/eth/filters/api.go#L77\r\n\r\nI have tried tracking the time it takes to throw that exception, and it is usually in multiple of 5. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/670924211/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/671861635",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-671861635",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 671861635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTg2MTYzNQ==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-11T10:18:56Z",
    "updated_at": "2020-08-11T10:18:56Z",
    "author_association": "MEMBER",
    "body": "hm - I can't seem to repro it with the code you gave - running over 5min now - output here: https://gist.github.com/ligi/d7f8b0aeb19bbc81bf946249c3c553a2\r\ncode here: https://github.com/ligi/GethIssue21386",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/671861635/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/671864198",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-671864198",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 671864198,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTg2NDE5OA==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-11T10:25:01Z",
    "updated_at": "2020-08-11T10:25:01Z",
    "author_association": "MEMBER",
    "body": "dam - directly after sending this issue I got that error:\r\n\r\n```\r\nio.reactivex.exceptions.OnErrorNotImplementedException: The exception was not handled due to missing onError handler in the subscribe() method call. Further reading: https://github.com/ReactiveX/RxJava/wiki/Error-Handling | null\r\n\tat io.reactivex.internal.functions.Functions$OnErrorMissingConsumer.accept(Functions.java:704)\r\n\tat io.reactivex.internal.functions.Functions$OnErrorMissingConsumer.accept(Functions.java:701)\r\n\tat io.reactivex.internal.subscribers.LambdaSubscriber.onError(LambdaSubscriber.java:79)\r\n\tat io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber.drain(FlowableFlattenIterable.java:275)\r\n\tat io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber.onNext(FlowableFlattenIterable.java:174)\r\n\tat io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber.tryEmitScalar(FlowableFlatMap.java:234)\r\n\tat io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber.onNext(FlowableFlatMap.java:152)\r\n\tat io.reactivex.internal.operators.flowable.FlowableCreate$BufferAsyncEmitter.drain(FlowableCreate.java:547)\r\n\tat io.reactivex.internal.operators.flowable.FlowableCreate$BufferAsyncEmitter.onNext(FlowableCreate.java:471)\r\n\tat org.web3j.protocol.core.filters.BlockFilter.process(BlockFilter.java:42)\r\n\tat org.web3j.protocol.core.filters.Filter.pollFilter(Filter.java:144)\r\n\tat org.web3j.protocol.core.filters.Filter.lambda$run$0(Filter.java:92)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.NullPointerException\r\n\tat org.web3j.protocol.rx.JsonRpc2_0Rx.toTransactions(JsonRpc2_0Rx.java:252)\r\n\tat io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber.drain(FlowableFlattenIterable.java:265)\r\n\t... 15 more\r\nException in thread \"pool-3-thread-2\" io.reactivex.exceptions.OnErrorNotImplementedException: The exception was not handled due to missing onError handler in the subscribe() method call. Further reading: https://github.com/ReactiveX/RxJava/wiki/Error-Handling | null\r\n\tat io.reactivex.internal.functions.Functions$OnErrorMissingConsumer.accept(Functions.java:704)\r\n\tat io.reactivex.internal.functions.Functions$OnErrorMissingConsumer.accept(Functions.java:701)\r\n\tat io.reactivex.internal.subscribers.LambdaSubscriber.onError(LambdaSubscriber.java:79)\r\n\tat io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber.drain(FlowableFlattenIterable.java:275)\r\n\tat io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber.onNext(FlowableFlattenIterable.java:174)\r\n\tat io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber.tryEmitScalar(FlowableFlatMap.java:234)\r\n\tat io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber.onNext(FlowableFlatMap.java:152)\r\n\tat io.reactivex.internal.operators.flowable.FlowableCreate$BufferAsyncEmitter.drain(FlowableCreate.java:547)\r\n\tat io.reactivex.internal.operators.flowable.FlowableCreate$BufferAsyncEmitter.onNext(FlowableCreate.java:471)\r\n\tat org.web3j.protocol.core.filters.BlockFilter.process(BlockFilter.java:42)\r\n\tat org.web3j.protocol.core.filters.Filter.pollFilter(Filter.java:144)\r\n\tat org.web3j.protocol.core.filters.Filter.lambda$run$0(Filter.java:92)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.NullPointerException\r\n\tat org.web3j.protocol.rx.JsonRpc2_0Rx.toTransactions(JsonRpc2_0Rx.java:252)\r\n\tat io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber.drain(FlowableFlattenIterable.java:265)\r\n\t... 15 more\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/671864198/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/671882758",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-671882758",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 671882758,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTg4Mjc1OA==",
    "user": {
      "login": "kunalbarchha",
      "id": 15700661,
      "node_id": "MDQ6VXNlcjE1NzAwNjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/15700661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kunalbarchha",
      "html_url": "https://github.com/kunalbarchha",
      "followers_url": "https://api.github.com/users/kunalbarchha/followers",
      "following_url": "https://api.github.com/users/kunalbarchha/following{/other_user}",
      "gists_url": "https://api.github.com/users/kunalbarchha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kunalbarchha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kunalbarchha/subscriptions",
      "organizations_url": "https://api.github.com/users/kunalbarchha/orgs",
      "repos_url": "https://api.github.com/users/kunalbarchha/repos",
      "events_url": "https://api.github.com/users/kunalbarchha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kunalbarchha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-11T11:10:30Z",
    "updated_at": "2020-08-11T11:10:30Z",
    "author_association": "NONE",
    "body": "@ligi You are getting different exception because you have not implemented OnErrorNotImplemented exception. if you surround it in try and catch, then print the exception message that you receive from Geth, it will likely be \"Filter Not Found\". ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/671882758/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/671883713",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-671883713",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 671883713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTg4MzcxMw==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-11T11:12:52Z",
    "updated_at": "2020-08-11T11:12:52Z",
    "author_association": "MEMBER",
    "body": "Yea - just wrapped your code with a gradle script so the one that wants to look at it from the go side does not need to deal with java tooling ..\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/671883713/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/671891814",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-671891814",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 671891814,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTg5MTgxNA==",
    "user": {
      "login": "kunalbarchha",
      "id": 15700661,
      "node_id": "MDQ6VXNlcjE1NzAwNjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/15700661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kunalbarchha",
      "html_url": "https://github.com/kunalbarchha",
      "followers_url": "https://api.github.com/users/kunalbarchha/followers",
      "following_url": "https://api.github.com/users/kunalbarchha/following{/other_user}",
      "gists_url": "https://api.github.com/users/kunalbarchha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kunalbarchha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kunalbarchha/subscriptions",
      "organizations_url": "https://api.github.com/users/kunalbarchha/orgs",
      "repos_url": "https://api.github.com/users/kunalbarchha/repos",
      "events_url": "https://api.github.com/users/kunalbarchha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kunalbarchha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-11T11:32:26Z",
    "updated_at": "2020-08-11T11:32:26Z",
    "author_association": "NONE",
    "body": "Noted. I talked with Nethereum dev on Gitter and also with Web3J guy on Gitter, it has something to do with Filter being deleted by Geth. That was the same reply I got from Infura support. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/671891814/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/694145722",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-694145722",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 694145722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDE0NTcyMg==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-17T10:33:00Z",
    "updated_at": "2020-09-17T10:33:00Z",
    "author_association": "MEMBER",
    "body": "Actually, looking at the source of web3, and the error: \r\n```\r\n2020-06-10 11:27:34.643  WARN 20268 --- [pool-9-thread-2] org.web3j.protocol.core.filters.Filter   : The filter has not been found. Filter id: 66674882484826508490032443079398703497\r\n2020-06-10 11:27:34.654 ERROR 20268 --- [pool-9-thread-2] org.web3j.protocol.core.filters.Filter   : Error sending request\r\n\r\norg.web3j.protocol.core.filters.FilterException: Error sending request\r\nat org.web3j.protocol.core.filters.Filter.throwException(Filter.java:194) ~[core-5.0.0.jar:na]\r\nat org.web3j.protocol.core.filters.Filter.run(Filter.java:104) ~[core-5.0.0.jar:na]\r\nat org.web3j.protocol.core.filters.Filter.reinstallFilter(Filter.java:155) ~[core-5.0.0.jar:na]\r\n```\r\n\r\nIf the filter isn't found, they try to handle it here: https://github.com/web3j/web3j/blob/master/core/src/main/java/org/web3j/protocol/core/filters/Filter.java#L137 \r\n\r\nThe `reinstallfilter` tries to cancel it here: https://github.com/web3j/web3j/blob/master/core/src/main/java/org/web3j/protocol/core/filters/Filter.java#L154 \r\n\r\nAnd the cancel tries to cancel the filter with the given id (the one that couldn't be found, earlier): https://github.com/web3j/web3j/blob/master/core/src/main/java/org/web3j/protocol/core/filters/Filter.java#L162 , and throws all kinds of errors if it fails to cancel the-filter-that-doesn't-exist. \r\n\r\nSo it's definitely something that they try to handle, but fail to do. \r\n\r\nHowever, I've also tried to repro it locally. \r\n\r\nrepro.sh\r\n```bash\r\nres=`curl -X POST -H \"Content-type: application/json\" --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_newBlockFilter\",\"params\":[],\"id\":73}' localhost:8545 | jq  \".result\"`\r\n\r\npayload=\"{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"method\\\":\\\"eth_getFilterChanges\\\",\\\"params\\\":[$res],\\\"id\\\":73}\"\r\necho payload is $payload\r\n\r\nwhile :\r\ndo\r\n  curl -X POST -H \"Content-type: application/json\" --data $payload localhost:8545\r\n  sleep 10\r\ndone\r\n```\r\nRunning geth with `build/bin/geth --dev --dev.period 5 --http --ws --ws.origins=http://127.0.0.1:8546`. I've modified the various timeout timits to be `5s`, but all results I'm getting are the expected ones. As long as the next request happens within that deadline, the deadline is bumped. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/694145722/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/694155802",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-694155802",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 694155802,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDE1NTgwMg==",
    "user": {
      "login": "kunalbarchha",
      "id": 15700661,
      "node_id": "MDQ6VXNlcjE1NzAwNjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/15700661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kunalbarchha",
      "html_url": "https://github.com/kunalbarchha",
      "followers_url": "https://api.github.com/users/kunalbarchha/followers",
      "following_url": "https://api.github.com/users/kunalbarchha/following{/other_user}",
      "gists_url": "https://api.github.com/users/kunalbarchha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kunalbarchha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kunalbarchha/subscriptions",
      "organizations_url": "https://api.github.com/users/kunalbarchha/orgs",
      "repos_url": "https://api.github.com/users/kunalbarchha/repos",
      "events_url": "https://api.github.com/users/kunalbarchha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kunalbarchha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-17T10:56:18Z",
    "updated_at": "2020-09-17T10:56:18Z",
    "author_association": "NONE",
    "body": "@holiman I tried going through source code of GETH, Web3J, talked with so many people, but the issue still prevails. Any workaround or fix for this ? I wonder how other apps like Binance, or Bitfinex handle this scenario. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/694155802/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/694168440",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-694168440",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 694168440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDE2ODQ0MA==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-17T11:25:04Z",
    "updated_at": "2020-09-17T11:25:04Z",
    "author_association": "MEMBER",
    "body": "Yes, so to be clear -- the workaround is to not throw all kinds of error when cancelling a filter that doesn't actually exist on the server. This line: https://github.com/web3j/web3j/blob/master/core/src/main/java/org/web3j/protocol/core/filters/Filter.java#L154 . One way would be to catch+ignore any exceptions thrown here, and just continue reinstalling the filter. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/694168440/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/694169125",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-694169125",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 694169125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDE2OTEyNQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-17T11:26:48Z",
    "updated_at": "2020-09-17T11:26:48Z",
    "author_association": "MEMBER",
    "body": "The root cause _may_ be due to some bug I haven't yet found in geth, but web3j should be able to handle this problem fine -- they have already implemented the handling. It's just that their handling of it is a bit wrong.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/694169125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/694170686",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-694170686",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 694170686,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDE3MDY4Ng==",
    "user": {
      "login": "kunalbarchha",
      "id": 15700661,
      "node_id": "MDQ6VXNlcjE1NzAwNjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/15700661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kunalbarchha",
      "html_url": "https://github.com/kunalbarchha",
      "followers_url": "https://api.github.com/users/kunalbarchha/followers",
      "following_url": "https://api.github.com/users/kunalbarchha/following{/other_user}",
      "gists_url": "https://api.github.com/users/kunalbarchha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kunalbarchha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kunalbarchha/subscriptions",
      "organizations_url": "https://api.github.com/users/kunalbarchha/orgs",
      "repos_url": "https://api.github.com/users/kunalbarchha/repos",
      "events_url": "https://api.github.com/users/kunalbarchha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kunalbarchha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-17T11:30:22Z",
    "updated_at": "2020-09-17T11:30:22Z",
    "author_association": "NONE",
    "body": "@holiman My code doesn't cancel any filter. I am just subscribing to transactionFlowable to get transaction. Using those txhashes, I use gettransaction and then compare to my DB to see if there is any app wallet transaction. Either web3 or geth is destroying the subscribed filter. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/694170686/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/694171141",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-694171141",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 694171141,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDE3MTE0MQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-17T11:31:22Z",
    "updated_at": "2020-09-17T11:31:22Z",
    "author_association": "MEMBER",
    "body": "Hm, actuall, the line I pointed to isn't the culprit. I don't have a java workspace up, and can't really debug that now. But _something_ is funky with the lifecycle of filters in web3j, I think. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/694171141/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/694171649",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-694171649",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 694171649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDE3MTY0OQ==",
    "user": {
      "login": "kunalbarchha",
      "id": 15700661,
      "node_id": "MDQ6VXNlcjE1NzAwNjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/15700661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kunalbarchha",
      "html_url": "https://github.com/kunalbarchha",
      "followers_url": "https://api.github.com/users/kunalbarchha/followers",
      "following_url": "https://api.github.com/users/kunalbarchha/following{/other_user}",
      "gists_url": "https://api.github.com/users/kunalbarchha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kunalbarchha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kunalbarchha/subscriptions",
      "organizations_url": "https://api.github.com/users/kunalbarchha/orgs",
      "repos_url": "https://api.github.com/users/kunalbarchha/repos",
      "events_url": "https://api.github.com/users/kunalbarchha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kunalbarchha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-17T11:32:35Z",
    "updated_at": "2020-09-17T11:32:35Z",
    "author_association": "NONE",
    "body": "does this line seems to be a culprit in geth ? \r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/master/eth/filters/api.go#L77",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/694171649/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/694174714",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-694174714",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 694174714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDE3NDcxNA==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-17T11:39:57Z",
    "updated_at": "2020-09-17T11:39:57Z",
    "author_association": "MEMBER",
    "body": "There are a couple of paths which can delete the filter, that is one of them. It could happen that somehow the timer doesn't get reset properly (but my bash-repro above does reset the timer). The filter can also be deleted due to some internal error.\r\n \r\nBasically, a filter can be deleted internally (e.g. due to timeout on low activity), and the caller should then try to reinstall a new filter, which web3j tries to do.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/694174714/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/694183420",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-694183420",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 694183420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDE4MzQyMA==",
    "user": {
      "login": "kunalbarchha",
      "id": 15700661,
      "node_id": "MDQ6VXNlcjE1NzAwNjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/15700661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kunalbarchha",
      "html_url": "https://github.com/kunalbarchha",
      "followers_url": "https://api.github.com/users/kunalbarchha/followers",
      "following_url": "https://api.github.com/users/kunalbarchha/following{/other_user}",
      "gists_url": "https://api.github.com/users/kunalbarchha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kunalbarchha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kunalbarchha/subscriptions",
      "organizations_url": "https://api.github.com/users/kunalbarchha/orgs",
      "repos_url": "https://api.github.com/users/kunalbarchha/repos",
      "events_url": "https://api.github.com/users/kunalbarchha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kunalbarchha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-17T11:59:12Z",
    "updated_at": "2020-09-17T11:59:12Z",
    "author_association": "NONE",
    "body": "noted. Will wait for the update on fix, and same time will try to implement the workaround. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/694183420/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/705349828",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-705349828",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 705349828,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTM0OTgyOA==",
    "user": {
      "login": "kunalbarchha",
      "id": 15700661,
      "node_id": "MDQ6VXNlcjE1NzAwNjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/15700661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kunalbarchha",
      "html_url": "https://github.com/kunalbarchha",
      "followers_url": "https://api.github.com/users/kunalbarchha/followers",
      "following_url": "https://api.github.com/users/kunalbarchha/following{/other_user}",
      "gists_url": "https://api.github.com/users/kunalbarchha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kunalbarchha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kunalbarchha/subscriptions",
      "organizations_url": "https://api.github.com/users/kunalbarchha/orgs",
      "repos_url": "https://api.github.com/users/kunalbarchha/repos",
      "events_url": "https://api.github.com/users/kunalbarchha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kunalbarchha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-08T06:02:09Z",
    "updated_at": "2020-10-08T06:02:09Z",
    "author_association": "NONE",
    "body": "@holiman Any updates for the issue ? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/705349828/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/705390479",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-705390479",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 705390479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTM5MDQ3OQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-08T07:37:23Z",
    "updated_at": "2020-10-08T07:37:23Z",
    "author_association": "MEMBER",
    "body": "No, and I'm unlikely to do any updates. I haven't found any error in the way geth works, and my attempt to repro the issue is not working. When I run it, things work as expected. \r\nIn order to move the issue forward, a better reproduction case is needed (preferrably one that doesn't require kotlin/jvm to be installd). I suspect that the error is in Web3J, but I can't say for sure. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/705390479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/705391083",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-705391083",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 705391083,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTM5MTA4Mw==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-08T07:38:41Z",
    "updated_at": "2020-10-08T07:38:41Z",
    "author_association": "MEMBER",
    "body": "To clarify: \r\n\r\n> Basically, a filter can be deleted internally (e.g. due to timeout on low activity), and the caller should then try to reinstall a new filter, which web3j tries to do.\r\n\r\nSo basically, I think \"Filter not found\" is a red herring, and the real issue to investigate is why Web3J/geth fails during filter reinstallation.  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/705391083/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/706592061",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-706592061",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 706592061,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNjU5MjA2MQ==",
    "user": {
      "login": "kunalbarchha",
      "id": 15700661,
      "node_id": "MDQ6VXNlcjE1NzAwNjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/15700661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kunalbarchha",
      "html_url": "https://github.com/kunalbarchha",
      "followers_url": "https://api.github.com/users/kunalbarchha/followers",
      "following_url": "https://api.github.com/users/kunalbarchha/following{/other_user}",
      "gists_url": "https://api.github.com/users/kunalbarchha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kunalbarchha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kunalbarchha/subscriptions",
      "organizations_url": "https://api.github.com/users/kunalbarchha/orgs",
      "repos_url": "https://api.github.com/users/kunalbarchha/repos",
      "events_url": "https://api.github.com/users/kunalbarchha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kunalbarchha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-10T18:29:58Z",
    "updated_at": "2020-10-10T18:29:58Z",
    "author_association": "NONE",
    "body": "@holiman I have taken a different approach now. Setup a cron to check for new block every thirty seconds, fetch all txhashes from there, and then get tx details from those hashes. Not an ideal solution, but it's at least reliable compared to socket.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/706592061/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/723992023",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-723992023",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 723992023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzk5MjAyMw==",
    "user": {
      "login": "kunalbarchha",
      "id": 15700661,
      "node_id": "MDQ6VXNlcjE1NzAwNjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/15700661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kunalbarchha",
      "html_url": "https://github.com/kunalbarchha",
      "followers_url": "https://api.github.com/users/kunalbarchha/followers",
      "following_url": "https://api.github.com/users/kunalbarchha/following{/other_user}",
      "gists_url": "https://api.github.com/users/kunalbarchha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kunalbarchha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kunalbarchha/subscriptions",
      "organizations_url": "https://api.github.com/users/kunalbarchha/orgs",
      "repos_url": "https://api.github.com/users/kunalbarchha/repos",
      "events_url": "https://api.github.com/users/kunalbarchha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kunalbarchha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-09T12:48:40Z",
    "updated_at": "2020-11-09T12:48:58Z",
    "author_association": "NONE",
    "body": "The issue is resolved by using following logic:\r\n\r\n    Web3j web3j=Web3j.build((new HttpService(\"https://mainnet.infura.io/v3/<Infura Key>\")));\r\n\r\n    @PostConstruct\r\n    public void getLatestBlock(){\r\n\r\n    Thread thread = new Thread();\r\n    BlockNumberEntity entity;\r\n    Optional<BlockNumberEntity> optionalBlockNumberEntity=blockNumberRepository.findTopByIdGreaterThanEqual(1);\r\n\r\n    if (optionalBlockNumberEntity.isPresent()) {\r\n        thread.start();\r\n        entity = optionalBlockNumberEntity.get();\r\n        log.info(\"Last block number from DB >>>> \" +entity.getLastBlockNumber());\r\n\r\n        web3j.replayPastAndFutureTransactionsFlowable(DefaultBlockParameter.valueOf(entity.getLastBlockNumber().subtract(BigInteger.ONE)))\r\n                .subscribe(tx -> {\r\n                    entity.setLastBlockNumber(tx.getBlockNumber());\r\n                    log.info(\"Block Number >>>> \" + tx.getBlockNumber());\r\n                    log.info(\"To Address >>>>> \" + tx.getTo());\r\n                    checkWalletAddress(tx.getHash(), tx.getTo());\r\n\r\n                }, exception -> {\r\n                    log.info(exception.getMessage());\r\n                    if (exception != null) {\r\n                        blockNumberRepository.deleteAll();\r\n                        blockNumberRepository.save(entity);\r\n                        thread.interrupt();\r\n                        getLatestBlock();\r\n                    }\r\n                });\r\n    }\r\n    else{\r\n        thread.start();\r\n        entity=new BlockNumberEntity();\r\n        web3j.transactionFlowable().subscribe(tx -> {\r\n                    entity.setLastBlockNumber(tx.getBlockNumber());\r\n                    log.info(\"Block Number >>>> \" + tx.getBlockNumber());\r\n                    log.info(\"To Address >>>>> \" + tx.getTo());\r\n                    checkWalletAddress(tx.getHash(), tx.getTo());\r\n                }, exception -> {\r\n                    log.info(exception.getMessage());\r\n                    if (exception != null) {\r\n                        blockNumberRepository.deleteAll();\r\n                        blockNumberRepository.save(entity);\r\n                        thread.interrupt();\r\n                        getLatestBlock();\r\n                    }\r\n                });\r\n    }\r\n\r\nWhat this code does:\r\n\r\nInitiate on deployment, and it checks DB if there is any last block sync available. If not, it will start syncing with TransactionFlowable. When exception occurs, it stores the last successfully block sync number in DB, closes the threads, and restarts the method. This time, the last blocknumber is available in DB, so it will use replayPastTransaction API and start syncing from there. On Exception, it will again update the lastBlocknumber in DB, close thread, and start the method.\r\n\r\nHave been using it from last 72 hours, and achieved desired results.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/723992023/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/723992321",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-723992321",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 723992321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzk5MjMyMQ==",
    "user": {
      "login": "kunalbarchha",
      "id": 15700661,
      "node_id": "MDQ6VXNlcjE1NzAwNjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/15700661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kunalbarchha",
      "html_url": "https://github.com/kunalbarchha",
      "followers_url": "https://api.github.com/users/kunalbarchha/followers",
      "following_url": "https://api.github.com/users/kunalbarchha/following{/other_user}",
      "gists_url": "https://api.github.com/users/kunalbarchha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kunalbarchha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kunalbarchha/subscriptions",
      "organizations_url": "https://api.github.com/users/kunalbarchha/orgs",
      "repos_url": "https://api.github.com/users/kunalbarchha/repos",
      "events_url": "https://api.github.com/users/kunalbarchha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kunalbarchha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-09T12:49:19Z",
    "updated_at": "2020-11-09T12:49:19Z",
    "author_association": "NONE",
    "body": "Issue resolved with above code logic as workaround. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/723992321/reactions",
      "total_count": 5,
      "+1": 0,
      "-1": 4,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/902932772",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-902932772",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 902932772,
    "node_id": "IC_kwDOAOvK98410akk",
    "user": {
      "login": "KutkovetskyiVolodymyr",
      "id": 25223556,
      "node_id": "MDQ6VXNlcjI1MjIzNTU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/25223556?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KutkovetskyiVolodymyr",
      "html_url": "https://github.com/KutkovetskyiVolodymyr",
      "followers_url": "https://api.github.com/users/KutkovetskyiVolodymyr/followers",
      "following_url": "https://api.github.com/users/KutkovetskyiVolodymyr/following{/other_user}",
      "gists_url": "https://api.github.com/users/KutkovetskyiVolodymyr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KutkovetskyiVolodymyr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KutkovetskyiVolodymyr/subscriptions",
      "organizations_url": "https://api.github.com/users/KutkovetskyiVolodymyr/orgs",
      "repos_url": "https://api.github.com/users/KutkovetskyiVolodymyr/repos",
      "events_url": "https://api.github.com/users/KutkovetskyiVolodymyr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KutkovetskyiVolodymyr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-20T20:14:41Z",
    "updated_at": "2021-08-20T20:18:31Z",
    "author_association": "NONE",
    "body": "Hello @kunalbarchha . I copied your code completely, and I still get an exception that is not caught:\r\nIt works at least 5 minutes, the maximum lasted half an hour.\r\nweb3j.version 5.0.0\r\n\r\n\r\nIt doesn't even call \"Consumer<? super Throwable> onError\" in \"subscribe()\" method\r\n\r\nException:\r\n\r\n[pool-2-thread-2] WARN org.web3j.protocol.core.filters.Filter - The filter has not been found. Filter id: 249646877427942250117165666998719809292\r\n[pool-2-thread-2] ERROR org.web3j.protocol.core.filters.Filter - Error sending request\r\norg.web3j.protocol.core.filters.FilterException: Error sending request\r\n\tat org.web3j.protocol.core.filters.Filter.throwException(Filter.java:194)\r\n\tat org.web3j.protocol.core.filters.Filter.run(Filter.java:104)\r\n\tat org.web3j.protocol.core.filters.Filter.reinstallFilter(Filter.java:155)\r\n\tat org.web3j.protocol.core.filters.Filter.pollFilter(Filter.java:137)\r\n\tat org.web3j.protocol.core.filters.Filter.lambda$run$0(Filter.java:92)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n\tat java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)\r\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:830)\r\nCaused by: java.io.InterruptedIOException: interrupted\r\n\tat okio.Timeout.throwIfReached(Timeout.kt:98)\r\n\tat okio.OutputStreamSink.write(Okio.kt:53)\r\n\tat okio.AsyncTimeout$sink$1.write(AsyncTimeout.kt:103)\r\n\tat okio.RealBufferedSink.flush(RealBufferedSink.kt:247)\r\n\tat okhttp3.internal.http2.Http2Writer.flush(Http2Writer.kt:120)\r\n\tat okhttp3.internal.http2.Http2Connection.flush(Http2Connection.kt:407)\r\n\tat okhttp3.internal.http2.Http2Stream$FramingSink.close(Http2Stream.kt:626)\r\n\tat okio.ForwardingSink.close(ForwardingSink.kt:37)\r\n\tat okhttp3.internal.connection.Exchange$RequestBodySink.close(Exchange.kt:245)\r\n\tat okio.RealBufferedSink.close(RealBufferedSink.kt:268)\r\n\tat okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.kt:60)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n\tat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:37)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n\tat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:82)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n\tat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:84)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n\tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:71)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n\tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.kt:194)\r\n\tat okhttp3.RealCall.execute(RealCall.kt:67)\r\n\tat org.web3j.protocol.http.HttpService.performIO(HttpService.java:160)\r\n\tat org.web3j.protocol.Service.send(Service.java:48)\r\n\tat org.web3j.protocol.core.Request.send(Request.java:87)\r\n\tat org.web3j.protocol.core.filters.BlockFilter.sendRequest(BlockFilter.java:34)\r\n\tat org.web3j.protocol.core.filters.Filter.run(Filter.java:59)\r\n\t... 9 more",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/902932772/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/903047297",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-903047297",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 903047297,
    "node_id": "IC_kwDOAOvK984102iB",
    "user": {
      "login": "kunalbarchha",
      "id": 15700661,
      "node_id": "MDQ6VXNlcjE1NzAwNjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/15700661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kunalbarchha",
      "html_url": "https://github.com/kunalbarchha",
      "followers_url": "https://api.github.com/users/kunalbarchha/followers",
      "following_url": "https://api.github.com/users/kunalbarchha/following{/other_user}",
      "gists_url": "https://api.github.com/users/kunalbarchha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kunalbarchha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kunalbarchha/subscriptions",
      "organizations_url": "https://api.github.com/users/kunalbarchha/orgs",
      "repos_url": "https://api.github.com/users/kunalbarchha/repos",
      "events_url": "https://api.github.com/users/kunalbarchha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kunalbarchha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-21T03:26:39Z",
    "updated_at": "2021-08-21T03:26:39Z",
    "author_association": "NONE",
    "body": "Can you share your code snippet. The logic works fine for me since the day\nI posted this solution.\n\nOn Sat, Aug 21, 2021, 1:44 AM Kutkovetskyi Volodymyr <\n***@***.***> wrote:\n\n> Hello @kunalbarchha <https://github.com/kunalbarchha> . I copied your\n> code completely, and I still get an exception that is not caught:\n> It works at least 5 minutes, the maximum lasted half an hour.\n> web3j.version 5.0.0\n>\n> [pool-2-thread-2] WARN org.web3j.protocol.core.filters.Filter - The filter\n> has not been found. Filter id: 249646877427942250117165666998719809292\n> [pool-2-thread-2] ERROR org.web3j.protocol.core.filters.Filter - Error\n> sending request\n> org.web3j.protocol.core.filters.FilterException: Error sending request\n> at org.web3j.protocol.core.filters.Filter.throwException(Filter.java:194)\n> at org.web3j.protocol.core.filters.Filter.run(Filter.java:104)\n> at org.web3j.protocol.core.filters.Filter.reinstallFilter(Filter.java:155)\n> at org.web3j.protocol.core.filters.Filter.pollFilter(Filter.java:137)\n> at org.web3j.protocol.core.filters.Filter.lambda$run$0(Filter.java:92)\n> at\n> java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n> at\n> java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)\n> at\n> java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)\n> at\n> java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n> at\n> java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n> at java.base/java.lang.Thread.run(Thread.java:830)\n> Caused by: java.io.InterruptedIOException: interrupted\n> at okio.Timeout.throwIfReached(Timeout.kt:98)\n> at okio.OutputStreamSink.write(Okio.kt:53)\n> at okio.AsyncTimeout$sink$1.write(AsyncTimeout.kt:103)\n> at okio.RealBufferedSink.flush(RealBufferedSink.kt:247)\n> at okhttp3.internal.http2.Http2Writer.flush(Http2Writer.kt:120)\n> at okhttp3.internal.http2.Http2Connection.flush(Http2Connection.kt:407)\n> at okhttp3.internal.http2.Http2Stream$FramingSink.close(Http2Stream.kt:626)\n> at okio.ForwardingSink.close(ForwardingSink.kt:37)\n> at\n> okhttp3.internal.connection.Exchange$RequestBodySink.close(Exchange.kt:245)\n> at okio.RealBufferedSink.close(RealBufferedSink.kt:268)\n> at\n> okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.kt:60)\n> at\n> okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\n> at\n> okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:37)\n> at\n> okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\n> at\n> okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\n> at\n> okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:82)\n> at\n> okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\n> at\n> okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\n> at\n> okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:84)\n> at\n> okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\n> at\n> okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:71)\n> at\n> okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\n> at\n> okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\n> at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.kt:194)\n> at okhttp3.RealCall.execute(RealCall.kt:67)\n> at org.web3j.protocol.http.HttpService.performIO(HttpService.java:160)\n> at org.web3j.protocol.Service.send(Service.java:48)\n> at org.web3j.protocol.core.Request.send(Request.java:87)\n> at\n> org.web3j.protocol.core.filters.BlockFilter.sendRequest(BlockFilter.java:34)\n> at org.web3j.protocol.core.filters.Filter.run(Filter.java:59)\n> ... 9 more\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-902932772>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ADXZFNNWRTL4UU7YHDK3HFTT52ZTZANCNFSM4PM32Z5Q>\n> .\n> Triage notifications on the go with GitHub Mobile for iOS\n> <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>\n> or Android\n> <https://play.google.com/store/apps/details?id=com.github.android&utm_campaign=notification-email>\n> .\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/903047297/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1032754226",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21386#issuecomment-1032754226",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21386",
    "id": 1032754226,
    "node_id": "IC_kwDOAOvK9849jpQy",
    "user": {
      "login": "SantiagoEphere",
      "id": 97454890,
      "node_id": "U_kgDOBc8LKg",
      "avatar_url": "https://avatars.githubusercontent.com/u/97454890?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SantiagoEphere",
      "html_url": "https://github.com/SantiagoEphere",
      "followers_url": "https://api.github.com/users/SantiagoEphere/followers",
      "following_url": "https://api.github.com/users/SantiagoEphere/following{/other_user}",
      "gists_url": "https://api.github.com/users/SantiagoEphere/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SantiagoEphere/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SantiagoEphere/subscriptions",
      "organizations_url": "https://api.github.com/users/SantiagoEphere/orgs",
      "repos_url": "https://api.github.com/users/SantiagoEphere/repos",
      "events_url": "https://api.github.com/users/SantiagoEphere/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SantiagoEphere/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-08T15:46:13Z",
    "updated_at": "2022-02-08T15:49:42Z",
    "author_association": "NONE",
    "body": "@kunalbarchha Hey, I am having this issue and trying to reproduce your solution. (Nice btw)\r\n getLatestBlock(); Is a method you created? What does it do? Is it relevant to the solution? In what part of the solution is the filter re established?  Also the isPresent() mehod for your block entity, what does it actually do?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1032754226/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
