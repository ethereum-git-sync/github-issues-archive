{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27110",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27110/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27110/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27110/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/27110",
  "id": 1672660388,
  "node_id": "I_kwDOAOvK985jssWk",
  "number": 27110,
  "title": "Unmatched buffer size of channel in some tests",
  "user": {
    "login": "Mskxn",
    "id": 118117161,
    "node_id": "U_kgDOBwpTKQ",
    "avatar_url": "https://avatars.githubusercontent.com/u/118117161?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Mskxn",
    "html_url": "https://github.com/Mskxn",
    "followers_url": "https://api.github.com/users/Mskxn/followers",
    "following_url": "https://api.github.com/users/Mskxn/following{/other_user}",
    "gists_url": "https://api.github.com/users/Mskxn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Mskxn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Mskxn/subscriptions",
    "organizations_url": "https://api.github.com/users/Mskxn/orgs",
    "repos_url": "https://api.github.com/users/Mskxn/repos",
    "events_url": "https://api.github.com/users/Mskxn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Mskxn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-04-18T08:55:14Z",
  "updated_at": "2023-04-19T01:24:52Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "verify functions in block_fetcher_test.go below will quit to recv from the channel if there is a timeout.\r\nhttps://github.com/ethereum/go-ethereum/blob/5e4d726e2a05aee80a75e5f99fd699f220dd503e/eth/fetcher/block_fetcher_test.go#L328-L339\r\nAnd will make a hanging goroutine at the hook function in tests if the channnel buffer size is not matched with the invoke times of the verify function, for example, here in `TestHashMemoryExhaustionAttack`:\r\nhttps://github.com/ethereum/go-ethereum/blob/5e4d726e2a05aee80a75e5f99fd699f220dd503e/eth/fetcher/block_fetcher_test.go#L856-L857\r\nhttps://github.com/ethereum/go-ethereum/blob/5e4d726e2a05aee80a75e5f99fd699f220dd503e/eth/fetcher/block_fetcher_test.go#L889-L892\r\n\r\nThere are similar problems in `TestEmptyBlockShortCircuit`, `TestBlockMemoryExhaustionAttack`, `TestFullSequentialAnnouncements`, `TestLightSequentialAnnouncements`, `TestFullConcurrentAnnouncements` and `TestLightConcurrentAnnouncements`.\r\nt.Fatal will not eliminate the hang as they are it only make current goroutines exit.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27110/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27110/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1514004639",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27110#issuecomment-1514004639",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27110",
    "id": 1514004639,
    "node_id": "IC_kwDOAOvK985aPeCf",
    "user": {
      "login": "Mskxn",
      "id": 118117161,
      "node_id": "U_kgDOBwpTKQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/118117161?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mskxn",
      "html_url": "https://github.com/Mskxn",
      "followers_url": "https://api.github.com/users/Mskxn/followers",
      "following_url": "https://api.github.com/users/Mskxn/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mskxn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mskxn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mskxn/subscriptions",
      "organizations_url": "https://api.github.com/users/Mskxn/orgs",
      "repos_url": "https://api.github.com/users/Mskxn/repos",
      "events_url": "https://api.github.com/users/Mskxn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mskxn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-19T01:24:51Z",
    "updated_at": "2023-04-19T01:24:51Z",
    "author_association": "NONE",
    "body": "Are these synchronized channels `imported` necessary? This leak seems can be solved by add the buffer size up to the times of function calls of `verifyImport*`.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1514004639/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
