{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25899",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25899/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25899/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25899/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/25899",
  "id": 1392087094,
  "node_id": "I_kwDOAOvK985S-ZA2",
  "number": 25899,
  "title": "GraphQL: \"block\" query ignores hash if both hash and number are present",
  "user": {
    "login": "DragonDev1906",
    "id": 8270201,
    "node_id": "MDQ6VXNlcjgyNzAyMDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8270201?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/DragonDev1906",
    "html_url": "https://github.com/DragonDev1906",
    "followers_url": "https://api.github.com/users/DragonDev1906/followers",
    "following_url": "https://api.github.com/users/DragonDev1906/following{/other_user}",
    "gists_url": "https://api.github.com/users/DragonDev1906/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/DragonDev1906/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/DragonDev1906/subscriptions",
    "organizations_url": "https://api.github.com/users/DragonDev1906/orgs",
    "repos_url": "https://api.github.com/users/DragonDev1906/repos",
    "events_url": "https://api.github.com/users/DragonDev1906/events{/privacy}",
    "received_events_url": "https://api.github.com/users/DragonDev1906/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "s1na",
    "id": 1591639,
    "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/s1na",
    "html_url": "https://github.com/s1na",
    "followers_url": "https://api.github.com/users/s1na/followers",
    "following_url": "https://api.github.com/users/s1na/following{/other_user}",
    "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
    "organizations_url": "https://api.github.com/users/s1na/orgs",
    "repos_url": "https://api.github.com/users/s1na/repos",
    "events_url": "https://api.github.com/users/s1na/events{/privacy}",
    "received_events_url": "https://api.github.com/users/s1na/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-09-30T08:46:31Z",
  "updated_at": "2022-10-05T17:24:02Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: `1.10.25-stable` (and current master)\r\n\r\n#### Expected behaviour\r\nRequesting a block by hash AND number using graphql should only return the block if both are valid.\r\n\r\n#### Actual behaviour\r\nIf both arguments are set Go-Ethereum only cares about the number and ignores the hash argument. This could cause an unsuspecting user to assume he got the block he wants.\r\n\r\nThe query description does not inform the user about this (non-intuitive in my opinion) behavior either:\r\n> Block fetches an Ethereum block by number or by hash. If neither is supplied, the most recent known block is returned.\r\n\r\n#### Steps to reproduce the behaviour\r\n1) Submit the following GraphQL request to Go-Ethereum (with hash beeing different from the real hash at that number, this is on Goerli):\r\n\r\n```\r\nquery testBlockWithConflictingHashAndNumber {\r\n  conflicting:block(number:7670343, hash:\"0x37bea088a214c679358d6af9d54442151ec34cb5dcc58f0f5b6e572e01e6ed1f\") {\r\n    number\r\n    hash\r\n    parent{hash}\r\n  }\r\n  number:block(number:7670343) {\r\n    number\r\n    hash\r\n    parent{hash}\r\n  }\r\n  hash:block(hash:\"0x37bea088a214c679358d6af9d54442151ec34cb5dcc58f0f5b6e572e01e6ed1f\") {\r\n    number\r\n    hash\r\n    parent{hash}\r\n  }\r\n}\r\n```\r\n2) Look at the response. The first entry returns a block with the expected number but a different hash, completely ignoring the hash argument instead of detecting this and returning there is no block with this hash and number.\r\n```\r\n{\r\n  \"data\": {\r\n    \"conflicting\": {\r\n      \"number\": 7670343,\r\n      \"hash\": \"0x3ae1a25a8c75226ca7fc2904a833d1fdb252dd69268b1bcc2139388bd190b8bb\",\r\n      \"parent\": {\r\n        \"hash\": \"0x37bea088a214c679358d6af9d54442151ec34cb5dcc58f0f5b6e572e01e6ed1f\"\r\n      }\r\n    },\r\n    \"number\": {\r\n      \"number\": 7670343,\r\n      \"hash\": \"0x3ae1a25a8c75226ca7fc2904a833d1fdb252dd69268b1bcc2139388bd190b8bb\",\r\n      \"parent\": {\r\n        \"hash\": \"0x37bea088a214c679358d6af9d54442151ec34cb5dcc58f0f5b6e572e01e6ed1f\"\r\n      }\r\n    },\r\n    \"hash\": {\r\n      \"number\": 7670342,\r\n      \"hash\": \"0x37bea088a214c679358d6af9d54442151ec34cb5dcc58f0f5b6e572e01e6ed1f\",\r\n      \"parent\": {\r\n        \"hash\": \"0x3bf17cb2276be603000a7a45678ecb1ed0b432c0309de9a5611f17381a367204\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n**Edit**:\r\nThis becomes even clearer when setting hash to 0x0000..0000:\r\n```\r\n\r\nquery testBlockWithConflictingHashAndNumber {\r\n  conflicting:block(number:7670343, hash:\"0x0000000000000000000000000000000000000000000000000000000000000000\") {\r\n    number\r\n    hash\r\n    parent{hash}\r\n  }\r\n  number:block(number:7670343) {\r\n    number\r\n    hash\r\n    parent{hash}\r\n  }\r\n  hash:block(hash:\"0x0000000000000000000000000000000000000000000000000000000000000000\") {\r\n    number\r\n    hash\r\n    parent{hash}\r\n  }\r\n```\r\n\r\nResults in:\r\n```\r\n{\r\n  \"errors\": [\r\n    {\r\n      \"message\": \"header for hash not found\",\r\n      \"path\": [\r\n        \"hash\"\r\n      ]\r\n    }\r\n  ],\r\n  \"data\": {\r\n    \"conflicting\": {\r\n      \"number\": 7670343,\r\n      \"hash\": \"0x3ae1a25a8c75226ca7fc2904a833d1fdb252dd69268b1bcc2139388bd190b8bb\",\r\n      \"parent\": {\r\n        \"hash\": \"0x37bea088a214c679358d6af9d54442151ec34cb5dcc58f0f5b6e572e01e6ed1f\"\r\n      }\r\n    },\r\n    \"number\": {\r\n      \"number\": 7670343,\r\n      \"hash\": \"0x3ae1a25a8c75226ca7fc2904a833d1fdb252dd69268b1bcc2139388bd190b8bb\",\r\n      \"parent\": {\r\n        \"hash\": \"0x37bea088a214c679358d6af9d54442151ec34cb5dcc58f0f5b6e572e01e6ed1f\"\r\n      }\r\n    },\r\n    \"hash\": null\r\n  }\r\n}\r\n```\r\n\r\nAnd happily returns the \"conflicting\" block.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25899/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25899/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1263459273",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25899#issuecomment-1263459273",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25899",
    "id": 1263459273,
    "node_id": "IC_kwDOAOvK985LTtvJ",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-30T11:33:56Z",
    "updated_at": "2022-09-30T11:33:56Z",
    "author_association": "MEMBER",
    "body": "If this is the specification:\r\n\r\n> Block fetches an Ethereum block by number or by hash. If neither is supplied, the most recent known block is returned.\r\n\r\n\r\nThen I'd say the behaviour when both are supplied is undefined. But I don't know if there exist any official spec for this.. ? \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1263459273/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1263496542",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/25899#issuecomment-1263496542",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/25899",
    "id": 1263496542,
    "node_id": "IC_kwDOAOvK985LT21e",
    "user": {
      "login": "DragonDev1906",
      "id": 8270201,
      "node_id": "MDQ6VXNlcjgyNzAyMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8270201?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DragonDev1906",
      "html_url": "https://github.com/DragonDev1906",
      "followers_url": "https://api.github.com/users/DragonDev1906/followers",
      "following_url": "https://api.github.com/users/DragonDev1906/following{/other_user}",
      "gists_url": "https://api.github.com/users/DragonDev1906/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DragonDev1906/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DragonDev1906/subscriptions",
      "organizations_url": "https://api.github.com/users/DragonDev1906/orgs",
      "repos_url": "https://api.github.com/users/DragonDev1906/repos",
      "events_url": "https://api.github.com/users/DragonDev1906/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DragonDev1906/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-30T12:14:19Z",
    "updated_at": "2022-09-30T12:14:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Only the stagnant [EIP-1767](https://eips.ethereum.org/EIPS/eip-1767) as far as I know, which does not define a behavior for this case either.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1263496542/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
