{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21734",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21734/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21734/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21734/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/21734",
  "id": 726770894,
  "node_id": "MDU6SXNzdWU3MjY3NzA4OTQ=",
  "number": 21734,
  "title": "[private net] Can't open RPC on unlocked account, can't deploy contract on a locked account",
  "user": {
    "login": "1337SEnergy",
    "id": 18123409,
    "node_id": "MDQ6VXNlcjE4MTIzNDA5",
    "avatar_url": "https://avatars.githubusercontent.com/u/18123409?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/1337SEnergy",
    "html_url": "https://github.com/1337SEnergy",
    "followers_url": "https://api.github.com/users/1337SEnergy/followers",
    "following_url": "https://api.github.com/users/1337SEnergy/following{/other_user}",
    "gists_url": "https://api.github.com/users/1337SEnergy/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/1337SEnergy/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/1337SEnergy/subscriptions",
    "organizations_url": "https://api.github.com/users/1337SEnergy/orgs",
    "repos_url": "https://api.github.com/users/1337SEnergy/repos",
    "events_url": "https://api.github.com/users/1337SEnergy/events{/privacy}",
    "received_events_url": "https://api.github.com/users/1337SEnergy/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1132689577,
      "node_id": "MDU6TGFiZWwxMTMyNjg5NTc3",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:triage",
      "name": "status:triage",
      "color": "6be514",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2020-10-21T18:42:01Z",
  "updated_at": "2020-10-22T11:15:04Z",
  "closed_at": "2020-10-22T08:40:02Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "alright, so, I have no idea how this is designed, but:\r\n1. I'm running private PoA chain\r\n2. I have to open geth node with unlocked account in order to actually mine new blocks\r\n3. if I open a geth node with unlocked account, I have to disable IPC/RPC\r\n4. if I have disabled IPC/RPC, I can't connect via remix to deploy the contract, because it requires unlocked account\r\n\r\nso, how am I actually supposed to work with this?",
  "closed_by": {
    "login": "ligi",
    "id": 111600,
    "node_id": "MDQ6VXNlcjExMTYwMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ligi",
    "html_url": "https://github.com/ligi",
    "followers_url": "https://api.github.com/users/ligi/followers",
    "following_url": "https://api.github.com/users/ligi/following{/other_user}",
    "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
    "organizations_url": "https://api.github.com/users/ligi/orgs",
    "repos_url": "https://api.github.com/users/ligi/repos",
    "events_url": "https://api.github.com/users/ligi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ligi/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21734/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21734/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/714223526",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21734#issuecomment-714223526",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21734",
    "id": 714223526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDIyMzUyNg==",
    "user": {
      "login": "ligi",
      "id": 111600,
      "node_id": "MDQ6VXNlcjExMTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ligi",
      "html_url": "https://github.com/ligi",
      "followers_url": "https://api.github.com/users/ligi/followers",
      "following_url": "https://api.github.com/users/ligi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ligi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ligi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ligi/subscriptions",
      "organizations_url": "https://api.github.com/users/ligi/orgs",
      "repos_url": "https://api.github.com/users/ligi/repos",
      "events_url": "https://api.github.com/users/ligi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ligi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-22T04:50:04Z",
    "updated_at": "2020-10-22T04:50:04Z",
    "author_association": "MEMBER",
    "body": "One solution I see is to have 2 nodes running:\r\n * one mining blocks with unlocked account and closed RPC\r\n * one just syncing the chains with an open RPC and no unlocked account\r\n\r\ndoes this work for you or is your chain so heavy that running 2 nodes is a problem?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/714223526/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/714314161",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21734#issuecomment-714314161",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21734",
    "id": 714314161,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDMxNDE2MQ==",
    "user": {
      "login": "1337SEnergy",
      "id": 18123409,
      "node_id": "MDQ6VXNlcjE4MTIzNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/18123409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/1337SEnergy",
      "html_url": "https://github.com/1337SEnergy",
      "followers_url": "https://api.github.com/users/1337SEnergy/followers",
      "following_url": "https://api.github.com/users/1337SEnergy/following{/other_user}",
      "gists_url": "https://api.github.com/users/1337SEnergy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/1337SEnergy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/1337SEnergy/subscriptions",
      "organizations_url": "https://api.github.com/users/1337SEnergy/orgs",
      "repos_url": "https://api.github.com/users/1337SEnergy/repos",
      "events_url": "https://api.github.com/users/1337SEnergy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/1337SEnergy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-22T08:09:06Z",
    "updated_at": "2020-10-22T08:10:29Z",
    "author_association": "NONE",
    "body": "> One solution I see is to have 2 nodes running:\r\n> \r\n> * one mining blocks with unlocked account and closed RPC\r\n> * one just syncing the chains with an open RPC and no unlocked account\r\n> \r\n> does this work for you or is your chain so heavy that running 2 nodes is a problem?\r\n\r\nthat's exactly the problem, in order to use remix, the account on the node has to be unlocked [to sign TXs] AND have enabled RPC [to let the remix actually connect]\r\n\r\nI was, in fact, originally using unlocked account on a mining node and another node for RPC/WS connection, but that node can't be used to deploy contracts via remix, as it has to have unlocked account, and I can't connect remix to the first (mining) node, as it has disabled RPC...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/714314161/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/714330957",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21734#issuecomment-714330957",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21734",
    "id": 714330957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDMzMDk1Nw==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-22T08:37:48Z",
    "updated_at": "2020-10-22T08:37:48Z",
    "author_association": "MEMBER",
    "body": "You _can_ use \r\n```\r\n  --allow-insecure-unlock             Allow insecure account unlocking when account-related RPCs are exposed by http\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/714330957/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/714332972",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21734#issuecomment-714332972",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21734",
    "id": 714332972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDMzMjk3Mg==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-22T08:41:18Z",
    "updated_at": "2020-10-22T08:41:18Z",
    "author_association": "MEMBER",
    "body": "Your options are\r\n\r\n- Explicitly allow unlocking accounts at the risk of remote attacks. If you know you have a private ephemeral network, it should be fine. This is @holiman's suggestion above.\r\n- Use IPC instead of HTTP as that permits unlocking accounts.\r\n- Run a separate miner and API node, connected via devp2p, one can mine, the other just serves requests.\r\n\r\nA fourth would be `--dev`, which unlocks the miner by default.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/714332972/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/714346229",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21734#issuecomment-714346229",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21734",
    "id": 714346229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDM0NjIyOQ==",
    "user": {
      "login": "1337SEnergy",
      "id": 18123409,
      "node_id": "MDQ6VXNlcjE4MTIzNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/18123409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/1337SEnergy",
      "html_url": "https://github.com/1337SEnergy",
      "followers_url": "https://api.github.com/users/1337SEnergy/followers",
      "following_url": "https://api.github.com/users/1337SEnergy/following{/other_user}",
      "gists_url": "https://api.github.com/users/1337SEnergy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/1337SEnergy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/1337SEnergy/subscriptions",
      "organizations_url": "https://api.github.com/users/1337SEnergy/orgs",
      "repos_url": "https://api.github.com/users/1337SEnergy/repos",
      "events_url": "https://api.github.com/users/1337SEnergy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/1337SEnergy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-22T09:02:42Z",
    "updated_at": "2020-10-22T09:02:42Z",
    "author_association": "NONE",
    "body": "@ligi I don't think this should be close -, yes, I can use --allow-insecure-unlock, but how do you imagine doing this on a mainnet? you don't want an unlocked account with remote access enabled... but you need an unlocked account in order deploy contracts via remix... the whole design behind this is flawed\r\n\r\n> Your options are\r\n> \r\n> * Explicitly allow unlocking accounts at the risk of remote attacks. If you know you have a private ephemeral network, it should be fine. This is @holiman's suggestion above.\r\n> * Use IPC instead of HTTP as that permits unlocking accounts.\r\n> * Run a separate miner and API node, connected via devp2p, one can mine, the other just serves requests.\r\n> \r\n> A fourth would be `--dev`, which unlocks the miner by default.\r\n\r\n@karalabe \r\n1. after moving this to the mainnet, I can't have unlocked account and RPC open, how could I solve this?\r\n2. as far as I understand it, RPC [what I assume you meant by http in this case] is a form of IPC... and remix either uses \"web3 provider\" with RPC connection, or \"injected web3\"... there's no information - neither on the remix website nor in docs on how to connect it via other means using IPC\r\n3. the problem is not really how to mine - when running on mainnet, there will not be a mining node as it's not using PoA, the problem is that the node that connects to remix has to have RPC enabled, but in order for geth to actually sign TXs, it has to have unlocked account, which is a security risk\r\n4. again, this is not really an issue with mining\r\n\r\nignore the fact that I am currently testing on private PoA net, but imagine you're running a full mainnet geth node, and you want to connect a remix to it...\r\n1. you enable RPC, so remix can connect\r\n2. you try to unlock the account, but it gives you an error saying that you can't do that with RPC enabled, as it's a security risk\r\n3. you restart the node with --allow-insecure-unlock\r\n4. your ETH gets stolen while you deploy and work with the contract\r\n\r\nor how does it actually work? I don't want to use MetaMask, but actually have an account as a keystore file that I can move around and my own node",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/714346229/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/714360355",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21734#issuecomment-714360355",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21734",
    "id": 714360355,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDM2MDM1NQ==",
    "user": {
      "login": "beyonderyue",
      "id": 15408094,
      "node_id": "MDQ6VXNlcjE1NDA4MDk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/15408094?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beyonderyue",
      "html_url": "https://github.com/beyonderyue",
      "followers_url": "https://api.github.com/users/beyonderyue/followers",
      "following_url": "https://api.github.com/users/beyonderyue/following{/other_user}",
      "gists_url": "https://api.github.com/users/beyonderyue/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beyonderyue/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beyonderyue/subscriptions",
      "organizations_url": "https://api.github.com/users/beyonderyue/orgs",
      "repos_url": "https://api.github.com/users/beyonderyue/repos",
      "events_url": "https://api.github.com/users/beyonderyue/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beyonderyue/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-22T09:25:59Z",
    "updated_at": "2020-10-22T09:25:59Z",
    "author_association": "NONE",
    "body": "Maybe remix is just for debugging contract...So please don't use remix on your mainnet geth node.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/714360355/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/714367432",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21734#issuecomment-714367432",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21734",
    "id": 714367432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDM2NzQzMg==",
    "user": {
      "login": "1337SEnergy",
      "id": 18123409,
      "node_id": "MDQ6VXNlcjE4MTIzNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/18123409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/1337SEnergy",
      "html_url": "https://github.com/1337SEnergy",
      "followers_url": "https://api.github.com/users/1337SEnergy/followers",
      "following_url": "https://api.github.com/users/1337SEnergy/following{/other_user}",
      "gists_url": "https://api.github.com/users/1337SEnergy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/1337SEnergy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/1337SEnergy/subscriptions",
      "organizations_url": "https://api.github.com/users/1337SEnergy/orgs",
      "repos_url": "https://api.github.com/users/1337SEnergy/repos",
      "events_url": "https://api.github.com/users/1337SEnergy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/1337SEnergy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-22T09:37:51Z",
    "updated_at": "2020-10-22T09:37:51Z",
    "author_association": "NONE",
    "body": "> Maybe remix is just for debugging contract...So please don't use remix on your mainnet geth node.\r\n\r\nalright, then what do you use when you work with SCs, when you say that the probably most feature-full IDE is \"just for debugging\" ?\r\nis the IDE you're using not connecting to the node via RPC?\r\nhow do you deploy contract via your own node? do you not send the compiled bytecode to the node via RPC, or however that actually works behind the scenes?\r\nif so, then how do you actually send the bytecode to the geth node and sign the deployment TX, if you do not have both, RPC enabled and account unlocked?\r\nkeep in mind that - for your pleasure - I am omitting the remix now, let's say I have compiled bytecode I want to deploy - I assume I have to send that bytecode to the node via RPC/IPC call, and sign the TX with an unlocked account... well, that's not possible, because having an unlocked account with open RPC/IPC is a security risk\r\nso... how do you actually do that?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/714367432/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/714370852",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21734#issuecomment-714370852",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21734",
    "id": 714370852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDM3MDg1Mg==",
    "user": {
      "login": "beyonderyue",
      "id": 15408094,
      "node_id": "MDQ6VXNlcjE1NDA4MDk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/15408094?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beyonderyue",
      "html_url": "https://github.com/beyonderyue",
      "followers_url": "https://api.github.com/users/beyonderyue/followers",
      "following_url": "https://api.github.com/users/beyonderyue/following{/other_user}",
      "gists_url": "https://api.github.com/users/beyonderyue/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beyonderyue/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beyonderyue/subscriptions",
      "organizations_url": "https://api.github.com/users/beyonderyue/orgs",
      "repos_url": "https://api.github.com/users/beyonderyue/repos",
      "events_url": "https://api.github.com/users/beyonderyue/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beyonderyue/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-22T09:43:25Z",
    "updated_at": "2020-10-22T09:43:25Z",
    "author_association": "NONE",
    "body": "> > Maybe remix is just for debugging contract...So please don't use remix on your mainnet geth node.\r\n> \r\n> alright, then what do you use when you work with SCs, when you say that the probably most feature-full IDE is \"just for debugging\" ?\r\n> is the IDE you're using not connecting to the node via RPC?\r\n> how do you deploy contract via your own node? do you not send the compiled bytecode to the node via RPC, or however that actually works behind the scenes?\r\n> if so, then how do you actually send the bytecode to the geth node and sign the deployment TX, if you do not have both, RPC enabled and account unlocked?\r\n> keep in mind that - for your pleasure - I am omitting the remix now, let's say I have compiled bytecode I want to deploy - I assume I have to send that bytecode to the node via RPC/IPC call, and sign the TX with an unlocked account... well, that's not possible, because having an unlocked account with open RPC/IPC is a security risk\r\n> so... how do you actually do that?\r\n\r\nActually， I use web3j for deploying and using the contract, and it sends signed raw transaction to the node, so I don't need unlock the account.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/714370852/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/714373758",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21734#issuecomment-714373758",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21734",
    "id": 714373758,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDM3Mzc1OA==",
    "user": {
      "login": "1337SEnergy",
      "id": 18123409,
      "node_id": "MDQ6VXNlcjE4MTIzNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/18123409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/1337SEnergy",
      "html_url": "https://github.com/1337SEnergy",
      "followers_url": "https://api.github.com/users/1337SEnergy/followers",
      "following_url": "https://api.github.com/users/1337SEnergy/following{/other_user}",
      "gists_url": "https://api.github.com/users/1337SEnergy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/1337SEnergy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/1337SEnergy/subscriptions",
      "organizations_url": "https://api.github.com/users/1337SEnergy/orgs",
      "repos_url": "https://api.github.com/users/1337SEnergy/repos",
      "events_url": "https://api.github.com/users/1337SEnergy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/1337SEnergy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-22T09:48:21Z",
    "updated_at": "2020-10-22T09:48:21Z",
    "author_association": "NONE",
    "body": "> > > Maybe remix is just for debugging contract...So please don't use remix on your mainnet geth node.\r\n> > \r\n> > \r\n> > alright, then what do you use when you work with SCs, when you say that the probably most feature-full IDE is \"just for debugging\" ?\r\n> > is the IDE you're using not connecting to the node via RPC?\r\n> > how do you deploy contract via your own node? do you not send the compiled bytecode to the node via RPC, or however that actually works behind the scenes?\r\n> > if so, then how do you actually send the bytecode to the geth node and sign the deployment TX, if you do not have both, RPC enabled and account unlocked?\r\n> > keep in mind that - for your pleasure - I am omitting the remix now, let's say I have compiled bytecode I want to deploy - I assume I have to send that bytecode to the node via RPC/IPC call, and sign the TX with an unlocked account... well, that's not possible, because having an unlocked account with open RPC/IPC is a security risk\r\n> > so... how do you actually do that?\r\n> \r\n> Actually， I use web3j for deploying and using the contract, and it sends signed raw transaction to the node, so I don't need unlock the account.\r\n\r\nyou need to sign that TX first, and you can't sign a TX with locked account... that's the point of unlocking the account first\r\nI assume you'll claim next that you have exported privkey and are using that to sign the TX, which, again, is not what this issue is about, as geth can't export privkeys, nor I'd want to, since, as mentioned already, I want to use the encrypted keystore that I can actually move",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/714373758/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/714379451",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21734#issuecomment-714379451",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21734",
    "id": 714379451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDM3OTQ1MQ==",
    "user": {
      "login": "beyonderyue",
      "id": 15408094,
      "node_id": "MDQ6VXNlcjE1NDA4MDk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/15408094?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beyonderyue",
      "html_url": "https://github.com/beyonderyue",
      "followers_url": "https://api.github.com/users/beyonderyue/followers",
      "following_url": "https://api.github.com/users/beyonderyue/following{/other_user}",
      "gists_url": "https://api.github.com/users/beyonderyue/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beyonderyue/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beyonderyue/subscriptions",
      "organizations_url": "https://api.github.com/users/beyonderyue/orgs",
      "repos_url": "https://api.github.com/users/beyonderyue/repos",
      "events_url": "https://api.github.com/users/beyonderyue/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beyonderyue/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-22T09:58:22Z",
    "updated_at": "2020-10-22T09:58:22Z",
    "author_association": "NONE",
    "body": "> > > > Maybe remix is just for debugging contract...So please don't use remix on your mainnet geth node.\r\n> > > \r\n> > > \r\n> > > alright, then what do you use when you work with SCs, when you say that the probably most feature-full IDE is \"just for debugging\" ?\r\n> > > is the IDE you're using not connecting to the node via RPC?\r\n> > > how do you deploy contract via your own node? do you not send the compiled bytecode to the node via RPC, or however that actually works behind the scenes?\r\n> > > if so, then how do you actually send the bytecode to the geth node and sign the deployment TX, if you do not have both, RPC enabled and account unlocked?\r\n> > > keep in mind that - for your pleasure - I am omitting the remix now, let's say I have compiled bytecode I want to deploy - I assume I have to send that bytecode to the node via RPC/IPC call, and sign the TX with an unlocked account... well, that's not possible, because having an unlocked account with open RPC/IPC is a security risk\r\n> > > so... how do you actually do that?\r\n> > \r\n> > \r\n> > Actually， I use web3j for deploying and using the contract, and it sends signed raw transaction to the node, so I don't need unlock the account.\r\n> \r\n> you need to sign that TX first, and you can't sign a TX with locked account... that's the point of unlocking the account first\r\n> I assume you'll claim next that you have exported privkey and are using that to sign the TX, which, again, is not what this issue is about, as geth can't export privkeys, nor I'd want to, since, as mentioned already, I want to use the encrypted keystore that I can actually move\r\n\r\nWeb3j can use the encrypted keystore directly if you want, so you don't need exported the privkey.  And if you don't want to use other tools, maybe you can ask help under remix project..",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/714379451/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/714389559",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21734#issuecomment-714389559",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21734",
    "id": 714389559,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDM4OTU1OQ==",
    "user": {
      "login": "1337SEnergy",
      "id": 18123409,
      "node_id": "MDQ6VXNlcjE4MTIzNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/18123409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/1337SEnergy",
      "html_url": "https://github.com/1337SEnergy",
      "followers_url": "https://api.github.com/users/1337SEnergy/followers",
      "following_url": "https://api.github.com/users/1337SEnergy/following{/other_user}",
      "gists_url": "https://api.github.com/users/1337SEnergy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/1337SEnergy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/1337SEnergy/subscriptions",
      "organizations_url": "https://api.github.com/users/1337SEnergy/orgs",
      "repos_url": "https://api.github.com/users/1337SEnergy/repos",
      "events_url": "https://api.github.com/users/1337SEnergy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/1337SEnergy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-22T10:15:04Z",
    "updated_at": "2020-10-22T10:15:04Z",
    "author_association": "NONE",
    "body": "bruh, please stop, you're just spamming here at this point, diminishing the actual chances of getting a reply from someone who actually can help me... this has nothing to do with remix really, I can compile the contract into bytecode in remix and then export that, which does not require connection to the node at all... what I need geth for is I need to send the compiled bytecode to the geth (via RPC) and let it sign it (but that requires unlocked account)\r\n\r\nthe point is that I need to get that bytecode into the geth, and let geth sign it INSTEAD of using yet another tool to sign it outside of geth... (like you and your web3j)\r\n\r\nyou're using web3j to sign transactions, which should be obvious to you, I need to use geth to sign the transaction\r\n\r\nyou obviously do not understand the point of this issue, regardless of how much time I spent trying to explain it to you, so please just stop",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/714389559/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/714421678",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/21734#issuecomment-714421678",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/21734",
    "id": 714421678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDQyMTY3OA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-22T11:15:04Z",
    "updated_at": "2020-10-22T11:15:04Z",
    "author_association": "MEMBER",
    "body": "@1337SEnergy You don't need to unlock an account to send a transaction though. You can use `personal_sendTransaction`, which is essentially the same as `eth_sendTransaction` but takes a second parameter - the account passphrase. That should always be preferred over unlocking an account because that way the key doesn't stay in memory, it's just decrypted, used for a single signature and discarded.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/714421678/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
