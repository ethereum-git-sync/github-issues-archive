{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27234",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27234/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27234/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27234/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/27234",
  "id": 1702635077,
  "node_id": "I_kwDOAOvK985lfCZF",
  "number": 27234,
  "title": "How to fork the mainnet programmatically and perform simulated transaction on forked state",
  "user": {
    "login": "Thankgod20",
    "id": 38052903,
    "node_id": "MDQ6VXNlcjM4MDUyOTAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/38052903?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Thankgod20",
    "html_url": "https://github.com/Thankgod20",
    "followers_url": "https://api.github.com/users/Thankgod20/followers",
    "following_url": "https://api.github.com/users/Thankgod20/following{/other_user}",
    "gists_url": "https://api.github.com/users/Thankgod20/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Thankgod20/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Thankgod20/subscriptions",
    "organizations_url": "https://api.github.com/users/Thankgod20/orgs",
    "repos_url": "https://api.github.com/users/Thankgod20/repos",
    "events_url": "https://api.github.com/users/Thankgod20/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Thankgod20/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 268304226,
      "node_id": "MDU6TGFiZWwyNjgzMDQyMjY=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:docs",
      "name": "type:docs",
      "color": "fef2c0",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-05-09T19:23:53Z",
  "updated_at": "2023-05-11T07:08:21Z",
  "closed_at": "2023-05-11T07:08:20Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I am having a hard time figuring out how to temporarily fork the mainnet state and perform a simulated transaction with it \r\n\r\n\r\n      import (\r\n\t      \"context\"\r\n\t      \"fmt\"\r\n\t      \"log\"\r\n\t      \"math/big\"\r\n\t      \"github.com/ethereum/go-ethereum/accounts/abi/bind\"\r\n\t      \"github.com/ethereum/go-ethereum/accounts/abi/bind/backends\"\r\n\t      \"github.com/ethereum/go-ethereum/common\"\r\n\t      \"github.com/ethereum/go-ethereum/core\"\r\n\t      \"github.com/ethereum/go-ethereum/core/types\"\r\n\t      \"github.com/ethereum/go-ethereum/crypto\" )\r\n\r\n     func main() {\r\n\t  privateKey, err := crypto.GenerateKey()\r\n\t  if err != nil {\r\n\t\t  log.Fatal(err)\r\n\t}\r\n\r\n\tauth := bind.NewKeyedTransactor(privateKey)\r\n\r\n\tbalance := new(big.Int)\r\n\tbalance.SetString(\"10000000000000000000\", 10) // 10 eth in wei\r\n\r\n\taddress := auth.From\r\n\tgenesisAlloc := map[common.Address]core.GenesisAccount{\r\n\t\taddress: {\r\n\t\t\tBalance: balance,\r\n\t\t},\r\n\t}\r\n\t//clz, err := ethclient.Dial(\"https://mainnet.infura.io/v3/<your-project-id>\")\r\n\tif err != nil {\r\n\t\tfmt.Printf(\"Error connecting to Ethereum node: %v\\n\", err)\r\n\t\treturn\r\n\t}\r\n\r\n\tblockGasLimit := uint64(4712388)\r\n\tclient := backends.NewSimulatedBackend(genesisAlloc, blockGasLimit)\r\n\r\n\tfromAddress := auth.From\r\n\tnonce, err := client.PendingNonceAt(context.Background(), fromAddress)\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\r\n\tvalue := big.NewInt(1000000000000000000) // in wei (1 eth)\r\n\tgasLimit := uint64(21000)                // in units\r\n\tgasPrice, err := client.SuggestGasPrice(context.Background())\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\r\n\ttoAddress := common.HexToAddress(\"0x4592d8f8d7b001e72cb26a73e4fa1806a51ac79d\")\r\n\tvar data []byte\r\n\ttx := types.NewTransaction(nonce, toAddress, value, gasLimit, gasPrice, data)\r\n\tsignedTx, err := types.SignTx(tx, types.HomesteadSigner{}, privateKey)\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\r\n\terr = client.SendTransaction(context.Background(), signedTx)\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\r\n\tfmt.Printf(\"tx sent: %s\\n\", signedTx.Hash().Hex()) // tx sent: 0xec3ceb05642c61d33fa6c951b54080d1953ac8227be81e7b5e4e2cfed69eeb51\r\n\r\n\tclient.Commit()\r\n\r\n\treceipt, err := client.TransactionReceipt(context.Background(), signedTx.Hash())\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\tif receipt == nil {\r\n\t\tlog.Fatal(\"receipt is nil. Forgot to commit?\")\r\n\t}\r\n\r\n\tfmt.Printf(\"status: %v\\n\", receipt.Status) // status: 1\r\n}\r\n`\r\n\r\nAny guidance will be appriciated",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27234/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27234/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1540976140",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27234#issuecomment-1540976140",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27234",
    "id": 1540976140,
    "node_id": "IC_kwDOAOvK985b2W4M",
    "user": {
      "login": "lightclient",
      "id": 14004106,
      "node_id": "MDQ6VXNlcjE0MDA0MTA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14004106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lightclient",
      "html_url": "https://github.com/lightclient",
      "followers_url": "https://api.github.com/users/lightclient/followers",
      "following_url": "https://api.github.com/users/lightclient/following{/other_user}",
      "gists_url": "https://api.github.com/users/lightclient/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lightclient/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lightclient/subscriptions",
      "organizations_url": "https://api.github.com/users/lightclient/orgs",
      "repos_url": "https://api.github.com/users/lightclient/repos",
      "events_url": "https://api.github.com/users/lightclient/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lightclient/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-09T22:37:25Z",
    "updated_at": "2023-05-09T22:37:25Z",
    "author_association": "MEMBER",
    "body": "If you want to perform a single call against mainnet state, you can simply use the `eth_call` JSON-RPC and it will execute the call against the state.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1540976140/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1543451083",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27234#issuecomment-1543451083",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27234",
    "id": 1543451083,
    "node_id": "IC_kwDOAOvK985b_zHL",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-11T07:08:20Z",
    "updated_at": "2023-05-11T07:08:20Z",
    "author_association": "MEMBER",
    "body": "There's no way in Geth to fork off of an existing state in memory and keep operating on it. You can execute calls against the current / recent state as Matt mentioned, and you can also optionally override some state slots/accounts if that helps debugging. But there is no way to fork off and operate on it onwards.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1543451083/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
