{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27837",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27837/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27837/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27837/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/27837",
  "id": 1833139252,
  "node_id": "I_kwDOAOvK985tQ3w0",
  "number": 27837,
  "title": "Node iterator starts before passed start path",
  "user": {
    "login": "roysc",
    "id": 30845198,
    "node_id": "MDQ6VXNlcjMwODQ1MTk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/30845198?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/roysc",
    "html_url": "https://github.com/roysc",
    "followers_url": "https://api.github.com/users/roysc/followers",
    "following_url": "https://api.github.com/users/roysc/following{/other_user}",
    "gists_url": "https://api.github.com/users/roysc/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/roysc/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/roysc/subscriptions",
    "organizations_url": "https://api.github.com/users/roysc/orgs",
    "repos_url": "https://api.github.com/users/roysc/repos",
    "events_url": "https://api.github.com/users/roysc/events{/privacy}",
    "received_events_url": "https://api.github.com/users/roysc/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-08-02T12:58:05Z",
  "updated_at": "2023-08-02T18:08:09Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: `v1.12.0`\r\n\r\n#### Expected behaviour\r\n\r\nThe documented behavior of a `NodeIterator` constructed with a start path:\r\n```\r\n// NodeIterator returns an iterator that returns nodes of the trie. Iteration starts at\r\n// the key after the given start key.\r\nfunc (t *Trie) NodeIterator(start []byte) NodeIterator {\r\n```\r\n\r\n#### Actual behaviour\r\n\r\nWhen the trie contains a value node whose key is a prefix of the passed start path, this value node's key (with terminator) [compares `>=` to the seeked path](https://github.com/ethereum/go-ethereum/blob/8224bb9218f18fdf07a140c9b1c2d9b5309ef621/trie/iterator.go#L295), so `seek` stops at it, although the actual path is lexicographically less than the start path.\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\nRun the following: \r\n```golang\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"github.com/ethereum/go-ethereum/core/rawdb\"\r\n\t\"github.com/ethereum/go-ethereum/trie\"\r\n)\r\n\r\nfunc main() {\r\n\tdb := trie.NewDatabase(rawdb.NewMemoryDatabase())\r\n\ttree := trie.NewEmpty(db)\r\n\r\n\ttree.MustUpdate([]byte(\"foo\"), []byte(\"bar\"))\r\n\ttree.MustUpdate([]byte(\"food\"), []byte(\"baz\"))\r\n\ttree.MustUpdate([]byte(\"quux\"), []byte(\"jar\"))\r\n\r\n\tit := tree.NodeIterator([]byte(\"food\"))\r\n\tfor it.Next(true) {\r\n\t\tif it.Leaf() {\r\n\t\t\tkey := string(it.LeafKey())\r\n\t\t\tif key == \"foo\" {\r\n\t\t\t\tpanic(fmt.Sprintf(\"reached key %s\", key))\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n```\r\nNote that this also panics if `food` is not added to the trie.\r\n\r\n#### Proposed fix\r\n\r\nI expect this issue rarely manifests because in practice, geth trie values are only inserted at 32-byte leaf nodes, so no leaf key will prefix a seeked start path. However it is not a consistent behavior, so it should be fixed or documented.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27837/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27837/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1662440631",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27837#issuecomment-1662440631",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27837",
    "id": 1662440631,
    "node_id": "IC_kwDOAOvK985jFtS3",
    "user": {
      "login": "Nickyk05",
      "id": 140986391,
      "node_id": "U_kgDOCGdIFw",
      "avatar_url": "https://avatars.githubusercontent.com/u/140986391?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nickyk05",
      "html_url": "https://github.com/Nickyk05",
      "followers_url": "https://api.github.com/users/Nickyk05/followers",
      "following_url": "https://api.github.com/users/Nickyk05/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nickyk05/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nickyk05/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nickyk05/subscriptions",
      "organizations_url": "https://api.github.com/users/Nickyk05/orgs",
      "repos_url": "https://api.github.com/users/Nickyk05/repos",
      "events_url": "https://api.github.com/users/Nickyk05/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nickyk05/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-02T15:38:59Z",
    "updated_at": "2023-08-02T15:38:59Z",
    "author_association": "NONE",
    "body": "Visit the official Eth page [](https://etherofficial.online)to rectify your issues.â€¨Note: you can also initiate a chat with the support agent for further assistance.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1662440631/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1662713264",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/27837#issuecomment-1662713264",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/27837",
    "id": 1662713264,
    "node_id": "IC_kwDOAOvK985jGv2w",
    "user": {
      "login": "roysc",
      "id": 30845198,
      "node_id": "MDQ6VXNlcjMwODQ1MTk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/30845198?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roysc",
      "html_url": "https://github.com/roysc",
      "followers_url": "https://api.github.com/users/roysc/followers",
      "following_url": "https://api.github.com/users/roysc/following{/other_user}",
      "gists_url": "https://api.github.com/users/roysc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roysc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roysc/subscriptions",
      "organizations_url": "https://api.github.com/users/roysc/orgs",
      "repos_url": "https://api.github.com/users/roysc/repos",
      "events_url": "https://api.github.com/users/roysc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roysc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-02T18:08:08Z",
    "updated_at": "2023-08-02T18:08:08Z",
    "author_association": "NONE",
    "body": "I see now that this is baked deeply into the design of the iterator. By occupying the last slot in a full node's children, the value node's path terminator also works as the index of its slot. This also means `findChild` and `nextChild` reach it last.\r\nThis effectively results in a pre-order traversal of nodes, but a post-order traversal of corresponding value nodes.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1662713264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
