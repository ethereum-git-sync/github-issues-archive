{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24456",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24456/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24456/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24456/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/24456",
  "id": 1147215784,
  "node_id": "I_kwDOAOvK985EYR-o",
  "number": 24456,
  "title": "EVM revert does not revert `state_override` storage",
  "user": {
    "login": "zzh1996",
    "id": 10773481,
    "node_id": "MDQ6VXNlcjEwNzczNDgx",
    "avatar_url": "https://avatars.githubusercontent.com/u/10773481?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zzh1996",
    "html_url": "https://github.com/zzh1996",
    "followers_url": "https://api.github.com/users/zzh1996/followers",
    "following_url": "https://api.github.com/users/zzh1996/following{/other_user}",
    "gists_url": "https://api.github.com/users/zzh1996/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zzh1996/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zzh1996/subscriptions",
    "organizations_url": "https://api.github.com/users/zzh1996/orgs",
    "repos_url": "https://api.github.com/users/zzh1996/repos",
    "events_url": "https://api.github.com/users/zzh1996/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zzh1996/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "s1na",
    "id": 1591639,
    "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/s1na",
    "html_url": "https://github.com/s1na",
    "followers_url": "https://api.github.com/users/s1na/followers",
    "following_url": "https://api.github.com/users/s1na/following{/other_user}",
    "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
    "organizations_url": "https://api.github.com/users/s1na/orgs",
    "repos_url": "https://api.github.com/users/s1na/repos",
    "events_url": "https://api.github.com/users/s1na/events{/privacy}",
    "received_events_url": "https://api.github.com/users/s1na/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-02-22T18:03:45Z",
  "updated_at": "2023-01-10T13:24:32Z",
  "closed_at": "2023-01-10T13:24:32Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: `v1.10.16`\r\nOS & Version: Linux\r\n\r\n#### Expected behaviour\r\n\r\nThe `test2()` call reverted so `eth_call` should return 1 both with and without storage `state_override`\r\n\r\n#### Actual behaviour\r\n\r\n`eth_call` returned 1337 with storage `state_override`\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\nCompile this contract to runtime bytecode:\r\n\r\n```solidity\r\npragma solidity =0.8.12;\r\n\r\ncontract Test {\r\n    uint private x;\r\n\r\n    function test2() external {\r\n        x = 1337;\r\n        revert();\r\n    }\r\n\r\n    function test() external returns (uint) {\r\n        x = 1;\r\n        try this.test2() {} catch (bytes memory) {}\r\n        return x;\r\n    }\r\n}\r\n```\r\n\r\nRun this curl command (without storage override, Geth returned 1 correctly)\r\n\r\n```\r\ncurl --data '{\"method\":\"eth_call\",\"params\":[\r\n    {\r\n        \"from\": \"0x1111111111111111111111111111111111111111\",\r\n        \"to\": \"0x2222222222222222222222222222222222222222\",\r\n        \"value\": \"0x0\",\r\n        \"data\": \"0xf8a8fd6d\",\r\n        \"gas\": \"0x100000\"\r\n    },\r\n    \"latest\",\r\n    {\r\n        \"0x2222222222222222222222222222222222222222\": {\r\n            \"code\": \"0x6080604052348015600f57600080fd5b506004361060325760003560e01c806366e41cb7146037578063f8a8fd6d14603f575b600080fd5b603d6057565b005b60456062565b60405190815260200160405180910390f35b610539600090815580fd5b60006001600081905550306001600160a01b03166366e41cb76040518163ffffffff1660e01b8152600401600060405180830381600087803b15801560a657600080fd5b505af192505050801560b6575060015b60e9573d80801560e1576040519150601f19603f3d011682016040523d82523d6000602084013e60e6565b606091505b50505b506000549056fea26469706673582212205ce45de745a5308f713cb2f448589177ba5a442d1a2eff945afaa8915961b4d064736f6c634300080c0033\"\r\n        }\r\n    }\r\n],\"id\":1,\"jsonrpc\":\"2.0\"}' -H \"Content-Type: application/json\" -X POST localhost:8545\r\n```\r\n\r\nresult:\r\n\r\n```\r\n{\"jsonrpc\":\"2.0\",\"id\":1,\"result\":\"0x0000000000000000000000000000000000000000000000000000000000000001\"}\r\n```\r\n\r\n### Run this curl command (with storage override, Geth returned wrong result)\r\n\r\n```\r\ncurl --data '{\"method\":\"eth_call\",\"params\":[\r\n    {\r\n        \"from\": \"0x1111111111111111111111111111111111111111\",\r\n        \"to\": \"0x2222222222222222222222222222222222222222\",\r\n        \"value\": \"0x0\",\r\n        \"data\": \"0xf8a8fd6d\",\r\n        \"gas\": \"0x100000\"\r\n    },\r\n    \"latest\",\r\n    {\r\n        \"0x2222222222222222222222222222222222222222\": {\r\n            \"code\": \"0x6080604052348015600f57600080fd5b506004361060325760003560e01c806366e41cb7146037578063f8a8fd6d14603f575b600080fd5b603d6057565b005b60456062565b60405190815260200160405180910390f35b610539600090815580fd5b60006001600081905550306001600160a01b03166366e41cb76040518163ffffffff1660e01b8152600401600060405180830381600087803b15801560a657600080fd5b505af192505050801560b6575060015b60e9573d80801560e1576040519150601f19603f3d011682016040523d82523d6000602084013e60e6565b606091505b50505b506000549056fea26469706673582212205ce45de745a5308f713cb2f448589177ba5a442d1a2eff945afaa8915961b4d064736f6c634300080c0033\",\r\n            \"state\": {\r\n                \"0x0000000000000000000000000000000000000000000000000000000000000000\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\r\n            }\r\n        }\r\n    }\r\n],\"id\":1,\"jsonrpc\":\"2.0\"}' -H \"Content-Type: application/json\" -X POST localhost:8545\r\n```\r\n\r\nresult:\r\n\r\n```\r\n{\"jsonrpc\":\"2.0\",\"id\":1,\"result\":\"0x0000000000000000000000000000000000000000000000000000000000000539\"}\r\n```\r\n\r\nThis bug is caused by `fakeStorage` not tracked in journal: https://github.com/ethereum/go-ethereum/blob/v1.10.16/core/state/state_object.go#L245",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24456/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24456/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1049655742",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24456#issuecomment-1049655742",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24456",
    "id": 1049655742,
    "node_id": "IC_kwDOAOvK984-kHm-",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-24T09:28:20Z",
    "updated_at": "2022-02-24T09:28:20Z",
    "author_association": "MEMBER",
    "body": "Discussed on triage today. The `fakeStorage` is a hack, and we do not really want to complicate this further by fixing this -- since it means making the journal \"fakestorage-aware\" too. We have ideas about better abstractions to use instead, and remove the whole fakestorage concept. Peter will supply some more details about that. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1049655742/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1049657668",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24456#issuecomment-1049657668",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24456",
    "id": 1049657668,
    "node_id": "IC_kwDOAOvK984-kIFE",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-24T09:30:37Z",
    "updated_at": "2022-02-24T09:30:37Z",
    "author_association": "MEMBER",
    "body": "Good catch. Whilst you are right as to the cause, the solution would just pile more hacks with fake storage.\r\n\r\nA better solution is to prepare a modified trie and snapshot layer before executing the eth call and then run the EVM code on top of that )getting rid of all fake stuff from the current state db). That would ensure the exact same code executes both live and in override mode, so there cannot be weird discrepancies.\r\n\r\nThe catch is that the snapshot may or may not exist and may be older / newer, so there we need to make sure the prepared overridden state is consistent and used properly. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1049657668/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1049851533",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24456#issuecomment-1049851533",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24456",
    "id": 1049851533,
    "node_id": "IC_kwDOAOvK984-k3aN",
    "user": {
      "login": "zzh1996",
      "id": 10773481,
      "node_id": "MDQ6VXNlcjEwNzczNDgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/10773481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zzh1996",
      "html_url": "https://github.com/zzh1996",
      "followers_url": "https://api.github.com/users/zzh1996/followers",
      "following_url": "https://api.github.com/users/zzh1996/following{/other_user}",
      "gists_url": "https://api.github.com/users/zzh1996/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zzh1996/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zzh1996/subscriptions",
      "organizations_url": "https://api.github.com/users/zzh1996/orgs",
      "repos_url": "https://api.github.com/users/zzh1996/repos",
      "events_url": "https://api.github.com/users/zzh1996/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zzh1996/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-24T13:18:13Z",
    "updated_at": "2022-02-24T13:18:13Z",
    "author_association": "NONE",
    "body": "Yeah. I agree that we should prepare a modified trie and snapshot layer before executing the eth call.\r\n\r\nThere is another bug in `eth_call` and `debug_traceCall`. When EVM calculates the gas usage of `SSTORE` instruction, it will read original_value by the `(s *stateObject) GetCommittedState` function. If you use `state` in `state_override`, value in `fakeStorage` will be returned, which is not the correct original_value. If you use `stateDiff` in `state_override`, the state **before** override will be returned, which is wrong, too.\r\n\r\nThe only reasonable way is to modify the state trie, finalise / commit this state, and then perform `eth_call` on this new state.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1049851533/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
