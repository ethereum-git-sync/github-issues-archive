{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26564",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26564/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26564/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26564/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/26564",
  "id": 1560078425,
  "node_id": "I_kwDOAOvK985c_OhZ",
  "number": 26564,
  "title": "TrieTimeLimit & debug.setTrieFlushInterval don't seem to flush with other intervals",
  "user": {
    "login": "anthonyoliai",
    "id": 61785803,
    "node_id": "MDQ6VXNlcjYxNzg1ODAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/61785803?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/anthonyoliai",
    "html_url": "https://github.com/anthonyoliai",
    "followers_url": "https://api.github.com/users/anthonyoliai/followers",
    "following_url": "https://api.github.com/users/anthonyoliai/following{/other_user}",
    "gists_url": "https://api.github.com/users/anthonyoliai/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/anthonyoliai/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/anthonyoliai/subscriptions",
    "organizations_url": "https://api.github.com/users/anthonyoliai/orgs",
    "repos_url": "https://api.github.com/users/anthonyoliai/repos",
    "events_url": "https://api.github.com/users/anthonyoliai/events{/privacy}",
    "received_events_url": "https://api.github.com/users/anthonyoliai/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "rjl493456442",
    "id": 5959481,
    "node_id": "MDQ6VXNlcjU5NTk0ODE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rjl493456442",
    "html_url": "https://github.com/rjl493456442",
    "followers_url": "https://api.github.com/users/rjl493456442/followers",
    "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
    "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
    "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
    "repos_url": "https://api.github.com/users/rjl493456442/repos",
    "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 18,
  "created_at": "2023-01-27T16:47:56Z",
  "updated_at": "2023-02-13T12:34:30Z",
  "closed_at": "2023-02-10T06:10:26Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: see commit hash\r\nOS & Version: Ubuntu 20.04\r\nCommit hash : df52967ff6080a27243569020ff64cd956fb8362 (post 1.10.26-stable)\r\n\r\n#### Expected behaviour\r\nUsing the newly introduced [TrieFlushInterval](https://github.com/ethereum/go-ethereum/blob/df52967ff6080a27243569020ff64cd956fb8362/core/blockchain.go#L2474) in the debug namespace, I expect more frequent flushes from the dirty cache to disk. However, after further investigation, even setting the value to 0 does not seem to write any state changes to disk. (Setting the value to \"0s\" essentially means going into archive mode if I understood correctly).\r\n\r\nI expected this to lead to more persistency when the node gets killed for some reason (e.g. a crash due to OOM).\r\n\r\nI would like to use this functionality for a private chain which doesn't have too much traffic, hence I was playing around with the cache. \r\n\r\n\r\n#### Actual behaviour\r\nPersistency is not there. I started my miner node from block 88 or so and simulated a lot of on-chain traffic. This was followed by killing the node after some time had past (an unclean shutdown).\r\n\r\nI expected after starting up the node again that the state it starts on would be further than block 80, however, it started right from the beginning. This gives me the impression that no flushing actually occurs from the dirty cache.\r\n\r\nPerhaps i'm just missing some context and misunderstanding the way the cache operates.\r\n\r\n#### Steps to reproduce the behaviour\r\n1. Boot up a miner node\r\n2. Geth attach data/geth.ipc\r\n3. `debug.setTrieFlushInterval(\"0s\")` -> essentially setting flush interval to be equal to a block processing time of 0 \r\n4. Simulate any chain traffic, e.g:\r\n```\r\nconst sendEth = () => {\r\n  for (let i = 0; i < 2000; i++ ) {\r\n    eth.sendTransaction({\r\n      from: '0x93ac780E5c9044b708218643462d58d575b4a293',\r\n      to: '0x93ac780E5c9044b708218643462d58d575b4a293',\r\n      value: web3.toWei(1, 'ether')\r\n    });\r\n  \r\n  }\r\n}\r\nsetInterval(sendEth,5000)\r\n```\r\n5. Run for a few minutes\r\n6. `ps ax | grep geth`\r\n7. Kill the geth process -> kill -9 geth PID\r\n8. Restart node -> Starts back from the beginning, does not include any supposed to be \"flushed\" changes\r\n\r\n#### Backtrace\r\n\r\n```\r\nINFO [01-27|08:42:16.104] Loaded most recent local header       number=97 hash=a1b906..3c032a td=195 age=7s\r\nINFO [01-27|08:42:16.104] Loaded most recent local full block      number=97 hash=a1b906..3c032a td=195 age=7s\r\nINFO [01-27|08:42:16.104] Loaded most recent local fast block      number=97 hash=a1b906..3c032a td=195 age=7s\r\nWARN [01-27|08:42:16.104] Head state missing, repairing            number=97 hash=a1b906..3c032a snaproot=0a3308..1c1018\r\nINFO [01-27|08:42:16.134] Loaded most recent local headertje       number=97 hash=a1b906..3c032a td=195 age=7s\r\nINFO [01-27|08:42:16.134] Loaded most recent local full block      number=88 hash=2dfa42..bae539 td=177 age=52s\r\nINFO [01-27|08:42:16.134] Loaded most recent local fast block      number=97 hash=a1b906..3c032a td=195 age=7s\r\nWARN [01-27|08:42:16.144] Enabling snapshot recovery               chainhead=88 diskbase=88\r\nINFO [01-27|08:42:16.207] Setting new local account                address=0x93Ac780E5c9044B708218643462d58D575B4a293\r\nINFO [01-27|08:42:21.634] Loaded local transaction journal         transactions=58002 dropped=0\r\nINFO [01-27|08:42:21.826] Regenerated local transaction journal    transactions=58002 accounts=1\r\nINFO [01-27|08:42:21.826] Gasprice oracle is ignoring threshold set threshold=2\r\nWARN [01-27|08:42:21.826] Unclean shutdown detected                booted=2023-01-27T07:55:50-0800 age=46m31s\r\nWARN [01-27|08:42:21.826] Unclean shutdown detected                booted=2023-01-27T07:59:57-0800 age=42m24s\r\nWARN [01-27|08:42:21.826] Unclean shutdown detected                booted=2023-01-27T08:00:09-0800 age=42m12s\r\nWARN [01-27|08:42:21.826] Unclean shutdown detected                booted=2023-01-27T08:10:13-0800 age=32m8s\r\nWARN [01-27|08:42:21.826] Unclean shutdown detected                booted=2023-01-27T08:15:41-0800 age=26m40s\r\nWARN [01-27|08:42:21.826] Unclean shutdown detected                booted=2023-01-27T08:17:16-0800 age=25m5s\r\nWARN [01-27|08:42:21.826] Unclean shutdown detected                booted=2023-01-27T08:31:15-0800 age=11m6s\r\nWARN [01-27|08:42:21.826] Unclean shutdown detected                booted=2023-01-27T08:41:03-0800 age=1m18s\r\nWARN [01-27|08:42:21.826] Engine API enabled                       protocol=eth\r\nWARN [01-27|08:42:21.826] Engine API started but chain not configured for merge yet \r\nINFO [01-27|08:42:21.826] Starting peer-to-peer node               instance=Geth/v1.11.0-unstable-df52967f-20230127/linux-amd64/go1.19.5\r\nINFO [01-27|08:42:21.829] IPC endpoint opened                      url=/home/temp/go-ethereum/build/bin/data/geth.ipc\r\n```\r\n\r\n## Updated backtrace:\r\n**Logs clean start:**\r\n```\r\n./geth --datadir data --miner.gaslimit 32000000 --unlock \"0x93ac780E5c9044b708218643462d58d575b4a293\" --password password.txt --networkid 9090 --nodiscover --syncmode full\r\nINFO [01-30|02:25:05.630] Maximum peer count                       ETH=50 LES=0 total=50\r\nINFO [01-30|02:25:05.632] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\r\nINFO [01-30|02:25:05.634] Set global gas cap                       cap=50,000,000\r\nINFO [01-30|02:25:05.635] Allocated trie memory caches             clean=154.00MiB dirty=256.00MiB\r\nINFO [01-30|02:25:05.635] Allocated cache and file handles         database=/home/temp/go-ethereum/build/bin/data/geth/chaindata cache=512.00MiB handles=524,288\r\nINFO [01-30|02:25:05.643] Opened ancient database                  database=/home/temp/go-ethereum/build/bin/data/geth/chaindata/ancient/chain readonly=false\r\nINFO [01-30|02:25:05.643] Initialising Ethereum protocol           network=9090 dbversion=8\r\nINFO [01-30|02:25:05.644]  \r\nINFO [01-30|02:25:05.644] --------------------------------------------------------------------------------------------------------------------------------------------------------- \r\nINFO [01-30|02:25:05.644] Chain ID:  9090 (unknown) \r\nINFO [01-30|02:25:05.644] Consensus: Clique (proof-of-authority) \r\nINFO [01-30|02:25:05.644]  \r\nINFO [01-30|02:25:05.644] Pre-Merge hard forks (block based): \r\nINFO [01-30|02:25:05.644]  - Homestead:                   #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/homestead.md) \r\nINFO [01-30|02:25:05.645]  - Tangerine Whistle (EIP 150): #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/tangerine-whistle.md) \r\nINFO [01-30|02:25:05.645]  - Spurious Dragon/1 (EIP 155): #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/spurious-dragon.md) \r\nINFO [01-30|02:25:05.645]  - Spurious Dragon/2 (EIP 158): #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/spurious-dragon.md) \r\nINFO [01-30|02:25:05.645]  - Byzantium:                   #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/byzantium.md) \r\nINFO [01-30|02:25:05.645]  - Constantinople:              #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/constantinople.md) \r\nINFO [01-30|02:25:05.645]  - Petersburg:                  #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/petersburg.md) \r\nINFO [01-30|02:25:05.645]  - Istanbul:                    #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/istanbul.md) \r\nINFO [01-30|02:25:05.645]  - Berlin:                      #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/berlin.md) \r\nINFO [01-30|02:25:05.645]  - London:                      #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/london.md) \r\nINFO [01-30|02:25:05.645]  \r\nINFO [01-30|02:25:05.645] The Merge is not yet available for this network! \r\nINFO [01-30|02:25:05.645]  - Hard-fork specification: https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/paris.md \r\nINFO [01-30|02:25:05.645]  \r\nINFO [01-30|02:25:05.645] Post-Merge hard forks (timestamp based): \r\nINFO [01-30|02:25:05.645]  \r\nINFO [01-30|02:25:05.645] --------------------------------------------------------------------------------------------------------------------------------------------------------- \r\nINFO [01-30|02:25:05.645]  \r\nINFO [01-30|02:25:05.646] Loaded most recent local header          number=92 hash=cb7fe6..48d979 td=185 age=44s\r\nINFO [01-30|02:25:05.646] Loaded most recent local full block      number=92 hash=cb7fe6..48d979 td=185 age=44s\r\nINFO [01-30|02:25:05.646] Loaded most recent local fast block      number=92 hash=cb7fe6..48d979 td=185 age=44s\r\nWARN [01-30|02:25:05.652] Sanitizing invalid trie cache journal time provided=1s updated=1m0s\r\nINFO [01-30|02:25:05.705] Setting new local account                address=0x93Ac780E5c9044B708218643462d58D575B4a293\r\nINFO [01-30|02:25:05.709] Loaded local transaction journal         transactions=676 dropped=0\r\nINFO [01-30|02:25:05.711] Regenerated local transaction journal    transactions=676 accounts=1\r\nINFO [01-30|02:25:05.711] Gasprice oracle is ignoring threshold set threshold=2\r\nWARN [01-30|02:25:05.713] Unclean shutdown detected                booted=2023-01-27T07:55:50-0800 age=2d18h29m\r\nWARN [01-30|02:25:05.713] Unclean shutdown detected                booted=2023-01-27T07:59:57-0800 age=2d18h25m\r\nWARN [01-30|02:25:05.713] Unclean shutdown detected                booted=2023-01-27T08:00:09-0800 age=2d18h24m\r\nWARN [01-30|02:25:05.713] Unclean shutdown detected                booted=2023-01-27T08:10:13-0800 age=2d18h14m\r\nWARN [01-30|02:25:05.713] Unclean shutdown detected                booted=2023-01-27T08:15:41-0800 age=2d18h9m\r\nWARN [01-30|02:25:05.713] Unclean shutdown detected                booted=2023-01-27T08:17:16-0800 age=2d18h7m\r\nWARN [01-30|02:25:05.713] Unclean shutdown detected                booted=2023-01-27T08:31:15-0800 age=2d17h53m\r\nWARN [01-30|02:25:05.713] Unclean shutdown detected                booted=2023-01-27T08:41:03-0800 age=2d17h44m\r\nWARN [01-30|02:25:05.713] Unclean shutdown detected                booted=2023-01-30T02:21:24-0800 age=3m41s\r\nWARN [01-30|02:25:05.713] Engine API enabled                       protocol=eth\r\nWARN [01-30|02:25:05.713] Engine API started but chain not configured for merge yet \r\nINFO [01-30|02:25:05.713] Starting peer-to-peer node               instance=Geth/v1.11.0-unstable-df52967f-20230127/linux-amd64/go1.19.5\r\nINFO [01-30|02:25:05.720] New local node record                    seq=1,674,834,777,172 id=d39dba6c0201db86 ip=127.0.0.1 udp=0 tcp=30303\r\nINFO [01-30|02:25:05.720] Started P2P networking                   self=\"<enode hidden>\"\r\nINFO [01-30|02:25:05.721] IPC endpoint opened                      url=/home/temp/go-ethereum/build/bin/data/geth.ipc\r\nINFO [01-30|02:25:05.721] Loaded JWT secret file                   path=/home/temp/go-ethereum/build/bin/data/geth/jwtsecret crc32=0x5702711b\r\nINFO [01-30|02:25:05.721] WebSocket enabled                        url=ws://127.0.0.1:8551\r\nINFO [01-30|02:25:05.721] HTTP server started                      endpoint=127.0.0.1:8551 auth=true prefix= cors=localhost vhosts=localhost\r\nINFO [01-30|02:25:06.277] Unlocked account                         address=0x93Ac780E5c9044B708218643462d58D575B4a293\r\nINFO [01-30|02:26:01.371] Updated mining threads                   threads=1\r\nINFO [01-30|02:26:01.371] Transaction pool price threshold updated price=1,000,000,000\r\nINFO [01-30|02:26:01.371] Commit new sealing work                  number=93 sealhash=33ea58..805301 uncles=0 txs=0 gas=0 fees=0 elapsed=\"320.155µs\"\r\nINFO [01-30|02:26:01.371] Commit new sealing work                  number=93 sealhash=33ea58..805301 uncles=0 txs=0 gas=0 fees=0 elapsed=\"553.201µs\"\r\nINFO [01-30|02:26:01.372] Successfully sealed new block            number=93 sealhash=33ea58..805301 hash=b12400..694b15 elapsed=\"803.401µs\"\r\nINFO [01-30|02:26:01.372] 🔨 mined potential block                  number=93 hash=b12400..694b15\r\nINFO [01-30|02:26:01.372] Commit new sealing work                  number=94 sealhash=c28ae2..8fdf3d uncles=0 txs=0 gas=0 fees=0 elapsed=\"316.638µs\"\r\nINFO [01-30|02:26:01.373] Commit new sealing work                  number=94 sealhash=c28ae2..8fdf3d uncles=0 txs=0 gas=0 fees=0 elapsed=\"622.418µs\"\r\nINFO [01-30|02:26:05.654] Writing clean trie cache to disk         path=/home/temp/go-ethereum/build/bin/data/geth/triecache threads=1\r\nINFO [01-30|02:26:05.659] Persisted the clean trie cache           path=/home/temp/go-ethereum/build/bin/data/geth/triecache elapsed=4.846ms\r\nINFO [01-30|02:26:06.001] Successfully sealed new block            number=94 sealhash=c28ae2..8fdf3d hash=88d8f7..a061cb elapsed=4.628s\r\nINFO [01-30|02:26:06.001] 🔨 mined potential block                  number=94 hash=88d8f7..a061cb\r\nINFO [01-30|02:26:06.002] Commit new sealing work                  number=95 sealhash=3885fd..90b41b uncles=0 txs=0 gas=0 fees=0 elapsed=\"436.662µs\"\r\nINFO [01-30|02:26:06.002] Commit new sealing work                  number=95 sealhash=3885fd..90b41b uncles=0 txs=0 gas=0 fees=0 elapsed=\"948.368µs\"\r\n\r\n```\r\n**Letting the chain rune for 200 blocks or so, then killing the node:**\r\n\r\n```\r\nINFO [01-30|02:48:51.003] 🔨 mined potential block                  number=367 hash=9b0463..4b9d5e\r\nINFO [01-30|02:48:51.004] Commit new sealing work                  number=368 sealhash=384555..4a0de3 uncles=0 txs=0 gas=0       fees=0        elapsed=\"887.779µs\"\r\nINFO [01-30|02:48:51.004] Commit new sealing work                  number=368 sealhash=384555..4a0de3 uncles=0 txs=0 gas=0       fees=0        elapsed=1.361ms\r\nINFO [01-30|02:48:56.003] Successfully sealed new block            number=368 sealhash=384555..4a0de3 hash=01228e..bd7e59 elapsed=4.999s\r\nINFO [01-30|02:48:56.003] 🔗 block reached canonical chain          number=361 hash=05b626..40f2e9\r\nINFO [01-30|02:48:56.003] 🔨 mined potential block                  number=368 hash=01228e..bd7e59\r\nINFO [01-30|02:48:56.004] Commit new sealing work                  number=369 sealhash=dfc190..49b707 uncles=0 txs=0 gas=0       fees=0        elapsed=\"781.666µs\"\r\nINFO [01-30|02:48:56.004] Commit new sealing work                  number=369 sealhash=dfc190..49b707 uncles=0 txs=0 gas=0       fees=0        elapsed=1.225ms\r\nKilled\r\n```\r\n\r\n\r\n**Logs after killing node and starting back up:**\r\n```\r\nINFO [01-30|02:49:22.319] Maximum peer count                       ETH=50 LES=0 total=50\r\nINFO [01-30|02:49:22.320] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\r\nINFO [01-30|02:49:22.324] Set global gas cap                       cap=50,000,000\r\nINFO [01-30|02:49:22.325] Allocated trie memory caches             clean=154.00MiB dirty=256.00MiB\r\nINFO [01-30|02:49:22.325] Allocated cache and file handles         database=/home/temp/go-ethereum/build/bin/data/geth/chaindata cache=512.00MiB handles=524,288\r\nINFO [01-30|02:49:22.337] Opened ancient database                  database=/home/temp/go-ethereum/build/bin/data/geth/chaindata/ancient/chain readonly=false\r\nINFO [01-30|02:49:22.338] Initialising Ethereum protocol           network=9090 dbversion=8\r\nINFO [01-30|02:49:22.340]  \r\nINFO [01-30|02:49:22.340] --------------------------------------------------------------------------------------------------------------------------------------------------------- \r\nINFO [01-30|02:49:22.340] Chain ID:  9090 (unknown) \r\nINFO [01-30|02:49:22.340] Consensus: Clique (proof-of-authority) \r\nINFO [01-30|02:49:22.340]  \r\nINFO [01-30|02:49:22.341] Pre-Merge hard forks (block based): \r\nINFO [01-30|02:49:22.341]  - Homestead:                   #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/homestead.md) \r\nINFO [01-30|02:49:22.341]  - Tangerine Whistle (EIP 150): #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/tangerine-whistle.md) \r\nINFO [01-30|02:49:22.341]  - Spurious Dragon/1 (EIP 155): #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/spurious-dragon.md) \r\nINFO [01-30|02:49:22.341]  - Spurious Dragon/2 (EIP 158): #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/spurious-dragon.md) \r\nINFO [01-30|02:49:22.341]  - Byzantium:                   #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/byzantium.md) \r\nINFO [01-30|02:49:22.341]  - Constantinople:              #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/constantinople.md) \r\nINFO [01-30|02:49:22.341]  - Petersburg:                  #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/petersburg.md) \r\nINFO [01-30|02:49:22.341]  - Istanbul:                    #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/istanbul.md) \r\nINFO [01-30|02:49:22.341]  - Berlin:                      #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/berlin.md) \r\nINFO [01-30|02:49:22.341]  - London:                      #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/london.md) \r\nINFO [01-30|02:49:22.341]  \r\nINFO [01-30|02:49:22.341] The Merge is not yet available for this network! \r\nINFO [01-30|02:49:22.341]  - Hard-fork specification: https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/paris.md \r\nINFO [01-30|02:49:22.341]  \r\nINFO [01-30|02:49:22.341] Post-Merge hard forks (timestamp based): \r\nINFO [01-30|02:49:22.341]  \r\nINFO [01-30|02:49:22.341] --------------------------------------------------------------------------------------------------------------------------------------------------------- \r\nINFO [01-30|02:49:22.341]  \r\nINFO [01-30|02:49:22.342] Loaded most recent local header          number=368 hash=01228e..bd7e59 td=737 age=26s\r\nINFO [01-30|02:49:22.342] Loaded most recent local full block      number=368 hash=01228e..bd7e59 td=737 age=26s\r\nINFO [01-30|02:49:22.344] Loaded most recent local fast block      number=368 hash=01228e..bd7e59 td=737 age=26s\r\nWARN [01-30|02:49:22.344] Head state missing, repairing            number=368 hash=01228e..bd7e59 snaproot=0a3308..1c1018\r\nINFO [01-30|02:49:22.359] Loaded most recent local headertje       number=368 hash=01228e..bd7e59 td=737 age=26s\r\nINFO [01-30|02:49:22.359] Loaded most recent local full block      number=90  hash=be1765..195a87 td=181 age=25m11s\r\nINFO [01-30|02:49:22.359] Loaded most recent local fast block      number=368 hash=01228e..bd7e59 td=737 age=26s\r\nWARN [01-30|02:49:22.396] Enabling snapshot recovery               chainhead=90 diskbase=90\r\nWARN [01-30|02:49:22.396] Snapshot is not continuous with chain    snaproot=d4a015..0f8f49 chainroot=0a3308..1c1018\r\nWARN [01-30|02:49:22.396] Sanitizing invalid trie cache journal time provided=1s updated=1m0s\r\nINFO [01-30|02:49:22.486] Setting new local account                address=0x93Ac780E5c9044B708218643462d58D575B4a293\r\nINFO [01-30|02:49:22.493] Loaded local transaction journal         transactions=701 dropped=0\r\nINFO [01-30|02:49:22.500] Regenerated local transaction journal    transactions=701 accounts=1\r\nINFO [01-30|02:49:22.500] Gasprice oracle is ignoring threshold set threshold=2\r\nWARN [01-30|02:49:22.500] Unclean shutdown detected                booted=2023-01-27T07:55:50-0800 age=2d18h53m\r\nWARN [01-30|02:49:22.501] Unclean shutdown detected                booted=2023-01-27T07:59:57-0800 age=2d18h49m\r\nWARN [01-30|02:49:22.501] Unclean shutdown detected                booted=2023-01-27T08:00:09-0800 age=2d18h49m\r\nWARN [01-30|02:49:22.501] Unclean shutdown detected                booted=2023-01-27T08:10:13-0800 age=2d18h39m\r\nWARN [01-30|02:49:22.501] Unclean shutdown detected                booted=2023-01-27T08:15:41-0800 age=2d18h33m\r\nWARN [01-30|02:49:22.501] Unclean shutdown detected                booted=2023-01-27T08:17:16-0800 age=2d18h32m\r\nWARN [01-30|02:49:22.501] Unclean shutdown detected                booted=2023-01-27T08:31:15-0800 age=2d18h18m\r\nWARN [01-30|02:49:22.501] Unclean shutdown detected                booted=2023-01-27T08:41:03-0800 age=2d18h8m\r\nWARN [01-30|02:49:22.501] Unclean shutdown detected                booted=2023-01-30T02:21:24-0800 age=27m58s\r\nWARN [01-30|02:49:22.501] Unclean shutdown detected                booted=2023-01-30T02:45:05-0800 age=4m17s\r\nWARN [01-30|02:49:22.501] Engine API enabled                       protocol=eth\r\nWARN [01-30|02:49:22.501] Engine API started but chain not configured for merge yet \r\nINFO [01-30|02:49:22.501] Starting peer-to-peer node               instance=Geth/v1.11.0-unstable-df52967f-20230127/linux-amd64/go1.19.5\r\nINFO [01-30|02:49:22.507] IPC endpoint opened                      url=/home/temp/go-ethereum/build/bin/data/geth.ipc\r\nINFO [01-30|02:49:22.507] Loaded JWT secret file                   path=/home/temp/go-ethereum/build/bin/data/geth/jwtsecret crc32=0x5702711b\r\nINFO [01-30|02:49:22.508] New local node record                    seq=1,674,834,777,173 id=d39dba6c0201db86 ip=127.0.0.1 udp=0 tcp=30303\r\nINFO [01-30|02:49:22.508] Started P2P networking                   self=\"<enode hidden>\"\r\nINFO [01-30|02:49:22.508] WebSocket enabled                        url=ws://127.0.0.1:8551\r\nINFO [01-30|02:49:22.508] HTTP server started                      endpoint=127.0.0.1:8551 auth=true prefix= cors=localhost vhosts=localhost\r\nINFO [01-30|02:49:23.119] Unlocked account                         address=0x93Ac780E5c9044B708218643462d58D575B4a293\r\nINFO [01-30|02:50:20.586] Updated mining threads                   threads=1\r\nINFO [01-30|02:50:20.586] Transaction pool price threshold updated price=1,000,000,000\r\nINFO [01-30|02:50:20.587] Commit new sealing work                  number=91  sealhash=f8acb2..d68b3c uncles=0 txs=0 gas=0 fees=0 elapsed=\"334.539µs\"\r\nINFO [01-30|02:50:20.587] Commit new sealing work                  number=91  sealhash=f8acb2..d68b3c uncles=0 txs=0 gas=0 fees=0 elapsed=\"870.516µs\"\r\nINFO [01-30|02:50:20.588] Successfully sealed new block            number=91  sealhash=f8acb2..d68b3c hash=f21587..ab2acf elapsed=1.050ms\r\nINFO [01-30|02:50:20.588] 🔨 mined potential block                  number=91  hash=f21587..ab2acf\r\nINFO [01-30|02:50:20.588] Commit new sealing work                  number=92  sealhash=076491..58c1a9 uncles=0 txs=0 gas=0 fees=0 elapsed=\"296.315µs\"\r\nINFO [01-30|02:50:20.589] Commit new sealing work                  number=92  sealhash=076491..58c1a9 uncles=0 txs=0 gas=0 fees=0 elapsed=\"568.722µs\"\r\nINFO [01-30|02:50:22.397] Writing clean trie cache to disk         path=/home/temp/go-ethereum/build/bin/data/geth/triecache threads=1\r\nINFO [01-30|02:50:22.400] Persisted the clean trie cache           path=/home/temp/go-ethereum/build/bin/data/geth/triecache elapsed=2.821ms\r\nINFO [01-30|02:50:25.000] Successfully sealed new block            number=92  sealhash=076491..58c1a9 hash=60ab9f..958f39 elapsed=4.412s\r\nINFO [01-30|02:50:25.001] 🔨 mined potential block                  number=92  hash=60ab9f..958f39\r\nINFO [01-30|02:50:25.001] Commit new sealing work                  number=93  sealhash=3c98bb..8dd224 uncles=0 txs=0 gas=0 fees=0 elapsed=\"498.189µs\"\r\nINFO [01-30|02:50:25.002] Commit new sealing work                  number=93  sealhash=3c98bb..8dd224 uncles=0 txs=0 gas=0 fees=0 elapsed=1.057ms\r\n```\r\n\r\n\r\n",
  "closed_by": {
    "login": "rjl493456442",
    "id": 5959481,
    "node_id": "MDQ6VXNlcjU5NTk0ODE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rjl493456442",
    "html_url": "https://github.com/rjl493456442",
    "followers_url": "https://api.github.com/users/rjl493456442/followers",
    "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
    "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
    "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
    "repos_url": "https://api.github.com/users/rjl493456442/repos",
    "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26564/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26564/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1407944763",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26564#issuecomment-1407944763",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26564",
    "id": 1407944763,
    "node_id": "IC_kwDOAOvK985T64g7",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T03:31:58Z",
    "updated_at": "2023-01-30T03:32:10Z",
    "author_association": "MEMBER",
    "body": "https://github.com/ethereum/go-ethereum/blob/df52967ff6080a27243569020ff64cd956fb8362/core/blockchain.go#L1354\r\n\r\n`// Flush limits are not considered for the first TriesInMemory(128) blocks.`\r\n\r\nSince your private chain is very short, hits this special case though.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1407944763/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1408118649",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26564#issuecomment-1408118649",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26564",
    "id": 1408118649,
    "node_id": "IC_kwDOAOvK985T7i95",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T07:30:40Z",
    "updated_at": "2023-01-30T07:30:40Z",
    "author_association": "MEMBER",
    "body": "Nice catch @rjl493456442 ! Closing this",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1408118649/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1408280051",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26564#issuecomment-1408280051",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26564",
    "id": 1408280051,
    "node_id": "IC_kwDOAOvK985T8KXz",
    "user": {
      "login": "anthonyoliai",
      "id": 61785803,
      "node_id": "MDQ6VXNlcjYxNzg1ODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/61785803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anthonyoliai",
      "html_url": "https://github.com/anthonyoliai",
      "followers_url": "https://api.github.com/users/anthonyoliai/followers",
      "following_url": "https://api.github.com/users/anthonyoliai/following{/other_user}",
      "gists_url": "https://api.github.com/users/anthonyoliai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anthonyoliai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anthonyoliai/subscriptions",
      "organizations_url": "https://api.github.com/users/anthonyoliai/orgs",
      "repos_url": "https://api.github.com/users/anthonyoliai/repos",
      "events_url": "https://api.github.com/users/anthonyoliai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anthonyoliai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T09:41:13Z",
    "updated_at": "2023-01-30T09:41:13Z",
    "author_association": "NONE",
    "body": "> https://github.com/ethereum/go-ethereum/blob/df52967ff6080a27243569020ff64cd956fb8362/core/blockchain.go#L1354\r\n> \r\n> `// Flush limits are not considered for the first TriesInMemory(128) blocks.`\r\n> \r\n> Since your private chain is very short, hits this special case though.\r\n\r\n@holiman @rjl493456442 I'll submit some more logs today,  but this behaviour also seems the case when TriesInMemory > 128 blocks. I let the chain run for around 1000 blocks before killing it. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1408280051/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1408288763",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26564#issuecomment-1408288763",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26564",
    "id": 1408288763,
    "node_id": "IC_kwDOAOvK985T8Mf7",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T09:45:13Z",
    "updated_at": "2023-01-30T09:45:13Z",
    "author_association": "MEMBER",
    "body": "Yeah please add logs of running it. \r\nIIUC this node is mining the blocks, not \"importing\" through the regular api. I am not quite sure how that affects/interacts with the trie cache.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1408288763/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1408404049",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26564#issuecomment-1408404049",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26564",
    "id": 1408404049,
    "node_id": "IC_kwDOAOvK985T8opR",
    "user": {
      "login": "anthonyoliai",
      "id": 61785803,
      "node_id": "MDQ6VXNlcjYxNzg1ODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/61785803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anthonyoliai",
      "html_url": "https://github.com/anthonyoliai",
      "followers_url": "https://api.github.com/users/anthonyoliai/followers",
      "following_url": "https://api.github.com/users/anthonyoliai/following{/other_user}",
      "gists_url": "https://api.github.com/users/anthonyoliai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anthonyoliai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anthonyoliai/subscriptions",
      "organizations_url": "https://api.github.com/users/anthonyoliai/orgs",
      "repos_url": "https://api.github.com/users/anthonyoliai/repos",
      "events_url": "https://api.github.com/users/anthonyoliai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anthonyoliai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T10:54:40Z",
    "updated_at": "2023-01-30T10:55:15Z",
    "author_association": "NONE",
    "body": "> Yeah please add logs of running it. IIUC this node is mining the blocks, not \"importing\" through the regular api. I am not quite sure how that affects/interacts with the trie cache.\r\n\r\n@holiman Great, I added some additional logs that might deem helpful.\r\n\r\nInteresting enough I do see that the full block is up to date, followed by a head state missing error, which enables snapshot recovery ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1408404049/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1410097468",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26564#issuecomment-1410097468",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26564",
    "id": 1410097468,
    "node_id": "IC_kwDOAOvK985UDGE8",
    "user": {
      "login": "anthonyoliai",
      "id": 61785803,
      "node_id": "MDQ6VXNlcjYxNzg1ODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/61785803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anthonyoliai",
      "html_url": "https://github.com/anthonyoliai",
      "followers_url": "https://api.github.com/users/anthonyoliai/followers",
      "following_url": "https://api.github.com/users/anthonyoliai/following{/other_user}",
      "gists_url": "https://api.github.com/users/anthonyoliai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anthonyoliai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anthonyoliai/subscriptions",
      "organizations_url": "https://api.github.com/users/anthonyoliai/orgs",
      "repos_url": "https://api.github.com/users/anthonyoliai/repos",
      "events_url": "https://api.github.com/users/anthonyoliai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anthonyoliai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-31T10:17:45Z",
    "updated_at": "2023-01-31T10:51:40Z",
    "author_association": "NONE",
    "body": "> Yeah please add logs of running it. IIUC this node is mining the blocks, not \"importing\" through the regular api. I am not quite sure how that affects/interacts with the trie cache.\r\n@holiman \r\nI do see that the following condition:\r\nhttps://github.com/ethereum/go-ethereum/blob/df52967ff6080a27243569020ff64cd956fb8362/core/blockchain.go#L1369\r\n\r\ndoes not get hit, because we are not importing any blocks, so potentially a flush does not occur due to this condition not being met\r\n\r\nI've been digging a bit on the codebase, and your reply to my issues got me thinking. Is the block processing time (bc.gcproc) only incremented when blocks are imported? Because if that's the case it makes sense why my cache isn't flushing\r\nThere's this if bc.gcproc > flushInterval  check, meaning that if I have a node running which doesn't import blocks, bc.gcproc is always 0 (i think?) so even a flushinterval of 0 which would technically make the node an archive node doesn't fire off any flushing",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1410097468/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1413382636",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26564#issuecomment-1413382636",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26564",
    "id": 1413382636,
    "node_id": "IC_kwDOAOvK985UPoHs",
    "user": {
      "login": "s1na",
      "id": 1591639,
      "node_id": "MDQ6VXNlcjE1OTE2Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1na",
      "html_url": "https://github.com/s1na",
      "followers_url": "https://api.github.com/users/s1na/followers",
      "following_url": "https://api.github.com/users/s1na/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1na/subscriptions",
      "organizations_url": "https://api.github.com/users/s1na/orgs",
      "repos_url": "https://api.github.com/users/s1na/repos",
      "events_url": "https://api.github.com/users/s1na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1na/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-02T09:10:11Z",
    "updated_at": "2023-02-02T09:10:11Z",
    "author_association": "MEMBER",
    "body": "Posting additional info from OP:\r\n\r\n- Node is started from head 4749\r\n- Multiple flushes occur during block importing (at least one at block 4806)\r\n- The node is killed at block 5271\r\n\r\nThis is what happens when the node is started again:\r\n\r\n![image](https://user-images.githubusercontent.com/1591639/216279914-78f913d5-ecd6-4a82-bf34-9ae304c31c64.png)\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1413382636/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1413428505",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26564#issuecomment-1413428505",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26564",
    "id": 1413428505,
    "node_id": "IC_kwDOAOvK985UPzUZ",
    "user": {
      "login": "anthonyoliai",
      "id": 61785803,
      "node_id": "MDQ6VXNlcjYxNzg1ODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/61785803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anthonyoliai",
      "html_url": "https://github.com/anthonyoliai",
      "followers_url": "https://api.github.com/users/anthonyoliai/followers",
      "following_url": "https://api.github.com/users/anthonyoliai/following{/other_user}",
      "gists_url": "https://api.github.com/users/anthonyoliai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anthonyoliai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anthonyoliai/subscriptions",
      "organizations_url": "https://api.github.com/users/anthonyoliai/orgs",
      "repos_url": "https://api.github.com/users/anthonyoliai/repos",
      "events_url": "https://api.github.com/users/anthonyoliai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anthonyoliai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-02T09:41:34Z",
    "updated_at": "2023-02-02T09:41:34Z",
    "author_association": "NONE",
    "body": "To give some context, my setup now consists of two sealer nodes which I peer up with eachother.\r\nI've set the TrieTimeLimit to be 500ms -> meaning that 500ms of block processing time should lead to a flushed cache.\r\n\r\nI logged the block processing time (gc.proc) as can be seen here.\r\n![image](https://user-images.githubusercontent.com/61785803/216287020-734a4230-48c4-40d2-a9eb-f6c571b9dcc3.png)\r\n(Sorry for the pics, these are old logs I only had stored as pics)\r\n\r\nI've been running it just now once again, trying to get gcproc up, and got the following log:\r\n```\r\nINFO [02-02|01:40:57.036] Imported new chain segment               number=5444 hash=926acc..bc89c6 blocks=1   txs=412   mgas=8.652   elapsed=26.975ms    mgasps=320.740 dirty=30.00KiB\r\n========================= NODE RELATED MEMORY INFORMATION ==================================\r\nNODES SIZE 30.47 KiB, IMGS size 0.00 B\r\nLIMIT: 256.00 MiB\r\n=========================  ==================================\r\n===============================GC PROCS = ============================================================================\r\n498.501534ms\r\nINFO [02-02|01:40:58.040] Imported new chain segment               number=5445 hash=172a0b..ea6116 blocks=1   txs=406   mgas=8.526   elapsed=34.413ms    mgasps=247.749 dirty=30.47KiB\r\n========================= NODE RELATED MEMORY INFORMATION ==================================\r\nNODES SIZE 30.94 KiB, IMGS size 0.00 B\r\nLIMIT: 256.00 MiB\r\n=========================  ==================================\r\n===============================GC PROCS = ============================================================================\r\n527.153921ms\r\nINFO [02-02|01:40:59.045] Persisted trie from memory database      nodes=0 size=0.00B   time=\"3.228µs\"   gcnodes=0   gcsize=0.00B    gctime=\"19.603µs\"  livenodes=133 livesize=18.56KiB\r\nLAST BLOCK FLUSHED TO DB:\r\n5318\r\n\r\n\r\n```\r\n\r\nHowever, when I restart it doesn't start at 5318.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1413428505/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1413436995",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26564#issuecomment-1413436995",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26564",
    "id": 1413436995,
    "node_id": "IC_kwDOAOvK985UP1ZD",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-02T09:47:20Z",
    "updated_at": "2023-02-02T09:47:20Z",
    "author_association": "MEMBER",
    "body": "The problem seems to be that the unclean shutdown causes the in-memory snapshot layers to be lost, and we only have the diskbased layer left. This layer is at _least_ 128 blocks old, but most likely a lot more than that. \r\n\r\nWhat geth does, is go back _from that block_ to a point where it has state: this means it won't have to regenerate the snapshot layer, once it reaches that block again, it can just pick up the snapshot layer again. \r\n\r\n\r\nBut yeah, this breaks the intended archive-behaviour. You'd have to disable snapshots in order to get around this behaviour. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1413436995/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1413460020",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26564#issuecomment-1413460020",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26564",
    "id": 1413460020,
    "node_id": "IC_kwDOAOvK985UP7A0",
    "user": {
      "login": "anthonyoliai",
      "id": 61785803,
      "node_id": "MDQ6VXNlcjYxNzg1ODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/61785803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anthonyoliai",
      "html_url": "https://github.com/anthonyoliai",
      "followers_url": "https://api.github.com/users/anthonyoliai/followers",
      "following_url": "https://api.github.com/users/anthonyoliai/following{/other_user}",
      "gists_url": "https://api.github.com/users/anthonyoliai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anthonyoliai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anthonyoliai/subscriptions",
      "organizations_url": "https://api.github.com/users/anthonyoliai/orgs",
      "repos_url": "https://api.github.com/users/anthonyoliai/repos",
      "events_url": "https://api.github.com/users/anthonyoliai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anthonyoliai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-02T10:01:15Z",
    "updated_at": "2023-02-02T10:01:15Z",
    "author_association": "NONE",
    "body": "> The problem seems to be that the unclean shutdown causes the in-memory snapshot layers to be lost, and we only have the diskbased layer left. This layer is at _least_ 128 blocks old, but most likely a lot more than that.\r\n> \r\n> What geth does, is go back _from that block_ to a point where it has state: this means it won't have to regenerate the snapshot layer, once it reaches that block again, it can just pick up the snapshot layer again.\r\n> \r\n> But yeah, this breaks the intended archive-behaviour. You'd have to disable snapshots in order to get around this behaviour.\r\n\r\nThank you! This is still all new to me.  `This layer is at least 128 blocks old, but most likely a lot more than that.` which layer do you mean here? Do you mean the diskbased layer? So would that mean that we wind back  from this last block in the diskbased layer to the last known \"in-memory\" snapshot layer?\r\n\r\nRegarding turning snapshot off, using `--snapshot=false`.\r\n\r\nI assume turning snapshot to false is basically the same thing as just having the node run as an archive node? Hence defeating the purpose of trying to make a full node \"more archivey\" but not \"a complete archive node\"",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1413460020/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1413474356",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26564#issuecomment-1413474356",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26564",
    "id": 1413474356,
    "node_id": "IC_kwDOAOvK985UP-g0",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-02T10:10:13Z",
    "updated_at": "2023-02-02T10:10:13Z",
    "author_association": "MEMBER",
    "body": "> > This layer is at least 128 blocks old, but most likely a lot more than that. \r\n\r\n> which layer do you mean here? \r\n\r\nThe snapshots are in layers. At the bottom, the disk-based layer, representing the (flat) state at some block. Then comes the first memory-layer, which is a merged layer representing `N` blocks, and flushed to disk from time to time. Then comes `127` more memory layers, each representing one block. SO, in memory, there are layers representing at least `128` layers. \r\n\r\n\r\n> Regarding turning snapshot off, using --snapshot=false.\r\n\r\nYes\r\n\r\n> I assume turning snapshot to false is basically the same thing as just having the node run as an archive node? \r\n\r\nThat is not correct. The snapshots are \"orthogonal\" to trie gcmode, or, in other words: one thing has nothing to do with the other. \r\n\r\n> Hence defeating the purpose of trying to make a full node \"more archivey\" but not \"a complete archive node\"\r\n\r\nAlthough, I don't see why you don't just run `archive` mode anyway. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1413474356/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1413505065",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26564#issuecomment-1413505065",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26564",
    "id": 1413505065,
    "node_id": "IC_kwDOAOvK985UQGAp",
    "user": {
      "login": "anthonyoliai",
      "id": 61785803,
      "node_id": "MDQ6VXNlcjYxNzg1ODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/61785803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anthonyoliai",
      "html_url": "https://github.com/anthonyoliai",
      "followers_url": "https://api.github.com/users/anthonyoliai/followers",
      "following_url": "https://api.github.com/users/anthonyoliai/following{/other_user}",
      "gists_url": "https://api.github.com/users/anthonyoliai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anthonyoliai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anthonyoliai/subscriptions",
      "organizations_url": "https://api.github.com/users/anthonyoliai/orgs",
      "repos_url": "https://api.github.com/users/anthonyoliai/repos",
      "events_url": "https://api.github.com/users/anthonyoliai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anthonyoliai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-02T10:25:28Z",
    "updated_at": "2023-02-02T10:25:28Z",
    "author_association": "NONE",
    "body": "> > > This layer is at least 128 blocks old, but most likely a lot more than that.\r\n> \r\n> > which layer do you mean here?\r\n> \r\n> The snapshots are in layers. At the bottom, the disk-based layer, representing the (flat) state at some block. Then comes the first memory-layer, which is a merged layer representing `N` blocks, and flushed to disk from time to time. Then comes `127` more memory layers, each representing one block. SO, in memory, there are layers representing at least `128` layers.\r\n> \r\n> > Regarding turning snapshot off, using --snapshot=false.\r\n> \r\n> Yes\r\n> \r\n> > I assume turning snapshot to false is basically the same thing as just having the node run as an archive node?\r\n> \r\n> That is not correct. The snapshots are \"orthogonal\" to trie gcmode, or, in other words: one thing has nothing to do with the other.\r\n> \r\n> > Hence defeating the purpose of trying to make a full node \"more archivey\" but not \"a complete archive node\"\r\n> \r\n> Although, I don't see why you don't just run `archive` mode anyway.\r\n\r\nGreat, thank you, it's much clearer now. Regarding why I don't want to just run in archive mode anyway is because I didn't want the additional storage it brings compared to a regular full node. Hence I was looking for something \"inbetween\" more frequent persisting of states from memory to disk, but not for every block which if I understood an archive node does(?)\r\n\r\nWhat i'll try to do is run two clean nodes, peer them up, leave snapshot off, and come back with some logs in case the issue still persists.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1413505065/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1413569897",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26564#issuecomment-1413569897",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26564",
    "id": 1413569897,
    "node_id": "IC_kwDOAOvK985UQV1p",
    "user": {
      "login": "anthonyoliai",
      "id": 61785803,
      "node_id": "MDQ6VXNlcjYxNzg1ODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/61785803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anthonyoliai",
      "html_url": "https://github.com/anthonyoliai",
      "followers_url": "https://api.github.com/users/anthonyoliai/followers",
      "following_url": "https://api.github.com/users/anthonyoliai/following{/other_user}",
      "gists_url": "https://api.github.com/users/anthonyoliai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anthonyoliai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anthonyoliai/subscriptions",
      "organizations_url": "https://api.github.com/users/anthonyoliai/orgs",
      "repos_url": "https://api.github.com/users/anthonyoliai/repos",
      "events_url": "https://api.github.com/users/anthonyoliai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anthonyoliai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-02T11:13:32Z",
    "updated_at": "2023-02-02T11:14:31Z",
    "author_association": "NONE",
    "body": "@holiman @s1na \r\n\r\nI set up two new nodes, with a fresh data dir.\r\n\r\nCommand I ran was\r\nNODE 1 `./geth --datadir data --miner.gaslimit 32000000 --unlock 0x31dD68fad2F92e545d7bfDaCF69Af652b5feA95D --password password.txt --networkid 9090 --nodiscover --port 30304 --authrpc.port 8552 --snapshot=false --syncmode=full`\r\n\r\nand \r\nNODE 2`./geth --datadir data --miner.gaslimit 32000000 --unlock d7d5d4f41e648ff45bd11523a0e948c82069778b --password password.txt --networkid 9090 --nodiscover --snapshot=false --syncmode=full`\r\n\r\n\r\n**I did an admin.addPeer() on node 2's console to peer up with node 1**\r\nStarted submitting TXs at a rate of 10K per 5 s ->\r\n`const sendEth = () => {for (let i = 0; i < 10000; i++ ) {eth.sendTransaction({from: '0xd7d5d5F41E648Ff45bD11593A0E948D82069778B',to: '0xd7d5d5F41E648Ff45bD11593A0E948D82069778B',value: web3.toWei(1, 'ether')});}}`\r\n\r\nOnce the block number reaches 128 we start flushing to cache and taking gc.proc into consideration:\r\n```\r\nINFO [02-02|03:07:04.037] Imported new chain segment               number=129 hash=effd7a..2ca779 blocks=1 txs=346 mgas=7.266 elapsed=28.964ms    mgasps=250.858 dirty=27.32KiB\r\n========================= NODE RELATED MEMORY INFORMATION ==================================\r\nNODES SIZE 27.58 KiB, IMGS size 0.00 B\r\nLIMIT: 256.00 MiB\r\n=========================  ==================================\r\n===============================GC PROCS = ============================================================================\r\n26.22769ms\r\nINFO [02-02|03:07:05.055] Imported new chain segment               number=130 hash=ae19cf..113713 blocks=1 txs=302 mgas=6.342 elapsed=32.726ms    mgasps=193.790 dirty=27.58KiB\r\n========================= NODE RELATED MEMORY INFORMATION ==================================\r\nNODES SIZE 27.84 KiB, IMGS size 0.00 B\r\nLIMIT: 256.00 MiB\r\n```\r\n\r\nI allow some more blocks and flushes to come in , and at block **282** i decided to kill the node with `kill -9 <PID geth node>`\r\n\r\n```\r\n===============================GC PROCS = ============================================================================\r\n498.296044ms\r\nINFO [02-02|03:09:37.072] Imported new chain segment               number=282 hash=958410..3b7a92 blocks=1 txs=369 mgas=7.749 elapsed=38.114ms    mgasps=203.309 dirty=30.51KiB\r\n========================= NODE RELATED MEMORY INFORMATION ==================================\r\nNODES SIZE 30.78 KiB, IMGS size 0.00 B\r\nLIMIT: 256.00 MiB\r\n=========================  ==================================\r\n===============================GC PROCS = ============================================================================\r\n525.140719ms\r\nINFO [02-02|03:09:38.037] Persisted trie from memory database      nodes=1 size=173.00B time=\"135.776µs\"  gcnodes=19 gcsize=3.21KiB gctime=\"55.365µs\"  livenodes=117 livesize=19.64KiB\r\nLAST BLOCK FLUSHED TO DB:\r\n155\r\n```\r\nLogs show that the last block flushed to the db is 155 ^\r\n\r\n**Finally, I restart the node after killing it.**\r\n```\r\nINFO [02-02|03:11:01.993]  \r\nINFO [02-02|03:11:01.993] Loaded most recent local header          number=286 hash=23f6a5..6f7273 td=573 age=1m20s\r\nINFO [02-02|03:11:01.993] Loaded most recent local full block      number=286 hash=23f6a5..6f7273 td=573 age=1m20s\r\nINFO [02-02|03:11:01.993] Loaded most recent local fast block      number=286 hash=23f6a5..6f7273 td=573 age=1m20s\r\nWARN [02-02|03:11:01.994] Head state missing, repairing            number=286 hash=23f6a5..6f7273\r\nINFO [02-02|03:11:02.072] Loaded most recent local header          number=286 hash=23f6a5..6f7273 td=573 age=1m21s\r\nINFO [02-02|03:11:02.072] Loaded most recent local full block      number=155 hash=93d037..6b3a98 td=311 age=3m32s\r\nINFO [02-02|03:11:02.072] Loaded most recent local fast block      number=286 hash=23f6a5..6f7273 td=573 age=1m21s\r\nINFO [02-02|03:11:02.092] Loaded local transaction journal         transactions=0 dropped=0\r\nINFO [02-02|03:11:02.092] Regenerated local transaction journal    transactions=0 accounts=0\r\nINFO [02-02|03:11:02.092] Gasprice oracle is ignoring threshold set threshold=2\r\nWARN [02-02|03:11:02.092] Unclean shutdown detected                booted=2023-02-02T03:08:07-0800 age=2m55s\r\nWARN [02-02|03:11:02.092] Engine API enabled                       protocol=eth\r\nWARN [02-02|03:11:02.092] Engine API started but chain not configured for merge yet \r\nINFO [02-02|03:11:02.093] Starting peer-to-peer node               instance=Geth/v1.11.0-unstable-df52967f-20230127/linux-amd64/go1.19.5\r\nINFO [02-02|03:11:02.100] IPC endpoint opened                      url=/home/temp/clean_gethv2/build/bin/data/geth.ipc\r\n```\r\nAnd behold, the node restarts at block 155. Now I assume that this is intended behaviour, as in, if we are at block N and a flush occurs, we flush the state up to N-128. \r\n\r\nNow my question is... is this a good \"middle ground\" for running a node that is not fully an archive node? I simply just don't want my storage to get too full by having it run as an archive node.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1413569897/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1413580396",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26564#issuecomment-1413580396",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26564",
    "id": 1413580396,
    "node_id": "IC_kwDOAOvK985UQYZs",
    "user": {
      "login": "anthonyoliai",
      "id": 61785803,
      "node_id": "MDQ6VXNlcjYxNzg1ODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/61785803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anthonyoliai",
      "html_url": "https://github.com/anthonyoliai",
      "followers_url": "https://api.github.com/users/anthonyoliai/followers",
      "following_url": "https://api.github.com/users/anthonyoliai/following{/other_user}",
      "gists_url": "https://api.github.com/users/anthonyoliai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anthonyoliai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anthonyoliai/subscriptions",
      "organizations_url": "https://api.github.com/users/anthonyoliai/orgs",
      "repos_url": "https://api.github.com/users/anthonyoliai/repos",
      "events_url": "https://api.github.com/users/anthonyoliai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anthonyoliai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-02T11:21:36Z",
    "updated_at": "2023-02-02T11:21:45Z",
    "author_association": "NONE",
    "body": "I did a final run in which I let the node restart at block 155 and sync up with the other node that was still running. \r\nIt synced all the way up to block 435, and did a cache flush on block 225.\r\nHowever, when I now killed the node it restarted back at 155, instead of the new flushed block 225.\r\nMy speculation is that its because block 155 to 225 was imported, somehow this didn't get persisted in storage.\r\n\r\n**Here it's supposed to have most recent local full block at 225, not 155. Somehow syncing and then flushing messes it up**\r\n```\r\nINFO [02-02|03:19:19.363] Loaded most recent local header          number=436 hash=5bab28..c11aa5 td=873 age=20s\r\nINFO [02-02|03:19:19.363] Loaded most recent local full block      number=436 hash=5bab28..c11aa5 td=873 age=20s\r\nINFO [02-02|03:19:19.363] Loaded most recent local fast block      number=436 hash=5bab28..c11aa5 td=873 age=20s\r\nWARN [02-02|03:19:19.363] Head state missing, repairing            number=436 hash=5bab28..c11aa5\r\nINFO [02-02|03:19:19.482] Loaded most recent local header          number=436 hash=5bab28..c11aa5 td=873 age=20s\r\nINFO [02-02|03:19:19.482] Loaded most recent local full block      number=155 hash=93d037..6b3a98 td=311 age=11m49s\r\nINFO [02-02|03:19:19.482] Loaded most recent local fast block      number=436 hash=5bab28..c11aa5 td=873 age=20s\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1413580396/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1425241099",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26564#issuecomment-1425241099",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26564",
    "id": 1425241099,
    "node_id": "IC_kwDOAOvK985U83QL",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-10T06:10:26Z",
    "updated_at": "2023-02-10T06:14:14Z",
    "author_association": "MEMBER",
    "body": "As a summary, if you explicitly disable snapshot, the in-memory states will only be flushed out if\r\n- It has at least 128 blocks confirmation on top\r\n- The accumulated processing time reaches the limit you configured\r\nThere are only these two conditions to determine if flush should happen\r\n\r\n> is this a good \"middle ground\" for running a node that is not fully an archive node?\r\n\r\nUnfortunately we don't have a better solution right now. Setting a reasonable flush interval should be a good approach at this point, in the future we will build another mode of archive node which is smaller than the existing one and easier to retain historical states, but it needs time to rollout.\r\n\r\nRe your case `and did a cache flush on block 225.`, `somehow this didn't get persisted in storage` are you sure the state(255) is really flushed out? You can search log `Persisted trie from memory database` to see if the flush is indeed happened.\r\n\r\nClose it which I believe the behavior is correct. Feel free to reopen if it still doesn't work. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1425241099/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1427663668",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26564#issuecomment-1427663668",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26564",
    "id": 1427663668,
    "node_id": "IC_kwDOAOvK985VGGs0",
    "user": {
      "login": "anthonyoliai",
      "id": 61785803,
      "node_id": "MDQ6VXNlcjYxNzg1ODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/61785803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anthonyoliai",
      "html_url": "https://github.com/anthonyoliai",
      "followers_url": "https://api.github.com/users/anthonyoliai/followers",
      "following_url": "https://api.github.com/users/anthonyoliai/following{/other_user}",
      "gists_url": "https://api.github.com/users/anthonyoliai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anthonyoliai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anthonyoliai/subscriptions",
      "organizations_url": "https://api.github.com/users/anthonyoliai/orgs",
      "repos_url": "https://api.github.com/users/anthonyoliai/repos",
      "events_url": "https://api.github.com/users/anthonyoliai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anthonyoliai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-13T10:06:50Z",
    "updated_at": "2023-02-13T10:06:50Z",
    "author_association": "NONE",
    "body": "> As a summary, if you explicitly disable snapshot, the in-memory states will only be flushed out if\r\n> \r\n> * It has at least 128 blocks confirmation on top\r\n> * The accumulated processing time reaches the limit you configured\r\n>   There are only these two conditions to determine if flush should happen\r\n> \r\n> > is this a good \"middle ground\" for running a node that is not fully an archive node?\r\n> \r\n> Unfortunately we don't have a better solution right now. Setting a reasonable flush interval should be a good approach at this point, in the future we will build another mode of archive node which is smaller than the existing one and easier to retain historical states, but it needs time to rollout.\r\n> \r\n> Re your case `and did a cache flush on block 225.`, `somehow this didn't get persisted in storage` are you sure the state(255) is really flushed out? You can search log `Persisted trie from memory database` to see if the flush is indeed happened.\r\n> \r\n> Close it which I believe the behavior is correct. Feel free to reopen if it still doesn't work.\r\n\r\nSo if I understand correctly we will flush regardless of what I set as an interval if snapshot is disabled? My only question would be then how this differs storage-size wise compared to something like an archive node. Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1427663668/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1427791253",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26564#issuecomment-1427791253",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26564",
    "id": 1427791253,
    "node_id": "IC_kwDOAOvK985VGl2V",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-13T11:33:15Z",
    "updated_at": "2023-02-13T11:33:15Z",
    "author_association": "MEMBER",
    "body": "> So if I understand correctly we will flush regardless of what I set as an interval if snapshot is disabled?\r\n\r\nNo, snapshot is another thing. Disable snapshot just simplifies the situation.\r\n\r\n> My only question would be then how this differs storage-size wise compared to something like an archive node.\r\n\r\nArchive node persists all the states block by block. The flush frequency depends on your setting. It depends on two things:\r\n- the average time to process a block\r\n- the interval configured by you\r\n\r\nIf your network has lots of traffic(block is very full), the process time will be longer. The frequency will be higher. \r\n\r\nYou have to run it and get some numbers by yourselves, ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1427791253/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1427868524",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26564#issuecomment-1427868524",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26564",
    "id": 1427868524,
    "node_id": "IC_kwDOAOvK985VG4ts",
    "user": {
      "login": "anthonyoliai",
      "id": 61785803,
      "node_id": "MDQ6VXNlcjYxNzg1ODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/61785803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anthonyoliai",
      "html_url": "https://github.com/anthonyoliai",
      "followers_url": "https://api.github.com/users/anthonyoliai/followers",
      "following_url": "https://api.github.com/users/anthonyoliai/following{/other_user}",
      "gists_url": "https://api.github.com/users/anthonyoliai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anthonyoliai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anthonyoliai/subscriptions",
      "organizations_url": "https://api.github.com/users/anthonyoliai/orgs",
      "repos_url": "https://api.github.com/users/anthonyoliai/repos",
      "events_url": "https://api.github.com/users/anthonyoliai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anthonyoliai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-13T12:34:30Z",
    "updated_at": "2023-02-13T12:34:30Z",
    "author_association": "NONE",
    "body": "> > So if I understand correctly we will flush regardless of what I set as an interval if snapshot is disabled?\r\n> \r\n> No, snapshot is another thing. Disable snapshot just simplifies the situation.\r\n> \r\n> > My only question would be then how this differs storage-size wise compared to something like an archive node.\r\n> \r\n> Archive node persists all the states block by block. The flush frequency depends on your setting. It depends on two things:\r\n> \r\n> * the average time to process a block\r\n> * the interval configured by you\r\n> \r\n> If your network has lots of traffic(block is very full), the process time will be longer. The frequency will be higher.\r\n> \r\n> You have to run it and get some numbers by yourselves,\r\n\r\nGotcha! So, I guess on a POA network which doesn't have many txs per block it would take quite some time for the flush interval to equal the total block processing time; as the process block time is very low.\r\n\r\nSo to iterate, running as a full node with snapshot disabled and a relatively low flush interval means more flushes; however is a much more attractive solution storage-growth wise compared to running a full archive node. \r\n\r\nThus, creating a \"more archivey\" full node which is more crash resistant than a regular full node with the default flush interval of say 1h.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1427868524/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
