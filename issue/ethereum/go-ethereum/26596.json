{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26596",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26596/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26596/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26596/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/26596",
  "id": 1569147578,
  "node_id": "I_kwDOAOvK985dh0q6",
  "number": 26596,
  "title": "Feature request: ability to prune the old ancient blockchain data",
  "user": {
    "login": "jsvisa",
    "id": 3627395,
    "node_id": "MDQ6VXNlcjM2MjczOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3627395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jsvisa",
    "html_url": "https://github.com/jsvisa",
    "followers_url": "https://api.github.com/users/jsvisa/followers",
    "following_url": "https://api.github.com/users/jsvisa/following{/other_user}",
    "gists_url": "https://api.github.com/users/jsvisa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jsvisa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jsvisa/subscriptions",
    "organizations_url": "https://api.github.com/users/jsvisa/orgs",
    "repos_url": "https://api.github.com/users/jsvisa/repos",
    "events_url": "https://api.github.com/users/jsvisa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jsvisa/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-02-03T03:21:07Z",
  "updated_at": "2023-02-03T08:28:35Z",
  "closed_at": "2023-02-03T08:28:35Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# Rationale\r\n\r\nI'm running a new snap-sync node, after the syncing progress, found the local chaindata consuming 800+GB, and half of the disk is used to store the ancient data:\r\n\r\n```bash\r\n$ du --max-depth=1 -h data/geth/chaindata\r\n422G    data/geth/chaindata/ancient\r\n830G    data/geth/chaindata\r\n```\r\n\r\nThe old ancient data is useless in most cases, so if we support the ancient data pruning, we can use fewer disks. \r\n\r\n# Implementation\r\n\r\nSeems the [binance smartchain](https://github.com/bnb-chain/bsc) has supported this feature(merged in [#543](https://github.com/bnb-chain/bsc/pull/543)) maybe we can backport this feature into go-ethereum. \r\n\r\n\r\n```bash\r\n$ ./bin/bsc snapshot prune-block --help\r\nprune-block [command options]\r\n\r\ngeth offline prune-block for block data in ancientdb.\r\nThe amount of blocks expected for remaining after prune can be specified via block-amount-reserved in this command,\r\nwill prune and only remain the specified amount of old block data in ancientdb.\r\nthe brief workflow is to backup the the number of this specified amount blocks backward in original ancientdb\r\ninto new ancient_backup, then delete the original ancientdb dir and rename the ancient_backup to original one for replacement,\r\nfinally assemble the statedb and new ancientDb together.\r\nThe purpose of doing it is because the block data will be moved into the ancient store when it\r\nbecomes old enough(exceed the Threshold 90000), the disk usage will be very large over time, and is occupied mainly by ancientDb,\r\nso it's very necessary to do block data prune, this feature will handle it.\r\n\r\n\r\nETHEREUM OPTIONS:\r\n                                      --datadir value                       Data directory for the databases and keystore (default: \"/home/amber/.ethereum\")\r\n                                      --datadir.ancient value               Data directory for ancient chain segments (default = inside chaindata, '${datadir}/geth/chaindata/ancient/')\r\n                                      --block-amount-reserved value         Sets the expected remained amount of blocks for offline block prune (default: 0)\r\n                                      --triesInMemory value                 The layer of tries trees that keep in memory (default: 128)\r\n                                      --check-snapshot-with-mpt             Enable checking between snapshot and MPT\r\n```",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26596/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26596/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1414826419",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26596#issuecomment-1414826419",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26596",
    "id": 1414826419,
    "node_id": "IC_kwDOAOvK985UVImz",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-03T03:46:27Z",
    "updated_at": "2023-02-03T03:47:30Z",
    "author_association": "MEMBER",
    "body": "There is an EIP for it https://eips.ethereum.org/EIPS/eip-4444, the challenge of it is how can we have a strong guarantee that the dropped historical chain data can still be retrievable. I believe this challenge is not resolved yet.\r\n\r\nWhile as a short-term solution, you can specify the ancient directory to a HDD-based location, it's still performant enough (our freezer design has O(1) read/write complexity) but kind of cheaper to use HDD.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1414826419/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
