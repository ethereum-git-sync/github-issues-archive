{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20106",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20106/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20106/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20106/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/20106",
  "id": 496488876,
  "node_id": "MDU6SXNzdWU0OTY0ODg4NzY=",
  "number": 20106,
  "title": "Recent change in behavior for in-memory database: possible regression?",
  "user": {
    "login": "wuestholz",
    "id": 51156,
    "node_id": "MDQ6VXNlcjUxMTU2",
    "avatar_url": "https://avatars.githubusercontent.com/u/51156?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wuestholz",
    "html_url": "https://github.com/wuestholz",
    "followers_url": "https://api.github.com/users/wuestholz/followers",
    "following_url": "https://api.github.com/users/wuestholz/following{/other_user}",
    "gists_url": "https://api.github.com/users/wuestholz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wuestholz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wuestholz/subscriptions",
    "organizations_url": "https://api.github.com/users/wuestholz/orgs",
    "repos_url": "https://api.github.com/users/wuestholz/repos",
    "events_url": "https://api.github.com/users/wuestholz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wuestholz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2019-09-20T18:27:14Z",
  "updated_at": "2019-09-24T07:49:59Z",
  "closed_at": "2019-09-24T07:49:59Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "I observed a recent change in behavior for the in-memory database. For commit `63b1802` the following piece of code produces a different outcome than in older versions (e.g., `396f1dd8`):\r\n\r\n```\r\ndb := rawdb.NewMemoryDatabase()\r\nsdb, _ = state.New(common.Hash{}, state.NewDatabase(db))\r\naddr := common.HexToAddress(\"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe\")\r\nsdb.SetBalance(addr, big.NewInt(42))\r\nfmt.Printf(\"balance: %v\\n\", sdb.GetBalance(addr))\r\nnsdb := sdb.Copy()\r\nnsdb.Commit(false)\r\ncnsdb := nsdb.Copy()\r\nfmt.Printf(\"balance: %v\\n\", cnsdb.GetBalance(addr))\r\n```\r\n\r\nThis looks like a possible regression.\r\n\r\n#### System information\r\n\r\nOS & Version: Windows\r\nCommit hash : 63b1802\r\n\r\n#### Expected behaviour\r\n\r\nThe code should probably print the following:\r\n\r\n```\r\nbalance: 42\r\nbalance: 42\r\n```\r\n\r\n#### Actual behaviour\r\n\r\nThe code prints the following:\r\n\r\n```\r\nbalance: 42\r\nbalance: 0\r\n```\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\nRun the piece of code above.",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20106/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20106/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/533705666",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20106#issuecomment-533705666",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20106",
    "id": 533705666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzcwNTY2Ng==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-20T20:54:20Z",
    "updated_at": "2019-09-20T20:56:00Z",
    "author_association": "MEMBER",
    "body": "Interesting!\r\nHere's a testcase to repro\r\n```\r\npackage core\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"github.com/ethereum/go-ethereum/common\"\r\n\t\"github.com/ethereum/go-ethereum/core/rawdb\"\r\n\t\"github.com/ethereum/go-ethereum/core/state\"\r\n\t\"math/big\"\r\n\t\"testing\"\r\n)\r\n\r\nfunc TestFoo(t *testing.T) {\r\n\tdb := rawdb.NewMemoryDatabase()\r\n\tsdb, _ := state.New(common.Hash{}, state.NewDatabase(db))\r\n\taddr := common.HexToAddress(\"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe\")\r\n\tsdb.SetBalance(addr, big.NewInt(42))\r\n\tfmt.Printf(\"balance: %v\\n\", sdb.GetBalance(addr))\r\n\tcopyOne := sdb.Copy()\r\n\tcopyOne.Commit(false)\r\n\tcopyTwo := copyOne.Copy()\r\n\tfmt.Printf(\"balance: %v\\n\", sdb.GetBalance(addr))\r\n\tfmt.Printf(\"n balance: %v\\n\", copyOne.GetBalance(addr))\r\n\tfmt.Printf(\"c balance: %v\\n\", copyTwo.GetBalance(addr))\r\n\tif got, exp := copyTwo.GetBalance(addr), big.NewInt(42); got.Cmp(exp) != 0 {\r\n\t\tt.Fatalf(\"got %v exp %v\", got, exp)\r\n\t}\r\n}\r\n\r\n```\r\n\r\nThis behaviour changed in https://github.com/ethereum/go-ethereum/commit/223b950944f494a5b4e0957fd9f92c48b09037ad . It's not about Memorydb, but about how the state accumulates writes. \r\n\r\nIn the example, the trie lookup for `addr` fails (returns `nil`) on `copyTwo` when `GetBalance` is invoked and the state object is looked up. I'm not quite sure why. \r\ncc @karalabe ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/533705666/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/533719484",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20106#issuecomment-533719484",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20106",
    "id": 533719484,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzcxOTQ4NA==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-20T21:45:58Z",
    "updated_at": "2019-09-20T21:49:11Z",
    "author_association": "MEMBER",
    "body": "So, what seems to happen is that the `sdb.trie.t.root` is `nil`, which is carried over to `copyOne`.\r\nThe first copy obtains the changes to `pending`, so it stil has the changes. However, when it is committed, the trie root is not properly updated (because it's `nil` to start with). And then, when it's copied once more, the `pending` has been cleared due to the `commit`, but we still have a `nil` trie `root`. \r\n\r\n If I add a commit to `sdb` before the first copy, the test passes\r\n```\r\n\tsdb.SetBalance(addr, big.NewInt(42))\r\n\tsdb.Commit(false)\r\n```\r\nI am not sure why the changes @karalabe did caused this behaviour to change.  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/533719484/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/533996477",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20106#issuecomment-533996477",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20106",
    "id": 533996477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzk5NjQ3Nw==",
    "user": {
      "login": "wuestholz",
      "id": 51156,
      "node_id": "MDQ6VXNlcjUxMTU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/51156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wuestholz",
      "html_url": "https://github.com/wuestholz",
      "followers_url": "https://api.github.com/users/wuestholz/followers",
      "following_url": "https://api.github.com/users/wuestholz/following{/other_user}",
      "gists_url": "https://api.github.com/users/wuestholz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wuestholz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wuestholz/subscriptions",
      "organizations_url": "https://api.github.com/users/wuestholz/orgs",
      "repos_url": "https://api.github.com/users/wuestholz/repos",
      "events_url": "https://api.github.com/users/wuestholz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wuestholz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-23T08:00:26Z",
    "updated_at": "2019-09-23T08:00:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@holiman Thank you very much for looking into this so quickly!\r\n\r\nYeah, when looking at the commit history those changes seemed like the most likely candidates for causing this change.\r\n\r\nIt's weird that the test passes after adding the second commit. I thought that maybe I'm using the API in the wrong way, but it seems like you agree that the old behavior makes more sense.\r\n\r\nIt would be great to know if there's a chance to reinstate the old behavior. I'm trying to update our Harvey fuzzer to work with the latest Istanbul changes and I'm wondering if I should look into other workarounds.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/533996477/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/533996788",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20106#issuecomment-533996788",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20106",
    "id": 533996788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzk5Njc4OA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-23T08:01:25Z",
    "updated_at": "2019-09-23T08:01:25Z",
    "author_association": "MEMBER",
    "body": "We'll get the issue fixed soon.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/533996788/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/534000099",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/20106#issuecomment-534000099",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/20106",
    "id": 534000099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNDAwMDA5OQ==",
    "user": {
      "login": "wuestholz",
      "id": 51156,
      "node_id": "MDQ6VXNlcjUxMTU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/51156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wuestholz",
      "html_url": "https://github.com/wuestholz",
      "followers_url": "https://api.github.com/users/wuestholz/followers",
      "following_url": "https://api.github.com/users/wuestholz/following{/other_user}",
      "gists_url": "https://api.github.com/users/wuestholz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wuestholz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wuestholz/subscriptions",
      "organizations_url": "https://api.github.com/users/wuestholz/orgs",
      "repos_url": "https://api.github.com/users/wuestholz/repos",
      "events_url": "https://api.github.com/users/wuestholz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wuestholz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-23T08:12:41Z",
    "updated_at": "2019-09-23T08:12:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@karalabe Great! Thanks a lot for letting me know!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/534000099/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
