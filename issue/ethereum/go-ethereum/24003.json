{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24003",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24003/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24003/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24003/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/24003",
  "id": 1065137995,
  "node_id": "I_kwDOAOvK984_fLdL",
  "number": 24003,
  "title": "t8ntool support merge rules",
  "user": {
    "login": "winsvega",
    "id": 4492341,
    "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/winsvega",
    "html_url": "https://github.com/winsvega",
    "followers_url": "https://api.github.com/users/winsvega/followers",
    "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
    "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
    "organizations_url": "https://api.github.com/users/winsvega/orgs",
    "repos_url": "https://api.github.com/users/winsvega/repos",
    "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
    "received_events_url": "https://api.github.com/users/winsvega/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 14,
  "created_at": "2021-11-27T23:11:01Z",
  "updated_at": "2022-05-02T14:26:30Z",
  "closed_at": "2022-05-02T14:26:30Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Add new fork to t8ntool `--fork Merge` for example.\r\nThat tells the evm to work with PoS mode. meaning env section follows the nonce, mixhash, difficulty requrements. \r\nrandom bytecode and so on.",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24003/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24003/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/984370362",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24003#issuecomment-984370362",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24003",
    "id": 984370362,
    "node_id": "IC_kwDOAOvK9846rEy6",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-02T07:46:11Z",
    "updated_at": "2021-12-02T07:46:11Z",
    "author_association": "MEMBER",
    "body": "Yes, we need to add this. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/984370362/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1005028968",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24003#issuecomment-1005028968",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24003",
    "id": 1005028968,
    "node_id": "IC_kwDOAOvK984754Zo",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-04T17:35:41Z",
    "updated_at": "2022-01-04T18:02:18Z",
    "author_association": "MEMBER",
    "body": "I've implemented something here: https://github.com/ethereum/go-ethereum/pull/24141\r\nFor testing the 4399 opcode\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1005028968/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1009244663",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24003#issuecomment-1009244663",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24003",
    "id": 1009244663,
    "node_id": "IC_kwDOAOvK9848J9n3",
    "user": {
      "login": "marioevz",
      "id": 11726710,
      "node_id": "MDQ6VXNlcjExNzI2NzEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11726710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marioevz",
      "html_url": "https://github.com/marioevz",
      "followers_url": "https://api.github.com/users/marioevz/followers",
      "following_url": "https://api.github.com/users/marioevz/following{/other_user}",
      "gists_url": "https://api.github.com/users/marioevz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marioevz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marioevz/subscriptions",
      "organizations_url": "https://api.github.com/users/marioevz/orgs",
      "repos_url": "https://api.github.com/users/marioevz/repos",
      "events_url": "https://api.github.com/users/marioevz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marioevz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-10T18:55:39Z",
    "updated_at": "2022-01-10T18:55:39Z",
    "author_association": "MEMBER",
    "body": "Hi @MariusVanDerWijden, should we have the terminalTotalDifficulty somewhere as the input to the tests?\r\n\r\nIn my opinion, I think the difficulty==0 should be a verification rather than an input to the test.\r\n\r\n@winsvega suggests that perhaps we should have a \"Merge\" fork to validate these.\r\n\r\nI'm inclined towards having TTD and then if totalDifficulty >= TTD, verify that difficulty==0, opcode difficulty()==currentRandom, etc.\r\n\r\nLet me know what you think.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1009244663/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1009252065",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24003#issuecomment-1009252065",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24003",
    "id": 1009252065,
    "node_id": "IC_kwDOAOvK9848J_bh",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-10T19:04:58Z",
    "updated_at": "2022-01-10T19:04:58Z",
    "author_association": "MEMBER",
    "body": "\"terminalTotalDifficulty\" needs to be in chain config for the client same way we used to have \"berlinForkNumber\" and so on.\n\nT8n tool should have --fork \"Merge\" to activate evm in pos mode. The input changes to have \"currentRandom\", the difficulty calculation dissapear",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1009252065/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1065180807",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24003#issuecomment-1065180807",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24003",
    "id": 1065180807,
    "node_id": "IC_kwDOAOvK984_fV6H",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-11T14:47:37Z",
    "updated_at": "2022-03-11T14:47:37Z",
    "author_association": "MEMBER",
    "body": "any news? I can start updating the tests for the PoS format as the blockheaders will change it will affect all tests. need to check that PoS does not break existing tests. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1065180807/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1067890885",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24003#issuecomment-1067890885",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24003",
    "id": 1067890885,
    "node_id": "IC_kwDOAOvK984_prjF",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-15T11:41:01Z",
    "updated_at": "2022-03-15T11:41:01Z",
    "author_association": "MEMBER",
    "body": "Speculating on some options here: \r\n1. Add `td` to input. \r\n\r\nWith an env like\r\n```\r\n{\r\n  \"currentCoinbase\" : \"0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba\",\r\n  \"currentDifficulty\" : \"0x020000\",\r\n  \"currentGasLimit\" : \"0x3b9aca00\",\r\n  \"currentNumber\" : \"0x05\",\r\n  \"currentTimestamp\" : \"0x03e8\",\r\n  \"blockHashes\" : { \"1\" : \"0xdac58aa524e50956d0c0bae7f3f8bb9d35381365d07804dd5b48a5a297c06af4\"}\r\n}\r\n```\r\nThen when running `evm t8n .. --td=0x020000`--fork=earlymerge`, we could have `earlymerge` defined as a network with the `ttd` set to `0x020000`. \r\nIn that case: \r\n- The `terminal total difficulty` is hardcoded in fork(s).\r\n- The `total difficulty` so far is given as input to the state transition, \r\n- The `difficulty` of a block is given in the `env` input (as before). \r\n\r\nOne possible drawback is that it won't be possible to know if the `ttd` was surpassed in _this_ particular block, or an earlier block. \r\n\r\nAlso, the client should react differently in two cases: \r\n- If a post-ttd-block arrives through the network, it should be rejected.\r\n- If a post-ttd-block arrives through the privileged engine API, it should be accepted. \r\n\r\nWith this schema, we would have to just pretend that the block being tested in `t8n` arrived via engine API. \r\n\r\n@marioevz how does this ^ compare to your suggestion? \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1067890885/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1068106915",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24003#issuecomment-1068106915",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24003",
    "id": 1068106915,
    "node_id": "IC_kwDOAOvK984_qgSj",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-15T15:15:22Z",
    "updated_at": "2022-03-15T15:17:53Z",
    "author_association": "MEMBER",
    "body": "terminal total difficulty is blockchain logic. tool does not do blockchain logic. it is like when running FrontierToHomesteadAt5\r\n\r\nall that is required from t8n is access to evm in PoS mode. \r\nso there would be new field `currentRandom`\r\n\r\n@marioevz says there is mode --fakepow to deal with the test blocks. perhaps can be something like --fakepos to accept blocks with difficulty=0 in pos mode\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1068106915/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1068118233",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24003#issuecomment-1068118233",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24003",
    "id": 1068118233,
    "node_id": "IC_kwDOAOvK984_qjDZ",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-15T15:24:28Z",
    "updated_at": "2022-03-15T15:24:28Z",
    "author_association": "MEMBER",
    "body": "> all that is required from t8n is access to evm in PoS mode.\r\n> so there would be new field currentRandom\r\n\r\nHm. Yeah I guess you're right!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1068118233/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1068208512",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24003#issuecomment-1068208512",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24003",
    "id": 1068208512,
    "node_id": "IC_kwDOAOvK984_q5GA",
    "user": {
      "login": "marioevz",
      "id": 11726710,
      "node_id": "MDQ6VXNlcjExNzI2NzEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11726710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marioevz",
      "html_url": "https://github.com/marioevz",
      "followers_url": "https://api.github.com/users/marioevz/followers",
      "following_url": "https://api.github.com/users/marioevz/following{/other_user}",
      "gists_url": "https://api.github.com/users/marioevz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marioevz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marioevz/subscriptions",
      "organizations_url": "https://api.github.com/users/marioevz/orgs",
      "repos_url": "https://api.github.com/users/marioevz/repos",
      "events_url": "https://api.github.com/users/marioevz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marioevz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-15T16:43:05Z",
    "updated_at": "2022-03-15T16:46:22Z",
    "author_association": "MEMBER",
    "body": "Regarding the --fakepos, this is related to the hive `consensus` simulator, which imports the blockchain tests from the test repo, and then it imports each individual block into geth using this:\r\nhttps://github.com/ethereum/hive/blob/aa4cd345e53a539f814a41315b039d6d26ba57a5/clients/merge-go-ethereum/geth.sh#L115\r\n\r\nWhen we attempt to import a PoS block, it results in Bad Block error:\r\n> ########## BAD BLOCK #########\r\n> Chain config: {ChainID: 1 Homestead: 0 DAO: <nil> DAOSupport: true EIP150: 0 EIP155: 0 EIP158: 0 Byzantium: 0 Constantinople: 0 Petersburg: 0 Istanbul: 0, Muir Glacier: <nil>, Berlin: 0, London: 0, Arrow Glacier: <nil>, MergeFork: <nil>, Terminal TD: 0, Engine: ethash}\r\n> \r\n> Number: 1\r\n> Hash: 0x8ce374ca14f5c8f25f1a5731cf10e44f8f05ab6968a764fa9d13752e04796c94\r\n> \r\n> \r\n> Error: invalid difficulty: have 0, want 131072\r\n> ##############################\r\n\r\nThe genesis for the test does contain `terminalTotalDifficulty==0`, but still we don't know if geth should simply accept this block since, in post merge, the execution client would rely on the consensus client to validate this block, but since this is an imported block, there is no consensus client validation involved.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1068208512/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1068324330",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24003#issuecomment-1068324330",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24003",
    "id": 1068324330,
    "node_id": "IC_kwDOAOvK984_rVXq",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-15T18:29:48Z",
    "updated_at": "2022-03-15T18:29:48Z",
    "author_association": "MEMBER",
    "body": "The hive consensus simulator itself will have to be modified -- first importing pow blocks, then importing via some other means -- possibly by feeding the PoS blocks over the rpc `engine` layer. I don't think solving that is related to the feature here... (?)  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1068324330/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1068489950",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24003#issuecomment-1068489950",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24003",
    "id": 1068489950,
    "node_id": "IC_kwDOAOvK984_r9ze",
    "user": {
      "login": "marioevz",
      "id": 11726710,
      "node_id": "MDQ6VXNlcjExNzI2NzEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11726710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marioevz",
      "html_url": "https://github.com/marioevz",
      "followers_url": "https://api.github.com/users/marioevz/followers",
      "following_url": "https://api.github.com/users/marioevz/following{/other_user}",
      "gists_url": "https://api.github.com/users/marioevz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marioevz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marioevz/subscriptions",
      "organizations_url": "https://api.github.com/users/marioevz/orgs",
      "repos_url": "https://api.github.com/users/marioevz/repos",
      "events_url": "https://api.github.com/users/marioevz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marioevz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-15T21:28:14Z",
    "updated_at": "2022-03-15T21:28:14Z",
    "author_association": "MEMBER",
    "body": "I think there could be a benefit to test importing PoS blocks by other means other than the Engine API, for example to test fields that the block header has but the Engine API doesn't, like the ommersHash or the nonce.\r\nFor the consensus simulator, I like the idea that the Engine API takes over and is used to send the blocks",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1068489950/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1076761806",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24003#issuecomment-1076761806",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24003",
    "id": 1076761806,
    "node_id": "IC_kwDOAOvK985ALhTO",
    "user": {
      "login": "marioevz",
      "id": 11726710,
      "node_id": "MDQ6VXNlcjExNzI2NzEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11726710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marioevz",
      "html_url": "https://github.com/marioevz",
      "followers_url": "https://api.github.com/users/marioevz/followers",
      "following_url": "https://api.github.com/users/marioevz/following{/other_user}",
      "gists_url": "https://api.github.com/users/marioevz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marioevz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marioevz/subscriptions",
      "organizations_url": "https://api.github.com/users/marioevz/orgs",
      "repos_url": "https://api.github.com/users/marioevz/repos",
      "events_url": "https://api.github.com/users/marioevz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marioevz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-23T19:56:16Z",
    "updated_at": "2022-03-23T19:56:16Z",
    "author_association": "MEMBER",
    "body": "> The hive consensus simulator itself will have to be modified -- first importing pow blocks, then importing via some other means -- possibly by feeding the PoS blocks over the rpc `engine` layer. I don't think solving that is related to the feature here... (?)\r\n\r\nHey @MariusVanDerWijden , regarding this issue, the hive consensus simulator currently tries to import the block using `geth import`, and it seems like this feature is unaware that the TTD has been reached and still requires the imported blocks to have difficulty > 0.\r\n\r\nDo you think it would be worth it to test importing these PoS blocks via the `geth import` command (Even if we have to send an Engine API forkchoiceUpdated afterwards to make these imported blocks part of the post-merge canonical chain) ?\r\n\r\nOne upside I see of importing these blocks, using different means other than the Engine API, is that these imported blocks could contain fields that are not available in the Engine API newPayload, such as the ommersHash or the Nonce.\r\n\r\nIs this a valid testing scenario or should we simply import everything using the Engine API ?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1076761806/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1076890707",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24003#issuecomment-1076890707",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24003",
    "id": 1076890707,
    "node_id": "IC_kwDOAOvK985AMAxT",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-23T22:39:58Z",
    "updated_at": "2022-03-23T22:39:58Z",
    "author_association": "MEMBER",
    "body": "Hmm I think it makes sense for `geth import` to support post-merge blocks, especially because of EIP-4444 and 4488 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1076890707/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1078449360",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24003#issuecomment-1078449360",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24003",
    "id": 1078449360,
    "node_id": "IC_kwDOAOvK985AR9TQ",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-24T22:41:48Z",
    "updated_at": "2022-03-24T22:41:48Z",
    "author_association": "MEMBER",
    "body": "Define of terminal total difficulty as 0 in genesis.json should assume that client start in PoS mode since block 1",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1078449360/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
