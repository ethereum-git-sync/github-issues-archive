{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19488",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19488/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19488/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19488/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/19488",
  "id": 436033157,
  "node_id": "MDU6SXNzdWU0MzYwMzMxNTc=",
  "number": 19488,
  "title": "Inconsistent Result for Web3 Constant Method Call",
  "user": {
    "login": "geekybcresearcher",
    "id": 49897860,
    "node_id": "MDQ6VXNlcjQ5ODk3ODYw",
    "avatar_url": "https://avatars.githubusercontent.com/u/49897860?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/geekybcresearcher",
    "html_url": "https://github.com/geekybcresearcher",
    "followers_url": "https://api.github.com/users/geekybcresearcher/followers",
    "following_url": "https://api.github.com/users/geekybcresearcher/following{/other_user}",
    "gists_url": "https://api.github.com/users/geekybcresearcher/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/geekybcresearcher/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/geekybcresearcher/subscriptions",
    "organizations_url": "https://api.github.com/users/geekybcresearcher/orgs",
    "repos_url": "https://api.github.com/users/geekybcresearcher/repos",
    "events_url": "https://api.github.com/users/geekybcresearcher/events{/privacy}",
    "received_events_url": "https://api.github.com/users/geekybcresearcher/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1157707837,
      "node_id": "MDU6TGFiZWwxMTU3NzA3ODM3",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/area:rpc",
      "name": "area:rpc",
      "color": "d4c5f9",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/milestones/87",
    "html_url": "https://github.com/ethereum/go-ethereum/milestone/87",
    "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/milestones/87/labels",
    "id": 4479799,
    "node_id": "MDk6TWlsZXN0b25lNDQ3OTc5OQ==",
    "number": 87,
    "title": "1.9.x",
    "description": "Anything we'd like to release in the 1.9 family, but not sure exactly which release (i.e. 1.9 backlog).",
    "creator": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 2,
    "closed_issues": 7,
    "state": "closed",
    "created_at": "2019-07-10T06:06:57Z",
    "updated_at": "2021-03-04T08:45:33Z",
    "due_on": null,
    "closed_at": "2021-03-04T08:45:33Z"
  },
  "comments": 5,
  "created_at": "2019-04-23T07:12:30Z",
  "updated_at": "2020-08-27T09:10:43Z",
  "closed_at": "2020-06-25T08:37:48Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hi All,\r\n\r\nDeployed a local private Ethereum environment. While trying to invoke a constant method of a solidity contract getting inconsistent results. Sometimes the result is returned and mostly not.\r\n\r\nWhen I tried to fetch the data from geth command line was able to successfully list down the results every time.\r\n\r\nIn the Nodejs code below created a loop of 20 iterations to fetch the asset price. Sometimes 10-15 times the result is returned correctly and many a times in none of the iterations result is found rather it says 0.\r\n\r\n> **Contract**\r\n\r\n    pragma solidity ^0.4.9;\r\n    \r\n    contract Asset {\r\n    \r\n        address public owner;\r\n        struct Asset {\r\n            string title;\r\n            string description;\r\n            uint  assetTime;\r\n            uint price;\r\n        }\r\n    \r\n        Asset[] public  assets;\r\n    \r\n        event LogAssetAdded(address indexed fromAddress, string description);\r\n    \r\n        // add asset\r\n        function addAsset(string  description1, string title1, uint price1,uint assetTime1) \r\n          returns (uint, string, string, uint, uint) {\r\n            uint assetID = assets.length++;\r\n            Asset o = assets[assetID];\r\n    \r\n            o.description = description1;\r\n            o.assetTime=assetTime1;\r\n            o.title = title1;\r\n            o.price = price1;\r\n            \r\n            LogAssetAdded(msg.sender, description1);\r\n            \r\n            return (assetID, assets[assetID].description, assets[assetID].title, assets[assetID].price, \r\n              assets[assetID].assetTime);\r\n        }\r\n    \r\n        //return the  number of assets \r\n        function assetCount() public constant returns(uint) {\r\n            uint assetCount =assets.length;\r\n            return(assetCount);\r\n        }\r\n        \r\n        function getAssetPrice(uint assetID) public constant returns(uint) {\r\n            return assets[assetID].price;\r\n        }\r\n        \r\n        function getDefAssetPrice() public constant returns(uint) {\r\n            return assets[assets.length-1].price;\r\n        }\r\n        \r\n        function getDefAssetTitle() public constant returns(string) {\r\n            return assets[assets.length-1].title;\r\n        }\r\n        \r\n        function getDefAssetTime() public constant returns(uint) {\r\n            return assets[assets.length-1].assetTime;\r\n        }\r\n    }\r\n\r\n> **NodeJs Client Code**\r\n\r\n    const rpcURL = 'http://localhost:9081'\r\n    var Web3 = require('web3');\r\n    var web3 = new Web3(new Web3.providers.HttpProvider(\"http://localhost:9081\"));\r\n    \r\n    const fs = require(\"fs\");\r\n    \r\n    let abi ='<<Apply ABI>>';\r\n    \r\n    let bytecode = '<<Apply Bytecode >>'\r\n    let gasEstimate = web3.eth.estimateGas({data: bytecode});\r\n    \r\n    let assetContract = web3.eth.contract(JSON.parse(abi));\r\n    const account = '<<Provide from account>>';\r\n    \r\n    var contractAddress = '<<Provide Contract Address>>';\r\n    \r\n    var ctr1 = 0;\r\n    var contract = assetContract.at(contractAddress);\r\n    \r\n    // Method to create asset\r\n    function addAsset(){\r\n    \tcontract.addAsset.sendTransaction(\"Asset Description\", \" Asset Title\", 41202, 41203, {from: account, gas: 400000} \r\n    \t, function(err, result){\r\n    \t\tif(err){\r\n    \t\t\tconsole.log('Error '+ err);    \r\n    \t\t}\r\n    \t\telse{\r\n    \t\t\tconsole.log('Transaction Hash: '+ result);\r\n    \t\t\tgetAssetPrice();\r\n    \t\t}\r\n    \t});\r\n    }\r\n    \r\n    // Method to fetch asset price\r\n    function getAssetPrice(){  \r\n    \tfor(var i=0;i<20;i++){\r\n    \t  contract.getAssetPrice(0, (error, result) => {\r\n    \t\tif (!error && result>0) {\r\n    \t\t\tctr1++;\r\n    \t\t\tconsole.log(ctr1 +\": getAssetPrice: \"+ result);\r\n    \t\t}\r\n    \t\tif (!error){\r\n    \t\t\t console.log(\"Error occurred: \"+ error);\r\n    \t\t}\r\n    \t});\r\n    }\r\n    \r\n    addAsset();\r\n    //getAssetPrice()\r\n\r\n> **Dependencies**\r\n\r\n    \"web3\": \"^0.19\",\r\n    \"solc\": \"^0.4.9\"\r\n\r\n> **Geth Version**\r\n\r\n     v1.9.0 windows-amd64, go1.10.3\r\n> ** OS**\r\n     Windows 10 64 bit\r\n> **Geth Instance Command**\r\n\r\n    geth --mine --minerthreads=1 --datadir D:/Ethereum/env-II/data/node1 --networkid 4224 --nodiscover --rpc --rpcport \"9081\" --port \"30301\" --rpccorsdomain \"*\" --nat \"any\" --rpcapi eth,web3,personal,net,miner --unlock 0 --password \"D:/Ethereum/env-II/pwd.txt\"  --rpcaddr 0.0.0.0 --verbosity 2 console\r\n\r\n> **Geth command line result**\r\n\r\n    > var assetContractRef = eth.contract('<<Contract abi>>');\r\n    > var assetContract = assetContractRef.at('<<Contract address>>')\r\n    > assetContract.getAssetPrice(1);\r\n    > 41202\r\n\r\n> **Result on invoking with Call**\r\n\r\n    contract.getAssetPrice.call(0, (error, result) => {});\r\n    \r\n    Faced same result i.e. inconsistent output.\r\n\r\n> **Note**\r\n\r\nI have tried this implementation, with Web3 1.0.0-beta.52 as well with a bit modified nodejs code i.e. specific to the web3 1.0.0 signatures, but have faced the same inconsistent results. If required could share that version of Nodejs code as well.\r\n\r\nBased on the results seems there is some issue with the geth instance itself",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19488/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19488/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/485673506",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19488#issuecomment-485673506",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19488",
    "id": 485673506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTY3MzUwNg==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-23T07:15:38Z",
    "updated_at": "2019-04-23T07:15:38Z",
    "author_association": "MEMBER",
    "body": "Could you provide the logs from `geth` when it serves the requests from node? It might say something about internal errors while serving the request(s)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/485673506/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/485695789",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19488#issuecomment-485695789",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19488",
    "id": 485695789,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTY5NTc4OQ==",
    "user": {
      "login": "geekybcresearcher",
      "id": 49897860,
      "node_id": "MDQ6VXNlcjQ5ODk3ODYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/49897860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geekybcresearcher",
      "html_url": "https://github.com/geekybcresearcher",
      "followers_url": "https://api.github.com/users/geekybcresearcher/followers",
      "following_url": "https://api.github.com/users/geekybcresearcher/following{/other_user}",
      "gists_url": "https://api.github.com/users/geekybcresearcher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geekybcresearcher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geekybcresearcher/subscriptions",
      "organizations_url": "https://api.github.com/users/geekybcresearcher/orgs",
      "repos_url": "https://api.github.com/users/geekybcresearcher/repos",
      "events_url": "https://api.github.com/users/geekybcresearcher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geekybcresearcher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-23T08:26:26Z",
    "updated_at": "2019-04-23T08:30:04Z",
    "author_association": "NONE",
    "body": "As asked PFA the logs. Here are two of the newly added transaction hashes which I created to add asset.\r\n\r\nTx 1: 0xbb8d9d4f472504d36d7dc8adbcb5ddbed77aa767baecce4586d715482117e648\r\nTx 2: 0x0e5978e648175ccfad9ef25c838e883235f37ed61883211b1b637e77e6b49b4a\r\n\r\n[Log File](https://github.com/geekybcresearcher/ethereum-research/blob/master/00.log)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/485695789/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/486084245",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19488#issuecomment-486084245",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19488",
    "id": 486084245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjA4NDI0NQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-24T06:20:16Z",
    "updated_at": "2019-04-24T06:20:16Z",
    "author_association": "MEMBER",
    "body": "As far as I can tell, the server logs show that the contract creation fails : ` err=\"contract creation code storage out of gas\"`. I don't see (in the nodejs code) where you actually create the contract? Are you sure that `contractAddress` is correct? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/486084245/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/486097983",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19488#issuecomment-486097983",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19488",
    "id": 486097983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjA5Nzk4Mw==",
    "user": {
      "login": "geekybcresearcher",
      "id": 49897860,
      "node_id": "MDQ6VXNlcjQ5ODk3ODYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/49897860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geekybcresearcher",
      "html_url": "https://github.com/geekybcresearcher",
      "followers_url": "https://api.github.com/users/geekybcresearcher/followers",
      "following_url": "https://api.github.com/users/geekybcresearcher/following{/other_user}",
      "gists_url": "https://api.github.com/users/geekybcresearcher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geekybcresearcher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geekybcresearcher/subscriptions",
      "organizations_url": "https://api.github.com/users/geekybcresearcher/orgs",
      "repos_url": "https://api.github.com/users/geekybcresearcher/repos",
      "events_url": "https://api.github.com/users/geekybcresearcher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geekybcresearcher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-24T07:12:12Z",
    "updated_at": "2019-04-24T07:12:12Z",
    "author_association": "NONE",
    "body": "The asset contract was deployed earlier itself. Possibly this particular error you saw was for another contract which I was testing. Required asset contract is definitely deployed as I have the address for the same, secondly addAsset is working as shared with you the transaction hashes. Also when I query directly from geth using the same contract address am able to list the data. To me it seems some issue with RPC connection implementation. Is there is any issue going on in this regard?\r\n\r\nBelow I have listed the transaction receipt details for the same. Hope this gives that clarity. Do let me know if you want me to again deploy the contract, perform these steps and then share the logs.\r\n\r\n> **Transaction Receipt 1**\r\n\r\n```\r\neth.getTransactionReceipt('0xbb8d9d4f472504d36d7dc8adbcb5ddbed77aa767baecce4586d715482117e648')\r\n{\r\n  blockHash: \"0x78e68f145ca17a96d003679e392236d59d08779f58187c1c90d86516ab03aa38\",\r\n  blockNumber: 218207,\r\n  contractAddress: null,\r\n  cumulativeGasUsed: 68548,\r\n  from: \"0x46a6eaccf314e2e8a744d7ce480b28de2b3b0839\",\r\n  gasUsed: 68548,\r\n  logs: [{\r\n      address: \"0x9169da02ea5574ad21629d9c2192e9798b26bed6\",\r\n      blockHash: \"0x78e68f145ca17a96d003679e392236d59d08779f58187c1c90d86516ab03aa38\",\r\n      blockNumber: 218207,\r\n      data: \"0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000124e6577204173736574204465736320312e330000000000000000000000000000\",\r\n      logIndex: 0,\r\n      removed: false,\r\n      topics: [\"0x14626520695bdd66fe8470cb35cb8e19b265581efa59e0d0e5d8085291536fdc\", \"0x00000000000000000000000046a6eaccf314e2e8a744d7ce480b28de2b3b0839\"],\r\n      transactionHash: \"0xbb8d9d4f472504d36d7dc8adbcb5ddbed77aa767baecce4586d715482117e648\",\r\n      transactionIndex: 0\r\n  }],\r\n  logsBloom: \"0xr\n  root: \"0x2d3410aedd91178906c6ba08f645a645edcf0af17b35df7783845060276298d0\",\r\n  to: \"0x9169da02ea5574ad21629d9c2192e9798b26bed6\",\r\n  transactionHash: \"0xbb8d9d4f472504d36d7dc8adbcb5ddbed77aa767baecce4586d715482117e648\",\r\n  transactionIndex: 0\r\n}\r\n```\r\n\r\n> **Transaction Receipt 2**\r\n\r\n```\r\neth.getTransactionReceipt('0x0e5978e648175ccfad9ef25c838e883235f37ed61883211b1b637e77e6b49b4a')\r\n{\r\n  blockHash: \"0xc207c78e67a7bcc658da600447e389d19a4b8c545dcf6b6ec5c3e94e5c6f399a\",\r\n  blockNumber: 218208,\r\n  contractAddress: null,\r\n  cumulativeGasUsed: 68548,\r\n  from: \"0x46a6eaccf314e2e8a744d7ce480b28de2b3b0839\",\r\n  gasUsed: 68548,\r\n  logs: [{\r\n      address: \"0x9169da02ea5574ad21629d9c2192e9798b26bed6\",\r\n      blockHash: \"0xc207c78e67a7bcc658da600447e389d19a4b8c545dcf6b6ec5c3e94e5c6f399a\",\r\n      blockNumber: 218208,\r\n      data: \"0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000124e6577204173736574204465736320312e330000000000000000000000000000\",\r\n      logIndex: 0,\r\n      removed: false,\r\n      topics: [\"0x14626520695bdd66fe8470cb35cb8e19b265581efa59e0d0e5d8085291536fdc\", \"0x00000000000000000000000046a6eaccf314e2e8a744d7ce480b28de2b3b0839\"],\r\n      transactionHash: \"0x0e5978e648175ccfad9ef25c838e883235f37ed61883211b1b637e77e6b49b4a\",\r\n      transactionIndex: 0\r\n  }],\r\n  logsBloom: \"0xr\n  root: \"0x4e7d84600466f75bc6aff14f965ec79d7b9e74cfde8238a3c2e213ec02451a07\",\r\n  to: \"0x9169da02ea5574ad21629d9c2192e9798b26bed6\",\r\n  transactionHash: \"0x0e5978e648175ccfad9ef25c838e883235f37ed61883211b1b637e77e6b49b4a\",\r\n  transactionIndex: 0\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/486097983/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/649376875",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19488#issuecomment-649376875",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19488",
    "id": 649376875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTM3Njg3NQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-25T08:37:48Z",
    "updated_at": "2020-06-25T08:37:48Z",
    "author_association": "MEMBER",
    "body": "There's something odd here: \r\n```javascript\r\n\t\tif (!error && result>0) {\r\n\t\t\tctr1++;\r\n\t\t\tconsole.log(ctr1 +\": getAssetPrice: \"+ result);\r\n\t\t}\r\n\t\tif (!error){\r\n\t\t\t console.log(\"Error occurred: \"+ error);\r\n\t\t}\r\n```\r\nBoth those clauses have `!error`, the second one seems to be wrong. \r\nAll in all, I think this is a bit too far away from geth to know if it's actually geth doing something wrong, or it it's in your javacsript code, or in some middleware library. \r\n\r\nI'll close this, since it's fairly old, but if you still have problems of this kind, please file a new ticket, and please remove as much middleware as possible. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/649376875/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
