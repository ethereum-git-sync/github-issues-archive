{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2577",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2577/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2577/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2577/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/2577",
  "id": 155379448,
  "node_id": "MDU6SXNzdWUxNTUzNzk0NDg=",
  "number": 2577,
  "title": "eth/api: eth_estimateGas broken for non-contract recipients",
  "user": {
    "login": "obscuren",
    "id": 6264126,
    "node_id": "MDQ6VXNlcjYyNjQxMjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/obscuren",
    "html_url": "https://github.com/obscuren",
    "followers_url": "https://api.github.com/users/obscuren/followers",
    "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
    "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
    "organizations_url": "https://api.github.com/users/obscuren/orgs",
    "repos_url": "https://api.github.com/users/obscuren/repos",
    "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
    "received_events_url": "https://api.github.com/users/obscuren/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    },
    {
      "id": 1157707837,
      "node_id": "MDU6TGFiZWwxMTU3NzA3ODM3",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/area:rpc",
      "name": "area:rpc",
      "color": "d4c5f9",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2016-05-17T22:42:46Z",
  "updated_at": "2018-12-14T14:22:56Z",
  "closed_at": "2016-05-21T20:54:31Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "#### System information\n\nGeth version: `1.4.1` and upward \nOS & Version: Windows/Linux/OSX\n#### Expected behaviour\n\nWhen doing an `eth_estimateCall` to non-contracts I expect it to return the amount of gas required to do the call.\n#### Actual behaviour\n\nWhen doing an `eth_estimateCall` to a non-contract it returns an error telling me that there's no code at the given address (which is true). \n#### Steps to reproduce the behaviour\n\n```\n> eth.estimateGas({from:eth.accounts[0], to:eth.accounts[1], gas:1000000})\nno contract code at given address\n```\n",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2577/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2577/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/219877415",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2577#issuecomment-219877415",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2577",
    "id": 219877415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTg3NzQxNQ==",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-17T22:49:40Z",
    "updated_at": "2016-05-17T22:49:40Z",
    "author_association": "MEMBER",
    "body": "The issue is that estimate gas uses the generic  `doCall`. This method checks whether there's code and returns an error when no code could be found at the recipients address. \n\nThis check was added by @karalabe and assume that it was added for abigen / bindings code. Please elaborate on why this was added so it can be properly addressed when creating the PR to fix this regression. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/219877415/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/219941574",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2577#issuecomment-219941574",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2577",
    "id": 219941574,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTk0MTU3NA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T06:57:25Z",
    "updated_at": "2016-05-18T06:57:25Z",
    "author_association": "MEMBER",
    "body": "I'm not sure if this is a true regression or a change towards the behavior it should have had originally.\n\nThis change was added by https://github.com/ethereum/go-ethereum/pull/2496. The rationale was that a lot of different error scenarios were mixed in under the same behavior:\n- Contract threw or otherwise did invalid operations: return nil\n- Contract didn't exist in the first place: return nil\n- Chain is out of sync and contract doesn't exist **yet**: return nil\n\nIn case of a call, in all of the above cases a native DApp only receives a parse failure from `abi`, which cannot unmarshal nil into whatever return types (which can also occur if our `abi` package is faulty and/or the loaded evm abi doesn't match the bytecode). The issue is that opposed to a user who can make an intelligent guess as to what's wrong, a program needs to know which of the failure scenario occurred. The most important one of them is to know whether the contract doesn't exist or whether the contract code failed: in the first case the solution is to sync, etc... in the second case however the solution is to fail as there's no way to recover if the contract doesn't work.\n\nIn the case of estimate, the issue is even worse because given that the contract doesn't exist, estimate plain returned 21000 gas (maybe a bit more if input data was also provided). This results is signing transactions that don't have enough gas and will surely go out of gas, taking the associated ether with it.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/219941574/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/219945830",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2577#issuecomment-219945830",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2577",
    "id": 219945830,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTk0NTgzMA==",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T07:18:58Z",
    "updated_at": "2016-05-18T07:18:58Z",
    "author_association": "MEMBER",
    "body": "I disagree. Doing a call should **not** result in an error if there was no error to be returned. You're abusing an error field to get an indication whether an execution of the EVM may or may not happen. If you require some indication whether code exists at an address check so in advance of the call and not depend on an error field.\n\n>  The most important one of them is to know whether the contract doesn't exist or whether the contract code failed: in the first case the solution is to sync, etc.\n\nExactly. Use `len(GetCode(addr))` instead of abusing an error field. Not having code at at address is **not** an error. Even computers can make very accurate guesses ;-)\n\n> In the case of estimate, the issue is even worse because given that the contract doesn't exist, estimate plain returned 21000 gas (maybe a bit more if input data was also provided).\n\nWorse? Why would a call go out of gas when performed? The estimate call method's purpose is to estimate the gas, even for non-contract calls. This is a feature and this feature no longer works properly, therefor: **regression**. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/219945830/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/219946026",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2577#issuecomment-219946026",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2577",
    "id": 219946026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTk0NjAyNg==",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T07:19:53Z",
    "updated_at": "2016-05-18T07:19:53Z",
    "author_association": "MEMBER",
    "body": "Additionally if the `abi` does not handle `nil` very well then the `abi` should be fixed. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/219946026/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/219947526",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2577#issuecomment-219947526",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2577",
    "id": 219947526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTk0NzUyNg==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T07:27:55Z",
    "updated_at": "2016-05-18T07:27:55Z",
    "author_association": "MEMBER",
    "body": "Hmmm, that's a possible interpretation too. In this light estimate is a bit more low level than I'd like, though it could still be made to work a bit higher up with getCode. Though it would need some love to prevent wasting tons of calls constantly verifying code availability. I'll look into fixing this.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/219947526/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/221126047",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2577#issuecomment-221126047",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2577",
    "id": 221126047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTEyNjA0Nw==",
    "user": {
      "login": "perl5577",
      "id": 8019529,
      "node_id": "MDQ6VXNlcjgwMTk1Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8019529?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/perl5577",
      "html_url": "https://github.com/perl5577",
      "followers_url": "https://api.github.com/users/perl5577/followers",
      "following_url": "https://api.github.com/users/perl5577/following{/other_user}",
      "gists_url": "https://api.github.com/users/perl5577/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/perl5577/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/perl5577/subscriptions",
      "organizations_url": "https://api.github.com/users/perl5577/orgs",
      "repos_url": "https://api.github.com/users/perl5577/repos",
      "events_url": "https://api.github.com/users/perl5577/events{/privacy}",
      "received_events_url": "https://api.github.com/users/perl5577/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-23T23:31:49Z",
    "updated_at": "2016-05-23T23:31:49Z",
    "author_association": "NONE",
    "body": "I have coded fonction for payout all user . \nWith perfect amount gaz for make transaction.\nNow is broken and compliance with wiki .\n\nFor me is big regression, i can not payout my users .\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/221126047/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
