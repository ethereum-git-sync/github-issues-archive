{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26022",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26022/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26022/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26022/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/26022",
  "id": 1418114739,
  "node_id": "I_kwDOAOvK985Uhraz",
  "number": 26022,
  "title": "retrieved hash chain is invalid: sidechain ghost-state attack",
  "user": {
    "login": "anthonyoliai",
    "id": 61785803,
    "node_id": "MDQ6VXNlcjYxNzg1ODAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/61785803?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/anthonyoliai",
    "html_url": "https://github.com/anthonyoliai",
    "followers_url": "https://api.github.com/users/anthonyoliai/followers",
    "following_url": "https://api.github.com/users/anthonyoliai/following{/other_user}",
    "gists_url": "https://api.github.com/users/anthonyoliai/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/anthonyoliai/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/anthonyoliai/subscriptions",
    "organizations_url": "https://api.github.com/users/anthonyoliai/orgs",
    "repos_url": "https://api.github.com/users/anthonyoliai/repos",
    "events_url": "https://api.github.com/users/anthonyoliai/events{/privacy}",
    "received_events_url": "https://api.github.com/users/anthonyoliai/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2022-10-21T10:25:15Z",
  "updated_at": "2023-05-03T06:49:45Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nGeth version: `v1.10.25`\r\nOS & Version: Ubuntu\r\n\r\n#### Expected behaviour\r\nI'm currently running a private POA network on AWS using Kubernetes EKS. I've successfully deployed all nodes, and the network is operational.\r\n\r\nI'm currently running 3 miners, 1 RPC, and 1 full bootnode.\r\nOutput from ethstats:\r\n![image](https://user-images.githubusercontent.com/61785803/197173606-6abe6bfe-0a62-4285-8fd5-0519eeec5af3.png)\r\n\r\nHow my network currently operates is that there are most of the time empty blocks, with some burst of txs from time-to-time.\r\n\r\n#### Actual behaviour\r\nI notice that at some point, some of the nodes start to drop peers and unsync. I made sure that the hardware requirements are there, and I'm closely monitoring all my nodes through Prometheus/Grafana.\r\n\r\nFor example, yesterday, my RPC node stopped syncing at block 8000, and was therefore stuck at that block. \r\nInterestingly, statically adding the peers did not work either. I was forced to kill the node and have it restart from scratch.\r\n\r\nThe reason for failure is quite interesting however, this is example output:\r\n```\r\nDEBUG[10-21|10:01:30.341] Skeleton fill failed                     err=\"syncing canceled (requested)\"\r\nDEBUG[10-21|10:01:30.341] Skeleton chain invalid                   peer=a79227b1 err=\"syncing canceled (requested)\"\r\nDEBUG[10-21|10:01:30.341] Header download terminated               peer=a79227b1\r\nDEBUG[10-21|10:01:30.341] Block body download terminated           err=\"syncing canceled (requested)\"\r\nDEBUG[10-21|10:01:30.341] Receipt download terminated              err=\"syncing canceled (requested)\"\r\nDEBUG[10-21|10:01:30.341] Synchronisation terminated               elapsed=18.303ms\r\nWARN [10-21|10:01:30.341] Synchronisation failed, dropping peer    peer=a79227b144390386ffbc6ac44c1b158d92716fb29d93a3f2d9564511068ed7dd err=\"retrieved hash chain is invalid: sidechain ghost-state attack\"\r\nDEBUG[10-21|10:01:30.341] Message handling failed in snap        peer=a79227b1 err=EOF\r\nDEBUG[10-21|10:01:30.341] Message handling failed in eth         id=a79227b153490386 conn=staticdial        err=EOF\r\nDEBUG[10-21|10:01:30.341] Removing Ethereum peer                   peer=a79227b1 snap=true\r\nDEBUG[10-21|10:01:30.341] Removing p2p peer                        peercount=1 id=a79227b153490386 duration=20.029s       req=false \r\n```err=\"useless peer\"\r\n```\r\n\r\nI can't find much documentation on this!\r\n\r\nWhat does `retrieved hash chain is invalid: sidechain ghost-state attack` mean? And how would I go about preventing this?\r\n\r\n#### Steps to reproduce the behaviour\r\nI can't share much information regarding how to reproduce this, but i have set up a POA network with a block time of 5 seconds, with 3x miners, 1 RPC and 1 full bootnode.\r\n\r\nAll nodes connect to the bootnode as entrypoint.\r\n\r\n#### Backtrace\r\nSee up.\r\n\r\nWhen submitting logs: please submit them as text and not screenshots.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26022/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26022/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1288797395",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26022#issuecomment-1288797395",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26022",
    "id": 1288797395,
    "node_id": "IC_kwDOAOvK985M0XzT",
    "user": {
      "login": "anthonyoliai",
      "id": 61785803,
      "node_id": "MDQ6VXNlcjYxNzg1ODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/61785803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anthonyoliai",
      "html_url": "https://github.com/anthonyoliai",
      "followers_url": "https://api.github.com/users/anthonyoliai/followers",
      "following_url": "https://api.github.com/users/anthonyoliai/following{/other_user}",
      "gists_url": "https://api.github.com/users/anthonyoliai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anthonyoliai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anthonyoliai/subscriptions",
      "organizations_url": "https://api.github.com/users/anthonyoliai/orgs",
      "repos_url": "https://api.github.com/users/anthonyoliai/repos",
      "events_url": "https://api.github.com/users/anthonyoliai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anthonyoliai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-24T10:24:27Z",
    "updated_at": "2022-10-24T10:24:27Z",
    "author_association": "NONE",
    "body": "Furthermore, i'm not sure if this is related, but could it be that due to this sidechain ghost-state attack, the following error occurs?\r\n\r\n```\r\nDEBUG[10-24|10:21:26.001] Discarded delivered header or block, too far away peer=d64565f54f769356073dbba162538f4b5d469209c29e5535fde022dbce540648 number=65812 hash=f73e9b..ff04bf distance=43496\r\nDEBUG[10-24|10:21:26.001] Peer discarded announcement              peer=27ee362ec1dedff967343917a753d2998e9af0d99879bdc400b3d6354fbacd31 number=65812 hash=f73e9b..ff04bf distance=43496\r\nDEBUG[10-24|10:21:26.001] Discarded delivered header or block, too far away peer=cc9586812a41bf3a7a9ac1a5aea898f942acaf73f4d2d0692fe93c739c09c964 number=65812 hash=f73e9b..ff04bf distance=43496\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1288797395/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1288968179",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26022#issuecomment-1288968179",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26022",
    "id": 1288968179,
    "node_id": "IC_kwDOAOvK985M1Bfz",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-24T12:34:52Z",
    "updated_at": "2022-10-24T12:34:52Z",
    "author_association": "MEMBER",
    "body": "I think the problem is that you have a very long sidechain where nothing happens, so when we import the long sidechain, but the state doesn't change, then we stop the chain import. This is only a concern in pow, in pos it can happen that multiple blocks don't update the state, so it might be okay to just import the blocks here? Would be good to talk a bit about this on triage",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1288968179/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1288969266",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26022#issuecomment-1288969266",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26022",
    "id": 1288969266,
    "node_id": "IC_kwDOAOvK985M1Bwy",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-24T12:35:44Z",
    "updated_at": "2022-10-24T12:35:44Z",
    "author_association": "MEMBER",
    "body": "For a quick fix you can probably delete the datadir of the affected nodes, so they sync the correct chain directly and not as a sidechain",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1288969266/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1289077076",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26022#issuecomment-1289077076",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26022",
    "id": 1289077076,
    "node_id": "IC_kwDOAOvK985M1cFU",
    "user": {
      "login": "anthonyoliai",
      "id": 61785803,
      "node_id": "MDQ6VXNlcjYxNzg1ODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/61785803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anthonyoliai",
      "html_url": "https://github.com/anthonyoliai",
      "followers_url": "https://api.github.com/users/anthonyoliai/followers",
      "following_url": "https://api.github.com/users/anthonyoliai/following{/other_user}",
      "gists_url": "https://api.github.com/users/anthonyoliai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anthonyoliai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anthonyoliai/subscriptions",
      "organizations_url": "https://api.github.com/users/anthonyoliai/orgs",
      "repos_url": "https://api.github.com/users/anthonyoliai/repos",
      "events_url": "https://api.github.com/users/anthonyoliai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anthonyoliai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-24T13:56:59Z",
    "updated_at": "2022-10-24T13:57:12Z",
    "author_association": "NONE",
    "body": "> I think the problem is that you have a very long sidechain where nothing happens, so when we import the long sidechain, but the state doesn't change, then we stop the chain import. This is only a concern in pow, in pos it can happen that multiple blocks don't update the state, so it might be okay to just import the blocks here? Would be good to talk a bit about this on triage\r\n\r\nFirst of all thanks @MariusVanDerWijden ! That does make sense, often the miners are not incorporating state changes as the txs come in bursts. Hence, a lot of empty blocks are imported. It could be for example that for 100 blocks there are no state changes.\r\n\r\nI'm not well versed with what you mean by sidechain in this context. Do you just refer to any other \"state\" coming from other peers other than the node itself? Just for clarification.\r\n\r\nLooking at my nodes I do see that they are perfectly in sync at the start, as in, e.g everytime a miner mines a new block it gets properly propagated and imported. So I assume somehow at some point, due to there not being any state changes for a longer period of time this error might occur. (So far it happens around 24 hours in). \r\n\r\nI'm just trying to understand exactly what is happening here. Looking at https://github.com/ethereum/go-ethereum/blob/067bac3f2409aec16994163e7a635d36bdb9b956/core/blockchain.go#L1851. \r\n\r\nI assume that if we have for example state **S**, which already exists on the canon chain, and we import a new state **N**; somehow **N** == **S** and hence the state already exists, so we can't just proceed to importing these blocks.\r\n\r\nI do have to mention though that I am running all these nodes on AWS, EKS, using proof of authority. They are running on seperate pods. Whenever I notice this \"ghost state attack issue\" I simply tear down the pod, hence, the container which runs the node is restarted, and the datadir is deleted. Doing so the node properly syncs back up, with the already running nodes.\r\n\r\nMy initial thought was to write a shell script which listens to \r\n\r\n`> eth.syncing.currentBlock\r\n22316\r\n> eth.syncing.highestBlock\r\n65604`\r\n\r\nand simply restarts if the absolute value between current and highest is very big.  However, I would like to prevent this, as scheduled txs might be lost.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1289077076/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1290794507",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26022#issuecomment-1290794507",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26022",
    "id": 1290794507,
    "node_id": "IC_kwDOAOvK985M7_YL",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-25T15:59:20Z",
    "updated_at": "2022-10-25T15:59:20Z",
    "author_association": "MEMBER",
    "body": "I have not yet found my old write-up, but I did find some shorter tldr;s about the issue\r\n\r\nSo, the TLDR; is, if we can \r\n- create a side chain, which is old enough so that the ancestor is pruned\r\n  - We get blocks `[B..Bn]` inserted into the database, with only header validation\r\n- Create a block `Bx`, which has the same stateroot as an existing state.   \r\n- And then Geth will switch out the canonical chain for the invalid sidechain, if it has higher TD, despite not having validated the `block` or `state` on the blocks.\r\n\r\n\r\nThe attack needs to \r\n- start on a fork-point far enough back that the `state` is pruned, and\r\n- be long enough to reach `head - 127`. \r\n- and, of course, continue along in order to have higher TD than the chain to overtake. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1290794507/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1291784848",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26022#issuecomment-1291784848",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26022",
    "id": 1291784848,
    "node_id": "IC_kwDOAOvK985M_xKQ",
    "user": {
      "login": "anthonyoliai",
      "id": 61785803,
      "node_id": "MDQ6VXNlcjYxNzg1ODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/61785803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anthonyoliai",
      "html_url": "https://github.com/anthonyoliai",
      "followers_url": "https://api.github.com/users/anthonyoliai/followers",
      "following_url": "https://api.github.com/users/anthonyoliai/following{/other_user}",
      "gists_url": "https://api.github.com/users/anthonyoliai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anthonyoliai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anthonyoliai/subscriptions",
      "organizations_url": "https://api.github.com/users/anthonyoliai/orgs",
      "repos_url": "https://api.github.com/users/anthonyoliai/repos",
      "events_url": "https://api.github.com/users/anthonyoliai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anthonyoliai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-26T09:53:03Z",
    "updated_at": "2022-10-26T09:53:03Z",
    "author_association": "NONE",
    "body": "> I have not yet found my old write-up, but I did find some shorter tldr;s about the issue\r\n> \r\n> So, the TLDR; is, if we can\r\n> \r\n> * create a side chain, which is old enough so that the ancestor is pruned\r\n>   \r\n>   * We get blocks `[B..Bn]` inserted into the database, with only header validation\r\n> * Create a block `Bx`, which has the same stateroot as an existing state.\r\n> * And then Geth will switch out the canonical chain for the invalid sidechain, if it has higher TD, despite not having validated the `block` or `state` on the blocks.\r\n> \r\n> The attack needs to\r\n> \r\n> * start on a fork-point far enough back that the `state` is pruned, and\r\n> * be long enough to reach `head - 127`.\r\n> * and, of course, continue along in order to have higher TD than the chain to overtake.\r\n\r\nThanks, and interesting, I think it's very odd then that this error is happening. To give some more context;\r\nAll geth nodes run on a seperate container. However, each container contains a geth image which was snapshotted. Meaning, that they have a carbon copy of the same data dir from initialization. (They are now individual dirs, but they were copied over). Thus, they all start at a specific a block. But after that, they stay in sync, and I don't see any nodes falling behind to the point that your second point is reached (head - 127). What do you mean with point 1? The fork point.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1291784848/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1298673116",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26022#issuecomment-1298673116",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26022",
    "id": 1298673116,
    "node_id": "IC_kwDOAOvK985NaC3c",
    "user": {
      "login": "anthonyoliai",
      "id": 61785803,
      "node_id": "MDQ6VXNlcjYxNzg1ODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/61785803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anthonyoliai",
      "html_url": "https://github.com/anthonyoliai",
      "followers_url": "https://api.github.com/users/anthonyoliai/followers",
      "following_url": "https://api.github.com/users/anthonyoliai/following{/other_user}",
      "gists_url": "https://api.github.com/users/anthonyoliai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anthonyoliai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anthonyoliai/subscriptions",
      "organizations_url": "https://api.github.com/users/anthonyoliai/orgs",
      "repos_url": "https://api.github.com/users/anthonyoliai/repos",
      "events_url": "https://api.github.com/users/anthonyoliai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anthonyoliai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-01T15:13:12Z",
    "updated_at": "2022-11-01T15:13:12Z",
    "author_association": "NONE",
    "body": "bump",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1298673116/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
