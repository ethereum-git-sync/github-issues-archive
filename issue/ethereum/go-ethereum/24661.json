{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24661",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24661/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24661/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24661/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/24661",
  "id": 1196307600,
  "node_id": "I_kwDOAOvK985HTjSQ",
  "number": 24661,
  "title": "Transactions with `maxFeePerGas` or `gasPrice` less than `baseFeePerGas` rejected only when `gas` is missing",
  "user": {
    "login": "MicaiahReid",
    "id": 17027138,
    "node_id": "MDQ6VXNlcjE3MDI3MTM4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17027138?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MicaiahReid",
    "html_url": "https://github.com/MicaiahReid",
    "followers_url": "https://api.github.com/users/MicaiahReid/followers",
    "following_url": "https://api.github.com/users/MicaiahReid/following{/other_user}",
    "gists_url": "https://api.github.com/users/MicaiahReid/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MicaiahReid/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MicaiahReid/subscriptions",
    "organizations_url": "https://api.github.com/users/MicaiahReid/orgs",
    "repos_url": "https://api.github.com/users/MicaiahReid/repos",
    "events_url": "https://api.github.com/users/MicaiahReid/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MicaiahReid/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    },
    {
      "id": 1132689577,
      "node_id": "MDU6TGFiZWwxMTMyNjg5NTc3",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:triage",
      "name": "status:triage",
      "color": "6be514",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2022-04-07T16:41:09Z",
  "updated_at": "2022-10-11T08:34:42Z",
  "closed_at": "2022-04-28T08:59:35Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Thanks for all the work you do! Hopefully this issue is clear.\r\n#### System information\r\n\r\nGeth version: `1.10.18-unstable`, also tested with `1.10.15-stable`\r\nOS & Version: Linux Ubuntu 20.04\r\nCommit hash : (if `develop`) `763b3f8d1f93b57795dd33b35e8b97ef9b9da99f`\r\n\r\n#### Expected behaviour\r\n\r\nWhen sending a transaction with  `maxFeePerGas` / `gasPrice`  < `baseFeePerGas` and omitting `gas`, error in a way that points to the problem of the missing `gas` field.\r\n\r\n_Or_ don't require a `gas` field to be specified in cases where `maxFeePerGas` or `gasPrice` are lower than `baseFeePerGas`.\r\n\r\n#### Actual behaviour\r\n\r\nSending a transaction with no `maxFeePerGas` / `gasPrice` and no `gas` field, the transaction is accepted.\r\n\r\nSending a transaction with `maxFeePerGas` / `gasPrice` < `baseFeePerGas` and no `gas` field, the transaction is rejected with an error suggesting that the effective gas price being lower than `baseFeePerGas` is the reason for the failure.\r\n\r\nSending a transaction with `maxFeePerGas` / `gasPrice` < `baseFeePerGas` and the `gas` field specified, the transaction is accepted.\r\n\r\n#### Steps to reproduce the behaviour\r\n```JavaScript\r\nconst [from, to] = eth.accounts;\r\n\r\n// fails with error below\r\neth.sendTransaction({from, to, gasPrice: \"0x1\"});\r\n// Error: err: max fee per gas less than block base fee: \r\n// address 0x9ccab4d0Af2363835bEdc09b66Ac9130635e63f7, maxFeePerGas: 1 baseFee: 765625000 (supplied gas 6004776)\r\n\r\n// tx successfully added to pending queue\r\neth.sendTransaction({from, to, gasPrice: \"0x1\", gas: 21000}); \r\n\r\n// fails with error below\r\neth.sendTransaction({from, to, maxFeePerGas: \"0x1\", maxPriorityFeePerGas: \"0x0\"});\r\n//Error: err: max fee per gas less than block base fee: \r\n// address 0x9ccab4d0Af2363835bEdc09b66Ac9130635e63f7, maxFeePerGas: 1 baseFee: 765625000 (supplied gas 6004776)\r\n\r\n// tx successfully added to pending queue\r\neth.sendTransaction({from, to, maxFeePerGas: \"0x1\", maxPriorityFeePerGas: \"0x0\", gas: 21000}); \r\n\r\n// tx successfully added to pending queue\r\neth.sendTransaction({from, to}); \r\n```",
  "closed_by": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24661/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24661/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1098844658",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24661#issuecomment-1098844658",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24661",
    "id": 1098844658,
    "node_id": "IC_kwDOAOvK985Bfwny",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-14T08:25:19Z",
    "updated_at": "2022-04-14T08:25:19Z",
    "author_association": "MEMBER",
    "body": "I kind of thins this works as expected, though maybe a bit unintuitive:\r\n\r\n- If you don't specify a gas limit for the transaction, it will be automatically estimated (since we can't just use an arbitrary amout; and erroring out would be bad UX). However, in order to estimate the gas, we need to actually execute the transaction, so the gas fields need to be valid in the context of the current block.\r\n- If you do specify a gas limit, then we can just blindly accept your transaction and store it locally.\r\n- If you don't supply eithee the gas price or gas limit, then first we pick a good gas price; and then having a good price we can correctly estimate. So that case will work.\r\n\r\nSo, all in all the question I think is whether we should reject a small gas price for all transactions or not. I think way back we did that, but then it may not allow you to deliberately send transactions with lower prices than current network climate. That would be bad too.\r\n\r\nTL;DR I kind of think it's correct the way it is.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1098844658/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1104223936",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24661#issuecomment-1104223936",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24661",
    "id": 1104223936,
    "node_id": "IC_kwDOAOvK985B0R7A",
    "user": {
      "login": "MicaiahReid",
      "id": 17027138,
      "node_id": "MDQ6VXNlcjE3MDI3MTM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17027138?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicaiahReid",
      "html_url": "https://github.com/MicaiahReid",
      "followers_url": "https://api.github.com/users/MicaiahReid/followers",
      "following_url": "https://api.github.com/users/MicaiahReid/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicaiahReid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicaiahReid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicaiahReid/subscriptions",
      "organizations_url": "https://api.github.com/users/MicaiahReid/orgs",
      "repos_url": "https://api.github.com/users/MicaiahReid/repos",
      "events_url": "https://api.github.com/users/MicaiahReid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicaiahReid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-20T17:34:26Z",
    "updated_at": "2022-04-20T17:34:26Z",
    "author_association": "NONE",
    "body": "@karalabe Thanks for the response.\r\n\r\n> However, in order to estimate the gas, we need to actually execute the transaction, so the gas fields need to be valid in the context of the current block.\r\n\r\nIf a user wants to estimate the gas usage of a transaction, why would the gas price need to be relevant? Wouldn't it be most intuitive to ignore gas prices for estimates of gas usage?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1104223936/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1111895571",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24661#issuecomment-1111895571",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24661",
    "id": 1111895571,
    "node_id": "IC_kwDOAOvK985CRi4T",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-28T08:26:53Z",
    "updated_at": "2022-04-28T08:26:53Z",
    "author_association": "MEMBER",
    "body": "@MicaiahReid GasPrice can be used to check if the sender has enough funds to cover the cost.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1111895571/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1111919411",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24661#issuecomment-1111919411",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24661",
    "id": 1111919411,
    "node_id": "IC_kwDOAOvK985CRosz",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-28T08:50:51Z",
    "updated_at": "2022-04-28T08:50:51Z",
    "author_association": "MEMBER",
    "body": "> why would the gas price need to be relevant? Wouldn't it be most intuitive to ignore gas prices for estimates of gas usage?\r\n\r\nYou're kind of right, intuitively. However, if we want to simulate a transaction in a block, the gasPrice is relevant, because it's \"visible\" on-chain, and it also affects the balance which is also visible on-chain, and also needs to be correct related to the basefee. \r\n\r\nSo it's not _directly_ relevant, but it still needs to be set correctly even for estimation purposes.  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1111919411/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1111934036",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24661#issuecomment-1111934036",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24661",
    "id": 1111934036,
    "node_id": "IC_kwDOAOvK985CRsRU",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-28T08:57:39Z",
    "updated_at": "2022-04-28T08:59:06Z",
    "author_association": "MEMBER",
    "body": "It's interesting that we do allow a tx which can never ever be included in a block: \r\n```\r\n> eth.sendTransaction({from, to, maxFeePerGas: \"0x1\", maxPriorityFeePerGas: \"0x0\", gas: 21000});\r\nINFO [04-28|10:56:18.604] Setting new local account                address=0x1309c1ece82D0433EecB3a35DE2772aa0C11Ca33\r\nINFO [04-28|10:56:18.604] Submitted transaction                    hash=0x6ded9c3b9c4c32463f35304d0ee9a8fddc30f2c0859caff51dc14f4ce27a2efc from=0x1309c1ece82D0433EecB3a35DE2772aa0C11Ca33 nonce=0 recipient=0x1309c1ece82D0433EecB3a35DE2772aa0C11Ca33 value=0\r\n\"0x6ded9c3b9c4c32463f35304d0ee9a8fddc30f2c0859caff51dc14f4ce27a2efc\"\r\n> INFO [04-28|10:56:18.607] Commit new sealing work                  number=1 sealhash=3bcfb9..245d81 uncles=0 txs=0 gas=0 fees=0 elapsed=\"309.082µs\"\r\nWARN [04-28|10:56:18.607] Block sealing failed                     err=\"sealing paused while waiting for transactions\"\r\n\r\n> txpool\r\n{\r\n  content: {\r\n    pending: {\r\n      0x1309c1ece82D0433EecB3a35DE2772aa0C11Ca33: {\r\n        0: {...}\r\n      }\r\n    },\r\n    queued: {}\r\n  },\r\n  inspect: {\r\n    pending: {\r\n      0x1309c1ece82D0433EecB3a35DE2772aa0C11Ca33: {\r\n        0: \"0x1309c1ece82D0433EecB3a35DE2772aa0C11Ca33: 0 wei + 21000 gas × 1 wei\"\r\n      }\r\n    },\r\n    queued: {}\r\n  },\r\n  status: {\r\n    pending: 1,\r\n    queued: 0\r\n  },\r\n  contentFrom: function(),\r\n  getContent: function(callback),\r\n  getInspect: function(callback),\r\n  getStatus: function(callback)\r\n\r\n```\r\nI guess we allow `local` transactions even when their gas price is below the theoretical lowest base price per gas (which is `7` iirc)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1111934036/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1111938069",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24661#issuecomment-1111938069",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24661",
    "id": 1111938069,
    "node_id": "IC_kwDOAOvK985CRtQV",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-28T08:59:32Z",
    "updated_at": "2022-04-28T08:59:32Z",
    "author_association": "MEMBER",
    "body": "While we agree this issue is unfortunate, it's a consequence of how transactions are handled:\r\n\r\n- When `gas` is not specified, we need to estimate the gas by EXECUTING the tx. A transaction with maxFeePerGas < baseFeePerGas cannot be executed, and produces the error `max fee per gas less than block base fee`.\r\n- When `gas` is specified, we DO NOT EXECUTE the transaction, and thus the baseFee issue is not noticed. It could be argued that this is correct because the baseFee can still change and could work when the tx will be included.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1111938069/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1112649017",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24661#issuecomment-1112649017",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24661",
    "id": 1112649017,
    "node_id": "IC_kwDOAOvK985CUa05",
    "user": {
      "login": "MicaiahReid",
      "id": 17027138,
      "node_id": "MDQ6VXNlcjE3MDI3MTM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17027138?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicaiahReid",
      "html_url": "https://github.com/MicaiahReid",
      "followers_url": "https://api.github.com/users/MicaiahReid/followers",
      "following_url": "https://api.github.com/users/MicaiahReid/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicaiahReid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicaiahReid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicaiahReid/subscriptions",
      "organizations_url": "https://api.github.com/users/MicaiahReid/orgs",
      "repos_url": "https://api.github.com/users/MicaiahReid/repos",
      "events_url": "https://api.github.com/users/MicaiahReid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicaiahReid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-28T20:59:06Z",
    "updated_at": "2022-04-28T20:59:06Z",
    "author_association": "NONE",
    "body": "@fjl Yes, I understand that when `gas` is not specified it needs to be estimated by executing the transaction. In Ganache we execute this transaction against a \"fake\" block with `baseFeePerGas=0` so that the `gas` can be estimated regardless of what block it will be on. This allows us to behave consistently in what fields are required.\r\n\r\nThe block the transaction will eventually be included in will rarely be the same block that is used to estimate the transaction's `gas`, so why should that block be used to enforce a gas price?\r\n\r\n> When gas is specified, we DO NOT EXECUTE the transaction, and thus the baseFee issue is not noticed. It could be argued that this is correct because the baseFee can still change and could work when the tx will be included.\r\n\r\nEven when `gas` isn't specified, the baseFee can change and could work when the transaction will be included. This is why I think it would make more sense to run the gas estimate against a block with the price disregarded.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1112649017/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1170494980",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24661#issuecomment-1170494980",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24661",
    "id": 1170494980,
    "node_id": "IC_kwDOAOvK985FxFYE",
    "user": {
      "login": "RippleLeaf",
      "id": 20673503,
      "node_id": "MDQ6VXNlcjIwNjczNTAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/20673503?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RippleLeaf",
      "html_url": "https://github.com/RippleLeaf",
      "followers_url": "https://api.github.com/users/RippleLeaf/followers",
      "following_url": "https://api.github.com/users/RippleLeaf/following{/other_user}",
      "gists_url": "https://api.github.com/users/RippleLeaf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RippleLeaf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RippleLeaf/subscriptions",
      "organizations_url": "https://api.github.com/users/RippleLeaf/orgs",
      "repos_url": "https://api.github.com/users/RippleLeaf/repos",
      "events_url": "https://api.github.com/users/RippleLeaf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RippleLeaf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-29T21:08:36Z",
    "updated_at": "2022-06-29T21:08:36Z",
    "author_association": "NONE",
    "body": "> @fjl Yes, I understand that when `gas` is not specified it needs to be estimated by executing the transaction. In Ganache we execute this transaction against a \"fake\" block with `baseFeePerGas=0` so that the `gas` can be estimated regardless of what block it will be on. This allows us to behave consistently in what fields are required.\r\n> \r\n\r\nHi MicaiahReid, this is kind off the topic but may I know how to set baseFeePerGas=0? I tried setting it in `truffle-config.js` but it does not work, and I couldn't find any online document about how to set it. Thank you very much!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1170494980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1172407425",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24661#issuecomment-1172407425",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24661",
    "id": 1172407425,
    "node_id": "IC_kwDOAOvK985F4YSB",
    "user": {
      "login": "MicaiahReid",
      "id": 17027138,
      "node_id": "MDQ6VXNlcjE3MDI3MTM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17027138?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicaiahReid",
      "html_url": "https://github.com/MicaiahReid",
      "followers_url": "https://api.github.com/users/MicaiahReid/followers",
      "following_url": "https://api.github.com/users/MicaiahReid/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicaiahReid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicaiahReid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicaiahReid/subscriptions",
      "organizations_url": "https://api.github.com/users/MicaiahReid/orgs",
      "repos_url": "https://api.github.com/users/MicaiahReid/repos",
      "events_url": "https://api.github.com/users/MicaiahReid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicaiahReid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-01T14:26:14Z",
    "updated_at": "2022-07-01T14:26:14Z",
    "author_association": "NONE",
    "body": "@RippleLeaf I think it may be more appropriate to [open up a discussion question](https://github.com/orgs/trufflesuite/discussions/new) over at Truffle so I can help you with that :smile: ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1172407425/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1247185815",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24661#issuecomment-1247185815",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24661",
    "id": 1247185815,
    "node_id": "IC_kwDOAOvK985KVouX",
    "user": {
      "login": "staminna",
      "id": 515180,
      "node_id": "MDQ6VXNlcjUxNTE4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/515180?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/staminna",
      "html_url": "https://github.com/staminna",
      "followers_url": "https://api.github.com/users/staminna/followers",
      "following_url": "https://api.github.com/users/staminna/following{/other_user}",
      "gists_url": "https://api.github.com/users/staminna/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/staminna/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/staminna/subscriptions",
      "organizations_url": "https://api.github.com/users/staminna/orgs",
      "repos_url": "https://api.github.com/users/staminna/repos",
      "events_url": "https://api.github.com/users/staminna/events{/privacy}",
      "received_events_url": "https://api.github.com/users/staminna/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-14T19:03:51Z",
    "updated_at": "2022-09-14T19:04:03Z",
    "author_association": "NONE",
    "body": "@RippleLeaf Did you manage to open a ticket over at Truffle as MicaiahRedi suggested? \r\nThanks I must followup aswell",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1247185815/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1248367017",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24661#issuecomment-1248367017",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24661",
    "id": 1248367017,
    "node_id": "IC_kwDOAOvK985KaJGp",
    "user": {
      "login": "RippleLeaf",
      "id": 20673503,
      "node_id": "MDQ6VXNlcjIwNjczNTAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/20673503?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RippleLeaf",
      "html_url": "https://github.com/RippleLeaf",
      "followers_url": "https://api.github.com/users/RippleLeaf/followers",
      "following_url": "https://api.github.com/users/RippleLeaf/following{/other_user}",
      "gists_url": "https://api.github.com/users/RippleLeaf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RippleLeaf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RippleLeaf/subscriptions",
      "organizations_url": "https://api.github.com/users/RippleLeaf/orgs",
      "repos_url": "https://api.github.com/users/RippleLeaf/repos",
      "events_url": "https://api.github.com/users/RippleLeaf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RippleLeaf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-15T16:56:04Z",
    "updated_at": "2022-09-15T16:56:04Z",
    "author_association": "NONE",
    "body": "> @RippleLeaf Did you manage to open a ticket over at Truffle as MicaiahRedi suggested? Thanks I must followup aswell\r\n\r\nHi @staminna, yes I opened a discussion thread [here](https://github.com/trufflesuite/truffle/discussions/5265). Hope this would be helpful!\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1248367017/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1274311281",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24661#issuecomment-1274311281",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24661",
    "id": 1274311281,
    "node_id": "IC_kwDOAOvK985L9HJx",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-11T08:34:42Z",
    "updated_at": "2022-10-11T08:34:42Z",
    "author_association": "MEMBER",
    "body": "Also the gas price and base fee are available in the EVM so different\nvalues can result in different executions.\n\nOn Thu, Apr 28, 2022, 10:27 rjl493456442 ***@***.***> wrote:\n\n> @MicaiahReid <https://github.com/MicaiahReid> GasPrice can be used to\n> check if the sender has enough funds to cover the cost.\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ethereum/go-ethereum/issues/24661#issuecomment-1111895571>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAA7UGPSBEM3LE7TL2CEBSLVHJDVRANCNFSM5SZ647KQ>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> ***@***.***>\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1274311281/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
