{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19446",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19446/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19446/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19446/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/19446",
  "id": 431935288,
  "node_id": "MDU6SXNzdWU0MzE5MzUyODg=",
  "number": 19446,
  "title": "eth/downloader: TestDeliverHeadersHang fails with probability",
  "user": {
    "login": "SheldonZhong",
    "id": 12372003,
    "node_id": "MDQ6VXNlcjEyMzcyMDAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/12372003?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/SheldonZhong",
    "html_url": "https://github.com/SheldonZhong",
    "followers_url": "https://api.github.com/users/SheldonZhong/followers",
    "following_url": "https://api.github.com/users/SheldonZhong/following{/other_user}",
    "gists_url": "https://api.github.com/users/SheldonZhong/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/SheldonZhong/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/SheldonZhong/subscriptions",
    "organizations_url": "https://api.github.com/users/SheldonZhong/orgs",
    "repos_url": "https://api.github.com/users/SheldonZhong/repos",
    "events_url": "https://api.github.com/users/SheldonZhong/events{/privacy}",
    "received_events_url": "https://api.github.com/users/SheldonZhong/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 856638432,
      "node_id": "MDU6TGFiZWw4NTY2Mzg0MzI=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/status:inactive",
      "name": "status:inactive",
      "color": "ffffff",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-04-11T09:58:38Z",
  "updated_at": "2020-06-14T20:42:42Z",
  "closed_at": "2020-06-14T20:42:42Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "When I go through the code \r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/74acde4b08b0751ef716f8be04c1c41b2a6d6b69/eth/downloader/downloader_test.go#L1416-L1421\r\n\r\nI found it should be written as \r\n\r\n```go\r\nfor _, tc := range testCases { \r\n \ttc := tc\r\n \tt.Run(fmt.Sprintf(\"protocol %d mode %v\", tc.protocol, tc.syncMode), func(t *testing.T) { \r\n \t\tt.Parallel() \r\n \t\ttestDeliverHeadersHang(t, tc.protocol, tc.syncMode) \r\n \t}) \r\n } \r\n```\r\nto use closure for the `tc` variable.\r\n\r\nIf not, the test case will always be `{protocol 64, SyncMode LightSync}`, which is always fine. Since it will never be included in `fetchers` in\r\nhttps://github.com/ethereum/go-ethereum/blob/74acde4b08b0751ef716f8be04c1c41b2a6d6b69/eth/downloader/downloader.go#L477-L482\r\n\r\nWhen we correct the `tc` closure, the test will fail with probability. Something around one error for every 5 runs.\r\n```\r\n=== RUN   TestDeliverHeadersHang\r\n=== PAUSE TestDeliverHeadersHang\r\n=== CONT  TestDeliverHeadersHang\r\n--- FAIL: TestDeliverHeadersHang (0.00s)\r\n=== RUN   TestDeliverHeadersHang/protocol_62_mode_full\r\n=== PAUSE TestDeliverHeadersHang/protocol_62_mode_full\r\n=== CONT  TestDeliverHeadersHang/protocol_62_mode_full\r\n    --- PASS: TestDeliverHeadersHang/protocol_62_mode_full (5.41s)\r\n=== RUN   TestDeliverHeadersHang/protocol_63_mode_full\r\n=== PAUSE TestDeliverHeadersHang/protocol_63_mode_full\r\n=== CONT  TestDeliverHeadersHang/protocol_63_mode_full\r\n    --- PASS: TestDeliverHeadersHang/protocol_63_mode_full (5.29s)\r\n=== RUN   TestDeliverHeadersHang/protocol_63_mode_fast\r\n=== PAUSE TestDeliverHeadersHang/protocol_63_mode_fast\r\n=== CONT  TestDeliverHeadersHang/protocol_63_mode_fast\r\n    --- PASS: TestDeliverHeadersHang/protocol_63_mode_fast (5.45s)\r\n=== RUN   TestDeliverHeadersHang/protocol_64_mode_full\r\n=== PAUSE TestDeliverHeadersHang/protocol_64_mode_full\r\n=== CONT  TestDeliverHeadersHang/protocol_64_mode_full\r\n    --- PASS: TestDeliverHeadersHang/protocol_64_mode_full (5.42s)\r\n=== RUN   TestDeliverHeadersHang/protocol_64_mode_fast\r\n=== PAUSE TestDeliverHeadersHang/protocol_64_mode_fast\r\n=== CONT  TestDeliverHeadersHang/protocol_64_mode_fast\r\n    --- FAIL: TestDeliverHeadersHang/protocol_64_mode_fast (5.40s)\r\n    \tdownloader_test.go:1442: test 111: sync failed: state data download canceled (requested)\r\n=== RUN   TestDeliverHeadersHang/protocol_64_mode_light\r\n=== PAUSE TestDeliverHeadersHang/protocol_64_mode_light\r\n=== CONT  TestDeliverHeadersHang/protocol_64_mode_light\r\n    --- PASS: TestDeliverHeadersHang/protocol_64_mode_light (5.42s)\r\nFAIL\r\n\r\nProcess finished with exit code 1\r\n```\r\nOutput in command line:\r\n```\r\n>> go test -run TestDeliverHeadersHang\r\n--- FAIL: TestDeliverHeadersHang (0.00s)\r\n    --- FAIL: TestDeliverHeadersHang/protocol_63_mode_fast (5.36s)\r\n    \tdownloader_test.go:1442: test 125: sync failed: state data download canceled (requested)\r\nFAIL\r\nexit status 1\r\nFAIL\tgithub.com/ethereum/go-ethereum/eth/downloader\t6.577s\r\n```\r\n\r\nThe probability gets higher when more peers are included in the test. Modify\r\nhttps://github.com/ethereum/go-ethereum/blob/74acde4b08b0751ef716f8be04c1c41b2a6d6b69/eth/downloader/downloader_test.go#L1429\r\nto some bigger number. \r\n\r\nI tried to trace the source of error, and I found all the fails come from\r\nhttps://github.com/ethereum/go-ethereum/blob/74acde4b08b0751ef716f8be04c1c41b2a6d6b69/eth/downloader/downloader.go#L1535-L1538\r\n\r\nthe `stateSync.Cancel()` statement. \r\n\r\nIt happens because the `stateSync.Cancel()` was invoked before `sched` in `stateSync` commits all its pending trie sync.\r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/74acde4b08b0751ef716f8be04c1c41b2a6d6b69/eth/downloader/statesync.go#L290-L304\r\n\r\nAlso, by the code in \r\nhttps://github.com/ethereum/go-ethereum/blob/74acde4b08b0751ef716f8be04c1c41b2a6d6b69/eth/downloader/downloader.go#L1579-L1587\r\n\r\nshows the fails were caused by calling `stateSync.Cancel()` after `stateSynce` signals `done` to the downloader.\r\n\r\nI've tried to fix it but I can't. So I put the information here hope it might be helpful for the people who is going to fix this issue.\r\n\r\nBy the way, the code here\r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/74acde4b08b0751ef716f8be04c1c41b2a6d6b69/eth/downloader/downloader_test.go#L1424-L1432\r\n\r\ncould actually be simplified to \r\n```go\r\nfunc testDeliverHeadersHang(t *testing.T, protocol int, mode SyncMode) {\r\n\tchain := testChainBase.shorten(15)\r\n\r\n\tfor i := 0; i < 200; i++ {\r\n\t\ttester := newTester()\r\n\t\ttester.newPeer(\"peer\", protocol, chain)\r\n```\r\n\r\nMaybe someone could append this modification in the future PR.\r\n\r\n\r\n\r\n",
  "closed_by": {
    "login": "stale[bot]",
    "id": 26384082,
    "node_id": "MDM6Qm90MjYzODQwODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stale%5Bbot%5D",
    "html_url": "https://github.com/apps/stale",
    "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19446/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19446/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/623171077",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/19446#issuecomment-623171077",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/19446",
    "id": 623171077,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzE3MTA3Nw==",
    "user": {
      "login": "stale[bot]",
      "id": 26384082,
      "node_id": "MDM6Qm90MjYzODQwODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stale%5Bbot%5D",
      "html_url": "https://github.com/apps/stale",
      "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2020-05-03T19:54:26Z",
    "updated_at": "2020-05-03T19:54:26Z",
    "author_association": "NONE",
    "body": "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/623171077/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
