{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/26483",
  "id": 1530324420,
  "node_id": "I_kwDOAOvK985bNuXE",
  "number": 26483,
  "title": "Gap in chain (investigation)",
  "user": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 17,
  "created_at": "2023-01-12T08:47:22Z",
  "updated_at": "2023-04-20T10:04:37Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "```\r\nStopping Go Ethereum Client...\r\nINFO [01-11|09:23:52.203] Got interrupt, shutting down...\r\nINFO [01-11|09:23:52.207] HTTP server stopped                      endpoint=100.98.99.93:8545\r\nINFO [01-11|09:23:52.207] HTTP server stopped                      endpoint=127.0.0.1:8551\r\nINFO [01-11|09:23:52.208] IPC endpoint closed                      url=/var/lib/goethereum/geth.ipc\r\nINFO [01-11|09:23:52.215] Ethereum protocol stopped\r\nINFO [01-11|09:23:52.215] Transaction pool stopped\r\nINFO [01-11|09:23:52.282] Writing cached state to disk             block=16,380,262 hash=45dd8d..d179f5 root=64bc16..3fab91\r\nWARN [01-11|09:24:00.887] Snapshot extension registration failed   peer=59d2a329 err=\"peer connected on snap without compatible eth support\"\r\nINFO [01-11|09:24:02.227] Looking for peers                        peercount=0  tried=138 static=0\r\nINFO [01-11|09:24:12.282] Looking for peers                        peercount=1  tried=93  static=0\r\nWARN [01-11|09:24:20.847] Previously seen beacon client is offline. Please ensure it is operational to follow the chain!\r\nINFO [01-11|09:24:22.026] Persisted trie from memory database      nodes=21,477,115 size=4.95GiB time=2m45.93433664s  gcnodes=71,174,970 gcsize=27.90GiB gctime=4m34.927021369s livenodes=372,921 livesize=145.41MiB\r\nINFO [01-11|09:24:22.026] Writing cached state to disk             block=16,380,261 hash=90594b..fcfa5e root=d3b906..60e10b\r\nINFO [01-11|09:24:22.037] Persisted trie from memory database      nodes=2372       size=950.64KiB time=11.415431ms     gcnodes=0          gcsize=0.00B    gctime=0s              livenodes=370,549 livesize=144.49MiB\r\nINFO [01-11|09:24:22.037] Writing cached state to disk             block=16,380,135 hash=97e6c5..376b07 root=a2d708..b5bc31\r\nINFO [01-11|09:24:22.298] Looking for peers                        peercount=0  tried=100 static=0\r\nINFO [01-11|09:24:22.990] Persisted trie from memory database      nodes=128,837    size=47.27MiB  time=952.676588ms    gcnodes=0          gcsize=0.00B    gctime=0s              livenodes=241,712 livesize=97.22MiB\r\nINFO [01-11|09:24:22.990] Writing snapshot state to disk           root=ef8ca2..73e4dc\r\nINFO [01-11|09:24:22.990] Persisted trie from memory database      nodes=0          size=0.00B     time=\"4.429Âµs\"       gcnodes=0          gcsize=0.00B    gctime=0s              livenodes=241,712 livesize=97.22MiB\r\nERROR[01-11|09:24:23.615] Dangling trie nodes after full cleanup\r\nINFO [01-11|09:24:23.615] Writing clean trie cache to disk         path=/var/lib/goethereum/geth/triecache threads=8\r\nINFO [01-11|09:24:24.272] Persisted the clean trie cache           path=/var/lib/goethereum/geth/triecache elapsed=656.799ms\r\nINFO [01-11|09:24:24.272] Blockchain stopped\r\ngeth.service: Deactivated successfully.\r\nStopped Go Ethereum Client.\r\ngeth.service: Consumed 1d 10h 57min 51.015s CPU time.\r\n-- Boot 1c02008566004ee6a89e3b36b0ff4cc9 --\r\nStarted Go Ethereum Client.\r\nINFO [01-11|10:56:45.251] Starting pprof server                    addr=http://127.0.0.1:6070/debug/pprof\r\nINFO [01-11|10:56:45.259] Starting Geth on Ethereum mainnet...\r\nINFO [01-11|10:56:45.262] Maximum peer count                       ETH=25 LES=0 total=25\r\nINFO [01-11|10:56:45.264] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\r\nINFO [01-11|10:56:45.272] Set global gas cap                       cap=50,000,000\r\nINFO [01-11|10:56:45.275] Allocated trie memory caches             clean=900.00MiB dirty=1.46GiB\r\nINFO [01-11|10:56:45.276] Allocated cache and file handles         database=/var/lib/goethereum/geth/chaindata cache=2.93GiB handles=262,144\r\nINFO [01-11|10:56:59.075] Found legacy ancient chain path          location=/media/seassd/ancient\r\nWARN [01-11|10:56:59.140] Truncating dangling indexes              database=/media/seassd/ancient              table=bodies indexed=596.20MiB stored=596.05MiB\r\nWARN [01-11|10:56:59.140] Truncating dangling indexes              database=/media/seassd/ancient              table=bodies indexed=596.14MiB stored=596.05MiB\r\nWARN [01-11|10:56:59.140] Truncating dangling indexes              database=/media/seassd/ancient              table=bodies indexed=596.14MiB stored=596.05MiB\r\nWARN [01-11|10:56:59.140] Truncating dangling indexes              database=/media/seassd/ancient              table=bodies indexed=596.10MiB stored=596.05MiB\r\nWARN [01-11|10:56:59.140] Truncating dangling head                 database=/media/seassd/ancient              table=bodies indexed=596.05MiB stored=596.05MiB\r\nWARN [01-11|10:56:59.190] Truncating dangling indexes              database=/media/seassd/ancient              table=receipts indexed=1.71GiB   stored=1.71GiB\r\nWARN [01-11|10:56:59.190] Truncating dangling indexes              database=/media/seassd/ancient              table=receipts indexed=1.71GiB   stored=1.71GiB\r\nWARN [01-11|10:56:59.190] Truncating dangling indexes              database=/media/seassd/ancient              table=receipts indexed=1.71GiB   stored=1.71GiB\r\nWARN [01-11|10:56:59.190] Truncating dangling indexes              database=/media/seassd/ancient              table=receipts indexed=1.71GiB   stored=1.71GiB\r\nWARN [01-11|10:56:59.190] Truncating dangling indexes              database=/media/seassd/ancient              table=receipts indexed=1.71GiB   stored=1.71GiB\r\nWARN [01-11|10:56:59.190] Truncating dangling head                 database=/media/seassd/ancient              table=receipts indexed=1.71GiB   stored=1.71GiB\r\nWARN [01-11|10:56:59.227] Truncating freezer table                 database=/media/seassd/ancient              table=diffs    items=16,289,887 limit=16,289,882\r\nWARN [01-11|10:56:59.228] Truncating freezer table                 database=/media/seassd/ancient              table=headers  items=16,289,887 limit=16,289,882\r\nWARN [01-11|10:56:59.229] Truncating freezer table                 database=/media/seassd/ancient              table=hashes   items=16,289,887 limit=16,289,882\r\nINFO [01-11|10:56:59.229] Opened ancient database                  database=/media/seassd/ancient              readonly=false\r\nFatal: Failed to register the Ethereum service: gap in the chain between ancients (#16289882) and leveldb (#16380262)\r\n```\r\n\r\nShutdown\r\n- Writes cached state for `16,380,262`, `16,380,261` and `16,380,135`\r\n- Which means that `16,380,262` is the most recent state. \r\n\r\nStartup:\r\n - `Truncating freezer table` only trimmed away 5 items: `items=16,289,887 limit=16,289,882`\r\n - gap in the chain\r\n   - between ancients (#16289882) and leveldb (#16380262)\r\n   - ancients is at `16,289,882`, as expected after the trim. \r\n   - leveldb is at `16380262`, the difference here is `90380`. \r\n   - But the number we're comparing against `16380262` -- that is the HEAD. Why are \r\n     we expecting the HEAD to link up with the ancients? Answer: we're not, normally, that's just a special-case when we do the insert-directly-to-ancients during sync.  In normal case, if we wound up here, there's already a confirmed gap. \r\n\r\nRelevant code\r\n\r\n```golang\r\n  \t// If the genesis hash is empty, we have a new key-value store, so nothing to\r\n\t// validate in this method. If, however, the genesis hash is not nil, compare\r\n\t// it to the freezer content.\r\n\tif kvgenesis, _ := db.Get(headerHashKey(0)); len(kvgenesis) > 0 {\r\n\t\tif frozen, _ := frdb.Ancients(); frozen > 0 {\r\n\t\t\t// If the freezer already contains something, ensure that the genesis blocks\r\n\t\t\t// match, otherwise we might mix up freezers across chains and destroy both\r\n\t\t\t// the freezer and the key-value store.\r\n\t\t\tfrgenesis, err := frdb.Ancient(chainFreezerHashTable, 0)\r\n\t\t\tif err != nil {\r\n\t\t\t\treturn nil, fmt.Errorf(\"failed to retrieve genesis from ancient %v\", err)\r\n\t\t\t} else if !bytes.Equal(kvgenesis, frgenesis) {\r\n\t\t\t\treturn nil, fmt.Errorf(\"genesis mismatch: %#x (leveldb) != %#x (ancients)\", kvgenesis, frgenesis)\r\n\t\t\t}\r\n\t\t\t// Key-value store and freezer belong to the same network. Ensure that they\r\n\t\t\t// are contiguous, otherwise we might end up with a non-functional freezer.\r\n\t\t\tif kvhash, _ := db.Get(headerHashKey(frozen)); len(kvhash) == 0 {\r\n\t\t\t\t// Subsequent header after the freezer limit is missing from the database.\r\n\t\t\t\t// Reject startup if the database has a more recent head.\r\n\t\t\t\tif ldbNum := *ReadHeaderNumber(db, ReadHeadHeaderHash(db)); ldbNum > frozen-1 {\r\n\t\t\t\t\treturn nil, fmt.Errorf(\"gap in the chain between ancients (#%d) and leveldb (#%d) \", frozen, ldbNum)\r\n\t\t\t\t}\r\n\t\t\t\t// Database contains only older data than the freezer, this happens if the\r\n\t\t\t\t// state was wiped and reinited from an existing freezer.\r\n\t\t\t}\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1379998672",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26483#issuecomment-1379998672",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
    "id": 1379998672,
    "node_id": "IC_kwDOAOvK985SQRvQ",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T08:54:58Z",
    "updated_at": "2023-01-12T08:54:58Z",
    "author_association": "MEMBER",
    "body": "Ah, I get it. \r\n\r\n1. So, we moved `0-16,289,887` into ancients. \r\n2. For unknown reasons, there ancients are slighly corrupt, and we trim away five things, landing at `0-16,289,882`\r\n3. Which means that `16,289,887`,`16,289,886`,`16,289,885`,`16,289,884`,`16,289,883` are simply missing, since it's in neither ancients nor leveldb.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1379998672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1380123984",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26483#issuecomment-1380123984",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
    "id": 1380123984,
    "node_id": "IC_kwDOAOvK985SQwVQ",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T10:32:14Z",
    "updated_at": "2023-01-12T10:32:14Z",
    "author_association": "MEMBER",
    "body": "`table=bodies indexed=596.20MiB stored=596.05MiB` --- this indicates that for `bodies`, we were expecting more than we saw. So we had indexed `M` items, but found less than `M` bodies. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1380123984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1380133350",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26483#issuecomment-1380133350",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
    "id": 1380133350,
    "node_id": "IC_kwDOAOvK985SQynm",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T10:40:19Z",
    "updated_at": "2023-01-12T10:40:19Z",
    "author_association": "MEMBER",
    "body": "I wonder what the filesystem is on `/media/seassd/ancient`  cc @MariusVanDerWijden ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1380133350/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1380423247",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26483#issuecomment-1380423247",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
    "id": 1380423247,
    "node_id": "IC_kwDOAOvK985SR5ZP",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T14:19:10Z",
    "updated_at": "2023-01-12T14:19:10Z",
    "author_association": "MEMBER",
    "body": "BTW,\r\n \t\t\t\t\t\r\n```\r\nreturn nil, fmt.Errorf(\"gap in the chain between ancients (#%d) and leveldb (#%d) \", frozen, ldbNum)\r\n```\r\nIt's ambiguous to me. It feels like we miss 90k data, but actually not. Although it's very hard to know what's the oldest one in kv store.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1380423247/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1380425305",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26483#issuecomment-1380425305",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
    "id": 1380425305,
    "node_id": "IC_kwDOAOvK985SR55Z",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T14:20:45Z",
    "updated_at": "2023-01-12T14:27:16Z",
    "author_association": "MEMBER",
    "body": "```\r\nWARN [01-11|10:56:59.140] Truncating dangling indexes              database=/media/seassd/ancient              table=bodies indexed=596.20MiB stored=596.05MiB\r\nWARN [01-11|10:56:59.140] Truncating dangling indexes              database=/media/seassd/ancient              table=bodies indexed=596.14MiB stored=596.05MiB\r\nWARN [01-11|10:56:59.140] Truncating dangling indexes              database=/media/seassd/ancient              table=bodies indexed=596.14MiB stored=596.05MiB\r\nWARN [01-11|10:56:59.140] Truncating dangling indexes              database=/media/seassd/ancient              table=bodies indexed=596.10MiB stored=596.05MiB\r\nWARN [01-11|10:56:59.140] Truncating dangling head                 database=/media/seassd/ancient              table=bodies indexed=596.05MiB stored=596.05MiB\r\n```\r\n\r\nIt's interesting. Usually we truncate the higher one by deleting items one by one.\r\nBut log shows that we delete items from index file first, then somehow truncate\r\ndata file as well. Finally these two are aligned.\r\n\r\nHonestly it's pretty weird, looks like data file misses some bodies and a partial body.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1380425305/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1380997794",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26483#issuecomment-1380997794",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
    "id": 1380997794,
    "node_id": "IC_kwDOAOvK985SUFqi",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T21:10:58Z",
    "updated_at": "2023-01-12T21:13:12Z",
    "author_association": "MEMBER",
    "body": "Main issue where people have reported these cases: https://github.com/ethereum/go-ethereum/issues/22374\r\n\r\nThere, I asked a while ago whether `Truncating dangling xxx` log message was printed, but nobody replied. Good to see we finally have a log where it was actually printed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1380997794/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1381498620",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26483#issuecomment-1381498620",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
    "id": 1381498620,
    "node_id": "IC_kwDOAOvK985SV_78",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-13T08:56:20Z",
    "updated_at": "2023-01-13T08:56:20Z",
    "author_association": "MEMBER",
    "body": "```\r\nTruncating dangling indexes              database=/media/seassd/ancient              table=bodies indexed=596.20MiB stored=596.05MiB\r\nTruncating dangling indexes              database=/media/seassd/ancient              table=bodies indexed=596.14MiB stored=596.05MiB\r\nTruncating dangling indexes              database=/media/seassd/ancient              table=bodies indexed=596.14MiB stored=596.05MiB\r\nTruncating dangling indexes              database=/media/seassd/ancient              table=bodies indexed=596.10MiB stored=596.05MiB\r\nTruncating dangling head                 database=/media/seassd/ancient              table=bodies indexed=596.05MiB stored=596.05MiB\r\n```\r\nThis tells us the following:\r\n- The corruption was _not_ on the border of two data-files, since they grow up to 2GB. The data-file was size `596MiB`. \r\n- As @rjl493456442 already pointed out, about `3.5`, or three and a bit more, bodies were \"lost\". It would be interesting to know the exact size of the \"lost chunk of data\", but unfortunately the pretty-printing ruined that. It's around `0.15MiB` that was dropped from `bodies.cdat`.\r\n- In total, it appears that `4` items were trimmed away. \r\n\r\n```\r\nTruncating dangling indexes              database=/media/seassd/ancient              table=receipts indexed=1.71GiB   stored=1.71GiB\r\nTruncating dangling indexes              database=/media/seassd/ancient              table=receipts indexed=1.71GiB   stored=1.71GiB\r\nTruncating dangling indexes              database=/media/seassd/ancient              table=receipts indexed=1.71GiB   stored=1.71GiB\r\nTruncating dangling indexes              database=/media/seassd/ancient              table=receipts indexed=1.71GiB   stored=1.71GiB\r\nTruncating dangling indexes              database=/media/seassd/ancient              table=receipts indexed=1.71GiB   stored=1.71GiB\r\nTruncating dangling head                 database=/media/seassd/ancient              table=receipts indexed=1.71GiB   stored=1.71GiB\r\n```\r\nThis is also safely \"within\" a file, not near a crossover. \r\n- `4.5` receipts-blobs were dropped. \r\n- In total, it appears that `5` items were trimmed away. \r\n \r\n\r\nAnd then:\r\n```\r\nTruncating freezer table                 database=/media/seassd/ancient              table=diffs    items=16,289,887 limit=16,289,882\r\nTruncating freezer table                 database=/media/seassd/ancient              table=headers  items=16,289,887 limit=16,289,882\r\nTruncating freezer table                 database=/media/seassd/ancient              table=hashes   items=16,289,887 limit=16,289,882\r\n```\r\nSo, for the `diffs`, `headers`, and `hashes`, we remove `5` items. So how come we do not remove a fifth item from `bodies`? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1381498620/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1381512278",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26483#issuecomment-1381512278",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
    "id": 1381512278,
    "node_id": "IC_kwDOAOvK985SWDRW",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-13T09:08:37Z",
    "updated_at": "2023-01-13T09:11:21Z",
    "author_association": "MEMBER",
    "body": "> So, for the `diffs`, `headers`, and `hashes`, we remove `5` items. So how come we do not remove a fifth item from `bodies`?\r\n\r\nAh, we probably do, but we don't think it's worth logging:\r\n```golang\r\n\r\n\tlog := t.logger.Debug\r\n\tif existing > items+1 {\r\n\t\tlog = t.logger.Warn // Only loud warn if we delete multiple items\r\n\t}\r\n\tlog(\"Truncating freezer table\", \"items\", existing, \"limit\", items)\r\n```\r\nI think we should change that - deleting anything is definitely worth logging. Ah, actually, we can't change that -- see https://github.com/ethereum/go-ethereum/pull/21483 \r\n\r\n> Geth can roll back during fast sync. With the unified rollback handling, all these paths use the same code that printed the warning. This resulted in 2000 truncation warnings printed every time fast sync failed (2K headers rolled back).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1381512278/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1381633114",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26483#issuecomment-1381633114",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
    "id": 1381633114,
    "node_id": "IC_kwDOAOvK985SWgxa",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-13T10:35:59Z",
    "updated_at": "2023-01-13T10:35:59Z",
    "author_association": "MEMBER",
    "body": "I downloaded the index files from a production node, to check the data layouts / sizes. \r\n```\r\nbodies:\r\n| number | fileno | offset |\r\n|--------|--------|--------|\r\n|  16289882   |  147   |  624999924   | <-- New latest\r\n|  16289883   |  147   |  625054809   | <-- removed later\r\n|  16289884   |  147   |  625094840   | <-- half gone\r\n|  16289885   |  147   |  625097660   | <-- gone\r\n|  16289886   |  147   |  625161101   | <-- gone\r\n|  16289887   |  147   |  625212679   | <-- gone\r\n|  16289888   |  147   |  625246568   | \r\n|--------------------------|\r\n\r\n\r\nreceipts:\r\n| number | fileno | offset |\r\n|--------|--------|--------|\r\n|  16289882   |  068   |  1840165929   | <-- New latest\r\n|  16289883   |  068   |  1840193399   | <-- half gone\r\n|  16289884   |  068   |  1840202201   | <-- gone\r\n|  16289885   |  068   |  1840204334   | <-- gone\r\n|  16289886   |  068   |  1840233485   | <-- gone\r\n|  16289887   |  068   |  1840245912   | <-- gone\r\n|  16289888   |  068   |  1840257531   | \r\n|--------------------------|\r\n\r\n```\r\nThe data lost in receipts, is somewhere between\r\n\r\n```\r\n>>> 1840257531-1840193399\r\n64132\r\n>>> 1840257531-1840202201\r\n55330\r\n```\r\nSo around `60K` of data lost.\r\n\r\nFor `bodies`\r\n```\r\n>>> 625246568-625094840\r\n151728\r\n>>> 625246568-625097660\r\n148908\r\n```\r\nAround `150K` was lost. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1381633114/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1396675366",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26483#issuecomment-1396675366",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
    "id": 1396675366,
    "node_id": "IC_kwDOAOvK985TP5Mm",
    "user": {
      "login": "MariusVanDerWijden",
      "id": 16664698,
      "node_id": "MDQ6VXNlcjE2NjY0Njk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16664698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusVanDerWijden",
      "html_url": "https://github.com/MariusVanDerWijden",
      "followers_url": "https://api.github.com/users/MariusVanDerWijden/followers",
      "following_url": "https://api.github.com/users/MariusVanDerWijden/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusVanDerWijden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusVanDerWijden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusVanDerWijden/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusVanDerWijden/orgs",
      "repos_url": "https://api.github.com/users/MariusVanDerWijden/repos",
      "events_url": "https://api.github.com/users/MariusVanDerWijden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusVanDerWijden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-19T09:27:21Z",
    "updated_at": "2023-01-19T09:27:21Z",
    "author_association": "MEMBER",
    "body": "@nisdas this is our thread investigating your issue, could you do a disk check on both the internal and external drive?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1396675366/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1396709117",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26483#issuecomment-1396709117",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
    "id": 1396709117,
    "node_id": "IC_kwDOAOvK985TQBb9",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-19T09:56:40Z",
    "updated_at": "2023-01-19T09:56:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "I could only run smart checks on my internal drives, but here it is:\r\n```\r\nsmartctl 7.2 2020-12-30 r5155 [x86_64-linux-5.15.0-57-generic] (local build)\r\nCopyright (C) 2002-20, Bruce Allen, Christian Franke, www.smartmontools.org\r\n\r\n=== START OF INFORMATION SECTION ===\r\nModel Number:                       Samsung SSD 970 EVO Plus 1TB\r\nSerial Number:                      XXXXXXXXXXX\r\nFirmware Version:                   XXXXXXXXXX\r\nPCI Vendor/Subsystem ID:            XXXXXX\r\nIEEE OUI Identifier:                XXXXXXXXX\r\nTotal NVM Capacity:                 1,000,204,886,016 [1.00 TB]\r\nUnallocated NVM Capacity:           0\r\nController ID:                      4\r\nNVMe Version:                       1.3\r\nNumber of Namespaces:               1\r\nNamespace 1 Size/Capacity:          1,000,204,886,016 [1.00 TB]\r\nNamespace 1 Utilization:            568,299,421,696 [568 GB]\r\nNamespace 1 Formatted LBA Size:     512\r\nNamespace 1 IEEE EUI-64:            XXXXXXXX\r\nLocal Time is:                      Thu Jan 19 17:46:57 2023 +08\r\nFirmware Updates (0x16):            3 Slots, no Reset required\r\nOptional Admin Commands (0x0017):   Security Format Frmw_DL Self_Test\r\nOptional NVM Commands (0x005f):     Comp Wr_Unc DS_Mngmt Wr_Zero Sav/Sel_Feat Timestmp\r\nLog Page Attributes (0x03):         S/H_per_NS Cmd_Eff_Lg\r\nMaximum Data Transfer Size:         512 Pages\r\nWarning  Comp. Temp. Threshold:     85 Celsius\r\nCritical Comp. Temp. Threshold:     85 Celsius\r\n\r\nSupported Power States\r\nSt Op     Max   Active     Idle   RL RT WL WT  Ent_Lat  Ex_Lat\r\n 0 +     7.80W       -        -    0  0  0  0        0       0\r\n 1 +     6.00W       -        -    1  1  1  1        0       0\r\n 2 +     3.40W       -        -    2  2  2  2        0       0\r\n 3 -   0.0700W       -        -    3  3  3  3      210    1200\r\n 4 -   0.0100W       -        -    4  4  4  4     2000    8000\r\n\r\nSupported LBA Sizes (NSID 0x1)\r\nId Fmt  Data  Metadt  Rel_Perf\r\n 0 +     512       0         0\r\n\r\n=== START OF SMART DATA SECTION ===\r\nSMART overall-health self-assessment test result: PASSED\r\n\r\nSMART/Health Information (NVMe Log 0x02)\r\nCritical Warning:                   0x00\r\nTemperature:                        45 Celsius\r\nAvailable Spare:                    100%\r\nAvailable Spare Threshold:          10%\r\nPercentage Used:                    38%\r\nData Units Read:                    1,073,615,542 [549 TB]\r\nData Units Written:                 749,692,485 [383 TB]\r\nHost Read Commands:                 63,071,682,328\r\nHost Write Commands:                54,082,004,201\r\nController Busy Time:               66,495\r\nPower Cycles:                       22\r\nPower On Hours:                     11,215\r\nUnsafe Shutdowns:                   12\r\nMedia and Data Integrity Errors:    0\r\nError Information Log Entries:      38\r\nWarning  Comp. Temperature Time:    0\r\nCritical Comp. Temperature Time:    0\r\nTemperature Sensor 1:               45 Celsius\r\nTemperature Sensor 2:               51 Celsius\r\n\r\nError Information (NVMe Log 0x01, 16 of 64 entries)\r\nNum   ErrCount  SQId   CmdId  Status  PELoc          LBA  NSID    VS\r\n  0         38     0  0x2001  0x4004      -            0     0     -\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1396709117/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1396730305",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26483#issuecomment-1396730305",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
    "id": 1396730305,
    "node_id": "IC_kwDOAOvK985TQGnB",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-19T10:11:58Z",
    "updated_at": "2023-01-19T10:11:58Z",
    "author_association": "MEMBER",
    "body": ">  on my internal drives\r\n\r\nHold up -- does that mean _not_ the drive which the ancients are on? At this point, we're only really interested in the disk holding the ancients, the `/media/seassd/ancient` unit, because that's where the data went missing. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1396730305/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1396835249",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26483#issuecomment-1396835249",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
    "id": 1396835249,
    "node_id": "IC_kwDOAOvK985TQgOx",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-19T11:33:33Z",
    "updated_at": "2023-01-19T11:33:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "For my external drive, doing extensive disk checks will be difficult as it would require me to restart my machine(my node is currently running with validators on them). I can't run the smart tool checks as it requires me to disable a module in the kernel: https://www.smartmontools.org/ticket/971 . If it helps, I just bought the external drive 2 months back. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1396835249/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1515996037",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26483#issuecomment-1515996037",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
    "id": 1515996037,
    "node_id": "IC_kwDOAOvK985aXEOF",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-20T09:16:10Z",
    "updated_at": "2023-04-20T09:17:00Z",
    "author_association": "MEMBER",
    "body": "Similar error occurred on a `pebble`-backed node which suffered a (few) uncontrolled shutdowns (courtesy of @chfast) \r\n```\r\ngeth --datadir=/bc/geth --db.engine=pebble --cache=3072 --port=4130 --discovery.port=4130\r\nINFO [04-20|09:12:19.683] Starting Geth on Ethereum mainnet... \r\nINFO [04-20|09:12:19.690] Maximum peer count                       ETH=50 LES=0 total=50\r\nINFO [04-20|09:12:19.694] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\r\nINFO [04-20|09:12:19.694] Using pebble as db engine \r\nINFO [04-20|09:12:19.719] Set global gas cap                       cap=50,000,000\r\nINFO [04-20|09:12:19.729] Allocated trie memory caches             clean=460.00MiB dirty=768.00MiB\r\nINFO [04-20|09:12:20.155] Using pebble as the backing database \r\nINFO [04-20|09:12:20.155] Allocated cache and file handles         database=/bc/geth/geth/chaindata cache=1.50GiB handles=524,288\r\nINFO [04-20|09:12:34.235] Opened ancient database                  database=/bc/geth/geth/chaindata/ancient/chain readonly=false\r\nERROR[04-20|09:12:34.288] Error in block freeze operation          err=\"block receipts missing, can't freeze block 16854335\"\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1515996037/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1516009615",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26483#issuecomment-1516009615",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
    "id": 1516009615,
    "node_id": "IC_kwDOAOvK985aXHiP",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-20T09:26:21Z",
    "updated_at": "2023-04-20T09:26:21Z",
    "author_association": "MEMBER",
    "body": "The 'block receipts' missing is curious, because during freeze, it reads the fields in this order: \r\n - hash\r\n - header\r\n - body (transactions + uncles)\r\n - receipts\r\n - td\r\n\r\n```golang\r\n\t\t\thash := ReadCanonicalHash(nfdb, number)\r\n\t\t\tif hash == (common.Hash{}) {\r\n\t\t\t\treturn fmt.Errorf(\"canonical hash missing, can't freeze block %d\", number)\r\n\t\t\t}\r\n\t\t\theader := ReadHeaderRLP(nfdb, hash, number)\r\n\t\t\tif len(header) == 0 {\r\n\t\t\t\treturn fmt.Errorf(\"block header missing, can't freeze block %d\", number)\r\n\t\t\t}\r\n\t\t\tbody := ReadBodyRLP(nfdb, hash, number)\r\n\t\t\tif len(body) == 0 {\r\n\t\t\t\treturn fmt.Errorf(\"block body missing, can't freeze block %d\", number)\r\n\t\t\t}\r\n\t\t\treceipts := ReadReceiptsRLP(nfdb, hash, number)\r\n\t\t\tif len(receipts) == 0 {\r\n\t\t\t\treturn fmt.Errorf(\"block receipts missing, can't freeze block %d\", number)\r\n\t\t\t}\r\n\t\t\ttd := ReadTdRLP(nfdb, hash, number)\r\n\t\t\tif len(td) == 0 {\r\n\t\t\t\treturn fmt.Errorf(\"total difficulty missing, can't freeze block %d\", number)\r\n\t\t\t}\r\n\r\n```\r\nSo that means that the other fields are present in leveldb, but only the receipts are missing (and possibly td). Checking those, it seems that the `td` is also _present_, and indeed only the receipts are gone: \r\n```\r\nroot@rv41:~# sudo -u geth geth --datadir=/bc/geth --db.engine=pebble db get 0x720000000001012d3f1187436c1687352bcb934b692a08364179d4aeb4b08e4cbfca67a60be04ba6e8\r\nINFO [04-20|09:25:12.385] Maximum peer count                       ETH=50 LES=0 total=50\r\nINFO [04-20|09:25:12.387] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\r\nINFO [04-20|09:25:12.387] Using pebble as db engine \r\nINFO [04-20|09:25:12.388] Set global gas cap                       cap=50,000,000\r\nINFO [04-20|09:25:12.730] Using pebble as the backing database \r\nINFO [04-20|09:25:12.730] Allocated cache and file handles         database=/bc/geth/geth/chaindata cache=512.00MiB handles=524,288\r\nINFO [04-20|09:25:14.904] Opened ancient database                  database=/bc/geth/geth/chaindata/ancient/chain readonly=true\r\nINFO [04-20|09:25:14.918] Get operation failed                     key=0x720000000001012d3f1187436c1687352bcb934b692a08364179d4aeb4b08e4cbfca67a60be04ba6e8 error=\"pebble: not found\"\r\npebble: not found\r\nroot@rv41:~# sudo -u geth geth --datadir=/bc/geth --db.engine=pebble db get 0x680000000001012d3f1187436c1687352bcb934b692a08364179d4aeb4b08e4cbfca67a60be04ba6e874\r\nINFO [04-20|09:25:27.788] Maximum peer count                       ETH=50 LES=0 total=50\r\nINFO [04-20|09:25:27.788] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\r\nINFO [04-20|09:25:27.788] Using pebble as db engine \r\nINFO [04-20|09:25:27.790] Set global gas cap                       cap=50,000,000\r\nINFO [04-20|09:25:28.103] Using pebble as the backing database \r\nINFO [04-20|09:25:28.103] Allocated cache and file handles         database=/bc/geth/geth/chaindata cache=512.00MiB handles=524,288\r\nINFO [04-20|09:25:30.290] Opened ancient database                  database=/bc/geth/geth/chaindata/ancient/chain readonly=true\r\nkey 0x680000000001012d3f1187436c1687352bcb934b692a08364179d4aeb4b08e4cbfca67a60be04ba6e874: 0x8a0c70d815d562d3cfa955\r\n```\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1516009615/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1516014049",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26483#issuecomment-1516014049",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
    "id": 1516014049,
    "node_id": "IC_kwDOAOvK985aXInh",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-20T09:29:39Z",
    "updated_at": "2023-04-20T09:29:39Z",
    "author_association": "MEMBER",
    "body": "Also, the child block, `16854336` / `0x47a4c8ce11136f87915e62a34606f5dccb286653ccf1fda7564892cdd25795bf`, directly following, is also fully present in leveldb.\r\n\r\nSo it seems that for `16854335`, the receipts just disappeared, but nothing else seems to be missing (at least not in the direct vicinity)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1516014049/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1516062685",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26483#issuecomment-1516062685",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
    "id": 1516062685,
    "node_id": "IC_kwDOAOvK985aXUfd",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-20T10:04:36Z",
    "updated_at": "2023-04-20T10:04:36Z",
    "author_association": "MEMBER",
    "body": "So, on a functioning node, I did \r\n```\r\n> debug.dbAncient(\"receipts\", 16854335)\r\n```\r\nI took the output, and put it into a bash variable, and then did \r\n\r\n```\r\ngeth --datadir=/bc/geth --db.engine=pebble db put 0x720000000001012d3f1187436c1687352bcb934b692a08364179d4aeb4b08e4cbfca67a60be04ba6e8 $RLP\r\n```\r\nTHat seems to have fixed it. I'm curious to see if it is indeed fixed, or if something else will turn up. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1516062685/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
