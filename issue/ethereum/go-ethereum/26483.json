{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/26483",
  "id": 1530324420,
  "node_id": "I_kwDOAOvK985bNuXE",
  "number": 26483,
  "title": "Gap in chain (investigation)",
  "user": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2023-01-12T08:47:22Z",
  "updated_at": "2023-01-12T21:13:12Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "```\r\nStopping Go Ethereum Client...\r\nINFO [01-11|09:23:52.203] Got interrupt, shutting down...\r\nINFO [01-11|09:23:52.207] HTTP server stopped                      endpoint=100.98.99.93:8545\r\nINFO [01-11|09:23:52.207] HTTP server stopped                      endpoint=127.0.0.1:8551\r\nINFO [01-11|09:23:52.208] IPC endpoint closed                      url=/var/lib/goethereum/geth.ipc\r\nINFO [01-11|09:23:52.215] Ethereum protocol stopped\r\nINFO [01-11|09:23:52.215] Transaction pool stopped\r\nINFO [01-11|09:23:52.282] Writing cached state to disk             block=16,380,262 hash=45dd8d..d179f5 root=64bc16..3fab91\r\nWARN [01-11|09:24:00.887] Snapshot extension registration failed   peer=59d2a329 err=\"peer connected on snap without compatible eth support\"\r\nINFO [01-11|09:24:02.227] Looking for peers                        peercount=0  tried=138 static=0\r\nINFO [01-11|09:24:12.282] Looking for peers                        peercount=1  tried=93  static=0\r\nWARN [01-11|09:24:20.847] Previously seen beacon client is offline. Please ensure it is operational to follow the chain!\r\nINFO [01-11|09:24:22.026] Persisted trie from memory database      nodes=21,477,115 size=4.95GiB time=2m45.93433664s  gcnodes=71,174,970 gcsize=27.90GiB gctime=4m34.927021369s livenodes=372,921 livesize=145.41MiB\r\nINFO [01-11|09:24:22.026] Writing cached state to disk             block=16,380,261 hash=90594b..fcfa5e root=d3b906..60e10b\r\nINFO [01-11|09:24:22.037] Persisted trie from memory database      nodes=2372       size=950.64KiB time=11.415431ms     gcnodes=0          gcsize=0.00B    gctime=0s              livenodes=370,549 livesize=144.49MiB\r\nINFO [01-11|09:24:22.037] Writing cached state to disk             block=16,380,135 hash=97e6c5..376b07 root=a2d708..b5bc31\r\nINFO [01-11|09:24:22.298] Looking for peers                        peercount=0  tried=100 static=0\r\nINFO [01-11|09:24:22.990] Persisted trie from memory database      nodes=128,837    size=47.27MiB  time=952.676588ms    gcnodes=0          gcsize=0.00B    gctime=0s              livenodes=241,712 livesize=97.22MiB\r\nINFO [01-11|09:24:22.990] Writing snapshot state to disk           root=ef8ca2..73e4dc\r\nINFO [01-11|09:24:22.990] Persisted trie from memory database      nodes=0          size=0.00B     time=\"4.429Âµs\"       gcnodes=0          gcsize=0.00B    gctime=0s              livenodes=241,712 livesize=97.22MiB\r\nERROR[01-11|09:24:23.615] Dangling trie nodes after full cleanup\r\nINFO [01-11|09:24:23.615] Writing clean trie cache to disk         path=/var/lib/goethereum/geth/triecache threads=8\r\nINFO [01-11|09:24:24.272] Persisted the clean trie cache           path=/var/lib/goethereum/geth/triecache elapsed=656.799ms\r\nINFO [01-11|09:24:24.272] Blockchain stopped\r\ngeth.service: Deactivated successfully.\r\nStopped Go Ethereum Client.\r\ngeth.service: Consumed 1d 10h 57min 51.015s CPU time.\r\n-- Boot 1c02008566004ee6a89e3b36b0ff4cc9 --\r\nStarted Go Ethereum Client.\r\nINFO [01-11|10:56:45.251] Starting pprof server                    addr=http://127.0.0.1:6070/debug/pprof\r\nINFO [01-11|10:56:45.259] Starting Geth on Ethereum mainnet...\r\nINFO [01-11|10:56:45.262] Maximum peer count                       ETH=25 LES=0 total=25\r\nINFO [01-11|10:56:45.264] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\r\nINFO [01-11|10:56:45.272] Set global gas cap                       cap=50,000,000\r\nINFO [01-11|10:56:45.275] Allocated trie memory caches             clean=900.00MiB dirty=1.46GiB\r\nINFO [01-11|10:56:45.276] Allocated cache and file handles         database=/var/lib/goethereum/geth/chaindata cache=2.93GiB handles=262,144\r\nINFO [01-11|10:56:59.075] Found legacy ancient chain path          location=/media/seassd/ancient\r\nWARN [01-11|10:56:59.140] Truncating dangling indexes              database=/media/seassd/ancient              table=bodies indexed=596.20MiB stored=596.05MiB\r\nWARN [01-11|10:56:59.140] Truncating dangling indexes              database=/media/seassd/ancient              table=bodies indexed=596.14MiB stored=596.05MiB\r\nWARN [01-11|10:56:59.140] Truncating dangling indexes              database=/media/seassd/ancient              table=bodies indexed=596.14MiB stored=596.05MiB\r\nWARN [01-11|10:56:59.140] Truncating dangling indexes              database=/media/seassd/ancient              table=bodies indexed=596.10MiB stored=596.05MiB\r\nWARN [01-11|10:56:59.140] Truncating dangling head                 database=/media/seassd/ancient              table=bodies indexed=596.05MiB stored=596.05MiB\r\nWARN [01-11|10:56:59.190] Truncating dangling indexes              database=/media/seassd/ancient              table=receipts indexed=1.71GiB   stored=1.71GiB\r\nWARN [01-11|10:56:59.190] Truncating dangling indexes              database=/media/seassd/ancient              table=receipts indexed=1.71GiB   stored=1.71GiB\r\nWARN [01-11|10:56:59.190] Truncating dangling indexes              database=/media/seassd/ancient              table=receipts indexed=1.71GiB   stored=1.71GiB\r\nWARN [01-11|10:56:59.190] Truncating dangling indexes              database=/media/seassd/ancient              table=receipts indexed=1.71GiB   stored=1.71GiB\r\nWARN [01-11|10:56:59.190] Truncating dangling indexes              database=/media/seassd/ancient              table=receipts indexed=1.71GiB   stored=1.71GiB\r\nWARN [01-11|10:56:59.190] Truncating dangling head                 database=/media/seassd/ancient              table=receipts indexed=1.71GiB   stored=1.71GiB\r\nWARN [01-11|10:56:59.227] Truncating freezer table                 database=/media/seassd/ancient              table=diffs    items=16,289,887 limit=16,289,882\r\nWARN [01-11|10:56:59.228] Truncating freezer table                 database=/media/seassd/ancient              table=headers  items=16,289,887 limit=16,289,882\r\nWARN [01-11|10:56:59.229] Truncating freezer table                 database=/media/seassd/ancient              table=hashes   items=16,289,887 limit=16,289,882\r\nINFO [01-11|10:56:59.229] Opened ancient database                  database=/media/seassd/ancient              readonly=false\r\nFatal: Failed to register the Ethereum service: gap in the chain between ancients (#16289882) and leveldb (#16380262)\r\n```\r\n\r\nShutdown\r\n- Writes cached state for `16,380,262`, `16,380,261` and `16,380,135`\r\n- Which means that `16,380,262` is the most recent state. \r\n\r\nStartup:\r\n - `Truncating freezer table` only trimmed away 5 items: `items=16,289,887 limit=16,289,882`\r\n - gap in the chain\r\n   - between ancients (#16289882) and leveldb (#16380262)\r\n   - ancients is at `16,289,882`, as expected after the trim. \r\n   - leveldb is at `16380262`, the difference here is `90380`. \r\n   - But the number we're comparing against `16380262` -- that is the HEAD. Why are \r\n     we expecting the HEAD to link up with the ancients? Answer: we're not, normally, that's just a special-case when we do the insert-directly-to-ancients during sync.  In normal case, if we wound up here, there's already a confirmed gap. \r\n\r\nRelevant code\r\n\r\n```golang\r\n  \t// If the genesis hash is empty, we have a new key-value store, so nothing to\r\n\t// validate in this method. If, however, the genesis hash is not nil, compare\r\n\t// it to the freezer content.\r\n\tif kvgenesis, _ := db.Get(headerHashKey(0)); len(kvgenesis) > 0 {\r\n\t\tif frozen, _ := frdb.Ancients(); frozen > 0 {\r\n\t\t\t// If the freezer already contains something, ensure that the genesis blocks\r\n\t\t\t// match, otherwise we might mix up freezers across chains and destroy both\r\n\t\t\t// the freezer and the key-value store.\r\n\t\t\tfrgenesis, err := frdb.Ancient(chainFreezerHashTable, 0)\r\n\t\t\tif err != nil {\r\n\t\t\t\treturn nil, fmt.Errorf(\"failed to retrieve genesis from ancient %v\", err)\r\n\t\t\t} else if !bytes.Equal(kvgenesis, frgenesis) {\r\n\t\t\t\treturn nil, fmt.Errorf(\"genesis mismatch: %#x (leveldb) != %#x (ancients)\", kvgenesis, frgenesis)\r\n\t\t\t}\r\n\t\t\t// Key-value store and freezer belong to the same network. Ensure that they\r\n\t\t\t// are contiguous, otherwise we might end up with a non-functional freezer.\r\n\t\t\tif kvhash, _ := db.Get(headerHashKey(frozen)); len(kvhash) == 0 {\r\n\t\t\t\t// Subsequent header after the freezer limit is missing from the database.\r\n\t\t\t\t// Reject startup if the database has a more recent head.\r\n\t\t\t\tif ldbNum := *ReadHeaderNumber(db, ReadHeadHeaderHash(db)); ldbNum > frozen-1 {\r\n\t\t\t\t\treturn nil, fmt.Errorf(\"gap in the chain between ancients (#%d) and leveldb (#%d) \", frozen, ldbNum)\r\n\t\t\t\t}\r\n\t\t\t\t// Database contains only older data than the freezer, this happens if the\r\n\t\t\t\t// state was wiped and reinited from an existing freezer.\r\n\t\t\t}\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1379998672",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26483#issuecomment-1379998672",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
    "id": 1379998672,
    "node_id": "IC_kwDOAOvK985SQRvQ",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T08:54:58Z",
    "updated_at": "2023-01-12T08:54:58Z",
    "author_association": "MEMBER",
    "body": "Ah, I get it. \r\n\r\n1. So, we moved `0-16,289,887` into ancients. \r\n2. For unknown reasons, there ancients are slighly corrupt, and we trim away five things, landing at `0-16,289,882`\r\n3. Which means that `16,289,887`,`16,289,886`,`16,289,885`,`16,289,884`,`16,289,883` are simply missing, since it's in neither ancients nor leveldb.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1379998672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1380123984",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26483#issuecomment-1380123984",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
    "id": 1380123984,
    "node_id": "IC_kwDOAOvK985SQwVQ",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T10:32:14Z",
    "updated_at": "2023-01-12T10:32:14Z",
    "author_association": "MEMBER",
    "body": "`table=bodies indexed=596.20MiB stored=596.05MiB` --- this indicates that for `bodies`, we were expecting more than we saw. So we had indexed `M` items, but found less than `M` bodies. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1380123984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1380133350",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26483#issuecomment-1380133350",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
    "id": 1380133350,
    "node_id": "IC_kwDOAOvK985SQynm",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T10:40:19Z",
    "updated_at": "2023-01-12T10:40:19Z",
    "author_association": "MEMBER",
    "body": "I wonder what the filesystem is on `/media/seassd/ancient`  cc @MariusVanDerWijden ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1380133350/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1380423247",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26483#issuecomment-1380423247",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
    "id": 1380423247,
    "node_id": "IC_kwDOAOvK985SR5ZP",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T14:19:10Z",
    "updated_at": "2023-01-12T14:19:10Z",
    "author_association": "MEMBER",
    "body": "BTW,\r\n \t\t\t\t\t\r\n```\r\nreturn nil, fmt.Errorf(\"gap in the chain between ancients (#%d) and leveldb (#%d) \", frozen, ldbNum)\r\n```\r\nIt's ambiguous to me. It feels like we miss 90k data, but actually not. Although it's very hard to know what's the oldest one in kv store.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1380423247/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1380425305",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26483#issuecomment-1380425305",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
    "id": 1380425305,
    "node_id": "IC_kwDOAOvK985SR55Z",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T14:20:45Z",
    "updated_at": "2023-01-12T14:27:16Z",
    "author_association": "MEMBER",
    "body": "```\r\nWARN [01-11|10:56:59.140] Truncating dangling indexes              database=/media/seassd/ancient              table=bodies indexed=596.20MiB stored=596.05MiB\r\nWARN [01-11|10:56:59.140] Truncating dangling indexes              database=/media/seassd/ancient              table=bodies indexed=596.14MiB stored=596.05MiB\r\nWARN [01-11|10:56:59.140] Truncating dangling indexes              database=/media/seassd/ancient              table=bodies indexed=596.14MiB stored=596.05MiB\r\nWARN [01-11|10:56:59.140] Truncating dangling indexes              database=/media/seassd/ancient              table=bodies indexed=596.10MiB stored=596.05MiB\r\nWARN [01-11|10:56:59.140] Truncating dangling head                 database=/media/seassd/ancient              table=bodies indexed=596.05MiB stored=596.05MiB\r\n```\r\n\r\nIt's interesting. Usually we truncate the higher one by deleting items one by one.\r\nBut log shows that we delete items from index file first, then somehow truncate\r\ndata file as well. Finally these two are aligned.\r\n\r\nHonestly it's pretty weird, looks like data file misses some bodies and a partial body.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1380425305/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1380997794",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26483#issuecomment-1380997794",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26483",
    "id": 1380997794,
    "node_id": "IC_kwDOAOvK985SUFqi",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T21:10:58Z",
    "updated_at": "2023-01-12T21:13:12Z",
    "author_association": "MEMBER",
    "body": "Main issue where people have reported these cases: https://github.com/ethereum/go-ethereum/issues/22374\r\n\r\nThere, I asked a while ago whether `Truncating dangling xxx` log message was printed, but nobody replied. Good to see we finally have a log where it was actually printed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1380997794/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
