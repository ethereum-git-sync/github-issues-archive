{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2100",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2100/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2100/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2100/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/2100",
  "id": 124356306,
  "node_id": "MDU6SXNzdWUxMjQzNTYzMDY=",
  "number": 2100,
  "title": "The filename of keys makes a difference as to whether or not they can be unlocked",
  "user": {
    "login": "stephantual",
    "id": 1596070,
    "node_id": "MDQ6VXNlcjE1OTYwNzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1596070?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stephantual",
    "html_url": "https://github.com/stephantual",
    "followers_url": "https://api.github.com/users/stephantual/followers",
    "following_url": "https://api.github.com/users/stephantual/following{/other_user}",
    "gists_url": "https://api.github.com/users/stephantual/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stephantual/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stephantual/subscriptions",
    "organizations_url": "https://api.github.com/users/stephantual/orgs",
    "repos_url": "https://api.github.com/users/stephantual/repos",
    "events_url": "https://api.github.com/users/stephantual/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stephantual/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233650,
      "node_id": "MDU6TGFiZWw3MjIzMzY1MA==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:bug",
      "name": "type:bug",
      "color": "FF5E5E",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "fjl",
    "id": 6915,
    "node_id": "MDQ6VXNlcjY5MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fjl",
    "html_url": "https://github.com/fjl",
    "followers_url": "https://api.github.com/users/fjl/followers",
    "following_url": "https://api.github.com/users/fjl/following{/other_user}",
    "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
    "organizations_url": "https://api.github.com/users/fjl/orgs",
    "repos_url": "https://api.github.com/users/fjl/repos",
    "events_url": "https://api.github.com/users/fjl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fjl/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/milestones/20",
    "html_url": "https://github.com/ethereum/go-ethereum/milestone/20",
    "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/milestones/20/labels",
    "id": 1299388,
    "node_id": "MDk6TWlsZXN0b25lMTI5OTM4OA==",
    "number": 20,
    "title": "1.4.0",
    "description": "",
    "creator": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 141,
    "state": "closed",
    "created_at": "2015-09-10T13:53:50Z",
    "updated_at": "2016-08-17T20:07:24Z",
    "due_on": null,
    "closed_at": "2016-05-10T10:44:41Z"
  },
  "comments": 8,
  "created_at": "2015-12-30T14:39:01Z",
  "updated_at": "2016-05-10T09:57:43Z",
  "closed_at": "2016-05-10T09:57:39Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "I found today by playing around with geth that the filename format of the keys makes a difference as to whether or not they can be unlocked.\n\nExpected behaviour: I can place any file with a valid encrypted in key in /keystore and it will be possible to unlock the account with the correct password.\n\nActual behaviour (OSX, latest master, build from source): if i rename a key file to 'blah_blah' then obviously it's not recognised by ./geth account list and therefore using it is out of the question, which is expected.\n\nHowever, if i rename the key file to say, '367670f9a85e63377c9cc43a2ff6fe78b33b01c4', then the account will appear in the account list, but even with the correct password, i cannot unlock it. \n\nRenaming it to the proper format, irrespective of timestamp used, fixes it. (modifying the timestamp does however move it up and down in the array of accounts, which I believe is expected).\n\nWhy this is a problem: I think a lot of people are securing their keys by:\n- printing out the content of the keyfile\n- deleting the file\n  ... in order to put their funds in 'cold storage;\n\nSo these people are gong to be rather unhappy when they try to recover their keys later down the line and can't get geth to unlock the account even though the keys are valid and so are the passwords.\n\nTemporary workaround:  create a brand new account, then copy the format of the file, change the date slightly, and then suffic with the proper public key. It allows you to unlock the file again (thankfully).\n",
  "closed_by": {
    "login": "obscuren",
    "id": 6264126,
    "node_id": "MDQ6VXNlcjYyNjQxMjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/obscuren",
    "html_url": "https://github.com/obscuren",
    "followers_url": "https://api.github.com/users/obscuren/followers",
    "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
    "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
    "organizations_url": "https://api.github.com/users/obscuren/orgs",
    "repos_url": "https://api.github.com/users/obscuren/repos",
    "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
    "received_events_url": "https://api.github.com/users/obscuren/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2100/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2100/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168032437",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2100#issuecomment-168032437",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2100",
    "id": 168032437,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODAzMjQzNw==",
    "user": {
      "login": "zelig",
      "id": 769725,
      "node_id": "MDQ6VXNlcjc2OTcyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/769725?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zelig",
      "html_url": "https://github.com/zelig",
      "followers_url": "https://api.github.com/users/zelig/followers",
      "following_url": "https://api.github.com/users/zelig/following{/other_user}",
      "gists_url": "https://api.github.com/users/zelig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zelig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zelig/subscriptions",
      "organizations_url": "https://api.github.com/users/zelig/orgs",
      "repos_url": "https://api.github.com/users/zelig/repos",
      "events_url": "https://api.github.com/users/zelig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zelig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-30T16:48:08Z",
    "updated_at": "2015-12-30T16:48:08Z",
    "author_association": "MEMBER",
    "body": "Indeed, you found an inconsistency.\nThe keystore is meant to recognise the old (prefrontier) format where keys were in their own subdirectories: \n`keystore/367670f9a85e63377c9cc43a2ff6fe78b33b01c4/367670f9a85e63377c9cc43a2ff6fe78b33b01c4`\n\nHowever when we list the accounts we carelessly included the pattern\n`keystore/367670f9a85e63377c9cc43a2ff6fe78b33b01c4`\n\nSo what would you like to see? \n\n> Expected behaviour: I can place any file with a valid encrypted in key in /keystore and it will be possible to unlock the account with the correct password.\n\nthis is certainly possible but this is not a hotfix since this would require us to parse all files even for listing the accounts. I guess this is probably the correct/safer behaviour anyway.\n\nAll in all, we defo need to at least fix the above pattern. I would lean towards not supporting other filepath formats but the previous and current ones. \n\nDown the line this whole key management nonsense needs to go and be replaced by some more stardard and/or device/OS-integrated solution.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168032437/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168191660",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2100#issuecomment-168191660",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2100",
    "id": 168191660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODE5MTY2MA==",
    "user": {
      "login": "stephantual",
      "id": 1596070,
      "node_id": "MDQ6VXNlcjE1OTYwNzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1596070?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephantual",
      "html_url": "https://github.com/stephantual",
      "followers_url": "https://api.github.com/users/stephantual/followers",
      "following_url": "https://api.github.com/users/stephantual/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephantual/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephantual/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephantual/subscriptions",
      "organizations_url": "https://api.github.com/users/stephantual/orgs",
      "repos_url": "https://api.github.com/users/stephantual/repos",
      "events_url": "https://api.github.com/users/stephantual/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephantual/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-31T13:07:08Z",
    "updated_at": "2015-12-31T13:07:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi Viktor, thank you for your reply :) \n\nSo there are two distinct things here:\n\nOne, the naming convention which could be changed to parse all files or parse only acceptable ones (ie, the old and new ones). That's not the end of the world either way.\n\nSecond - and I'd love to be proven wrong on this - that a key that's not named as expected but still going in the list of accounts cannot be unlocked with the correct password. \n\nI tried this:\n- Name the key so that's it's recognized but non-standards\n- Try to unlock the account by sending a trx, fails\n- Rename the key to the UTC format\n- Try to unlock the account by sending a trx , succeeds.\n\nFor the sake of testing I had just generated the key and the password was 'password' (so I wouldn't type it wrong). \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168191660/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168327002",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2100#issuecomment-168327002",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2100",
    "id": 168327002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODMyNzAwMg==",
    "user": {
      "login": "zelig",
      "id": 769725,
      "node_id": "MDQ6VXNlcjc2OTcyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/769725?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zelig",
      "html_url": "https://github.com/zelig",
      "followers_url": "https://api.github.com/users/zelig/followers",
      "following_url": "https://api.github.com/users/zelig/following{/other_user}",
      "gists_url": "https://api.github.com/users/zelig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zelig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zelig/subscriptions",
      "organizations_url": "https://api.github.com/users/zelig/orgs",
      "repos_url": "https://api.github.com/users/zelig/repos",
      "events_url": "https://api.github.com/users/zelig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zelig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-01T18:25:30Z",
    "updated_at": "2016-01-02T09:15:37Z",
    "author_association": "MEMBER",
    "body": "sorry stephan if i was not clear, yes your case is indeed a bug. \nOnly correctly named keyiles (old and new) should be accepted but listing mistakenly matches the pattern (`keyfiles/<key>`), and yes when you unlock it the pattern match is \"incorrect\" and does not find your file so it won't unlock and on top does not even give a correct error message.\nThe correct fix would be to disallow your naming convention. \nSince you found this first, probably noone else is affected, so I suggest we go down this simple restrictive route for now. \n(which means, please conform to the new scheme :)\n\nAdmittedly I am recommending the  solution that is easiest for us.\nThis is because if we put more into this now, IMHO that should be directed to finding a proper way  to handle keys. I will talk to the team about this.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168327002/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168582353",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2100#issuecomment-168582353",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2100",
    "id": 168582353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODU4MjM1Mw==",
    "user": {
      "login": "klmoney",
      "id": 11975185,
      "node_id": "MDQ6VXNlcjExOTc1MTg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/11975185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/klmoney",
      "html_url": "https://github.com/klmoney",
      "followers_url": "https://api.github.com/users/klmoney/followers",
      "following_url": "https://api.github.com/users/klmoney/following{/other_user}",
      "gists_url": "https://api.github.com/users/klmoney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/klmoney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/klmoney/subscriptions",
      "organizations_url": "https://api.github.com/users/klmoney/orgs",
      "repos_url": "https://api.github.com/users/klmoney/repos",
      "events_url": "https://api.github.com/users/klmoney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/klmoney/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T05:09:46Z",
    "updated_at": "2016-01-04T05:09:46Z",
    "author_association": "NONE",
    "body": "Hi, for the specific situation that Stephan mentions, this bug would be less of a problem if Geth allowed the export of unencrypted private keys. Then a user would print and store the private key string and when time to rebuild the geth keyfile with the _correct_ filename format, would simply use “geth account import”. Having said that, I do appreciate the risks of holding an unencrypted private key.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168582353/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168828204",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2100#issuecomment-168828204",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2100",
    "id": 168828204,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODgyODIwNA==",
    "user": {
      "login": "stephantual",
      "id": 1596070,
      "node_id": "MDQ6VXNlcjE1OTYwNzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1596070?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephantual",
      "html_url": "https://github.com/stephantual",
      "followers_url": "https://api.github.com/users/stephantual/followers",
      "following_url": "https://api.github.com/users/stephantual/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephantual/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephantual/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephantual/subscriptions",
      "organizations_url": "https://api.github.com/users/stephantual/orgs",
      "repos_url": "https://api.github.com/users/stephantual/repos",
      "events_url": "https://api.github.com/users/stephantual/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephantual/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T22:15:21Z",
    "updated_at": "2016-01-04T22:15:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks a lot @zelig and I'm thrilled I found an original bug  :smile:\nI like your solution!  :+1: \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/168828204/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/172276284",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2100#issuecomment-172276284",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2100",
    "id": 172276284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjI3NjI4NA==",
    "user": {
      "login": "infamousrev",
      "id": 16310390,
      "node_id": "MDQ6VXNlcjE2MzEwMzkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/16310390?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/infamousrev",
      "html_url": "https://github.com/infamousrev",
      "followers_url": "https://api.github.com/users/infamousrev/followers",
      "following_url": "https://api.github.com/users/infamousrev/following{/other_user}",
      "gists_url": "https://api.github.com/users/infamousrev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/infamousrev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/infamousrev/subscriptions",
      "organizations_url": "https://api.github.com/users/infamousrev/orgs",
      "repos_url": "https://api.github.com/users/infamousrev/repos",
      "events_url": "https://api.github.com/users/infamousrev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/infamousrev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-16T23:55:44Z",
    "updated_at": "2016-01-16T23:57:38Z",
    "author_association": "NONE",
    "body": "I agree with stephantual that the behaviour that it could simply detect any filename would be very useful. \n\nI think anyone making a backup of their key will probably want to store it in a hard to recognize way, for example encrypt it another round to make the contents look like it is random data and rename it to familyphoto.jpg or something like that.\n\nThis is important because if the file name has to contain your wallet address then someone who manages to get his hands on your backup can use a wallet explorer to see the balance and might use that as a reason to threaten you for the password.\n\nHaving such a complex and mandatory naming scheme will make sure that tons of new users who try to backup their key in this way will have trouble restoring it. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/172276284/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/172667318",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2100#issuecomment-172667318",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2100",
    "id": 172667318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjY2NzMxOA==",
    "user": {
      "login": "Gustav-Simonsson",
      "id": 293096,
      "node_id": "MDQ6VXNlcjI5MzA5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/293096?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gustav-Simonsson",
      "html_url": "https://github.com/Gustav-Simonsson",
      "followers_url": "https://api.github.com/users/Gustav-Simonsson/followers",
      "following_url": "https://api.github.com/users/Gustav-Simonsson/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gustav-Simonsson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gustav-Simonsson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gustav-Simonsson/subscriptions",
      "organizations_url": "https://api.github.com/users/Gustav-Simonsson/orgs",
      "repos_url": "https://api.github.com/users/Gustav-Simonsson/repos",
      "events_url": "https://api.github.com/users/Gustav-Simonsson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gustav-Simonsson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-18T22:08:18Z",
    "updated_at": "2016-01-18T22:09:13Z",
    "author_association": "NONE",
    "body": "The files in the keystore are not meant to be fiddled with by users. They are internal and have no guarantees other than what the key spec at https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition defines.\n\nFun fact: the spec recommends for file name what older versions of the keystore used - a random UUID (unrelated to the actual key) assigned to each key.\n\nI would recommend that the keys in the keystore remain regarded as internal and for users to not directly handle them. Instead we should have geth commands for key export/import where exported files have a privacy-preserving file name and also excludes the `address` field from the JSON file content.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/172667318/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/208945663",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/2100#issuecomment-208945663",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/2100",
    "id": 208945663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODk0NTY2Mw==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-12T14:51:56Z",
    "updated_at": "2016-04-12T14:51:56Z",
    "author_association": "MEMBER",
    "body": "Open for an eternity, but this issue was finally addressed on develop.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/208945663/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
