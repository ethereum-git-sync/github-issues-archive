{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17935",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17935/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17935/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17935/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/17935",
  "id": 371127542,
  "node_id": "MDU6SXNzdWUzNzExMjc1NDI=",
  "number": 17935,
  "title": "feature request: argument for bad blocks blacklist to prevent fast-syncing to an incorrect chain ",
  "user": {
    "login": "cdetrio",
    "id": 997681,
    "node_id": "MDQ6VXNlcjk5NzY4MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/997681?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cdetrio",
    "html_url": "https://github.com/cdetrio",
    "followers_url": "https://api.github.com/users/cdetrio/followers",
    "following_url": "https://api.github.com/users/cdetrio/following{/other_user}",
    "gists_url": "https://api.github.com/users/cdetrio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cdetrio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cdetrio/subscriptions",
    "organizations_url": "https://api.github.com/users/cdetrio/orgs",
    "repos_url": "https://api.github.com/users/cdetrio/repos",
    "events_url": "https://api.github.com/users/cdetrio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cdetrio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 13,
  "created_at": "2018-10-17T15:10:18Z",
  "updated_at": "2019-01-11T12:18:10Z",
  "closed_at": "2019-01-11T12:18:10Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "During the recent Constantinople chain split on the Ropsten testnet, users experienced difficulty fast syncing to the correct chain. In a fast sync, geth will download all block headers, and then start fast syncing to the chain with the highest Total Difficulty. If the highest TD chain has an incorrect block prior to the fast sync block, geth will \"skip\" past it, leaving the client on an incorrect chain.\r\n\r\nIt would be useful if geth accepted a blacklist of block hashes that the chain _must not_ have (or alternatively, a whitelist of block hashes that the chain _must_ have), with an argument such as as `--blacklist-blockhash`. Then clients could fast sync without worrying that they will end up on the incorrect chain.\r\n",
  "closed_by": {
    "login": "holiman",
    "id": 142290,
    "node_id": "MDQ6VXNlcjE0MjI5MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holiman",
    "html_url": "https://github.com/holiman",
    "followers_url": "https://api.github.com/users/holiman/followers",
    "following_url": "https://api.github.com/users/holiman/following{/other_user}",
    "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
    "organizations_url": "https://api.github.com/users/holiman/orgs",
    "repos_url": "https://api.github.com/users/holiman/repos",
    "events_url": "https://api.github.com/users/holiman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holiman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17935/reactions",
    "total_count": 5,
    "+1": 5,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17935/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/430689551",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17935#issuecomment-430689551",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17935",
    "id": 430689551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDY4OTU1MQ==",
    "user": {
      "login": "ryanschneider",
      "id": 53520,
      "node_id": "MDQ6VXNlcjUzNTIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/53520?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanschneider",
      "html_url": "https://github.com/ryanschneider",
      "followers_url": "https://api.github.com/users/ryanschneider/followers",
      "following_url": "https://api.github.com/users/ryanschneider/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanschneider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanschneider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanschneider/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanschneider/orgs",
      "repos_url": "https://api.github.com/users/ryanschneider/repos",
      "events_url": "https://api.github.com/users/ryanschneider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanschneider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T16:06:53Z",
    "updated_at": "2018-10-17T16:06:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "This should help with #17905 and #17906 as well.  The issue in 905 is that even if a node isn't fast-syncing it still gets it's `highestBlock` value from the bad chain, so being able to reject any chains w/ a blacklisted hash should prevent them from polluting that value as well.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/430689551/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/430768678",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17935#issuecomment-430768678",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17935",
    "id": 430768678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDc2ODY3OA==",
    "user": {
      "login": "ryanschneider",
      "id": 53520,
      "node_id": "MDQ6VXNlcjUzNTIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/53520?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanschneider",
      "html_url": "https://github.com/ryanschneider",
      "followers_url": "https://api.github.com/users/ryanschneider/followers",
      "following_url": "https://api.github.com/users/ryanschneider/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanschneider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanschneider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanschneider/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanschneider/orgs",
      "repos_url": "https://api.github.com/users/ryanschneider/repos",
      "events_url": "https://api.github.com/users/ryanschneider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanschneider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T20:03:43Z",
    "updated_at": "2018-10-17T20:03:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm trying out this idea with this very heavy-handed approach:\r\n\r\nhttps://github.com/ryanschneider/go-ethereum/commit/8b5f0944fb12132cc02e076cf200c8b003def772\r\n\r\nAnd it seems to be working, my peer count is low but I haven't seen any chain jumps.\r\n\r\nBasically on connection I'm asking the peer for the block _after_ one of the known bad ones, and then checking the `.ParentHash` and rejecting any peers that give the blacklisted block.\r\n\r\nLots of bad ideas in that approach, but just wanted to see if it would help and signs point to yet.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/430768678/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/430775415",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17935#issuecomment-430775415",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17935",
    "id": 430775415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDc3NTQxNQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T20:24:33Z",
    "updated_at": "2018-10-17T20:24:33Z",
    "author_association": "MEMBER",
    "body": "Nice. What we also could try out... is to use the `BadBlocks`, which are dynamically collected, instead of using the hardcoded approach. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/430775415/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/430809961",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17935#issuecomment-430809961",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17935",
    "id": 430809961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDgwOTk2MQ==",
    "user": {
      "login": "ryanschneider",
      "id": 53520,
      "node_id": "MDQ6VXNlcjUzNTIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/53520?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanschneider",
      "html_url": "https://github.com/ryanschneider",
      "followers_url": "https://api.github.com/users/ryanschneider/followers",
      "following_url": "https://api.github.com/users/ryanschneider/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanschneider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanschneider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanschneider/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanschneider/orgs",
      "repos_url": "https://api.github.com/users/ryanschneider/repos",
      "events_url": "https://api.github.com/users/ryanschneider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanschneider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T22:21:02Z",
    "updated_at": "2018-10-17T22:21:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh ya, I like that idea.  Makes it dynamic and could protect against other scenarios too.\r\n\r\nBTW I've been squashing commits onto that branch while I test, here's the latest commit: https://github.com/ryanschneider/go-ethereum/commit/2585a8feed5d78d99bcd30332c460645900782b2",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/430809961/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/434870849",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17935#issuecomment-434870849",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17935",
    "id": 434870849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDg3MDg0OQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-31T22:34:40Z",
    "updated_at": "2018-10-31T22:34:40Z",
    "author_association": "MEMBER",
    "body": "@ryanschneider I think that's a good approach. Could you either add e..g. `StringSliceFlag` which takes e.g. `--blockhashwhitelist 123123=0xabcdefabcdefabcdeaf --blockhashwhitelist 123128=0xabcdefabcdefabcdeaf`, and make a PR, or, alternatively, make a PR of what you currently have and I will add the flag stuff. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/434870849/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/434871363",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17935#issuecomment-434871363",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17935",
    "id": 434871363,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDg3MTM2Mw==",
    "user": {
      "login": "ryanschneider",
      "id": 53520,
      "node_id": "MDQ6VXNlcjUzNTIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/53520?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanschneider",
      "html_url": "https://github.com/ryanschneider",
      "followers_url": "https://api.github.com/users/ryanschneider/followers",
      "following_url": "https://api.github.com/users/ryanschneider/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanschneider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanschneider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanschneider/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanschneider/orgs",
      "repos_url": "https://api.github.com/users/ryanschneider/repos",
      "events_url": "https://api.github.com/users/ryanschneider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanschneider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-31T22:37:00Z",
    "updated_at": "2018-10-31T22:37:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Will do.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/434871363/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/435184011",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17935#issuecomment-435184011",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17935",
    "id": 435184011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTE4NDAxMQ==",
    "user": {
      "login": "ryanschneider",
      "id": 53520,
      "node_id": "MDQ6VXNlcjUzNTIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/53520?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanschneider",
      "html_url": "https://github.com/ryanschneider",
      "followers_url": "https://api.github.com/users/ryanschneider/followers",
      "following_url": "https://api.github.com/users/ryanschneider/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanschneider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanschneider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanschneider/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanschneider/orgs",
      "repos_url": "https://api.github.com/users/ryanschneider/repos",
      "events_url": "https://api.github.com/users/ryanschneider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanschneider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-01T20:55:38Z",
    "updated_at": "2018-11-01T20:55:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry, got pulled into some other stuff yesterday, looking into this more now.  But, some questions:\r\n\r\n- Shouldn't the flag be `--blockhashblacklist`, not whitelist?  \r\n- Right now I have a very bad hack in there to skip making this test against the boot nodes, any idea how I can more cleanly determine that a peer is a boot node?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/435184011/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/435226211",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17935#issuecomment-435226211",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17935",
    "id": 435226211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTIyNjIxMQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-01T23:56:49Z",
    "updated_at": "2018-11-01T23:56:49Z",
    "author_association": "MEMBER",
    "body": "Well... I was thinking that it's easier to know where (what chain) you want to land on your fastsync, rather than where you don't want to land (in case there are several bad sidechains). Is there a case why blacklist is better?\n\nAlso, what's the problem with the bootnodes? As in, why are they exempted? Should we really sync with them if they're on a bad chain? Pure bootnodes (running the bootnode binary) doesn't even have anything to provide us.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/435226211/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/435444384",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17935#issuecomment-435444384",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17935",
    "id": 435444384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTQ0NDM4NA==",
    "user": {
      "login": "ryanschneider",
      "id": 53520,
      "node_id": "MDQ6VXNlcjUzNTIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/53520?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanschneider",
      "html_url": "https://github.com/ryanschneider",
      "followers_url": "https://api.github.com/users/ryanschneider/followers",
      "following_url": "https://api.github.com/users/ryanschneider/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanschneider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanschneider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanschneider/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanschneider/orgs",
      "repos_url": "https://api.github.com/users/ryanschneider/repos",
      "events_url": "https://api.github.com/users/ryanschneider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanschneider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-02T16:58:18Z",
    "updated_at": "2018-11-02T16:58:18Z",
    "author_association": "CONTRIBUTOR",
    "body": ">  Is there a case why blacklist is better?\r\n\r\nNope, I agree.  I think I was just thrown off when you said \"that's a good approach\" since my current commit uses black lists, but ya I totally agree that a whitelist is strictly better.\r\n\r\nIIRC, the reason I had to special case the boot nodes was that if I tried to do a `p.RequestHeadersByNumber` on a boot node the connect was dropped, so I ended up never getting any peers, but I need to double check that, as I said it was just a quick hack to get things working at the time.\r\n\r\nSo, to be clear, I think the strategy should be:\r\n\r\n- build a `whitelistedBlocks map[uint64] common.Hash` based on the `--blockhashwhitelist` arg(s), separated by `=`.\r\n- On peer connection, do a `p.RequestHeadersByNumber` for each whitelistedBlocks key.\r\n- In `handleMsg`, if `filter` is true, if `headers[0].Number.Uint64()` is in whitelistedBlocks, compare `headers[0].Hash` with the value in whitelistedBlocks.  If they differ, return an error to reject the client.\r\n\r\nOutstanding questions:\r\n- There's possibly still some logic required around boot nodes, but I need to test that.  \r\n- Currently it looks like light clients don't do the DAO fork check, should I add this new check for light clients too?  I feel like I should, but am not 100% sure.\r\n\r\nI'm going to make a new branch for this work, I don't think there's much other than concepts I want to take from my existing commit. ;)\r\n\r\nI'll make a WIP PR later today so we can continue the discussion around actual code.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/435444384/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/435458933",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17935#issuecomment-435458933",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17935",
    "id": 435458933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTQ1ODkzMw==",
    "user": {
      "login": "ryanschneider",
      "id": 53520,
      "node_id": "MDQ6VXNlcjUzNTIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/53520?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanschneider",
      "html_url": "https://github.com/ryanschneider",
      "followers_url": "https://api.github.com/users/ryanschneider/followers",
      "following_url": "https://api.github.com/users/ryanschneider/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanschneider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanschneider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanschneider/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanschneider/orgs",
      "repos_url": "https://api.github.com/users/ryanschneider/repos",
      "events_url": "https://api.github.com/users/ryanschneider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanschneider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-02T17:51:27Z",
    "updated_at": "2018-11-02T17:51:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "After thinking about it a bit, I think the `blockhashwhitelist` arg is an \"Ethereum\" option and not a networking/p2p one, so I'll put it in `eth.Config` (not in `p2p.Config`); it's almost a \"chain-selector\" on the network ID.\r\n\r\nMy rationale is in theory this option could be used for other non-p2p reasons as well (e.g. in the `import` command to verify that a chain being imported includes a specific block, not that I'm going to implement that, at least in this PR).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/435458933/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/435482172",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17935#issuecomment-435482172",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17935",
    "id": 435482172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTQ4MjE3Mg==",
    "user": {
      "login": "ryanschneider",
      "id": 53520,
      "node_id": "MDQ6VXNlcjUzNTIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/53520?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanschneider",
      "html_url": "https://github.com/ryanschneider",
      "followers_url": "https://api.github.com/users/ryanschneider/followers",
      "following_url": "https://api.github.com/users/ryanschneider/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanschneider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanschneider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanschneider/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanschneider/orgs",
      "repos_url": "https://api.github.com/users/ryanschneider/repos",
      "events_url": "https://api.github.com/users/ryanschneider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanschneider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-02T19:20:34Z",
    "updated_at": "2018-11-02T19:20:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also hitting what appears to be a bug in `StringSliceFlag`, so looking into that now too.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/435482172/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/435492344",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17935#issuecomment-435492344",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17935",
    "id": 435492344,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTQ5MjM0NA==",
    "user": {
      "login": "ryanschneider",
      "id": 53520,
      "node_id": "MDQ6VXNlcjUzNTIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/53520?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanschneider",
      "html_url": "https://github.com/ryanschneider",
      "followers_url": "https://api.github.com/users/ryanschneider/followers",
      "following_url": "https://api.github.com/users/ryanschneider/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanschneider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanschneider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanschneider/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanschneider/orgs",
      "repos_url": "https://api.github.com/users/ryanschneider/repos",
      "events_url": "https://api.github.com/users/ryanschneider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanschneider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-02T20:00:56Z",
    "updated_at": "2018-11-02T20:00:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Weird, `ctx.GlobalStringSlice(BlockHashWhitelistsFlag.Name)` seems to return a `[]string` like this:\r\n\r\n `[]string{ \"[4230605=0xc358b4fb016f7cc1402619f292c92a5e58a473ef5243db00d3c59b3b9b7cb827]\"}` (with the `[` and `]` in the value).\r\n\r\nBut `ctx.StringSlice` (not Global) returns the correct value:\r\n\r\n`[]string{ \"4230605=0xc358b4fb016f7cc1402619f292c92a5e58a473ef5243db00d3c59b3b9b7cb827\" }`\r\n\r\nStrange.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/435492344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/453499836",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/17935#issuecomment-453499836",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/17935",
    "id": 453499836,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzQ5OTgzNg==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-11T12:18:10Z",
    "updated_at": "2019-01-11T12:18:10Z",
    "author_association": "MEMBER",
    "body": "This was fixed in https://github.com/ethereum/go-ethereum/pull/18028",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/453499836/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
