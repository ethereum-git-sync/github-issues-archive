{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26161",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26161/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26161/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26161/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/26161",
  "id": 1445491416,
  "node_id": "I_kwDOAOvK985WKHLY",
  "number": 26161,
  "title": "When the `noempty` flag useful and what are the consequence of removing it",
  "user": {
    "login": "guenoledc",
    "id": 26713092,
    "node_id": "MDQ6VXNlcjI2NzEzMDky",
    "avatar_url": "https://avatars.githubusercontent.com/u/26713092?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/guenoledc",
    "html_url": "https://github.com/guenoledc",
    "followers_url": "https://api.github.com/users/guenoledc/followers",
    "following_url": "https://api.github.com/users/guenoledc/following{/other_user}",
    "gists_url": "https://api.github.com/users/guenoledc/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/guenoledc/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/guenoledc/subscriptions",
    "organizations_url": "https://api.github.com/users/guenoledc/orgs",
    "repos_url": "https://api.github.com/users/guenoledc/repos",
    "events_url": "https://api.github.com/users/guenoledc/events{/privacy}",
    "received_events_url": "https://api.github.com/users/guenoledc/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 268304226,
      "node_id": "MDU6TGFiZWwyNjgzMDQyMjY=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:docs",
      "name": "type:docs",
      "color": "fef2c0",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "rjl493456442",
    "id": 5959481,
    "node_id": "MDQ6VXNlcjU5NTk0ODE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rjl493456442",
    "html_url": "https://github.com/rjl493456442",
    "followers_url": "https://api.github.com/users/rjl493456442/followers",
    "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
    "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
    "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
    "repos_url": "https://api.github.com/users/rjl493456442/repos",
    "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2022-11-11T13:39:38Z",
  "updated_at": "2022-11-20T12:28:51Z",
  "closed_at": "2022-11-18T02:34:34Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I have done numerous research on this repo and internet and discord channel and could not figure out this question\r\n\r\nI am developing a variation of the consensus Engine and found out that there is a `noempty` parameter that is used in `worker.go` \r\n `commitWork()` function.    \r\n\r\nThere is also the `Worker.noempty` atomic int to control globally this behaviour but it is set by default to true except for development network.\r\n\r\nThese parameter seem to mean that when the value provided is `false` and `0` an empty block [gets prepared @L1134](https://github.com/ethereum/go-ethereum/blob/6d55908347cac7463dd6a2cb236f30ec26c9a121/miner/worker.go#L1134) but not saved in the state. But few [lines later @L1166](https://github.com/ethereum/go-ethereum/blob/6d55908347cac7463dd6a2cb236f30ec26c9a121/miner/worker.go#L1166) a normal block with whatever available transactions present in the pool (possibly none) gets created and saved in the state.\r\n\r\nI found @rjl493456442 comment :\r\n\r\n> Just a reminder, noempty doesn't mean it will not generate empty mining block. For example if there is no transaction in pool, then the empty block is still created. But if you set it to 1, it will alway avoid creating the \"additional\" empty mining block in advance.\r\n\r\n\r\nCan anyone explain the reason for creating an \"additional\" empty block with this piece of code and the implication of removing it ? \r\n\r\nFor my work the consequence is that the `Engine.FinalizeAndAssemble()` function is called twice for no apparent reason and create extra load.\r\n\r\nI have also raised the question on Discord https://discord.com/channels/482467812179181568/482467812816977921/1040613621492875346\r\n",
  "closed_by": {
    "login": "rjl493456442",
    "id": 5959481,
    "node_id": "MDQ6VXNlcjU5NTk0ODE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rjl493456442",
    "html_url": "https://github.com/rjl493456442",
    "followers_url": "https://api.github.com/users/rjl493456442/followers",
    "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
    "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
    "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
    "repos_url": "https://api.github.com/users/rjl493456442/repos",
    "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26161/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26161/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1311718801",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26161#issuecomment-1311718801",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26161",
    "id": 1311718801,
    "node_id": "IC_kwDOAOvK985OLz2R",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-11T13:52:16Z",
    "updated_at": "2022-11-11T13:52:16Z",
    "author_association": "MEMBER",
    "body": "The default miner behaviour is to, first of all, create (and, for pow, start mining on) an empty package. That means the gpu-miner can start working as soon as possible on the next block, to maximize the amount of time spent on non-stale payloads. \r\n\r\nAfter that, the miner updates the payload with transactions, which increases the actual miner fee (as opposed to block reward for mining a block) incurred by transactions. \r\n\r\nNow, using `noempty` means that it will skip the \"create empty work package first of all\" step. \r\n\r\nI suspect this is pretty moot now, post-merge. \r\n\r\nPS: answering off the top of my head, might not be 100% correct. @rjl493456442 please correct any errors I've  made.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1311718801/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1311746973",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26161#issuecomment-1311746973",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26161",
    "id": 1311746973,
    "node_id": "IC_kwDOAOvK985OL6ud",
    "user": {
      "login": "guenoledc",
      "id": 26713092,
      "node_id": "MDQ6VXNlcjI2NzEzMDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/26713092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guenoledc",
      "html_url": "https://github.com/guenoledc",
      "followers_url": "https://api.github.com/users/guenoledc/followers",
      "following_url": "https://api.github.com/users/guenoledc/following{/other_user}",
      "gists_url": "https://api.github.com/users/guenoledc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guenoledc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guenoledc/subscriptions",
      "organizations_url": "https://api.github.com/users/guenoledc/orgs",
      "repos_url": "https://api.github.com/users/guenoledc/repos",
      "events_url": "https://api.github.com/users/guenoledc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guenoledc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-11T14:14:02Z",
    "updated_at": "2022-11-11T14:14:02Z",
    "author_association": "NONE",
    "body": "@holiman thanks for this quick feedback\r\n\r\nSo in a Clique consensus context, this functionality becomes irrelevant, right ?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1311746973/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1311769700",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26161#issuecomment-1311769700",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26161",
    "id": 1311769700,
    "node_id": "IC_kwDOAOvK985OMARk",
    "user": {
      "login": "guenoledc",
      "id": 26713092,
      "node_id": "MDQ6VXNlcjI2NzEzMDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/26713092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guenoledc",
      "html_url": "https://github.com/guenoledc",
      "followers_url": "https://api.github.com/users/guenoledc/followers",
      "following_url": "https://api.github.com/users/guenoledc/following{/other_user}",
      "gists_url": "https://api.github.com/users/guenoledc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guenoledc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guenoledc/subscriptions",
      "organizations_url": "https://api.github.com/users/guenoledc/orgs",
      "repos_url": "https://api.github.com/users/guenoledc/repos",
      "events_url": "https://api.github.com/users/guenoledc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guenoledc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-11T14:35:33Z",
    "updated_at": "2022-11-11T14:35:33Z",
    "author_association": "NONE",
    "body": "@holiman @rjl493456442 \r\n\r\nIf I change the `Miner.New()` in `miner.go` as follow would that make the core developper ok ?\r\n\r\n```golang\r\n\r\nfunc New(eth Backend, config *Config, chainConfig *params.ChainConfig, mux *event.TypeMux, engine consensus.Engine, isLocalBlock func(header *types.Header) bool) *Miner {\r\n\tminer := &Miner{\r\n\t\teth:     eth,\r\n\t\tmux:     mux,\r\n\t\tengine:  engine,\r\n\t\texitCh:  make(chan struct{}),\r\n\t\tstartCh: make(chan common.Address),\r\n\t\tstopCh:  make(chan struct{}),\r\n\t\tworker:  newWorker(config, chainConfig, engine, eth, mux, isLocalBlock, true),\r\n\t}\r\n\r\n\tif _, ok := miner.engine.(consensus.PoW); !ok {\r\n\t\t// We are not in the PoW engine so we don't need the preseal capacity\r\n\t\tminer.DisablePreseal()\r\n\t}\r\n\r\n\tminer.wg.Add(1)\r\n\tgo miner.update()\r\n\treturn miner\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1311769700/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1311776464",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26161#issuecomment-1311776464",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26161",
    "id": 1311776464,
    "node_id": "IC_kwDOAOvK985OMB7Q",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-11T14:42:34Z",
    "updated_at": "2022-11-11T14:42:34Z",
    "author_association": "MEMBER",
    "body": "Not necessarily. We don't want to complicate things. If you can make the change into a simplification instead, somehow, then maybe. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1311776464/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1312025632",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26161#issuecomment-1312025632",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26161",
    "id": 1312025632,
    "node_id": "IC_kwDOAOvK985OM-wg",
    "user": {
      "login": "guenoledc",
      "id": 26713092,
      "node_id": "MDQ6VXNlcjI2NzEzMDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/26713092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guenoledc",
      "html_url": "https://github.com/guenoledc",
      "followers_url": "https://api.github.com/users/guenoledc/followers",
      "following_url": "https://api.github.com/users/guenoledc/following{/other_user}",
      "gists_url": "https://api.github.com/users/guenoledc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guenoledc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guenoledc/subscriptions",
      "organizations_url": "https://api.github.com/users/guenoledc/orgs",
      "repos_url": "https://api.github.com/users/guenoledc/repos",
      "events_url": "https://api.github.com/users/guenoledc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guenoledc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-11T18:14:49Z",
    "updated_at": "2022-11-11T18:14:49Z",
    "author_association": "NONE",
    "body": "I see, but the challenge is high ☺️\r\n\r\nNot knowing enough the mechanics of early GPU processing nor the impact of the Merge on the code, I feel I won't be able.\r\n\r\nThanks anyhow for responding and maybe we'll talk later on this subject or another when my work is done.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1312025632/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1312093971",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26161#issuecomment-1312093971",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26161",
    "id": 1312093971,
    "node_id": "IC_kwDOAOvK985ONPcT",
    "user": {
      "login": "guenoledc",
      "id": 26713092,
      "node_id": "MDQ6VXNlcjI2NzEzMDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/26713092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guenoledc",
      "html_url": "https://github.com/guenoledc",
      "followers_url": "https://api.github.com/users/guenoledc/followers",
      "following_url": "https://api.github.com/users/guenoledc/following{/other_user}",
      "gists_url": "https://api.github.com/users/guenoledc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guenoledc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guenoledc/subscriptions",
      "organizations_url": "https://api.github.com/users/guenoledc/orgs",
      "repos_url": "https://api.github.com/users/guenoledc/repos",
      "events_url": "https://api.github.com/users/guenoledc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guenoledc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-11T19:21:39Z",
    "updated_at": "2022-11-11T19:21:39Z",
    "author_association": "NONE",
    "body": "And what about in `backend.go` instead of changing the Miner constructor?\r\n\r\n```golang\r\nfunc (s *Ethereum) StartMining(threads int) error {\r\n...\r\n\t\tvar cli *clique.Clique\r\n...\r\n\t\tif cli != nil {\r\n\t\t\ts.miner.DisablePreseal() // Added here to deactivate the preseal function for clique as it is not needed\r\n\t\t\twallet, err := s.accountManager.Find(accounts.Account{Address: eb})\r\n\t\t\tif wallet == nil || err != nil {\r\n\t\t\t\tlog.Error(\"Etherbase account unavailable locally\", \"err\", err)\r\n\t\t\t\treturn fmt.Errorf(\"signer missing: %v\", err)\r\n\t\t\t}\r\n\t\t\tcli.Authorize(eb, wallet.SignData)\r\n\t\t}\r\n\r\n\r\n....\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1312093971/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1319469602",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26161#issuecomment-1319469602",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26161",
    "id": 1319469602,
    "node_id": "IC_kwDOAOvK985OpYIi",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-18T02:34:34Z",
    "updated_at": "2022-11-18T02:34:34Z",
    "author_association": "MEMBER",
    "body": "@guenoledc Yeah, You can explicitly disable \"pre-sealing\" via call `miner. DisablePreseal` as you did in your own project. But we don't want to include the change to our codebase, since this part of logic needs to be rewrote a bit anyway.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1319469602/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1319651036",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26161#issuecomment-1319651036",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26161",
    "id": 1319651036,
    "node_id": "IC_kwDOAOvK985OqEbc",
    "user": {
      "login": "guenoledc",
      "id": 26713092,
      "node_id": "MDQ6VXNlcjI2NzEzMDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/26713092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guenoledc",
      "html_url": "https://github.com/guenoledc",
      "followers_url": "https://api.github.com/users/guenoledc/followers",
      "following_url": "https://api.github.com/users/guenoledc/following{/other_user}",
      "gists_url": "https://api.github.com/users/guenoledc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guenoledc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guenoledc/subscriptions",
      "organizations_url": "https://api.github.com/users/guenoledc/orgs",
      "repos_url": "https://api.github.com/users/guenoledc/repos",
      "events_url": "https://api.github.com/users/guenoledc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guenoledc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-18T07:40:30Z",
    "updated_at": "2022-11-18T07:40:30Z",
    "author_association": "NONE",
    "body": "Hello @rjl493456442 \r\n\r\nthanks for the feedback.\r\n\r\nCould you also clarify how your team will manage change proposal (say I want to propose an additional consensus derived from clique but keeping clique in the codebase) ?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1319651036/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1319700214",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26161#issuecomment-1319700214",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26161",
    "id": 1319700214,
    "node_id": "IC_kwDOAOvK985OqQb2",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-18T08:38:19Z",
    "updated_at": "2022-11-18T08:38:19Z",
    "author_association": "MEMBER",
    "body": "> Could you also clarify how your team will manage change proposal \r\n\r\nHard to say without a concrete proposal, but generally, we are averse to accepting maintainance overhead, e.g. in the form of code complexity, purely for the benefit of non-ethereum-mainnet downstream projects. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1319700214/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1319973668",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26161#issuecomment-1319973668",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26161",
    "id": 1319973668,
    "node_id": "IC_kwDOAOvK985OrTMk",
    "user": {
      "login": "guenoledc",
      "id": 26713092,
      "node_id": "MDQ6VXNlcjI2NzEzMDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/26713092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guenoledc",
      "html_url": "https://github.com/guenoledc",
      "followers_url": "https://api.github.com/users/guenoledc/followers",
      "following_url": "https://api.github.com/users/guenoledc/following{/other_user}",
      "gists_url": "https://api.github.com/users/guenoledc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guenoledc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guenoledc/subscriptions",
      "organizations_url": "https://api.github.com/users/guenoledc/orgs",
      "repos_url": "https://api.github.com/users/guenoledc/repos",
      "events_url": "https://api.github.com/users/guenoledc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guenoledc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-18T13:08:38Z",
    "updated_at": "2022-11-18T13:08:51Z",
    "author_association": "NONE",
    "body": ">  in the form of code complexity, purely for the benefit of non-ethereum-mainnet downstream projects.\r\n\r\nI see then I suppose, given that our work intend to be used in a // network running over a modified clique, your don't want this in your codebase (understandable)\r\n\r\nSo what we should do is maintain a fork of your repo and whenever you do a release merge it with our repo to benefit from the latest fixes on the EVM, network protocol etc.\r\n\r\nRight ?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1319973668/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1321120395",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/26161#issuecomment-1321120395",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/26161",
    "id": 1321120395,
    "node_id": "IC_kwDOAOvK985OvrKL",
    "user": {
      "login": "rjl493456442",
      "id": 5959481,
      "node_id": "MDQ6VXNlcjU5NTk0ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5959481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rjl493456442",
      "html_url": "https://github.com/rjl493456442",
      "followers_url": "https://api.github.com/users/rjl493456442/followers",
      "following_url": "https://api.github.com/users/rjl493456442/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjl493456442/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rjl493456442/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjl493456442/subscriptions",
      "organizations_url": "https://api.github.com/users/rjl493456442/orgs",
      "repos_url": "https://api.github.com/users/rjl493456442/repos",
      "events_url": "https://api.github.com/users/rjl493456442/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rjl493456442/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-20T12:28:51Z",
    "updated_at": "2022-11-20T12:28:51Z",
    "author_association": "MEMBER",
    "body": "@guenoledc Exactly. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1321120395/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
