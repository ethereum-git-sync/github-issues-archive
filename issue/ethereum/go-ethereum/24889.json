{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24889",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24889/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24889/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24889/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/24889",
  "id": 1237663074,
  "node_id": "I_kwDOAOvK985JxT1i",
  "number": 24889,
  "title": "subscription queue overflow after a few minutes of listening for pending transactions",
  "user": {
    "login": "rtunazzz",
    "id": 38296319,
    "node_id": "MDQ6VXNlcjM4Mjk2MzE5",
    "avatar_url": "https://avatars.githubusercontent.com/u/38296319?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rtunazzz",
    "html_url": "https://github.com/rtunazzz",
    "followers_url": "https://api.github.com/users/rtunazzz/followers",
    "following_url": "https://api.github.com/users/rtunazzz/following{/other_user}",
    "gists_url": "https://api.github.com/users/rtunazzz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rtunazzz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rtunazzz/subscriptions",
    "organizations_url": "https://api.github.com/users/rtunazzz/orgs",
    "repos_url": "https://api.github.com/users/rtunazzz/repos",
    "events_url": "https://api.github.com/users/rtunazzz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rtunazzz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 268304226,
      "node_id": "MDU6TGFiZWwyNjgzMDQyMjY=",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:docs",
      "name": "type:docs",
      "color": "fef2c0",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-05-16T20:13:25Z",
  "updated_at": "2022-05-17T07:07:53Z",
  "closed_at": "2022-05-17T07:07:53Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hello there!\r\n\r\nI'm fairly new to Go but not so new to Web3 and dApps. I am trying to create a simple transaction watcher that will notify a user about ongoing transactions from their address.\r\n\r\nI've asked about this in both the [ETH stack exchange](https://ethereum.stackexchange.com/questions/127645/subscription-queue-overflow-error-after-a-few-minutes-of-being-subscribed-to-n) and discord but haven't received any responses. I've also tried to search around but unfortunately, I couldn't find anyone with a similar issue to mine.\r\n\r\nThe issue I'm having is - **after a couple of minutes (5-10mins usually) of runtime, I get hit with a `subscription queue overflow`**. Clearly, the subscription buffer is filled within those few minutes which raises that error but how is it possible that the buffer gets overflown even when I'm constantly looping over the channel and taking out new hashes?\r\n\r\nAnyway, here's a code example:\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n    \"context\"\r\n    \"log\"\r\n    \"math/big\"\r\n    \"strings\"\r\n\r\n    \"github.com/ethereum/go-ethereum/common\"\r\n    \"github.com/ethereum/go-ethereum/core/types\"\r\n    \"github.com/ethereum/go-ethereum/ethclient\"\r\n    \"github.com/ethereum/go-ethereum/rpc\"\r\n)\r\n\r\nfunc main() {\r\n    rpcUrl := \"wss://eth-mainnet.alchemyapi.io/v2/xxx\" // removed my full RPC url\r\n    myAddress := \"0x000\" // removed my address\r\n\r\n    // initialize clients\r\n    client, _ := rpc.Dial(rpcUrl)\r\n    ethClient, _ := ethclient.Dial(rpcUrl)\r\n    chainID, _ := ethClient.NetworkID(context.Background())\r\n\r\n    log.Printf(\"[%s] ETH Client initialized.\", rpcUrl)\r\n\r\n    // initialize hash channel and create subscription\r\n    txCh := make(chan common.Hash)\r\n    sub, _ := client.EthSubscribe(context.Background(), txCh, \"newPendingTransactions\")\r\n    defer sub.Unsubscribe()\r\n\r\n    log.Printf(\"Listening to pending transactions...\")\r\n\r\n    for {\r\n        select {\r\n        case err := <-sub.Err():\r\n            // this here prints the subscription queue overflow after a couple of minutes\r\n            log.Fatal(\"[SUBSCRIPTION] Fatal error:\", err)\r\n        case txHash := <-txCh:\r\n            // initialize hash channel and create subscription\r\n            tx, isPending, err := ethClient.TransactionByHash(context.Background(), txHash)\r\n            if err != nil {\r\n                log.Printf(\"[%s] Error while getting tx:%s\\n\", txHash, err)\r\n                continue\r\n            }\r\n            log.Printf(\"[%d/%d] [SUBSCRIPTION] Received hash %s\\n\", len(txCh), cap(txCh), txHash)\r\n            msg, err := tx.AsMessage(types.LatestSignerForChainID(chainID), big.NewInt(1))\r\n            if err != nil {\r\n                log.Fatal(isPending, err)\r\n                continue\r\n            }\r\n\r\n            if strings.EqualFold(msg.From().Hex(), myAddress) {\r\n                log.Printf(\"[%s] [%s] New outgoing transaction, target address: %s\\n\", myAddress, txHash, msg.To().Hex())\r\n            }\r\n        }\r\n    }\r\n}\r\n```",
  "closed_by": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24889/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24889/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1128495003",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24889#issuecomment-1128495003",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24889",
    "id": 1128495003,
    "node_id": "IC_kwDOAOvK985DQ3eb",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-17T07:07:53Z",
    "updated_at": "2022-05-17T07:07:53Z",
    "author_association": "MEMBER",
    "body": "You are doing a query to retrieve each transaction, which takes time. My hunch is that pending transactions are announced faster than how you can pull them one-by-one via `ethClient.TransactionByHash`. You should try just printing the hashes for starters and see if there's some hang there.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1128495003/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
