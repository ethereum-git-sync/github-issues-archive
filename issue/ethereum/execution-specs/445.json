{
  "url": "https://api.github.com/repos/ethereum/execution-specs/issues/445",
  "repository_url": "https://api.github.com/repos/ethereum/execution-specs",
  "labels_url": "https://api.github.com/repos/ethereum/execution-specs/issues/445/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/execution-specs/issues/445/comments",
  "events_url": "https://api.github.com/repos/ethereum/execution-specs/issues/445/events",
  "html_url": "https://github.com/ethereum/execution-specs/issues/445",
  "id": 1123411271,
  "node_id": "I_kwDOERgWss5C9eVH",
  "number": 445,
  "title": "`ecrecover` doesn't handle truncated calldata correctly",
  "user": {
    "login": "SamWilsn",
    "id": 57262657,
    "node_id": "MDQ6VXNlcjU3MjYyNjU3",
    "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/SamWilsn",
    "html_url": "https://github.com/SamWilsn",
    "followers_url": "https://api.github.com/users/SamWilsn/followers",
    "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
    "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
    "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
    "repos_url": "https://api.github.com/users/SamWilsn/repos",
    "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3146414934,
      "node_id": "MDU6TGFiZWwzMTQ2NDE0OTM0",
      "url": "https://api.github.com/repos/ethereum/execution-specs/labels/A-spec",
      "name": "A-spec",
      "color": "FBCA04",
      "default": false,
      "description": "Area: specification"
    },
    {
      "id": 3146433936,
      "node_id": "MDU6TGFiZWwzMTQ2NDMzOTM2",
      "url": "https://api.github.com/repos/ethereum/execution-specs/labels/C-bug",
      "name": "C-bug",
      "color": "C5DEF5",
      "default": false,
      "description": "Category: this is a bug, deviation, or other problem."
    },
    {
      "id": 3146438939,
      "node_id": "MDU6TGFiZWwzMTQ2NDM4OTM5",
      "url": "https://api.github.com/repos/ethereum/execution-specs/labels/E-medium",
      "name": "E-medium",
      "color": "0E8A16",
      "default": false,
      "description": "Experience: of moderate difficulty"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-02-03T18:19:06Z",
  "updated_at": "2022-02-25T19:36:02Z",
  "closed_at": "2022-02-25T19:36:02Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Metadata\r\n\r\n* **Hardfork**: spurious dragon (though probably others too)\r\n\r\n### What was wrong?\r\n\r\nIf the calldata provided to `ecrecover` is shorter than 128 bytes, the computed address is incorrect.\r\n\r\nHere is a demo contract that passes on geth, but reverts with the specs:\r\n\r\n```solidity\r\n// SPDX-License-Identifier: CC0-1.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract Test {\r\n    constructor() {\r\n        uint256 called;\r\n        bytes32 account;\r\n\r\n        bytes memory signature = hex\"79d2457a6ebeb06cf66f9f98622383ec60551b26f807bc12e3d5c94098726ed83089d92babdf93a0e14c3e71a30aca5e413e20031c6d46cb4eecdea1453d8c951b\";\r\n        bytes32 message = keccak256(hex\"626f6f70\");\r\n\r\n        bytes32 r;\r\n        bytes32 s;\r\n        uint8 v;\r\n        assembly {\r\n            r := mload(add(signature, 0x20))\r\n            s := mload(add(signature, 0x40))\r\n            v := byte(0, mload(add(signature, 0x60)))\r\n        }\r\n    \r\n        bytes memory input = abi.encodePacked(message, uint256(v), r, s);\r\n\r\n        assembly {\r\n            let backup := mload(0)\r\n            called := call(\r\n                gas(),\r\n                0x01,\r\n                0,\r\n                add(input, 0x20),\r\n                120,\r\n                0,\r\n                32\r\n            )\r\n            account := mload(0)\r\n            mstore(0, backup)\r\n        }\r\n        \r\n        require(called == 1, \"ecrecover failed\");\r\n        require(account == hex\"0000000000000000000000004c9aa3db09a35aead685d7129af4cc9415f2c6f4\", \"wrong address\");\r\n    }\r\n}\r\n```",
  "closed_by": {
    "login": "SamWilsn",
    "id": 57262657,
    "node_id": "MDQ6VXNlcjU3MjYyNjU3",
    "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/SamWilsn",
    "html_url": "https://github.com/SamWilsn",
    "followers_url": "https://api.github.com/users/SamWilsn/followers",
    "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
    "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
    "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
    "repos_url": "https://api.github.com/users/SamWilsn/repos",
    "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/445/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/execution-specs/issues/445/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1031741870",
    "html_url": "https://github.com/ethereum/execution-specs/issues/445#issuecomment-1031741870",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/445",
    "id": 1031741870,
    "node_id": "IC_kwDOERgWss49fyGu",
    "user": {
      "login": "gurukamath",
      "id": 48196632,
      "node_id": "MDQ6VXNlcjQ4MTk2NjMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48196632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gurukamath",
      "html_url": "https://github.com/gurukamath",
      "followers_url": "https://api.github.com/users/gurukamath/followers",
      "following_url": "https://api.github.com/users/gurukamath/following{/other_user}",
      "gists_url": "https://api.github.com/users/gurukamath/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gurukamath/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gurukamath/subscriptions",
      "organizations_url": "https://api.github.com/users/gurukamath/orgs",
      "repos_url": "https://api.github.com/users/gurukamath/repos",
      "events_url": "https://api.github.com/users/gurukamath/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gurukamath/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-07T17:44:40Z",
    "updated_at": "2022-02-07T17:44:50Z",
    "author_association": "COLLABORATOR",
    "body": "Interesting. How would one go about replicating this locally using the above contract?\r\n\r\n> Here is a demo contract that passes on geth, but reverts with the specs\r\n\r\nSpecifically, how would I go about verifying this statement locally? Just curious to know.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1031741870/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
