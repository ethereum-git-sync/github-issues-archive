{
  "url": "https://api.github.com/repos/ethereum/execution-specs/issues/587",
  "repository_url": "https://api.github.com/repos/ethereum/execution-specs",
  "labels_url": "https://api.github.com/repos/ethereum/execution-specs/issues/587/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/execution-specs/issues/587/comments",
  "events_url": "https://api.github.com/repos/ethereum/execution-specs/issues/587/events",
  "html_url": "https://github.com/ethereum/execution-specs/issues/587",
  "id": 1340412242,
  "node_id": "I_kwDOERgWss5P5RFS",
  "number": 587,
  "title": "Sender balance may not be checked when sending a value",
  "user": {
    "login": "SamWilsn",
    "id": 57262657,
    "node_id": "MDQ6VXNlcjU3MjYyNjU3",
    "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/SamWilsn",
    "html_url": "https://github.com/SamWilsn",
    "followers_url": "https://api.github.com/users/SamWilsn/followers",
    "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
    "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
    "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
    "repos_url": "https://api.github.com/users/SamWilsn/repos",
    "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3146414934,
      "node_id": "MDU6TGFiZWwzMTQ2NDE0OTM0",
      "url": "https://api.github.com/repos/ethereum/execution-specs/labels/A-spec",
      "name": "A-spec",
      "color": "FBCA04",
      "default": false,
      "description": "Area: specification"
    },
    {
      "id": 3146433936,
      "node_id": "MDU6TGFiZWwzMTQ2NDMzOTM2",
      "url": "https://api.github.com/repos/ethereum/execution-specs/labels/C-bug",
      "name": "C-bug",
      "color": "C5DEF5",
      "default": false,
      "description": "Category: this is a bug, deviation, or other problem."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 14,
  "created_at": "2022-08-16T14:06:36Z",
  "updated_at": "2022-09-16T03:04:30Z",
  "closed_at": "2022-09-16T03:04:30Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What was wrong?\r\n\r\n> Hi, I've been reading the berlin execution specs in conjunction with the berlin yellow paper and noticed a discrepancy. The execution-specs only invalidate the block if the sender balance can cover the up-front gas_fee:\r\nhttps://github.com/ethereum/execution-specs/blob/cc697f256d281476b9c9f810542e84fb78be2505/src/ethereum/berlin/spec.py#L599-L601 \r\nHowever, in the YP (and client implementations), the tx.value is also added to the gas_fee for this check: https://github.com/ethereum/yellowpaper/blob/7251f10f25fc2a340c51c57e4a71970b525c0691/Paper.tex#L708-L711\r\n>\r\n> A check is done later as part of the EVM https://github.com/ethereum/execution-specs/blob/cc697f256d281476b9c9f810542e84fb78be2505/src/ethereum/berlin/vm/interpreter.py#L239-L243 which can raise an InsufficientFunds exception.\r\n> However I believe this results in an exception which sets the gas to 0, which seems like a significant difference compared to the transaction being recognised as invalid earlier.\r\n>\r\n> Have I missed something here?\r\n\r\n### Additional Context\r\n\r\n[Reported by siladu on Discord](https://discord.com/channels/595666850260713488/856943705209569291/1008983249445474304).\r\n",
  "closed_by": {
    "login": "SamWilsn",
    "id": 57262657,
    "node_id": "MDQ6VXNlcjU3MjYyNjU3",
    "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/SamWilsn",
    "html_url": "https://github.com/SamWilsn",
    "followers_url": "https://api.github.com/users/SamWilsn/followers",
    "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
    "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
    "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
    "repos_url": "https://api.github.com/users/SamWilsn/repos",
    "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/587/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/execution-specs/issues/587/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1216764518",
    "html_url": "https://github.com/ethereum/execution-specs/issues/587#issuecomment-1216764518",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/587",
    "id": 1216764518,
    "node_id": "IC_kwDOERgWss5Ihlpm",
    "user": {
      "login": "petertdavies",
      "id": 8127356,
      "node_id": "MDQ6VXNlcjgxMjczNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8127356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertdavies",
      "html_url": "https://github.com/petertdavies",
      "followers_url": "https://api.github.com/users/petertdavies/followers",
      "following_url": "https://api.github.com/users/petertdavies/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertdavies/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertdavies/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertdavies/subscriptions",
      "organizations_url": "https://api.github.com/users/petertdavies/orgs",
      "repos_url": "https://api.github.com/users/petertdavies/repos",
      "events_url": "https://api.github.com/users/petertdavies/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertdavies/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-16T15:04:27Z",
    "updated_at": "2022-08-16T15:04:27Z",
    "author_association": "COLLABORATOR",
    "body": "siladu is correct that there is a bug here.\r\n\r\nAs it happens the `InsufficientFunds` exception doesn't get caught anywhere and so the process will terminate. However `InsufficientFunds` is not a subclass of `InvalidBlock` and isn't an acceptable way of marking a block invalid. The testsuite would correctly fail if an invalid block test existed for this case, but there doesn't seem to be one.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1216764518/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1216778175",
    "html_url": "https://github.com/ethereum/execution-specs/issues/587#issuecomment-1216778175",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/587",
    "id": 1216778175,
    "node_id": "IC_kwDOERgWss5Iho-_",
    "user": {
      "login": "SamWilsn",
      "id": 57262657,
      "node_id": "MDQ6VXNlcjU3MjYyNjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamWilsn",
      "html_url": "https://github.com/SamWilsn",
      "followers_url": "https://api.github.com/users/SamWilsn/followers",
      "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
      "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
      "repos_url": "https://api.github.com/users/SamWilsn/repos",
      "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-16T15:15:22Z",
    "updated_at": "2022-08-16T15:15:22Z",
    "author_association": "MEMBER",
    "body": "> However `InsufficientFunds` is not a subclass of `InvalidBlock` and isn't an acceptable way of marking a block invalid.\r\n\r\nThis seems a bit odd. `CALL`, `CALLCODE`, `CREATE`, and `CREATE2` all check for sender balance and don't raise `InsufficientFunds` exceptions.\r\n\r\nIs the correct play here to remove `InsufficientFunds` from the vm entirely?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1216778175/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1216796258",
    "html_url": "https://github.com/ethereum/execution-specs/issues/587#issuecomment-1216796258",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/587",
    "id": 1216796258,
    "node_id": "IC_kwDOERgWss5IhtZi",
    "user": {
      "login": "petertdavies",
      "id": 8127356,
      "node_id": "MDQ6VXNlcjgxMjczNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8127356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertdavies",
      "html_url": "https://github.com/petertdavies",
      "followers_url": "https://api.github.com/users/petertdavies/followers",
      "following_url": "https://api.github.com/users/petertdavies/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertdavies/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertdavies/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertdavies/subscriptions",
      "organizations_url": "https://api.github.com/users/petertdavies/orgs",
      "repos_url": "https://api.github.com/users/petertdavies/repos",
      "events_url": "https://api.github.com/users/petertdavies/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertdavies/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-16T15:28:49Z",
    "updated_at": "2022-08-16T15:28:49Z",
    "author_association": "COLLABORATOR",
    "body": "> Is the correct play here to remove InsufficientFunds from the vm entirely?\r\n\r\nBoth the funds check and the stack depth check in `process_message()` are redundant and should go. All subclasses of `ExceptionalHalt` are cosmetic, I don't have any opinions on which ones should exist.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1216796258/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1216818744",
    "html_url": "https://github.com/ethereum/execution-specs/issues/587#issuecomment-1216818744",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/587",
    "id": 1216818744,
    "node_id": "IC_kwDOERgWss5Ihy44",
    "user": {
      "login": "SamWilsn",
      "id": 57262657,
      "node_id": "MDQ6VXNlcjU3MjYyNjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamWilsn",
      "html_url": "https://github.com/SamWilsn",
      "followers_url": "https://api.github.com/users/SamWilsn/followers",
      "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
      "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
      "repos_url": "https://api.github.com/users/SamWilsn/repos",
      "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-16T15:45:43Z",
    "updated_at": "2022-08-16T15:45:43Z",
    "author_association": "MEMBER",
    "body": "> Both the funds check and the stack depth check in `process_message()` are redundant and should go.\r\n\r\nI think both can be converted to debug `assert`s.\r\n\r\n\r\n\r\n> All subclasses of `ExceptionalHalt` are cosmetic, I don't have any opinions on which ones should exist.\r\n\r\nMore specifically I was asking to double check my understanding that there isn't actually ever an exceptional halt (in the yellow paper sense) caused by insufficient funds: either the instruction fails but execution continues, or the transaction is invalid.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1216818744/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1216918445",
    "html_url": "https://github.com/ethereum/execution-specs/issues/587#issuecomment-1216918445",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/587",
    "id": 1216918445,
    "node_id": "IC_kwDOERgWss5IiLOt",
    "user": {
      "login": "SamWilsn",
      "id": 57262657,
      "node_id": "MDQ6VXNlcjU3MjYyNjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamWilsn",
      "html_url": "https://github.com/SamWilsn",
      "followers_url": "https://api.github.com/users/SamWilsn/followers",
      "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
      "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
      "repos_url": "https://api.github.com/users/SamWilsn/repos",
      "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-16T17:10:26Z",
    "updated_at": "2022-08-16T17:10:42Z",
    "author_association": "MEMBER",
    "body": "Not a single test hits the condition in Berlin: https://app.codecov.io/gh/ethereum/execution-specs/blob/master/src/ethereum/berlin/vm/interpreter.py\r\n\r\nTime to set up test filling I guess :upside_down_face: ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1216918445/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1216983733",
    "html_url": "https://github.com/ethereum/execution-specs/issues/587#issuecomment-1216983733",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/587",
    "id": 1216983733,
    "node_id": "IC_kwDOERgWss5IibK1",
    "user": {
      "login": "gurukamath",
      "id": 48196632,
      "node_id": "MDQ6VXNlcjQ4MTk2NjMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48196632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gurukamath",
      "html_url": "https://github.com/gurukamath",
      "followers_url": "https://api.github.com/users/gurukamath/followers",
      "following_url": "https://api.github.com/users/gurukamath/following{/other_user}",
      "gists_url": "https://api.github.com/users/gurukamath/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gurukamath/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gurukamath/subscriptions",
      "organizations_url": "https://api.github.com/users/gurukamath/orgs",
      "repos_url": "https://api.github.com/users/gurukamath/repos",
      "events_url": "https://api.github.com/users/gurukamath/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gurukamath/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-16T18:12:44Z",
    "updated_at": "2022-08-16T18:12:44Z",
    "author_association": "COLLABORATOR",
    "body": "Perhaps the [Invalid Blocks Tests](https://github.com/ethereum/tests/tree/005931a700d4e4c4fd9e0d158771484403e7cb19/BlockchainTests/InvalidBlocks) need to have a group of tests for invalid transactions.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1216983733/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1218590434",
    "html_url": "https://github.com/ethereum/execution-specs/issues/587#issuecomment-1218590434",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/587",
    "id": 1218590434,
    "node_id": "IC_kwDOERgWss5Iojbi",
    "user": {
      "login": "SamWilsn",
      "id": 57262657,
      "node_id": "MDQ6VXNlcjU3MjYyNjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamWilsn",
      "html_url": "https://github.com/SamWilsn",
      "followers_url": "https://api.github.com/users/SamWilsn/followers",
      "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
      "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
      "repos_url": "https://api.github.com/users/SamWilsn/repos",
      "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-17T23:01:53Z",
    "updated_at": "2022-08-17T23:01:53Z",
    "author_association": "MEMBER",
    "body": "I ended up writing a `BlockchainTests/ValidBlocks/bcStateTests` test that uses `expectException`. Do we not support those tests?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1218590434/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1219037640",
    "html_url": "https://github.com/ethereum/execution-specs/issues/587#issuecomment-1219037640",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/587",
    "id": 1219037640,
    "node_id": "IC_kwDOERgWss5IqQnI",
    "user": {
      "login": "gurukamath",
      "id": 48196632,
      "node_id": "MDQ6VXNlcjQ4MTk2NjMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48196632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gurukamath",
      "html_url": "https://github.com/gurukamath",
      "followers_url": "https://api.github.com/users/gurukamath/followers",
      "following_url": "https://api.github.com/users/gurukamath/following{/other_user}",
      "gists_url": "https://api.github.com/users/gurukamath/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gurukamath/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gurukamath/subscriptions",
      "organizations_url": "https://api.github.com/users/gurukamath/orgs",
      "repos_url": "https://api.github.com/users/gurukamath/repos",
      "events_url": "https://api.github.com/users/gurukamath/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gurukamath/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-18T04:54:40Z",
    "updated_at": "2022-08-18T04:54:40Z",
    "author_association": "COLLABORATOR",
    "body": "We do support [specific ones](https://github.com/ethereum/execution-specs/blob/cc697f256d281476b9c9f810542e84fb78be2505/tests/berlin/test_state_transition.py#L77). But these are the ones that are not expected to fail/except.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1219037640/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1219101508",
    "html_url": "https://github.com/ethereum/execution-specs/issues/587#issuecomment-1219101508",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/587",
    "id": 1219101508,
    "node_id": "IC_kwDOERgWss5IqgNE",
    "user": {
      "login": "chfast",
      "id": 573380,
      "node_id": "MDQ6VXNlcjU3MzM4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chfast",
      "html_url": "https://github.com/chfast",
      "followers_url": "https://api.github.com/users/chfast/followers",
      "following_url": "https://api.github.com/users/chfast/following{/other_user}",
      "gists_url": "https://api.github.com/users/chfast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chfast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chfast/subscriptions",
      "organizations_url": "https://api.github.com/users/chfast/orgs",
      "repos_url": "https://api.github.com/users/chfast/repos",
      "events_url": "https://api.github.com/users/chfast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chfast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-18T06:49:43Z",
    "updated_at": "2022-08-18T06:49:43Z",
    "author_association": "MEMBER",
    "body": "Can we have a state test for this case?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1219101508/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1230957591",
    "html_url": "https://github.com/ethereum/execution-specs/issues/587#issuecomment-1230957591",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/587",
    "id": 1230957591,
    "node_id": "IC_kwDOERgWss5JXuwX",
    "user": {
      "login": "SamWilsn",
      "id": 57262657,
      "node_id": "MDQ6VXNlcjU3MjYyNjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamWilsn",
      "html_url": "https://github.com/SamWilsn",
      "followers_url": "https://api.github.com/users/SamWilsn/followers",
      "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
      "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
      "repos_url": "https://api.github.com/users/SamWilsn/repos",
      "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-29T23:05:15Z",
    "updated_at": "2022-08-29T23:05:15Z",
    "author_association": "MEMBER",
    "body": "> Can we have a state test for this case?\r\n\r\nI have no idea, I'm basically just guessing with `retesteth` :sweat_smile: \r\n\r\n> Perhaps the [Invalid Blocks Tests](https://github.com/ethereum/tests/tree/005931a700d4e4c4fd9e0d158771484403e7cb19/BlockchainTests/InvalidBlocks) need to have a group of tests for invalid transactions.\r\n\r\nNo luck here either. The transaction doesn't make it into the block after RLP encoding. I'll try writing a pure Python test for it next.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1230957591/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1238708466",
    "html_url": "https://github.com/ethereum/execution-specs/issues/587#issuecomment-1238708466",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/587",
    "id": 1238708466,
    "node_id": "IC_kwDOERgWss5J1TDy",
    "user": {
      "login": "SamWilsn",
      "id": 57262657,
      "node_id": "MDQ6VXNlcjU3MjYyNjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamWilsn",
      "html_url": "https://github.com/SamWilsn",
      "followers_url": "https://api.github.com/users/SamWilsn/followers",
      "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
      "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
      "repos_url": "https://api.github.com/users/SamWilsn/repos",
      "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-06T22:18:06Z",
    "updated_at": "2022-09-06T22:18:06Z",
    "author_association": "MEMBER",
    "body": "Looks like this isn't a bug per se. Instead of raising the exception at the beginning of the transaction, it was buried inside the vm. #600 moves things around to make it more clear.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1238708466/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1238719676",
    "html_url": "https://github.com/ethereum/execution-specs/issues/587#issuecomment-1238719676",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/587",
    "id": 1238719676,
    "node_id": "IC_kwDOERgWss5J1Vy8",
    "user": {
      "login": "gurukamath",
      "id": 48196632,
      "node_id": "MDQ6VXNlcjQ4MTk2NjMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48196632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gurukamath",
      "html_url": "https://github.com/gurukamath",
      "followers_url": "https://api.github.com/users/gurukamath/followers",
      "following_url": "https://api.github.com/users/gurukamath/following{/other_user}",
      "gists_url": "https://api.github.com/users/gurukamath/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gurukamath/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gurukamath/subscriptions",
      "organizations_url": "https://api.github.com/users/gurukamath/orgs",
      "repos_url": "https://api.github.com/users/gurukamath/repos",
      "events_url": "https://api.github.com/users/gurukamath/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gurukamath/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-06T22:34:45Z",
    "updated_at": "2022-09-06T22:34:45Z",
    "author_association": "COLLABORATOR",
    "body": "I think there is a difference. Not implementing the check in the beginning results in an increment in the nonce and deduction of gas fees which is not reverted later. That does not happen if the check is implemented in the beginning. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1238719676/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1238724963",
    "html_url": "https://github.com/ethereum/execution-specs/issues/587#issuecomment-1238724963",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/587",
    "id": 1238724963,
    "node_id": "IC_kwDOERgWss5J1XFj",
    "user": {
      "login": "SamWilsn",
      "id": 57262657,
      "node_id": "MDQ6VXNlcjU3MjYyNjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamWilsn",
      "html_url": "https://github.com/SamWilsn",
      "followers_url": "https://api.github.com/users/SamWilsn/followers",
      "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
      "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
      "repos_url": "https://api.github.com/users/SamWilsn/repos",
      "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-06T22:44:13Z",
    "updated_at": "2022-09-06T22:44:13Z",
    "author_association": "MEMBER",
    "body": "> I think there is a difference. Not implementing the check in the beginning results in an increment in the nonce and deduction of gas fees which is not reverted later. That does not happen if the check is implemented in the beginning.\r\n\r\nYou're right there is a difference, but the exception should bubble up (haven't actually tried.) Do/should we guarantee the `BlockChain` is in a valid state after trying to apply an invalid block?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1238724963/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1238949608",
    "html_url": "https://github.com/ethereum/execution-specs/issues/587#issuecomment-1238949608",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/587",
    "id": 1238949608,
    "node_id": "IC_kwDOERgWss5J2N7o",
    "user": {
      "login": "gurukamath",
      "id": 48196632,
      "node_id": "MDQ6VXNlcjQ4MTk2NjMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48196632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gurukamath",
      "html_url": "https://github.com/gurukamath",
      "followers_url": "https://api.github.com/users/gurukamath/followers",
      "following_url": "https://api.github.com/users/gurukamath/following{/other_user}",
      "gists_url": "https://api.github.com/users/gurukamath/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gurukamath/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gurukamath/subscriptions",
      "organizations_url": "https://api.github.com/users/gurukamath/orgs",
      "repos_url": "https://api.github.com/users/gurukamath/repos",
      "events_url": "https://api.github.com/users/gurukamath/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gurukamath/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-07T06:11:31Z",
    "updated_at": "2022-09-07T06:12:17Z",
    "author_association": "COLLABORATOR",
    "body": ">  Do/should we guarantee the `BlockChain` is in a valid state after trying to apply an invalid block?\r\n\r\nGood question. Currently, we don't. [State check](https://github.com/ethereum/execution-specs/blob/bfe84c9a9b24695f160b4686d3b4640786ee9bac/tests/helpers/load_state_tests.py#L339) is done only if there are no exceptions\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1238949608/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
