{
  "url": "https://api.github.com/repos/ethereum/execution-specs/issues/588",
  "repository_url": "https://api.github.com/repos/ethereum/execution-specs",
  "labels_url": "https://api.github.com/repos/ethereum/execution-specs/issues/588/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/execution-specs/issues/588/comments",
  "events_url": "https://api.github.com/repos/ethereum/execution-specs/issues/588/events",
  "html_url": "https://github.com/ethereum/execution-specs/issues/588",
  "id": 1345474698,
  "node_id": "I_kwDOERgWss5QMlCK",
  "number": 588,
  "title": "`ensure` hides actual exception coverage",
  "user": {
    "login": "gurukamath",
    "id": 48196632,
    "node_id": "MDQ6VXNlcjQ4MTk2NjMy",
    "avatar_url": "https://avatars.githubusercontent.com/u/48196632?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gurukamath",
    "html_url": "https://github.com/gurukamath",
    "followers_url": "https://api.github.com/users/gurukamath/followers",
    "following_url": "https://api.github.com/users/gurukamath/following{/other_user}",
    "gists_url": "https://api.github.com/users/gurukamath/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gurukamath/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gurukamath/subscriptions",
    "organizations_url": "https://api.github.com/users/gurukamath/orgs",
    "repos_url": "https://api.github.com/users/gurukamath/repos",
    "events_url": "https://api.github.com/users/gurukamath/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gurukamath/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-08-21T12:30:59Z",
  "updated_at": "2022-08-22T08:52:35Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "I have been analysing if we can identify the need for writing additional tests (or expanding the current tests that we support) based not the coverage report from codecov.\r\n\r\nI've found that the `ensure` statements in the specs hide the real coverage of a check that we perform.\r\n\r\nFor example - [line 511](https://github.com/ethereum/execution-specs/blob/cc697f256d281476b9c9f810542e84fb78be2505/src/ethereum/frontier/spec.py#L511) in the frontier/spec.py file\r\nThe [codecov report](https://app.codecov.io/gh/ethereum/execution-specs/blob/cc697f256d281476b9c9f810542e84fb78be2505/src/ethereum/frontier/spec.py) shows that the line is covered. However, the single line `ensure` hides whether the `InvalidBlock` exception is actually ever triggered here. Turns out that it never is triggered.\r\n\r\nThere are a few other instances as above.\r\n\r\nI propose that we replace all ensure statements in the spec with multiline checks of the format. That way we can identify exactly which checks have no real \"hits\"\r\n\r\n```\r\nif check:\r\n      raise InvalidBlock\r\n```\r\n\r\n\r\n\r\n@SamWilsn @petertdavies What do you think?\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/588/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/execution-specs/issues/588/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
