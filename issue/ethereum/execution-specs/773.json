{
  "url": "https://api.github.com/repos/ethereum/execution-specs/issues/773",
  "repository_url": "https://api.github.com/repos/ethereum/execution-specs",
  "labels_url": "https://api.github.com/repos/ethereum/execution-specs/issues/773/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/execution-specs/issues/773/comments",
  "events_url": "https://api.github.com/repos/ethereum/execution-specs/issues/773/events",
  "html_url": "https://github.com/ethereum/execution-specs/issues/773",
  "id": 1739219851,
  "node_id": "I_kwDOERgWss5nqmOL",
  "number": 773,
  "title": "t8n tool errors",
  "user": {
    "login": "winsvega",
    "id": 4492341,
    "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/winsvega",
    "html_url": "https://github.com/winsvega",
    "followers_url": "https://api.github.com/users/winsvega/followers",
    "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
    "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
    "organizations_url": "https://api.github.com/users/winsvega/orgs",
    "repos_url": "https://api.github.com/users/winsvega/repos",
    "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
    "received_events_url": "https://api.github.com/users/winsvega/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3146425036,
      "node_id": "MDU6TGFiZWwzMTQ2NDI1MDM2",
      "url": "https://api.github.com/repos/ethereum/execution-specs/labels/A-tool",
      "name": "A-tool",
      "color": "FBCA04",
      "default": false,
      "description": "Area: tooling"
    },
    {
      "id": 3146433936,
      "node_id": "MDU6TGFiZWwzMTQ2NDMzOTM2",
      "url": "https://api.github.com/repos/ethereum/execution-specs/labels/C-bug",
      "name": "C-bug",
      "color": "C5DEF5",
      "default": false,
      "description": "Category: this is a bug, deviation, or other problem."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "gurukamath",
    "id": 48196632,
    "node_id": "MDQ6VXNlcjQ4MTk2NjMy",
    "avatar_url": "https://avatars.githubusercontent.com/u/48196632?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gurukamath",
    "html_url": "https://github.com/gurukamath",
    "followers_url": "https://api.github.com/users/gurukamath/followers",
    "following_url": "https://api.github.com/users/gurukamath/following{/other_user}",
    "gists_url": "https://api.github.com/users/gurukamath/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gurukamath/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gurukamath/subscriptions",
    "organizations_url": "https://api.github.com/users/gurukamath/orgs",
    "repos_url": "https://api.github.com/users/gurukamath/repos",
    "events_url": "https://api.github.com/users/gurukamath/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gurukamath/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "gurukamath",
      "id": 48196632,
      "node_id": "MDQ6VXNlcjQ4MTk2NjMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48196632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gurukamath",
      "html_url": "https://github.com/gurukamath",
      "followers_url": "https://api.github.com/users/gurukamath/followers",
      "following_url": "https://api.github.com/users/gurukamath/following{/other_user}",
      "gists_url": "https://api.github.com/users/gurukamath/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gurukamath/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gurukamath/subscriptions",
      "organizations_url": "https://api.github.com/users/gurukamath/orgs",
      "repos_url": "https://api.github.com/users/gurukamath/repos",
      "events_url": "https://api.github.com/users/gurukamath/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gurukamath/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 15,
  "created_at": "2023-06-03T06:36:59Z",
  "updated_at": "2023-06-15T15:36:25Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Here is the results of t8n execution on the state tests (skipping ConstantinopleFix as it is not declared in tool)\r\n\r\nFixed\r\n - [x] info: (GeneralStateTests/stCreate2/RevertInCreateInInitCreate2, fork: Berlin, TrInfo: d: 0, g: 0, v: 0, TrData: ` 0x305060..`) (empty contract collision)\r\n- [x] info: (GeneralStateTests/stCreateTest/CreateTransactionHighNonce, fork: London, TrInfo: d: 0, g: 0, v: 0, TrData: ` 0x600160..`) (tr has nonce overflow the allowed value) \r\n- [x] info: (GeneralStateTests/stTransactionTest/HighGasPrice, fork: Berlin, TrInfo: d: 0, g: 0, v: 0, TrData: ` 0x..`) (tr has gaslimit x gasprice overflow)\r\n- [x] info: (GeneralStateTests/stSStoreTest/InitCollision, fork: Berlin, TrInfo: d: 0, g: 0, v: 0, TrData: ` 0x600060..`) (empty account collision)\r\n- [x] info: (GeneralStateTests/stRevertTest/RevertInCreateInInit, fork: Berlin, TrInfo: d: 0, g: 0, v: 0, TrData: ` 0x305060..`) (empty accounts?)\r\n- [x] info: (GeneralStateTests/stExample/mergeTest, fork: Merge, TrInfo: d: 0, g: 0, v: 0, TrData: ` 0x00..`) (merge support?) \r\n- [x] info: (GeneralStateTests/stExample/invalidTr, fork: Berlin, TrInfo: d: 0, g: 0, v: 0, TrData: ` 0x..`) (intrinsic gas exception)\r\n- [x] info: (GeneralStateTests/stEIP2930/addressOpcodes, fork: Berlin, TrInfo: d: 0, g: 0, v: 0, TrData: `:label valid 0x1a8451..`)\r\n- [x] info: (GeneralStateTests/stEIP2930/coinbaseT01, fork: Berlin, TrInfo: d: 1, g: 0, v: 0, TrData: `:label T1baseInList 0x693c61..`)\r\n- [x]  info: (GeneralStateTests/stEIP2930/coinbaseT2, fork: London, TrInfo: d: 0, g: 0, v: 0, TrData: `:label T2baseInList 0x693c61..`)\r\n- [x] info: (GeneralStateTests/stEIP2930/transactionCosts, fork: Berlin, TrInfo: d: 1, g: 0, v: 0, TrData: `:label addrs_0_keys_0 0x00..`) \r\n- [x] info: (GeneralStateTests/stEIP2930/storageCosts, fork: Berlin, TrInfo: d: 0, g: 0, v: 0, TrData: `:label declaredKeyWrite 0x693c61..`) \r\n- [x] info: (GeneralStateTests/stEIP2930/manualCreate, fork: Berlin, TrInfo: d: 2, g: 0, v: 0, TrData: `:label allGood 0x5a3031..`) \r\n- [x] info: (GeneralStateTests/stEIP2930/variedContext, fork: Berlin, TrInfo: d: 0, g: 0, v: 0, TrData: `:label delegateCallerInAccessList 0x693c61..`)\r\n- [x] info: (Shanghai/stEIP3860-limitmeterinitcode/creationTxInitCodeSizeLimit, fork: Shanghai, TrInfo: d: 1, g: 0, v: 0, TrData: `:label invalid 0x601080..`)\r\n- [x] info: (GeneralStateTests/stSpecialTest/eoaEmpty, fork: London, TrInfo: d: 0, g: 0, v: 1, TrData: ` 0x693c61..`) \r\n- [x] info: (GeneralStateTests/stPreCompiledContracts/modexp, fork: Berlin, TrInfo: d: 28, g: 2, v: 0, TrData: ` 0x000000..`)  \r\n- [x] info: (GeneralStateTests/stEIP1559/lowFeeCap, fork: London, TrInfo: d: 0, g: 0, v: 0, TrData: `:label declaredKeyWrite 0x00..`)\r\n- [x] info: (GeneralStateTests/stEIP1559/lowGasLimit, fork: London, TrInfo: d: 0, g: 0, v: 0, TrData: ` 0x00..`)\r\n- [x] info: (GeneralStateTests/stEIP1559/lowGasPriceOldTypes, fork: London, TrInfo: d: 0, g: 0, v: 0, TrData: ` 0x00..`) \r\n- [x] info: (GeneralStateTests/stEIP1559/outOfFunds, fork: London, TrInfo: d: 0, g: 0, v: 0, TrData: `:label declaredKeyWrite 0x00..`)\r\n- [x] info: (GeneralStateTests/stEIP1559/outOfFundsOldTypes, fork: London, TrInfo: d: 0, g: 0, v: 0, TrData: ` 0x00..`)\r\n- [x] info: (GeneralStateTests/stEIP1559/senderBalance, fork: London, TrInfo: d: 0, g: 0, v: 0, TrData: ` 0x..`)\r\n- [x] info: (GeneralStateTests/stEIP1559/tipTooHigh, fork: London, TrInfo: d: 0, g: 0, v: 0, TrData: `:label declaredKeyWrite 0x00..`)\r\n- [x] info: (GeneralStateTests/stEIP1559/transactionIntinsicBug, fork: London, TrInfo: d: 0, g: 0, v: 0, TrData: `:label declaredKeyWrite 0x00..`)\r\n- [x] info: (GeneralStateTests/stEIP1559/valCausesOOF, fork: London, TrInfo: d: 0, g: 0, v: 0, TrData: ` 0x693c61..`) \r\n- [x] info: (GeneralStateTests/stRefundTest/refundFF, fork: Berlin, TrInfo: d: 0, g: 0, v: 0, TrData: ` 0x00..`)\r\n- [x] info: (GeneralStateTests/stRefundTest/refundMax, fork: Berlin, TrInfo: d: 0, g: 0, v: 0, TrData: ` 0x00..`)\r\n- [x] info: (GeneralStateTests/stRefundTest/refundSSTORE, fork: Berlin, TrInfo: d: 0, g: 0, v: 0, TrData: ` 0x00..`)\r\n- [x] info: (GeneralStateTests/stEIP3607/transactionCollidingWithNonEmptyAccount_calls, fork: Berlin, TrInfo: d: 0, g: 0, v: 0, TrData: ` 0x..`)\r\n- [x] info: (GeneralStateTests/stEIP3607/transactionCollidingWithNonEmptyAccount_callsItself, fork: London, TrInfo: d: 0, g: 0, v: 0, TrData: ` 0x..`)\r\n- [x] info: (GeneralStateTests/stEIP3607/transactionCollidingWithNonEmptyAccount_init, fork: Berlin, TrInfo: d: 0, g: 0, v: 0, TrData: ` 0x00..`)\r\n- [x] info: (GeneralStateTests/stEIP3607/transactionCollidingWithNonEmptyAccount_send, fork: London, TrInfo: d: 0, g: 0, v: 0, TrData: ` 0x..`)\r\n- [x] info:  (GeneralStateTests/stMemoryTest/oog, fork: Merge, TrInfo: d: 28, g: 0, v: 0, TrData: `:label success 0x1a8451..`) \r\n\r\n\r\n\r\n```\r\n--------\r\n*** TOTAL ERRORS DETECTED: 8 errors during all test execution!\r\n--------\r\ninfo: (GeneralStateTests/stTransactionTest/ValueOverflow, fork: Berlin, TrInfo: d: 0, g: 0, v: 0, TrData: ` 0x..`)\r\n\r\ninfo: (GeneralStateTests/stExample/accessListExample, fork: Berlin, TrInfo: d: 0, g: 0, v: 0, TrData: `:label declaredKeyWrite 0x00..`) (typed transaction before allowed fork)\r\ninfo: (GeneralStateTests/stExample/basefeeExample, fork: Berlin, TrInfo: d: 0, g: 0, v: 0, TrData: `:label declaredKeyWrite 0x00..`) (typed transaction before allowed fork)\r\ninfo: (GeneralStateTests/stExample/eip1559, fork: Berlin, TrInfo: d: 0, g: 0, v: 0, TrData: ` 0x00..`) (typed transaction before allowed fork)\r\n\r\ninfo: (GeneralStateTests/stEIP1559/intrinsic, fork: Merge, TrInfo: d: 15, g: 57, v: 0, TrData: ` 0x00ff..`)\r\ninfo: (GeneralStateTests/stEIP1559/typeTwoBerlin, fork: Berlin, TrInfo: d: 0, g: 0, v: 0, TrData: `:label declaredKeyWrite 0x00..`)\r\n\r\ninfo: (GeneralStateTests/stPreCompiledContracts/precompsEIP2929, fork: Shanghai, TrInfo: d: 342, g: 0, v: 0, TrData: `:label yes 0x1a8451..`)\r\n\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/773/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/execution-specs/issues/773/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1578994043",
    "html_url": "https://github.com/ethereum/execution-specs/issues/773#issuecomment-1578994043",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/773",
    "id": 1578994043,
    "node_id": "IC_kwDOERgWss5eHYl7",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-06T15:33:24Z",
    "updated_at": "2023-06-06T15:33:34Z",
    "author_association": "MEMBER",
    "body": "```\r\nWARNING:T8N:Transaction 0 failed: \r\nError: Client reject transaction expected to be valid: (0xdbb728ec3bb0b37eb49274b839b556865bf27a654f91ef7787ef05e97d1fb15c) \r\n0xf884800a850a000000008080b630506000600e80602860003960006000f56002553d6000556020600060003e6000516001550000fe6211223360005260206000fd00001ca011b4e962eb5259b1eeb47b3aff0ce65c026d92b840511fecfbec1997ba4abb27a03970e23b1c2140165c823234ebeac740328c396bcee36ea61429a7995d721a70\r\nReason: Failed transaction:  (GeneralStateTests/stCreate2/RevertInCreateInInitCreate2, fork: Berlin, TrInfo: d: 0, g: 0, v: 0, TrData: ` 0x305060..`)\r\n```\r\nhttps://drive.google.com/file/d/1VGKDS1WkT9wlwtHiB-EAD8yWglx1XeO6/view?usp=drive_link",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1578994043/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1579086448",
    "html_url": "https://github.com/ethereum/execution-specs/issues/773#issuecomment-1579086448",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/773",
    "id": 1579086448,
    "node_id": "IC_kwDOERgWss5eHvJw",
    "user": {
      "login": "gurukamath",
      "id": 48196632,
      "node_id": "MDQ6VXNlcjQ4MTk2NjMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48196632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gurukamath",
      "html_url": "https://github.com/gurukamath",
      "followers_url": "https://api.github.com/users/gurukamath/followers",
      "following_url": "https://api.github.com/users/gurukamath/following{/other_user}",
      "gists_url": "https://api.github.com/users/gurukamath/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gurukamath/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gurukamath/subscriptions",
      "organizations_url": "https://api.github.com/users/gurukamath/orgs",
      "repos_url": "https://api.github.com/users/gurukamath/repos",
      "events_url": "https://api.github.com/users/gurukamath/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gurukamath/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-06T16:26:19Z",
    "updated_at": "2023-06-06T16:26:19Z",
    "author_association": "COLLABORATOR",
    "body": "We had concluded that these test cases are not possible since they have zero `nonce` and `balance`, empty `code` but non-empty `storage`. We followed the discussion that happened some time ago on the `py-evm` repo. See [here](https://github.com/ethereum/py-evm/pull/1224)\r\n\r\nWe have ignored `stRevertTest/RevertInCreateInInit.json`, `stCreate2/RevertInCreateInInitCreate2.json` and `stSStoreTest/InitCollision.json` for the same reason. See [here](https://github.com/ethereum/execution-specs/blob/c90ccbee5eb1fd058c37e4fa8449b16e9ad217d1/tests/berlin/test_state_transition.py#L57).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1579086448/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1581049286",
    "html_url": "https://github.com/ethereum/execution-specs/issues/773#issuecomment-1581049286",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/773",
    "id": 1581049286,
    "node_id": "IC_kwDOERgWss5ePOXG",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-07T15:21:27Z",
    "updated_at": "2023-06-07T15:21:27Z",
    "author_association": "MEMBER",
    "body": "why? such case is possible on first rules, so it could have left over on the mainnet (even if its not the case) \r\nalso how do you reject this tests? do you check the fork and then reject or you just reject according to the pre state? \r\nthe t8n report transaction fail instead of state pre incorrect. \r\n\r\nin Frontier this is totally possible ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1581049286/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1581964139",
    "html_url": "https://github.com/ethereum/execution-specs/issues/773#issuecomment-1581964139",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/773",
    "id": 1581964139,
    "node_id": "IC_kwDOERgWss5eSttr",
    "user": {
      "login": "SamWilsn",
      "id": 57262657,
      "node_id": "MDQ6VXNlcjU3MjYyNjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamWilsn",
      "html_url": "https://github.com/SamWilsn",
      "followers_url": "https://api.github.com/users/SamWilsn/followers",
      "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
      "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
      "repos_url": "https://api.github.com/users/SamWilsn/repos",
      "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-08T06:29:16Z",
    "updated_at": "2023-06-08T06:29:16Z",
    "author_association": "MEMBER",
    "body": "> it could have left over on the mainnet (even if its not the case)\r\n\r\nWe're of the opinion that if something hasn't happened on mainnet, we can create a \"retroactive\" EIP prohibiting the behaviour, in the same way that [EIP-2681](https://eips.ethereum.org/EIPS/eip-2681) retroactively limits account nonces.\r\n\r\n\r\n\r\n> in Frontier this is totally possible\r\n\r\nWhat would this look like?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1581964139/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1582089617",
    "html_url": "https://github.com/ethereum/execution-specs/issues/773#issuecomment-1582089617",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/773",
    "id": 1582089617,
    "node_id": "IC_kwDOERgWss5eTMWR",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-08T07:59:47Z",
    "updated_at": "2023-06-08T08:26:07Z",
    "author_association": "MEMBER",
    "body": "{ (CREATE 0 0 (lll { [[1]]1 } 0)) }\n\nIf your evm fails on empty contract then ot will fail on this instruction on Frontier, so technically it will be a bug",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1582089617/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1582418682",
    "html_url": "https://github.com/ethereum/execution-specs/issues/773#issuecomment-1582418682",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/773",
    "id": 1582418682,
    "node_id": "IC_kwDOERgWss5eUcr6",
    "user": {
      "login": "petertdavies",
      "id": 8127356,
      "node_id": "MDQ6VXNlcjgxMjczNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8127356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertdavies",
      "html_url": "https://github.com/petertdavies",
      "followers_url": "https://api.github.com/users/petertdavies/followers",
      "following_url": "https://api.github.com/users/petertdavies/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertdavies/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertdavies/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertdavies/subscriptions",
      "organizations_url": "https://api.github.com/users/petertdavies/orgs",
      "repos_url": "https://api.github.com/users/petertdavies/repos",
      "events_url": "https://api.github.com/users/petertdavies/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertdavies/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-08T11:33:06Z",
    "updated_at": "2023-06-08T11:33:06Z",
    "author_association": "MEMBER",
    "body": "> If your evm fails on empty contract then ot will fail on this instruction on Frontier, so technically it will be a bug\r\n\r\nWe handle empty accounts in general fine. All of these test case relate to questions of what happens when you create a smart contract at an address which already has storage. The account must have no nonce and no code, otherwise the create would fail. This is only possible if you find an address collision (costing billions of dollars in compute) and deploy an empty contract there prior to Spurious Dragon. Whether this counts as an impossible situation is debatable.\r\n\r\nEarly in the development of the specs we followed `py-evm` precedent in refusing to implement the behaviour required to pass these tests and declaring the tests invalid. Once I have worked out what Geth's behaviour is we can decide if we should implement it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1582418682/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1582628738",
    "html_url": "https://github.com/ethereum/execution-specs/issues/773#issuecomment-1582628738",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/773",
    "id": 1582628738,
    "node_id": "IC_kwDOERgWss5eVP-C",
    "user": {
      "login": "petertdavies",
      "id": 8127356,
      "node_id": "MDQ6VXNlcjgxMjczNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8127356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertdavies",
      "html_url": "https://github.com/petertdavies",
      "followers_url": "https://api.github.com/users/petertdavies/followers",
      "following_url": "https://api.github.com/users/petertdavies/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertdavies/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertdavies/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertdavies/subscriptions",
      "organizations_url": "https://api.github.com/users/petertdavies/orgs",
      "repos_url": "https://api.github.com/users/petertdavies/repos",
      "events_url": "https://api.github.com/users/petertdavies/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertdavies/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-08T13:59:07Z",
    "updated_at": "2023-06-08T13:59:07Z",
    "author_association": "MEMBER",
    "body": "I think I have figured it out.\r\n\r\nAccording to the test suite, the semantics of `CREATE` and `CREATE2` when the target is an account with no nonce, no code, but some storage keys is as follows:\r\n\r\n1. Delete the storage keys at the start of the `CREATE`.\r\n2. For gas refund calculation purposes, treat the storage keys as having never existed.\r\n\r\nWe implement 1, but not 2. Due to architectural differences between us and production clients, it's not trivial for us to implement 2.\r\n\r\nThe problem is that `CREATE` deletes storage while bypassing the refund counter. If it `SSTORE` had deleted those keys, it would have given a bunch of refunds. When the new contract writes to the deleted keys the refund (which was never given) is removed turning the refund counter negative. We then crash because the refund counter is unexpectedly negative. Production clients (probably unknowingly) implement 2 to get around this problem.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1582628738/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1584105093",
    "html_url": "https://github.com/ethereum/execution-specs/issues/773#issuecomment-1584105093",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/773",
    "id": 1584105093,
    "node_id": "IC_kwDOERgWss5ea4aF",
    "user": {
      "login": "gurukamath",
      "id": 48196632,
      "node_id": "MDQ6VXNlcjQ4MTk2NjMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48196632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gurukamath",
      "html_url": "https://github.com/gurukamath",
      "followers_url": "https://api.github.com/users/gurukamath/followers",
      "following_url": "https://api.github.com/users/gurukamath/following{/other_user}",
      "gists_url": "https://api.github.com/users/gurukamath/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gurukamath/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gurukamath/subscriptions",
      "organizations_url": "https://api.github.com/users/gurukamath/orgs",
      "repos_url": "https://api.github.com/users/gurukamath/repos",
      "events_url": "https://api.github.com/users/gurukamath/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gurukamath/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-09T07:28:14Z",
    "updated_at": "2023-06-09T07:32:57Z",
    "author_association": "COLLABORATOR",
    "body": "@winsvega I looked at the remaining 38 tests in your list and they actually pass in our CI process. Let me outline the test that we perform in our CI process and do let me know if we are missing anything here.\r\n\r\n1. We use the fixtures in the `BlockchainTests` folder to perform these tests. For example - `tests/fixtures/ethereum_tests/BlockchainTests/GeneralStateTests/stTransactionTest/HighGasPrice.json`\r\n2. We then load the `env`, `alloc` and `txs` from the fixture for each block [(see here)](https://github.com/ethereum/execution-specs/blob/aa48fa7aed2be547f025acb77888cc81aa4f03ef/tests/helpers/load_evm_tools_tests.py#LL95C1-L144C10) and perform the state transition using the `t8n` tool. We then use the output from the `t8n` tool and use the `b11r` tool to build a block out of it\r\n3. Finally, we assert that the `rlp` of the block from the `b11r` tool exactly matches the `rlp` given in the fixture JSON.\r\n\r\nPlease let me know in case you see any issue with this testing approach.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1584105093/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1584112303",
    "html_url": "https://github.com/ethereum/execution-specs/issues/773#issuecomment-1584112303",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/773",
    "id": 1584112303,
    "node_id": "IC_kwDOERgWss5ea6Kv",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-09T07:34:55Z",
    "updated_at": "2023-06-09T07:34:55Z",
    "author_association": "MEMBER",
    "body": "Ah this particular one must be coinbase touch. Its an issue only with state tests as it has 0 reward touch. So coinbase gets touched and an empty account created on pre EIP150. \n\nSince I assume the state transition is equivalent to the block sealing. Even with mining reward of 0. Or 0 tx (high nonce tx gets rejected)\n\nBut let me check the logs of pyt8n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1584112303/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1584446701",
    "html_url": "https://github.com/ethereum/execution-specs/issues/773#issuecomment-1584446701",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/773",
    "id": 1584446701,
    "node_id": "IC_kwDOERgWss5ecLzt",
    "user": {
      "login": "petertdavies",
      "id": 8127356,
      "node_id": "MDQ6VXNlcjgxMjczNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8127356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertdavies",
      "html_url": "https://github.com/petertdavies",
      "followers_url": "https://api.github.com/users/petertdavies/followers",
      "following_url": "https://api.github.com/users/petertdavies/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertdavies/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertdavies/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertdavies/subscriptions",
      "organizations_url": "https://api.github.com/users/petertdavies/orgs",
      "repos_url": "https://api.github.com/users/petertdavies/repos",
      "events_url": "https://api.github.com/users/petertdavies/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertdavies/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-09T11:45:58Z",
    "updated_at": "2023-06-09T11:45:58Z",
    "author_association": "MEMBER",
    "body": "I will make a PR to fix the issue I mentioned above. That should fix `stRevertTest/RevertInCreateInInit.json`, `stCreate2/RevertInCreateInInitCreate2.json` and `stSStoreTest/InitCollision.json`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1584446701/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1584734858",
    "html_url": "https://github.com/ethereum/execution-specs/issues/773#issuecomment-1584734858",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/773",
    "id": 1584734858,
    "node_id": "IC_kwDOERgWss5edSKK",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-09T15:05:11Z",
    "updated_at": "2023-06-09T15:07:21Z",
    "author_association": "MEMBER",
    "body": "`tests/fixtures/ethereum_tests/BlockchainTests/GeneralStateTests/stTransactionTest/HighGasPrice.json`\r\n\r\nhere is the thing. in blockchain test we can't check rejected transaction exceptions. I do export it in bc tests too but runners don't verify this. so when a tx get rejected in state tests -> blockchain test convertion. we get empty block. that means such test do nothing. \r\n\r\nI still put this info into blockchain test:\r\n\r\n```\r\n\"transactionSequence\" : [\r\n                    {\r\n                        \"exception\" : \"TR_NoFunds\",\r\n                        \"rawBytes\" : \"0xf87e809f031eea408f8e1799cb883da2927b1336521d73c2c14accfebb70d5c5af006c82520894d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d001801ca039b081ab7094dff1b3ac79cbf8e381adc9f7a4e16290d7abc42dd006e5e062c5a033af00e26e5eb4431dcad601b2c8bf12d51eef2bd037d14681f22692ffab1ccd\",\r\n                        \"valid\" : \"false\"\r\n                    }\r\n                ],\r\n```\r\n\r\nto indicate that this tx was rejected from the block. \r\nthe correct test would be to forge block with this transaction accepted but then we can't compute the post state as it is undefined, let's see maybe I can craft invalid block instead  \r\n\r\nwe do have transaction tests for verification, this is just an attempt to check transaction rejection and its exceptions in realistic bc scenario using state tests. currently there are only a few tests like this",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1584734858/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1588676680",
    "html_url": "https://github.com/ethereum/execution-specs/issues/773#issuecomment-1588676680",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/773",
    "id": 1588676680,
    "node_id": "IC_kwDOERgWss5esUhI",
    "user": {
      "login": "gurukamath",
      "id": 48196632,
      "node_id": "MDQ6VXNlcjQ4MTk2NjMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48196632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gurukamath",
      "html_url": "https://github.com/gurukamath",
      "followers_url": "https://api.github.com/users/gurukamath/followers",
      "following_url": "https://api.github.com/users/gurukamath/following{/other_user}",
      "gists_url": "https://api.github.com/users/gurukamath/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gurukamath/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gurukamath/subscriptions",
      "organizations_url": "https://api.github.com/users/gurukamath/orgs",
      "repos_url": "https://api.github.com/users/gurukamath/repos",
      "events_url": "https://api.github.com/users/gurukamath/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gurukamath/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-13T07:08:45Z",
    "updated_at": "2023-06-13T07:13:44Z",
    "author_association": "COLLABORATOR",
    "body": "> `tests/fixtures/ethereum_tests/BlockchainTests/GeneralStateTests/stTransactionTest/HighGasPrice.json`\r\n> \r\n> here is the thing. in blockchain test we can't check rejected transaction exceptions. I do export it in bc tests too but runners don't verify this. so when a tx get rejected in state tests -> blockchain test convertion. we get empty block. that means such test do nothing.\r\n\r\nSo u recommend using the `GeneralStateTests` instead of the `BlockChainTests` to run the evm tools tests? Cause I see that the `InvalidBlockTests` and `ValidBlockTests` don't seem to be available in `GeneralStateTests`\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1588676680/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1590940123",
    "html_url": "https://github.com/ethereum/execution-specs/issues/773#issuecomment-1590940123",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/773",
    "id": 1590940123,
    "node_id": "IC_kwDOERgWss5e09Hb",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-14T10:36:08Z",
    "updated_at": "2023-06-14T10:36:08Z",
    "author_association": "MEMBER",
    "body": "No, I am fixing those tests now.\r\nBut the situation seems to be state test only. Since we assume the state is rewarded 0 and despite transaction rejected, an empty transition is calculated.\r\n\r\nSo its a question about what should happen to empty coinbase when state reward set to 0 and 0 transactions provided in txs.(pre eip158)\r\n\r\nAnd as for empty accounts, the t8n must support pre state with empty accounts having storage as on firrst networks it was possible to generate those\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1590940123/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1591028092",
    "html_url": "https://github.com/ethereum/execution-specs/issues/773#issuecomment-1591028092",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/773",
    "id": 1591028092,
    "node_id": "IC_kwDOERgWss5e1Sl8",
    "user": {
      "login": "gurukamath",
      "id": 48196632,
      "node_id": "MDQ6VXNlcjQ4MTk2NjMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48196632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gurukamath",
      "html_url": "https://github.com/gurukamath",
      "followers_url": "https://api.github.com/users/gurukamath/followers",
      "following_url": "https://api.github.com/users/gurukamath/following{/other_user}",
      "gists_url": "https://api.github.com/users/gurukamath/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gurukamath/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gurukamath/subscriptions",
      "organizations_url": "https://api.github.com/users/gurukamath/orgs",
      "repos_url": "https://api.github.com/users/gurukamath/repos",
      "events_url": "https://api.github.com/users/gurukamath/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gurukamath/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-14T11:39:24Z",
    "updated_at": "2023-06-14T11:39:24Z",
    "author_association": "COLLABORATOR",
    "body": "> And as for empty accounts, the t8n must support pre state with empty accounts having storage as on firrst networks it was possible to generate those\r\n\r\nThis should be handled post #794 \r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1591028092/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1593299986",
    "html_url": "https://github.com/ethereum/execution-specs/issues/773#issuecomment-1593299986",
    "issue_url": "https://api.github.com/repos/ethereum/execution-specs/issues/773",
    "id": 1593299986,
    "node_id": "IC_kwDOERgWss5e99QS",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-15T15:33:27Z",
    "updated_at": "2023-06-15T15:33:27Z",
    "author_association": "MEMBER",
    "body": "updated the errors. some errors still happen when unexpected type transaction is imported on prior forkrules. \r\nother errors I think occured due to unstability. the test has many vectors and sometimes when running 600 transactions over 5 fork rules in a raw, the tool just does not return outputs.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-specs/issues/comments/1593299986/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
