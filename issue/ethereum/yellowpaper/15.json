{
  "url": "https://api.github.com/repos/ethereum/yellowpaper/issues/15",
  "repository_url": "https://api.github.com/repos/ethereum/yellowpaper",
  "labels_url": "https://api.github.com/repos/ethereum/yellowpaper/issues/15/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/yellowpaper/issues/15/comments",
  "events_url": "https://api.github.com/repos/ethereum/yellowpaper/issues/15/events",
  "html_url": "https://github.com/ethereum/yellowpaper/issues/15",
  "id": 39359228,
  "node_id": "MDU6SXNzdWUzOTM1OTIyOA==",
  "number": 15,
  "title": "A miner can include in a block multiple transactions with a total gas cost way beyond his current ether balance.",
  "user": {
    "login": "giact",
    "id": 7198623,
    "node_id": "MDQ6VXNlcjcxOTg2MjM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7198623?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/giact",
    "html_url": "https://github.com/giact",
    "followers_url": "https://api.github.com/users/giact/followers",
    "following_url": "https://api.github.com/users/giact/following{/other_user}",
    "gists_url": "https://api.github.com/users/giact/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/giact/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/giact/subscriptions",
    "organizations_url": "https://api.github.com/users/giact/orgs",
    "repos_url": "https://api.github.com/users/giact/repos",
    "events_url": "https://api.github.com/users/giact/events{/privacy}",
    "received_events_url": "https://api.github.com/users/giact/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2014-08-02T22:57:23Z",
  "updated_at": "2014-08-03T16:50:55Z",
  "closed_at": "2014-08-03T16:50:55Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "How to reproduce (with AlethZero):\n- Disconnect from network\n- Kill the blockchain\n- Mine one single block then stop: your ether is now 1500 finney.\n- Send this contract: `{ (for [i]:0 (< @i 654) [i]:(+ @i 1) [[@i]]:1) (return 0 (lll stop 0)) }` and give it 150000 gas at the default price of 10 szabo per gas.\n- Send that same contract a few other times (AlethZero lets you do that 5 times)\n- Resume mining\n- You will end up creating 5 contracts that would \"normally\" cost you 7500 finney total.\n\nThis can possibly mean that a specially crafted client could be able to spam the blockchain with a lot of resource-consuming contracts (up to the block gas limit) even if said miner has little ether to begin with.\n\nThis happens because the mining rewards for transaction inclusion are awarded at the end of each transaction (and, so, before the beginning of the next).\n\nA possible solution might be to delay all those rewards to block finalisation (when the block creation reward is applied).\n",
  "closed_by": {
    "login": "giact",
    "id": 7198623,
    "node_id": "MDQ6VXNlcjcxOTg2MjM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7198623?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/giact",
    "html_url": "https://github.com/giact",
    "followers_url": "https://api.github.com/users/giact/followers",
    "following_url": "https://api.github.com/users/giact/following{/other_user}",
    "gists_url": "https://api.github.com/users/giact/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/giact/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/giact/subscriptions",
    "organizations_url": "https://api.github.com/users/giact/orgs",
    "repos_url": "https://api.github.com/users/giact/repos",
    "events_url": "https://api.github.com/users/giact/events{/privacy}",
    "received_events_url": "https://api.github.com/users/giact/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/yellowpaper/issues/15/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/yellowpaper/issues/15/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/yellowpaper/issues/comments/50985355",
    "html_url": "https://github.com/ethereum/yellowpaper/issues/15#issuecomment-50985355",
    "issue_url": "https://api.github.com/repos/ethereum/yellowpaper/issues/15",
    "id": 50985355,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTg1MzU1",
    "user": {
      "login": "gavofyork",
      "id": 138296,
      "node_id": "MDQ6VXNlcjEzODI5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/138296?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavofyork",
      "html_url": "https://github.com/gavofyork",
      "followers_url": "https://api.github.com/users/gavofyork/followers",
      "following_url": "https://api.github.com/users/gavofyork/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavofyork/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavofyork/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavofyork/subscriptions",
      "organizations_url": "https://api.github.com/users/gavofyork/orgs",
      "repos_url": "https://api.github.com/users/gavofyork/repos",
      "events_url": "https://api.github.com/users/gavofyork/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavofyork/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-03T08:48:44Z",
    "updated_at": "2014-08-03T08:48:44Z",
    "author_association": "MEMBER",
    "body": "yeah - that's an AZ bug, not a YP bug. that block is actually invalid, since it would include transactions that the sender cannot afford (block rewards are bestowed after transactions, not before).\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/yellowpaper/issues/comments/50985355/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/yellowpaper/issues/comments/50985726",
    "html_url": "https://github.com/ethereum/yellowpaper/issues/15#issuecomment-50985726",
    "issue_url": "https://api.github.com/repos/ethereum/yellowpaper/issues/15",
    "id": 50985726,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTg1NzI2",
    "user": {
      "login": "giact",
      "id": 7198623,
      "node_id": "MDQ6VXNlcjcxOTg2MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7198623?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/giact",
      "html_url": "https://github.com/giact",
      "followers_url": "https://api.github.com/users/giact/followers",
      "following_url": "https://api.github.com/users/giact/following{/other_user}",
      "gists_url": "https://api.github.com/users/giact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/giact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/giact/subscriptions",
      "organizations_url": "https://api.github.com/users/giact/orgs",
      "repos_url": "https://api.github.com/users/giact/repos",
      "events_url": "https://api.github.com/users/giact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/giact/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-03T09:09:23Z",
    "updated_at": "2014-08-03T09:09:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "But, from what I understood from the YP, the check to verify whether the sender can afford the transaction is made right before each transaction, and the mining fees are awarded right after each transaction.\n\nQuoting section 6 \"Transaction Execution\":\n\n> It is assumed that any transactions executed first pass the initial tests of intrinsic validity. These include:\n> 1. The transaction signature is valid;\n> 2. the transaction nonce is valid (equivalent to the sender account's current nonce);\n> 3. the gas limit is no smaller than the intrinsic gas, g0, used by the transaction;\n> 4. the sender account balance contains at least the cost, v0, required in up-front payment.\n\nSo I suspect AZ is behaving \"correctly\":\n- `A` is the miner.\n- `A` has 1500 finney.\n- `A` check if `A` has 1500 finney for the first transaction. He has them.\n- `A` executes the transaction. At the end of the transaction, he deducts 1500 finney from `A` and adds 1500 finney to `A`.\n- `A` still has 1500 finney and can repeat the process.\n\nUnless there is something else I am missing from my understanding of the YP.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/yellowpaper/issues/comments/50985726/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/yellowpaper/issues/comments/50986256",
    "html_url": "https://github.com/ethereum/yellowpaper/issues/15#issuecomment-50986256",
    "issue_url": "https://api.github.com/repos/ethereum/yellowpaper/issues/15",
    "id": 50986256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTg2MjU2",
    "user": {
      "login": "gavofyork",
      "id": 138296,
      "node_id": "MDQ6VXNlcjEzODI5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/138296?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavofyork",
      "html_url": "https://github.com/gavofyork",
      "followers_url": "https://api.github.com/users/gavofyork/followers",
      "following_url": "https://api.github.com/users/gavofyork/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavofyork/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavofyork/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavofyork/subscriptions",
      "organizations_url": "https://api.github.com/users/gavofyork/orgs",
      "repos_url": "https://api.github.com/users/gavofyork/repos",
      "events_url": "https://api.github.com/users/gavofyork/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavofyork/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-03T09:46:05Z",
    "updated_at": "2014-08-03T09:46:05Z",
    "author_association": "MEMBER",
    "body": "Sort of. It's more in the way AZ assumes you'll be the miner for\ntransactions that is wrong.\n\nNotably, those unaffordable transactions will be thrown out by the network,\nso not a great problem as it stands, but really would be better if AZ never\nallowed them to be created in the first place.\n\n## \n\nNever put down to incompetence that which can be adequately explained by\nself-interest.\n\nOn 3 August 2014 12:09, giact notifications@github.com wrote:\n\n> But, from what I understood from the YP, the check to verify whether the\n> sender can afford the transaction is made right before each transaction,\n> and the mining fees are awarded right after each transaction.\n> \n> Quoting section 6 \"Transaction Execution\":\n> \n> It is assumed that any transactions executed first pass the initial tests\n> of intrinsic validity. These include:\n> 1. The transaction signature is valid;\n> 2. the transaction nonce is valid (equivalent to the sender account's\n>    current nonce);\n> 3. the gas limit is no smaller than the intrinsic gas, g0, used by the\n>    transaction;\n> 4. the sender account balance contains at least the cost, v0, required\n>    in up-front payment.\n>    \n>    So I suspect AZ is behaving \"correctly\":\n>    - A is the miner.\n> 5. A has 1500 finney.\n> 6. A check if A has 1500 finney for the first transaction. He has them.\n> 7. A executes the transaction. At the end of the transaction, he\n>    deducts 1500 finney from A and adds 1500 finney to A.\n> 8. A still has 1500 finney and can repeat the process.\n> \n> Unless there is something else I am missing from my understanding of the\n> YP.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ethereum/latexpaper/issues/15#issuecomment-50985726.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/yellowpaper/issues/comments/50986256/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/yellowpaper/issues/comments/50986599",
    "html_url": "https://github.com/ethereum/yellowpaper/issues/15#issuecomment-50986599",
    "issue_url": "https://api.github.com/repos/ethereum/yellowpaper/issues/15",
    "id": 50986599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTg2NTk5",
    "user": {
      "login": "giact",
      "id": 7198623,
      "node_id": "MDQ6VXNlcjcxOTg2MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7198623?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/giact",
      "html_url": "https://github.com/giact",
      "followers_url": "https://api.github.com/users/giact/followers",
      "following_url": "https://api.github.com/users/giact/following{/other_user}",
      "gists_url": "https://api.github.com/users/giact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/giact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/giact/subscriptions",
      "organizations_url": "https://api.github.com/users/giact/orgs",
      "repos_url": "https://api.github.com/users/giact/repos",
      "events_url": "https://api.github.com/users/giact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/giact/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-03T10:05:57Z",
    "updated_at": "2014-08-03T10:05:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Notably, those unaffordable transactions will be thrown out by the network\n\nWhat's the algorithm that an implementation should use to check if a block contains unaffordable transaction?\n\nI am thinking something like:\nFor a given block, for each sender, sum all the fees for that sender, then check if sender balance has enough amount, then when executing transactions at the beginning of each transaction check if the sender still has enough balance to run the given transaction?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/yellowpaper/issues/comments/50986599/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/yellowpaper/issues/comments/50987986",
    "html_url": "https://github.com/ethereum/yellowpaper/issues/15#issuecomment-50987986",
    "issue_url": "https://api.github.com/repos/ethereum/yellowpaper/issues/15",
    "id": 50987986,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTg3OTg2",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-03T11:23:05Z",
    "updated_at": "2014-08-03T11:23:05Z",
    "author_association": "MEMBER",
    "body": "I don't see how this is a problem. The total load that A can impose is\nstill bounded by the block gaslimit, which is specifically put there\nbecause some entities have much less of an incentive than others not to\ninclude transactions.\n\nOn 14-08-03 05:09 AM, giact wrote:\n\n> But, from what I understood from the YP, the check to verify whether the sender can afford the transaction is made right before each transaction, and the mining fees are awarded right after each transaction.\n> \n> Quoting section 6 \"Transaction Execution\":\n> \n> > It is assumed that any transactions executed first pass the initial tests of intrinsic validity. These include:\n> > 1. The transaction signature is valid;\n> > 2. the transaction nonce is valid (equivalent to the sender account's current nonce);\n> > 3. the gas limit is no smaller than the intrinsic gas, g0, used by the transaction;\n> > 4. the sender account balance contains at least the cost, v0, required in up-front payment.\n> >    So I suspect AZ is behaving \"correctly\":\n> - `A` is the miner.\n> - `A` has 1500 finney.\n> - `A` check if `A` has 1500 finney for the first transaction. He has them.\n> - `A` executes the transaction. At the end of the transaction, he deducts 1500 finney from `A` and adds 1500 finney to `A`.\n> - `A` still has 1500 finney and can repeat the process.\n> \n> Unless there is something else I am missing from my understanding of the YP.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ethereum/latexpaper/issues/15#issuecomment-50985726\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/yellowpaper/issues/comments/50987986/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/yellowpaper/issues/comments/50988069",
    "html_url": "https://github.com/ethereum/yellowpaper/issues/15#issuecomment-50988069",
    "issue_url": "https://api.github.com/repos/ethereum/yellowpaper/issues/15",
    "id": 50988069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTg4MDY5",
    "user": {
      "login": "gavofyork",
      "id": 138296,
      "node_id": "MDQ6VXNlcjEzODI5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/138296?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavofyork",
      "html_url": "https://github.com/gavofyork",
      "followers_url": "https://api.github.com/users/gavofyork/followers",
      "following_url": "https://api.github.com/users/gavofyork/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavofyork/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavofyork/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavofyork/subscriptions",
      "organizations_url": "https://api.github.com/users/gavofyork/orgs",
      "repos_url": "https://api.github.com/users/gavofyork/repos",
      "events_url": "https://api.github.com/users/gavofyork/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavofyork/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-03T11:26:50Z",
    "updated_at": "2014-08-03T11:26:50Z",
    "author_association": "MEMBER",
    "body": "@giacomo there's no \"algorithm\" needed - transaction validity is already\nimplemented.\n\n## \n\nNever put down to incompetence that which can be adequately explained by\nself-interest.\n\nOn 3 August 2014 14:23, vbuterin notifications@github.com wrote:\n\n> I don't see how this is a problem. The total load that A can impose is\n> still bounded by the block gaslimit, which is specifically put there\n> because some entities have much less of an incentive than others not to\n> include transactions.\n> \n> On 14-08-03 05:09 AM, giact wrote:\n> \n> > But, from what I understood from the YP, the check to verify whether the\n> > sender can afford the transaction is made right before each transaction,\n> > and the mining fees are awarded right after each transaction.\n> > \n> > Quoting section 6 \"Transaction Execution\":\n> > \n> > > It is assumed that any transactions executed first pass the initial\n> > > tests of intrinsic validity. These include:\n> > > 1. The transaction signature is valid;\n> > > 2. the transaction nonce is valid (equivalent to the sender account's\n> > >    current nonce);\n> > > 3. the gas limit is no smaller than the intrinsic gas, g0, used by the\n> > >    transaction;\n> > > 4. the sender account balance contains at least the cost, v0, required\n> > >    in up-front payment.\n> > \n> > So I suspect AZ is behaving \"correctly\":\n> > - `A` is the miner.\n> > - `A` has 1500 finney.\n> > - `A` check if `A` has 1500 finney for the first transaction. He has\n> >   them.\n> > - `A` executes the transaction. At the end of the transaction, he\n> >   deducts 1500 finney from `A` and adds 1500 finney to `A`.\n> > - `A` still has 1500 finney and can repeat the process.\n> > \n> > Unless there is something else I am missing from my understanding of the\n> > YP.\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ethereum/latexpaper/issues/15#issuecomment-50985726\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ethereum/latexpaper/issues/15#issuecomment-50987986.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/yellowpaper/issues/comments/50988069/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/yellowpaper/issues/comments/50995620",
    "html_url": "https://github.com/ethereum/yellowpaper/issues/15#issuecomment-50995620",
    "issue_url": "https://api.github.com/repos/ethereum/yellowpaper/issues/15",
    "id": 50995620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTk1NjIw",
    "user": {
      "login": "giact",
      "id": 7198623,
      "node_id": "MDQ6VXNlcjcxOTg2MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7198623?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/giact",
      "html_url": "https://github.com/giact",
      "followers_url": "https://api.github.com/users/giact/followers",
      "following_url": "https://api.github.com/users/giact/following{/other_user}",
      "gists_url": "https://api.github.com/users/giact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/giact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/giact/subscriptions",
      "organizations_url": "https://api.github.com/users/giact/orgs",
      "repos_url": "https://api.github.com/users/giact/repos",
      "events_url": "https://api.github.com/users/giact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/giact/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-03T16:50:55Z",
    "updated_at": "2014-08-03T16:50:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, after chatting more with Gav I realized that for this sort of \"attack\" to become remotely feasible, then it means that our whole network is way way overpowered for the current transaction load to begin with.\n\nSorry for wasting your time!\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/yellowpaper/issues/comments/50995620/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
