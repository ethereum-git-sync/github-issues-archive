{
  "url": "https://api.github.com/repos/ethereum/yellowpaper/issues/753",
  "repository_url": "https://api.github.com/repos/ethereum/yellowpaper",
  "labels_url": "https://api.github.com/repos/ethereum/yellowpaper/issues/753/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/yellowpaper/issues/753/comments",
  "events_url": "https://api.github.com/repos/ethereum/yellowpaper/issues/753/events",
  "html_url": "https://github.com/ethereum/yellowpaper/issues/753",
  "id": 448398655,
  "node_id": "MDU6SXNzdWU0NDgzOTg2NTU=",
  "number": 753,
  "title": "Modified Merkle Patricia tree of the empty map",
  "user": {
    "login": "acoglio",
    "id": 2409151,
    "node_id": "MDQ6VXNlcjI0MDkxNTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2409151?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acoglio",
    "html_url": "https://github.com/acoglio",
    "followers_url": "https://api.github.com/users/acoglio/followers",
    "following_url": "https://api.github.com/users/acoglio/following{/other_user}",
    "gists_url": "https://api.github.com/users/acoglio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acoglio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acoglio/subscriptions",
    "organizations_url": "https://api.github.com/users/acoglio/orgs",
    "repos_url": "https://api.github.com/users/acoglio/repos",
    "events_url": "https://api.github.com/users/acoglio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acoglio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2019-05-25T01:33:47Z",
  "updated_at": "2021-06-23T14:06:34Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Eq. (194) defines TRIE(map) = KEC(c(map,0)) -- I'm using 'map' for \\mathfrak{I}.\r\n\r\nThus TRIE(ø) = KEC(c(ø,0)) -- where ø is the empty map.\r\n\r\nHowever, c(ø,...) is not well-defined:\r\n- The condition ||map|| = 1 for the first case of eq. (196) does not hold if map = ø, so we move to the second case.\r\n- In the second case of eq. (196), the sub-formula [forall I in map : ...] is trivially true when map = ø, so it disappears from the conjunction.\r\n- The definition of j then reduces to j = max {x : exists k : ||k|| = x} -- I'm using 'k' for \\mathbf{l}.\r\n- For every x, there surely exists some sequence k of length x, so the set consists of all natural numbers. That is, j = max {x : x is a natural number}, which is not well-defined.\r\n\r\nc should not be applied to the empty map. Note that eq. (195) applies c only if map ≠ ø.\r\n\r\nSo what should eq. (194) say?\r\n\r\nOne option is TRIE(map) = KEC(n(map,0)), i.e. replace c with n. This avoids the problem above, but since often n(...) = KEC(...), we would often have TRIE(...) = KEC(KEC(...)), which seems a bit strange to me.\r\n\r\nAnother option is TRIE(map) = n(map,0), which avoids the problem above and the \"double-hash\" above.\r\n\r\nNote also that the first paragraph of Appendix D says that the single value that identifies the map is either a 32-byte sequence or the empty byte sequence. If TRIE(...) = KEC(...), as in the current definition and as in the first option above, then that value is always a 32-byte sequence and never the empty byte sequence. If instead TRIE(...) = n(...), as in the second option above, then the value is a byte sequence whose length may actually vary between 0 and 32.\r\n\r\nA third option could be to have the second case of eq. (196) require map ≠ ø, therefore using the third case of eq. (196) when map = ø. In this case, the result would be RLP(((),...,())) because each u(j) = n(ø,i+1) and v = {} as well. But even with this option, eq. (194) would still be TRIE(...) = KEC(...) and thus it would never be the empty byte sequence.\r\n\r\nA fourth option is that eq. (194) should really have two cases:\r\n- If map = ø, then TRIE(map) = (), i.e. the empty sequence of bytes.\r\n- If map ≠ ø, then TRIE(map) = KEC(c(map,0)), as the current equation says.\r\nThis way, TRIE(map) is always either empty (first case) or 32 bytes (second case), consistently with what the first paragraph of Appendix D says.\r\n\r\nThe fourth option seems perhaps the most likely interpretation at this point.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/yellowpaper/issues/753/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/yellowpaper/issues/753/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
