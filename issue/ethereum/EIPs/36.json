{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/36",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/36/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/36/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/36/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/36",
  "id": 118825830,
  "node_id": "MDU6SXNzdWUxMTg4MjU4MzA=",
  "number": 36,
  "title": "EIP 104 (Serenity): Unlimited storage key or value size",
  "user": {
    "login": "vbuterin",
    "id": 2230894,
    "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vbuterin",
    "html_url": "https://github.com/vbuterin",
    "followers_url": "https://api.github.com/users/vbuterin/followers",
    "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
    "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
    "organizations_url": "https://api.github.com/users/vbuterin/orgs",
    "repos_url": "https://api.github.com/users/vbuterin/repos",
    "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vbuterin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2015-11-25T12:24:07Z",
  "updated_at": "2022-02-01T02:29:47Z",
  "closed_at": "2022-02-01T02:29:47Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Instead of storage keys and values being 32 bytes, they have unlimited size. We could have opcodes:\n- `SSTORE(key_mstart, key_msz, value_mstart, value_msz)`\n- `SLOAD(key_mstart, key_msz, value_output_mstart, value_output_maxsize)`\n\n`SLOAD` can have gas cost equal to `40 + len(key) + len(min(value_output_maxsize, size_of_actual_output))`\n\nThe gas cost for `SSTORE` can be:\n\n``` python\ndef compute_gascost(key_length, value_length, prev_value_length):\n    return 2500 + 10 * (key_length + value_length) \\\n        + (5000 + 40 * (key_length + value_length) if value_length else 0) \\\n        - (5000 + 40 * (key_length + prev_value_length) if prev_value_length else 0)\n```\n\nWhere `key_length` is the length of the key, `value_length` is the length of the value, and `prev_value_length` is the length of the previous value at that key. If the function returns a value less than 2500, the difference is instead accounted for as a refund (eg. if `compute_gascost` returns 1300, that's a 2500 cost plus a 1200 refund, if it returns -700 that's a 2500 cost plus a 3200 refund, etc).\n### Motivations\n- Works well with a possible EVM 2.0 architecture which is based on 64 bit integers and where larger values are treated indiscriminately as byte slices, allowing easier use of RSA-based crypto and large-sized elliptic curves on the same footing as 256-bit ECC. If we go this route, **there is no reason why the 32-byte length needs to be privileged**\n- Works well with an architecture where code is part of storage (eg. code = storage at key index '' [empty string])\n- Allows for quick \"shutdown and reboot\" functionality where a VM can quickly stop computation in mid-step and save its entire memory to a standardized index in one step, and then quickly reload from there the next time a transaction is called. This is useful for (i) dapps that need to sometimes perform large batch operations that may take up more than the gaslimit, eg. a crowdfunding or auction contract refunding very many participants, (ii) security deposit based auditable computation markets, (iii) generally more efficiency by batching variable lookups, requiring fewer moderately expensive trie operations.\n",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/36/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/36/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/159604820",
    "html_url": "https://github.com/ethereum/EIPs/issues/36#issuecomment-159604820",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/36",
    "id": 159604820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTYwNDgyMA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-25T13:17:54Z",
    "updated_at": "2015-11-25T13:17:54Z",
    "author_association": "MEMBER",
    "body": "Downsides I can see here:\n1) every single SLOAD and SSTORE requires memory access - but they are expensive anyway\n2) it might be worthwhile to also provide SSIZE which returns the size of the value at a given key\n3) it might be more complex to implement\n\nMy main concerns are that we lose some kind of type safety: If your contract assumes that you only store 16 bytes at a key, but it actually stores more, then loading from it will truncate the value. Note that our high-level-language already handle storing variably-sized types quite efficiently.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/159604820/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/159614880",
    "html_url": "https://github.com/ethereum/EIPs/issues/36#issuecomment-159614880",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/36",
    "id": 159614880,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTYxNDg4MA==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-25T14:00:28Z",
    "updated_at": "2015-11-25T14:00:28Z",
    "author_association": "MEMBER",
    "body": "> If your contract assumes that you only store 16 bytes at a key, but it actually stores more, then loading from it will truncate the value.\n\nCan't this be easily handled at the HLL level? If you are dealing with a 16-byte data type, then your code should not try storing more than 16 bytes there. I'll accept the idea of `SSIZE` though.\n\nRegarding efficiency concerns, I actually think that this will increase efficiency far more than it will decrease it. Every SLOAD/SSTORE requires trie operations and in the case of SSTORE that includes hashing, and so if you use solidity's current trick for storing large data types in storage you will end up losing a lot of time on multiple trie reorganizations and particularly on the MLOADs, JUMPs, etc involved in processing the loop; all this is much greater than the requirement to do an extra MLOAD and PUSH.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/159614880/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/159641249",
    "html_url": "https://github.com/ethereum/EIPs/issues/36#issuecomment-159641249",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/36",
    "id": 159641249,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTY0MTI0OQ==",
    "user": {
      "login": "wanderer",
      "id": 158211,
      "node_id": "MDQ6VXNlcjE1ODIxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/158211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wanderer",
      "html_url": "https://github.com/wanderer",
      "followers_url": "https://api.github.com/users/wanderer/followers",
      "following_url": "https://api.github.com/users/wanderer/following{/other_user}",
      "gists_url": "https://api.github.com/users/wanderer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wanderer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wanderer/subscriptions",
      "organizations_url": "https://api.github.com/users/wanderer/orgs",
      "repos_url": "https://api.github.com/users/wanderer/repos",
      "events_url": "https://api.github.com/users/wanderer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wanderer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-25T15:28:43Z",
    "updated_at": "2015-11-25T15:28:43Z",
    "author_association": "MEMBER",
    "body": "Less trie lookups is a big win.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/159641249/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/159651315",
    "html_url": "https://github.com/ethereum/EIPs/issues/36#issuecomment-159651315",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/36",
    "id": 159651315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTY1MTMxNQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-25T15:56:53Z",
    "updated_at": "2015-11-25T15:56:53Z",
    "author_association": "MEMBER",
    "body": "Sure, caring about using the same size for data can be handled at a higher level, but it adds some level of danger nevertheless.\n\nI agree about efficiency on the trie level for storing e.g. long strings or multiple array elements at the same time, but I'm not sure if this is one of the main use cases of storage. Initially, you might store a long array, but most of the time you probably read and modify single elements. And if you store large arrays (including byte arrays and strings) in a single slot, you have to read and write the whole slot if you only change a single element. This gets more and more expensive the longer the array is, so a higher level language might determine a length where the array is chopped into smaller pieces, at which point we again arrive at the situation we currently are in (especially there will always be loops when copying and slot calculations when accessing) just with larger constants and more complex gas calculations.\n\nI am not really opposed to this change - not forcing a word size is a good thing - I just think that it is not that simple.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/159651315/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/213893163",
    "html_url": "https://github.com/ethereum/EIPs/issues/36#issuecomment-213893163",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/36",
    "id": 213893163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzg5MzE2Mw==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-24T05:49:09Z",
    "updated_at": "2016-04-24T05:49:09Z",
    "author_association": "MEMBER",
    "body": "I am in favor of this. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/213893163/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/240583903",
    "html_url": "https://github.com/ethereum/EIPs/issues/36#issuecomment-240583903",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/36",
    "id": 240583903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDU4MzkwMw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-17T23:49:21Z",
    "updated_at": "2016-08-17T23:49:21Z",
    "author_association": "MEMBER",
    "body": "@vbuterin:\n\n> SLOAD(key_mstart, key_msz, value_output_mstart, value_output_maxsize)\n\nIf there's a limit of the read size, perhaps it is useful to also include a start offset:\n\n`SLOAD(key_mstart, key_msz, value_output_mstart, value_output_offset, value_output_maxsize)`\n\nAnd in that case it probably would make sense adding that to `SSTORE` too, which then probably provides an aid for the issue raised by @chriseth.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/240583903/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/471167746",
    "html_url": "https://github.com/ethereum/EIPs/issues/36#issuecomment-471167746",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/36",
    "id": 471167746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTE2Nzc0Ng==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-09T11:09:01Z",
    "updated_at": "2019-03-09T11:09:01Z",
    "author_association": "MEMBER",
    "body": "@vbuterin is #97 obsoleting this one?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/471167746/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1015006663",
    "html_url": "https://github.com/ethereum/EIPs/issues/36#issuecomment-1015006663",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/36",
    "id": 1015006663,
    "node_id": "IC_kwDOAq426M48f8XH",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-18T02:05:07Z",
    "updated_at": "2022-01-18T02:05:07Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1015006663/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1026420608",
    "html_url": "https://github.com/ethereum/EIPs/issues/36#issuecomment-1026420608",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/36",
    "id": 1026420608,
    "node_id": "IC_kwDOAq426M49Le-A",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-02-01T02:29:47Z",
    "updated_at": "2022-02-01T02:29:47Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1026420608/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
