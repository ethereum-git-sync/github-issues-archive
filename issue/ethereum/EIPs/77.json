{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/77",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/77/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/77/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/77/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/77",
  "id": 140275824,
  "node_id": "MDU6SXNzdWUxNDAyNzU4MjQ=",
  "number": 77,
  "title": "Safer Ethereum Address Format",
  "user": {
    "login": "axic",
    "id": 20340,
    "node_id": "MDQ6VXNlcjIwMzQw",
    "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/axic",
    "html_url": "https://github.com/axic",
    "followers_url": "https://api.github.com/users/axic/followers",
    "following_url": "https://api.github.com/users/axic/following{/other_user}",
    "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
    "organizations_url": "https://api.github.com/users/axic/orgs",
    "repos_url": "https://api.github.com/users/axic/repos",
    "events_url": "https://api.github.com/users/axic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/axic/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2016-03-11T19:53:53Z",
  "updated_at": "2022-01-30T15:09:56Z",
  "closed_at": "2022-01-30T15:09:56Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "#### Motivation\n\nThe primary motivation is to have a safer address format used for user-to-user and user-to-contract transactions/interactions.\n\nSecondary motivations:\n- try not to reinvent the wheel\n- try sticking with Ethereum supported hashing methods and not introducing new ones\n- make it easily implementable in contracts if needed (but it shouldn't be)\n\nClarification regarding in-contract implementation: assuming there is a contract call which receives an address type as a parameter, the client software should be able to convert the proposed address format to the raw Ethereum address and send that in the request.\n#### Implementation across the ecosystem\n\nIt should be initially implemented in client side solutions and the network endpoints (RPC) would receive the current addresses.  If #55 is implemented on the RPC level it would be easy to convert this format to that.\n\nProbably it is safe to assume that data sent to the RPC/network level should be validated by the clients and no change is proposed to those levels.\n#### Other formats\n\nThe ICAP format can safely store a reduced set of Ethereum addresses (called _direct ICAP_). The _basic ICAP_ is a format allowing storage of all Ethereum addresses at the risk of checksum collision. This has been raised multiple times, see #57 and #70. The ICAP format also supports _indirect ICAP_ addresses which work through a name registry. Maybe it is better to leave that to its own format - the ICAP.\n\nThe checksumming proposed in #55 is clever at being backward compatible. I like it personally and implemented where possible, but I do not think it is a complete solution.\n#### Specification\n\n**1)** The internally stored data should be (similar to how [Bitcoin addresses are built](https://en.bitcoin.it/wiki/Technical_background_of_version_1_Bitcoin_addresses)):\n\n```\n[flags: 8 bit][address: 160 bit][checksum: 32 bit]\n```\n\nwhere `flags` is a configuration field for future extensions and `checksum` corresponds to the lowest 32 bits of the sha3/keccak hash of the address. (This is different to Bitcoin.)\n\n**2)** This binary data should then be encoded using a defined alphabet, more on that later.\n\n**3)** A prefix (such as `E`, `ET`, `ETH`) would be very useful to make the address easily recognizable. This prefix could either be manually appended as a string or be part of the binary (as a special value producing those letters after the transformation).\n\nI am leaning towards just using the prefix as a string and not being part of the binary data.\n#### Contracts\n\nI am not entirely sure, but it might make sense having either a flag or a different prefix to distinguish between external accounts and contract addresses.\n\nOne of the reasons is that without querying the network it would be clear that different gas costs would apply for making a value transfer. And it would be clear in which case contract interactions are possible.\n#### Alphabets\n\nBefore deciding on an alphabet an important question to answer is whether we anticipate these addresses to be typed in or purely copy-pasted. If the ability to type in is important, probably an alphabet should be used which eliminates obvious errors (`i = l = 1`, `0 = o`, `u = v`).\n\nI have experimented with different alphabets and have no conclusion yet. `ethbase` are made up by me. I like `ethbase-2` and `ethbase-3`. \n\n```\nethbase-1         abcdefghjklmnopqrstvwxyz\nethbase-2         0123456789abcdefhklmnorstuwxz\nethbase-3         123456789abcdefhklmnorstuwxz\nethbase-4         ABCDEFGHJKLMNOPQRSTVWXYZ\nethbase-5         987654321\nbase-36           0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\nbase-55           123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghjkmnpqrstuwxyz\nbase-58           123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\nrfc4648 base32    ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\nz-base-32         ybndrfg8ejkmcpqxot1uwisza345h769\ncrockford base-32 0123456789ABCDEFGHJKMNPQRSTVWXYZ\nbase32hex         0123456789ABCDEFGHIJKLMNOPQRSTUV\nnintendo base-32  0123456789BCDFGHJKLMNPQRSTVWXYZ\n```\n#### Examples\n\nThese don't have the prefix suggested above (and have `flag = 1`).  I can generate a larger set and publish as a gist if needed.\n\n```\naddress           ef51080ba7c0921f19fb4617c229678c88553389\nethbase-1         bhhnzhazaxzqtyqpgcddhbatkdfegfznxcyyososbex\nethbase-2         b7195o3ketcot844shuhbmt9le64f3t8oot79k3s\nethbase-3         2k635kfubsm93f7bkr46nkmem7l68slcs8l57ckse\nethbase-4         BHHNZHAZAXZQTYQPGCDDHBATKDFEGFZNXCYYOSOSBEX\nethbase-5         3326143634584248146854755777454147652553325927564561848478919\nbase-36           365QOV5A3FL2W2P3ERQZMIVMISU372HKN92TV9\nbase-55           5U46LNtk1tnMEudAacfbUAE9c6GBc2D4qw\nbase-58           n9zZ7sByjfR294rDVqYCy2uUv3tYa5pnQ\nrfc4648 base32    HXVCCALU7AJEHYZ7NDBPQRJM6GIQVJTRFQKV2FV\nz-base-32         8zinnymw9yjr8a39pdbxotjc6geoijutfoki4fi\ncrockford base-32 7QN220BMZ0947RSZD31FGH9CY68GN9KH5GANT5N\nbase32hex         7NL220BKV0947OPVD31FGH9CU68GL9JH5GALQ5L\nnintendo base-32  TVQ3YCLSRJHWGYF3GVGRX5RVMJFQFD5H97002T6\n```\n\n```\naddress           f843c676c0f3d5e1ac47472056ff55da9e2e42c9\nethbase-1         bhxcvrmhfnbcgvkayjhpqmvmnxxkbhozmkphoqvyybk\nethbase-2         bcx3ubwz1m2b5c6k409hm3fclno2u1r5c5b76bm2\nethbase-3         2kzcww8rmueftlwc6u4urn3u7ddma9mbhnzd8krr6\nethbase-4         BHXCVRMHFNBCGVKAYJHPQMVMNXXKBHOZMKPHOQVYYBK\nethbase-5         3217136285259645423933751837977796654267814649388588342414353\nbase-36           387ZIM0R4FK6UKHTA3AL8Q24LQCVOCWY4CTWGX\nbase-55           5YVYc2Hhm73jgRuMbu3KNpDUbaQdsrRcby\nbase-58           nyJknndQU58JASatAcvYNJfribXu1TBAY\nrfc4648 base32    H4EHRTWYDZ5LYNMI5DSAVX7KXNJ4LSCZF5TPBNB\nz-base-32         8hr8tusad37mapce7d1yiz9kzpjhm1n3f7uxbpb\ncrockford base-32 7W47HKPR3SXBRDC8X3J0NQZAQD9WBJ2S5XKF1D1\nbase32hex         7S47HJMO3PTBODC8T3I0LNVAND9SBI2P5TJF1D1\nnintendo base-32  VB63KWM6FYQLN299G31CHS1W61M6BZYBQCWNJRC\n```\n#### Alternative solution\n\nA possible alternative solution is sticking with the hex alphabet (base-16) and checksumming the content using the method described in #55.\n\nImportant differences:\n- include any flag or data suggested above\n- strip the hex prefix so the mixed-caps won't be modified by software believing it is a hex string, which is case agnostic\n",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/77/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/77/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195551431",
    "html_url": "https://github.com/ethereum/EIPs/issues/77#issuecomment-195551431",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/77",
    "id": 195551431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTU1MTQzMQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-11T21:07:01Z",
    "updated_at": "2016-03-11T21:07:01Z",
    "author_association": "MEMBER",
    "body": "Uploaded a [Javascript tool](https://gist.github.com/axic/352dab80f2c644a9329d) to play around with alphabets.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195551431/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195607968",
    "html_url": "https://github.com/ethereum/EIPs/issues/77#issuecomment-195607968",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/77",
    "id": 195607968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTYwNzk2OA==",
    "user": {
      "login": "amacneil",
      "id": 637671,
      "node_id": "MDQ6VXNlcjYzNzY3MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/637671?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amacneil",
      "html_url": "https://github.com/amacneil",
      "followers_url": "https://api.github.com/users/amacneil/followers",
      "following_url": "https://api.github.com/users/amacneil/following{/other_user}",
      "gists_url": "https://api.github.com/users/amacneil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amacneil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amacneil/subscriptions",
      "organizations_url": "https://api.github.com/users/amacneil/orgs",
      "repos_url": "https://api.github.com/users/amacneil/repos",
      "events_url": "https://api.github.com/users/amacneil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amacneil/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-11T23:59:56Z",
    "updated_at": "2016-03-11T23:59:56Z",
    "author_association": "NONE",
    "body": "Definitely agree with the motivation, but is there any reason for not simply using Base58Check, with a version byte/leading symbol of `E` or something? It's pretty well understood, and there aren't any downsides I'm aware of.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195607968/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195610782",
    "html_url": "https://github.com/ethereum/EIPs/issues/77#issuecomment-195610782",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/77",
    "id": 195610782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTYxMDc4Mg==",
    "user": {
      "login": "simenfd",
      "id": 11774591,
      "node_id": "MDQ6VXNlcjExNzc0NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/11774591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simenfd",
      "html_url": "https://github.com/simenfd",
      "followers_url": "https://api.github.com/users/simenfd/followers",
      "following_url": "https://api.github.com/users/simenfd/following{/other_user}",
      "gists_url": "https://api.github.com/users/simenfd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simenfd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simenfd/subscriptions",
      "organizations_url": "https://api.github.com/users/simenfd/orgs",
      "repos_url": "https://api.github.com/users/simenfd/repos",
      "events_url": "https://api.github.com/users/simenfd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simenfd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-12T00:05:29Z",
    "updated_at": "2016-03-12T00:06:09Z",
    "author_association": "NONE",
    "body": "@amacneil The simplest solution, most tested, and probably the best.  I think there might be some pride in constucting something else...  [One of the Seven deadly sins](https://en.wikipedia.org/wiki/Seven_deadly_sins#Pride) :P\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195610782/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195612164",
    "html_url": "https://github.com/ethereum/EIPs/issues/77#issuecomment-195612164",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/77",
    "id": 195612164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTYxMjE2NA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-12T00:15:25Z",
    "updated_at": "2016-03-12T00:23:04Z",
    "author_association": "MEMBER",
    "body": "@amacneil my reason against `bs58check` is the fact it uses `double-sha256` for calculating the checksum. Implementing that in a contract costs a lot in terms of gas, more than four times as much as running a single `sha3`.\n\nI do not mind what alphabet would be used.   If we care about hand written (as opposed to copy-paste only) addresses, base-58 itself has many characters which can be mistaken for another.  This will stop a wrongly written address from being used, but the user must make many permutations to get the right one. Choosing the right alphabet removes this problem too.\n\nAdditionally using `bs58check` as is without a prefix or different version field would make it easy to mistake as a Bitcoin address.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195612164/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195672582",
    "html_url": "https://github.com/ethereum/EIPs/issues/77#issuecomment-195672582",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/77",
    "id": 195672582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTY3MjU4Mg==",
    "user": {
      "login": "D-Nice",
      "id": 2888248,
      "node_id": "MDQ6VXNlcjI4ODgyNDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2888248?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/D-Nice",
      "html_url": "https://github.com/D-Nice",
      "followers_url": "https://api.github.com/users/D-Nice/followers",
      "following_url": "https://api.github.com/users/D-Nice/following{/other_user}",
      "gists_url": "https://api.github.com/users/D-Nice/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/D-Nice/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/D-Nice/subscriptions",
      "organizations_url": "https://api.github.com/users/D-Nice/orgs",
      "repos_url": "https://api.github.com/users/D-Nice/repos",
      "events_url": "https://api.github.com/users/D-Nice/events{/privacy}",
      "received_events_url": "https://api.github.com/users/D-Nice/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-12T06:40:10Z",
    "updated_at": "2016-03-12T06:40:10Z",
    "author_association": "NONE",
    "body": "What are the reasons for some of the letters being omitted from ethbase-2 and 3 alphabets?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195672582/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195795135",
    "html_url": "https://github.com/ethereum/EIPs/issues/77#issuecomment-195795135",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/77",
    "id": 195795135,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTc5NTEzNQ==",
    "user": {
      "login": "amacneil",
      "id": 637671,
      "node_id": "MDQ6VXNlcjYzNzY3MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/637671?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amacneil",
      "html_url": "https://github.com/amacneil",
      "followers_url": "https://api.github.com/users/amacneil/followers",
      "following_url": "https://api.github.com/users/amacneil/following{/other_user}",
      "gists_url": "https://api.github.com/users/amacneil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amacneil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amacneil/subscriptions",
      "organizations_url": "https://api.github.com/users/amacneil/orgs",
      "repos_url": "https://api.github.com/users/amacneil/repos",
      "events_url": "https://api.github.com/users/amacneil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amacneil/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-12T19:35:55Z",
    "updated_at": "2016-03-12T19:35:55Z",
    "author_association": "NONE",
    "body": "@axic that makes sense, good to make it easy to verify within a contract.\n\nI don't personally think hand written is worth optimizing too much for. In the long term some form of name registry will avoid people needing to deal with raw addresses. Obviously if it's easy to do then probably worth it though.\n\nEther way, it would be nice to have a similar sort of version field to base58check, so that (for example) every address begins with E, making it easily distinguishable as an Ethereum address (and different from a Bitcoin address, even to people who may not immediately be able to recognize the different alphabets).\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195795135/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/196275005",
    "html_url": "https://github.com/ethereum/EIPs/issues/77#issuecomment-196275005",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/77",
    "id": 196275005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjI3NTAwNQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-14T11:43:08Z",
    "updated_at": "2016-03-14T11:54:09Z",
    "author_association": "MEMBER",
    "body": "@D-Nice apart from the letters which can look similar (and mentioned above), those two alphabets are lacking some letters for aesthetic reasons (not to have letters reaching below baseline) in an attempt to make the output look pleasing.\n\nPutting aesthetics aside, the three more logical choices are:\n- base-58 if we don't care about addresses being typed in by hand\n- base-55 if we do\n- base-36 if we assume ICAP (for assets) will be supported in contracts, then decoders/encoders would be written for this alphabet\n\n@amacneil removing 3 letters from base-58 solves that problem. I lean towards just having a prefix and not trying to come up with a field within to produce the desired prefix\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/196275005/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/202459591",
    "html_url": "https://github.com/ethereum/EIPs/issues/77#issuecomment-202459591",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/77",
    "id": 202459591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjQ1OTU5MQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-28T16:02:43Z",
    "updated_at": "2016-03-28T16:03:00Z",
    "author_association": "MEMBER",
    "body": "I further thought: right now there is no distinction made between addresses used on a given network.  A distinction could be made by using a few bytes from the hash of block #0.\n\ni.e. for frontier/homestead it could be the constant `d456` (the first 2 bytes of the block hash of #0)\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/202459591/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/204119302",
    "html_url": "https://github.com/ethereum/EIPs/issues/77#issuecomment-204119302",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/77",
    "id": 204119302,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDExOTMwMg==",
    "user": {
      "login": "amacneil",
      "id": 637671,
      "node_id": "MDQ6VXNlcjYzNzY3MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/637671?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amacneil",
      "html_url": "https://github.com/amacneil",
      "followers_url": "https://api.github.com/users/amacneil/followers",
      "following_url": "https://api.github.com/users/amacneil/following{/other_user}",
      "gists_url": "https://api.github.com/users/amacneil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amacneil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amacneil/subscriptions",
      "organizations_url": "https://api.github.com/users/amacneil/orgs",
      "repos_url": "https://api.github.com/users/amacneil/repos",
      "events_url": "https://api.github.com/users/amacneil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amacneil/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-31T20:46:18Z",
    "updated_at": "2016-03-31T20:46:18Z",
    "author_association": "NONE",
    "body": "@axic that is a great idea. It would prevent people like [this](https://forum.ethereum.org/discussion/5443/coins-gone-to-test-net-account-and-didnt-retain-pw-for-network-main-account) from accidentally sending coins to testnet addresses, and unlike a fixed prefix it doesn't need to be assigned/registered for anyone creating new private chains.\n\nNot sure whether it's worth thinking about at this stage, but I think in future once sharding is implemented, addresses will need to have some form of shard prefix added to them as well.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/204119302/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/372352431",
    "html_url": "https://github.com/ethereum/EIPs/issues/77#issuecomment-372352431",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/77",
    "id": 372352431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjM1MjQzMQ==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-12T15:33:38Z",
    "updated_at": "2018-03-12T15:33:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Now that EIP-55 is merged, is this EIP still relevant?\r\n\r\nIs there something that would happen that would cause the discussion here to continue? Is there any circumstance where this proposal would be merged or abandoned?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/372352431/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1013883159",
    "html_url": "https://github.com/ethereum/EIPs/issues/77#issuecomment-1013883159",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/77",
    "id": 1013883159,
    "node_id": "IC_kwDOAq426M48bqEX",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-16T14:10:24Z",
    "updated_at": "2022-01-16T14:10:24Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1013883159/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1025163453",
    "html_url": "https://github.com/ethereum/EIPs/issues/77#issuecomment-1025163453",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/77",
    "id": 1025163453,
    "node_id": "IC_kwDOAq426M49GsC9",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-30T15:09:55Z",
    "updated_at": "2022-01-30T15:09:55Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1025163453/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
