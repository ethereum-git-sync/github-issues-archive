{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/169",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/169/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/169/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/169/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/169",
  "id": 186609807,
  "node_id": "MDU6SXNzdWUxODY2MDk4MDc=",
  "number": 169,
  "title": "Dust account replay security",
  "user": {
    "login": "gavofyork",
    "id": 138296,
    "node_id": "MDQ6VXNlcjEzODI5Ng==",
    "avatar_url": "https://avatars.githubusercontent.com/u/138296?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gavofyork",
    "html_url": "https://github.com/gavofyork",
    "followers_url": "https://api.github.com/users/gavofyork/followers",
    "following_url": "https://api.github.com/users/gavofyork/following{/other_user}",
    "gists_url": "https://api.github.com/users/gavofyork/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gavofyork/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gavofyork/subscriptions",
    "organizations_url": "https://api.github.com/users/gavofyork/orgs",
    "repos_url": "https://api.github.com/users/gavofyork/repos",
    "events_url": "https://api.github.com/users/gavofyork/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gavofyork/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2016-11-01T18:28:27Z",
  "updated_at": "2022-01-18T21:15:10Z",
  "closed_at": "2022-01-18T21:15:10Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "# Brief\r\n\r\nEIP #168 allows for unused accounts to be reclaimed, freeing space in the state trie. However, these reclaimed accounts are now vulnerable to replay attacks. This is a proposal to ensure such accounts remain secure for reuse, against replay attacks, even after being reaped.\r\n\r\n# Description\r\n\r\nRather than having the account nonce begin at zero and increment, which is open to replay attacks if the nonce is reset during the lifetime of the account, instead it begins equal to the block number in which it is created.\r\n\r\nWe only increment the nonce at most once per block. This ensures that the range of nonce between resets is never repeated and thus avoids replay attacks, particularly on accounts which send more transactions than their lifetime measured in blocks.\r\n\r\n# Specification\r\n\r\n## Variant A\r\n\r\na. Newly created account entries get a **nonce equal** to the current **block number**.\r\nb. Transactions do **not** result in the increment of the sender account by one.\r\nc. At the end of the block, each account that sent at least one transaction has its nonce incremented by one.\r\nd. A transaction of the **same hash** may **not** be included in the **same block**.\r\n\r\n## Variant B:\r\n\r\nExactly as Variant A with additional rules:\r\n\r\ne. Transactions include an additional pre-signature field, `ordering`.\r\nf. A transaction of `ordering = O` is only valid for inclusion in a block if either:\r\n- `O = 0`; or\r\n- there exists, in this block, at least one transaction of `ordering = O - 1`.\r\n\r\n## Variant C\r\n\r\na. Newly created account entries get a **nonce equal** to the current **block number** times `MAX_TXS_PER_ACCT_PER_BLOCK`.\r\nb. Transactions can only be sent from a nonempty account.\r\nc. If an account has nonzero nonce, then a transaction sent from it may be included in the current block iff:\r\n  - the transaction has the same nonce as the account nonce; and\r\n  - the nonce divided by `MAX_TXS_PER_ACCT_PER_BLOCK` is no greater than the current block number.\r\n  The account nonce is incremented as normal if the transaction is included.\r\n\r\nExample `MAX_TXS_PER_ACCT_PER_BLOCK` could be 64.\r\n\r\n# Critique\r\n\r\nIn general this mechanism leads to a fairly modest state trie increase of at most 3 bytes per account (which may be reducible through contextual compression) and around 4 bytes per transaction.\r\n\r\nThis mechanism, in the worst case, delivers a little more faff for transactors who make many transactions in a batch since any that are not included in the same block will necessarily need re-signing and re-submitting. This is mitigated by the fact that large batches are automated and relatively uncommon. Furthermore, large batch payments are better managed through a simple suiciding contract-creation transaction which guarantees they are all processed and largely moots the problem that they could be split with many transactions needing to be re-submitted.\r\n\r\nVariant 2 exists to allow multiple transactions, possibly of equivalent content, to be included in the same block with a particular ordering. It would cost around an extra byte per transaction. If variant 2 were not adopted, similar functionality could alternatively be provided through a suiciding contract-creation transaction executing a batch.",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/169/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/169/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/258326087",
    "html_url": "https://github.com/ethereum/EIPs/issues/169#issuecomment-258326087",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/169",
    "id": 258326087,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODMyNjA4Nw==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-04T01:57:22Z",
    "updated_at": "2016-11-04T02:05:32Z",
    "author_association": "MEMBER",
    "body": "I think there may be a simpler way to do this:\n- If an account is empty, and it is touched, its nonce is set to `block.number * MAX_TXS_PER_ACCT_PER_BLOCK`.\n- Transactions can only be sent from a nonempty account.\n- If an account has nonzero nonce, then the transaction must have the same nonce as the account nonce. The account nonce is incremented.\n- If an account has nonce == `(block.number + 1) * MAX_TXS_PER_ACCT_PER_BLOCK`, then transactions from that account are invalid until the block number is incremented.\n\nWe could set `MAX_TXS_PER_ACCT_PER_BLOCK` to something like 64.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/258326087/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/264390537",
    "html_url": "https://github.com/ethereum/EIPs/issues/169#issuecomment-264390537",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/169",
    "id": 264390537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDM5MDUzNw==",
    "user": {
      "login": "janx",
      "id": 5958,
      "node_id": "MDQ6VXNlcjU5NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5958?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janx",
      "html_url": "https://github.com/janx",
      "followers_url": "https://api.github.com/users/janx/followers",
      "following_url": "https://api.github.com/users/janx/following{/other_user}",
      "gists_url": "https://api.github.com/users/janx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janx/subscriptions",
      "organizations_url": "https://api.github.com/users/janx/orgs",
      "repos_url": "https://api.github.com/users/janx/repos",
      "events_url": "https://api.github.com/users/janx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-02T07:22:48Z",
    "updated_at": "2016-12-02T07:25:25Z",
    "author_association": "MEMBER",
    "body": "There may be another two ways:\r\n\r\nWay 1:\r\n\r\n* record in local db a global `MAX_NONCE` which is the largest of all account nonces\r\n* newly created account get a nonce equal to `MAX_NONCE`\r\n\r\nWay 2:\r\n\r\n* after block X, use RLP type `(int, int)` for new nonce, which is a pair of integers:\r\n  - `nonce[0]` represents account generation\r\n  - `nonce[1]` represents txs number sent from account as usual\r\n* if an account is reaped, only `nonce[1]` is reset to zero, `nonce[0]` is left unmodified\r\n* if an account is touched, it's `nonce[0]` is incremented\r\n\r\nThe first way add nothing new to account/transaction, while the second adds ~2 bytes to account data.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/264390537/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/362560841",
    "html_url": "https://github.com/ethereum/EIPs/issues/169#issuecomment-362560841",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/169",
    "id": 362560841,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjU2MDg0MQ==",
    "user": {
      "login": "gumb0",
      "id": 1863135,
      "node_id": "MDQ6VXNlcjE4NjMxMzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1863135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gumb0",
      "html_url": "https://github.com/gumb0",
      "followers_url": "https://api.github.com/users/gumb0/followers",
      "following_url": "https://api.github.com/users/gumb0/following{/other_user}",
      "gists_url": "https://api.github.com/users/gumb0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gumb0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gumb0/subscriptions",
      "organizations_url": "https://api.github.com/users/gumb0/orgs",
      "repos_url": "https://api.github.com/users/gumb0/repos",
      "events_url": "https://api.github.com/users/gumb0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gumb0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-02T11:23:15Z",
    "updated_at": "2018-02-02T11:23:15Z",
    "author_association": "MEMBER",
    "body": "> Way 1:\r\n> \r\n> - record in local db a global MAX_NONCE which is the largest of all account nonces\r\n> - newly created account get a nonce equal to MAX_NONCE\r\n\r\nPossible downside of this I see: fast sync after downloading the state trie would need to go over all accounts to find the current `MAX_NONCE`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/362560841/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1005172787",
    "html_url": "https://github.com/ethereum/EIPs/issues/169#issuecomment-1005172787",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/169",
    "id": 1005172787,
    "node_id": "IC_kwDOAq426M476bgz",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-04T21:10:18Z",
    "updated_at": "2022-01-04T21:10:18Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1005172787/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1015839955",
    "html_url": "https://github.com/ethereum/EIPs/issues/169#issuecomment-1015839955",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/169",
    "id": 1015839955,
    "node_id": "IC_kwDOAq426M48jHzT",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-18T21:15:09Z",
    "updated_at": "2022-01-18T21:15:09Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1015839955/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
