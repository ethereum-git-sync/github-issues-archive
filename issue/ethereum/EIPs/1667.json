{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/1667",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/1667/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/1667/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/1667/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/1667",
  "id": 393547505,
  "node_id": "MDU6SXNzdWUzOTM1NDc1MDU=",
  "number": 1667,
  "title": "ERC-1667 - Standardized Plasma MVP Proposal",
  "user": {
    "login": "hamdiallam",
    "id": 10552045,
    "node_id": "MDQ6VXNlcjEwNTUyMDQ1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10552045?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hamdiallam",
    "html_url": "https://github.com/hamdiallam",
    "followers_url": "https://api.github.com/users/hamdiallam/followers",
    "following_url": "https://api.github.com/users/hamdiallam/following{/other_user}",
    "gists_url": "https://api.github.com/users/hamdiallam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hamdiallam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hamdiallam/subscriptions",
    "organizations_url": "https://api.github.com/users/hamdiallam/orgs",
    "repos_url": "https://api.github.com/users/hamdiallam/repos",
    "events_url": "https://api.github.com/users/hamdiallam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hamdiallam/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2018-12-21T18:14:24Z",
  "updated_at": "2021-12-04T20:13:27Z",
  "closed_at": "2021-12-04T20:13:27Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# ERC - Standardized Plasma MVP Proposal\r\n---\r\neip: 1667\r\ntitle: ERC 1667 Standardized Plasma MVP Smart Contract\r\nauthor: Hamdi Allam <hallam@berkeley.edu>, Wesley Graham <wgraham@berkeley.edu>\r\nstatus: Draft\r\ntype: Standards Track\r\ncategory: ERC\r\ncreated: 12-03-2018\r\n\r\n\r\n### Reading\r\n[Minimum Viable Plasma](https://ethresear.ch/t/minimal-viable-plasma/426)\r\n\r\n### Reference Implementation\r\nhttps://github.com/fourthstate/plasma-mvp-rootchain\r\n\r\n## Simple Summary\r\nThis standard defines a smart contract based on the original Plasma MVP specification. Allows developers to deploy their own plasma sidechain through a common contract interface. Sidechains can support any ERC20 asset.\r\n\r\n## Motivation\r\nA standard Plasma MVP interface enables support for a standardized wallet that can be used within any plasma sidechain. \"Watch-Tower\" services can also be run by third parties across multiple independent sidechains.\r\n\r\n\r\n## Specification\r\nThe provided specification assumes that Ether is the native currency of this plasma-mvp sidechain.\r\n\r\n```solidity\r\nfunction submitBlock(bytes32[] blocks, uint256[] txnsPerBlock, uint256[] feesPerBlock, uint256 blockNum)\r\n```\r\nThe validator submits a list block headers in ascending order along with the number of transactions and fee amounts. `blockNum` must be the intended block number of the first header in this call. Ordering is enforced on each call. `blockNum == lastCommittedBlock + 1`.\r\n\r\nEach merkle tree can be of variable size(capped at `2^16 - 1` transactions). The fee utxo is given the last position in the block, `2^16 - 1`, so that it is has the worst priority for that block.\r\n\r\n<br />\r\n\r\n```solidity\r\nfunction deposit(address owner) payable\r\n```\r\nEntry point into the child chain. The user can create a spendable utxo owned by the address, `owner`. `msg.value` specifices the amount of this deposit.\r\n\r\nEach deposit is identified with an incremental nonce. Validators catch deposits through event handlers and maintain a collection of spendable deposits.\r\n\r\n<br />\r\n\r\n\r\n```solidity\r\nfunction startTransactionExit(uint256[3] txPos, bytes txBytes, bytes proof, bytes confirmSignatures, uint256 committedFee) payable\r\n```\r\n\r\nExit procedure for exiting a utxo on the child chain (not deposits). \r\n\r\n `txPos` locates the transaction on the child chain. The leaf, hash(`txBytes`), is checked against the block header using the `proof`. Any included spend of this output followed by an exit(no broadcast of the confirm signature), must commit to the fee in the spend.\r\n \r\nThe `confirmSignatures` represent the acknowledgement of the inclusion by both inputs. An exit bond must be provided that is refunded for honest exits or awarded to the challenger.\r\n\r\n<br />\r\n\r\n```solidity\r\nfunction startDepositExit(uint256 nonce, uint256 committedFee) payable\r\n```\r\n\r\nDeposits are  identified by their `nonce`. The caller's address must match the owner of the deposit. Any included spend of this deposit followed by an exit (no broadcast of the confirm signature), must commit to the fee in the spend. An exit bond must be provided that is refunded for honest exits or awarded to the challenger.\r\n\r\n<br />\r\n\r\n```solidity\r\nfunction challengeFeeMismatch(uint256[4] exitingTxPos, uint256[2] challengingTxPos, bytes txByes, bytes proof)\r\n```\r\nAn exit that commits an invalid fee can be challenged with this function. The `challengingTxPos` along with the `txBytes` and `proof` demonstrate a proof of an inclusion of a direct spend of the `exitingTxPos`\r\n\r\nA deposit will have the first 3 fields in the `exitingTxPos` zero'd out and vice versa for a utxo. \r\n`exitingTxPos` - `[blockNum, txIndex, outputIndex, depositNonce]`\r\n`challengingTxPos` - `[blockNum, txIndex]`\r\n\r\n<br />\r\n\r\n``` solidity\r\nfunction challengeExit(uint256[4] exitingTxPos, uint256[2] challengingTxPos, bytes txBytes, bytes proof, bytes confirmSignature)\r\n```\r\n\r\n`exitingTxPos` and `challengingTxPos` follow the same convention as `challengeFeeMismatch`\r\n\r\nA uxto or deposit that is initiating an exit after being spent using this  call. A successfull challenge awards the caller with the exit bond. The challenging transaction must be a direct spend of the exiting transaction.\r\n\r\nThe `proof` and `txBytes` is sufficient for a proof of inclusion in the child chain. The `confirmSignature` acknowledges the inclusion of the transaction's parent in the plasma chain and enables challenges of malicious child exits.\r\n\r\n\r\n## Rationale \r\nIn this contract, deposits are decoupled with block headers that contain sidechain transactions. An incrementing `depositNonce` is used to identify deposits.\r\n\r\nThis is to prevent a race condition that occurs when including deposit blocks before every `submitBlock` call by the operator. With the original MVP proposal, a plasma operator (with high probability) can inject a malicious block when a deposit transaction is in flight by increasing its `submitBlock` transaction fee. This would give every transaction in the malicous block a better priority than the deposit, potentially allowing the operator to steal funds.\r\n\r\nDecoupling deposits from transactions and processing deposit exits in a seperate queue mitigates this issue. The operator is responsible for catching deposit events and adding them to the utxo store.\r\n\r\n\r\nPlasma MVP transactions follow the following form:\r\n- Block Numbering starts at 1. A full position consists of, `[blockNum, txIndex, outputIndex, depositNonce]`. The first three inputs and the depositNonce are mutually exclusive.\r\n\r\n```\r\n[\r\n  [Blknum1, TxIndex1, Oindex1, DepositNonce1, Owner1, Input1ConfirmSig,\r\n\r\n   Blknum2, TxIndex2, Oindex2, DepositNonce2, Owner2, Input2ConfirmSig,\r\n\r\n   NewOwner, Denom1, NewOwner, Denom2, Fee],\r\n\r\n  [Signature1, Signature2]\r\n]\r\n```\r\n\r\n\r\n## Copyright Waiver\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).\r\n\r\nFurther discussion can also be had in the ERC channel of our [Discord Server](https://discord.gg/YTB5A4P).",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/1667/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/1667/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/449558340",
    "html_url": "https://github.com/ethereum/EIPs/issues/1667#issuecomment-449558340",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1667",
    "id": 449558340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTU1ODM0MA==",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-22T09:40:38Z",
    "updated_at": "2018-12-22T09:40:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "I do not believe submitting multiple block roots in a single submitBlock call is safe. A miner colluding with an operator can potentially orphan multiple plasma blocks at the cost of 1 mainnet block if the reward of the attack in all blocks is greater than the mainnet block reward. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/449558340/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/449593134",
    "html_url": "https://github.com/ethereum/EIPs/issues/1667#issuecomment-449593134",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1667",
    "id": 449593134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTU5MzEzNA==",
    "user": {
      "login": "hamdiallam",
      "id": 10552045,
      "node_id": "MDQ6VXNlcjEwNTUyMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10552045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hamdiallam",
      "html_url": "https://github.com/hamdiallam",
      "followers_url": "https://api.github.com/users/hamdiallam/followers",
      "following_url": "https://api.github.com/users/hamdiallam/following{/other_user}",
      "gists_url": "https://api.github.com/users/hamdiallam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hamdiallam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hamdiallam/subscriptions",
      "organizations_url": "https://api.github.com/users/hamdiallam/orgs",
      "repos_url": "https://api.github.com/users/hamdiallam/repos",
      "events_url": "https://api.github.com/users/hamdiallam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hamdiallam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-22T19:35:31Z",
    "updated_at": "2018-12-22T19:49:43Z",
    "author_association": "NONE",
    "body": "Can you further elaborate on this vulnerability? If the plasma blocks where orphaned, then operator would have to re-commit those blocks.\r\n\r\nAdditionally, none of the committed blocks are considered final for users until the corresponding confirm signatures have been sent over (wallet would have some presumed finality threshold). With an invalid commitment, users would exit their funds.\r\n\r\nAny specific attack vector you had in mind?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/449593134/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/449600604",
    "html_url": "https://github.com/ethereum/EIPs/issues/1667#issuecomment-449600604",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1667",
    "id": 449600604,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTYwMDYwNA==",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-22T22:11:41Z",
    "updated_at": "2018-12-22T22:11:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "N plasma blocks are committed simultaneously, all data is made available, confirmation sigs get exchanged, and thus all participants consider the transactions finalized.  At this point, you accept a payment and you give whatever product was involved.\r\n\r\nRight after that, the operator/miner orphans the block, effectively cancelling the transactions. When they recommit, they skip the transactions they made, effectively double spending in the plasma chain.\r\n\r\nAdding a finality period on wallets would be a good idea, agreed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/449600604/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/449607810",
    "html_url": "https://github.com/ethereum/EIPs/issues/1667#issuecomment-449607810",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1667",
    "id": 449607810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTYwNzgxMA==",
    "user": {
      "login": "hamdiallam",
      "id": 10552045,
      "node_id": "MDQ6VXNlcjEwNTUyMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10552045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hamdiallam",
      "html_url": "https://github.com/hamdiallam",
      "followers_url": "https://api.github.com/users/hamdiallam/followers",
      "following_url": "https://api.github.com/users/hamdiallam/following{/other_user}",
      "gists_url": "https://api.github.com/users/hamdiallam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hamdiallam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hamdiallam/subscriptions",
      "organizations_url": "https://api.github.com/users/hamdiallam/orgs",
      "repos_url": "https://api.github.com/users/hamdiallam/repos",
      "events_url": "https://api.github.com/users/hamdiallam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hamdiallam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-23T01:21:16Z",
    "updated_at": "2018-12-23T01:21:38Z",
    "author_association": "NONE",
    "body": "A finality threshold should mitigate this issue. A confirm signature should not immediately be sent when the eth block is first mined.\r\n\r\nThe batched `submitBlock` could be removed using large block sizes. However variable block sizes, batching smaller blocks together is beneficial, reducing the merkle proof size when exiting/challenging.\r\n\r\nThanks for bringing this up!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/449607810/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974705574",
    "html_url": "https://github.com/ethereum/EIPs/issues/1667#issuecomment-974705574",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1667",
    "id": 974705574,
    "node_id": "IC_kwDOAq426M46GNOm",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-11-20T20:12:58Z",
    "updated_at": "2021-11-20T20:12:58Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974705574/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986086526",
    "html_url": "https://github.com/ethereum/EIPs/issues/1667#issuecomment-986086526",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1667",
    "id": 986086526,
    "node_id": "IC_kwDOAq426M46xnx-",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-04T20:13:26Z",
    "updated_at": "2021-12-04T20:13:26Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986086526/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
