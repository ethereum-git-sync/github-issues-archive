{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/19",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/19/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/19/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/19/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/19",
  "id": 117720478,
  "node_id": "MDU6SXNzdWUxMTc3MjA0Nzg=",
  "number": 19,
  "title": "APIs for Transferable Fungibles",
  "user": {
    "login": "ethers",
    "id": 6937903,
    "node_id": "MDQ6VXNlcjY5Mzc5MDM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6937903?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ethers",
    "html_url": "https://github.com/ethers",
    "followers_url": "https://api.github.com/users/ethers/followers",
    "following_url": "https://api.github.com/users/ethers/following{/other_user}",
    "gists_url": "https://api.github.com/users/ethers/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ethers/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ethers/subscriptions",
    "organizations_url": "https://api.github.com/users/ethers/orgs",
    "repos_url": "https://api.github.com/users/ethers/repos",
    "events_url": "https://api.github.com/users/ethers/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ethers/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2015-11-19T01:31:08Z",
  "updated_at": "2023-05-21T14:13:34Z",
  "closed_at": "2015-11-19T10:36:26Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "The specification is at the wiki https://github.com/ethereum/wiki/wiki/Standardized_Contract_APIs#transferable-fungibles so that it can be edited by anyone.\nThe wiki is initially from https://gist.github.com/frozeman/090ae32041bcfe120824 from which prior discussion should be viewed.\nThis issue is created per obscuren's suggestion on Gitter.\nAnyone can provide content/suggestions for Abstract, Motivation etc.\n\n<pre>\n  EIP: <EIP number>\n  Title: APIs for Transferable Fungibles\n  Author: <list of authors' real names and optionally, email addrs>\n  Status: Draft\n  Type: Informational\n  Created: 2015-11-19\n</pre>\n\n\n==Abstract==\nAlthough Ethereum allows developers to create absolutely any kind of application without restriction to specific feature types, and prides itself on its \"lack of features\", there is nevertheless a need to standardize certain very common use cases in order to allow users and applications to more easily interact with each other. This includes sending currency units.\n\n==Motivation==\n\n==Specification==\nhttps://github.com/ethereum/wiki/wiki/Standardized_Contract_APIs#transferable-fungibles\n\n==Rationale==\n\n==Implementation==\n",
  "closed_by": {
    "login": "ethers",
    "id": 6937903,
    "node_id": "MDQ6VXNlcjY5Mzc5MDM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6937903?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ethers",
    "html_url": "https://github.com/ethers",
    "followers_url": "https://api.github.com/users/ethers/followers",
    "following_url": "https://api.github.com/users/ethers/following{/other_user}",
    "gists_url": "https://api.github.com/users/ethers/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ethers/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ethers/subscriptions",
    "organizations_url": "https://api.github.com/users/ethers/orgs",
    "repos_url": "https://api.github.com/users/ethers/repos",
    "events_url": "https://api.github.com/users/ethers/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ethers/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/19/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/19/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/157920585",
    "html_url": "https://github.com/ethereum/EIPs/issues/19#issuecomment-157920585",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/19",
    "id": 157920585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzkyMDU4NQ==",
    "user": {
      "login": "ethers",
      "id": 6937903,
      "node_id": "MDQ6VXNlcjY5Mzc5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6937903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ethers",
      "html_url": "https://github.com/ethers",
      "followers_url": "https://api.github.com/users/ethers/followers",
      "following_url": "https://api.github.com/users/ethers/following{/other_user}",
      "gists_url": "https://api.github.com/users/ethers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ethers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ethers/subscriptions",
      "organizations_url": "https://api.github.com/users/ethers/orgs",
      "repos_url": "https://api.github.com/users/ethers/repos",
      "events_url": "https://api.github.com/users/ethers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ethers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T01:45:15Z",
    "updated_at": "2015-11-19T01:45:15Z",
    "author_association": "MEMBER",
    "body": "recent discussion from https://gist.github.com/frozeman/090ae32041bcfe120824\n\n@vbuterin said:\nYeah, createCheque and cashCheque as above, plus transferCheque(address _from, address _to, uint256 _value) sounds good. In that case, we should probably remove the _to argument from cashCheque; generally, you can only cash cheques from your own bank account.\n\nWe probably also want getChequeValue(address _from, address _for). We then have a choice of whether we want to keep the value argument in cashCheque rather than simply only allowing cashing in 100% of whatever is in there. If we want to fully follow the cheque analogy, this triad seems most intuitive to me:\n\nfunction createCheque(address _for, uint256 _maxValue)\nfunction cashCheque(address _from)\nfunction getChequeValue(address _from, address _for)\nQuestion: does running createCheque twice add the value of the two cheques together? Are there legitimate use cases for creating a cheque multiple times and then cashing either once or multiple times?\n\n@nmushegian said:\nAll the functions that return uint should return (uint, bool) instead. You can easily make up scenarios where a 0 return value is ambiguous and significant. Is there any other simpler pattern for handling this?\n\n@niran said:\nI think the value parameter is useful in cashCheque. It absolves callers from having to verify that the amount they needed was provided, and from having to refund amounts greater than what was needed. cashCheque would only succeed if the provided value was remaining in the cheque.\nAlso, I think using createCheque(2**100) for the approve use case is going to lead to less clear code. It gets better if you make the magic number a constant, like createCheque(UNLIMITED_CHEQUE_VALUE), but lots of people won't do that. I think it's worth having a createBlankCheque or something for the approve scenario. Most tokens will use the TokenLib to handle all of the cheque logic, so it doesn't really make things worse for token authors.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/157920585/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158017920",
    "html_url": "https://github.com/ethereum/EIPs/issues/19#issuecomment-158017920",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/19",
    "id": 158017920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAxNzkyMA==",
    "user": {
      "login": "simondlr",
      "id": 716965,
      "node_id": "MDQ6VXNlcjcxNjk2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/716965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simondlr",
      "html_url": "https://github.com/simondlr",
      "followers_url": "https://api.github.com/users/simondlr/followers",
      "following_url": "https://api.github.com/users/simondlr/following{/other_user}",
      "gists_url": "https://api.github.com/users/simondlr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simondlr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simondlr/subscriptions",
      "organizations_url": "https://api.github.com/users/simondlr/orgs",
      "repos_url": "https://api.github.com/users/simondlr/repos",
      "events_url": "https://api.github.com/users/simondlr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simondlr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T10:34:45Z",
    "updated_at": "2015-11-19T10:34:45Z",
    "author_association": "NONE",
    "body": "Please continue discussion here instead: https://github.com/ethereum/EIPs/issues/20\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158017920/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
