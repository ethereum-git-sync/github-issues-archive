{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/763/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/763/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/763/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/763",
  "id": 273349210,
  "node_id": "MDU6SXNzdWUyNzMzNDkyMTA=",
  "number": 763,
  "title": "ERC: Standard API for multisig wallet smart contracts",
  "user": {
    "login": "3sGgpQ8H",
    "id": 3917202,
    "node_id": "MDQ6VXNlcjM5MTcyMDI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3917202?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/3sGgpQ8H",
    "html_url": "https://github.com/3sGgpQ8H",
    "followers_url": "https://api.github.com/users/3sGgpQ8H/followers",
    "following_url": "https://api.github.com/users/3sGgpQ8H/following{/other_user}",
    "gists_url": "https://api.github.com/users/3sGgpQ8H/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/3sGgpQ8H/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/3sGgpQ8H/subscriptions",
    "organizations_url": "https://api.github.com/users/3sGgpQ8H/orgs",
    "repos_url": "https://api.github.com/users/3sGgpQ8H/repos",
    "events_url": "https://api.github.com/users/3sGgpQ8H/events{/privacy}",
    "received_events_url": "https://api.github.com/users/3sGgpQ8H/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 27,
  "created_at": "2017-11-13T08:42:12Z",
  "updated_at": "2022-01-03T06:14:18Z",
  "closed_at": "2022-01-03T06:14:18Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# Standard API for multisig wallet smart contracts\r\n\r\nThis ERC proposes standard API for multisig wallets Ethereum smart contracts.\r\n\r\n## 1. Motivation\r\n\r\nMultisig wallets are widely-used class of Ethereum smart contracts.  Multisig wallet is a smart contract that allows a group of people to collectively own Ethereum address and to execute transactions from it.  This addresses know problem of plain Ethereum addresses controlled by private keys, where private key becomes single point of failure.\r\nCurrently, there is no common API nor implementation for multisig wallets.  Being an owner of multiple multisig wallets with different APIs is a hard job, because one needs to use different tools/calls for the same operations on different wallet.  This is inconvenient and error-prone.  Standard API will make it possible to create convenient and secure tools one could make to deal with all his multisig wallets in the same way.\r\n\r\n## 2. Use Cases\r\n\r\nProposed API supports two main use cases named “Public Flow” and “Private Flow”.  Both use cases have the same roles: _Suggester_, _Approvers_, _Executor_, and the same goal: execute transaction via multisig wallet.\r\n\r\n### 2.1. Public Flow\r\n\r\n1. _Suggester_ suggest transaction to be executed\r\n2. _Suggester_ reveals transaction details on chain, so everybody may see it\r\n3. _Approvers_ approve transaction\r\n4. _Executor_ executer transaction from multisig address\r\n\r\n### 2.2. Private Flow\r\n\r\n1. _Suggester_ suggest transaction to be executed\r\n2. _Suggester_ sends transaction details to _Approvers_ and _Executor_ via private channels\r\n3. _Approvers_ approve transaction\r\n4. _Executor_ executer transaction from multisig address\r\n\r\n## 3. Methods\r\n\r\nWe propose the following methods to be included into API standard:\r\n\r\n### 3.1. suggest(bytes32)\r\n\r\n##### Signature:\r\n\r\n    function suggest (bytes32 _hash) returns (uint256 id)\r\n\r\n##### Description:\r\n\r\nSuggest transaction with given hash to be executed.\r\nReturns unique ID of suggested transactions.\r\nLogs “Suggestion” event.\r\nReverts if transaction was not suggested, e.g. when _hash is zero or caller is not authorized to suggest transactions.\r\nHash is calculated via the following Solidity statement:\r\n\r\n    keccak256 (to, value, data, salt)\r\n\r\nHere:\r\n* to – transaction destination address (address)\r\n* value – transaction value in Wei (uint256)\r\n* data – transaction data (bytes)\r\n* salt – zero for public flow, arbitrary number for private flow (uint256)\r\n\r\nHash may not be zero.\r\nID of suggested transactions are never reused.\r\n\r\n### 3.2. approve(uint256)\r\n\r\n##### Signature:\r\n\r\n    function approve (uint256 _id)\r\n\r\n##### Description:\r\n\r\nApprove pending suggested transaction with given ID.\r\nLogs “Approval” event.\r\nReverts if transaction was not approved, e.g. when _id is not a valid ID of pending suggested transaction, caller is not authorized to approve transaction or caller has already approved this transaction.\r\n\r\n### 3.3. revokeApproval(uint256 _id)\r\n\r\n##### Signature:\r\n\r\n    function revokeApproval (uint256 _id)\r\n\r\n##### Description:\r\n\r\nRevoke approval from suggested transaction with given ID.\r\nLogs “ApprovalRevocation” event.\r\nReverts if approval was not revoked from transaction, e.g. when _id is not a valid ID of pending suggested transaction, caller is not authorized to revoke approvals or called has not approved this transaction yet.\r\n\r\n### 3.4. execute(uint256,address,uint256,bytes,uint256)\r\n\r\n##### Signature:\r\n\r\n    function execute (uint256 _id, address _to, uint256 _value, bytes _data, uint256 _salt)\r\n    returns (bool success)\r\n\r\n##### Description:\r\n\r\nExecute suggested transaction with given ID and details.\r\nReturns true if transaction was executed successfully, false if execution failed.\r\nLogs “Execution” event.\r\nReverts if transaction was not executed, e.g. when _id is not a valid ID of pending suggested transaction, transaction didn't collect enough approvals yet, transaction details do not match hash passed to “suggest” method or caller is not authorized to execute transactions.\r\n\r\n### 3.5. reveal(uint256, address, uint256, bytes)\r\n\r\n##### Signature:\r\n\r\n    function reveal(uint256 _id, address _to, uint256 _value, bytes _data)\r\n\r\n##### Description:\r\n\r\nReveal details of suggested transaction with given ID by logging “Revelation” event.\r\nLogs “Revelation” event.\r\nReverts if transaction details were not revealed, e.g. when _id is not a valid ID of pending suggested transaction, transaction details (assuming zero salt) do not match hash passed to “suggest” method or caller it not authorized to reveal transaction details.\r\nNote, that details of transactions whose hash was calculated with non-zero salt cannot be revealed.\r\n\r\n### 3.6. getHash(uint256)\r\n\r\n##### Signature:\r\n\r\n    function getHash (uint256 _id) constant returns (bytes32 hash)\r\n\r\n##### Description:\r\n\r\nGet hash of details of suggested transaction with given ID.\r\nReverts if _id is not a valid ID of pending suggested transaction.\r\n\r\n### 3.7. isApproved(uint256)\r\n\r\n##### Signature:\r\n\r\n    function isApproved (uint256 _id) constant returns (bool approved)\r\n\r\n##### Description:\r\n\r\nTells whether suggested transaction with given ID has collected enough approvals to be executed.\r\nReverts if _id is not a valid ID of pending suggested transaction.\r\n\r\n### 3.8. isApprovedBy(uint256,address)\r\n\r\n##### Signature\r\n\r\n    function isApprovedBy (uint256 _id, address _owner) constant returns (bool approved)\r\n\r\n##### Description\r\n\r\nTells whether suggested transaction with given ID has been approved by given owner.\r\nReverts if _id is not a valid ID of pending suggested transaction.\r\n\r\n## 4. Events\r\n\r\nWe propose the following events to be included into API standard:\r\n\r\n### 4.1. Suggestion(uint256,address,bytes32)\r\n\r\n##### Signature:\r\n\r\n    event Suggestion (uint256 indexed id, address indexed owner, bytes32 hash)\r\n\r\n##### Description\r\n\r\nLogged when transaction with given ID and hash of details was suggested by given owner.\r\n\r\n### 4.2. Approval(uint256,address)\r\n\r\n##### Signature:\r\n\r\n    event Approval (uint256 indexed id, address indexed owner)\r\n\r\n##### Description:\r\n\r\nLogged when transaction with given ID was approved by given owner.\r\n\r\n### 4.3. ApprovalRevocation(uint256,address)\r\n\r\n##### Signature:\r\n\r\n    event ApprovalRevocation (uint256 indexed id, address indexed owner)\r\n\r\n##### Description:\r\n\r\nLogged when approval was revoked by given owner from transaction with given ID.\r\n\r\n### 4.4. Execution(uint256,address,bool)\r\n\r\n##### Signature:\r\n\r\n    event Execution (uint256 indexed id, address indexed owner, bool result)\r\n\r\n##### Description:\r\n\r\nLogged when transaction with given ID was executed by given owner and produced given result.\r\n\r\n### 4.5. Revelation(uint256,address,address,uint256,bytes)\r\n\r\n##### Signature:\r\n\r\n    event Revelation (\r\n      uint256 indexed id,\r\n      address indexed owner,\r\n      address indexed to, uint256 value, bytes data)\r\n\r\n##### Description:\r\n\r\nLogged when given details (assuming zero salt) of transaction with given ID was revealed by given owner.\r\n",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/763/reactions",
    "total_count": 6,
    "+1": 6,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/763/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/343937340",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-343937340",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 343937340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzkzNzM0MA==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-13T14:35:55Z",
    "updated_at": "2017-11-13T14:35:55Z",
    "author_association": "MEMBER",
    "body": "Is it necessary to invent an entirely new API for this? Why not write it to conform to one or more of the existing implementations?\r\n\r\nAlso, personally I think the format that accepts a single TX with the signatures of a quorum of participants is a much better approach than having each participant individually submit an approval TX.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/343937340/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/343950115",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-343950115",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 343950115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzk1MDExNQ==",
    "user": {
      "login": "3sGgpQ8H",
      "id": 3917202,
      "node_id": "MDQ6VXNlcjM5MTcyMDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3917202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3sGgpQ8H",
      "html_url": "https://github.com/3sGgpQ8H",
      "followers_url": "https://api.github.com/users/3sGgpQ8H/followers",
      "following_url": "https://api.github.com/users/3sGgpQ8H/following{/other_user}",
      "gists_url": "https://api.github.com/users/3sGgpQ8H/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3sGgpQ8H/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3sGgpQ8H/subscriptions",
      "organizations_url": "https://api.github.com/users/3sGgpQ8H/orgs",
      "repos_url": "https://api.github.com/users/3sGgpQ8H/repos",
      "events_url": "https://api.github.com/users/3sGgpQ8H/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3sGgpQ8H/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-13T15:16:06Z",
    "updated_at": "2017-11-13T15:16:06Z",
    "author_association": "NONE",
    "body": "@Arachnid \r\n> Why not write it to conform to one or more of the existing implementations?\r\n\r\nCompatibility with existing implementations is surely good thing, but did you mean some particular existing implementation that has API good and generic enough to be promoted to EIP standard?\r\n\r\n> Also, personally I think the format that accepts a single TX with the signatures of a quorum of participants is a much better approach than having each participant individually submit an approval TX.\r\n\r\nThis makes it impossible to revoke signatures, and this requires owners to know each other's contact information and to communicate off-chain as in private flow described in my proposal, right?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/343950115/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344019838",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-344019838",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 344019838,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDAxOTgzOA==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-13T18:54:02Z",
    "updated_at": "2017-11-13T18:54:02Z",
    "author_association": "MEMBER",
    "body": "> Compatibility with existing implementations is surely good thing, but did you mean some particular existing implementation that has API good and generic enough to be promoted to EIP standard?\r\n\r\nThere's a couple of others already. I don't understand why you wouldn't pick one instead of inventing something from scratch.\r\n\r\n> This makes it impossible to revoke signatures\r\n\r\nI don't see this as an important feature, personally.\r\n\r\n> and this requires owners to know each other's contact information and to communicate off-chain as in private flow described in my proposal, right?\r\n\r\nYes - but we shouldn't restructure APIs around offchain coordination problems. I certainly think it's implausible that users of a multisig don't communicate with each other out of band.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344019838/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344040030",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-344040030",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 344040030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDA0MDAzMA==",
    "user": {
      "login": "3sGgpQ8H",
      "id": 3917202,
      "node_id": "MDQ6VXNlcjM5MTcyMDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3917202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3sGgpQ8H",
      "html_url": "https://github.com/3sGgpQ8H",
      "followers_url": "https://api.github.com/users/3sGgpQ8H/followers",
      "following_url": "https://api.github.com/users/3sGgpQ8H/following{/other_user}",
      "gists_url": "https://api.github.com/users/3sGgpQ8H/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3sGgpQ8H/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3sGgpQ8H/subscriptions",
      "organizations_url": "https://api.github.com/users/3sGgpQ8H/orgs",
      "repos_url": "https://api.github.com/users/3sGgpQ8H/repos",
      "events_url": "https://api.github.com/users/3sGgpQ8H/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3sGgpQ8H/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-13T20:01:17Z",
    "updated_at": "2017-11-13T20:01:17Z",
    "author_association": "NONE",
    "body": "@Arachnid \r\n> There's a couple of others already. I don't understand why you wouldn't pick one instead of inventing something from scratch.\r\n\r\nI think we probably could split this question into two:\r\n1. Do we actually need to standardize multisig wallet API at all?\r\n2. If answer to the first question is yes, should we just pick some existing API already implemented in significant number of existing multisig wallets and probably already supported by existing tools, or should we design new API?\r\n\r\nIn my opinion, answer to the first question is “yes” and my motivation is explained in “Motivation” section above.\r\nAlso, in my opinion, it is not possible to give generic answer to the second question, because “right” answer greatly depends on what APIs are implemented by existing wallets and as supported by existing tools.\r\nIf you agree that answer to the first question is yes, and you know existing multisig wallet API that could be picked as a standard, you probably need to propose this API to be standardized and start discussion about this.\r\nI just don't know such API, that may be standardized as is, and, from compatibility point of view, there is no big difference between existing multisig wallet that is slightly incompatible with the standard, and multisig wallet that uses completely different API.  Anyway such wallet will be incompatible with tools that rely on the standard, so, if existing API cannot be standardized as is, it does not make much sense for me to keep standard by any means close to such existing APIs.  Of cause there is also no reason to make is deliberately different.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344040030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344043361",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-344043361",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 344043361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDA0MzM2MQ==",
    "user": {
      "login": "3sGgpQ8H",
      "id": 3917202,
      "node_id": "MDQ6VXNlcjM5MTcyMDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3917202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3sGgpQ8H",
      "html_url": "https://github.com/3sGgpQ8H",
      "followers_url": "https://api.github.com/users/3sGgpQ8H/followers",
      "following_url": "https://api.github.com/users/3sGgpQ8H/following{/other_user}",
      "gists_url": "https://api.github.com/users/3sGgpQ8H/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3sGgpQ8H/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3sGgpQ8H/subscriptions",
      "organizations_url": "https://api.github.com/users/3sGgpQ8H/orgs",
      "repos_url": "https://api.github.com/users/3sGgpQ8H/repos",
      "events_url": "https://api.github.com/users/3sGgpQ8H/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3sGgpQ8H/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-13T20:13:15Z",
    "updated_at": "2017-11-13T20:13:15Z",
    "author_association": "NONE",
    "body": "@Arachnid \r\n> I don't see this as an important feature, personally.\r\n\r\nStandard multisig wallet deployed by Mist do have such feature.  Not sure how widely it is used, but at least authors of standard wallet probably saw some reason to include it.\r\n\r\n> Yes - but we shouldn't restructure APIs around offchain coordination problems. I certainly think it's implausible that users of a multisig don't communicate with each other out of band.\r\n\r\nThe actual question is whether should we be restrictive about on-chain coordination, i.e. should we forbid on-chain coordination flow (which is currently default flow for standard multisig wallet deployed by Mist) at API level?  Multisig wallets coordinated on-chain will anyway exist, and EIP standard cannot change this fact.  If standard will not support on-chain coordination, all such wallets will just be non-standard.  In my understanding, the goal of the standard is to improve compatibility between smart contracts and tools, not to force people to use approaches preferred by the authors of the standard.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344043361/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344299759",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-344299759",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 344299759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDI5OTc1OQ==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-14T15:43:38Z",
    "updated_at": "2017-11-14T15:43:38Z",
    "author_association": "MEMBER",
    "body": "Contract authors and users will use the approach recommended by an EIP. You cannot ignore the impact an approved standard will have on common practice when deciding how to author it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344299759/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344345788",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-344345788",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 344345788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDM0NTc4OA==",
    "user": {
      "login": "3sGgpQ8H",
      "id": 3917202,
      "node_id": "MDQ6VXNlcjM5MTcyMDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3917202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3sGgpQ8H",
      "html_url": "https://github.com/3sGgpQ8H",
      "followers_url": "https://api.github.com/users/3sGgpQ8H/followers",
      "following_url": "https://api.github.com/users/3sGgpQ8H/following{/other_user}",
      "gists_url": "https://api.github.com/users/3sGgpQ8H/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3sGgpQ8H/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3sGgpQ8H/subscriptions",
      "organizations_url": "https://api.github.com/users/3sGgpQ8H/orgs",
      "repos_url": "https://api.github.com/users/3sGgpQ8H/repos",
      "events_url": "https://api.github.com/users/3sGgpQ8H/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3sGgpQ8H/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-14T18:06:07Z",
    "updated_at": "2017-11-14T18:06:07Z",
    "author_association": "NONE",
    "body": "Did I get right, that in your opinion API for multisig wallet that collects approvals on-chain should not be standardized, because right approach is to collect approvals off-chain as for bitcoin multisig wallets?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344345788/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344348805",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-344348805",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 344348805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDM0ODgwNQ==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-14T18:16:16Z",
    "updated_at": "2017-11-14T18:16:16Z",
    "author_association": "MEMBER",
    "body": "Reasonable people can differ on whether onchain or offchain approvals are the better approach. What I'm saying is that you shouldn't conclude you should do it one way or the other based entirely on what competing implementations would exist. Write the best standard you can and encourage people to adopt it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344348805/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344351829",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-344351829",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 344351829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDM1MTgyOQ==",
    "user": {
      "login": "3sGgpQ8H",
      "id": 3917202,
      "node_id": "MDQ6VXNlcjM5MTcyMDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3917202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3sGgpQ8H",
      "html_url": "https://github.com/3sGgpQ8H",
      "followers_url": "https://api.github.com/users/3sGgpQ8H/followers",
      "following_url": "https://api.github.com/users/3sGgpQ8H/following{/other_user}",
      "gists_url": "https://api.github.com/users/3sGgpQ8H/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3sGgpQ8H/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3sGgpQ8H/subscriptions",
      "organizations_url": "https://api.github.com/users/3sGgpQ8H/orgs",
      "repos_url": "https://api.github.com/users/3sGgpQ8H/repos",
      "events_url": "https://api.github.com/users/3sGgpQ8H/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3sGgpQ8H/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-14T18:26:24Z",
    "updated_at": "2017-11-14T18:26:24Z",
    "author_association": "NONE",
    "body": "I see.  Anyway, multisig wallets that collect approvals off-chain are completely out of scope for this proposal, because I didn't find elegant way to support both, on-chain and off-chain approvals collecting in one single API.  To support both, public and private flows, was already challenging enough.\r\nI totally agree, that bitcoin-style multisig wallets that collect approvals completely off-chain are useful, despite they are rarely encountered these days, and probably their API is worth standardizing as well.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344351829/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344415185",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-344415185",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 344415185,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDQxNTE4NQ==",
    "user": {
      "login": "alex-miller-0",
      "id": 7378490,
      "node_id": "MDQ6VXNlcjczNzg0OTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7378490?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alex-miller-0",
      "html_url": "https://github.com/alex-miller-0",
      "followers_url": "https://api.github.com/users/alex-miller-0/followers",
      "following_url": "https://api.github.com/users/alex-miller-0/following{/other_user}",
      "gists_url": "https://api.github.com/users/alex-miller-0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alex-miller-0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alex-miller-0/subscriptions",
      "organizations_url": "https://api.github.com/users/alex-miller-0/orgs",
      "repos_url": "https://api.github.com/users/alex-miller-0/repos",
      "events_url": "https://api.github.com/users/alex-miller-0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alex-miller-0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-14T22:07:02Z",
    "updated_at": "2017-11-14T22:07:02Z",
    "author_association": "NONE",
    "body": "I would very much like to see a multisig API standard, but I think this one is too complex. I recommend Christina Lundkvist's [simple-multisig](https://github.com/christianlundkvist/simple-multisig/blob/master/contracts/SimpleMultiSig.sol#L23) implementation, which has instantiation as this:\r\n\r\n```\r\nfunction SimpleMultiSig(uint threshold_, address[] owners_)\r\n```\r\n\r\nand exactly one function:\r\n\r\n```\r\nfunction execute(uint8[] sigV, bytes32[] sigR, bytes32[] sigS, address destination, uint value, bytes data)\r\n```\r\n\r\nI think there is real value to standardizing an interface so that wallet providers can easily add multisig functionality (I think we all need more multisigs in our lives), but IMO standardizing other features at this stage is dangerous.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344415185/reactions",
      "total_count": 5,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344462036",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-344462036",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 344462036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDQ2MjAzNg==",
    "user": {
      "login": "3esmit",
      "id": 224810,
      "node_id": "MDQ6VXNlcjIyNDgxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/224810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3esmit",
      "html_url": "https://github.com/3esmit",
      "followers_url": "https://api.github.com/users/3esmit/followers",
      "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
      "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
      "organizations_url": "https://api.github.com/users/3esmit/orgs",
      "repos_url": "https://api.github.com/users/3esmit/repos",
      "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3esmit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-15T02:01:15Z",
    "updated_at": "2017-11-15T02:01:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the standard API should be for \"Multi-signature\" transaction authorization, and should only include the methods regarding this, and the management of owners can be set to other EIP, because we can have multisigs that are not necessary to be owner's changeable. \r\nThis EIP is related to #745 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344462036/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344561999",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-344561999",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 344561999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDU2MTk5OQ==",
    "user": {
      "login": "3sGgpQ8H",
      "id": 3917202,
      "node_id": "MDQ6VXNlcjM5MTcyMDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3917202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3sGgpQ8H",
      "html_url": "https://github.com/3sGgpQ8H",
      "followers_url": "https://api.github.com/users/3sGgpQ8H/followers",
      "following_url": "https://api.github.com/users/3sGgpQ8H/following{/other_user}",
      "gists_url": "https://api.github.com/users/3sGgpQ8H/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3sGgpQ8H/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3sGgpQ8H/subscriptions",
      "organizations_url": "https://api.github.com/users/3sGgpQ8H/orgs",
      "repos_url": "https://api.github.com/users/3sGgpQ8H/repos",
      "events_url": "https://api.github.com/users/3sGgpQ8H/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3sGgpQ8H/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-15T11:13:53Z",
    "updated_at": "2017-11-15T11:13:53Z",
    "author_association": "NONE",
    "body": "@alex-miller-0 \r\n> I recommend Christina Lundkvist's simple-multisig implementation\r\n\r\nI agree that such wallets that collect signatures completely off-chain are useful and it does make sense to standardize API for such wallets, though discussion about such API is out of scope in this proposal, because this proposal is about different kind of multisig wallets.\r\n\r\nAbout API of Christina's wallet, it seems that the way how it prevents transaction re-execution effectively does not allow collecting signatures for several transactions in parallel, limiting usages of such wallet to the following two cases:\r\n\r\n1. All owners sit in the same room\r\n2. Transactions are executed very rarely, i.e. average time between transactions is much bigger than average time needed to collect signatures for single transaction\r\n\r\nWhile these two cases are not uncommon and Christina's wallet will definitely be found useful by many teams, limitations mentioned above probably prevent Christina's wallet API from becoming common standard.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344561999/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344562441",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-344562441",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 344562441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDU2MjQ0MQ==",
    "user": {
      "login": "3sGgpQ8H",
      "id": 3917202,
      "node_id": "MDQ6VXNlcjM5MTcyMDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3917202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3sGgpQ8H",
      "html_url": "https://github.com/3sGgpQ8H",
      "followers_url": "https://api.github.com/users/3sGgpQ8H/followers",
      "following_url": "https://api.github.com/users/3sGgpQ8H/following{/other_user}",
      "gists_url": "https://api.github.com/users/3sGgpQ8H/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3sGgpQ8H/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3sGgpQ8H/subscriptions",
      "organizations_url": "https://api.github.com/users/3sGgpQ8H/orgs",
      "repos_url": "https://api.github.com/users/3sGgpQ8H/repos",
      "events_url": "https://api.github.com/users/3sGgpQ8H/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3sGgpQ8H/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-15T11:15:49Z",
    "updated_at": "2017-11-15T11:17:38Z",
    "author_association": "NONE",
    "body": "@3esmit \r\n> I think the standard API should be for \"Multi-signature\" transaction authorization, and should only include the methods regarding this, and the management of owners can be set to other EIP\r\n\r\nTotally agree, and proposed API is just of this kind.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344562441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344635235",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-344635235",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 344635235,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDYzNTIzNQ==",
    "user": {
      "login": "alex-miller-0",
      "id": 7378490,
      "node_id": "MDQ6VXNlcjczNzg0OTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7378490?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alex-miller-0",
      "html_url": "https://github.com/alex-miller-0",
      "followers_url": "https://api.github.com/users/alex-miller-0/followers",
      "following_url": "https://api.github.com/users/alex-miller-0/following{/other_user}",
      "gists_url": "https://api.github.com/users/alex-miller-0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alex-miller-0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alex-miller-0/subscriptions",
      "organizations_url": "https://api.github.com/users/alex-miller-0/orgs",
      "repos_url": "https://api.github.com/users/alex-miller-0/repos",
      "events_url": "https://api.github.com/users/alex-miller-0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alex-miller-0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-15T15:50:34Z",
    "updated_at": "2017-11-15T15:50:34Z",
    "author_association": "NONE",
    "body": "> limiting usages of such wallet to the following two cases\r\n\r\nI don't see the design as limited by those use cases at all. Once a message is signed, it can be passed between wallets (a.k.a. second-layer applications) over http. Transactions could also be executed autonomously by your software if you have codified transfer limits and authorized co-signers.\r\n\r\nAgain, standards should be the lowest level possible. On-chain approval functions are an unnecessary (and expensive) complexity IMO.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344635235/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344647794",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-344647794",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 344647794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDY0Nzc5NA==",
    "user": {
      "login": "3sGgpQ8H",
      "id": 3917202,
      "node_id": "MDQ6VXNlcjM5MTcyMDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3917202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3sGgpQ8H",
      "html_url": "https://github.com/3sGgpQ8H",
      "followers_url": "https://api.github.com/users/3sGgpQ8H/followers",
      "following_url": "https://api.github.com/users/3sGgpQ8H/following{/other_user}",
      "gists_url": "https://api.github.com/users/3sGgpQ8H/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3sGgpQ8H/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3sGgpQ8H/subscriptions",
      "organizations_url": "https://api.github.com/users/3sGgpQ8H/orgs",
      "repos_url": "https://api.github.com/users/3sGgpQ8H/repos",
      "events_url": "https://api.github.com/users/3sGgpQ8H/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3sGgpQ8H/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-15T16:28:05Z",
    "updated_at": "2017-11-15T18:58:10Z",
    "author_association": "NONE",
    "body": "@alex-miller-0 \r\n> I don't see the design as limited by those use cases at all.\r\n\r\nThis may not be obvious, but these limitations are (probably unintended) consequences of how the API prevents signed transaction from being executed more than once.  The wallet assigns sequentially incremented nonce value to every transaction being executed, and this value is a part of transaction data that ought to be signed.  So you have to know transaction nonce when you are signing it, while nonce is assigned only when transaction is executed.  Of cause it is impossible to know transaction nonce fore sure before transaction has been executed, so you have to guess.  And if you are wrong, you will have to start over collecting signatures.\r\nObvious strategy for guessing nonce is to use nonce of the latest executed transaction plus one, but this works well only if there is at most one pending transaction at any given time moment.\r\nIf there are some pending transactions already and you want to start collecting signatures for yet another one, you basically have two choices: either to use highest nonce among pending transactions plus one, or to ignore pending transactions and use nonce of latest executed transaction plus one.  Both ways are bad.  The former will fail if any of existing pending transactions will not be approved or will take too much time to be approved.  The latter will fail, if another transaction with the same nonce as you picked for your transaction, will be executed ahead of your transaction.\r\nSo, if there are several transactions collecting signatures in parallel, the wallet becomes ineffective.\r\nThus, to use it effectively all owners have to sit in one room to be able to resolve collisions quickly, or transactions should be executed rarely enough to make collisions improbable.\r\nOtherwise, at the time you finally collected enough signatures for your transaction, you will probably realize, that nonce you picked for your transaction is either already used by another executed transaction, or not yet reached, so you have to either start over, or wait for unpredictable amount of time, or convince owners to approve enough no-op transactions to pump up nonce to desired value.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344647794/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344694454",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-344694454",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 344694454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDY5NDQ1NA==",
    "user": {
      "login": "3sGgpQ8H",
      "id": 3917202,
      "node_id": "MDQ6VXNlcjM5MTcyMDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3917202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3sGgpQ8H",
      "html_url": "https://github.com/3sGgpQ8H",
      "followers_url": "https://api.github.com/users/3sGgpQ8H/followers",
      "following_url": "https://api.github.com/users/3sGgpQ8H/following{/other_user}",
      "gists_url": "https://api.github.com/users/3sGgpQ8H/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3sGgpQ8H/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3sGgpQ8H/subscriptions",
      "organizations_url": "https://api.github.com/users/3sGgpQ8H/orgs",
      "repos_url": "https://api.github.com/users/3sGgpQ8H/repos",
      "events_url": "https://api.github.com/users/3sGgpQ8H/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3sGgpQ8H/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-15T19:03:27Z",
    "updated_at": "2017-11-15T19:03:27Z",
    "author_association": "NONE",
    "body": "@Arachnid \r\n> Contract authors and users will use the approach recommended by an EIP. You cannot ignore the impact an approved standard will have on common practice when deciding how to author it.\r\n\r\nStandards surely impact people, that's why standard author should be very careful and should not use his power to force other people to share standard author's personal preferences.  There are too many cases already when people use standard approach just because it is standard, while personally they don't like it and there are better approaches widely known.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344694454/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344855287",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-344855287",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 344855287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDg1NTI4Nw==",
    "user": {
      "login": "khovratovich",
      "id": 4190130,
      "node_id": "MDQ6VXNlcjQxOTAxMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4190130?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/khovratovich",
      "html_url": "https://github.com/khovratovich",
      "followers_url": "https://api.github.com/users/khovratovich/followers",
      "following_url": "https://api.github.com/users/khovratovich/following{/other_user}",
      "gists_url": "https://api.github.com/users/khovratovich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/khovratovich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/khovratovich/subscriptions",
      "organizations_url": "https://api.github.com/users/khovratovich/orgs",
      "repos_url": "https://api.github.com/users/khovratovich/repos",
      "events_url": "https://api.github.com/users/khovratovich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/khovratovich/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T08:50:17Z",
    "updated_at": "2017-11-16T08:50:17Z",
    "author_association": "MEMBER",
    "body": "@Arachnid \r\n> >This makes it impossible to revoke signatures\r\n\r\n>I don't see this as an important feature, personally.\r\n \r\nSuppose that an owner submits a transaction by mistake. If he can not revoke his approval, the transaction remains in circulation forever, and the effective threshold of the multisig wallet will be one owner smaller.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344855287/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344860102",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-344860102",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 344860102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDg2MDEwMg==",
    "user": {
      "login": "3sGgpQ8H",
      "id": 3917202,
      "node_id": "MDQ6VXNlcjM5MTcyMDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3917202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3sGgpQ8H",
      "html_url": "https://github.com/3sGgpQ8H",
      "followers_url": "https://api.github.com/users/3sGgpQ8H/followers",
      "following_url": "https://api.github.com/users/3sGgpQ8H/following{/other_user}",
      "gists_url": "https://api.github.com/users/3sGgpQ8H/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3sGgpQ8H/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3sGgpQ8H/subscriptions",
      "organizations_url": "https://api.github.com/users/3sGgpQ8H/orgs",
      "repos_url": "https://api.github.com/users/3sGgpQ8H/repos",
      "events_url": "https://api.github.com/users/3sGgpQ8H/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3sGgpQ8H/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T09:09:20Z",
    "updated_at": "2017-11-16T09:20:39Z",
    "author_association": "NONE",
    "body": "@Arachnid \r\n> Suppose that an owner submits a transaction by mistake.\r\n\r\nI agree that transactions submitted by mistake are not a problem because such transactions will never collect enough signatures.  Actually I've never meant such scenario when I was telling about revocation as a valuable feature.  For me, usual scenario where revocation would be helpful looks like this:\r\n\r\n1. Lets assume there is 2-of-3 multisig wallet collectively owned by Alice, Bob and Carol\r\n2. Alice suggests transaction and signs it\r\n3. The transaction appears to be profitable for Alice, but not for Bob nor Carol, so it fails to collect enough signatures\r\n4. Long time passes and circumstances changed drastically\r\n5. Now that transaction, suggested by Alice long time ago, is profitable for Bob, but unacceptable for Alice and Carol\r\n6. Bob signs the transaction and executes it\r\n\r\nWith revocation feature available, Alice would revoke her signature either after realizing that her transaction has no chances to be approved, or after realizing that her transaction is not profitable for her anymore.\r\n\r\nPeople do change their opinions and circumstances do change, so I would prefer to be able to revoke my signature from not yet executed transaction if I changed my mind.  Especially this is important for controversial transactions that fail to quickly collect enough signatures and may stuck in half-signed state forever.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/344860102/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/347574696",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-347574696",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 347574696,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzU3NDY5Ng==",
    "user": {
      "login": "stefek99",
      "id": 249703,
      "node_id": "MDQ6VXNlcjI0OTcwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/249703?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stefek99",
      "html_url": "https://github.com/stefek99",
      "followers_url": "https://api.github.com/users/stefek99/followers",
      "following_url": "https://api.github.com/users/stefek99/following{/other_user}",
      "gists_url": "https://api.github.com/users/stefek99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stefek99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stefek99/subscriptions",
      "organizations_url": "https://api.github.com/users/stefek99/orgs",
      "repos_url": "https://api.github.com/users/stefek99/repos",
      "events_url": "https://api.github.com/users/stefek99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stefek99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-28T16:12:56Z",
    "updated_at": "2017-11-28T16:12:56Z",
    "author_association": "NONE",
    "body": "https://github.com/ethereum/EIPs/issues/763#issuecomment-344462036\r\n\r\n> we can have multisigs that are not necessary to be owner's changeable\r\n\r\nI believe that by default multisigs should allow to change owners.\r\n\r\nI was doing some research / reading / education and collected some links in a blogpost: https://steemit.com/ethereum/@genesisre/ethereum-multisig-wallet-interacting-with-contracts-on-behalf-of-multisig\r\n\r\n_(we are in such early days)_",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/347574696/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/365253616",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-365253616",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 365253616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTI1MzYxNg==",
    "user": {
      "login": "elenadimitrova",
      "id": 703848,
      "node_id": "MDQ6VXNlcjcwMzg0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/703848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elenadimitrova",
      "html_url": "https://github.com/elenadimitrova",
      "followers_url": "https://api.github.com/users/elenadimitrova/followers",
      "following_url": "https://api.github.com/users/elenadimitrova/following{/other_user}",
      "gists_url": "https://api.github.com/users/elenadimitrova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elenadimitrova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elenadimitrova/subscriptions",
      "organizations_url": "https://api.github.com/users/elenadimitrova/orgs",
      "repos_url": "https://api.github.com/users/elenadimitrova/repos",
      "events_url": "https://api.github.com/users/elenadimitrova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elenadimitrova/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-13T12:32:58Z",
    "updated_at": "2018-02-14T10:44:12Z",
    "author_association": "NONE",
    "body": "Just did some comparative gas cost calculations between [SimpleMultiSig](https://github.com/christianlundkvist/simple-multisig) and [MultiSigWallet](https://github.com/gnosis/MultiSigWallet/blob/master/contracts/MultiSigWallet.sol) for reference:\r\n`SimpleMultiSig` only ever needs one transaction (which contains all signatures)\r\n```\r\nmultisig.execute -> 75,413 gas (for 2 signatures)\r\n                 -> 84,949 gas (for 3 signatures)\r\n```\r\n\r\n`MultiSigWallet` needs an initial transaction submission and then as many confirmations as required, i.e. the `confirmTransaction` 50,110 gas cost should be multiplied by the required number of approvals -1.\r\n```\r\nmultisig.submitTransaction -> 167,202 gas\r\nmultisig.confirmTransaction -> 50,110 gas (not enough signatures gathered)\r\nmultisig.confirmTransaction -> 79,857 gas (enough signatures gathered, execute the tx)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/365253616/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/365390594",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-365390594",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 365390594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTM5MDU5NA==",
    "user": {
      "login": "alex-miller-0",
      "id": 7378490,
      "node_id": "MDQ6VXNlcjczNzg0OTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7378490?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alex-miller-0",
      "html_url": "https://github.com/alex-miller-0",
      "followers_url": "https://api.github.com/users/alex-miller-0/followers",
      "following_url": "https://api.github.com/users/alex-miller-0/following{/other_user}",
      "gists_url": "https://api.github.com/users/alex-miller-0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alex-miller-0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alex-miller-0/subscriptions",
      "organizations_url": "https://api.github.com/users/alex-miller-0/orgs",
      "repos_url": "https://api.github.com/users/alex-miller-0/repos",
      "events_url": "https://api.github.com/users/alex-miller-0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alex-miller-0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-13T20:16:15Z",
    "updated_at": "2018-02-13T20:16:15Z",
    "author_association": "NONE",
    "body": "@elenadimitrova Cool stats. How many signatures went into the 75k `SimpleMultiSig` cost? Every additional signature should require ~3k gas due to the `ecrecover` plus a few computations.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/365390594/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/365565463",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-365565463",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 365565463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTU2NTQ2Mw==",
    "user": {
      "login": "elenadimitrova",
      "id": 703848,
      "node_id": "MDQ6VXNlcjcwMzg0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/703848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elenadimitrova",
      "html_url": "https://github.com/elenadimitrova",
      "followers_url": "https://api.github.com/users/elenadimitrova/followers",
      "following_url": "https://api.github.com/users/elenadimitrova/following{/other_user}",
      "gists_url": "https://api.github.com/users/elenadimitrova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elenadimitrova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elenadimitrova/subscriptions",
      "organizations_url": "https://api.github.com/users/elenadimitrova/orgs",
      "repos_url": "https://api.github.com/users/elenadimitrova/repos",
      "events_url": "https://api.github.com/users/elenadimitrova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elenadimitrova/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-14T10:47:04Z",
    "updated_at": "2018-02-14T10:47:04Z",
    "author_association": "NONE",
    "body": "@alex-miller-0 you're right, that test was using 2 signatures so I updated to 3 and cost went up with ~10,000 gas. Updated the stats to reflect that.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/365565463/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/365756807",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-365756807",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 365756807,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTc1NjgwNw==",
    "user": {
      "login": "3esmit",
      "id": 224810,
      "node_id": "MDQ6VXNlcjIyNDgxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/224810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3esmit",
      "html_url": "https://github.com/3esmit",
      "followers_url": "https://api.github.com/users/3esmit/followers",
      "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
      "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
      "organizations_url": "https://api.github.com/users/3esmit/orgs",
      "repos_url": "https://api.github.com/users/3esmit/repos",
      "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3esmit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-14T21:51:38Z",
    "updated_at": "2018-02-14T21:51:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think that offchain ethereum signed messages can be included in the same function, that would call internal methods that are the same used by the regular ethereum signed transaction calls to the contract, that fill _from with msg.sender instead of recovered address, and this can be part of another ERC. \r\nI think this ERC should coordinate only in defining the common method calls, if you need offchain signed ethereum messages, then you should implement other interface for doing it. This same interface could be used for other types of contracts that want to accept ethereum signed messages. See this example https://gist.github.com/3esmit/cbfa213c87c151334f819864dce47d2c \r\none file is just a simple multisig (does just basic multisigning stuff)\r\nother just implement the presigning feature.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/365756807/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/365780525",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-365780525",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 365780525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTc4MDUyNQ==",
    "user": {
      "login": "alex-miller-0",
      "id": 7378490,
      "node_id": "MDQ6VXNlcjczNzg0OTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7378490?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alex-miller-0",
      "html_url": "https://github.com/alex-miller-0",
      "followers_url": "https://api.github.com/users/alex-miller-0/followers",
      "following_url": "https://api.github.com/users/alex-miller-0/following{/other_user}",
      "gists_url": "https://api.github.com/users/alex-miller-0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alex-miller-0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alex-miller-0/subscriptions",
      "organizations_url": "https://api.github.com/users/alex-miller-0/orgs",
      "repos_url": "https://api.github.com/users/alex-miller-0/repos",
      "events_url": "https://api.github.com/users/alex-miller-0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alex-miller-0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-14T23:33:57Z",
    "updated_at": "2018-02-14T23:34:52Z",
    "author_association": "NONE",
    "body": "@elenadimitrova very interesting that it would take 10k gas for an extra signature since `ECRECOVER` should only be 3000 gas ([source](https://github.com/ethereum/pyethereum/blob/fd70d67ea91a021376fe13c819b2203bad2d3cd2/ethereum/opcodes.py#L115)). I suspect recasting `lastAdd` is making up the difference.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/365780525/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/382967245",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-382967245",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 382967245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mjk2NzI0NQ==",
    "user": {
      "login": "harish-narayanasamy",
      "id": 30654951,
      "node_id": "MDQ6VXNlcjMwNjU0OTUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/30654951?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harish-narayanasamy",
      "html_url": "https://github.com/harish-narayanasamy",
      "followers_url": "https://api.github.com/users/harish-narayanasamy/followers",
      "following_url": "https://api.github.com/users/harish-narayanasamy/following{/other_user}",
      "gists_url": "https://api.github.com/users/harish-narayanasamy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harish-narayanasamy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harish-narayanasamy/subscriptions",
      "organizations_url": "https://api.github.com/users/harish-narayanasamy/orgs",
      "repos_url": "https://api.github.com/users/harish-narayanasamy/repos",
      "events_url": "https://api.github.com/users/harish-narayanasamy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harish-narayanasamy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-20T03:58:11Z",
    "updated_at": "2018-04-20T03:58:11Z",
    "author_association": "NONE",
    "body": "Why the  method Sendmultisig  is listing the transaction as internal transaction?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/382967245/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997602625",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-997602625",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 997602625,
    "node_id": "IC_kwDOAq426M47djVB",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-20T05:12:46Z",
    "updated_at": "2021-12-20T05:12:46Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997602625/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003889870",
    "html_url": "https://github.com/ethereum/EIPs/issues/763#issuecomment-1003889870",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/763",
    "id": 1003889870,
    "node_id": "IC_kwDOAq426M471iTO",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-03T06:14:18Z",
    "updated_at": "2022-01-03T06:14:18Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003889870/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
