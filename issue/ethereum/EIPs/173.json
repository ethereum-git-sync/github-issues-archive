{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/173/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/173/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/173/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/173",
  "id": 187856292,
  "node_id": "MDU6SXNzdWUxODc4NTYyOTI=",
  "number": 173,
  "title": "ERC: Owned Standard",
  "user": {
    "login": "danfinlay",
    "id": 542863,
    "node_id": "MDQ6VXNlcjU0Mjg2Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/542863?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/danfinlay",
    "html_url": "https://github.com/danfinlay",
    "followers_url": "https://api.github.com/users/danfinlay/followers",
    "following_url": "https://api.github.com/users/danfinlay/following{/other_user}",
    "gists_url": "https://api.github.com/users/danfinlay/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/danfinlay/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/danfinlay/subscriptions",
    "organizations_url": "https://api.github.com/users/danfinlay/orgs",
    "repos_url": "https://api.github.com/users/danfinlay/repos",
    "events_url": "https://api.github.com/users/danfinlay/events{/privacy}",
    "received_events_url": "https://api.github.com/users/danfinlay/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 47,
  "created_at": "2016-11-07T23:09:15Z",
  "updated_at": "2022-05-18T05:06:08Z",
  "closed_at": "2022-05-18T05:06:08Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Opening discussion to nail down semantics for a common pattern that should be standardized.\r\n\r\nMany smart-contracts have adopted some pattern of representing the ownership of that contract, and it's such a common and simple pattern, that the exact phrasing should be standardized into an Application-layer protocol, to allow leveraging cross-compatibility.\r\n\r\nThis standard could be called the `Owned` standard.  I've also heard it called the `Asset` standard. The standard defines at least one method, either:\r\n\r\n- `setOwner(address _newOwner)`\r\n- `transferOwner(address _newOwner)`\r\n\r\nThis might be paired with an event, maybe called `OwnerTransfer`.\r\n\r\nIt would also probably benefit from having a support method, either one of:\r\n\r\n- `getOwner() returns address`\r\n- `owner() returns address`\r\n- `isOwner(address _owner) returns bool`\r\n\r\n## Places I've seen this used\r\n\r\n- [AuctionHouse](https://medium.com/@petkanics/introducing-auctionhouse-an-ethereum-dapp-for-auctioning-on-chain-goods-c91244bde469#.sfkii8t09), a Dapp that allows users to auction any on-chain asset adhering to their own [Asset](https://github.com/dob/auctionhouse/blob/master/contracts/Asset.sol) protocol.\r\n- The proposed [Proxy Standard](https://github.com/ethereum/EIPs/issues/121) includes a loose implementation of this standard.\r\n- The Dapple [DSAuthorized](https://github.com/nexusdev/ds-auth/blob/master/src/authorized.sol) class essentially implements this pattern.\r\n\r\nYou can read a more formally specified version of this proposal here:\r\nhttps://github.com/ethereum/EIPs/blob/master/EIPS/eip-173.md",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/173/reactions",
    "total_count": 7,
    "+1": 7,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/173/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/258996610",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-258996610",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 258996610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODk5NjYxMA==",
    "user": {
      "login": "apmilen",
      "id": 2745728,
      "node_id": "MDQ6VXNlcjI3NDU3Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2745728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apmilen",
      "html_url": "https://github.com/apmilen",
      "followers_url": "https://api.github.com/users/apmilen/followers",
      "following_url": "https://api.github.com/users/apmilen/following{/other_user}",
      "gists_url": "https://api.github.com/users/apmilen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apmilen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apmilen/subscriptions",
      "organizations_url": "https://api.github.com/users/apmilen/orgs",
      "repos_url": "https://api.github.com/users/apmilen/repos",
      "events_url": "https://api.github.com/users/apmilen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apmilen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-07T23:25:28Z",
    "updated_at": "2016-11-07T23:25:28Z",
    "author_association": "NONE",
    "body": "could `transferOwner` be replaced with `setOwner` ? Then it would be nicely paired with `getOwner`\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/258996610/reactions",
      "total_count": 8,
      "+1": 8,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/258999483",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-258999483",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 258999483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODk5OTQ4Mw==",
    "user": {
      "login": "danfinlay",
      "id": 542863,
      "node_id": "MDQ6VXNlcjU0Mjg2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/542863?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danfinlay",
      "html_url": "https://github.com/danfinlay",
      "followers_url": "https://api.github.com/users/danfinlay/followers",
      "following_url": "https://api.github.com/users/danfinlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/danfinlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danfinlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danfinlay/subscriptions",
      "organizations_url": "https://api.github.com/users/danfinlay/orgs",
      "repos_url": "https://api.github.com/users/danfinlay/repos",
      "events_url": "https://api.github.com/users/danfinlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danfinlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-07T23:39:46Z",
    "updated_at": "2016-11-07T23:39:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "I like it.  I added it as the new first option.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/258999483/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/259005871",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-259005871",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 259005871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTAwNTg3MQ==",
    "user": {
      "login": "SilentCicero",
      "id": 9806174,
      "node_id": "MDQ6VXNlcjk4MDYxNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9806174?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SilentCicero",
      "html_url": "https://github.com/SilentCicero",
      "followers_url": "https://api.github.com/users/SilentCicero/followers",
      "following_url": "https://api.github.com/users/SilentCicero/following{/other_user}",
      "gists_url": "https://api.github.com/users/SilentCicero/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SilentCicero/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SilentCicero/subscriptions",
      "organizations_url": "https://api.github.com/users/SilentCicero/orgs",
      "repos_url": "https://api.github.com/users/SilentCicero/repos",
      "events_url": "https://api.github.com/users/SilentCicero/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SilentCicero/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-08T00:14:52Z",
    "updated_at": "2016-11-08T00:14:52Z",
    "author_association": "NONE",
    "body": "@flyswatter this is super needed, nice, we do need standards across the board for this.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/259005871/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/259134514",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-259134514",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 259134514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTEzNDUxNA==",
    "user": {
      "login": "dob",
      "id": 10389,
      "node_id": "MDQ6VXNlcjEwMzg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/10389?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dob",
      "html_url": "https://github.com/dob",
      "followers_url": "https://api.github.com/users/dob/followers",
      "following_url": "https://api.github.com/users/dob/following{/other_user}",
      "gists_url": "https://api.github.com/users/dob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dob/subscriptions",
      "organizations_url": "https://api.github.com/users/dob/orgs",
      "repos_url": "https://api.github.com/users/dob/repos",
      "events_url": "https://api.github.com/users/dob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dob/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-08T13:21:49Z",
    "updated_at": "2016-11-08T13:21:49Z",
    "author_association": "NONE",
    "body": "Author of the AuctionHouse [Asset](https://github.com/dob/auctionhouse/blob/master/contracts/Asset.sol) protocol here. I wanted to point out that it's a little different then what is proposed here. The idea behind the Asset protocol was not that the contract itself was owned or transfered, but that the records tracked within the contract, identified by `string _recordId`, were owned or transferred.\n\nSo for example, a contract:\n\n```\ncontract VirtualGoodPlatform is Asset {\n  struct VirtualGood {\n    address _owner;\n    ...;\n  }\n  mapping(string => VirtualGood) registry;   // Maps the record ID to the good\n}\n```\n\n`getOwner(_recordId)` and `setOwner(_recordId, _newOwnerAddress)` would update the registry, and not actually update ownership of the contract.\n\nI think settling on a standard for the above is important so that we can have common implementations of trading, buying, selling, and transferring non-fungible assets. But it may be a little different than what you're suggesting here in terms of contract ownership itself. Yes?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/259134514/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/259180200",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-259180200",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 259180200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTE4MDIwMA==",
    "user": {
      "login": "danfinlay",
      "id": 542863,
      "node_id": "MDQ6VXNlcjU0Mjg2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/542863?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danfinlay",
      "html_url": "https://github.com/danfinlay",
      "followers_url": "https://api.github.com/users/danfinlay/followers",
      "following_url": "https://api.github.com/users/danfinlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/danfinlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danfinlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danfinlay/subscriptions",
      "organizations_url": "https://api.github.com/users/danfinlay/orgs",
      "repos_url": "https://api.github.com/users/danfinlay/repos",
      "events_url": "https://api.github.com/users/danfinlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danfinlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-08T16:11:45Z",
    "updated_at": "2016-11-08T16:11:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, I guess so!\n\n> On Nov 8, 2016, at 5:21 AM, Doug Petkanics notifications@github.com wrote:\n> \n> Author of the AuctionHouse Asset protocol here. I wanted to point out that it's a little different then what is proposed here. The idea behind the Asset protocol was not that the contract itself was owned or transfered, but that the records tracked within the contract, identified by string _recordId, were owned or transferred.\n> \n> So for example, a contract:\n> \n> contract VirtualGoodPlatform is Asset {\n>   struct VirtualGood {\n>     address _owner;\n>     ...;\n>   }\n>   mapping(string => VirtualGood) registry;   // Maps the record ID to the good\n> }\n> getOwner(_recordId) and setOwner(_recordId, _newOwnerAddress) would update the registry, and not actually update ownership of the contract.\n> \n> I think settling on a standard for the above is important so that we can have common implementations of trading, buying, selling, and transferring non-fungible assets. But it may be a little different than what you're suggesting here in terms of contract ownership itself. Yes?\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/259180200/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/260203667",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-260203667",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 260203667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDIwMzY2Nw==",
    "user": {
      "login": "Smithgift",
      "id": 10504499,
      "node_id": "MDQ6VXNlcjEwNTA0NDk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/10504499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Smithgift",
      "html_url": "https://github.com/Smithgift",
      "followers_url": "https://api.github.com/users/Smithgift/followers",
      "following_url": "https://api.github.com/users/Smithgift/following{/other_user}",
      "gists_url": "https://api.github.com/users/Smithgift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Smithgift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Smithgift/subscriptions",
      "organizations_url": "https://api.github.com/users/Smithgift/orgs",
      "repos_url": "https://api.github.com/users/Smithgift/repos",
      "events_url": "https://api.github.com/users/Smithgift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Smithgift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-13T18:42:13Z",
    "updated_at": "2016-11-13T18:42:13Z",
    "author_association": "NONE",
    "body": "I suggest using only `owner()` to get the current owner. If you don't need anything special in determining ownership, you can just have `address public owner;` and Solidity will happily generate a properly-named getter.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/260203667/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/260206157",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-260206157",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 260206157,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDIwNjE1Nw==",
    "user": {
      "login": "danfinlay",
      "id": 542863,
      "node_id": "MDQ6VXNlcjU0Mjg2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/542863?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danfinlay",
      "html_url": "https://github.com/danfinlay",
      "followers_url": "https://api.github.com/users/danfinlay/followers",
      "following_url": "https://api.github.com/users/danfinlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/danfinlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danfinlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danfinlay/subscriptions",
      "organizations_url": "https://api.github.com/users/danfinlay/orgs",
      "repos_url": "https://api.github.com/users/danfinlay/repos",
      "events_url": "https://api.github.com/users/danfinlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danfinlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-13T19:23:10Z",
    "updated_at": "2016-11-13T19:23:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree, it would be good to leverage a public variable for this. Any opinion on the setter name?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/260206157/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/262361720",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-262361720",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 262361720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjM2MTcyMA==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-22T20:50:27Z",
    "updated_at": "2016-11-22T20:50:27Z",
    "author_association": "MEMBER",
    "body": "Shameless plug: ENS can make this pattern obsolete; a contract can do a lookup in the ENS registry for the owner of a given node, and treat that as the owner of the current contract.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/262361720/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/264698790",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-264698790",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 264698790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDY5ODc5MA==",
    "user": {
      "login": "cholewa1992",
      "id": 3646445,
      "node_id": "MDQ6VXNlcjM2NDY0NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3646445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cholewa1992",
      "html_url": "https://github.com/cholewa1992",
      "followers_url": "https://api.github.com/users/cholewa1992/followers",
      "following_url": "https://api.github.com/users/cholewa1992/following{/other_user}",
      "gists_url": "https://api.github.com/users/cholewa1992/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cholewa1992/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cholewa1992/subscriptions",
      "organizations_url": "https://api.github.com/users/cholewa1992/orgs",
      "repos_url": "https://api.github.com/users/cholewa1992/repos",
      "events_url": "https://api.github.com/users/cholewa1992/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cholewa1992/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-04T11:38:55Z",
    "updated_at": "2016-12-04T11:38:55Z",
    "author_association": "NONE",
    "body": "My suggestion is\r\n```\r\npragma solidity ^0.4.0;\r\ncontract Owned {\r\n\r\n    address public owner;\r\n\r\n    function Owned() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier isOwner {\r\n        if (msg.sender == owner) _; else throw;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) isOwner {\r\n        owner = _newOwner;\r\n    }\r\n}\r\n```\r\n\r\nI use it for a marketplace structure that I'm working on",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/264698790/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/270693557",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-270693557",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 270693557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDY5MzU1Nw==",
    "user": {
      "login": "danfinlay",
      "id": 542863,
      "node_id": "MDQ6VXNlcjU0Mjg2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/542863?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danfinlay",
      "html_url": "https://github.com/danfinlay",
      "followers_url": "https://api.github.com/users/danfinlay/followers",
      "following_url": "https://api.github.com/users/danfinlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/danfinlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danfinlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danfinlay/subscriptions",
      "organizations_url": "https://api.github.com/users/danfinlay/orgs",
      "repos_url": "https://api.github.com/users/danfinlay/repos",
      "events_url": "https://api.github.com/users/danfinlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danfinlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-05T16:48:01Z",
    "updated_at": "2017-01-05T16:48:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cholewa1992 The problem I see with that pattern is that you can't easily ask if an arbitrary user is the owner, only if the current user is.\r\n\r\nThat's why a simple getter (as provided by a public variable) is nice, it's very open ended, and lets the contract speak for itself.\r\n\r\n@Arachnid Sorry for not exploring that sooner;  So you're saying ENS could make this pattern obsolete *if* the current owner is registered on ENS, right?\r\n\r\nIn even that case, the `setOwner` method would still be useful, and `getOwner` might still be useful if the contract isn't on ENS.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/270693557/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/270694435",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-270694435",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 270694435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDY5NDQzNQ==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-05T16:51:16Z",
    "updated_at": "2017-01-05T16:51:16Z",
    "author_association": "MEMBER",
    "body": "> Sorry for not exploring that sooner; So you're saying ENS could make this pattern obsolete if the current owner is registered on ENS, right?\r\n\r\n> In even that case, the setOwner method would still be useful, and getOwner might still be useful if the contract isn't on ENS.\r\n\r\nThe idea is that you would look up a predetermined name, and only allow the owner of that name to interact with the contract. There's no need to register anyone; just to set an ENS record.\r\n\r\nMore generally, it's worth considering extending this model to ACLs in general, not just 'owner'.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/270694435/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/278119483",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-278119483",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 278119483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODExOTQ4Mw==",
    "user": {
      "login": "nmushegian",
      "id": 924397,
      "node_id": "MDQ6VXNlcjkyNDM5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/924397?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nmushegian",
      "html_url": "https://github.com/nmushegian",
      "followers_url": "https://api.github.com/users/nmushegian/followers",
      "following_url": "https://api.github.com/users/nmushegian/following{/other_user}",
      "gists_url": "https://api.github.com/users/nmushegian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nmushegian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nmushegian/subscriptions",
      "organizations_url": "https://api.github.com/users/nmushegian/orgs",
      "repos_url": "https://api.github.com/users/nmushegian/repos",
      "events_url": "https://api.github.com/users/nmushegian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nmushegian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-07T19:50:21Z",
    "updated_at": "2017-02-07T19:54:49Z",
    "author_association": "NONE",
    "body": "@flyswatter the multi-user case should be solved by abstraction in the owner, not by complicating the base class.\r\n\r\nAlso want to make a comment regarding your examples that `DSAuth` and the dappsys Authority pattern implements different semantics from Owned and shouldn't be used as inspiration for this standard IMO. Take a look at the [most recent version](https://github.com/dapphub/ds-auth/blob/master/contracts/DSAuth.sol#L40) to see how we collapsed the \"owner\" concept inside DSAuth entirely into the authority, getting out of the way of existing interfaces. We do not want to have a shared ABI with this.\r\n\r\nI also strongly favor a minimal variant like the one @cholewa1992 suggested.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/278119483/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/278122398",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-278122398",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 278122398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODEyMjM5OA==",
    "user": {
      "login": "danfinlay",
      "id": 542863,
      "node_id": "MDQ6VXNlcjU0Mjg2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/542863?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danfinlay",
      "html_url": "https://github.com/danfinlay",
      "followers_url": "https://api.github.com/users/danfinlay/followers",
      "following_url": "https://api.github.com/users/danfinlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/danfinlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danfinlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danfinlay/subscriptions",
      "organizations_url": "https://api.github.com/users/danfinlay/orgs",
      "repos_url": "https://api.github.com/users/danfinlay/repos",
      "events_url": "https://api.github.com/users/danfinlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danfinlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-07T20:00:40Z",
    "updated_at": "2017-02-07T20:00:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this pattern has been largely canonized in the [DS-Auth](https://github.com/dapphub/ds-auth/blob/master/contracts/DSAuth.sol) pattern.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/278122398/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/279679376",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-279679376",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 279679376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTY3OTM3Ng==",
    "user": {
      "login": "tymat",
      "id": 849457,
      "node_id": "MDQ6VXNlcjg0OTQ1Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/849457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tymat",
      "html_url": "https://github.com/tymat",
      "followers_url": "https://api.github.com/users/tymat/followers",
      "following_url": "https://api.github.com/users/tymat/following{/other_user}",
      "gists_url": "https://api.github.com/users/tymat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tymat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tymat/subscriptions",
      "organizations_url": "https://api.github.com/users/tymat/orgs",
      "repos_url": "https://api.github.com/users/tymat/repos",
      "events_url": "https://api.github.com/users/tymat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tymat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-14T11:13:23Z",
    "updated_at": "2017-02-14T11:13:23Z",
    "author_association": "NONE",
    "body": "We are using this for DigixCore 2.0 Assets with an additional mint() function which converts the assets into ERC-20 tokens.  \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/279679376/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/280068916",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-280068916",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 280068916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDA2ODkxNg==",
    "user": {
      "login": "nmushegian",
      "id": 924397,
      "node_id": "MDQ6VXNlcjkyNDM5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/924397?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nmushegian",
      "html_url": "https://github.com/nmushegian",
      "followers_url": "https://api.github.com/users/nmushegian/followers",
      "following_url": "https://api.github.com/users/nmushegian/following{/other_user}",
      "gists_url": "https://api.github.com/users/nmushegian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nmushegian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nmushegian/subscriptions",
      "organizations_url": "https://api.github.com/users/nmushegian/orgs",
      "repos_url": "https://api.github.com/users/nmushegian/repos",
      "events_url": "https://api.github.com/users/nmushegian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nmushegian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T16:56:06Z",
    "updated_at": "2017-02-15T16:56:06Z",
    "author_association": "NONE",
    "body": "+1 to `mint` and its dual `burn`, but let's keep that thread separate",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/280068916/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395183671",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-395183671",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 395183671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTE4MzY3MQ==",
    "user": {
      "login": "mudgen",
      "id": 49092,
      "node_id": "MDQ6VXNlcjQ5MDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mudgen",
      "html_url": "https://github.com/mudgen",
      "followers_url": "https://api.github.com/users/mudgen/followers",
      "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
      "organizations_url": "https://api.github.com/users/mudgen/orgs",
      "repos_url": "https://api.github.com/users/mudgen/repos",
      "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mudgen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-06T19:20:12Z",
    "updated_at": "2018-06-06T19:20:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Arachnid It seems that your suggestion to use ENS would only solve one of the problems.\r\nHere's the problems to solve:\r\n1. Contract A needs to authenticate if user is the owner of the contract or not.\r\n2. Contract B wants to find out who is the owner of Contract A.\r\n\r\nIt seems that ENS could be used to authenticate that a user is owner of a contract or not.\r\n\r\nBut it seems that ENS could not be used in Contract B to get the owner address of Contract A. Correct? So a function such as `owner() returns (address) ` would still be needed in Contract A, right?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395183671/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395194396",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-395194396",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 395194396,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTE5NDM5Ng==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-06T19:58:56Z",
    "updated_at": "2018-06-06T19:58:56Z",
    "author_association": "MEMBER",
    "body": "@mudgen If contract A determines its owner by looking up an ENS record, contract B can do the same.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395194396/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395201233",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-395201233",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 395201233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTIwMTIzMw==",
    "user": {
      "login": "mudgen",
      "id": 49092,
      "node_id": "MDQ6VXNlcjQ5MDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mudgen",
      "html_url": "https://github.com/mudgen",
      "followers_url": "https://api.github.com/users/mudgen/followers",
      "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
      "organizations_url": "https://api.github.com/users/mudgen/orgs",
      "repos_url": "https://api.github.com/users/mudgen/repos",
      "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mudgen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-06T20:22:56Z",
    "updated_at": "2018-06-06T20:46:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Arachnid, if contract B only has the ethereum address of contract A, then how can it get the owner address of contract A?\r\n\r\nLet's say that Contract A calls a function in Contract B.  The function in Contract B wants to get the owner address of Contract A but it only has the ethereum address of Contract A via msg.sender.  Could ENS still be used to get the owner address of Contract A?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395201233/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395207889",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-395207889",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 395207889,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTIwNzg4OQ==",
    "user": {
      "login": "mudgen",
      "id": 49092,
      "node_id": "MDQ6VXNlcjQ5MDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mudgen",
      "html_url": "https://github.com/mudgen",
      "followers_url": "https://api.github.com/users/mudgen/followers",
      "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
      "organizations_url": "https://api.github.com/users/mudgen/orgs",
      "repos_url": "https://api.github.com/users/mudgen/repos",
      "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mudgen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-06T20:45:36Z",
    "updated_at": "2018-06-06T20:45:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can see some users wanting to use an `owner()` function and some users also wanting to use `transferOwner()`.  So I think it might be a good idea to have two interfaces, one just for `owner()` and another one just for `transferOwner()` so that users can choose either one or both and still be compliant with the standard.\r\n\r\nI think it is important to have an agreed upon way to get the owning address of a contract. Having this will help interoperability between contracts and other software.\r\n\r\n@danfinlay Are you planning to move this issue through the standards process?  If not, is it okay with you if I create a draft EIP about this and move the Owned Standard forward?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395207889/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395325699",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-395325699",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 395325699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTMyNTY5OQ==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T07:46:44Z",
    "updated_at": "2018-06-07T07:46:44Z",
    "author_association": "MEMBER",
    "body": "@Arachnid I'm not a fan of using ENS for this due to gas costs.  A cross-contract ENS check of ownership on a function modified with `onlyOwner` is significantly more expensive (relatively) than just checking a local storage variable.  Unless we can get cross contract calls down, there are a number of things that we _could_ move off contract but must consider the gas costs of doing so.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395325699/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395326190",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-395326190",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 395326190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTMyNjE5MA==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T07:48:42Z",
    "updated_at": "2018-06-07T07:48:42Z",
    "author_association": "MEMBER",
    "body": "Recommend checking out https://github.com/OpenZeppelin/openzeppelin-solidity/tree/master/contracts/ownership for a bunch of things related to ownership.  One pattern I am a big fan of is `Claimable` rather than `Ownable`.  It makes it so it is impossible to accidentally transfer ownership to `/dev/null`. It does mean that ownership transfers are a two step process, but if we assume the usage pattern of ownership transferring is \"infrequent\" then I don't think that matters as much as the security benefits of pending owner.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395326190/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395327177",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-395327177",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 395327177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTMyNzE3Nw==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T07:52:15Z",
    "updated_at": "2018-06-07T07:52:15Z",
    "author_association": "MEMBER",
    "body": "Something I don't see discussed here is why this needs to be standardized rather than just a best practice?  In the original description @danfinlay says:\r\n> should be standardized into an Application-layer protocol, to allow leveraging cross-compatibility.\r\n\r\nCan you go into detail on how we could leverage standardization for cross-compatibility?  Is there an opportunity for shared tooling that works with Ownable contracts?\r\n\r\nMy gut tells me that the opportunity for shared tooling is pretty limited for ownable contracts, and I would rather see effort spent on something like https://github.com/ethereum/EIPs/issues/719 that would allow us to have shared tooling for good UX of arbitrary contracts than trying to build one-off shared tooling for every common pattern.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395327177/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395455697",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-395455697",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 395455697,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTQ1NTY5Nw==",
    "user": {
      "login": "mudgen",
      "id": 49092,
      "node_id": "MDQ6VXNlcjQ5MDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mudgen",
      "html_url": "https://github.com/mudgen",
      "followers_url": "https://api.github.com/users/mudgen/followers",
      "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
      "organizations_url": "https://api.github.com/users/mudgen/orgs",
      "repos_url": "https://api.github.com/users/mudgen/repos",
      "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mudgen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T15:08:35Z",
    "updated_at": "2018-06-07T15:08:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MicahZoltu I am not an implementer of contract UI tools so I am not going to give examples of that. I am an implementer of contracts so I will give some examples of how an Owned Standard would be very useful for controlling ownership of contracts with contracts.\r\n\r\n1. Exchanges that buy/sell/auction ethereum contracts. This would only be possible if there was a standard for specifying a way to get the owning address of a contract and a standard way to transfer that ownership.\r\n2. Contract wallets that hold the ownership of contracts and that can transfer the ownership of contracts.\r\n3. Contract registries. It makes sense for some registries to only allow the owners of contracts to add their contracts to registries. A standard must exist for these contract registries to verify that a contract is being submitted by the owner of it before accepting it.\r\n\r\nThe Owned Standard popped up on my radar because I need to create a simple contract registry for a system I want to make. But for it to work with more contracts there needs to be a standard way to get the ownership of a contract.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395455697/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395499816",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-395499816",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 395499816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTQ5OTgxNg==",
    "user": {
      "login": "danfinlay",
      "id": 542863,
      "node_id": "MDQ6VXNlcjU0Mjg2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/542863?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danfinlay",
      "html_url": "https://github.com/danfinlay",
      "followers_url": "https://api.github.com/users/danfinlay/followers",
      "following_url": "https://api.github.com/users/danfinlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/danfinlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danfinlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danfinlay/subscriptions",
      "organizations_url": "https://api.github.com/users/danfinlay/orgs",
      "repos_url": "https://api.github.com/users/danfinlay/repos",
      "events_url": "https://api.github.com/users/danfinlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danfinlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T17:22:14Z",
    "updated_at": "2018-06-07T17:22:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't have a specific use case in mind, so I'm not that interested in defending this proposal anymore, but I will briefly anyways:\r\n\r\nI understand https://github.com/ProjectWyvern is a protocol for selling owned smart contracts, so they would be a good example of a smart contract that would benefit from common and widespread interfaces between ownable smart contracts.\r\n\r\nI'm a huge fan of 719, but that's more about client rendering, this proposal would allow inter-operability between smart contracts that are owned, and allow other smart contracts to more easily manage their ownerships.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395499816/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395589010",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-395589010",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 395589010,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTU4OTAxMA==",
    "user": {
      "login": "mudgen",
      "id": 49092,
      "node_id": "MDQ6VXNlcjQ5MDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mudgen",
      "html_url": "https://github.com/mudgen",
      "followers_url": "https://api.github.com/users/mudgen/followers",
      "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
      "organizations_url": "https://api.github.com/users/mudgen/orgs",
      "repos_url": "https://api.github.com/users/mudgen/repos",
      "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mudgen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T22:44:30Z",
    "updated_at": "2018-06-07T22:44:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I wrote an EIP about this here: https://github.com/mudgen/EIPs/blob/master/EIPS/eip-173.md and submitted a pull request.\r\n\r\nThe first draft is ready for some feedback.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395589010/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395776037",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-395776037",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 395776037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTc3NjAzNw==",
    "user": {
      "login": "mudgen",
      "id": 49092,
      "node_id": "MDQ6VXNlcjQ5MDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mudgen",
      "html_url": "https://github.com/mudgen",
      "followers_url": "https://api.github.com/users/mudgen/followers",
      "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
      "organizations_url": "https://api.github.com/users/mudgen/orgs",
      "repos_url": "https://api.github.com/users/mudgen/repos",
      "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mudgen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-08T14:20:58Z",
    "updated_at": "2018-06-08T14:20:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "EIP 173 has been merged and is here: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-173.md\r\n\r\nPlease give feedback.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395776037/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395785713",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-395785713",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 395785713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTc4NTcxMw==",
    "user": {
      "login": "mudgen",
      "id": 49092,
      "node_id": "MDQ6VXNlcjQ5MDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mudgen",
      "html_url": "https://github.com/mudgen",
      "followers_url": "https://api.github.com/users/mudgen/followers",
      "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
      "organizations_url": "https://api.github.com/users/mudgen/orgs",
      "repos_url": "https://api.github.com/users/mudgen/repos",
      "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mudgen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-08T14:52:08Z",
    "updated_at": "2018-06-08T14:52:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@danfinlay Can you edit your first post in this issue to add a link to the proposed standard here: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-173.md",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395785713/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395799972",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-395799972",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 395799972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTc5OTk3Mg==",
    "user": {
      "login": "androlo",
      "id": 2809499,
      "node_id": "MDQ6VXNlcjI4MDk0OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2809499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/androlo",
      "html_url": "https://github.com/androlo",
      "followers_url": "https://api.github.com/users/androlo/followers",
      "following_url": "https://api.github.com/users/androlo/following{/other_user}",
      "gists_url": "https://api.github.com/users/androlo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/androlo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/androlo/subscriptions",
      "organizations_url": "https://api.github.com/users/androlo/orgs",
      "repos_url": "https://api.github.com/users/androlo/repos",
      "events_url": "https://api.github.com/users/androlo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/androlo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-08T15:37:13Z",
    "updated_at": "2018-06-08T15:37:13Z",
    "author_association": "NONE",
    "body": "@MicahZoltu Absolutely agree. Forcing the new owner to claim ownership before the transfer is an essential step. It ensures that the new owner is an account that is at least able to transact with the contract, which means the contract can't be locked down indefinitely due to a typo, or bugs like encoding errors.\r\n\r\nI recently wrote an article on the \"ownable\" and \"claimable\" patterns, if anyone is interested: https://www.ohalo.co/blog/redundancy-is-needed-when-building-safe-smart-contracts",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395799972/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395813537",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-395813537",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 395813537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTgxMzUzNw==",
    "user": {
      "login": "mudgen",
      "id": 49092,
      "node_id": "MDQ6VXNlcjQ5MDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mudgen",
      "html_url": "https://github.com/mudgen",
      "followers_url": "https://api.github.com/users/mudgen/followers",
      "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
      "organizations_url": "https://api.github.com/users/mudgen/orgs",
      "repos_url": "https://api.github.com/users/mudgen/repos",
      "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mudgen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-08T16:23:27Z",
    "updated_at": "2018-06-08T16:23:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MicahZoltu @androlo do you think the standard should support both patterns:  claimable and transfer?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395813537/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395857977",
    "html_url": "https://github.com/ethereum/EIPs/issues/173#issuecomment-395857977",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/173",
    "id": 395857977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTg1Nzk3Nw==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-08T19:01:50Z",
    "updated_at": "2018-06-08T19:01:50Z",
    "author_association": "NONE",
    "body": "How necessary do you think the `owner()` getter is? We brought this up in OpenZeppelin chat, but, for example, RBACOwnable from https://github.com/OpenZeppelin/openzeppelin-solidity/pull/950/files#diff-8f869785a4b22b507bae87a6dbf3f2eb couldn't conform to this standard, since it doesn't store the address of the owner in an easily gettable way (as it supports multiple owners).\r\n\r\nAny thoughts on whether or not RBACOwnable should or could conform to this standard?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395857977/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
