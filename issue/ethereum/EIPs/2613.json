{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/2613",
  "id": 606249876,
  "node_id": "MDU6SXNzdWU2MDYyNDk4NzY=",
  "number": 2613,
  "title": "EIP-2612: 712-signed token approvals",
  "user": {
    "login": "MrChico",
    "id": 8930559,
    "node_id": "MDQ6VXNlcjg5MzA1NTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8930559?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MrChico",
    "html_url": "https://github.com/MrChico",
    "followers_url": "https://api.github.com/users/MrChico/followers",
    "following_url": "https://api.github.com/users/MrChico/following{/other_user}",
    "gists_url": "https://api.github.com/users/MrChico/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MrChico/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MrChico/subscriptions",
    "organizations_url": "https://api.github.com/users/MrChico/orgs",
    "repos_url": "https://api.github.com/users/MrChico/repos",
    "events_url": "https://api.github.com/users/MrChico/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MrChico/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3539577331,
      "node_id": "LA_kwDOAq426M7S-anz",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/discussions-to",
      "name": "discussions-to",
      "color": "20DFB1",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 108,
  "created_at": "2020-04-24T11:38:30Z",
  "updated_at": "2023-07-29T23:57:50Z",
  "closed_at": "2023-07-28T21:54:24Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "**This EIP is now final. Discussions about final EIPs should be on https://ethereum-magicians.org/**\r\n\r\nThis is a place for discussing https://github.com/ethereum/EIPs/pull/2612, which proposes an additional method `permit` for making approvals by way of signed messages rather than direct transactions",
  "closed_by": {
    "login": "lightclient",
    "id": 14004106,
    "node_id": "MDQ6VXNlcjE0MDA0MTA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/14004106?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lightclient",
    "html_url": "https://github.com/lightclient",
    "followers_url": "https://api.github.com/users/lightclient/followers",
    "following_url": "https://api.github.com/users/lightclient/following{/other_user}",
    "gists_url": "https://api.github.com/users/lightclient/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lightclient/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lightclient/subscriptions",
    "organizations_url": "https://api.github.com/users/lightclient/orgs",
    "repos_url": "https://api.github.com/users/lightclient/repos",
    "events_url": "https://api.github.com/users/lightclient/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lightclient/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/2613/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/618982070",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-618982070",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 618982070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODk4MjA3MA==",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-24T12:34:26Z",
    "updated_at": "2020-04-24T12:34:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "IMO the 'security considerations' section should mention the front running attack that can occur when an allowance is reduced, either by `approve` or the new `permit` function. I don't think this proposal changes the risk or possible mitigations in any way, but I haven't thought hard about it. \r\n\r\nIf you have a strong desire to do some bike shedding, you could even suggest a [specific mitigation](https://arxiv.org/pdf/1907.00903v1.pdf) for it. üòù ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/618982070/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/618996016",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-618996016",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 618996016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODk5NjAxNg==",
    "user": {
      "login": "Nipol",
      "id": 693461,
      "node_id": "MDQ6VXNlcjY5MzQ2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/693461?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nipol",
      "html_url": "https://github.com/Nipol",
      "followers_url": "https://api.github.com/users/Nipol/followers",
      "following_url": "https://api.github.com/users/Nipol/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nipol/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nipol/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nipol/subscriptions",
      "organizations_url": "https://api.github.com/users/Nipol/orgs",
      "repos_url": "https://api.github.com/users/Nipol/repos",
      "events_url": "https://api.github.com/users/Nipol/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nipol/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-24T13:04:43Z",
    "updated_at": "2020-04-24T13:04:43Z",
    "author_association": "NONE",
    "body": "I was looking forward to talking about this. I'd like to talk about the need for a \"deadline\"\r\n\r\nWhat aspects of Tx Relayer do we need to take into account \"deadline\"? The Tx Relayer may have a response that causes tx while setting tx fee low. or no response.\r\n\r\nAnd when a user signs for an interface, it requires more information. or more knowledge. Is usability not compromised? and more complexity for Tx Relayer.\r\n\r\nSo I think the deadline is unnecessary. ü§î",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/618996016/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/619002312",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-619002312",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 619002312,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTAwMjMxMg==",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-24T13:16:26Z",
    "updated_at": "2020-04-24T13:16:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I like `deadline`, as it solves the problem of worrying about [all the approvals](https://tac.dappstar.io/#/) one has floating out in the world. \r\nThat said, I am sympathetic to the argument that it is inconsistent with the existing `approve` interface.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/619002312/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/619026543",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-619026543",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 619026543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTAyNjU0Mw==",
    "user": {
      "login": "MrChico",
      "id": 8930559,
      "node_id": "MDQ6VXNlcjg5MzA1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8930559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrChico",
      "html_url": "https://github.com/MrChico",
      "followers_url": "https://api.github.com/users/MrChico/followers",
      "following_url": "https://api.github.com/users/MrChico/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrChico/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrChico/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrChico/subscriptions",
      "organizations_url": "https://api.github.com/users/MrChico/orgs",
      "repos_url": "https://api.github.com/users/MrChico/repos",
      "events_url": "https://api.github.com/users/MrChico/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrChico/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-24T13:57:19Z",
    "updated_at": "2020-04-24T13:57:19Z",
    "author_association": "MEMBER",
    "body": "Thanks @maurelian, added a comment about the approval front running attack. \r\n@nipol The `deadline` parameter is a way to mitigate the [free option](https://blog.althea.net/the-free-option-problem/) that the relaying party gets when receiving a signed message (it is just a deadline for the `Permit` itself, not for the approval so I don't think it solves the problem of random tokens being given allowance). In cases where the free option is not a concern, `deadline` can simply be set to `uint(-1)`, so it should be seen as an optional parameter\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/619026543/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/619151044",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-619151044",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 619151044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTE1MTA0NA==",
    "user": {
      "login": "MrChico",
      "id": 8930559,
      "node_id": "MDQ6VXNlcjg5MzA1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8930559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrChico",
      "html_url": "https://github.com/MrChico",
      "followers_url": "https://api.github.com/users/MrChico/followers",
      "following_url": "https://api.github.com/users/MrChico/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrChico/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrChico/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrChico/subscriptions",
      "organizations_url": "https://api.github.com/users/MrChico/orgs",
      "repos_url": "https://api.github.com/users/MrChico/repos",
      "events_url": "https://api.github.com/users/MrChico/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrChico/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-24T17:35:56Z",
    "updated_at": "2020-04-24T17:35:56Z",
    "author_association": "MEMBER",
    "body": "Actually @maurelian I was just made aware of the [xDai staking token implementation of `permit`](https://etherscan.io/address/0x0Ae055097C6d159879521C384F1D2123D1f195e6#code) which I think does what exactly what you are alluding to here. It shares the same ABI as Dai and Chai, but not the same semantics. I guess we better document all three flavors in the ERC",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/619151044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/619853432",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-619853432",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 619853432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTg1MzQzMg==",
    "user": {
      "login": "Nipol",
      "id": 693461,
      "node_id": "MDQ6VXNlcjY5MzQ2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/693461?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nipol",
      "html_url": "https://github.com/Nipol",
      "followers_url": "https://api.github.com/users/Nipol/followers",
      "following_url": "https://api.github.com/users/Nipol/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nipol/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nipol/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nipol/subscriptions",
      "organizations_url": "https://api.github.com/users/Nipol/orgs",
      "repos_url": "https://api.github.com/users/Nipol/repos",
      "events_url": "https://api.github.com/users/Nipol/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nipol/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-27T09:25:26Z",
    "updated_at": "2020-04-27T09:25:26Z",
    "author_association": "NONE",
    "body": "In terms of \"Free Options,\" I think `deadline` has sufficient requirements.\r\n\r\nBut in terms of EIP-712, deadline is not convincing.\r\n`deadline` is a difficult option for most signer to understand. at now, no example of an interface receiving a `deadline` value exists.\r\n\r\nWe can't show you the \"Free Options\" article every time ask for a signature. If we cannot effectively explain `deadline` to the signer and Tx Relayer, `uint256(-1)` will be used in most cases.\r\n\r\nFurthermore, `deadline` is a consideration that does not appear in the EIP-712 specification. I think it does not have to appear as an exception in `Permit`.\r\n\r\nIf all of these signatures necessary a \"deadline\" option, if all of EIP-712 signatures have the same security level, I think it's better to update the EIP-712 specification. üôÇ\r\n\r\nWhat is the best option? What do you think?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/619853432/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/619887984",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-619887984",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 619887984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTg4Nzk4NA==",
    "user": {
      "login": "MrChico",
      "id": 8930559,
      "node_id": "MDQ6VXNlcjg5MzA1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8930559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrChico",
      "html_url": "https://github.com/MrChico",
      "followers_url": "https://api.github.com/users/MrChico/followers",
      "following_url": "https://api.github.com/users/MrChico/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrChico/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrChico/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrChico/subscriptions",
      "organizations_url": "https://api.github.com/users/MrChico/orgs",
      "repos_url": "https://api.github.com/users/MrChico/repos",
      "events_url": "https://api.github.com/users/MrChico/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrChico/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-27T10:26:45Z",
    "updated_at": "2020-04-27T10:26:45Z",
    "author_association": "MEMBER",
    "body": "> We can't show you the \"Free Options\" article every time ask for a signature. If we cannot effectively explain deadline to the signer and Tx Relayer, uint256(-1) will be used in most cases.\r\n\r\nI'm perfectly happy with `uint(-1)` being used in most cases.\r\n\r\n>  deadline is a difficult option for most signer to understand. at now, no example of an interface receiving a deadline value exists.\r\n\r\nThere are already interfaces which deal with deadline, uniswap being one of them:\r\n<img width=\"635\" alt=\"Screen Shot 2020-04-27 at 12 21 12\" src=\"https://user-images.githubusercontent.com/8930559/80361709-b2ca9100-8881-11ea-8b35-11e722cad059.png\">\r\n\r\nor, for `Permit` https://stablecoin.services automatically sets deadline 4 minutes into the future.\r\n\r\nI can agree with your point that it may a difficult point for users to understand, and one that may require some EIP-712 tweaking to improve. Another ux improving solution could also be to introduce `Date` as a type to 712, to improve how it is rendered to the user.\r\n\r\nI do think that these options fall outside the scope of this ERC though, especially since this in some sense more of a descriptive erc than a prescriptive erc; I am highlighting what has been implemented and the motivations behind it. We can certainly make tweaks in new versions, but I am mainly interested in documenting what already exists here.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/619887984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/619943344",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-619943344",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 619943344,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTk0MzM0NA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-27T12:07:56Z",
    "updated_at": "2020-04-27T12:07:56Z",
    "author_association": "MEMBER",
    "body": "I've seen on twitter that apparently there are at least 3 different semantics contracts follow and still call it \"permits\". @MrChico you proposed to discuss all in the EIP/ERC.\r\n\r\nI think an EIP should be unambiguous and promote a single way of doing things. Is it possible to do that while perhaps mentioning \"semi-compatible\" contracts? If not, would it make sense having 3 different EIPs?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/619943344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/619963571",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-619963571",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 619963571,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTk2MzU3MQ==",
    "user": {
      "login": "MrChico",
      "id": 8930559,
      "node_id": "MDQ6VXNlcjg5MzA1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8930559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrChico",
      "html_url": "https://github.com/MrChico",
      "followers_url": "https://api.github.com/users/MrChico/followers",
      "following_url": "https://api.github.com/users/MrChico/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrChico/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrChico/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrChico/subscriptions",
      "organizations_url": "https://api.github.com/users/MrChico/orgs",
      "repos_url": "https://api.github.com/users/MrChico/repos",
      "events_url": "https://api.github.com/users/MrChico/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrChico/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-27T12:47:10Z",
    "updated_at": "2020-04-27T12:47:37Z",
    "author_association": "MEMBER",
    "body": "@axic I'm planning on mentioning the Stake-flavored implementation under \"backwards compatibility\", making that, the dai and chai implementations all belong to this \" semi-compatible\" class, but keep the specification as is for specificity",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/619963571/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/619971666",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-619971666",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 619971666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTk3MTY2Ng==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-27T13:02:46Z",
    "updated_at": "2020-04-27T13:02:46Z",
    "author_association": "MEMBER",
    "body": "Nice, sounds good!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/619971666/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/619981782",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-619981782",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 619981782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTk4MTc4Mg==",
    "user": {
      "login": "Nipol",
      "id": 693461,
      "node_id": "MDQ6VXNlcjY5MzQ2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/693461?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nipol",
      "html_url": "https://github.com/Nipol",
      "followers_url": "https://api.github.com/users/Nipol/followers",
      "following_url": "https://api.github.com/users/Nipol/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nipol/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nipol/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nipol/subscriptions",
      "organizations_url": "https://api.github.com/users/Nipol/orgs",
      "repos_url": "https://api.github.com/users/Nipol/repos",
      "events_url": "https://api.github.com/users/Nipol/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nipol/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-27T13:21:01Z",
    "updated_at": "2020-04-27T13:21:01Z",
    "author_association": "NONE",
    "body": "@MrChico Good! I think we've written quite a meaningful conversation in publicly.\r\n\r\nIt will be the data we or the next people will refer to when working in the future!\r\nüòâ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/619981782/reactions",
      "total_count": 5,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 2,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/621318940",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-621318940",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 621318940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTMxODk0MA==",
    "user": {
      "login": "ptrwtts",
      "id": 497330,
      "node_id": "MDQ6VXNlcjQ5NzMzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/497330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ptrwtts",
      "html_url": "https://github.com/ptrwtts",
      "followers_url": "https://api.github.com/users/ptrwtts/followers",
      "following_url": "https://api.github.com/users/ptrwtts/following{/other_user}",
      "gists_url": "https://api.github.com/users/ptrwtts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ptrwtts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ptrwtts/subscriptions",
      "organizations_url": "https://api.github.com/users/ptrwtts/orgs",
      "repos_url": "https://api.github.com/users/ptrwtts/repos",
      "events_url": "https://api.github.com/users/ptrwtts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ptrwtts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-29T16:23:40Z",
    "updated_at": "2020-04-29T16:23:40Z",
    "author_association": "NONE",
    "body": "> The standard ERC-20 race condition for approvals applies to permit as well.\r\n\r\nWhy not take the opportunity to fix this? Otherwise, we might end up with proliferations of safePermit too. Is the assumption that the allowances will be spent immediately, so it's not actually a problem?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/621318940/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/621369498",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-621369498",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 621369498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTM2OTQ5OA==",
    "user": {
      "login": "MrChico",
      "id": 8930559,
      "node_id": "MDQ6VXNlcjg5MzA1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8930559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrChico",
      "html_url": "https://github.com/MrChico",
      "followers_url": "https://api.github.com/users/MrChico/followers",
      "following_url": "https://api.github.com/users/MrChico/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrChico/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrChico/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrChico/subscriptions",
      "organizations_url": "https://api.github.com/users/MrChico/orgs",
      "repos_url": "https://api.github.com/users/MrChico/repos",
      "events_url": "https://api.github.com/users/MrChico/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrChico/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-29T17:58:32Z",
    "updated_at": "2020-04-29T17:58:32Z",
    "author_association": "MEMBER",
    "body": "> > The standard ERC-20 race condition for approvals applies to permit as well.\r\n> \r\n> Why not take the opportunity to fix this? Otherwise, we might end up with proliferations of safePermit too. Is the assumption that the allowances will be spent immediately, so it's not actually a problem?\r\n\r\nTo be honest I don't find the approval race condition to be much of an issue in practice ‚Äì it's only ever a problem when allowing addresses that can \"spontaneously\" spend your allowance. In most use cases, you give your allowance to a smart contract in such a way that only you can later initialize the `transferFrom` from your own address.\r\n\r\nI'm all for people implementing `safePermit` if they feel that this is a concern, but in order to limit the scope of what I'm trying to do here I think such alternatives should be in a different ERC",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/621369498/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/629421155",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-629421155",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 629421155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTQyMTE1NQ==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-15T18:49:41Z",
    "updated_at": "2020-05-15T18:50:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "It wasn't clear to me from a cursory read of the EIP that the following getter is also part of the required interface, I'd make it more explicit:\r\n\r\n```solidity\r\nfunction nonces(address owner) external view returns (uint256);\r\n```\r\n\r\nI'd also consider changing its name to something else, since `nonces` is quite generic and non-descript.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/629421155/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/629457320",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-629457320",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 629457320,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTQ1NzMyMA==",
    "user": {
      "login": "MrChico",
      "id": 8930559,
      "node_id": "MDQ6VXNlcjg5MzA1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8930559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrChico",
      "html_url": "https://github.com/MrChico",
      "followers_url": "https://api.github.com/users/MrChico/followers",
      "following_url": "https://api.github.com/users/MrChico/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrChico/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrChico/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrChico/subscriptions",
      "organizations_url": "https://api.github.com/users/MrChico/orgs",
      "repos_url": "https://api.github.com/users/MrChico/repos",
      "events_url": "https://api.github.com/users/MrChico/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrChico/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-15T20:07:08Z",
    "updated_at": "2020-05-15T20:07:08Z",
    "author_association": "MEMBER",
    "body": "\r\n\r\n> I'd also consider changing its name to something else, since `nonces` is quite generic and non-descript.\r\n\r\nDo you have a suggestion?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/629457320/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/629457814",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-629457814",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 629457814,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTQ1NzgxNA==",
    "user": {
      "login": "MrChico",
      "id": 8930559,
      "node_id": "MDQ6VXNlcjg5MzA1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8930559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrChico",
      "html_url": "https://github.com/MrChico",
      "followers_url": "https://api.github.com/users/MrChico/followers",
      "following_url": "https://api.github.com/users/MrChico/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrChico/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrChico/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrChico/subscriptions",
      "organizations_url": "https://api.github.com/users/MrChico/orgs",
      "repos_url": "https://api.github.com/users/MrChico/repos",
      "events_url": "https://api.github.com/users/MrChico/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrChico/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-15T20:08:19Z",
    "updated_at": "2020-05-15T20:08:30Z",
    "author_association": "MEMBER",
    "body": "Keep in mind that a change in this name would make this etc incompatible with Uniswap v2 (and even more incompatible with dai and chai)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/629457814/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/629463044",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-629463044",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 629463044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTQ2MzA0NA==",
    "user": {
      "login": "petejkim",
      "id": 30173,
      "node_id": "MDQ6VXNlcjMwMTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/30173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petejkim",
      "html_url": "https://github.com/petejkim",
      "followers_url": "https://api.github.com/users/petejkim/followers",
      "following_url": "https://api.github.com/users/petejkim/following{/other_user}",
      "gists_url": "https://api.github.com/users/petejkim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petejkim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petejkim/subscriptions",
      "organizations_url": "https://api.github.com/users/petejkim/orgs",
      "repos_url": "https://api.github.com/users/petejkim/repos",
      "events_url": "https://api.github.com/users/petejkim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petejkim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-15T20:21:25Z",
    "updated_at": "2020-05-15T20:21:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "> > I'd also consider changing its name to something else, since `nonces` is quite generic and non-descript.\r\n> \r\n> Do you have a suggestion?\r\n\r\npermitNonces",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/629463044/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/629489374",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-629489374",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 629489374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTQ4OTM3NA==",
    "user": {
      "login": "MrChico",
      "id": 8930559,
      "node_id": "MDQ6VXNlcjg5MzA1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8930559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrChico",
      "html_url": "https://github.com/MrChico",
      "followers_url": "https://api.github.com/users/MrChico/followers",
      "following_url": "https://api.github.com/users/MrChico/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrChico/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrChico/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrChico/subscriptions",
      "organizations_url": "https://api.github.com/users/MrChico/orgs",
      "repos_url": "https://api.github.com/users/MrChico/repos",
      "events_url": "https://api.github.com/users/MrChico/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrChico/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-15T21:14:51Z",
    "updated_at": "2020-05-15T21:14:51Z",
    "author_association": "MEMBER",
    "body": "Its okay for nonces to be generic, in some cases it can be an advantage. The erc doesn't specify other methods can't use `nonces` for other purpose",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/629489374/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/629489854",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-629489854",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 629489854,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTQ4OTg1NA==",
    "user": {
      "login": "MrChico",
      "id": 8930559,
      "node_id": "MDQ6VXNlcjg5MzA1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8930559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrChico",
      "html_url": "https://github.com/MrChico",
      "followers_url": "https://api.github.com/users/MrChico/followers",
      "following_url": "https://api.github.com/users/MrChico/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrChico/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrChico/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrChico/subscriptions",
      "organizations_url": "https://api.github.com/users/MrChico/orgs",
      "repos_url": "https://api.github.com/users/MrChico/repos",
      "events_url": "https://api.github.com/users/MrChico/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrChico/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-15T21:15:34Z",
    "updated_at": "2020-05-15T21:15:34Z",
    "author_association": "MEMBER",
    "body": "But most of the time, this doesn't seem like a particularly important concern",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/629489854/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/629656806",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-629656806",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 629656806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTY1NjgwNg==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-16T14:43:38Z",
    "updated_at": "2020-05-16T14:43:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think it would be useful to have a function that let smart contract know if the permit call will succeed if executed. \r\nFor example, when a contract called via static_call need to check the validity of the signature before handing the operation to another contract/call.\r\n\r\nThis could be like :\r\n```\r\nfunction isValidPermit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external view returns (bool);\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/629656806/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/629720007",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-629720007",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 629720007,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTcyMDAwNw==",
    "user": {
      "login": "MrChico",
      "id": 8930559,
      "node_id": "MDQ6VXNlcjg5MzA1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8930559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrChico",
      "html_url": "https://github.com/MrChico",
      "followers_url": "https://api.github.com/users/MrChico/followers",
      "following_url": "https://api.github.com/users/MrChico/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrChico/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrChico/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrChico/subscriptions",
      "organizations_url": "https://api.github.com/users/MrChico/orgs",
      "repos_url": "https://api.github.com/users/MrChico/repos",
      "events_url": "https://api.github.com/users/MrChico/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrChico/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-16T23:38:45Z",
    "updated_at": "2020-05-16T23:39:41Z",
    "author_association": "MEMBER",
    "body": "> I think it would be useful to have a function that let smart contract know if the permit call will succeed if executed.\r\n> For example, when a contract called via static_call need to check the validity of the signature before handing the operation to another contract/call.\r\n> \r\n> This could be like :\r\n> \r\n> ```\r\n> function isValidPermit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external view returns (bool);\r\n> ```\r\n\r\nThis is interesting. But if they were called with staticcall they wouldn't be able to execute the permit later anyway? In the cases I can imagine, it seems like you'd want to submit the permit whenever if it is well formed so it seems a try-catch pattern would be sufficient for this use case. Or is there some scenario you can think of in which you would NOT want to submit a well-formed permit?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/629720007/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/629720451",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-629720451",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 629720451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTcyMDQ1MQ==",
    "user": {
      "login": "MrChico",
      "id": 8930559,
      "node_id": "MDQ6VXNlcjg5MzA1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8930559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrChico",
      "html_url": "https://github.com/MrChico",
      "followers_url": "https://api.github.com/users/MrChico/followers",
      "following_url": "https://api.github.com/users/MrChico/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrChico/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrChico/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrChico/subscriptions",
      "organizations_url": "https://api.github.com/users/MrChico/orgs",
      "repos_url": "https://api.github.com/users/MrChico/repos",
      "events_url": "https://api.github.com/users/MrChico/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrChico/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-16T23:44:30Z",
    "updated_at": "2020-05-16T23:44:30Z",
    "author_association": "MEMBER",
    "body": "Hmmm, I guess one could imagine a sort of `pure` validity checking contract which would be called with staticcall and return `true` to the original caller if all is ok, and the original caller would not be constrained to a `STATIC` environment.... \r\nDid you have something like this in mind? Do people actually write contracts like this?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/629720451/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/629754791",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-629754791",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 629754791,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTc1NDc5MQ==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-17T07:18:16Z",
    "updated_at": "2020-05-17T07:18:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, that's basically it.\r\nGSN (https://docs.opengsn.org/learn/index.html) have this architecture where a \"view\" call is made first to a \"paymaster\" contract that can answer whether it can pay for the metatx. If it answer no, the metatx do not proceed and it is not charged. If it says yes, another call will be made where the \"paymaster\" can now call permit. The gas consumed here will be charged\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/629754791/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/632953615",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-632953615",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 632953615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjk1MzYxNQ==",
    "user": {
      "login": "MrChico",
      "id": 8930559,
      "node_id": "MDQ6VXNlcjg5MzA1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8930559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrChico",
      "html_url": "https://github.com/MrChico",
      "followers_url": "https://api.github.com/users/MrChico/followers",
      "following_url": "https://api.github.com/users/MrChico/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrChico/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrChico/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrChico/subscriptions",
      "organizations_url": "https://api.github.com/users/MrChico/orgs",
      "repos_url": "https://api.github.com/users/MrChico/repos",
      "events_url": "https://api.github.com/users/MrChico/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrChico/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-23T00:23:18Z",
    "updated_at": "2020-05-23T00:23:50Z",
    "author_association": "MEMBER",
    "body": "@wighawag couldn't you just as well check the validity of the permit in the \"paymaster\" in that case? As per the spec, you need to validate:\r\n\r\n- The current blocktime is less than or equal to `deadline`.\r\n- `owner` is not the zero address.\r\n- `Token.nonces[owner]` is equal to nonce provided `nonce`.\r\n- `r`, `s` and `v` is a valid `secp256k1` signature from `owner` of an ERC-712 typed `Permit` message.\r\n\r\nall of which can be verified in a static environment.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/632953615/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/632953925",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-632953925",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 632953925,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjk1MzkyNQ==",
    "user": {
      "login": "MrChico",
      "id": 8930559,
      "node_id": "MDQ6VXNlcjg5MzA1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8930559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrChico",
      "html_url": "https://github.com/MrChico",
      "followers_url": "https://api.github.com/users/MrChico/followers",
      "following_url": "https://api.github.com/users/MrChico/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrChico/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrChico/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrChico/subscriptions",
      "organizations_url": "https://api.github.com/users/MrChico/orgs",
      "repos_url": "https://api.github.com/users/MrChico/repos",
      "events_url": "https://api.github.com/users/MrChico/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrChico/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-23T00:25:19Z",
    "updated_at": "2020-10-25T12:38:00Z",
    "author_association": "MEMBER",
    "body": "Although the `nonce` is not given as an argument in the `permit` function, it will equal to `Token.nonces[owner]` if it is indeed a valid signature.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/632953925/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/632962511",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-632962511",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 632962511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjk2MjUxMQ==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-23T01:25:06Z",
    "updated_at": "2020-05-23T01:25:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this EIP can do without the `view` method described above. The reason why it's there in GSN is because part of that function is calling into a contract and performing an arbitrary query: by encapsulating the call there clients can get a boolean return value without having to know anything about the end recipient.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/632962511/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/632992567",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-632992567",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 632992567,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjk5MjU2Nw==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-23T06:10:28Z",
    "updated_at": "2020-05-23T06:12:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MrChico @nventuro That's exactly what I do as a **workaround**, see here : https://github.com/wighawag/gsn-playground/blob/5f40cc949031129374a48e43c8a0b71b83e52bf1/contracts/src/DAIPaymaster.sol#L101-L119\r\n\r\nbut this does not scale if my paymaster wanted to support all token that support the permit standard (unless A DOMAIN_SEPARATOR view was also part of the standard), hence why in my opinion a function like `isValidPermit` should be part of the standard.\r\n\r\nBy the way in regard to EIP-712 domain. I am not sure this should be part of the standard. EIP-2612 Contract implementer should be free to set the EIP-712 domain they see fit.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/632992567/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/633028809",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-633028809",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 633028809,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMzAyODgwOQ==",
    "user": {
      "login": "MrChico",
      "id": 8930559,
      "node_id": "MDQ6VXNlcjg5MzA1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8930559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrChico",
      "html_url": "https://github.com/MrChico",
      "followers_url": "https://api.github.com/users/MrChico/followers",
      "following_url": "https://api.github.com/users/MrChico/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrChico/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrChico/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrChico/subscriptions",
      "organizations_url": "https://api.github.com/users/MrChico/orgs",
      "repos_url": "https://api.github.com/users/MrChico/repos",
      "events_url": "https://api.github.com/users/MrChico/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrChico/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-23T11:11:14Z",
    "updated_at": "2020-05-23T11:11:14Z",
    "author_association": "MEMBER",
    "body": "\r\n> but this does not scale if my paymaster wanted to support all token that support the permit standard (unless A DOMAIN_SEPARATOR view was also part of the standard), hence why in my opinion a function like `isValidPermit` should be part of the standard.\r\n\r\nAh, yes you are right that this requires DOMAIN_SEPARATOR to be publicly accessible. I think requiring it to be accessible is a good idea and should be added to the spec",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/633028809/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/634289196",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-634289196",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 634289196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNDI4OTE5Ng==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-26T21:28:12Z",
    "updated_at": "2020-05-26T21:28:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is that because the `version` field is unknown? All other members of the domain separator seem to be obtainble, but I'm not an expert on 712.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/634289196/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/664368274",
    "html_url": "https://github.com/ethereum/EIPs/issues/2613#issuecomment-664368274",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2613",
    "id": 664368274,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NDM2ODI3NA==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-27T12:33:14Z",
    "updated_at": "2020-07-27T12:33:14Z",
    "author_association": "MEMBER",
    "body": "While the current mechanism for nonce management saves on gas (one storage slot per transaction rather than one storage slot per user), it means that a user cannot sign several permits and hand them out to multiple providers because inclusion order is not known at permit signing time.  It may be worth the storage costs to have the nonce be included.  An implementation can always do some tricks like storing 256 nonce-used flags in a single variable so there are 255 storage updates for every storage addition, thus greatly reducing the gas costs.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/664368274/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
