{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/2060",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2060/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2060/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2060/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/2060",
  "id": 446798256,
  "node_id": "MDU6SXNzdWU0NDY3OTgyNTY=",
  "number": 2060,
  "title": "Research into Protobuffs for new transaction-type serialization. ",
  "user": {
    "login": "MadeofTin",
    "id": 1226869,
    "node_id": "MDQ6VXNlcjEyMjY4Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1226869?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MadeofTin",
    "html_url": "https://github.com/MadeofTin",
    "followers_url": "https://api.github.com/users/MadeofTin/followers",
    "following_url": "https://api.github.com/users/MadeofTin/following{/other_user}",
    "gists_url": "https://api.github.com/users/MadeofTin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MadeofTin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MadeofTin/subscriptions",
    "organizations_url": "https://api.github.com/users/MadeofTin/orgs",
    "repos_url": "https://api.github.com/users/MadeofTin/repos",
    "events_url": "https://api.github.com/users/MadeofTin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MadeofTin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2019-05-21T19:58:53Z",
  "updated_at": "2021-12-04T20:12:33Z",
  "closed_at": "2021-12-04T20:12:33Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "I saw this posted in the allcoredevs chat and started down the rabbit hole reading about it. I decided to post my findings here for anyone else interested in looking into them. I am not a top tier dev so take my opinions with a grain of salt. \r\n \r\nFrom the site, \"Protocol buffers are a language-neutral, platform-neutral extensible mechanism for serializing structured data.\" https://developers.google.com/protocol-buffers/\r\n\r\nI found one post for and one post against using protobuffs.\r\n\r\n - Positive View  - https://codeclimate.com/blog/choose-protocol-buffers/\r\n\r\nScheme's sound great for enforcing rules among transaction types.\r\nBackward Compatibility For Free seems like a big plus. \r\n\r\n>Numbered fields in proto definitions obviate the need for version checks which is one of the explicitly stated motivations for the design and implementation of Protocol Buffers. “New fields could be easily introduced, and intermediate servers that didn’t need to inspect the data could simply parse it and pass through the data without needing to know about all the fields.”\r\n\r\n - Negative View - https://reasonablypolymorphic.com/blog/protos-are-wrong/\r\n\r\nThis article is pretty opinionated including personal attacks on the intelligence of the original authors. But! The interesting thing is one of the points of opposition may be actually be a benefit for our case.\r\n\r\n>One possible argument here is that protobuffers will hold onto any information present in a message that they don't understand. In principle this means that it's nondestructive to route a message through an intermediary that doesn't understand this version of its schema. Surely that's a win, isn't it?\r\n>\r\n>Granted, on paper it's a cool feature. But I've never once seen an application that will actually preserve that property. With the one exception of routing software, nothing wants to inspect only some bits of a message and then forward it on unchanged.\r\n\r\nInspecting only some bits of a message and then forwarding it on unchanged sounds a lot like what certain clients may want to do with transactions. \r\n\r\nMight even help miners check the miner_tip value to confirm adding a transaction is worth it to them. Lowering the barrier to confirm as they wouldn't need to fully de-serialize a block to find this out. Particularly interesting as the gas limit increases and with it, block size.",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/2060/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/2060/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/494541202",
    "html_url": "https://github.com/ethereum/EIPs/issues/2060#issuecomment-494541202",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2060",
    "id": 494541202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDU0MTIwMg==",
    "user": {
      "login": "MadeofTin",
      "id": 1226869,
      "node_id": "MDQ6VXNlcjEyMjY4Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1226869?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MadeofTin",
      "html_url": "https://github.com/MadeofTin",
      "followers_url": "https://api.github.com/users/MadeofTin/followers",
      "following_url": "https://api.github.com/users/MadeofTin/following{/other_user}",
      "gists_url": "https://api.github.com/users/MadeofTin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MadeofTin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MadeofTin/subscriptions",
      "organizations_url": "https://api.github.com/users/MadeofTin/orgs",
      "repos_url": "https://api.github.com/users/MadeofTin/repos",
      "events_url": "https://api.github.com/users/MadeofTin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MadeofTin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-21T20:14:48Z",
    "updated_at": "2019-05-21T20:16:07Z",
    "author_association": "MEMBER",
    "body": "Further rabbit-hole. FlatBuffers are an alternative to Protobuf. https://en.m.wikipedia.org/wiki/FlatBuffers\r\nThe primary benefit being:\r\n\r\n>it supports “zero-copy” deserialization, so that accessing the serialized data does not require first copying it into a separate part of memory\r\n\r\nBut,\r\n\r\n>FlatBuffers, like its forebear Protocol Buffers, is designed to permit extensibility at lower storage and execution time cost. Both formats achieve this by permitting the addition of new fields at the end of existing record types (called “tables” in FlatBuffers); while Protocol Buffers requires explicit IDs on every field in its IDL, FlatBuffers merely assigns IDs sequentially by default, so new fields must be added at the end of the table, and a central authority is needed to define the order of fields for a given schema — decentralized extensions of a single table type would result in field ID clashes.\r\n\r\nand robust language support.\r\nC++, Java, C#, Go, Python, Rust, JavaScript, PHP, C, Dart, Lua, TypeScript",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/494541202/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974705423",
    "html_url": "https://github.com/ethereum/EIPs/issues/2060#issuecomment-974705423",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2060",
    "id": 974705423,
    "node_id": "IC_kwDOAq426M46GNMP",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-11-20T20:12:03Z",
    "updated_at": "2021-11-20T20:12:03Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974705423/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986086361",
    "html_url": "https://github.com/ethereum/EIPs/issues/2060#issuecomment-986086361",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2060",
    "id": 986086361,
    "node_id": "IC_kwDOAq426M46xnvZ",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-04T20:12:32Z",
    "updated_at": "2021-12-04T20:12:32Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986086361/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
