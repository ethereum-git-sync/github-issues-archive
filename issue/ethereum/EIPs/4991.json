{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/4991",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/4991/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/4991/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/4991/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/4991",
  "id": 1201245395,
  "node_id": "I_kwDOAq426M5HmYzT",
  "number": 4991,
  "title": "minting of NFT with on-chain auction",
  "user": {
    "login": "xuejunxie",
    "id": 46408579,
    "node_id": "MDQ6VXNlcjQ2NDA4NTc5",
    "avatar_url": "https://avatars.githubusercontent.com/u/46408579?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/xuejunxie",
    "html_url": "https://github.com/xuejunxie",
    "followers_url": "https://api.github.com/users/xuejunxie/followers",
    "following_url": "https://api.github.com/users/xuejunxie/following{/other_user}",
    "gists_url": "https://api.github.com/users/xuejunxie/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/xuejunxie/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/xuejunxie/subscriptions",
    "organizations_url": "https://api.github.com/users/xuejunxie/orgs",
    "repos_url": "https://api.github.com/users/xuejunxie/repos",
    "events_url": "https://api.github.com/users/xuejunxie/events{/privacy}",
    "received_events_url": "https://api.github.com/users/xuejunxie/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-04-12T07:03:21Z",
  "updated_at": "2022-07-18T18:08:06Z",
  "closed_at": "2022-05-06T06:19:42Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Inspired by the post from Vitalik: https://vitalik.ca/general/2021/08/22/prices.html\r\n\r\nI propose a standard for the minting of NFT with an on-chain auction.\r\n\r\nThe proposed functions are as follows:\r\n\r\n\r\n\r\n    uint public auctionDuration;\r\n    uint public unWithdrawnFunds;\r\n\r\n    mapping (uint256 => uint) public auctionEndTime;\r\n    mapping (uint256 => uint) public highestBid;\r\n    mapping (uint256 => address) public highestBidder;\r\n    mapping (uint256 => mapping (address => uint)) public pendingReturns;\r\n\r\n    event AuctionStarted(uint256 tokenId, uint256 auctionEndTime, uint256 highestBid, address highestBidder);\r\n    event AuctionExtended(uint256 tokenId, uint256 newAuctionEndTime);\r\n    event AuctionEnded(uint256 tokenId, address highestBidder, uint256 highestBid);\r\n    event HighestBidIncreased(uint256 tokenId, address highestBidder, uint256 highestBid);\r\n    event SubSpaceAuctionAllowed(uint256 tokenId);\r\n    event withDrawalRequested(uint256 tokenId, address bidder, uint256 amount);\r\n\r\n\r\n\r\n    function auctionStart(uint256 tokenId) public payable;\r\n     /// This function should assign auctionEndTime[tokenId], highestBid[tokenId], highestBidder[tokenId]\r\n     /// emit AuctionStarted\r\n\r\n    function bid(uint256 tokenId) public payable;\r\n     /// This function should update  highestBid[tokenId], highestBidder[tokenId], pendingReturns[tokenId][address]. It could also increase the auctionEndTime[tokenId] in the last few minutes of the auction.\r\n     /// emit HighestBidIncreased\r\n     /// may emit AuctionExtended\r\n\r\n    function withdraw(uint256 tokenId) public;\r\n     /// This function should zero pendingReturns[tokenId][address]. Prefereabily to be required after auctionEndTime[tokenId] to prevent racing condition.\r\n     /// emit withDrawalRequested\r\n\r\n    function auctionEnd(uint256 tokenId) public;\r\n     /// In auctionEnd, safemint(highestBidder, tokenId) is called to mint, of cause after auctionEndTime[tokenId].\r\n     /// emit AuctionEnded\r\n\r\n      function ownerWithdraw(uint amount) public onlyOwner;\r\n     /// In ownerWithdraw amount <= address(this).balance - unWithdrawnFunds should be enforced prevent owner overdraw of funds unwithdrawn by bidders\r\n\r\n\r\nThis way, we can create a fair auction without the \"auction by other means\".",
  "closed_by": {
    "login": "MicahZoltu",
    "id": 886059,
    "node_id": "MDQ6VXNlcjg4NjA1OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MicahZoltu",
    "html_url": "https://github.com/MicahZoltu",
    "followers_url": "https://api.github.com/users/MicahZoltu/followers",
    "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
    "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
    "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
    "repos_url": "https://api.github.com/users/MicahZoltu/repos",
    "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/4991/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/4991/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1097593198",
    "html_url": "https://github.com/ethereum/EIPs/issues/4991#issuecomment-1097593198",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/4991",
    "id": 1097593198,
    "node_id": "IC_kwDOAq426M5Ba_Fu",
    "user": {
      "login": "PradhumnaPancholi",
      "id": 29339287,
      "node_id": "MDQ6VXNlcjI5MzM5Mjg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/29339287?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PradhumnaPancholi",
      "html_url": "https://github.com/PradhumnaPancholi",
      "followers_url": "https://api.github.com/users/PradhumnaPancholi/followers",
      "following_url": "https://api.github.com/users/PradhumnaPancholi/following{/other_user}",
      "gists_url": "https://api.github.com/users/PradhumnaPancholi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PradhumnaPancholi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PradhumnaPancholi/subscriptions",
      "organizations_url": "https://api.github.com/users/PradhumnaPancholi/orgs",
      "repos_url": "https://api.github.com/users/PradhumnaPancholi/repos",
      "events_url": "https://api.github.com/users/PradhumnaPancholi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PradhumnaPancholi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-13T06:03:46Z",
    "updated_at": "2022-04-13T06:03:46Z",
    "author_association": "NONE",
    "body": "I have seen something like this and have worked on it as well. Can you please suggest some generalized use-case for this? Just curious as I haven't seen a lot of auctions.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1097593198/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1100918181",
    "html_url": "https://github.com/ethereum/EIPs/issues/4991#issuecomment-1100918181",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/4991",
    "id": 1100918181,
    "node_id": "IC_kwDOAq426M5Bnq2l",
    "user": {
      "login": "xuejunxie",
      "id": 46408579,
      "node_id": "MDQ6VXNlcjQ2NDA4NTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/46408579?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xuejunxie",
      "html_url": "https://github.com/xuejunxie",
      "followers_url": "https://api.github.com/users/xuejunxie/followers",
      "following_url": "https://api.github.com/users/xuejunxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/xuejunxie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xuejunxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xuejunxie/subscriptions",
      "organizations_url": "https://api.github.com/users/xuejunxie/orgs",
      "repos_url": "https://api.github.com/users/xuejunxie/repos",
      "events_url": "https://api.github.com/users/xuejunxie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xuejunxie/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-17T17:14:38Z",
    "updated_at": "2022-04-17T17:14:38Z",
    "author_association": "NONE",
    "body": "> I have seen something like this and have worked on it as well. Can you please suggest some generalized use-case for this? Just curious as I haven't seen a lot of auctions.\r\n\r\nI come up with this issue in my project: https://phanta.space/#/space\r\n\r\nIn order to sell a vast amount of items with large variations in the utility value, I need to use an auction that initiates a countdown when the user places a bid and mint at the end of the auction.\r\n\r\nHere is the implemented smart contract: https://etherscan.io/address/0x0e34dd8c227856ca59e2476dc2e872fb76ea5bfa#code",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1100918181/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1101607017",
    "html_url": "https://github.com/ethereum/EIPs/issues/4991#issuecomment-1101607017",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/4991",
    "id": 1101607017,
    "node_id": "IC_kwDOAq426M5BqTBp",
    "user": {
      "login": "PradhumnaPancholi",
      "id": 29339287,
      "node_id": "MDQ6VXNlcjI5MzM5Mjg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/29339287?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PradhumnaPancholi",
      "html_url": "https://github.com/PradhumnaPancholi",
      "followers_url": "https://api.github.com/users/PradhumnaPancholi/followers",
      "following_url": "https://api.github.com/users/PradhumnaPancholi/following{/other_user}",
      "gists_url": "https://api.github.com/users/PradhumnaPancholi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PradhumnaPancholi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PradhumnaPancholi/subscriptions",
      "organizations_url": "https://api.github.com/users/PradhumnaPancholi/orgs",
      "repos_url": "https://api.github.com/users/PradhumnaPancholi/repos",
      "events_url": "https://api.github.com/users/PradhumnaPancholi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PradhumnaPancholi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-18T17:53:58Z",
    "updated_at": "2022-04-18T17:53:58Z",
    "author_association": "NONE",
    "body": "Cool project! I can see this being useful for some other cases as well.  However, I would suggest making this standard generic that can work with other token standards. I am happy to help with the EIP process.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1101607017/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1119294343",
    "html_url": "https://github.com/ethereum/EIPs/issues/4991#issuecomment-1119294343",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/4991",
    "id": 1119294343,
    "node_id": "IC_kwDOAq426M5CtxOH",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-06T06:19:42Z",
    "updated_at": "2022-05-06T06:19:42Z",
    "author_association": "MEMBER",
    "body": "Please either create a pull request to make this an EIP (see EIP-1) or create a thread in Ethereum Magicians to discuss it further first.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1119294343/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
