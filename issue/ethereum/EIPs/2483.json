{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/2483",
  "id": 552416493,
  "node_id": "MDU6SXNzdWU1NTI0MTY0OTM=",
  "number": 2483,
  "title": "ERC-2477 the discussion",
  "user": {
    "login": "fulldecent",
    "id": 382183,
    "node_id": "MDQ6VXNlcjM4MjE4Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fulldecent",
    "html_url": "https://github.com/fulldecent",
    "followers_url": "https://api.github.com/users/fulldecent/followers",
    "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
    "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
    "organizations_url": "https://api.github.com/users/fulldecent/orgs",
    "repos_url": "https://api.github.com/users/fulldecent/repos",
    "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fulldecent/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 23,
  "created_at": "2020-01-20T16:59:32Z",
  "updated_at": "2022-03-30T16:07:45Z",
  "closed_at": "2022-03-30T16:07:45Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "To discuss ERC-2477...\r\n\r\n## Simple Summary\r\n\r\n  This specification defines a mechanism by which clients may verify that a fetched token metadata document has been delivered without unexpected manipulation.\r\n\r\n  This is the Web3 counterpart of the W3C Subresource Integrity (SRI) specification.\r\n",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/2483/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/576806773",
    "html_url": "https://github.com/ethereum/EIPs/issues/2483#issuecomment-576806773",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
    "id": 576806773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NjgwNjc3Mw==",
    "user": {
      "login": "mudgen",
      "id": 49092,
      "node_id": "MDQ6VXNlcjQ5MDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mudgen",
      "html_url": "https://github.com/mudgen",
      "followers_url": "https://api.github.com/users/mudgen/followers",
      "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
      "organizations_url": "https://api.github.com/users/mudgen/orgs",
      "repos_url": "https://api.github.com/users/mudgen/repos",
      "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mudgen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-21T18:06:46Z",
    "updated_at": "2020-01-21T18:06:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi there.   Let's discuss ERC-2477.  What is it?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/576806773/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/577233441",
    "html_url": "https://github.com/ethereum/EIPs/issues/2483#issuecomment-577233441",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
    "id": 577233441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzIzMzQ0MQ==",
    "user": {
      "login": "MoMannn",
      "id": 8865298,
      "node_id": "MDQ6VXNlcjg4NjUyOTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8865298?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MoMannn",
      "html_url": "https://github.com/MoMannn",
      "followers_url": "https://api.github.com/users/MoMannn/followers",
      "following_url": "https://api.github.com/users/MoMannn/following{/other_user}",
      "gists_url": "https://api.github.com/users/MoMannn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MoMannn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MoMannn/subscriptions",
      "organizations_url": "https://api.github.com/users/MoMannn/orgs",
      "repos_url": "https://api.github.com/users/MoMannn/repos",
      "events_url": "https://api.github.com/users/MoMannn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MoMannn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-22T15:14:19Z",
    "updated_at": "2020-01-22T15:14:48Z",
    "author_association": "NONE",
    "body": "@mudgen #2477 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/577233441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/578872461",
    "html_url": "https://github.com/ethereum/EIPs/issues/2483#issuecomment-578872461",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
    "id": 578872461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODg3MjQ2MQ==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-27T17:56:51Z",
    "updated_at": "2020-01-27T17:56:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey the following is not true : \r\n```\r\nAlthough all these standards allow storing the metadata entirely on-chain (using the \"data\" URI, RFC 2397), or using a content-addressable system (e.g. IPFS's Content IDentifiers [sic]), every implementation we have found is using Uniform Resource Locators. These URLs provide no guarantees of content correctness or immutability. This standard adds such guarantees.\r\n```\r\nAt Sandbox we use IPFS content-addressable url and as such these url guarantees correctness and immutability (as our contract does not allow change of metatdata uri)\r\n\r\nOn that note, why not simply reuse the tokenURI standatrds and have the uri contain the hash of the data (even if it lives on a DNS domain) like `https://centralised.com/asset/1?hash=bafybeigub4nnpk7rg2lni2nm6tlpdeo2k2remfeuoobbv3272jdgjqmyty`\r\nAs for the schema it could be referenced with the same kind of uri inside the metadata itself\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/578872461/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/579058735",
    "html_url": "https://github.com/ethereum/EIPs/issues/2483#issuecomment-579058735",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
    "id": 579058735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTA1ODczNQ==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-28T03:08:33Z",
    "updated_at": "2020-01-28T03:08:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am glad to see it is getting used that way! Can you please provide some references for Sandbox, marketing page and implementation details?\r\n\r\nYou are correct, we could have created a convention to shove hashes into a URL. There are a few reasons we have not chosen this. The strongest reason is that the World Wide Web has the same problem and they chose to use the Sub-Resource Integrity approach, which is a separate data field.\r\n\r\nAnd perhaps this discussion can help to strengthen the rationale in the text. Other supplementary reasons are:\r\n\r\n1. For on-chain consumers of data, it is easier to parse a direct hash field than to perform string operations\r\n2. Maybe there are some URIs which are not amenable to being modified in that way, therefore limiting the generalizability of that approach",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/579058735/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/579668070",
    "html_url": "https://github.com/ethereum/EIPs/issues/2483#issuecomment-579668070",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
    "id": 579668070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTY2ODA3MA==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-29T09:25:08Z",
    "updated_at": "2020-01-29T09:25:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Regarding our use of IPFS for metadata, you can find it here : https://github.com/pixowl/sandbox-smart-contracts/blob/master/src/Asset/ERC1155ERC721.sol\r\nWe wrote a blog post mentioning it here : https://medium.com/sandbox-game/erc-1155-a-new-standard-for-the-sandbox-c95ee1e45072\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/579668070/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/579671573",
    "html_url": "https://github.com/ethereum/EIPs/issues/2483#issuecomment-579671573",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
    "id": 579671573,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTY3MTU3Mw==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-29T09:34:33Z",
    "updated_at": "2020-01-29T09:34:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "As for having a separate method just for integrity, I guess it make sense, but why not instead use the multicodec format a la https://eips.ethereum.org/EIPS/eip-1577 ?\r\n\r\nAnd if you still need to use tokenURI / uri for backward compatibility (or because you still want to handle the serving of the data through your domain) the multicodec can serve as the integrity of the data served at `tokenURI`\r\n\r\nAs for `tokenURISchemaIntegrity` I think it is unecessary as this can be dealt like you deal with schema uri in your example. There could be integrity checksum in the metadata format itself.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/579671573/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/579672252",
    "html_url": "https://github.com/ethereum/EIPs/issues/2483#issuecomment-579672252",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
    "id": 579672252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTY3MjI1Mg==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-29T09:36:27Z",
    "updated_at": "2020-01-29T09:36:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "`This standard is usable with any non-fungible token standard or any token standard that has some non-fungible properties. More precisely: anything that we can index using an `id` parameter. This EIP metadata lists ERC-721 and ERC-1155 as \"required\" for implementation, due to a technical limitation of EIP metadata. In actuality, *either* of these standards is required, or any other applicable token standard could be used.`\r\n\r\nI don't think it is useful to limit to what you call \"Non fungible token\".  I think it should apply to any standard that have a tokenURI / uri method or even future standard that can reference EIP-2477. \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/579672252/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/582140049",
    "html_url": "https://github.com/ethereum/EIPs/issues/2483#issuecomment-582140049",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
    "id": 582140049,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjE0MDA0OQ==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-04T22:09:17Z",
    "updated_at": "2020-02-04T22:09:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thank you, all great points.\r\n\r\nUpdates made:\r\n\r\n* a5fb2a4ea457011ee6a4ef723d1131c61ab4301a Qualify: **NEARLY** every implementation we have found is using Uniform Resource Locators\r\n* cdc046b37a0c914cace56a8ccd7e01b5efe28558 Add rationale for separate data field\r\n* 25cdb07092f8aead2b916d9565cd39293bc6691b Justify need for schema integrity\r\n* 3518f3086476a0bc03c0b754ed3b73bc521176c5 Remove \"non-fungible\" limiting word, make more general\r\n* e29147bca4770d8707f5371b12920d412bf69f85 Add reference to The Sandbox\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/582140049/reactions",
      "total_count": 5,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/585155473",
    "html_url": "https://github.com/ethereum/EIPs/issues/2483#issuecomment-585155473",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
    "id": 585155473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTE1NTQ3Mw==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-12T11:10:22Z",
    "updated_at": "2020-02-12T11:10:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @fulldecent \r\n\r\nI have still few comments that merit consideration in my opinion :`\r\n\r\n> Rather than changing how JSON-LD works, or changing JSON Schemas, we have the tokenURISchemaIntegrity property to just provide the integrity.\r\n\r\nThis is not true, specifying the integrity of the schema in the document would not change how JSON-LD works. the @schema would still be valid. You would just need to add an integrity field. This is backward compatible with json-ld.\r\nThe advantage though is that you do not need to store it on-chain. \r\nThis would encourage application to use schema since they would not need an extra cost for it nor an extra function in their smart contract\r\n\r\nI would also like to see discussion on the use of a contentHash a la https://eips.ethereum.org/EIPS/eip-1577\r\n\r\nThe idea would be replace tokenURI and uri function with a more strict mechanism so integrity is builtin.\r\n\r\nNew standard could use it instead of tokenURI and for old standard, they woudl still provide tokenURI as fallback but the integrity would be provided by 1577\r\n\r\nThe 2477 interface would then simply be \r\n```\r\ninterface ERC2477 /* is ERC165 */ {\r\n  function contenthash(uint256 id) public view returns (bytes);\r\n}\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/585155473/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/586559085",
    "html_url": "https://github.com/ethereum/EIPs/issues/2483#issuecomment-586559085",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
    "id": 586559085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjU1OTA4NQ==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-15T06:16:50Z",
    "updated_at": "2020-02-15T06:16:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@wighawag, thank you, you have good points to bring up.\r\n\r\n# `tokenURISchemaIntegrity` is duplicative since in can be referenced from token metadata\r\n\r\nYes, the token metadata can reference the schema and can use some approach to provide for referential integrity. Example:\r\n\r\n```json\r\n{\r\n    \"$schema\": \"./schema.json\",\r\n    \"$schemaIntegrity\": \"sha256-sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\"\r\n}\r\n```\r\n\r\nThis approach provides integrity guarantees for the metadata schema. And it does not require any additional storage on the blockchain.\r\n\r\nA benefit of the duplicity is that it is possible to upgrade the schema document without requiring to update every token metadata integrity. What I'm saying sounds stupid if you think implementations would need to update storage for each token individually.\r\n\r\n**Actual storage implementations**\r\n\r\nI expect that many applications will not use O(N) storage for `tokenURISchemaIntegrity`.\r\n\r\n* Non-fungible tokens applications, which use one class of token, can use a single schema document (this is O(1) storage).\r\n* Multi token applications, which use batches of tokens (see https://eips.ethereum.org/EIPS/eip-1155#non-fungible-tokens at \"Split ID Bits\"), can use a single schema document per class (also O(\\#CLASSES).\r\n\r\nThe benefit having a separate `tokenURISchemaIntegrity` is that it is possible to upgrade a schema document (O(1)) without requiring to update every token metadata integrity (O(N)).\r\n\r\n**TODO**\r\n\r\nThis design decision should be understood and documented in the text.\r\n\r\n# Change design of `tokenURISchemaIntegrity` to optional?\r\n\r\nOur current design is favoring (and anticipating) applications that have many tokens with the same schema. In order to better accommodate other applications we could update:\r\n\r\n```\r\n     * @return digest Bytes returned from the hash algorithm or \"\" if there is no schema\r\n     * @return hashAlgorithm The name of the cryptographic hash algorithm or \"\" if there is no schema\r\n```\r\n\r\nto\r\n\r\n```\r\n     * @return digest Bytes returned from the hash algorithm or \"\" if not available\r\n     * @return hashAlgorithm The name of the cryptographic hash algorithm or \"\" if not available\r\n```\r\n\r\nThe latter opens the possible for a schema to be interpreted using `$schemaIntegrity` or similar.\r\n\r\n**TODO: Discuss if the above change is appropriate.**\r\n\r\n# Related work\r\n\r\nI have [reached out to the JSON-LD](https://lists.w3.org/Archives/Public/public-json-ld-wg/2020Feb/0003.html) and JSON Schema working groups to discuss if `$schemaIntegrity` approach above can be standardized at the JSON Schema level. This discussion is in progress.\r\n\r\n# Regarding contentHash\r\n\r\nThe content hash approach at #1577 is interesting. There is work with IPFS and IETF to standardize this. At current, none of these specifications have left draft status nor have any date to consider for final status. Because these specifications are not finalized I do not recommend we adopt them as dependencies for this project. To do so would delay our work here.\r\n\r\nReferences: \r\n\r\n- https://tools.ietf.org/html/draft-amsuess-t2trg-rdlink-01\r\n- https://tools.ietf.org/html/draft-sporny-hashlink-02\r\n\r\n# Regarding removing `tokenURI`\r\n\r\nFunctionality relating to URIs is implemented on billions of devices on Earth and beyond. I do not recommend we drop support for URIs.\r\n\r\n---\r\n\r\n**🏆 Achievement unlocked: This post is the most literally meta<sup>n</sup> I've written or seen.**",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/586559085/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/586701275",
    "html_url": "https://github.com/ethereum/EIPs/issues/2483#issuecomment-586701275",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
    "id": 586701275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjcwMTI3NQ==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-16T12:33:10Z",
    "updated_at": "2020-02-16T12:33:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "How do you see the scenario where the metatdata do not change but the schema does ?\r\n\r\nWere you thinking of the case where the new schema is still backward compatible with the old metadata ?\r\nThat feel unnecessary if the schema is linked to the metadata itself since you can simply link to the new schema in the new metadata without affecting existing metadata.\r\nAlso allowing the schema to change for existing metadata is dangerous. The point of integrity check is that they do not change.\r\n\r\nNote I was not proposing to remove `tokenURI` from existing standard, just that new standard that need to link to content off-chain can use a contentHash approach instead, making things like `tokenURI` obsolete for them\r\n\r\nBut if you want 2477 for existing standard, the content hash fucntion would be on top of the `tokenURI` acting as both an integrity check (for application that use tokenURI to fetch the data) and content uri (for those that prefer to directly use contentHash\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/586701275/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/587276186",
    "html_url": "https://github.com/ethereum/EIPs/issues/2483#issuecomment-587276186",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
    "id": 587276186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzI3NjE4Ng==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-18T04:45:59Z",
    "updated_at": "2020-02-18T04:45:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here is a real world scenario for schema changes without metadata changes:\r\n\r\nKnightStory is \"an innovative mobile RPG powered by blockchain\". And according to Etherscan, its tokens are the top ERC-721 asset which has associated JSON metadata (measured by transfers, past 7 days).\r\n\r\nOne of the tokens IDs is 765908694\r\n\r\nAnd the `tokenURI` for this ID is: https://qtsaj4j9bc.execute-api.ap-southeast-1.amazonaws.com/prod/v4/game/dozer/doll/metadata/91\r\n\r\nHere is the token metadata:\r\n\r\n```json\r\n{\r\n    \"name\":\"Lamlam\",\r\n    \"language\":\"en-US\",\r\n    \"image\":\"https://cryptodozer.io/static/images/dozer/meta/dolls/91.png\",\r\n    \"attributes\":{\"id\":\"91\",\"type\":\"Fancy01\",\"grade\":\"rainbow\",\"star\":\"1\"}\r\n}\r\n```\r\n\r\nThere is no schema.\r\n\r\nSo if this application has deployed using ERC-2477 they would have a `tokenURIIntegrity` of hash(that JSON).\r\n\r\nI don't have anything bad to say about the developers at KnightStory, I don't know them. But if my experience is any indication, people will implement ERC-2477 by copying the reference implementation and (maybe) adjusting the code indent level to match the rest of the code that they just pasted it into. This means, no, I'm not expecting them to think about implementing a proper well-thought-out, internationalized, forward-thinking data schema when adding the integrity feature to that token.\r\n\r\nSo I expect it will be common that people deploy ERC-2477 applications hastily, and I would like to support this development methodology by allowing them to upgrade their schema (using `tokenURISchemaIntegrity`) at a later time.\r\n\r\nThis includes adding a schema when previously there was none, and also as you mentioned, upgrading to a new backwards compatible schema (e.g. adding documentation to existing properties).\r\n\r\n---\r\n\r\n> That feel unnecessary if the schema is linked to the metadata itself since you can simply link to the new schema in the new metadata without affecting existing metadata.\r\n\r\nI don't follow here. The hash for metadata A:\r\n\r\n```json\r\n{\r\n    \"$schema\": \"https://example.com/schemas/v1.json\",\r\n    \"$schemaIntegrity\": \"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\"\r\n    \"data\": \"moar\"\r\n}\r\n```\r\n\r\ndoes NOT equal the hash of metadata B:\r\n\r\n```json\r\n{\r\n    \"$schema\": \"https://example.com/schemas/v2.json\",\r\n    \"$schemaIntegrity\": \"sha256-someotherintegrity======================\"\r\n    \"data\": \"moar\"\r\n}\r\n```\r\n\r\nSo changing the schema URL in a metadata would require updating `tokenURIIntegrity`.\r\n\r\nHowever, a looser coupling is possible:\r\n\r\n```json\r\n{\r\n    \"$schema\": \"https://example.com/schemas/schema.json\",\r\n    \"data\": \"moar\"\r\n}\r\n```\r\n\r\nAnd that allows the changing the schema only by updating the web server and updating `tokenURISchemaIntegrity` which can be O(1).\r\n\r\n---\r\n\r\nRegarding contenthash. This specification (is it a specification?) is too new to consider building on top of. For example they have not made a 1.0 release, they are not committed to a policy of making backwards-compatible releases and they have minimal adoption outside of the IPFS Project.\r\n\r\nW3C is a much more reliable and stable specification to build on top of and so the ERC-2477 specification builds on top of SRI.\r\n\r\nThat said, it could be helpful to mention the multicodec's table database (https://github.com/multiformats/multicodec/blob/master/table.csv). But I would keep this as a non-normative reference until the IPFS Project gets that file referenced in from the W3C specification (which they should totally do).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/587276186/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/587479722",
    "html_url": "https://github.com/ethereum/EIPs/issues/2483#issuecomment-587479722",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
    "id": 587479722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzQ3OTcyMg==",
    "user": {
      "login": "xpepermint",
      "id": 174279,
      "node_id": "MDQ6VXNlcjE3NDI3OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/174279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xpepermint",
      "html_url": "https://github.com/xpepermint",
      "followers_url": "https://api.github.com/users/xpepermint/followers",
      "following_url": "https://api.github.com/users/xpepermint/following{/other_user}",
      "gists_url": "https://api.github.com/users/xpepermint/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xpepermint/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xpepermint/subscriptions",
      "organizations_url": "https://api.github.com/users/xpepermint/orgs",
      "repos_url": "https://api.github.com/users/xpepermint/repos",
      "events_url": "https://api.github.com/users/xpepermint/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xpepermint/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-18T14:14:14Z",
    "updated_at": "2020-02-18T14:14:14Z",
    "author_association": "NONE",
    "body": "Posting https://github.com/0xcert/framework/pull/663 here as an implementation example.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/587479722/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/590052899",
    "html_url": "https://github.com/ethereum/EIPs/issues/2483#issuecomment-590052899",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
    "id": 590052899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDA1Mjg5OQ==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-23T10:16:17Z",
    "updated_at": "2020-02-23T10:16:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "So the only use case for having schema integrity on-chain is that the schema can change ?\r\nI am not sure I understand the appeal of the integrity check then.\r\n\r\nFor those that care of the schema not being able to change, the extra function is pointless\r\nMaybe the schema integrity thing should be another standard ?\r\n\r\nWhat I meant by \r\n> That feel unnecessary if the schema is linked to the metadata itself since you can simply link to the new schema in the new metadata without affecting existing metadata.\r\n\r\nWas that having the schema in the metadata itself, still allow you to use different schema for later token, since the schema is per metadata.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/590052899/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/590121251",
    "html_url": "https://github.com/ethereum/EIPs/issues/2483#issuecomment-590121251",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
    "id": 590121251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDEyMTI1MQ==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-23T21:59:31Z",
    "updated_at": "2020-02-23T21:59:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "The latest update includes an in-depth design review, including pictures and a explanation of which designs require which on-chain data changes for which metadata changes.\r\n\r\nAlso a specification is added for $schemaIntegrity inside JSON files.\r\n\r\nhttps://github.com/ethereum/EIPs/pull/2529",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/590121251/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/641514272",
    "html_url": "https://github.com/ethereum/EIPs/issues/2483#issuecomment-641514272",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
    "id": 641514272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTUxNDI3Mg==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-09T19:09:35Z",
    "updated_at": "2020-06-09T19:09:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am considering this above comment as spam. It is unrelated to this EIP, and it is proposes an incompatible alternative to NFT (i.e. not strictly compatible).\r\n\r\nI am saying nothing here about whether that proposal is good or bad.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/641514272/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/917910477",
    "html_url": "https://github.com/ethereum/EIPs/issues/2483#issuecomment-917910477",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
    "id": 917910477,
    "node_id": "IC_kwDOAq426M42tjPN",
    "user": {
      "login": "xpepermint",
      "id": 174279,
      "node_id": "MDQ6VXNlcjE3NDI3OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/174279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xpepermint",
      "html_url": "https://github.com/xpepermint",
      "followers_url": "https://api.github.com/users/xpepermint/followers",
      "following_url": "https://api.github.com/users/xpepermint/following{/other_user}",
      "gists_url": "https://api.github.com/users/xpepermint/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xpepermint/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xpepermint/subscriptions",
      "organizations_url": "https://api.github.com/users/xpepermint/orgs",
      "repos_url": "https://api.github.com/users/xpepermint/repos",
      "events_url": "https://api.github.com/users/xpepermint/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xpepermint/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-13T07:17:51Z",
    "updated_at": "2021-09-13T07:17:51Z",
    "author_association": "NONE",
    "body": "Let's move forward with this. We've been using it for more than a year, the implementation is good and the benefit is there. @fulldecent ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/917910477/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/920055468",
    "html_url": "https://github.com/ethereum/EIPs/issues/2483#issuecomment-920055468",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
    "id": 920055468,
    "node_id": "IC_kwDOAq426M421u6s",
    "user": {
      "login": "MoMannn",
      "id": 8865298,
      "node_id": "MDQ6VXNlcjg4NjUyOTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8865298?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MoMannn",
      "html_url": "https://github.com/MoMannn",
      "followers_url": "https://api.github.com/users/MoMannn/followers",
      "following_url": "https://api.github.com/users/MoMannn/following{/other_user}",
      "gists_url": "https://api.github.com/users/MoMannn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MoMannn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MoMannn/subscriptions",
      "organizations_url": "https://api.github.com/users/MoMannn/orgs",
      "repos_url": "https://api.github.com/users/MoMannn/repos",
      "events_url": "https://api.github.com/users/MoMannn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MoMannn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-15T14:11:33Z",
    "updated_at": "2021-09-15T14:11:51Z",
    "author_association": "NONE",
    "body": "Any reason why this isn't moving forward? I believe it is ready to move to review status.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/920055468/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/921450916",
    "html_url": "https://github.com/ethereum/EIPs/issues/2483#issuecomment-921450916",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
    "id": 921450916,
    "node_id": "IC_kwDOAq426M427Dmk",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-17T04:21:36Z",
    "updated_at": "2021-09-17T04:21:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@xpepermint @MoMannn Thank you. I addressed all remaining points in the draft and sent the PR which should be automatically merged.\r\n\r\n@coinfork do you have any implementation to share for this standard and are you good to publish?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/921450916/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/921536077",
    "html_url": "https://github.com/ethereum/EIPs/issues/2483#issuecomment-921536077",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
    "id": 921536077,
    "node_id": "IC_kwDOAq426M427YZN",
    "user": {
      "login": "xpepermint",
      "id": 174279,
      "node_id": "MDQ6VXNlcjE3NDI3OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/174279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xpepermint",
      "html_url": "https://github.com/xpepermint",
      "followers_url": "https://api.github.com/users/xpepermint/followers",
      "following_url": "https://api.github.com/users/xpepermint/following{/other_user}",
      "gists_url": "https://api.github.com/users/xpepermint/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xpepermint/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xpepermint/subscriptions",
      "organizations_url": "https://api.github.com/users/xpepermint/orgs",
      "repos_url": "https://api.github.com/users/xpepermint/repos",
      "events_url": "https://api.github.com/users/xpepermint/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xpepermint/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-17T06:32:28Z",
    "updated_at": "2021-09-17T06:32:28Z",
    "author_association": "NONE",
    "body": "@fulldecent awesome, thank you!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/921536077/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/921766091",
    "html_url": "https://github.com/ethereum/EIPs/issues/2483#issuecomment-921766091",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
    "id": 921766091,
    "node_id": "IC_kwDOAq426M428QjL",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-17T12:41:40Z",
    "updated_at": "2021-09-17T12:41:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "We can include more implementations here and at least one consumer",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/921766091/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1069230487",
    "html_url": "https://github.com/ethereum/EIPs/issues/2483#issuecomment-1069230487",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
    "id": 1069230487,
    "node_id": "IC_kwDOAq426M4_uymX",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-03-16T15:07:33Z",
    "updated_at": "2022-03-16T15:07:33Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1069230487/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1083334488",
    "html_url": "https://github.com/ethereum/EIPs/issues/2483#issuecomment-1083334488",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
    "id": 1083334488,
    "node_id": "IC_kwDOAq426M5Akl9Y",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-03-30T16:07:45Z",
    "updated_at": "2022-03-30T16:07:45Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1083334488/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
