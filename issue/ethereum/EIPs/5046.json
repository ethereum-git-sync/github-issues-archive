{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/5046",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/5046/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/5046/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/5046/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/5046",
  "id": 1218049223,
  "node_id": "I_kwDOAq426M5ImfTH",
  "number": 5046,
  "title": "EIP-5555 Flashloan-supported Non-Fungible Token Vault Standard",
  "user": {
    "login": "zoey-t",
    "id": 101599447,
    "node_id": "U_kgDOBg5I1w",
    "avatar_url": "https://avatars.githubusercontent.com/u/101599447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zoey-t",
    "html_url": "https://github.com/zoey-t",
    "followers_url": "https://api.github.com/users/zoey-t/followers",
    "following_url": "https://api.github.com/users/zoey-t/following{/other_user}",
    "gists_url": "https://api.github.com/users/zoey-t/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zoey-t/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zoey-t/subscriptions",
    "organizations_url": "https://api.github.com/users/zoey-t/orgs",
    "repos_url": "https://api.github.com/users/zoey-t/repos",
    "events_url": "https://api.github.com/users/zoey-t/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zoey-t/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-04-28T01:06:42Z",
  "updated_at": "2022-07-18T18:07:58Z",
  "closed_at": "2022-05-06T07:05:52Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# EIP-5555 Flashloan-supported Non-Fungible Token Vault Standard\r\n\r\n## Abstract\r\n\r\nA flashloan-supported NFT vault standard is proposed.\r\n\r\nThe following standard allows for the implementation of a set of standard APIs for flashloan functionalities for multiple underlying ERC-721 tokens. This standard is an extension to [ERC-4626](https://eips.ethereum.org/EIPS/eip-4626) Tokenized Vault Standard that provides basic functionalities of depositing, withdrawing, and reading balances.\r\n\r\n## Motivation\r\n\r\nNFT marketplaces lack liquidity due to the uniqueness and scarcity of NFT, leading to the complete market. Some NFT platforms, including NFT auction markets, and NFT collateral-lending platforms, lock a large percentage of NFTs, which further worsens the situation. This prevents the formation of a user-friendly NFT ecosystem.\r\n\r\nA standard of NFT vault that supports flashloan will lower the barrier of NFT acquisition and the integration effort for NFT vaults while creating more consistent and robust implementation patterns. With the flashloan-supported NFT vault standard, potential users can benefit from owning an NFT without paying its full price. This will furtherly create usage scenarios and potentials for NFT. \r\n\r\n## Specification\r\n\r\nAll ERC-5555 flashloan-supported NFT vaults MUST implement ERC-721 to represent share and MUST implement ERC-4626 to represent vault. The ERC-721 operations `balanceOf()`, `transfer()` , `totalSupply()`, etc. operate on the vault “shares” which represent the receipts to the ownership of the vault’s underlying NFTs. The ERC-4626 operations `totalAssets()` , `deposit()` , `withdraw()`, etc. operate on the vault which represents the exchange between underlying NFTs and receipts.\r\n\r\n### **Definitions**\r\n\r\n### Methods\r\n\r\n- Methods for Vault\r\n  \r\n    ```solidity\r\n    interface INFTFlashloanVault {\r\n        // on top of ERC4626, the following functions should be added and implemented as well\r\n        /**\r\n         * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\r\n         * by `operator` from `from`, this function is called.\r\n         *\r\n         * It must return its Solidity selector to confirm the token transfer.\r\n         * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\r\n         *\r\n         * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\r\n         */\r\n        function onERC721Received(\r\n            address operator,\r\n            address from,\r\n            uint256 nftID,\r\n            bytes calldata data\r\n        ) external pure override returns (bytes4);\r\n    \r\n        /**\r\n         * @notice Executes a flashloan for erc721\r\n         * @param receiverAddress The addresses that receive the erc721 tokens\r\n         * @param nftAddresses The addresses of the flash-borrowed nft\r\n         * @param nftIDs The nft ids of the correponding nft addresses\r\n         * @param params The byte-encoded params passed when initiating the flashloan\r\n         */\r\n        function flashloanERC721(\r\n            address receiverAddress,\r\n            address[] calldata nftAddresses,\r\n            uint256[] calldata nftIDs,\r\n            bytes calldata params\r\n        ) external override;\r\n    }\r\n    ```\r\n    \r\n- Methods for Flashloan receiver\r\n  \r\n    The flashloan receiver MUST implement the following `IFlashLoanReceiver` interface.\r\n    \r\n    ```solidity\r\n    interface IFlashLoanReceiver {\r\n       /**\r\n       * @notice Executes an operation after receiving the flash-borrowed nft\r\n       * @dev Ensure that the contract can return the borrowed + premium\r\n       * @param nftAddresses The addresses of the flash-borrowed nft\r\n    \t * @param nftIDs The nft ids of the correponding nft addresses\r\n       * @param premiums The fee of each flash-borrowed nft\r\n       * @param initiator The address of the flashloan initiator\r\n       * @param params The byte-encoded params passed when initiating the flashloan\r\n       * @return True if the execution of the operation succeeds, false otherwise\r\n       */\r\n        function executeOperation(\r\n    \t\t\taddress[] calldata nftAddresses, \r\n    \t\t\tuint256[] calldata premiums,  \r\n    \t\t\taddress initiator, \r\n    \t\t\tbytes calldata params\r\n    \t\t) external returns (bool);\r\n    }\r\n    ```\r\n    \r\n\r\n### Event\r\n\r\n```jsx\r\n/**\r\n * @dev Emitted on borrow() when debt needs to be opened\r\n * @param reserve The address of the underlying asset being borrowed\r\n * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\r\n * initiator of the transaction on flashLoan()\r\n * @param onBehalfOf The address that will be getting the debt\r\n * @param nftID the ERC-721 token id\r\n * @param borrowRateMode The rate mode: 1 for Stable, 2 for Variable\r\n * @param borrowRate The numeric rate at which the user has borrowed\r\n * @param referral The referral code used\r\n **/\r\nevent Borrow(\r\n  address indexed reserve,\r\n  address user,\r\n  address indexed onBehalfOf,\r\n  uint256 nftID,\r\n  uint256 borrowRateMode,\r\n  uint256 borrowRate,\r\n  uint16 indexed referral\r\n);\r\n\r\n/**\r\n * @dev Emitted on repay()\r\n * @param reserve The address of the underlying asset of the reserve\r\n * @param user The beneficiary of the repayment, getting his debt reduced\r\n * @param repayer The address of the user initiating the repay(), providing the funds\r\n * @param nftID the ERC-721 token id\r\n **/\r\nevent Repay(\r\n  address indexed reserve,\r\n  address indexed user,\r\n  address indexed repayer,\r\n  uint256 nftID\r\n);\r\n\r\n/**\r\n * @dev Emitted on flashLoan()\r\n * @param target The address of the flash loan receiver contract\r\n * @param initiator The address initiating the flash loan\r\n * @param asset The address of the asset being flash borrowed\r\n * @param nftID the ERC-721 token id flash borrowed\r\n * @param premium The fee flash borrowed\r\n * @param referralCode The referral code used\r\n **/\r\nevent FlashLoan(\r\n  address indexed target,\r\n  address indexed initiator,\r\n  address indexed asset,\r\n  uint256 nftID,\r\n  uint256 premium,\r\n  uint16 referralCode\r\n);\r\n```\r\n\r\n## Rationale\r\n\r\nThe `NFTFlashloanVault` interface is designed to be optimized for integrators with a feature-complete yet minimal interface. Details such as accounting and allocation of deposited NFTs are intentionally not specified, as Vaults are expected to be treated as black boxes on-chain and inspected off-chain before use.\r\n\r\nThe `onERC721Received()` is included for backward compatibility to ERC-721 standard. ERC-721 standard requires all ERC-721 transfer receivers to implement this interface to receive ERC-721 token.\r\n\r\nThe `flashloanERC721()` function serves as the main function of the flashloan-supported vault that allows users to borrow multiple NFTs in a single transaction.\r\n\r\n## Backward Compatibility\r\n\r\nTBD\r\n\r\n## Test Cases\r\n\r\nTBD\r\n\r\n## Security Considerations\r\n\r\nTBD\r\n\r\n## Copyright\r\n\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).",
  "closed_by": {
    "login": "MicahZoltu",
    "id": 886059,
    "node_id": "MDQ6VXNlcjg4NjA1OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MicahZoltu",
    "html_url": "https://github.com/MicahZoltu",
    "followers_url": "https://api.github.com/users/MicahZoltu/followers",
    "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
    "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
    "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
    "repos_url": "https://api.github.com/users/MicahZoltu/repos",
    "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/5046/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/5046/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1111627748",
    "html_url": "https://github.com/ethereum/EIPs/issues/5046#issuecomment-1111627748",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/5046",
    "id": 1111627748,
    "node_id": "IC_kwDOAq426M5CQhfk",
    "user": {
      "login": "zoey-t",
      "id": 101599447,
      "node_id": "U_kgDOBg5I1w",
      "avatar_url": "https://avatars.githubusercontent.com/u/101599447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zoey-t",
      "html_url": "https://github.com/zoey-t",
      "followers_url": "https://api.github.com/users/zoey-t/followers",
      "following_url": "https://api.github.com/users/zoey-t/following{/other_user}",
      "gists_url": "https://api.github.com/users/zoey-t/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zoey-t/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zoey-t/subscriptions",
      "organizations_url": "https://api.github.com/users/zoey-t/orgs",
      "repos_url": "https://api.github.com/users/zoey-t/repos",
      "events_url": "https://api.github.com/users/zoey-t/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zoey-t/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-28T01:07:27Z",
    "updated_at": "2022-04-28T01:07:27Z",
    "author_association": "NONE",
    "body": "@ruixi-verilog",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1111627748/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1119319889",
    "html_url": "https://github.com/ethereum/EIPs/issues/5046#issuecomment-1119319889",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/5046",
    "id": 1119319889,
    "node_id": "IC_kwDOAq426M5Ct3dR",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-06T07:05:52Z",
    "updated_at": "2022-05-06T07:05:52Z",
    "author_association": "MEMBER",
    "body": "This should either be a PR against this repository if you are ready to create an EIP, or it should be a thread in the Ethereum Magicinas forum.  See the bot comment above for details.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1119319889/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
