{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/636",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/636/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/636/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/636/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/636",
  "id": 230148194,
  "node_id": "MDU6SXNzdWUyMzAxNDgxOTQ=",
  "number": 636,
  "title": "Asynchronous signing",
  "user": {
    "login": "gavofyork",
    "id": 138296,
    "node_id": "MDQ6VXNlcjEzODI5Ng==",
    "avatar_url": "https://avatars.githubusercontent.com/u/138296?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gavofyork",
    "html_url": "https://github.com/gavofyork",
    "followers_url": "https://api.github.com/users/gavofyork/followers",
    "following_url": "https://api.github.com/users/gavofyork/following{/other_user}",
    "gists_url": "https://api.github.com/users/gavofyork/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gavofyork/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gavofyork/subscriptions",
    "organizations_url": "https://api.github.com/users/gavofyork/orgs",
    "repos_url": "https://api.github.com/users/gavofyork/repos",
    "events_url": "https://api.github.com/users/gavofyork/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gavofyork/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2017-05-20T11:36:28Z",
  "updated_at": "2022-01-16T05:12:11Z",
  "closed_at": "2022-01-16T05:12:11Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Currently we have one standard API for sending a transaction: `eth_sendTransaction`. This accepts a transaction specification, constructs and signs a \"raw\" transaction (approving as necessary) and submits it to the network. It returns the hash of the submitted transaction.\r\n\r\nThis API is suboptimal: firstly, it combines a number of different activities. Signing is an operation fundamentally concerning the key-store; network submission merely concerns only the p2p networking subsystem. Secondly, an most importantly, it results in a potentially long RPC since user-approval could be a non-trivial task. Any APIs or logic that assume an RPC will complete in a reasonable period of time will break.\r\n\r\n## Proposal\r\n\r\nIntroduce three new APIs and deprecate `eth_sign`, `eth_signTransaction`, `eth_sendTransaction`.\r\n\r\n- `eth_postSignTransaction(tx: TransactionSpec) => id: Number`: Requests the construction and signing of `tx`. Returns the unique job identifier. \r\n- `eth_postSignMessage(message: String, from: Address) => id: Number`: Requests the prefixing and signing of `message` from identity `from`. Returns the unique job identifier. \r\n- `eth_getResult(id: Number) => result | error`: Returns the result of the previously requested job of identity `id` or an error if the job is not yet completed or resulted in an error.\r\n\r\n`eth_getResult` would also be a subscribable endpoint within a pub/sub API, yet to be standardised.\r\n\r\n## Rationale\r\n\r\nJobs no longer hold up the RPC. Polling is a suboptimal solution, but no different than is currently supported in the `eth_` RPC collection. This would transition well to a pub/sub mechanism (with the ability to subscribe to the result of a given job) when pub/sub becomes widespread and standardised.",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/636/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/636/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/302891638",
    "html_url": "https://github.com/ethereum/EIPs/issues/636#issuecomment-302891638",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/636",
    "id": 302891638,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjg5MTYzOA==",
    "user": {
      "login": "danfinlay",
      "id": 542863,
      "node_id": "MDQ6VXNlcjU0Mjg2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/542863?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danfinlay",
      "html_url": "https://github.com/danfinlay",
      "followers_url": "https://api.github.com/users/danfinlay/followers",
      "following_url": "https://api.github.com/users/danfinlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/danfinlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danfinlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danfinlay/subscriptions",
      "organizations_url": "https://api.github.com/users/danfinlay/orgs",
      "repos_url": "https://api.github.com/users/danfinlay/repos",
      "events_url": "https://api.github.com/users/danfinlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danfinlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-20T18:50:35Z",
    "updated_at": "2017-05-20T18:50:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "This looks like a good idea, I agree the current `sendTransaction` API is rough.\r\n\r\nWhat if instead of returning an `error`for all non-signed states, the response could include some tx/message status in the result object, like this:\r\n\r\n```javascript\r\neth_getResult(idNumber, (err, result) => {\r\n\r\nresult === {\r\n  status: 'pending approval' || 'transmitting to network',\r\n  hash: '0x..',\r\n  rawTx: '0x..', // why not return the raw tx while we're at it?\r\n}\r\n// true\r\n\r\n})\r\n```\r\n\r\nTo really flesh out the API, we should define the exact status codes/messages that would be returned by different phases, for cross-client compatibility. Here I'm borrowing transaction states tracked by MetaMask, they're probably similar across clients:\r\n\r\n- Signing Transaction\r\n  - Pending User Approval\r\n  - Approved, sending to network (with tx hash)\r\n  - Sent to network, waiting for miners\r\n  - Confirmed by miners\r\n  - Failed (generic failure)\r\n  - Rejected (user rejection)\r\n\r\nHaving written these out, I notice it might also be convenient for developers if this same `eth_getResult` API would return the mined transaction once it is mined with an updated status.\r\n\r\nThis way a single transaction-polling loop could provide a developer all the transaction state data that is relevant to them.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/302891638/reactions",
      "total_count": 4,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303073338",
    "html_url": "https://github.com/ethereum/EIPs/issues/636#issuecomment-303073338",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/636",
    "id": 303073338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzA3MzMzOA==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-22T11:26:22Z",
    "updated_at": "2017-05-22T11:26:22Z",
    "author_association": "MEMBER",
    "body": "Do the wire protocols already support multiple outstanding RPCs? If they do, I'd argue that it makes more sense to support long running requests at the wire level, rather than to layer a polling-based API on top of it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303073338/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303078866",
    "html_url": "https://github.com/ethereum/EIPs/issues/636#issuecomment-303078866",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/636",
    "id": 303078866,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzA3ODg2Ng==",
    "user": {
      "login": "tomusdrw",
      "id": 581548,
      "node_id": "MDQ6VXNlcjU4MTU0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/581548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tomusdrw",
      "html_url": "https://github.com/tomusdrw",
      "followers_url": "https://api.github.com/users/tomusdrw/followers",
      "following_url": "https://api.github.com/users/tomusdrw/following{/other_user}",
      "gists_url": "https://api.github.com/users/tomusdrw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tomusdrw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tomusdrw/subscriptions",
      "organizations_url": "https://api.github.com/users/tomusdrw/orgs",
      "repos_url": "https://api.github.com/users/tomusdrw/repos",
      "events_url": "https://api.github.com/users/tomusdrw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tomusdrw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-22T11:54:03Z",
    "updated_at": "2017-05-22T11:54:03Z",
    "author_association": "NONE",
    "body": "@Arachnid There is many issues you can run into with long running requests (most notably browser timeouts).\r\n@flyswatter Returning hash/rawtx for unconfirmed transactions might not be possible if the signer interface allows users to tune gas or gas price before signing. Second issue might be the nonce - if the requests can be signed in arbitrary order the nonce needs to be determined when the transaction is signed not when it's submitted.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303078866/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303080950",
    "html_url": "https://github.com/ethereum/EIPs/issues/636#issuecomment-303080950",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/636",
    "id": 303080950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzA4MDk1MA==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-22T12:04:35Z",
    "updated_at": "2017-05-22T12:04:49Z",
    "author_association": "MEMBER",
    "body": "> @Arachnid There is many issues you can run into with long running requests (most notably browser timeouts).\r\n\r\nWell, there's a websockets interface, too. And JS clients can set the desired timeout.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303080950/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303082142",
    "html_url": "https://github.com/ethereum/EIPs/issues/636#issuecomment-303082142",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/636",
    "id": 303082142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzA4MjE0Mg==",
    "user": {
      "login": "tomusdrw",
      "id": 581548,
      "node_id": "MDQ6VXNlcjU4MTU0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/581548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tomusdrw",
      "html_url": "https://github.com/tomusdrw",
      "followers_url": "https://api.github.com/users/tomusdrw/followers",
      "following_url": "https://api.github.com/users/tomusdrw/following{/other_user}",
      "gists_url": "https://api.github.com/users/tomusdrw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tomusdrw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tomusdrw/subscriptions",
      "organizations_url": "https://api.github.com/users/tomusdrw/orgs",
      "repos_url": "https://api.github.com/users/tomusdrw/repos",
      "events_url": "https://api.github.com/users/tomusdrw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tomusdrw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-22T12:10:23Z",
    "updated_at": "2017-05-22T12:10:23Z",
    "author_association": "NONE",
    "body": "With WebSockets interface it won't survive reconnect or page reload.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303082142/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303262068",
    "html_url": "https://github.com/ethereum/EIPs/issues/636#issuecomment-303262068",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/636",
    "id": 303262068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzI2MjA2OA==",
    "user": {
      "login": "danfinlay",
      "id": 542863,
      "node_id": "MDQ6VXNlcjU0Mjg2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/542863?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danfinlay",
      "html_url": "https://github.com/danfinlay",
      "followers_url": "https://api.github.com/users/danfinlay/followers",
      "following_url": "https://api.github.com/users/danfinlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/danfinlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danfinlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danfinlay/subscriptions",
      "organizations_url": "https://api.github.com/users/danfinlay/orgs",
      "repos_url": "https://api.github.com/users/danfinlay/repos",
      "events_url": "https://api.github.com/users/danfinlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danfinlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-23T01:12:09Z",
    "updated_at": "2017-05-23T01:12:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Returning hash/rawtx for unconfirmed transactions might not be possible if the signer interface allows users to tune gas or gas price before signing. Second issue might be the nonce - if the requests can be signed in arbitrary order the nonce needs to be determined when the transaction is signed not when it's submitted.\r\n\r\nSure, so these could be optional parameters. Just a thought, it brings this polling spec a little closer to the eventual ideal behavior of a subscription to evolving transaction state.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303262068/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303369875",
    "html_url": "https://github.com/ethereum/EIPs/issues/636#issuecomment-303369875",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/636",
    "id": 303369875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzM2OTg3NQ==",
    "user": {
      "login": "gavofyork",
      "id": 138296,
      "node_id": "MDQ6VXNlcjEzODI5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/138296?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavofyork",
      "html_url": "https://github.com/gavofyork",
      "followers_url": "https://api.github.com/users/gavofyork/followers",
      "following_url": "https://api.github.com/users/gavofyork/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavofyork/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavofyork/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavofyork/subscriptions",
      "organizations_url": "https://api.github.com/users/gavofyork/orgs",
      "repos_url": "https://api.github.com/users/gavofyork/repos",
      "events_url": "https://api.github.com/users/gavofyork/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavofyork/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-23T11:29:38Z",
    "updated_at": "2017-05-23T11:31:12Z",
    "author_association": "MEMBER",
    "body": "i think there's something to be said for minimising the complexity of the RPC so we might not want to provide extraneous (through relevant) data without a decent reason.\r\n\r\nfor optional parameters, one potential landmine is that users and clients may not grasp when they should be made available, leading to different clients providing them in different situations and implementation lock-in/annoyed users.\r\n\r\ndefinitely agree on standardising transitions; that said, if we split it out into two independent operations, then it's less of an issue in the RPC - metamask's middleware would be able to recombine as it sees fit.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303369875/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003661457",
    "html_url": "https://github.com/ethereum/EIPs/issues/636#issuecomment-1003661457",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/636",
    "id": 1003661457,
    "node_id": "IC_kwDOAq426M470qiR",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-02T04:15:04Z",
    "updated_at": "2022-01-02T04:15:04Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003661457/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1013812809",
    "html_url": "https://github.com/ethereum/EIPs/issues/636#issuecomment-1013812809",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/636",
    "id": 1013812809,
    "node_id": "IC_kwDOAq426M48bY5J",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-16T05:12:10Z",
    "updated_at": "2022-01-16T05:12:10Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1013812809/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
