{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/892",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/892/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/892/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/892/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/892",
  "id": 298815055,
  "node_id": "MDU6SXNzdWUyOTg4MTUwNTU=",
  "number": 892,
  "title": "ERC 892: Permission Standard",
  "user": {
    "login": "clesaege",
    "id": 8873352,
    "node_id": "MDQ6VXNlcjg4NzMzNTI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8873352?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/clesaege",
    "html_url": "https://github.com/clesaege",
    "followers_url": "https://api.github.com/users/clesaege/followers",
    "following_url": "https://api.github.com/users/clesaege/following{/other_user}",
    "gists_url": "https://api.github.com/users/clesaege/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/clesaege/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/clesaege/subscriptions",
    "organizations_url": "https://api.github.com/users/clesaege/orgs",
    "repos_url": "https://api.github.com/users/clesaege/repos",
    "events_url": "https://api.github.com/users/clesaege/events{/privacy}",
    "received_events_url": "https://api.github.com/users/clesaege/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 13,
  "created_at": "2018-02-21T01:53:26Z",
  "updated_at": "2022-01-01T23:11:57Z",
  "closed_at": "2022-01-01T23:11:57Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "    EIP: 892\r\n    Title: Permission Standard\r\n    Status: Draft\r\n    Type: Informational\r\n    Category: ERC\r\n    Authors: Cl√©ment Lesaege <clement@kleros.io>, Dean Eigenmann <dean@tokenate.io>\r\n    Created: 2018-02-21\r\n\r\nAbstract\r\n--------------\r\n\r\nThis standard specifies that the standard naming of a public function indicating that an element is permitted is `isPermitted`.\r\n\r\nMotivation\r\n--------------\r\n\r\nSome contracts require calling others in order to know if an element is permitted. A contract can need to know if an address has the right to interact with it or if an item belongs to the list of permitted items (ex: curated list).\r\nThis standard is straightforward but required for interoperability.\r\n\r\nSpecification\r\n--------------\r\n\r\n### isPermitted\r\n\r\nThis function returns `true` if the element is permitted, `false` otherwise.\r\nSpecific types can be used instead of`bytes32` as long as they are not longer than 32 bytes.\r\n``` is\r\nfunction isPermitted(bytes32 _element) returns(bool permitted)\r\n```\r\n\r\nRationale\r\n--------------\r\n- Contracts and interfaces sometimes need to know if some particular element is permitted or not.\r\n- The standard allows the abstraction of the permission brick of a dapp. It allows parties to choose a contract with arbitrary complex rules to determine if an element is permitted or not.\r\n- Allowing types others than bytes32 provides better typing, thus better readability, without breaking interoperability.\r\n\r\nImplementations\r\n--------------\r\n- https://github.com/kleros/kleros-interaction/tree/master/contracts/standard/permission\r\n- https://github.com/ensdomains/blacklist/blob/master/contracts/Blacklist.sol\r\n",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/892/reactions",
    "total_count": 4,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 1,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/892/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/367828315",
    "html_url": "https://github.com/ethereum/EIPs/issues/892#issuecomment-367828315",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/892",
    "id": 367828315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzgyODMxNQ==",
    "user": {
      "login": "Bradymck",
      "id": 4667076,
      "node_id": "MDQ6VXNlcjQ2NjcwNzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4667076?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bradymck",
      "html_url": "https://github.com/Bradymck",
      "followers_url": "https://api.github.com/users/Bradymck/followers",
      "following_url": "https://api.github.com/users/Bradymck/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bradymck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bradymck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bradymck/subscriptions",
      "organizations_url": "https://api.github.com/users/Bradymck/orgs",
      "repos_url": "https://api.github.com/users/Bradymck/repos",
      "events_url": "https://api.github.com/users/Bradymck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bradymck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-22T21:29:41Z",
    "updated_at": "2018-02-22T21:29:41Z",
    "author_association": "NONE",
    "body": "If this is a bit out of context please excuse I'm still learning but out of curiosity, is this referencing a way to block certain contract functions based on external data from an oracle or user facing UI components or something?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/367828315/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/367830782",
    "html_url": "https://github.com/ethereum/EIPs/issues/892#issuecomment-367830782",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/892",
    "id": 367830782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzgzMDc4Mg==",
    "user": {
      "login": "decanus",
      "id": 7621705,
      "node_id": "MDQ6VXNlcjc2MjE3MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7621705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/decanus",
      "html_url": "https://github.com/decanus",
      "followers_url": "https://api.github.com/users/decanus/followers",
      "following_url": "https://api.github.com/users/decanus/following{/other_user}",
      "gists_url": "https://api.github.com/users/decanus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/decanus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/decanus/subscriptions",
      "organizations_url": "https://api.github.com/users/decanus/orgs",
      "repos_url": "https://api.github.com/users/decanus/repos",
      "events_url": "https://api.github.com/users/decanus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/decanus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-22T21:38:13Z",
    "updated_at": "2018-02-22T21:38:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Bradymck This standard could be used to block certain functions yes, in ens it is currently implemented to tell us which ENS names we are permitted to resolve and which we aren't.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/367830782/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/367837178",
    "html_url": "https://github.com/ethereum/EIPs/issues/892#issuecomment-367837178",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/892",
    "id": 367837178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzgzNzE3OA==",
    "user": {
      "login": "Bradymck",
      "id": 4667076,
      "node_id": "MDQ6VXNlcjQ2NjcwNzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4667076?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bradymck",
      "html_url": "https://github.com/Bradymck",
      "followers_url": "https://api.github.com/users/Bradymck/followers",
      "following_url": "https://api.github.com/users/Bradymck/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bradymck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bradymck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bradymck/subscriptions",
      "organizations_url": "https://api.github.com/users/Bradymck/orgs",
      "repos_url": "https://api.github.com/users/Bradymck/repos",
      "events_url": "https://api.github.com/users/Bradymck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bradymck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-22T22:01:04Z",
    "updated_at": "2018-02-22T22:01:04Z",
    "author_association": "NONE",
    "body": "@decanus Ah, interesting. Seems like the path to programmatic compliance and self regulating systems. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/367837178/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/374546448",
    "html_url": "https://github.com/ethereum/EIPs/issues/892#issuecomment-374546448",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/892",
    "id": 374546448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDU0NjQ0OA==",
    "user": {
      "login": "adamdossa",
      "id": 2633913,
      "node_id": "MDQ6VXNlcjI2MzM5MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2633913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamdossa",
      "html_url": "https://github.com/adamdossa",
      "followers_url": "https://api.github.com/users/adamdossa/followers",
      "following_url": "https://api.github.com/users/adamdossa/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamdossa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamdossa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamdossa/subscriptions",
      "organizations_url": "https://api.github.com/users/adamdossa/orgs",
      "repos_url": "https://api.github.com/users/adamdossa/repos",
      "events_url": "https://api.github.com/users/adamdossa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamdossa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-20T10:23:53Z",
    "updated_at": "2018-03-20T10:23:53Z",
    "author_association": "NONE",
    "body": "Isn't the restriction to a single bytes32 value in `isPermitted` quite restrictive? It is possible to think of use-cases when e.g. a couple of addresses are needed to check whether an operation is permissable or not (e.g. when checking whether a token transfer is allowed, we may want a function of `address _from, address _to, uint256 _amount`)?\r\n\r\nAn alternative approach would be to have `isPermitted` take `bytes` instead perhaps.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/374546448/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/375026005",
    "html_url": "https://github.com/ethereum/EIPs/issues/892#issuecomment-375026005",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/892",
    "id": 375026005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTAyNjAwNQ==",
    "user": {
      "login": "clesaege",
      "id": 8873352,
      "node_id": "MDQ6VXNlcjg4NzMzNTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8873352?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/clesaege",
      "html_url": "https://github.com/clesaege",
      "followers_url": "https://api.github.com/users/clesaege/followers",
      "following_url": "https://api.github.com/users/clesaege/following{/other_user}",
      "gists_url": "https://api.github.com/users/clesaege/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/clesaege/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/clesaege/subscriptions",
      "organizations_url": "https://api.github.com/users/clesaege/orgs",
      "repos_url": "https://api.github.com/users/clesaege/repos",
      "events_url": "https://api.github.com/users/clesaege/events{/privacy}",
      "received_events_url": "https://api.github.com/users/clesaege/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-21T17:21:47Z",
    "updated_at": "2018-03-21T17:21:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "It is restrictive, but using ‚Äôbytes‚Äô would significantly increase gas cost.\r\nIf something takes more, you can just use its hash instead, that's the case for ENS for example.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/375026005/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/375031031",
    "html_url": "https://github.com/ethereum/EIPs/issues/892#issuecomment-375031031",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/892",
    "id": 375031031,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTAzMTAzMQ==",
    "user": {
      "login": "adamdossa",
      "id": 2633913,
      "node_id": "MDQ6VXNlcjI2MzM5MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2633913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamdossa",
      "html_url": "https://github.com/adamdossa",
      "followers_url": "https://api.github.com/users/adamdossa/followers",
      "following_url": "https://api.github.com/users/adamdossa/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamdossa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamdossa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamdossa/subscriptions",
      "organizations_url": "https://api.github.com/users/adamdossa/orgs",
      "repos_url": "https://api.github.com/users/adamdossa/repos",
      "events_url": "https://api.github.com/users/adamdossa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamdossa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-21T17:35:15Z",
    "updated_at": "2018-03-21T17:35:15Z",
    "author_association": "NONE",
    "body": "Using the hash would not work if the permission function needs to inspect the raw inputs to make a decision (as in the use-case above). Using bytes would carry an additional gas cost, but this is relatively small relative to any usual on-chain use-case involving storage etc.\r\n\r\nI just don't think this will work for a bunch of different use-cases unless there is more flexibility than insisting that all permission decisions can rely on at most a bytes32 payload.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/375031031/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/375247420",
    "html_url": "https://github.com/ethereum/EIPs/issues/892#issuecomment-375247420",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/892",
    "id": 375247420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTI0NzQyMA==",
    "user": {
      "login": "clesaege",
      "id": 8873352,
      "node_id": "MDQ6VXNlcjg4NzMzNTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8873352?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/clesaege",
      "html_url": "https://github.com/clesaege",
      "followers_url": "https://api.github.com/users/clesaege/followers",
      "following_url": "https://api.github.com/users/clesaege/following{/other_user}",
      "gists_url": "https://api.github.com/users/clesaege/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/clesaege/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/clesaege/subscriptions",
      "organizations_url": "https://api.github.com/users/clesaege/orgs",
      "repos_url": "https://api.github.com/users/clesaege/repos",
      "events_url": "https://api.github.com/users/clesaege/events{/privacy}",
      "received_events_url": "https://api.github.com/users/clesaege/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-22T10:21:15Z",
    "updated_at": "2018-03-22T10:21:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@adamdossa \r\nThat's a good point, but decoding bytes is not that simple. The standard is about an element, so basically a list of what is allowed or what is not. For this use case, no need of bytes.\r\n@decanus What do you think?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/375247420/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/375256824",
    "html_url": "https://github.com/ethereum/EIPs/issues/892#issuecomment-375256824",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/892",
    "id": 375256824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTI1NjgyNA==",
    "user": {
      "login": "adamdossa",
      "id": 2633913,
      "node_id": "MDQ6VXNlcjI2MzM5MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2633913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamdossa",
      "html_url": "https://github.com/adamdossa",
      "followers_url": "https://api.github.com/users/adamdossa/followers",
      "following_url": "https://api.github.com/users/adamdossa/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamdossa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamdossa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamdossa/subscriptions",
      "organizations_url": "https://api.github.com/users/adamdossa/orgs",
      "repos_url": "https://api.github.com/users/adamdossa/repos",
      "events_url": "https://api.github.com/users/adamdossa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamdossa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-22T10:34:19Z",
    "updated_at": "2018-03-22T10:34:19Z",
    "author_association": "NONE",
    "body": "I think perhaps this is the bit which I am not getting - what exactly is the definition of an element? The use-case I had in mind was:\r\nContract A wants to know whether a particular operation `op` on Contract B is valid. Instead of calling `op` and hoping it doesn't throw, it can call `isPermissioned` with relevant args first, which returns a `bool` to determine whether the subsequent call to `op` will work or not.\r\n\r\nFor this use-case, obviously a fairly flexible `isPermissioned` is needed (whose logic would depend on the details of `op`). If you have a simpler use-case could you give a bit more detail on it?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/375256824/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/375260184",
    "html_url": "https://github.com/ethereum/EIPs/issues/892#issuecomment-375260184",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/892",
    "id": 375260184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTI2MDE4NA==",
    "user": {
      "login": "adamdossa",
      "id": 2633913,
      "node_id": "MDQ6VXNlcjI2MzM5MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2633913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamdossa",
      "html_url": "https://github.com/adamdossa",
      "followers_url": "https://api.github.com/users/adamdossa/followers",
      "following_url": "https://api.github.com/users/adamdossa/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamdossa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamdossa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamdossa/subscriptions",
      "organizations_url": "https://api.github.com/users/adamdossa/orgs",
      "repos_url": "https://api.github.com/users/adamdossa/repos",
      "events_url": "https://api.github.com/users/adamdossa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamdossa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-22T10:46:50Z",
    "updated_at": "2018-03-22T10:46:50Z",
    "author_association": "NONE",
    "body": "A general approach would be to have `bytes` represent the call which we wish to check is valid or not, and then `isPermissioned` can deconstruct it in a fairly standard way (e.g. first 4 bytes are function sig, remainder are args). I agree this is potentially complex though, and possibly not worth generalising.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/375260184/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/375423242",
    "html_url": "https://github.com/ethereum/EIPs/issues/892#issuecomment-375423242",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/892",
    "id": 375423242,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTQyMzI0Mg==",
    "user": {
      "login": "decanus",
      "id": 7621705,
      "node_id": "MDQ6VXNlcjc2MjE3MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7621705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/decanus",
      "html_url": "https://github.com/decanus",
      "followers_url": "https://api.github.com/users/decanus/followers",
      "following_url": "https://api.github.com/users/decanus/following{/other_user}",
      "gists_url": "https://api.github.com/users/decanus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/decanus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/decanus/subscriptions",
      "organizations_url": "https://api.github.com/users/decanus/orgs",
      "repos_url": "https://api.github.com/users/decanus/repos",
      "events_url": "https://api.github.com/users/decanus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/decanus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-22T19:06:24Z",
    "updated_at": "2018-03-22T19:06:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@clesaege I feel in this situation I would need to agree with @adamdossa. We are not dynamic enough with ```bytes32```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/375423242/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/376844816",
    "html_url": "https://github.com/ethereum/EIPs/issues/892#issuecomment-376844816",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/892",
    "id": 376844816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Njg0NDgxNg==",
    "user": {
      "login": "clesaege",
      "id": 8873352,
      "node_id": "MDQ6VXNlcjg4NzMzNTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8873352?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/clesaege",
      "html_url": "https://github.com/clesaege",
      "followers_url": "https://api.github.com/users/clesaege/followers",
      "following_url": "https://api.github.com/users/clesaege/following{/other_user}",
      "gists_url": "https://api.github.com/users/clesaege/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/clesaege/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/clesaege/subscriptions",
      "organizations_url": "https://api.github.com/users/clesaege/orgs",
      "repos_url": "https://api.github.com/users/clesaege/repos",
      "events_url": "https://api.github.com/users/clesaege/events{/privacy}",
      "received_events_url": "https://api.github.com/users/clesaege/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-28T10:51:37Z",
    "updated_at": "2018-04-12T19:46:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was not thinking about an operation but stuff like addresses, elements in a list. For the future bytes would be way better, but for now without decoder, it's not practical from a gas point of view.\r\nA solution would be to modify the standard such that every type can be used (bytes32, bytes, address).\r\n@decanus @adamdossa What do you think?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/376844816/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997291785",
    "html_url": "https://github.com/ethereum/EIPs/issues/892#issuecomment-997291785",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/892",
    "id": 997291785,
    "node_id": "IC_kwDOAq426M47cXcJ",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-18T22:11:29Z",
    "updated_at": "2021-12-18T22:11:29Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997291785/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003634083",
    "html_url": "https://github.com/ethereum/EIPs/issues/892#issuecomment-1003634083",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/892",
    "id": 1003634083,
    "node_id": "IC_kwDOAq426M470j2j",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-01T23:11:57Z",
    "updated_at": "2022-01-01T23:11:57Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003634083/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
