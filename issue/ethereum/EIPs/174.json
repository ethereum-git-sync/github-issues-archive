{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/174/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/174/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/174/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/174",
  "id": 188000829,
  "node_id": "MDU6SXNzdWUxODgwMDA4Mjk=",
  "number": 174,
  "title": "Extend DUP1-16 / SWAP1-16 With DUPN / SWAPN",
  "user": {
    "login": "mattdf",
    "id": 11067114,
    "node_id": "MDQ6VXNlcjExMDY3MTE0",
    "avatar_url": "https://avatars.githubusercontent.com/u/11067114?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mattdf",
    "html_url": "https://github.com/mattdf",
    "followers_url": "https://api.github.com/users/mattdf/followers",
    "following_url": "https://api.github.com/users/mattdf/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattdf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mattdf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattdf/subscriptions",
    "organizations_url": "https://api.github.com/users/mattdf/orgs",
    "repos_url": "https://api.github.com/users/mattdf/repos",
    "events_url": "https://api.github.com/users/mattdf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mattdf/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 25,
  "created_at": "2016-11-08T14:09:10Z",
  "updated_at": "2019-09-06T13:29:29Z",
  "closed_at": "2019-09-06T13:29:29Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "# Motivation\r\nThe fixed limit on stack referencing through the current DUP and SWAP operations limits the usability of the stack when writing compilers that target the EVM, as at most you can only access memory 17 levels deep. A solution that makes efficient use of the stack and allows for a higher number of local variables becomes needlessly complicated as beyond 17 levels the implementation needs to start storing things in memory instead.\r\n\r\n# Specification\r\nIntroduce two new opcodes, `DUPN` and `SWAPN` that take one integral argument, `N`, where `DUPN` duplicates the N'th stack item to the top of the stack, and `SWAPN` swaps the first stack item with the N'th stack item.\r\n\r\nAn argument N > the number of items on the stack should cause the program to terminate with a stack underflow, as it does currently for the `SWAP#`/`DUP#` set of instructions.\r\n\r\nThe gas cost for these operations should remain `Wverylow`, seeing as there is no real difference as the stack for a contract needs to be held in memory while executing either way, and the gas limit would likely be hit before the stack size would become a problem.",
  "closed_by": {
    "login": "axic",
    "id": 20340,
    "node_id": "MDQ6VXNlcjIwMzQw",
    "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/axic",
    "html_url": "https://github.com/axic",
    "followers_url": "https://api.github.com/users/axic/followers",
    "following_url": "https://api.github.com/users/axic/following{/other_user}",
    "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
    "organizations_url": "https://api.github.com/users/axic/orgs",
    "repos_url": "https://api.github.com/users/axic/repos",
    "events_url": "https://api.github.com/users/axic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/axic/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/174/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/174/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/259151765",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-259151765",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 259151765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTE1MTc2NQ==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-08T14:34:01Z",
    "updated_at": "2016-11-08T14:34:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nAgreed.  Is a dynamic value on the stack needed, or would two\n  bytes of immediate data do the trick?  Dynamic operations can be\n  much harder to analyze.\n\nOn 11/8/16 7:09 AM, Matthew Di Ferrante\n  wrote:\n\n\n  Motivation\n  The fixed limit on stack referencing through the current DUP\n    and SWAP operations limits the usability of the stack when\n    writing compilers that target the EVM, as at most you can only\n    access memory 17 levels deep. A solution that makes efficient\n    use of the stack and allows for a higher number of local\n    variables becomes needlessly complicated as beyond 17 levels the\n    implementation needs to start storing things in memory instead.\n  Specification\n  Introduce two new opcodes, DUPN and SWAPN\n    that take one integral argument, N, where DUPN\n    duplicates the N'th stack item to the top of the stack, and SWAPN\n    swaps the first stack item with the N'th stack item.\n  An argument N > the number of items on the stack should\n    cause the program to terminate with a stack underflow, as it\n    does currently for the SWAP#/DUP# set\n    of instructions.\n  The gas cost for these operations should remain Wverylow,\n    seeing as there is no real difference as the stack for a\n    contract needs to be held in memory while executing either way,\n    and the gas limit would likely be hit before the stack size\n    would become a problem.\n  —\n    You are receiving this because you are subscribed to this\n    thread.\n    Reply to this email directly, view it on\n      GitHub, or mute\n      the thread.\n\n\n\n\n\n\n\n  {\"api_version\":\"1.0\",\"publisher\":{\"api_key\":\"05dde50f1d1a384dd78767c55493e4bb\",\"name\":\"GitHub\"},\"entity\":{\"external_key\":\"github/ethereum/EIPs\",\"title\":\"ethereum/EIPs\",\"subtitle\":\"GitHub repository\",\"main_image_url\":\"https://cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95fc-7290892c7bb5.png\",\"avatar_image_url\":\"https://cloud.githubusercontent.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png\",\"action\":{\"name\":\"Open in GitHub\",\"url\":\"https://github.com/ethereum/EIPs\"}},\"updates\":{\"snippets\":[{\"icon\":\"DESCRIPTION\",\"message\":\"Replace DUP1-17 / SWAP1-17 With DUPN / SWAPN (#174)\"}],\"action\":{\"name\":\"View Issue\",\"url\":\"https://github.com/ethereum/EIPs/issues/174\"}}}\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/259151765/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/259156149",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-259156149",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 259156149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTE1NjE0OQ==",
    "user": {
      "login": "mattdf",
      "id": 11067114,
      "node_id": "MDQ6VXNlcjExMDY3MTE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/11067114?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattdf",
      "html_url": "https://github.com/mattdf",
      "followers_url": "https://api.github.com/users/mattdf/followers",
      "following_url": "https://api.github.com/users/mattdf/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattdf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattdf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattdf/subscriptions",
      "organizations_url": "https://api.github.com/users/mattdf/orgs",
      "repos_url": "https://api.github.com/users/mattdf/repos",
      "events_url": "https://api.github.com/users/mattdf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattdf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-08T14:49:36Z",
    "updated_at": "2016-11-08T14:50:22Z",
    "author_association": "MEMBER",
    "body": "@gcolvin Two bytes of immediate data would be preferable and easier to implement from a compiler perspective as well. If function calls / frame compilation are implemented properly there should be no stack additions in terms of new variable declarations in the middle of a call frame hence all stack references should be able to be addressed with static offsets.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/259156149/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/259873458",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-259873458",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 259873458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTg3MzQ1OA==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-11T03:37:17Z",
    "updated_at": "2016-11-11T03:37:17Z",
    "author_association": "MEMBER",
    "body": "I would also strongly prefer two bytes of immediate data. I support that version.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/259873458/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/260184882",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-260184882",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 260184882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDE4NDg4Mg==",
    "user": {
      "login": "mattdf",
      "id": 11067114,
      "node_id": "MDQ6VXNlcjExMDY3MTE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/11067114?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattdf",
      "html_url": "https://github.com/mattdf",
      "followers_url": "https://api.github.com/users/mattdf/followers",
      "following_url": "https://api.github.com/users/mattdf/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattdf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattdf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattdf/subscriptions",
      "organizations_url": "https://api.github.com/users/mattdf/orgs",
      "repos_url": "https://api.github.com/users/mattdf/repos",
      "events_url": "https://api.github.com/users/mattdf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattdf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-13T13:01:50Z",
    "updated_at": "2016-11-13T13:01:50Z",
    "author_association": "MEMBER",
    "body": "If possible, it would be great if this could be rolled out with Metropolis, as it would make writing compilers / optimizations much easier.\n\nIn terms of implementation complexity, the major clients I looked at (parity, geth) already use functions which can swap/dup at arbitrary places, so it would in essence just be a matter of registering a new opcode in the instruction dispatch that takes the fixed size argument.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/260184882/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/262185806",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-262185806",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 262185806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjE4NTgwNg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-22T09:10:00Z",
    "updated_at": "2016-11-22T09:10:00Z",
    "author_association": "MEMBER",
    "body": "Please correct me if I'm wrong but I think this proposal severely limits the abilities for static analysis and just in time compilation. If the following snippet is present anywhere in the code and there is at least one dynamic jump, you can basically make no assumptions about stack content:\r\n\r\n```\r\nJUMPDEST\r\nSWAP500\r\n```\r\n\r\nIf we want to have an efficient EVM, we have to limit the access to the stack. Stack is as cheap as it currently is because we can more or less assume that it is always in cache or even in registers. If we allow constant access to the full stack, this is not the case anymore. There is a proposal to add \"subroutine jumps\" which have to make promises about how much of the stack they can modify and I don't think these two proposals are compatible.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/262185806/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/262212713",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-262212713",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 262212713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjIxMjcxMw==",
    "user": {
      "login": "mattdf",
      "id": 11067114,
      "node_id": "MDQ6VXNlcjExMDY3MTE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/11067114?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattdf",
      "html_url": "https://github.com/mattdf",
      "followers_url": "https://api.github.com/users/mattdf/followers",
      "following_url": "https://api.github.com/users/mattdf/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattdf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattdf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattdf/subscriptions",
      "organizations_url": "https://api.github.com/users/mattdf/orgs",
      "repos_url": "https://api.github.com/users/mattdf/repos",
      "events_url": "https://api.github.com/users/mattdf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattdf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-22T11:08:17Z",
    "updated_at": "2016-11-22T11:08:17Z",
    "author_association": "MEMBER",
    "body": "I disagree. I don't see why this would make it difficult. It would just make the implementation different. The JVM and pretty much all other instruction set architectures support arbitrary stack access, and JIT is still possible there. You can limit the total stack size to some power of 2 and use that in your JIT / analysis if needed.\r\n\r\nThere are many other cases where the stack content can be made unpredictable by loading on-chain data right after jumps, or loading in current block metadata.\r\n\r\nThe arbitrary limitation is yet another barrier to writing efficient compilers that target the EVM, and that is a far more important, because for the ecosystem to grow there needs to be more than one or two high level languages that can target it.\r\n\r\nIf you want to make promises for how much stack \"subroutine jumps\" can access, set the limitation in the jump? I don't see why these two proposals are mutually exclusive. You can set it such that any subroutine jump marks a page of 1KB (or whatever) as accessible and access beyond that becomes a page violation.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/262212713/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/262219078",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-262219078",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 262219078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjIxOTA3OA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-22T11:37:52Z",
    "updated_at": "2016-11-22T11:37:52Z",
    "author_association": "MEMBER",
    "body": "The [JVM](https://docs.oracle.com/javase/specs/jvms/se7/html/jvms-2.html) does explicitly not allow arbitrary stack access. I am pretty sure that efficient JITing of methods in the JVM relies on the fact that local variables in the caller cannot be modified by the callee.\r\n\r\nThe current EVM does not have this promise.\r\n\r\nI'm not saying we should not have arbitrary stack access, we should just be careful about what exactly we allow.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/262219078/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/262220425",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-262220425",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 262220425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjIyMDQyNQ==",
    "user": {
      "login": "mattdf",
      "id": 11067114,
      "node_id": "MDQ6VXNlcjExMDY3MTE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/11067114?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattdf",
      "html_url": "https://github.com/mattdf",
      "followers_url": "https://api.github.com/users/mattdf/followers",
      "following_url": "https://api.github.com/users/mattdf/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattdf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattdf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattdf/subscriptions",
      "organizations_url": "https://api.github.com/users/mattdf/orgs",
      "repos_url": "https://api.github.com/users/mattdf/repos",
      "events_url": "https://api.github.com/users/mattdf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattdf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-22T11:45:09Z",
    "updated_at": "2016-11-22T11:45:09Z",
    "author_association": "MEMBER",
    "body": "Then would amending the proposal to allow enforcement similar to the JVM in terms of not modifying variables outside the callee's frame address your concerns? The total stack size could be a default EVM limit like it is on the default stack page in modern OS, or it could be set by an additional instruction for which the gas cost scales with the page size, either way you would have an explicit limit that can be used in analysis.\r\n\r\nFrom the perspective of supporting as many constructs as possible I would make the case that the EVM should at least allow **access** to the entire stack (up to a certain page size), even if it doesn't allow the callee to **modify** caller variables, so you can at least implement constructs like closures.\r\n\r\nDo you see any issues with it working as described above?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/262220425/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/262223756",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-262223756",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 262223756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjIyMzc1Ng==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-22T12:03:00Z",
    "updated_at": "2016-11-22T12:03:00Z",
    "author_association": "MEMBER",
    "body": "I think it is really hard to come up with the correct gas costs for such things.\r\n\r\nConcerning how to implement closures: Static access from the stack top also will not help you there, because the stack depth will change in calls. Furthermore, you might also want those variables to live on beyond the point where the function returns. So the only nice way I see to implement closures is by moving some stack variables to memory. This is a feature that is convenient anyway for a compiler to implement and as soon as you have this feature, you don't need arbitrary stack access anymore...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/262223756/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/262225240",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-262225240",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 262225240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjIyNTI0MA==",
    "user": {
      "login": "mattdf",
      "id": 11067114,
      "node_id": "MDQ6VXNlcjExMDY3MTE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/11067114?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattdf",
      "html_url": "https://github.com/mattdf",
      "followers_url": "https://api.github.com/users/mattdf/followers",
      "following_url": "https://api.github.com/users/mattdf/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattdf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattdf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattdf/subscriptions",
      "organizations_url": "https://api.github.com/users/mattdf/orgs",
      "repos_url": "https://api.github.com/users/mattdf/repos",
      "events_url": "https://api.github.com/users/mattdf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattdf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-22T12:11:00Z",
    "updated_at": "2016-11-22T12:11:00Z",
    "author_association": "MEMBER",
    "body": "To be fair, it's a hassle to manage when all opcodes return onto the stack and load from the stack, since the EVM doesn't have the ability to have opcode arguments be loaded directly from memory.\r\n\r\nIt's definitely possible but it's extra work that could be remedied by changing the ISA - and if it wasn't significant extra work, I'm sure Solidity would have support for more than 16 variables inside functions - which it doesn't now.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/262225240/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/262233681",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-262233681",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 262233681,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjIzMzY4MQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-22T12:56:16Z",
    "updated_at": "2016-11-22T12:56:16Z",
    "author_association": "MEMBER",
    "body": "No need to tell me :-)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/262233681/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/262389397",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-262389397",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 262389397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjM4OTM5Nw==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-22T22:48:57Z",
    "updated_at": "2016-11-22T22:50:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "The proposal to replace dynamic jumps with static jumps and subroutines should eliminate any problems with static analysis and compiling; if it doesn't, that's a problem with the proposal.  But we are still working on it.  And I doubt this will cause significant performance problems.  EVM stack items are too big and EVM arithmetic and interpretation too expensive for even one or two stack items to stay in registers for long,  but the whole stack will easily live in the megabytes of cache on a typical CPU, so mostly we are looking at which level of cache which part of the stack is in when needed.  All of cache is a lot better than RAM, so I think at worst DUPN and SWAPN would make it a little easier to write programs that perform a bit worse.  But the intended use of the feature would probably bounce between the top of the stack where computation is happening and lower down where variables are stored, keeping both parts of the stack \"hot\" and in the faster levels of cache.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/262389397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/318832811",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-318832811",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 318832811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODgzMjgxMQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-29T13:59:52Z",
    "updated_at": "2017-07-29T13:59:52Z",
    "author_association": "MEMBER",
    "body": "Sorry I haven't seen this issue when creating #663.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/318832811/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/318838724",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-318838724",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 318838724,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODgzODcyNA==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-29T15:35:24Z",
    "updated_at": "2017-07-29T15:35:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "I still think that if https://github.com/ethereum/EIPs/issues/615 is accepted this will be unnecessary.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/318838724/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/349339131",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-349339131",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 349339131,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTMzOTEzMQ==",
    "user": {
      "login": "SergioDemianLerner",
      "id": 1752347,
      "node_id": "MDQ6VXNlcjE3NTIzNDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1752347?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SergioDemianLerner",
      "html_url": "https://github.com/SergioDemianLerner",
      "followers_url": "https://api.github.com/users/SergioDemianLerner/followers",
      "following_url": "https://api.github.com/users/SergioDemianLerner/following{/other_user}",
      "gists_url": "https://api.github.com/users/SergioDemianLerner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SergioDemianLerner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SergioDemianLerner/subscriptions",
      "organizations_url": "https://api.github.com/users/SergioDemianLerner/orgs",
      "repos_url": "https://api.github.com/users/SergioDemianLerner/repos",
      "events_url": "https://api.github.com/users/SergioDemianLerner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SergioDemianLerner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-05T15:29:53Z",
    "updated_at": "2017-12-05T15:29:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "You could adopt the RSK standard for DUPN and SWAPN, which receives arguments in the stack.\r\nYou can check this code here:\r\nhttps://github.com/rsksmart/rskj/blob/master/rskj-core/src/main/java/org/ethereum/vm/VM.java#L953\r\n\r\nThis way we could keep in sync ETH with RSK.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/349339131/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/355457807",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-355457807",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 355457807,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTQ1NzgwNw==",
    "user": {
      "login": "mattdf",
      "id": 11067114,
      "node_id": "MDQ6VXNlcjExMDY3MTE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/11067114?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattdf",
      "html_url": "https://github.com/mattdf",
      "followers_url": "https://api.github.com/users/mattdf/followers",
      "following_url": "https://api.github.com/users/mattdf/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattdf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattdf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattdf/subscriptions",
      "organizations_url": "https://api.github.com/users/mattdf/orgs",
      "repos_url": "https://api.github.com/users/mattdf/repos",
      "events_url": "https://api.github.com/users/mattdf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattdf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-05T02:36:06Z",
    "updated_at": "2018-01-05T02:36:06Z",
    "author_association": "MEMBER",
    "body": "I'm going to revive this because this limit in the EVM (and solidity by extension) is honestly such a pain when you're trying to do anything non-trivial, especially when feeding in things like signatures for EC operations...\r\n\r\n@gcolvin why does #615 make this EIP unnecessary?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/355457807/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/355464350",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-355464350",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 355464350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTQ2NDM1MA==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-05T03:30:11Z",
    "updated_at": "2018-01-05T03:30:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mattdf #615 divides up the stack into subroutines and provides opcodes to get at all the variables in a subroutine.  So does #48.  This is of course a smaller change.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/355464350/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/355535326",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-355535326",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 355535326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTUzNTMyNg==",
    "user": {
      "login": "mattdf",
      "id": 11067114,
      "node_id": "MDQ6VXNlcjExMDY3MTE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/11067114?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattdf",
      "html_url": "https://github.com/mattdf",
      "followers_url": "https://api.github.com/users/mattdf/followers",
      "following_url": "https://api.github.com/users/mattdf/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattdf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattdf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattdf/subscriptions",
      "organizations_url": "https://api.github.com/users/mattdf/orgs",
      "repos_url": "https://api.github.com/users/mattdf/repos",
      "events_url": "https://api.github.com/users/mattdf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattdf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-05T11:38:03Z",
    "updated_at": "2018-01-05T11:38:03Z",
    "author_association": "MEMBER",
    "body": "What's the timeline for something like #615 making it into the protocol? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/355535326/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/355580206",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-355580206",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 355580206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTU4MDIwNg==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-05T15:20:57Z",
    "updated_at": "2018-01-05T15:20:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mattdf I'd say  #48 is more likely, but there is no real process for deciding these things, so I can't guess at a timeline.  If you want #174 to go through you need to write up a proper EIP and make a PR.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/355580206/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/355585325",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-355585325",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 355585325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTU4NTMyNQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-05T15:41:04Z",
    "updated_at": "2018-01-05T15:41:04Z",
    "author_association": "MEMBER",
    "body": "Please note there is a \"proper EIP\" written under #663 (I didn't notice this one when I wrote it), though that proposes to take the last stack item as index.\r\n\r\nBenefit of that is that tools wouldn't need to be upgraded to support another immediate opcode (which for some reason seems to be the preferred way), downside is it goes against static analysis. I am actually in favour of having it as immediate.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/355585325/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/355587399",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-355587399",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 355587399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTU4NzM5OQ==",
    "user": {
      "login": "mattdf",
      "id": 11067114,
      "node_id": "MDQ6VXNlcjExMDY3MTE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/11067114?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattdf",
      "html_url": "https://github.com/mattdf",
      "followers_url": "https://api.github.com/users/mattdf/followers",
      "following_url": "https://api.github.com/users/mattdf/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattdf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattdf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattdf/subscriptions",
      "organizations_url": "https://api.github.com/users/mattdf/orgs",
      "repos_url": "https://api.github.com/users/mattdf/repos",
      "events_url": "https://api.github.com/users/mattdf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattdf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-05T15:48:33Z",
    "updated_at": "2018-01-05T15:48:33Z",
    "author_association": "MEMBER",
    "body": "It doesn't make much difference to me whether N is inline or a stack arg, so I'd support the construction #663 for immediate merge as well. When using complex bn/crypto related functions this limit becomes a nightmare.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/355587399/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/355596753",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-355596753",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 355596753,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTU5Njc1Mw==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-05T16:21:56Z",
    "updated_at": "2018-01-05T16:21:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "#663 could pretty easily be changed to specify an immediate, which I also prefer.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/355596753/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/400796217",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-400796217",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 400796217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDc5NjIxNw==",
    "user": {
      "login": "HarryR",
      "id": 303926,
      "node_id": "MDQ6VXNlcjMwMzkyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/303926?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HarryR",
      "html_url": "https://github.com/HarryR",
      "followers_url": "https://api.github.com/users/HarryR/followers",
      "following_url": "https://api.github.com/users/HarryR/following{/other_user}",
      "gists_url": "https://api.github.com/users/HarryR/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HarryR/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HarryR/subscriptions",
      "organizations_url": "https://api.github.com/users/HarryR/orgs",
      "repos_url": "https://api.github.com/users/HarryR/repos",
      "events_url": "https://api.github.com/users/HarryR/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HarryR/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-27T19:09:14Z",
    "updated_at": "2018-06-27T19:09:14Z",
    "author_association": "NONE",
    "body": "So basically this is getting shelved until WASM comes along, at which point it will become a non-issue?\r\n\r\nMakes sense, and the ABIv2 encoder is making things workable in the meantime.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/400796217/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/498072996",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-498072996",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 498072996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODA3Mjk5Ng==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-02T23:08:12Z",
    "updated_at": "2019-09-06T13:27:19Z",
    "author_association": "MEMBER",
    "body": "@mattdf #663 was merged as a draft quite a while ago and it proposes the same ([my earlier comment here when I've realised the duplicate work](https://github.com/ethereum/EIPs/issues/174#issuecomment-318832811))\r\n\r\nThere's a discussion URL for 663 here: https://ethereum-magicians.org/t/eip-663-unlimited-swap-and-dup-instructions/3346/20\r\n\r\nAdded references to this issue in the merged EIP. What do you think about closing this?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/498072996/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/528854943",
    "html_url": "https://github.com/ethereum/EIPs/issues/174#issuecomment-528854943",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/174",
    "id": 528854943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODg1NDk0Mw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-06T13:29:29Z",
    "updated_at": "2019-09-06T13:29:29Z",
    "author_association": "MEMBER",
    "body": "Since https://eips.ethereum.org/EIPS/eip-663 is discussed during Istanbul/Berlin, I think this thread here should be closed to avoid confusion.\r\n\r\n@mattdf please let me know if you think otherwise and this issue can be reopened.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/528854943/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
