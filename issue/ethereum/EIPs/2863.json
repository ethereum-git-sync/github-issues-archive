{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/2863",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2863/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2863/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2863/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/2863",
  "id": 675048895,
  "node_id": "MDU6SXNzdWU2NzUwNDg4OTU=",
  "number": 2863,
  "title": "Add arbitrary aggregate contract calls",
  "user": {
    "login": "vporton",
    "id": 2900574,
    "node_id": "MDQ6VXNlcjI5MDA1NzQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2900574?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vporton",
    "html_url": "https://github.com/vporton",
    "followers_url": "https://api.github.com/users/vporton/followers",
    "following_url": "https://api.github.com/users/vporton/following{/other_user}",
    "gists_url": "https://api.github.com/users/vporton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vporton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vporton/subscriptions",
    "organizations_url": "https://api.github.com/users/vporton/orgs",
    "repos_url": "https://api.github.com/users/vporton/repos",
    "events_url": "https://api.github.com/users/vporton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vporton/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2020-08-07T14:21:00Z",
  "updated_at": "2021-11-21T03:11:13Z",
  "closed_at": "2021-11-21T03:11:13Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "See also #2711 (https://eips.ethereum.org/EIPS/eip-2711) or #2733 (https://eips.ethereum.org/EIPS/eip-2733).\r\n\r\nI propose to add special contract calls (let's call it aggregate calls) that would have the following properties:\r\n\r\n* Use `tx.origin` as `msg.sender` in other contract called directly by a contract called in an aggregate call.\r\n\r\n* Pass with the call a set of contract addresses and allow such direct calls only to contracts in this set.\r\n\r\nIt is intended to be used like the following:\r\n\r\n* web3.js initiates an aggregate call.\r\n\r\n* To the user is displayed \"aggregate call for contracts ...\" where ... is the set of contracts.\r\n\r\n* The call is made if confirmed.\r\n\r\nSecurity:\r\n\r\n* Using `tx.origin` as `msg.sender` is safe in this case as the user knows he is making an aggregate calls and which contract he calls.\r\n\r\nRationale:\r\n\r\n* It allows to arbitrarily combine several contract calls into one, with unlike #2711 and #2733 arbitrary processing (by e.g. a Solidity code) the data between calls, for example a value returned by one contract call could be passed to another one.\r\n\r\n* It is a complex feature to write a EIP and implement, but it is very important to do, because this is the only way to arbitrarily combine several contract calls into one.\r\n\r\n* This feature allows the programmer to be free from the responsibility to guess all the possible combinations of contract calls, he would need to combine into one external function before the final contract is deployed.",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/2863/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/2863/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/670543820",
    "html_url": "https://github.com/ethereum/EIPs/issues/2863#issuecomment-670543820",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2863",
    "id": 670543820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDU0MzgyMA==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-07T14:25:55Z",
    "updated_at": "2020-08-07T14:25:55Z",
    "author_association": "MEMBER",
    "body": "@vporton Do you mean like https://eips.ethereum.org/EIPS/eip-2803 would allow?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/670543820/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/670546365",
    "html_url": "https://github.com/ethereum/EIPs/issues/2863#issuecomment-670546365",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2863",
    "id": 670546365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDU0NjM2NQ==",
    "user": {
      "login": "vporton",
      "id": 2900574,
      "node_id": "MDQ6VXNlcjI5MDA1NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2900574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vporton",
      "html_url": "https://github.com/vporton",
      "followers_url": "https://api.github.com/users/vporton/followers",
      "following_url": "https://api.github.com/users/vporton/following{/other_user}",
      "gists_url": "https://api.github.com/users/vporton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vporton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vporton/subscriptions",
      "organizations_url": "https://api.github.com/users/vporton/orgs",
      "repos_url": "https://api.github.com/users/vporton/repos",
      "events_url": "https://api.github.com/users/vporton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vporton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-07T14:31:25Z",
    "updated_at": "2020-08-07T14:31:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @vporton Do you mean like https://eips.ethereum.org/EIPS/eip-2803 would allow?\r\n\r\nMy proposal is different than EIP 2803:\r\n\r\n* I don't propose to create a new contract every time such a transaction is done (this way we save gas on deployment).\r\n\r\n* EIP 2803 misses using `tx.origin` as `msg.sender` and so EIP 2803 is not enough to make arbitrary contract calls from any address.\r\n\r\nThus my proposal is needed to be implemented independently on whether EIP 2803 will be implemented. These two proposals could even both be implemented and sometimes used together.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/670546365/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/670549304",
    "html_url": "https://github.com/ethereum/EIPs/issues/2863#issuecomment-670549304",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2863",
    "id": 670549304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDU0OTMwNA==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-07T14:37:53Z",
    "updated_at": "2020-08-07T14:37:53Z",
    "author_association": "MEMBER",
    "body": "The idea with 2803 is that the vast majority of the time you would just do a single delegate call to an already deployed contract that executes some series of transactions in sequence.  This means that in all of those cases, you would not be deploying any bytecode and your transaction data would be just whatever is required to issue a delegate call.\r\n\r\n> EIP 2803 misses using tx.origin as msg.sender and so EIP 2803 is not enough to make arbitrary contract calls from any address.\r\n\r\nI believe this is incorrect (though maybe I'm misunderstanding).  See this line in 2803:\r\n> `CALL` will set the `CALLER` to the EOA (not `x`).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/670549304/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/670551944",
    "html_url": "https://github.com/ethereum/EIPs/issues/2863#issuecomment-670551944",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2863",
    "id": 670551944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDU1MTk0NA==",
    "user": {
      "login": "vporton",
      "id": 2900574,
      "node_id": "MDQ6VXNlcjI5MDA1NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2900574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vporton",
      "html_url": "https://github.com/vporton",
      "followers_url": "https://api.github.com/users/vporton/followers",
      "following_url": "https://api.github.com/users/vporton/following{/other_user}",
      "gists_url": "https://api.github.com/users/vporton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vporton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vporton/subscriptions",
      "organizations_url": "https://api.github.com/users/vporton/orgs",
      "repos_url": "https://api.github.com/users/vporton/repos",
      "events_url": "https://api.github.com/users/vporton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vporton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-07T14:43:27Z",
    "updated_at": "2020-08-07T14:43:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The idea with 2803 is that the vast majority of the time you would just do a single delegate call to an already deployed contract that executes some series of transactions in sequence. This means that in all of those cases, you would not be deploying any bytecode and your transaction data would be just whatever is required to issue a delegate call.\r\n\r\nThis looks like a bad in practice idea for me for the following reasons:\r\n\r\n* It would require to (dynamically or statistically) to generate a separate EVM code for each of the call combinations (how to do this? create many small Solidity sources, compile and distribute the bytecode files? or generate EVM code dynamically from JavaScript? either is not good)\r\n\r\n* The calls combinations in practice will be in some finite sets (as EVM programs are usually not to be generated dynamically), so deploying this entire set of calls would safe the total gas used. As such, the idea of passing EVM code every time seems bad.\r\n\r\n> > EIP 2803 misses using tx.origin as msg.sender and so EIP 2803 is not enough to make arbitrary contract calls from any address.\r\n> \r\n> I believe this is incorrect (though maybe I'm misunderstanding). See this line in 2803:\r\n> \r\n> > `CALL` will set the `CALLER` to the EOA (not `x`).\r\n\r\nSorry, this misunderstood by me.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/670551944/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/670578703",
    "html_url": "https://github.com/ethereum/EIPs/issues/2863#issuecomment-670578703",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2863",
    "id": 670578703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDU3ODcwMw==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-07T15:39:45Z",
    "updated_at": "2020-08-07T15:39:45Z",
    "author_association": "MEMBER",
    "body": "The *vast* majority of sequential calls are people interacting with dapps and the sequence of calls is the same or one of a small set for all users.  In all of these cases, a delegate call makes the most sense as the dapp developer can deploy a contract with their app that has the delegate functions available and then the UI can generate the delegate call transaction.  For example, people need to do an approval of some token prior to calling a contract function that then transfers that token away.\r\n\r\nFor the few times when you need to do a one-off call sequence, you can simply construct the bytecode necessary to do so and submit it as a transaction.  It is worth noting that this code is not \"deployed\" or saved on the chain, it is executed just for that transaction.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/670578703/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/670580435",
    "html_url": "https://github.com/ethereum/EIPs/issues/2863#issuecomment-670580435",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2863",
    "id": 670580435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDU4MDQzNQ==",
    "user": {
      "login": "vporton",
      "id": 2900574,
      "node_id": "MDQ6VXNlcjI5MDA1NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2900574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vporton",
      "html_url": "https://github.com/vporton",
      "followers_url": "https://api.github.com/users/vporton/followers",
      "following_url": "https://api.github.com/users/vporton/following{/other_user}",
      "gists_url": "https://api.github.com/users/vporton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vporton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vporton/subscriptions",
      "organizations_url": "https://api.github.com/users/vporton/orgs",
      "repos_url": "https://api.github.com/users/vporton/repos",
      "events_url": "https://api.github.com/users/vporton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vporton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-07T15:43:13Z",
    "updated_at": "2020-08-07T15:43:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MicahZoltu I do not see _any_ reason not to deploy some bytecode when the bytecode was anyway submitted to the blockchain. Every verifier sees the code anyway, so the cost to deploy it is expected to be negligible. If it is free, why not to deploy also?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/670580435/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/670607591",
    "html_url": "https://github.com/ethereum/EIPs/issues/2863#issuecomment-670607591",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2863",
    "id": 670607591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDYwNzU5MQ==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-07T16:44:27Z",
    "updated_at": "2020-08-07T16:44:27Z",
    "author_association": "MEMBER",
    "body": "IIRC, storing data permanently on the blockchain is significantly more costly than passing it to a block as transaction data.  While technically transaction data is stored as part of history, the *way* they are stored is different from deployed contracts and the accessibility requirements for transactions and transaction data is quite different.  They can, for example, be written to a slower disk I believe in most implementations rather than needing to be \"hot\" (e.g., HDD or NAS rather than SSD).\r\n\r\nThis is represented in the contract deployment costs which is 32,000 + 200 per byte vs transaction data which is 21,000 + 68 per byte (I think contract deployments *also* have to pay for the 21,000 + 68 per byte, which would put contract deployment at 53,000 + 268 per byte, but you should double check that rather than believing me since I'm not confident in it).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/670607591/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/670614965",
    "html_url": "https://github.com/ethereum/EIPs/issues/2863#issuecomment-670614965",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2863",
    "id": 670614965,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDYxNDk2NQ==",
    "user": {
      "login": "vporton",
      "id": 2900574,
      "node_id": "MDQ6VXNlcjI5MDA1NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2900574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vporton",
      "html_url": "https://github.com/vporton",
      "followers_url": "https://api.github.com/users/vporton/followers",
      "following_url": "https://api.github.com/users/vporton/following{/other_user}",
      "gists_url": "https://api.github.com/users/vporton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vporton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vporton/subscriptions",
      "organizations_url": "https://api.github.com/users/vporton/orgs",
      "repos_url": "https://api.github.com/users/vporton/repos",
      "events_url": "https://api.github.com/users/vporton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vporton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-07T17:01:44Z",
    "updated_at": "2020-08-07T17:01:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MicahZoltu \r\n\r\n> IIRC, storing data permanently on the blockchain is significantly more costly than passing it to a block as transaction data. While technically transaction data is stored as part of history, the _way_ they are stored is different from deployed contracts and the accessibility requirements for transactions and transaction data is quite different. They can, for example, be written to a slower disk I believe in most implementations rather than needing to be \"hot\" (e.g., HDD or NAS rather than SSD).\r\n\r\nAnyway, usually we need just max one contract deployment per a version of an application. Deploying once is indeed not expensive.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/670614965/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/962544688",
    "html_url": "https://github.com/ethereum/EIPs/issues/2863#issuecomment-962544688",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2863",
    "id": 962544688,
    "node_id": "IC_kwDOAq426M45X0Qw",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-11-07T03:10:59Z",
    "updated_at": "2021-11-07T03:10:59Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/962544688/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974747921",
    "html_url": "https://github.com/ethereum/EIPs/issues/2863#issuecomment-974747921",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2863",
    "id": 974747921,
    "node_id": "IC_kwDOAq426M46GXkR",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-11-21T03:11:12Z",
    "updated_at": "2021-11-21T03:11:12Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974747921/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
