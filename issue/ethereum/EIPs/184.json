{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/184",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/184/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/184/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/184/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/184",
  "id": 195163257,
  "node_id": "MDU6SXNzdWUxOTUxNjMyNTc=",
  "number": 184,
  "title": "Subroutines and Static Jumps for the EVM",
  "user": {
    "login": "gcolvin",
    "id": 16827129,
    "node_id": "MDQ6VXNlcjE2ODI3MTI5",
    "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gcolvin",
    "html_url": "https://github.com/gcolvin",
    "followers_url": "https://api.github.com/users/gcolvin/followers",
    "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
    "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
    "organizations_url": "https://api.github.com/users/gcolvin/orgs",
    "repos_url": "https://api.github.com/users/gcolvin/repos",
    "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gcolvin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2016-12-13T05:12:27Z",
  "updated_at": "2020-01-21T16:13:52Z",
  "closed_at": "2017-08-28T16:31:23Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "```\r\neip: 2315\r\ntitle: Simple Subroutines for the EVM\r\nstatus: Draft\r\ntype: Standards Track\r\ncategory: Core\r\nauthor: Greg Colvin\r\ndiscussions-to: https://github.com/ethereum/EIPs/issues/2315\r\ncreated: 2019-10-17\r\n```\r\n\r\n## Simple Summary\r\n\r\nSubroutines.\r\n\r\n## Abstract\r\n\r\nThis proposal introduces two opcodes to support subroutines:  `JUMPSUB` and `RETSUB`.\r\n\r\n## Motivation\r\n\r\nThe EVM does not provide subroutines as a primitive.  Instead, calls must be synthesized by fetching, adjusting and pushing the current program counter and jumping to the subroutine address; returns must be synthesized by getting the return address to the top of stack and jumping back to it.\r\n\r\n## Specification\r\n\r\n### Proposal\r\n\r\n**_JUMPSUB_**\r\n>\r\n> Jumps to the address on top of the stack.  This must be a `JUMPDEST`.\r\n\r\n**_RETSUB_**\r\n>\r\n> Returns to the most recently executed `JUMPSUB` instruction.\r\n\r\n## Backwards Compatibility\r\n\r\nThese changes do not affect existing VM code..\r\n\r\n## Rationale\r\n\r\nThis is the smallest possible change that provides native subroutines without breaking backwards compatibility.  It does not enforce validity like #615, but code that\r\n_ pushes constants argument before every `JUMP` and `JUMPI` and \r\n_ ensures that the _data stack_ is the same size at the end of every basic block\r\nis valid and will meet all of the #615 safety conditions.  In particular, the Yellow paper defines five exceptional halting states.  Valid code cannot violate states 3, 4, or 5.  \r\n\r\n>1  Insufficient gas\r\n\r\n>2  More than 1024 stack items\r\n\r\n>3  Insufficient stack items\r\n\r\n>4  Invalid jump destination\r\n\r\n>5  Invalid instruction\r\n\r\n## Implementation\r\n\r\nJumps to and returns from subroutines are described here in terms of\r\n* The EVM _data stack_, (as defined in the [Yellow Paper](https://ethereum.github.io/yellowpaper/paper.pdf)).\r\n* A _return stack_ of program counters.\r\n* The _program counter_ `PC` which is the byte offset of the currently executing instruction.\r\n\r\nExecution of EVM bytecode begins with one value on the return stackâ€”`code_size`. Executing the virtual byte of 0 at this offset causes an EVM to stop.  Thus executing a `RETSUB` with no prior `JUMPSUB` executes a `STOP`.  A `STOP` or `RETURN` ends the execution of a subroutine.\r\n\r\nSemantics are defined by the following pseudo-C code.\r\n\r\n```\r\n   uint256 data_stack[1024];\r\n   uint16 return_stack[1024] = {code_size};\r\n   byte code[code_size];\r\n\r\n   while (PC < code_size) {\r\n      switch opcode = code[PC];\r\n      case jumpsub:\r\n         push(return_stack,PC);\r\n         PC = pop(data_stack);\r\n         break;\r\n      cast retsub:\r\n         PC = pop(return_stack);\r\n         break;\r\n      ...\r\n      case 0:\r\n         stop();\r\n      default:\r\n         invalid_instruction();\r\n      }\r\n      ++PC;\r\n   }\r\n```\r\n\r\n### Costs & Codes\r\n\r\nWe suggest the cost of `JUMPSUB` should be _low_, and `RETSUB` should be _verylow_. \r\n Measurement will tell.\r\n\r\nWe suggest the following opcodes:\r\n```\r\n0xbe JUMPSUB\r\n0xbf RETSUB\r\n```\r\n\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).",
  "closed_by": {
    "login": "gcolvin",
    "id": 16827129,
    "node_id": "MDQ6VXNlcjE2ODI3MTI5",
    "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gcolvin",
    "html_url": "https://github.com/gcolvin",
    "followers_url": "https://api.github.com/users/gcolvin/followers",
    "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
    "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
    "organizations_url": "https://api.github.com/users/gcolvin/orgs",
    "repos_url": "https://api.github.com/users/gcolvin/repos",
    "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gcolvin/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/184/reactions",
    "total_count": 5,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 2,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/184/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/266645299",
    "html_url": "https://github.com/ethereum/EIPs/issues/184#issuecomment-266645299",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/184",
    "id": 266645299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjY0NTI5OQ==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-13T05:17:01Z",
    "updated_at": "2016-12-13T05:17:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Discussion of concepts here.  Edits of live Google Doc here:\r\nhttps://docs.google.com/a/ethereum.org/document/d/1y6qKjnlQ3zlxWs3s16I_LcSfJVGDE0lQp3I7UZPAxWc/edit?usp=sharing",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/266645299/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/268090568",
    "html_url": "https://github.com/ethereum/EIPs/issues/184#issuecomment-268090568",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/184",
    "id": 268090568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODA5MDU2OA==",
    "user": {
      "login": "chfast",
      "id": 573380,
      "node_id": "MDQ6VXNlcjU3MzM4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chfast",
      "html_url": "https://github.com/chfast",
      "followers_url": "https://api.github.com/users/chfast/followers",
      "following_url": "https://api.github.com/users/chfast/following{/other_user}",
      "gists_url": "https://api.github.com/users/chfast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chfast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chfast/subscriptions",
      "organizations_url": "https://api.github.com/users/chfast/orgs",
      "repos_url": "https://api.github.com/users/chfast/repos",
      "events_url": "https://api.github.com/users/chfast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chfast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-19T21:57:38Z",
    "updated_at": "2016-12-19T21:57:38Z",
    "author_association": "MEMBER",
    "body": "## Subroutine Max Frame Size Extension\r\n\r\nIn the current version of the draft we have check for stack overflow in runtime for every executing instruction (in practice it means at every jump). To lower the overhead, we can keep information how much stack is a subrountine using at most and do not allow to call it if the call _could_ cause the stack overflow. That will limit runtime checks only to `JUMPSUB`/`JUMPSUBV` instructions.\r\n\r\n### Specification\r\n\r\n1. Extend `BEGINSUB` specification with third parameter `max_frame_size` \r\n   -- the maximum size of the stack frame the subroutine is allowed to use.\r\n2. In the Validity section, after condition 6 add new conditions:\r\n\r\n   > 6a. For JUMPSUB and JUMPSUBV the frame size + the `max_frame_size` of the BEGINSUB(s) to jump to is not greater than 1024.\r\n\r\n   > 6b. The frame size is not greater than the `max_frame_size` of the enclosing subroutine.\r\n   \r\n3. In the Validating subroutines section, after\r\n    ```\r\n    // check for stack overflow\r\n    if SP > 1024\r\n        return false\r\n    ```\r\n   add\r\n    ```\r\n    // check for exiding the max_frame_size\r\n    if SP > max_frame_size(return_pc)\r\n        return false\r\n    ```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/268090568/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/268313259",
    "html_url": "https://github.com/ethereum/EIPs/issues/184#issuecomment-268313259",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/184",
    "id": 268313259,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODMxMzI1OQ==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-20T18:03:14Z",
    "updated_at": "2016-12-20T18:03:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm torn between increasing efficiency and not complicating the interface.  Especially don't want to make programmers keep track of the stack use of every routine, even when they are not otherwise tight on stack.  One thing to consider is that validation guarantees that determining max frame sizes can be done in one linear-time traversal of the code, just before execution.  One such pass is likely anyway for a high-performance EVM.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/268313259/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/271220389",
    "html_url": "https://github.com/ethereum/EIPs/issues/184#issuecomment-271220389",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/184",
    "id": 271220389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTIyMDM4OQ==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-09T06:50:38Z",
    "updated_at": "2017-01-09T06:50:38Z",
    "author_association": "MEMBER",
    "body": "I need to digest this some more, but initial reading, I think that while it definitely makes the EVM more complex, it also has the potential to make it both more performant and potentially more safe since formal verification will likely benefit from this. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/271220389/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/278969153",
    "html_url": "https://github.com/ethereum/EIPs/issues/184#issuecomment-278969153",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/184",
    "id": 278969153,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODk2OTE1Mw==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-10T15:07:46Z",
    "updated_at": "2017-05-30T20:31:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Moved to PR in EIP repository:  https://github.com/ethereum/EIPs/pull/187\r\nDiscussion here: https://github.com/ethereum/EIPs/issues/615",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/278969153/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
