{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/61/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/61/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/61/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/61",
  "id": 128565612,
  "node_id": "MDU6SXNzdWUxMjg1NjU2MTI=",
  "number": 61,
  "title": "Spending gas from contract's balance - proposed optional opcode for a contract",
  "user": {
    "login": "axic",
    "id": 20340,
    "node_id": "MDQ6VXNlcjIwMzQw",
    "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/axic",
    "html_url": "https://github.com/axic",
    "followers_url": "https://api.github.com/users/axic/followers",
    "following_url": "https://api.github.com/users/axic/following{/other_user}",
    "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
    "organizations_url": "https://api.github.com/users/axic/orgs",
    "repos_url": "https://api.github.com/users/axic/repos",
    "events_url": "https://api.github.com/users/axic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/axic/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 27,
  "created_at": "2016-01-25T15:48:09Z",
  "updated_at": "2022-01-31T10:14:00Z",
  "closed_at": "2022-01-31T10:14:00Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Currently the gas limit is defined and paid by the caller. This proposal is about adding an option to the VM to set an alternate gas limit and gas source (the contract) by means of executing a special opcode within the contract, e.g. `PAYGAS <limit>`\n\nA simple use case: the contract decides that the caller is on the list of trusted sources (for example it is a token holder) and takes over paying the gas. Alternatively the gas limit provided by the caller is used until exhausted, before using the contract's balance. This would be especially useful at fallback entry points enabling simple transactions to interact with a contract.\n\nAs you can see this idea is a a very early stage and comments are more than welcome.\n",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/61/reactions",
    "total_count": 6,
    "+1": 6,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/61/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174572718",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-174572718",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 174572718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDU3MjcxOA==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-25T16:36:09Z",
    "updated_at": "2016-01-25T16:36:09Z",
    "author_association": "MEMBER",
    "body": "ehhh...sounds like you'd need a very good reputation system involved inherently in the contract and it would make them quite complicated. I don't think I'd support this. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174572718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174574670",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-174574670",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 174574670,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDU3NDY3MA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-25T16:39:41Z",
    "updated_at": "2016-01-25T16:40:45Z",
    "author_association": "MEMBER",
    "body": "Not necessarily. The contract could maintain its own list of member to whom it covers the costs. E.g. if you do something monetized, then the more transactions you do with the contract the more it could take off your costs, possibly reaching almost only the call cost. I think this idea has merits but probably needs to be thought through well :)\n\nEdit: The reason this might not be essential is because we could \"emulate\" this behavior by the contract refunding its processing costs before returning. Though that's quite hackish.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174574670/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174575240",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-174575240",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 174575240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDU3NTI0MA==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-25T16:41:00Z",
    "updated_at": "2016-01-25T16:41:00Z",
    "author_association": "MEMBER",
    "body": "Okay @karalabe so what you're saying is that it could choose different members to siphon off of in future calls and build up a kind of debt based system to enable cheaper calls to newcomers of a Dapp? Am I understanding you correctly? Is that the use case you had in mind or ones like it? \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174575240/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174576648",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-174576648",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 174576648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDU3NjY0OA==",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-25T16:44:46Z",
    "updated_at": "2016-01-25T16:44:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've been thinking about this problem for a while and I came up with the following solution. What if the miners maintained a list of contracts that would pay the `COINBASE` if ran with `0` gas price transactions? This would mean that anyone, even if you don't own any ether, you could bootstrap any account (or even run a free service) or any service.\n\nNo need for additional opcodes or alteration to the protocol, just need to persuade miners to run certain \"trusted\" contracts of which they know will pay them regardless of gas price.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174576648/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174577683",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-174577683",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 174577683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDU3NzY4Mw==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-25T16:48:15Z",
    "updated_at": "2016-01-25T16:48:15Z",
    "author_association": "MEMBER",
    "body": "that'll be dangerous if implemented incorrectly...has to be done perfectly. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174577683/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174582450",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-174582450",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 174582450,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDU4MjQ1MA==",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-25T16:58:37Z",
    "updated_at": "2016-01-25T16:58:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@VoR0220 feel free to list your concerns.\n\nOne possible obstacle is if you'd use real ether (i.e. ether from the contract). Please note that it doesn't need to be, it could be anything. It could some pegged (or not) to some (sub)currency. That's the beauty of it all, we can implement whatever we want. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174582450/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174586578",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-174586578",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 174586578,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDU4NjU3OA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-25T17:05:49Z",
    "updated_at": "2016-01-25T17:05:49Z",
    "author_association": "MEMBER",
    "body": "I think that with the abstraction EIP, all miners have to have a whitelist of entry-level contract code (patterns) they want to execute. My guess would be that it is safer to extend this whitelist with patterns like this over time, but it might be that this will not work for all use cases.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174586578/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174586615",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-174586615",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 174586615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDU4NjYxNQ==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-25T17:05:55Z",
    "updated_at": "2016-01-25T17:05:55Z",
    "author_association": "MEMBER",
    "body": "I could even partner up with a mining pool to execute transactions for free to my contract and I'll pay them in cash off Ethereum :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174586615/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174587435",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-174587435",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 174587435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDU4NzQzNQ==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-25T17:07:48Z",
    "updated_at": "2016-01-25T17:09:18Z",
    "author_association": "MEMBER",
    "body": "if my understanding is correct, these trusted contracts would essentially be creating a credit system. If that credit system fails under any circumstance miners get shafted, but remember miners aren't one body coming debating with each other whether or not to raise or accept something from somebody, they are a body of machines just saying we agree that these transactions have been processed and this code has been executed. Per reputation systems, and whether or not to accept certain ones, that could leave a healthy portion of miners getting the shaft in their decision if a large set of miners decide to take on the risk...and should they fail there's an attack on the miners who chose not to take the risk as the losses are effectively socialized. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174587435/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174587917",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-174587917",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 174587917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDU4NzkxNw==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-25T17:08:44Z",
    "updated_at": "2016-01-25T17:08:44Z",
    "author_association": "MEMBER",
    "body": "these are just my ramblings and thoughts currently. If somebody wants to explain how this could be sheltered from this form of attack I'm open to suggestions. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174587917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174601630",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-174601630",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 174601630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDYwMTYzMA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-25T17:52:00Z",
    "updated_at": "2016-01-25T18:09:29Z",
    "author_association": "MEMBER",
    "body": "@VoR0220 it is entirely optional and this behaviour is turned off by default, no need for reputation databases. If the author of the contract deems that certain addresses (knowing by the time of writing the contract, or _programatically_ deciding on what conditions lead to an address earning _trust_) are trustable, it can turn off this feature for calls originating from them.\n\nThe current proposal is that happens via an opcode, e.g. the sender still has to have enough gas to execute the contract up to the point this opcode is executed. No one outside of the contract can execute that opcode on behalf of it and the contract needs to have enough balance to cover it. `PAYGAS` must check that the supplied `limit` exceeds or equals the current balance held by the contract.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174601630/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174602897",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-174602897",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 174602897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDYwMjg5Nw==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-25T17:56:11Z",
    "updated_at": "2016-01-25T17:56:11Z",
    "author_association": "MEMBER",
    "body": "So essentially having it so that rather than the user paying for it out of their account, the contract creates a store of ether, and from there, executes the code from its stockpile rather than the callers account? Is that what you're saying? \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174602897/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174603060",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-174603060",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 174603060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDYwMzA2MA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-25T17:56:44Z",
    "updated_at": "2016-01-25T17:56:44Z",
    "author_association": "MEMBER",
    "body": "@VoR0220 but the contract still has a store of ether, doesn't it? Is that being removed?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174603060/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174603879",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-174603879",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 174603879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDYwMzg3OQ==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-25T17:59:45Z",
    "updated_at": "2016-01-25T17:59:45Z",
    "author_association": "MEMBER",
    "body": "depends. I'd think you'd have to have a special balance tied to contracts that is completely separated from other balances of the contract for these purposes. You don't want contracts suddenly raiding your funds that you've entrusted it with (see modifiers). But I could see that being useful. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174603879/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174604230",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-174604230",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 174604230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDYwNDIzMA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-25T18:01:05Z",
    "updated_at": "2016-01-25T18:01:05Z",
    "author_association": "MEMBER",
    "body": "@VoR0220 that's why the limit must accompany the opcode. It is up to the contract then to decide when and how much limit he gives to a certain incoming transaction.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174604230/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174605278",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-174605278",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 174605278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDYwNTI3OA==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-25T18:04:38Z",
    "updated_at": "2016-01-25T18:04:38Z",
    "author_association": "MEMBER",
    "body": "interesting. But that only accounts for gas costs...you'd still need to put it as its own \"reserve\" so to speak. Or atleast enable ways to sequester that payment ability from other functions of the contract. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/174605278/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/206243714",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-206243714",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 206243714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjI0MzcxNA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-06T09:10:17Z",
    "updated_at": "2016-04-06T09:10:17Z",
    "author_association": "MEMBER",
    "body": "As an intermediate solution, @gavofyork suggested that a contract owner could have:\n- an arrangement with a specific miner to pay the costs through other means (e.g. by paying directly)\n- and setting the gas price to 0\n\nWhile this is definitely doable, it is only a workaround.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/206243714/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/206451675",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-206451675",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 206451675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjQ1MTY3NQ==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-06T16:32:07Z",
    "updated_at": "2016-04-06T16:32:07Z",
    "author_association": "MEMBER",
    "body": "@axic I agree. That sounds like the pain in the dick method. Isn't there a way we could make this a trustless solution? \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/206451675/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/206456365",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-206456365",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 206456365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjQ1NjM2NQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-06T16:38:51Z",
    "updated_at": "2016-04-06T16:41:11Z",
    "author_association": "MEMBER",
    "body": "I still think the original proposal (which might have been slightly misinterpreted) makes sense.\n\nAs a concept take the following Solidity code. It is the fallback function, which is called when no data is being sent (i.e. regular value transfer):\n\n```\ncontract Sample {\n    function() {\n        if (msg.sender == owner) {\n            assembly { paygas(200000) }\n            // do costly housekeeping\n            return\n        }\n\n        // it isn't the owner, but we still do more than 21000 gas worth of execution\n        // and lets cover the difference, but only if there's meaningful value being sent\n        if (msg.value > 2 eth) {\n            assembly { paygas(20000) }\n            // do something\n        }\n    }\n}\n```\n\nThe above code could also decide to use different gas values based on what gas limit was provided by the caller. If paygas > totalgas, that means the contract is paying in full.\n\nIt also means that there must be enough gas limit supplied to reach and execute the code until and including the `paygas` instruction.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/206456365/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/206490903",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-206490903",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 206490903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjQ5MDkwMw==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-06T18:01:26Z",
    "updated_at": "2016-04-06T18:01:26Z",
    "author_association": "MEMBER",
    "body": "I completely agree. I think this should be doable. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/206490903/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/221930297",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-221930297",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 221930297,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTkzMDI5Nw==",
    "user": {
      "login": "gavofyork",
      "id": 138296,
      "node_id": "MDQ6VXNlcjEzODI5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/138296?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavofyork",
      "html_url": "https://github.com/gavofyork",
      "followers_url": "https://api.github.com/users/gavofyork/followers",
      "following_url": "https://api.github.com/users/gavofyork/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavofyork/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavofyork/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavofyork/subscriptions",
      "organizations_url": "https://api.github.com/users/gavofyork/orgs",
      "repos_url": "https://api.github.com/users/gavofyork/repos",
      "events_url": "https://api.github.com/users/gavofyork/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavofyork/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T16:55:40Z",
    "updated_at": "2016-05-26T16:55:40Z",
    "author_association": "MEMBER",
    "body": "main issue with this is putting 10 ether in a contract and sending a tx that runs:\n\n`function() { paygas(10 ether); while (true) {} }`\n\nit will run OOG only after 4.7m (or whatever block gas limit is) of miner compute time is spent, yet nobody will end up paying anything since it'll be reverted.\n\nbasically, PAYGAS needs checkpointing to work safely.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/221930297/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/221989887",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-221989887",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 221989887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTk4OTg4Nw==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T20:47:57Z",
    "updated_at": "2016-05-26T20:47:57Z",
    "author_association": "MEMBER",
    "body": "Well that's to be expected, yes. Any other specifics you might have in mind? \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/221989887/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/228206616",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-228206616",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 228206616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODIwNjYxNg==",
    "user": {
      "login": "Frostcoin",
      "id": 11727824,
      "node_id": "MDQ6VXNlcjExNzI3ODI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/11727824?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Frostcoin",
      "html_url": "https://github.com/Frostcoin",
      "followers_url": "https://api.github.com/users/Frostcoin/followers",
      "following_url": "https://api.github.com/users/Frostcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/Frostcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Frostcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Frostcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/Frostcoin/orgs",
      "repos_url": "https://api.github.com/users/Frostcoin/repos",
      "events_url": "https://api.github.com/users/Frostcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Frostcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-23T22:37:12Z",
    "updated_at": "2016-06-23T22:37:12Z",
    "author_association": "NONE",
    "body": "I'm also running into this issue.\nI basically need a contract that automatically sends deposits to other (unchangeable) accounts automatically. The deposits come from mining pools so from what i heard there is no way to be sure they pay enough gas to initiate the contract thus making it practically impossible to automatically split mining revenues without manual interaction. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/228206616/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/387552005",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-387552005",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 387552005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzU1MjAwNQ==",
    "user": {
      "login": "igorbarbashin",
      "id": 1911427,
      "node_id": "MDQ6VXNlcjE5MTE0Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1911427?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/igorbarbashin",
      "html_url": "https://github.com/igorbarbashin",
      "followers_url": "https://api.github.com/users/igorbarbashin/followers",
      "following_url": "https://api.github.com/users/igorbarbashin/following{/other_user}",
      "gists_url": "https://api.github.com/users/igorbarbashin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/igorbarbashin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/igorbarbashin/subscriptions",
      "organizations_url": "https://api.github.com/users/igorbarbashin/orgs",
      "repos_url": "https://api.github.com/users/igorbarbashin/repos",
      "events_url": "https://api.github.com/users/igorbarbashin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/igorbarbashin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-08T21:43:27Z",
    "updated_at": "2018-05-08T21:45:05Z",
    "author_association": "NONE",
    "body": "I believe the contract-sponsored transactions will have an enormous impact on overall user experience and can potentially widen the Ethereum adoption. As you don't have to have ETH to call certain methods in the contract if your address is white-listed in the contract.\r\n\r\nI'm still a noob in Ethereum, so please tell me if the following proposal is possible. Essentially it is an incentive model for miners to include zero-gas-price transactions in a block.\r\nThis solution doesn't require a separate opcode.\r\n\r\n1. An end user creates a transaction with proper gas amount and zero gas price (`tx1`)\r\n2. The miner doesn't discard the transaction but checks if the contract the transaction is calling has a predefined `rebate` function and checks if conditions are met to get a refund\r\n3. The miner creates a new transaction (`tx2`) that calls the `rebate` function (the arguments are the hash of `tx1` and miner's address)\r\n4. The miner includes both `tx1` and `tx2` in the block\r\n\r\nIs it possible in theory?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/387552005/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/461377785",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-461377785",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 461377785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTM3Nzc4NQ==",
    "user": {
      "login": "Gurkirat2210",
      "id": 17565979,
      "node_id": "MDQ6VXNlcjE3NTY1OTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/17565979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gurkirat2210",
      "html_url": "https://github.com/Gurkirat2210",
      "followers_url": "https://api.github.com/users/Gurkirat2210/followers",
      "following_url": "https://api.github.com/users/Gurkirat2210/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gurkirat2210/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gurkirat2210/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gurkirat2210/subscriptions",
      "organizations_url": "https://api.github.com/users/Gurkirat2210/orgs",
      "repos_url": "https://api.github.com/users/Gurkirat2210/repos",
      "events_url": "https://api.github.com/users/Gurkirat2210/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gurkirat2210/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-07T11:10:47Z",
    "updated_at": "2019-02-07T11:11:47Z",
    "author_association": "NONE",
    "body": "This is exactly what I was thinking, i.e to charge user a fixed cost for services, and price services as per custom business model instead of data and execution cost. The contract will be responsible for managing transaction cost. The difference between cost charged and spent will be profit. \r\n\r\nThis also encourages devs to design optimal contracts to maximise gains",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/461377785/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1014301062",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-1014301062",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 1014301062,
    "node_id": "IC_kwDOAq426M48dQGG",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-17T09:17:52Z",
    "updated_at": "2022-01-17T09:17:52Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1014301062/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1025576365",
    "html_url": "https://github.com/ethereum/EIPs/issues/61#issuecomment-1025576365",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/61",
    "id": 1025576365,
    "node_id": "IC_kwDOAq426M49IQ2t",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-31T10:14:00Z",
    "updated_at": "2022-01-31T10:14:00Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1025576365/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
