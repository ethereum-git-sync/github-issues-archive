{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/1631",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/1631/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/1631/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/1631/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/1631",
  "id": 386302372,
  "node_id": "MDU6SXNzdWUzODYzMDIzNzI=",
  "number": 1631,
  "title": "ERC 1630 Discussion",
  "user": {
    "login": "matthewjablack",
    "id": 5362629,
    "node_id": "MDQ6VXNlcjUzNjI2Mjk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5362629?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/matthewjablack",
    "html_url": "https://github.com/matthewjablack",
    "followers_url": "https://api.github.com/users/matthewjablack/followers",
    "following_url": "https://api.github.com/users/matthewjablack/following{/other_user}",
    "gists_url": "https://api.github.com/users/matthewjablack/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/matthewjablack/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/matthewjablack/subscriptions",
    "organizations_url": "https://api.github.com/users/matthewjablack/orgs",
    "repos_url": "https://api.github.com/users/matthewjablack/repos",
    "events_url": "https://api.github.com/users/matthewjablack/events{/privacy}",
    "received_events_url": "https://api.github.com/users/matthewjablack/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2018-11-30T18:36:05Z",
  "updated_at": "2022-06-03T23:02:54Z",
  "closed_at": "2022-06-03T23:02:54Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "---\r\neip: 1630\r\ntitle: Hashed Time-Locked Contracts\r\nauthor: Matthew Black <matthew.black@consensys.net>, TingWei Liu <ting.liu@consensys.net>, Liquality Team <info@liquality.io>\r\nstatus: Draft\r\ndiscussions-to: https://github.com/ethereum/EIPs/issues/1631\r\ntype: Standards Track\r\ncategory: ERC\r\ncreated: 2018-11-28\r\n---\r\n\r\n## Simple Summary\r\n\r\nA standard EVM script for generalized payments that acknowledges receiving the payment prior to a deadline.\r\n\r\n## Abstract\r\n\r\nA Hashed Time-Lock Contract (HTLC) is a script that permits a designated party (the \"seller\") to spend funds by disclosing the preimage of a hash. It also permits a second party (the \"buyer\") to spend the funds after a timeout is reached, in a refund situation.\r\n\r\n## Motivation\r\n\r\nHTLC transactions are a safe and cheap method of exchanging secrets for money over the blockchain, due to the ability to recover funds from an uncooperative counterparty, and the opportunity that the possessor of a secret has to receive the funds before such a refund can occur.\r\n\r\nHTLC's enable cross-chain [atomic swaps](https://en.bitcoin.it/wiki/Atomic_swap)\r\n\r\n## Definitions\r\n\r\n`msg.sender`: is always the address where the current (external) function call came from.\r\n`buyer`: entity that receives funds from `seller` once the `seller` reveals the `secret`\r\n`seller`: entity that contributes funds to the `buyer` by revealing the `secret` or refunds after `expiration`\r\n`secret`: random number chosen by the `seller`, revealed to allow the `buyer` to redeem the funds\r\n`secretHash`: hash of the `secret`, used in the construction of HTLC\r\n`expiration`: timestamp the determines when `seller` and `buyer` can redeem\r\n`now`: current block timestamp\r\n\r\n## Specification\r\n\r\n### Constructor\r\n\r\nThe `msg.sender`, transfers funds to the smart contract while deploying\r\n\r\n```solidity\r\nconstructor (bytes32 _secretHash, uint256 _expiration, address _buyer) public payable;\r\n```\r\n\r\n### Methods\r\n\r\n#### claim\r\n\r\nThe `msg.sender`, transfer funds from the contract to the `buyer`\r\n\r\nSHOULD throw if hash of `secret`\r\n\r\nSHOULD throw if `now` is greater than `expiration`\r\n\r\nNote `secret` can be any bytesize, but that should be specified by the two parties before the HTLC is initiated. The recommended size is 32 bytes\r\n\r\n```solidity\r\nfunction claim (bytes32 _secret) public;\r\n```\r\n\r\n#### refund\r\n\r\nThe `msg.sender`, transfer funds from the contract to the `seller`\r\n\r\nSHOULD throw if `now` less than or equal to `expiration`\r\n\r\n```solidity\r\nfunction refund () public;\r\n```\r\n\r\n## Backwards Compatibility\r\n\r\nERC-1630 is compatible with [BIP 199](https://github.com/bitcoin/bips/blob/master/bip-0199.mediawiki) for [atomic swaps](https://en.bitcoin.it/wiki/Atomic_swap) with Bitcoin and other HTLC compatible chains.\r\n\r\n## Implementation\r\n\r\nThis implementation is a simple example of a HTLC using Solidity\r\n\r\n```solidity\r\npragma solidity ^0.5.10;\r\n\r\ncontract ETHSwap {\r\n  bytes32 secretHash;\r\n  uint256 expiration;\r\n  address buyer;\r\n  address seller;\r\n\r\n  constructor (bytes32 _secretHash, uint256 _expiration, address _buyer) public payable {\r\n    secretHash = _secretHash;\r\n    expiration = _expiration;\r\n    buyer = _buyer;\r\n    seller = msg.sender;\r\n  }\r\n\r\n  function claim (bytes32 _secret) public {\r\n    require(sha256(abi.encodePacked(_secret)) == secretHash);\r\n    require(now <= expiration);\r\n    buyer.transfer(address(this).balance);\r\n  }\r\n\r\n  function refund () public {\r\n    require(now > expiration);\r\n    seller.transfer(address(this).balance);\r\n  }\r\n}\r\n```\r\n\r\nNote other hash functions can also be used, such as `keccak256`, `ripemd160`. However both parties should specify the hash function to be used before the HTLC is initialized. \r\n\r\nAlso if the HTLC is being used for the purpose of atomic swaps, both parties should ensure that the hash function specified is available on both chains (i.e. `keccak256` is not available on Bitcoin)\r\n\r\n## Optimized Implementation\r\n\r\nThis is an optimized HTLC with significant gas saving features\r\n\r\n[Liquality Atomic Swaps](https://github.com/liquality/chainabstractionlayer/blob/dev/packages/ethereum-swap-provider/lib/EthereumSwapProvider.ts#L27)\r\n\r\n```\r\n// Constructor\r\nPUSH1 {contractSize}\r\nDUP1\r\nPUSH1 0b\r\nPUSH1 00\r\nCODECOPY\r\nPUSH1 00\r\nRETURN\r\n\r\n// Contract\r\nPUSH1 20\r\n\r\n// Get secret\r\nDUP1\r\nPUSH1 00\r\nDUP1\r\nCALLDATACOPY\r\n\r\n// SHA256\r\nPUSH1 21\r\nDUP2\r\nPUSH1 00\r\nDUP1\r\nPUSH1 02\r\nPUSH ffff // gas units for sha256 execution\r\nCALL\r\n\r\n// Validate input size\r\nCALLDATASIZE\r\nPUSH1 20 // (32 bytes)\r\nEQ\r\nAND // (input valid size AND sha256 success)\r\n\r\n// Validate with secretHash\r\nPUSH32 {secretHashEncoded}\r\nPUSH1 21\r\nMLOAD\r\nEQ\r\nAND // (input valid size AND sha256 success) AND secret valid\r\n// Redeem if secret is valid\r\nPUSH1 {redeemDestination}\r\nJUMPI\r\n\r\n// Validate input size\r\nCALLDATASIZE\r\nISZERO // (input empty)\r\n// Check time lock\r\nPUSH5 {expirationEncoded}\r\nTIMESTAMP\r\nGT\r\nAND // (input size 0 AND time lock expired)\r\n// Refund if timelock passed\r\nPUSH1 {refundDestination}\r\n\r\nINVALID\r\n\r\nJUMPDEST\r\n// emit Claim(bytes32 _secret)\r\nPUSH32 8c1d64e3bd87387709175b9ef4e7a1d7a8364559fc0e2ad9d77953909a0d1eb3 // topic Keccak-256(Claim(bytes32))\r\nPUSH1 20 // (log length - 32)\r\nPUSH1 00 // (log offset - 0)\r\nLOG 1\r\nPUSH20 {recipientAddressEncoded}\r\nSELF-DESTRUCT\r\n\r\nJUMPDEST\r\n// emit Refund()\r\nPUSH32 5d26862916391bf49478b2f5103b0720a842b45ef145a268f2cd1fb2aed55178 // topic Keccak-256(Refund())\r\nPUSH1 00 // (log length - 0)\r\nDUP 1 // (log offset)\r\nLOG 1\r\nPUSH20 {refundAddressEncoded}\r\nSELF-DESTRUCT\r\n```\r\n\r\n### Optimized Implementation Definitions\r\n\r\n#### dataSize\r\n\r\n`112` +  expiration size\r\n\r\n`112` is the size of the contract in bytes after the constructor\r\n\r\n#### secretHash\r\n\r\nhash of secret generated by seller\r\n\r\n#### redeemDestination\r\n\r\n66 + expiration size\r\n\r\n66 is the number of bytes between Contract and Redeem self destruct\r\n\r\n#### refundDestination\r\n\r\n89 + expiration size\r\n\r\n89 is the number of bytes between Contract and Refund self destruct\r\n\r\n#### expirationSize\r\n\r\nbytecode length of expiration \r\n\r\n#### expiration\r\n\r\nexpiration time encoded hex\r\n\r\n#### recipientAddress\r\n\r\nbuyer address\r\n \r\n#### refundAddress\r\n\r\nseller address\r\n\r\n***\r\n\r\n### Optimized Implementation Rationale\r\n\r\n#### Constructor\r\n\r\ndeploys the contract, using the datasize which is the bytecode size of the rest of the contract\r\n\r\n#### Contract\r\n\r\ncompute (Keccak-256) hash of contract address\r\n\r\n#### Get secret\r\n\r\ncopy input data of secret in the current environment to memory\r\n\r\n#### SHA 256\r\n\r\nhashes the secret in memory\r\n\r\n#### Validate with SecretHash\r\n\r\nchecks if secretHash is equal to hash of secret provided\r\n\r\n#### Redeem if secret is valid\r\n\r\njump to the redeem self destruct section of the contract\r\n\r\n#### Check timelock\r\n\r\ncheck block's timestamp is greater than expiration\r\n\r\n#### Refund if timelock passed\r\n\r\njump to the refund self destruct section of the contract\r\n\r\n#### Redeem self destruct\r\n\r\npushes buyer address to the stack, which is passed to SELFDESTRUCT which sends funds to the buyer, and destroys the contract\r\n\r\n#### Refund self destruct\r\n\r\npushes seller address to the stack, which is passed to SELFDESTRUCT which sends funds to the seller, and destroys the contractal\r\n\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).\r\n",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/1631/reactions",
    "total_count": 4,
    "+1": 4,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/1631/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/465125664",
    "html_url": "https://github.com/ethereum/EIPs/issues/1631#issuecomment-465125664",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1631",
    "id": 465125664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTEyNTY2NA==",
    "user": {
      "login": "monokh",
      "id": 11529637,
      "node_id": "MDQ6VXNlcjExNTI5NjM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/11529637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/monokh",
      "html_url": "https://github.com/monokh",
      "followers_url": "https://api.github.com/users/monokh/followers",
      "following_url": "https://api.github.com/users/monokh/following{/other_user}",
      "gists_url": "https://api.github.com/users/monokh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/monokh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/monokh/subscriptions",
      "organizations_url": "https://api.github.com/users/monokh/orgs",
      "repos_url": "https://api.github.com/users/monokh/repos",
      "events_url": "https://api.github.com/users/monokh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/monokh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-19T13:22:14Z",
    "updated_at": "2019-02-19T13:22:14Z",
    "author_association": "NONE",
    "body": "I have a suggestion for the optimised version of the contract.\r\n\r\nReplace the `STOP` opcode with `INVALID`\r\n\r\nReasoning: In the case of the solidity implementation, a failed call to `claim` or `expired` will cause the transaction to fail. This is useful as it gives a very clean indication (via the status of the transaction) if a claim or refund has been successful. Using the bytecode implementation, the following scenarios still result in a successful transaction which make it difficult to derive easily whether the transaction was valid or not:\r\n\r\n- Non matching secret\r\n- Refund before expiration ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/465125664/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/467246378",
    "html_url": "https://github.com/ethereum/EIPs/issues/1631#issuecomment-467246378",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1631",
    "id": 467246378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzI0NjM3OA==",
    "user": {
      "login": "matthewjablack",
      "id": 5362629,
      "node_id": "MDQ6VXNlcjUzNjI2Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5362629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthewjablack",
      "html_url": "https://github.com/matthewjablack",
      "followers_url": "https://api.github.com/users/matthewjablack/followers",
      "following_url": "https://api.github.com/users/matthewjablack/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthewjablack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewjablack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewjablack/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewjablack/orgs",
      "repos_url": "https://api.github.com/users/matthewjablack/repos",
      "events_url": "https://api.github.com/users/matthewjablack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewjablack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-26T00:51:02Z",
    "updated_at": "2019-02-26T00:51:02Z",
    "author_association": "NONE",
    "body": "Great suggestion @monokh. Added the necessary changes to `ERC 1630`. \r\n\r\nAlso fixed an implementation typo, where ` function claim (bytes32 _secretHash) public` should've been ` function claim (bytes32 _secret) public` as well as bytecode `57` which should be `JUMPI`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/467246378/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/758057333",
    "html_url": "https://github.com/ethereum/EIPs/issues/1631#issuecomment-758057333",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1631",
    "id": 758057333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODA1NzMzMw==",
    "user": {
      "login": "monokh",
      "id": 11529637,
      "node_id": "MDQ6VXNlcjExNTI5NjM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/11529637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/monokh",
      "html_url": "https://github.com/monokh",
      "followers_url": "https://api.github.com/users/monokh/followers",
      "following_url": "https://api.github.com/users/monokh/following{/other_user}",
      "gists_url": "https://api.github.com/users/monokh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/monokh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/monokh/subscriptions",
      "organizations_url": "https://api.github.com/users/monokh/orgs",
      "repos_url": "https://api.github.com/users/monokh/repos",
      "events_url": "https://api.github.com/users/monokh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/monokh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-11T16:11:59Z",
    "updated_at": "2021-01-11T16:11:59Z",
    "author_association": "NONE",
    "body": "We made another amendment to the bytecode contract that fixes the expiration size and as a result also the size of the contract in total. This makes it less error prone and easier to parse.\r\n\r\nSee: https://github.com/liquality/chainabstractionlayer/blob/dev/packages/ethereum-swap-provider/lib/EthereumSwapProvider.js#L45",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/758057333/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974757135",
    "html_url": "https://github.com/ethereum/EIPs/issues/1631#issuecomment-974757135",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1631",
    "id": 974757135,
    "node_id": "IC_kwDOAq426M46GZ0P",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-11-21T05:10:00Z",
    "updated_at": "2021-11-21T05:10:00Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974757135/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974890662",
    "html_url": "https://github.com/ethereum/EIPs/issues/1631#issuecomment-974890662",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1631",
    "id": 974890662,
    "node_id": "IC_kwDOAq426M46G6am",
    "user": {
      "login": "matthewjablack",
      "id": 5362629,
      "node_id": "MDQ6VXNlcjUzNjI2Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5362629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthewjablack",
      "html_url": "https://github.com/matthewjablack",
      "followers_url": "https://api.github.com/users/matthewjablack/followers",
      "following_url": "https://api.github.com/users/matthewjablack/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthewjablack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewjablack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewjablack/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewjablack/orgs",
      "repos_url": "https://api.github.com/users/matthewjablack/repos",
      "events_url": "https://api.github.com/users/matthewjablack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewjablack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-21T20:28:56Z",
    "updated_at": "2021-11-21T20:28:56Z",
    "author_association": "NONE",
    "body": "> We made another amendment to the bytecode contract that fixes the expiration size and as a result also the size of the contract in total. This makes it less error prone and easier to parse.\r\n\r\nUpdated bytecode contract with fixed expiration size\r\n\r\nhttps://github.com/liquality/chainabstractionlayer/blob/dev/packages/ethereum-swap-provider/lib/EthereumSwapProvider.ts#L27",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974890662/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1133420785",
    "html_url": "https://github.com/ethereum/EIPs/issues/1631#issuecomment-1133420785",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1631",
    "id": 1133420785,
    "node_id": "IC_kwDOAq426M5DjqDx",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-05-20T22:02:50Z",
    "updated_at": "2022-05-20T22:02:50Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1133420785/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1146438567",
    "html_url": "https://github.com/ethereum/EIPs/issues/1631#issuecomment-1146438567",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1631",
    "id": 1146438567,
    "node_id": "IC_kwDOAq426M5EVUOn",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-06-03T23:02:53Z",
    "updated_at": "2022-06-03T23:02:53Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1146438567/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
