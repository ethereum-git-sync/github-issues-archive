{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/1200",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/1200/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/1200/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/1200/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/1200",
  "id": 338841320,
  "node_id": "MDU6SXNzdWUzMzg4NDEzMjA=",
  "number": 1200,
  "title": "ERC-1200 (ERC extension)",
  "user": {
    "login": "techracers-blockchain",
    "id": 39080477,
    "node_id": "MDQ6VXNlcjM5MDgwNDc3",
    "avatar_url": "https://avatars.githubusercontent.com/u/39080477?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/techracers-blockchain",
    "html_url": "https://github.com/techracers-blockchain",
    "followers_url": "https://api.github.com/users/techracers-blockchain/followers",
    "following_url": "https://api.github.com/users/techracers-blockchain/following{/other_user}",
    "gists_url": "https://api.github.com/users/techracers-blockchain/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/techracers-blockchain/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/techracers-blockchain/subscriptions",
    "organizations_url": "https://api.github.com/users/techracers-blockchain/orgs",
    "repos_url": "https://api.github.com/users/techracers-blockchain/repos",
    "events_url": "https://api.github.com/users/techracers-blockchain/events{/privacy}",
    "received_events_url": "https://api.github.com/users/techracers-blockchain/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2018-07-06T07:55:51Z",
  "updated_at": "2021-12-19T02:03:21Z",
  "closed_at": "2021-12-19T02:03:21Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "> ERC: \r\n> Title: Token standard\r\n> Author: Techracers\r\n> Status: Draft\r\n> Type: ERC-1200\r\n> Created: 7-06.2018\r\n> Recommended implementation: https://github.com/techracers-blockchain/UIP2.2\r\n\r\n## Abstract\r\nToken contract usually have a monolithic design that is not friendly to upgrades. The following proposal describes a more distributed token contract architecture that has a simple upgrade-ability protocol and allows to bring in new functions after being deployed.\r\n\r\n## Motivation\r\nThere have been countless number of tokens where due to the inability to upgrade and fix bugs, contract holders have lost millions of dollars. A simple bug that might take days, months, or years to solve, can be solved simply and quickly using the ERC-1200 standard.\r\n\r\nThere exist approaches that includes an upgrade agent, which has its own limitations and restrictions and sometimes might not lead to a successful upgrade implementation. It has to include all token holders, and might cost a lot.\r\n\r\nIf there is a simple bug that was left out during the deployment of a token contract, it might result in the loss of millions of dollars. There have been a number of token contracts owners, who have come to us after the token sale with bugs that have no workaround but to cost a lot of time and money. If instead, we had an upgrade-ability protocol that allows rapid fast upgrades at low cost, such accidents can be rectified.\r\n\r\nThis will allow contracts to pause and handle bugs and allow them to fix bugs or upgrade the ERC standard to a newer one.\r\nThis standard has the ability to be cross compatible with any other monolithic ERC interface like the ERC20, ERC223, ERC721, ERC827 etc.\r\n\r\n## Specification\r\nThe following Upgradeable Token approach requires\r\n\t\r\n- a DataCentre contract that has a few sets of getter setter methods that allows us to keep the data at a separate location, to store all data. \r\n- a ControlCentre contract that contains all the logic pertaining to the functions\t\r\n-  a skeletal token contract that forwards all the calls to the control centre.\r\n\r\nThe ControlCentre is the brains of this architecture and it interacts mediates between the token and the data centre.\r\n\r\n## Methods\r\nAll of the ERC20 functions remain the same in essence. The token contract forwards all the calls to the control centre, which in turn writes all the data to the into our DataCentre.\r\n\r\nAll the calls fetch data from the DataCentre, the supporting DataCentre and ControlCentre function is written below each call-\r\n\r\n**totalSupply**\r\n_Token-_\r\n\r\n```\r\nfunction totalSupply() public constant returns (uint256) {\r\n        return ControlCentreInterface(owner).totalSupply();\r\n}\r\n```\r\nControlCentre-_\r\n\r\n```\r\nfunction totalSupply() public constant returns (uint256) {\r\n\treturn DataCentre(dataCentreAddr).getValue(\"STK\", \"totalSupply\");\r\n}\r\n```\r\n\r\n_DataCentre-_\r\n\r\n```\r\nfunction getValue(bytes32 _container, bytes32 _key) public {\r\n\tcontainers[_container].values[_key] = _value;\r\n}\r\n```\r\n\r\n**balanceOf(address)**\r\n\r\nGet the account balance of another account with address _owner\r\n\r\n_Token-_\r\n\r\n```\r\nfunction balanceOf(address _owner) public constant returns (uint256) {\r\n        return ControlCentreInterface(owner).balanceOf(_owner);\r\n}\r\n```\r\n_ControlCentre-_\r\n\r\n```\r\nfunction balanceOf(address _owner) public constant returns (uint256) {\r\n\treturn DataCentre(dataCentreAddr).getBalanace(\"STK\", _owner);\r\n}\r\n```\r\n\r\n_DataCentre-_\r\n\r\n```\r\nfunction getBalance(bytes32 _container, address _key) public constant returns(uint256) {\r\n\treturn containers[_container].balances[_key];\r\n}\r\n```\r\n\r\n**transfer(address, uint)**\r\n_Token-_\r\n\r\n```\r\nfunction transfer(address to, uint value, bytes data) public returns (bool) {\r\n        ControlCentreInterface(owner).transfer(msg.sender, to, value, data);\r\n        Transfer(msg.sender, to, value);\r\n        return true;\r\n}\r\n```\r\n_ControlCentre-_ \r\n\r\n```\r\nfunction _transfer(address _from, address _to, uint256 _amount, bytes _data) internal {\r\n        require(_to != address(this));\r\n        require(_to != address(0));\r\n        require(_amount > 0);\r\n        require(_from != _to);\r\n        _setBalanceOf(_from, balanceOf(_from).sub(_amount));\r\n        _setBalanceOf(_to, balanceOf(_to).add(_amount));\r\n}\r\n```\r\n\r\n_Internal Function-_\r\n\r\n```\r\nfunction _setBalanceOf(address _owner, uint256 _newValue) internal {\r\n        DataCentre(dataCentreAddr).setBalanace(\"STK\", _owner, _newValue);\r\n}\r\n```\r\n\r\n_DataCentre-_\r\n\r\n```\r\nfunction setBalance(bytes32 _container, address _key, uint256 _value) public onlyOwner {\r\n\tcontainers[_container].balances[_key] = _value;\r\n}\r\n\r\n```\r\nThe owner of the DataCentre and the Token contract is always the ControlCentre contract.\r\n\r\n## Upgradeability Protocol\r\n\r\nThe token contract has some simple measures through which an upgrade can be made in just 2 transactions-\r\n\r\n1. Deploy new ControlCentre contract\r\n2. Kill the old ControlCentre contract.\r\n\r\nThe kill function looks like below-\r\n```\r\n\r\nfunction kill(address _newController) public onlyAdmins whenPaused(address(0)) {\r\n        if (dataCentreAddr != address(0)) {\r\n            Ownable(dataCentreAddr).transferOwnership(_newController);\r\n        }\r\n\r\n        if (satellite != address(0)) {\r\n            Ownable(satellite).transferOwnership(_newController);\r\n        }\r\n\r\n        selfdestruct(_newController);\r\n}\r\n```\r\n\r\n## Recommended implementation\r\nThis is highly recommended implementation of this token:\r\n[https://github.com/techracers-blockchain/ERC-1200](https://github.com/techracers-blockchain/ERC-1200)\r\n\r\n",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/1200/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/1200/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/408555228",
    "html_url": "https://github.com/ethereum/EIPs/issues/1200#issuecomment-408555228",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1200",
    "id": 408555228,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODU1NTIyOA==",
    "user": {
      "login": "PhABC",
      "id": 9306422,
      "node_id": "MDQ6VXNlcjkzMDY0MjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9306422?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PhABC",
      "html_url": "https://github.com/PhABC",
      "followers_url": "https://api.github.com/users/PhABC/followers",
      "following_url": "https://api.github.com/users/PhABC/following{/other_user}",
      "gists_url": "https://api.github.com/users/PhABC/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PhABC/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PhABC/subscriptions",
      "organizations_url": "https://api.github.com/users/PhABC/orgs",
      "repos_url": "https://api.github.com/users/PhABC/repos",
      "events_url": "https://api.github.com/users/PhABC/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PhABC/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-27T22:34:12Z",
    "updated_at": "2018-07-27T22:34:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Interesting, but why does this need to be a \"standard\" per say? How does standardization of this process benefit the community versus having independent upgradability pattern?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/408555228/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986151776",
    "html_url": "https://github.com/ethereum/EIPs/issues/1200#issuecomment-986151776",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1200",
    "id": 986151776,
    "node_id": "IC_kwDOAq426M46x3tg",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-05T02:02:01Z",
    "updated_at": "2021-12-05T02:02:01Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986151776/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997315882",
    "html_url": "https://github.com/ethereum/EIPs/issues/1200#issuecomment-997315882",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1200",
    "id": 997315882,
    "node_id": "IC_kwDOAq426M47cdUq",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-19T02:03:20Z",
    "updated_at": "2021-12-19T02:03:20Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997315882/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
