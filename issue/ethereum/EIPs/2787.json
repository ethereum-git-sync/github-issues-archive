{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/2787",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2787/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2787/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2787/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/2787",
  "id": 657049056,
  "node_id": "MDU6SXNzdWU2NTcwNDkwNTY=",
  "number": 2787,
  "title": "Discussion for EIP-2786: Ethereum Provider Connect/Disconnect Events",
  "user": {
    "login": "MicahZoltu",
    "id": 886059,
    "node_id": "MDQ6VXNlcjg4NjA1OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MicahZoltu",
    "html_url": "https://github.com/MicahZoltu",
    "followers_url": "https://api.github.com/users/MicahZoltu/followers",
    "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
    "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
    "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
    "repos_url": "https://api.github.com/users/MicahZoltu/repos",
    "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2020-07-15T04:22:48Z",
  "updated_at": "2022-04-23T09:53:40Z",
  "closed_at": "2020-11-06T04:57:23Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "When an Ethereum Provider becomes connected or disconnected, it will emit a `connect`/`disconnect` event.",
  "closed_by": {
    "login": "MicahZoltu",
    "id": 886059,
    "node_id": "MDQ6VXNlcjg4NjA1OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MicahZoltu",
    "html_url": "https://github.com/MicahZoltu",
    "followers_url": "https://api.github.com/users/MicahZoltu/followers",
    "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
    "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
    "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
    "repos_url": "https://api.github.com/users/MicahZoltu/repos",
    "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/2787/reactions",
    "total_count": 3,
    "+1": 1,
    "-1": 0,
    "laugh": 2,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/2787/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/662787717",
    "html_url": "https://github.com/ethereum/EIPs/issues/2787#issuecomment-662787717",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2787",
    "id": 662787717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2Mjc4NzcxNw==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-23T02:18:10Z",
    "updated_at": "2020-07-23T02:18:10Z",
    "author_association": "MEMBER",
    "body": "@rekmarks Would be great to get a review of this before last call ends to make sure it aligns with MetaMask's implementation.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/662787717/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/667457108",
    "html_url": "https://github.com/ethereum/EIPs/issues/2787#issuecomment-667457108",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2787",
    "id": 667457108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzQ1NzEwOA==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-01T02:49:43Z",
    "updated_at": "2020-08-01T02:49:43Z",
    "author_association": "MEMBER",
    "body": "I think we should remove the `chainId` from this event.  If a provider supports multiple chains, and it connects to them in parallel, then this event will be fired for a random chain and will not be fired for any other chains.  This makes relying on this event a bad idea, yet it is a trap that I suspect almost every dapp developer will fall into.  Instead, we should have a separate event for `chainConnected` and `chainDisconnected` or we should update this spec such that `connected` and `disconnected` are called once for every chain that a provider connects to/disconnects from and the `chainId` would be included in both `connected` and `disconnected`.\r\n\r\nAt the moment, I'm struggling to understand how this event is useful.  You could get a `connected` event for `chainId` `1` and then connect to `chainId` `2` but not receive an event for it, then disconnect from `chainId` `1` without receiving an event for it.  As currently designed, I don't think any dapp should subscribe to this event because it simply doesn't give them enough information to do anything useful.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/667457108/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/674961015",
    "html_url": "https://github.com/ethereum/EIPs/issues/2787#issuecomment-674961015",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2787",
    "id": 674961015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDk2MTAxNQ==",
    "user": {
      "login": "rekmarks",
      "id": 25517051,
      "node_id": "MDQ6VXNlcjI1NTE3MDUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25517051?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rekmarks",
      "html_url": "https://github.com/rekmarks",
      "followers_url": "https://api.github.com/users/rekmarks/followers",
      "following_url": "https://api.github.com/users/rekmarks/following{/other_user}",
      "gists_url": "https://api.github.com/users/rekmarks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rekmarks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rekmarks/subscriptions",
      "organizations_url": "https://api.github.com/users/rekmarks/orgs",
      "repos_url": "https://api.github.com/users/rekmarks/repos",
      "events_url": "https://api.github.com/users/rekmarks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rekmarks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-17T15:50:54Z",
    "updated_at": "2020-08-17T15:50:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "I believe the original intention of this event was to cover cases when providers become disconnected from their RPC endpoints / whatever APIs they're using to communicate with the blockchain. The `chainId` was tacked on as an afterthought.\r\n\r\nGiven the points you've raised, I'm not against removing the `chainId` from the spec, and just referring to `chainChanged` for that. Indeed, MetaMask already emits `chainChanged` when a chain is first connected, making a `chainId` on `connect` redundant. Whether we need the event at all is a different question.\r\n\r\nThere's some previous discussion about this on the [1193 discussion issue](https://github.com/ethereum/EIPs/issues/2319). @alcuadrado [noted that some providers \"need\" `connect`/`disconnect` methods](https://github.com/ethereum/EIPs/issues/2319#issuecomment-544795458) (previously called `open`/`close`). I weighed in on the matter [here](https://github.com/ethereum/EIPs/issues/2319#issuecomment-561028949), referencing a PR by @pedrouid.\r\n\r\nIIRC, the `connect`/`disconnect` events were intended to be paired with the corresponding methods. If the consumers can cause the provider to become connected or disconnected, we can imagine that the provider can become connected or disconnected for reasons beyond the consumer's control. Hence the need for the events for such providers.\r\n\r\nSimilar to what I said in my comment on the 1193 issue, the only time MetaMask is not connected is if the user's network is down. I think most providers are \"connected\" in this way. That said, it's certainly possible that the RPC endpoint / blockchain API provider goes down without the user's Internet connection also going down. The question is, do we want events to cover that case?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/674961015/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/674967922",
    "html_url": "https://github.com/ethereum/EIPs/issues/2787#issuecomment-674967922",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2787",
    "id": 674967922,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDk2NzkyMg==",
    "user": {
      "login": "pedrouid",
      "id": 10136079,
      "node_id": "MDQ6VXNlcjEwMTM2MDc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/10136079?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pedrouid",
      "html_url": "https://github.com/pedrouid",
      "followers_url": "https://api.github.com/users/pedrouid/followers",
      "following_url": "https://api.github.com/users/pedrouid/following{/other_user}",
      "gists_url": "https://api.github.com/users/pedrouid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pedrouid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pedrouid/subscriptions",
      "organizations_url": "https://api.github.com/users/pedrouid/orgs",
      "repos_url": "https://api.github.com/users/pedrouid/repos",
      "events_url": "https://api.github.com/users/pedrouid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pedrouid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-17T16:03:34Z",
    "updated_at": "2020-08-17T16:03:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Providers, Wallets and Dapps have evolved a lot and with this evolution we definitely should have evolve these standards to reflect the current state of Ethereum applications\r\n\r\nWhen I proposed `open`/`close` I intended to standardize the access control to a provider connected to a wallet. This may be a little narrow to WalletConnect protocol but it inherited a lot from Metamask injected provider.\r\n\r\nIn essence, the way I view these events and corresponding methods is to be more than just representing the availability of a node's remote connection but also its permission.\r\n\r\nWhile in the case of Metamask injected provider the connection would be connected/open on page load and only disconnected/closed when internet connection is unavailable. But what about the case whether the user has blocked the application from using it or vice-versa? \r\n\r\nI would personally would like to see these events. and corresponding methods to be focused on the provider connection with the wallet itself rather than nodes they are proxying to",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/674967922/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/675208764",
    "html_url": "https://github.com/ethereum/EIPs/issues/2787#issuecomment-675208764",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2787",
    "id": 675208764,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTIwODc2NA==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-18T02:14:01Z",
    "updated_at": "2020-08-18T02:14:01Z",
    "author_association": "MEMBER",
    "body": "> I believe the original intention of this event was to cover cases when providers become disconnected from their RPC endpoints / whatever APIs they're using to communicate with the blockchain. The chainId was tacked on as an afterthought.\r\n\r\nA provider can be connected to one chain and disconnected from another chain though, so I feel like this event doesn't actually solve that problem?  For example, if a provider is connected to Ropsten, but not connected to Mainnet, you'll get a connected event (for Ropsten) and no connected or disconnected event for Mainnet.  If the dapp wants to know about Mainnet connection status, it won't be able to use this event, and it is unclear to me when such a client would want to use this event.\r\n\r\nI agree that we need connected/disconnected events, I just think that these events as currently specified aren't useful.  My recommendation would be to change the specification such that the connected/disconnected event is fired for *every* chain that is connected/disconnected and the chainId is included in the event.  My proposal to remove chainId from the specification was because it was backward compatible with the 1193 specification, but if other parties are amenable to it then I'm fine with breaking 1193 compatibility and saying that this event **MUST** fire for every chain that is connected/disconnected.\r\n\r\n> In essence, the way I view these events and corresponding methods is to be more than just representing the availability of a node's remote connection but also its permission.\r\n\r\nI have long lobbied for a capabilities system, which I feel like would be the right solution to this class of problems?  At any given moment a provider may provide access to some set of methods for a given chain (e.g., you can `eth_call` but cannot `eth_submitTransaction`) and a capabilities event that was broadcast anytime capabilities changed (for any chain) would enable applications to give useful error messaging to users and adjust behavior based on currently available capabilities.\r\n\r\n----\r\n\r\nThree options going forward for *this* EIP:\r\n1. Maintain backward compatibility and remove `chainId` from the event.\r\n2. Break backward compatibility and EIP-1193 compatibility and change the spec such that these events **MUST** be fired for every chain independently.\r\n3. Drop this EIP entirely and create a new EIP for `chainConnected` and `chainDisconnected` events (exact name TBD).\r\n\r\ncc @rekmarks @pedrouid @alcuadrado for thoughts on which path to take.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/675208764/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/722816142",
    "html_url": "https://github.com/ethereum/EIPs/issues/2787#issuecomment-722816142",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2787",
    "id": 722816142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMjgxNjE0Mg==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-06T04:57:09Z",
    "updated_at": "2020-11-06T04:57:09Z",
    "author_association": "MEMBER",
    "body": "After discussion with @rekmarks in #2840 we have decided to withdraw this EIP due to the issues mentioned above.  There are very few situations where a provider can be fully aware that they are unable to connect to *any* chain as they cannot usually differentiate between a network partition and one or more chains being offline and their ability to connect to *any* chain being faulty.  On top of that, if there is a per-chain connect/disconnect, then the app would receive notification anyway, just at a more granular level.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/722816142/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
