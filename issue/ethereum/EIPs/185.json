{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/185",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/185/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/185/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/185/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/185",
  "id": 195882637,
  "node_id": "MDU6SXNzdWUxOTU4ODI2Mzc=",
  "number": 185,
  "title": "Make eth_sign human readable",
  "user": {
    "login": "danfinlay",
    "id": 542863,
    "node_id": "MDQ6VXNlcjU0Mjg2Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/542863?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/danfinlay",
    "html_url": "https://github.com/danfinlay",
    "followers_url": "https://api.github.com/users/danfinlay/followers",
    "following_url": "https://api.github.com/users/danfinlay/following{/other_user}",
    "gists_url": "https://api.github.com/users/danfinlay/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/danfinlay/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/danfinlay/subscriptions",
    "organizations_url": "https://api.github.com/users/danfinlay/orgs",
    "repos_url": "https://api.github.com/users/danfinlay/repos",
    "events_url": "https://api.github.com/users/danfinlay/events{/privacy}",
    "received_events_url": "https://api.github.com/users/danfinlay/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2016-12-15T18:42:18Z",
  "updated_at": "2022-01-17T08:15:15Z",
  "closed_at": "2022-01-17T08:15:15Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "There is an increasing trend towards using `eth_sign` to prove account ownership for off-chain matters, such as website registration, and this calls for a version of `eth_sign` that ensures human readability.\r\n\r\n## Current favorite strategy: MIME-types for eth.sign\r\n\r\nIf clients agree on a format for including MIME headers in signed data, dapp developers could create styled text in the format of their choosing, and the client could have that text rendered correctly.\r\n\r\n## Another strategy: eth.signText\r\n\r\nThe web3.js framework could expose a method that is designed to sign a body of text that is shown to the user, rendered appropriately, for approval.\r\n\r\n### Implementation Basics\r\n\r\nFor normal client developers, implementation could be as simple as aliasing `eth_signTerms` to `eth_sign`. The method would only be useful or interesting to implement for UI signer developers, like Mist, MetaMask, or Parity UI, for whom it would be mostly just rendering the text correctly.\r\n\r\nOriginally posted here: https://github.com/ethereum/interfaces/issues/7",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/185/reactions",
    "total_count": 5,
    "+1": 5,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/185/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/267417441",
    "html_url": "https://github.com/ethereum/EIPs/issues/185#issuecomment-267417441",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/185",
    "id": 267417441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzQxNzQ0MQ==",
    "user": {
      "login": "AlwaysBCoding",
      "id": 2096352,
      "node_id": "MDQ6VXNlcjIwOTYzNTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2096352?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AlwaysBCoding",
      "html_url": "https://github.com/AlwaysBCoding",
      "followers_url": "https://api.github.com/users/AlwaysBCoding/followers",
      "following_url": "https://api.github.com/users/AlwaysBCoding/following{/other_user}",
      "gists_url": "https://api.github.com/users/AlwaysBCoding/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AlwaysBCoding/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AlwaysBCoding/subscriptions",
      "organizations_url": "https://api.github.com/users/AlwaysBCoding/orgs",
      "repos_url": "https://api.github.com/users/AlwaysBCoding/repos",
      "events_url": "https://api.github.com/users/AlwaysBCoding/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AlwaysBCoding/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-15T19:22:44Z",
    "updated_at": "2016-12-15T19:22:44Z",
    "author_association": "NONE",
    "body": "Functionality like this is definitely needed for app developers. \r\n\r\nI'm curious though, is there a reason why this needs to be implemented as a change to the protocol instead of as a feature in MetaMask. For example couldn't MetaMask have it's own function that accepts a UTF string and displays it for the user, while actually signing the sha3 hash of that string under the hood, using the existing `eth_sign` function?\r\n\r\nI guess my question is why would adding this functionality (which I agree is necessary) require a protocol change vs. application specific code on the part of MetaMask, Mist etc...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/267417441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/267422151",
    "html_url": "https://github.com/ethereum/EIPs/issues/185#issuecomment-267422151",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/185",
    "id": 267422151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzQyMjE1MQ==",
    "user": {
      "login": "fjl",
      "id": 6915,
      "node_id": "MDQ6VXNlcjY5MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjl",
      "html_url": "https://github.com/fjl",
      "followers_url": "https://api.github.com/users/fjl/followers",
      "following_url": "https://api.github.com/users/fjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjl/subscriptions",
      "organizations_url": "https://api.github.com/users/fjl/orgs",
      "repos_url": "https://api.github.com/users/fjl/repos",
      "events_url": "https://api.github.com/users/fjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-15T19:36:29Z",
    "updated_at": "2016-12-15T19:36:29Z",
    "author_association": "MEMBER",
    "body": "Maybe it could be called `signText`?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/267422151/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/267422691",
    "html_url": "https://github.com/ethereum/EIPs/issues/185#issuecomment-267422691",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/185",
    "id": 267422691,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzQyMjY5MQ==",
    "user": {
      "login": "danfinlay",
      "id": 542863,
      "node_id": "MDQ6VXNlcjU0Mjg2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/542863?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danfinlay",
      "html_url": "https://github.com/danfinlay",
      "followers_url": "https://api.github.com/users/danfinlay/followers",
      "following_url": "https://api.github.com/users/danfinlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/danfinlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danfinlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danfinlay/subscriptions",
      "organizations_url": "https://api.github.com/users/danfinlay/orgs",
      "repos_url": "https://api.github.com/users/danfinlay/repos",
      "events_url": "https://api.github.com/users/danfinlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danfinlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-15T19:38:25Z",
    "updated_at": "2016-12-15T19:38:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "I wouldn't mind `signText` as a name.\r\n\r\n@AlwaysBCoding MetaMask could definitely just add new methods whenever we want to the web3 object, but this would encourage dapp developers to create MetaMask-only compatible flows.\r\n\r\nThis is an offering of cross-client compatibility for a stronger ecosystem.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/267422691/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/267544397",
    "html_url": "https://github.com/ethereum/EIPs/issues/185#issuecomment-267544397",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/185",
    "id": 267544397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzU0NDM5Nw==",
    "user": {
      "login": "gavofyork",
      "id": 138296,
      "node_id": "MDQ6VXNlcjEzODI5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/138296?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavofyork",
      "html_url": "https://github.com/gavofyork",
      "followers_url": "https://api.github.com/users/gavofyork/followers",
      "following_url": "https://api.github.com/users/gavofyork/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavofyork/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavofyork/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavofyork/subscriptions",
      "organizations_url": "https://api.github.com/users/gavofyork/orgs",
      "repos_url": "https://api.github.com/users/gavofyork/repos",
      "events_url": "https://api.github.com/users/gavofyork/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavofyork/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-16T08:39:04Z",
    "updated_at": "2016-12-16T08:39:41Z",
    "author_association": "MEMBER",
    "body": "I tend to agree that a new RPC is unnecessary. Signer UIs ought to be checking with the user that they mean to sign these things anyway. The real question is how to optimise that check. I would suggest that we come up with a clear _content format_ for what is being signed so that the content can be properly displayed to the user at the point of signing. Probably just copying e-mail MIME declarations is sufficient, e.g.:\r\n\r\n```\r\nMIME-Version: 1.0\r\nContent-Type: text/markdown; charset=UTF-8; variant=Original\r\n\r\n# Terms of Agreement\r\nThis is some content to be rendered to the user by the UI for signing...\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/267544397/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/267559319",
    "html_url": "https://github.com/ethereum/EIPs/issues/185#issuecomment-267559319",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/185",
    "id": 267559319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzU1OTMxOQ==",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-16T10:03:51Z",
    "updated_at": "2016-12-16T10:06:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "If we add a method i would agree with `eth_signText` to prevent accidental tx signing. But this can also be integrated in web3.js or other libraries as well. Not sure if a RPC method is necessary here.\r\n\r\nI would also like to get a web3.js function for login into websites, by defining a standard what a website requires to let somebody in. E.g. siging a JSON:\r\n```js\r\n{\r\n   loginTarget: 'http://mywebsite.com'\r\n   ip: ..,\r\n   userAgent: ...\r\n   timestamp: ...\r\n   expiration:  60 * 60 * 24 //s\r\n}\r\n```\r\n\r\nThis way Dapps e.g. in Mist can be sure that the account is allowed to log in. Just relying on `web3.eth.accounts` to be present is not enough, as a browser could fake that.\r\nWith a simply login message to be signed, the Dapp backend (if not blockchain based ;) ), can verify its really the intend of the owner, to log in.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/267559319/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/267599905",
    "html_url": "https://github.com/ethereum/EIPs/issues/185#issuecomment-267599905",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/185",
    "id": 267599905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzU5OTkwNQ==",
    "user": {
      "login": "MrTibbles",
      "id": 6398008,
      "node_id": "MDQ6VXNlcjYzOTgwMDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6398008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrTibbles",
      "html_url": "https://github.com/MrTibbles",
      "followers_url": "https://api.github.com/users/MrTibbles/followers",
      "following_url": "https://api.github.com/users/MrTibbles/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrTibbles/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrTibbles/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrTibbles/subscriptions",
      "organizations_url": "https://api.github.com/users/MrTibbles/orgs",
      "repos_url": "https://api.github.com/users/MrTibbles/repos",
      "events_url": "https://api.github.com/users/MrTibbles/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrTibbles/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-16T14:00:48Z",
    "updated_at": "2016-12-16T14:00:48Z",
    "author_association": "NONE",
    "body": "The whole ability surrounding secure login and logged in sessions is a debate in itself.\r\n\r\nIn regards to eth_signText || eth_signTerms, rather than a new RPC method, is this not more so a web3.js integration/update for UX, as @AlwaysBCoding outlines.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/267599905/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/267647930",
    "html_url": "https://github.com/ethereum/EIPs/issues/185#issuecomment-267647930",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/185",
    "id": 267647930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzY0NzkzMA==",
    "user": {
      "login": "danfinlay",
      "id": 542863,
      "node_id": "MDQ6VXNlcjU0Mjg2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/542863?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danfinlay",
      "html_url": "https://github.com/danfinlay",
      "followers_url": "https://api.github.com/users/danfinlay/followers",
      "following_url": "https://api.github.com/users/danfinlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/danfinlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danfinlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danfinlay/subscriptions",
      "organizations_url": "https://api.github.com/users/danfinlay/orgs",
      "repos_url": "https://api.github.com/users/danfinlay/repos",
      "events_url": "https://api.github.com/users/danfinlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danfinlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-16T17:26:08Z",
    "updated_at": "2016-12-16T17:26:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I would suggest that we come up with a clear content format for what is being signed so that the content can be properly displayed to the user at the point of signing. Probably just copying e-mail MIME declarations is sufficient\r\n\r\nI actually really like this suggestion, and it's sufficient to negate the original intention of this EIP, replacing it with a formatting discussion, which I'm tempted to open in another EIP to avoid dual conversations.\r\n\r\nThis *would* benefit from collaboration between UI clients, so we could render the same format, but since this is backwards-compatible, there isn't really a downside to just going ahead with this unless two clients end up implementing it differently.\r\n\r\nAlso actually @MrTibbles and @AlwaysBCoding I've come around, this could be done at the web3.js layer, but what would you think of just an optional mime header for the encoded body?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/267647930/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/267649869",
    "html_url": "https://github.com/ethereum/EIPs/issues/185#issuecomment-267649869",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/185",
    "id": 267649869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzY0OTg2OQ==",
    "user": {
      "login": "pelle",
      "id": 8680,
      "node_id": "MDQ6VXNlcjg2ODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8680?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pelle",
      "html_url": "https://github.com/pelle",
      "followers_url": "https://api.github.com/users/pelle/followers",
      "following_url": "https://api.github.com/users/pelle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pelle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pelle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pelle/subscriptions",
      "organizations_url": "https://api.github.com/users/pelle/orgs",
      "repos_url": "https://api.github.com/users/pelle/repos",
      "events_url": "https://api.github.com/users/pelle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pelle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-16T17:33:45Z",
    "updated_at": "2016-12-16T17:33:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think it needs to be on the json-rpc level. Rather a standard for accepting terms is better implemented on the smart contract level.\r\n\r\nI think it's important having a way of showing the terms and optionally accepting it is more important.\r\n\r\nI've been meaning to create an EIP about this for a while based on what I suggest here: https://blog.stakeventures.com/articles/smart-contract-terms\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/267649869/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/267654022",
    "html_url": "https://github.com/ethereum/EIPs/issues/185#issuecomment-267654022",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/185",
    "id": 267654022,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzY1NDAyMg==",
    "user": {
      "login": "juanfranblanco",
      "id": 562371,
      "node_id": "MDQ6VXNlcjU2MjM3MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/562371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juanfranblanco",
      "html_url": "https://github.com/juanfranblanco",
      "followers_url": "https://api.github.com/users/juanfranblanco/followers",
      "following_url": "https://api.github.com/users/juanfranblanco/following{/other_user}",
      "gists_url": "https://api.github.com/users/juanfranblanco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juanfranblanco/subscriptions",
      "organizations_url": "https://api.github.com/users/juanfranblanco/orgs",
      "repos_url": "https://api.github.com/users/juanfranblanco/repos",
      "events_url": "https://api.github.com/users/juanfranblanco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juanfranblanco/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-16T17:50:38Z",
    "updated_at": "2016-12-16T17:50:38Z",
    "author_association": "NONE",
    "body": "Why not have different data schemas which can be encoded in RLP and signed the same way as transactions. You just need to agree to the data type structure. The first value could be the \"Mime type\" as thought by @gavofyork \r\n\r\nAlso the signing could be done anywhere RPC should not be necessary.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/267654022/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/267660320",
    "html_url": "https://github.com/ethereum/EIPs/issues/185#issuecomment-267660320",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/185",
    "id": 267660320,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzY2MDMyMA==",
    "user": {
      "login": "danfinlay",
      "id": 542863,
      "node_id": "MDQ6VXNlcjU0Mjg2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/542863?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danfinlay",
      "html_url": "https://github.com/danfinlay",
      "followers_url": "https://api.github.com/users/danfinlay/followers",
      "following_url": "https://api.github.com/users/danfinlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/danfinlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danfinlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danfinlay/subscriptions",
      "organizations_url": "https://api.github.com/users/danfinlay/orgs",
      "repos_url": "https://api.github.com/users/danfinlay/repos",
      "events_url": "https://api.github.com/users/danfinlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danfinlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-16T18:17:34Z",
    "updated_at": "2016-12-16T18:17:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pelle this proposal is merely talking about the `eth_sign` method, and how to show *that* in a human-readable way.  Since it's an off-chain function, it's much more trivial, and I think it's a good warm-up for the more deeply integrated concerns of smart-contract readability that your blog post explores, and I can't wait for that EIP!\r\n\r\n### I'm redacting my request for any RPC changes here, this is a signer interface issue.\r\n\r\nI'm going to update the top level issue to reflect the current state of the discussion, apologies to historians.  Is that taboo?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/267660320/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003905716",
    "html_url": "https://github.com/ethereum/EIPs/issues/185#issuecomment-1003905716",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/185",
    "id": 1003905716,
    "node_id": "IC_kwDOAq426M471mK0",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-03T07:12:04Z",
    "updated_at": "2022-01-03T07:12:04Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003905716/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1014247745",
    "html_url": "https://github.com/ethereum/EIPs/issues/185#issuecomment-1014247745",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/185",
    "id": 1014247745,
    "node_id": "IC_kwDOAq426M48dDFB",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-17T08:15:14Z",
    "updated_at": "2022-01-17T08:15:14Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1014247745/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
