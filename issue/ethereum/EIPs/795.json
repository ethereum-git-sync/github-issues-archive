{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/795",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/795/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/795/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/795/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/795",
  "id": 280864052,
  "node_id": "MDU6SXNzdWUyODA4NjQwNTI=",
  "number": 795,
  "title": "ERC20 error",
  "user": {
    "login": "lucianopel",
    "id": 34036565,
    "node_id": "MDQ6VXNlcjM0MDM2NTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/34036565?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lucianopel",
    "html_url": "https://github.com/lucianopel",
    "followers_url": "https://api.github.com/users/lucianopel/followers",
    "following_url": "https://api.github.com/users/lucianopel/following{/other_user}",
    "gists_url": "https://api.github.com/users/lucianopel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lucianopel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lucianopel/subscriptions",
    "organizations_url": "https://api.github.com/users/lucianopel/orgs",
    "repos_url": "https://api.github.com/users/lucianopel/repos",
    "events_url": "https://api.github.com/users/lucianopel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lucianopel/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2017-12-11T00:45:42Z",
  "updated_at": "2017-12-11T15:36:39Z",
  "closed_at": "2017-12-11T15:36:39Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "What I do wrong in the code to the token goes to the address 0x00000000?\r\n\r\n\r\npragma solidity ^0.4.13;\r\n\r\ncontract ERC20 {\r\n     function totalSupply() constant returns (uint256 totalSupply);\r\n     function balanceOf(address _owner) constant returns (uint256 balance);\r\n     function transfer(address _to, uint256 _value) returns (bool success);\r\n     function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\r\n     function approve(address _spender, uint256 _value) returns (bool success);\r\n     function allowance(address _owner, address _spender) constant returns (uint256 remaining);\r\n     event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n     event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n }\r\n  \r\n  contract pro is ERC20 {\r\n     string public constant symbol = \"PRO\";\r\n     string public constant name = \"PRO\";\r\n     uint8 public constant decimals = 8;\r\n     uint256 _totalSupply = 2000000 * 10**8;\r\n     \r\n\r\n     address public owner;\r\n  \r\n     mapping(address => uint256) balances;\r\n  \r\n     mapping(address => mapping (address => uint256)) allowed;\r\n     \r\n  \r\n     function Pro() {\r\n         owner = msg.sender;\r\n         balances[owner] = 2000000 * 10**8;\r\n     }\r\n     \r\n     modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n     \r\n     \r\n     function distributeBTR(address[] addresses) onlyOwner {\r\n         for (uint i = 0; i < addresses.length; i++) {\r\n             balances[owner] -= 2000 * 10**8;\r\n             balances[addresses[i]] += 2000 * 10**8;\r\n             Transfer(owner, addresses[i], 2000 * 10**8);\r\n         }\r\n     }\r\n     \r\n  \r\n     function totalSupply() constant returns (uint256 totalSupply) {\r\n         totalSupply = _totalSupply;\r\n     }\r\n  \r\n\r\n     function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n     }\r\n \r\n     function transfer(address _to, uint256 _amount) returns (bool success) {\r\n         if (balances[msg.sender] >= _amount \r\n            && _amount > 0\r\n             && balances[_to] + _amount > balances[_to]) {\r\n             balances[msg.sender] -= _amount;\r\n             balances[_to] += _amount;\r\n             Transfer(msg.sender, _to, _amount);\r\n            return true;\r\n         } else {\r\n             return false;\r\n         }\r\n     }\r\n     \r\n     \r\n     function transferFrom(\r\n         address _from,\r\n         address _to,\r\n         uint256 _amount\r\n     ) returns (bool success) {\r\n         if (balances[_from] >= _amount\r\n             && allowed[_from][msg.sender] >= _amount\r\n             && _amount > 0\r\n             && balances[_to] + _amount > balances[_to]) {\r\n             balances[_from] -= _amount;\r\n             allowed[_from][msg.sender] -= _amount;\r\n             balances[_to] += _amount;\r\n             Transfer(_from, _to, _amount);\r\n             return true;\r\n         } else {\r\n            return false;\r\n         }\r\n     }\r\n \r\n     function approve(address _spender, uint256 _amount) returns (bool success) {\r\n         allowed[msg.sender][_spender] = _amount;\r\n        Approval(msg.sender, _spender, _amount);\r\n         return true;\r\n     }\r\n  \r\n     function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n         return allowed[_owner][_spender];\r\n    }\r\n}",
  "closed_by": {
    "login": "Arachnid",
    "id": 17865,
    "node_id": "MDQ6VXNlcjE3ODY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Arachnid",
    "html_url": "https://github.com/Arachnid",
    "followers_url": "https://api.github.com/users/Arachnid/followers",
    "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
    "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
    "organizations_url": "https://api.github.com/users/Arachnid/orgs",
    "repos_url": "https://api.github.com/users/Arachnid/repos",
    "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Arachnid/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/795/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 1,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/795/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/350721275",
    "html_url": "https://github.com/ethereum/EIPs/issues/795#issuecomment-350721275",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/795",
    "id": 350721275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDcyMTI3NQ==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-11T13:16:45Z",
    "updated_at": "2017-12-11T13:16:45Z",
    "author_association": "NONE",
    "body": "this isn't the correct forum for this, sorry. please try one of the gitter chats",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/350721275/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
