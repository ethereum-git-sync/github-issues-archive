{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/1843",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/1843/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/1843/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/1843/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/1843",
  "id": 420664796,
  "node_id": "MDU6SXNzdWU0MjA2NjQ3OTY=",
  "number": 1843,
  "title": "ERC-1843 - Claims Token Standard",
  "user": {
    "login": "jo-tud",
    "id": 1543640,
    "node_id": "MDQ6VXNlcjE1NDM2NDA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1543640?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jo-tud",
    "html_url": "https://github.com/jo-tud",
    "followers_url": "https://api.github.com/users/jo-tud/followers",
    "following_url": "https://api.github.com/users/jo-tud/following{/other_user}",
    "gists_url": "https://api.github.com/users/jo-tud/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jo-tud/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jo-tud/subscriptions",
    "organizations_url": "https://api.github.com/users/jo-tud/orgs",
    "repos_url": "https://api.github.com/users/jo-tud/repos",
    "events_url": "https://api.github.com/users/jo-tud/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jo-tud/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 13,
  "created_at": "2019-03-13T18:52:54Z",
  "updated_at": "2021-12-04T20:12:52Z",
  "closed_at": "2021-12-04T20:12:52Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "---\r\n\r\neip: ERC-1843  \r\ntitle: Claims Token Standard  \r\nauthor: Johannes Pfeffer ([@jo-tud](https://github.com/jo-tud)), Johannes Escherich ([@jo-es](https://github.com/jo-es))  \r\ndiscussions-to: #1843  \r\nstatus: **Deprecated**\r\ntype: Standards Track  \r\ncategory: ERC  \r\ncreated: 2019-03-13 \r\nrequires: ERC-20 (#20), ERC-223 (#223) \n**superseded by: ERC-2222 (#2222 )**\r\n\r\n---\r\n\r\n## Simple Summary\r\nA standard for a token that represents claims on future cash flow of an asset such as dividends, loan repayments, fee or revenue shares among large numbers of token holders. Anyone can deposit funds, token holders can withdraw their claims.\r\n\r\n- Very simple interface\r\n- ERC-20 backwards compatible\r\n- Supports funds in Ether or in ERC223 compatible tokens\r\n- Efficient handling of fractional ownership of cash-flow claims\r\n- Correctly distributes cash flow honoring all token transfers\r\n- Scales well to many token holders and frequent transfers\r\n\r\n## Abstract\r\n![The Claims Token](https://raw.githubusercontent.com/atpar/claims-token/master/res/ClaimsToken.png)\r\n\r\nThis standard proposes an efficient solution for distributing recurring payments such as dividends, loan repayments, fee or revenue shares among large numbers of token holders. The token holders are seen as fractional owners of future cash flow. The payments can be in Ether or ERC20 tokens and are stored in the token's \"fund\". Holders of a claims token can transfer their tokens at any time and can still be sure that their past claims to the cash flow of the token will be honored. The interface provides methods to deposit funds to be distributed, to get information about available funds and to withdraw funds a token holder is entitled to.\r\n\r\nThis standard can handle funds in Ether or in ERC223 compatible tokens.\r\n\r\nThis standard is backwards compatible with ERC20 (#20) and can easily be extended to be compatible with ERC-1400 (#1411) security token standards.\r\n\r\n## Motivation\r\nIn the DeFi and OpenFinance ecosystem assets such as debt positions, loans, derivatives and bonds are emerging. These assets incur future cash flows, e.g. repayments or dividends. Currently there is no standard for efficiently distributing claims on future cash flow of financial contracts among token holders. A clear and simple standard is needed to allow Dapps and exchanges to work with cash-flow producing tokens.\r\n\r\n## Rationale\r\nSending cash flow to a large group of token holders whenever it is received is limited by gas consumption. Thus, a solution must be used in which token holders actively withdraw the cumulative funds that they have a claim on. A token holder must be able to withdraw funds she has a claim on at any time. It must also be possible to transfer tokens at any time and the already accrued claims must still be honored. This requires some background accounting to be done in the transfer functions. The claims token standard solves this elegantly.\r\n\r\nExample: A bond is represented by 100 tokens. Alice owns all 100 of these tokens and Bob own zero. The bond yields 10 Ether. Alice has a claim on 100% of that cash flow because when the 10 Ether were received she owned all the tokens. She decides to not withdraw the tokens but wait until more has accumulated.\r\n\r\nNow Alice sends 50 tokens to Bob. Shortly after the bond yield another 10 Ether. Now Alice has is entitled to 15 Ether and Bob to 5 Ether. The ownership history is honored and Alice doesn't need to withdraw before she transfers the tokens.\r\n\r\n## Requirements\r\n\r\n### Requirements a claims token should fulfill\r\n\r\nExecuting tokenized financial contracts on a public ledger requires standards for distribution of cash flow incurred by the asset. In discussions with issuers the following requirements have been collected.\r\n\r\n- Token MUST be ERC-20 compatible\r\n- MUST be support claims in tokens or Ether\r\n- MUST support a large number of token holders that hold claims on an assets cash flow\r\n- MUST support efficient withdrawal of available funds\r\n- MUST support efficient addition of funds to be distributed\r\n- clients/token holders MUST be able to observe new deposits to the fund\r\n\r\n### Requirements to observe when using the standard\r\n\r\nThe following requirements MUST be met in order to use the claims token standard.\r\n\r\n- The extended token MUST be ERC-20 compatible\r\n- The token in which funds are deposited MUST be specified before the first deposit.\r\n- The extended token MUST have a fixed total supply. After the first token transfer the total supply MUST NOT be changed.\r\n- IF the funds are payed in ERC20 tokens (and not in Ether), this token MUST comply to ERC223\r\n\r\n\r\n## Specification\r\n\r\n### Methods\r\n\r\n#### default function\r\nAnyone can send Ether or tokens to be distributed among token holders. The default/fallback function behaves differently if Ether or tokens are sent to the contract.\r\n\r\nIn case of funds in Ether any Ether sent to the contract will be added to the fund by the default function.\r\n\r\nIn case of funds in ERC20/223 tokens the token that is registered will be added to the fund by the default function when it's sent to the contract.\r\n\r\n\r\n#### totalReceivedFunds\r\nThe monotonously rising cumulative sum of funds received since the creation of the token. This number is the amount that the contract has had available for distribution so far.\r\n\r\n```\r\ntotalReceivedFunds() external view returns (uint256);\r\n```\r\n\r\n#### availableFunds\r\nReturns the amount of funds that can be withdrawn by a current or former token holder given as the `_address` parameter.\r\n\r\n```\r\navailableFunds(address _address) external view returns (uint256);\r\n```\r\n\r\n#### withdrawFunds\r\nWithdraws the funds the message sender is entitled to at the time of execution of the function.\r\n\r\n```\r\nfunction withdrawFunds() external payable;\r\n```\r\n\r\n\r\n#### fundsToken\r\nA field that stores a reference to the token used for the funds. In case of funds in Ether, the field must be set to `0x0`.\r\n\r\n### Events\r\n\r\n#### FundsReceived\r\nEmits when funds (Ether or tokens) are sent to the token contract's default/fallback function.\r\n```\r\nevent FundsReceived(address indexed from, uint256 fundsReceived);\r\n```\r\n\r\n#### FundsWithdrawn\r\nEmits when a token holder claims funds from the token contract.\r\n```\r\nevent FundsWithdrawn(address indexed by, uint256 fundsWithdrawn);\r\n```\r\n\r\n## Interface\r\n```\r\n/// @title IERCxxxx Claims Token Standard\r\n/// @dev See https://github.com/atpar/claims-token\r\n\r\ninterface IClaimsToken {\r\n\t\r\n\t/**\r\n\t * @dev This event emits when funds to be deposited are sent to the token contract\r\n\t * @param from contains the address of the sender of the received funds\r\n\t * @param fundsReceived contains the amount of funds received for distribution\r\n\t */\r\n\tevent FundsReceived(address indexed from, uint256 fundsReceived);\r\n\t\r\n\t/**\r\n\t * @dev This event emits when distributed funds are withdrawn by a token holder.\r\n\t * @param by contains the address of the receiver of funds\r\n\t * @param fundsWithdrawn contains the amount of funds that were withdrawn\r\n\t */\r\n\tevent FundsWithdrawn(address indexed by, uint256 fundsWithdrawn);\r\n\t\r\n\t/**\r\n\t * @dev Withdraws available funds for user.\r\n\t */\r\n\tfunction withdrawFunds() external payable;\r\n\r\n\t/**\r\n\t * @dev Returns the amount of funds a given address is able to withdraw currently.\r\n\t * @param _forAddress Address of ClaimsToken holder\r\n\t * @return A uint256 representing the available funds for a given account\r\n\t */\r\n\tfunction availableFunds(address _forAddress) external view returns (uint256);\r\n\r\n\t/**\r\n\t * @dev Get cumulative funds received by ClaimsToken.\r\n\t * @return A uint256 representing the cumulative funds received\r\n\t */\r\n\tfunction totalReceivedFunds() external view returns (uint256);\r\n}\r\n\r\n```\r\n\r\n## Implementation\r\n\r\nThe reference implementation consists of the accounting contract and two specializations. The first is for funds denoted in Ether and the second is for funds denoted in ERC20/ERC223 compatible tokens.\r\n\r\n- [Reference implementation for cash flow in ERC20/ERC223 tokens](https://github.com/atpar/claims-token/blob/master/implementation/contracts/ClaimsTokenERC20Extension.sol)\r\n- [Reference implementation for cash flow in Ether](https://github.com/atpar/claims-token/blob/master/implementation/contracts/ClaimsTokenETHExtension.sol)\r\n\r\nThe claims token is realized by implementing the transfer functions to do the necessary accounting on two additional mappings (`processedFunds` & `claimedFunds`). A `uint256` is introduced to track the total amount of funds sent to the token contract (`receivedFunds`).\r\n\r\n### Calculation of the available funds\r\nThe high efficiency of the solution is achieved by tracking 2 values for each token holder: `claimedFunds` and `processedFunds`. By updating these at transfer events and postponing calculation of available funds to withdrawal time, this implementation achieves very low gas cost for both transfers and withdrawals.\r\n\r\n__Terms:__  \r\n`balance_A` -> Balance of token owner A  \r\n`claimedFunds_A` -> Amount of funds owned by A that is already claimed  \r\n`receivedFunds` -> Total cumulative sum of funds received for distribution (monotonously rising)  \r\n`processedFunds_A`-> This value tracks the amount of funds for which a user has already claimed their portion of the cash flow  \r\n`unprocessedFunds_A` -> Represents the amount of funds for which a user holds a claim but that were not yet processed  \r\n`ownershipFraction_A` -> Percentage of cash-flow that can be claimed by A  \r\n`totalSupply`-> Total and immutable amount of minted tokens  \r\n`availableFunds_A` -> The amount of funds token holder A can withdraw  \r\n\r\n__Calculations:__  \r\nThe ownership fraction is the balance relative to the total supply.  \r\n`ownershipFraction_A = balance_A/totalSupply`\r\n\r\nThe available funds are calculated as the sum of the unprocessed funds and the claimed funds. Unprocessed funds are calculated by multiplying the ownership fraction with the difference between the total received funds and the fund that have already been considered for a user (`processedFunds`)  \r\n\r\n`unprocessedFunds_A = ownershipFraction_A * (receivedFunds-processedFunds_A)`  \r\n`availableFunds_A = unprocessedFunds_A + claimedFunds_A`  \r\n\r\n## Example\r\nTotal supply: 100 tokens  \r\nInitial distribution: Alice owns 100 tokens and Bob owns 0 tokens. 0 funds received.\r\n\r\nStep | balance Alice | balance Bob | funds available Alice | funds available Bob | funds received | event\r\n---- | --------- | --------- | ----------------- | ----------------- | -------------- | ---\r\n0    | 100       | 0         | 0                 | 0                 | 0              | token creation\r\n1    | 100       | 0         | 20                | 0                 | 20             | 20 Ether sent to the contract\r\n2    | 75        | 25        | 20                | 0                 | 20             | Alice has sent 25 tokens to Bob\r\n3    | 75        | 25        | 35                | 5                 | 40             | 20 Ether sent to the contract\r\n4    | 75        | 25        | 0                 | 5                 | 40             | Alice withdraws her funds\r\n5    | 75        | 25        | 12                | 9                 | 56             | 16 Ether sent to the contract\r\n6    | 50        | 50        | 12                | 9                 | 56             | Alice has sent 25 tokens to Bob\r\n7    | 50        | 50        | 16                | 13                | 64             | 8 Ether sent to the contract\r\n8    | 50        | 0         | 16                | 13                | 64             | Bob has sent 50 tokens to X\r\n\r\nThe Claims Token accounting system works in the background to take care of the fact that Alice's claims fraction changes and Bob sends his tokens away before withdrawing his available funds.\r\n\r\n## Backwards Compatibility\r\nThe standard is backwards compatible with ERC20 tokens.\r\n\r\n## Copyright\r\nPublic domain via [CC0](https://creativecommons.org/publicdomain/zero/1.0/deed.en)\r\n\r\n## Attribution\r\nThe idea for the implementation of the claims token goes back to work originally done by [@Georgi87](https://github.com/Georgi87), [@ethers](https://github.com/ethers), [@miladmostavi](https://github.com/miladmostavi) and [@popra](https://github.com/popra) and was used in the [Tokit SingularDTVFund](https://github.com/Digital-Mob/singulardtv-tokitio-contracts) contracts.\r\n\r\n",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/1843/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/1843/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/472561837",
    "html_url": "https://github.com/ethereum/EIPs/issues/1843#issuecomment-472561837",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1843",
    "id": 472561837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjU2MTgzNw==",
    "user": {
      "login": "jo-tud",
      "id": 1543640,
      "node_id": "MDQ6VXNlcjE1NDM2NDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1543640?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jo-tud",
      "html_url": "https://github.com/jo-tud",
      "followers_url": "https://api.github.com/users/jo-tud/followers",
      "following_url": "https://api.github.com/users/jo-tud/following{/other_user}",
      "gists_url": "https://api.github.com/users/jo-tud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jo-tud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jo-tud/subscriptions",
      "organizations_url": "https://api.github.com/users/jo-tud/orgs",
      "repos_url": "https://api.github.com/users/jo-tud/repos",
      "events_url": "https://api.github.com/users/jo-tud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jo-tud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-13T19:02:39Z",
    "updated_at": "2019-03-13T19:02:39Z",
    "author_association": "NONE",
    "body": "Maybe merge https://github.com/ethereum/EIPs/issues/1726 and this. @Roger-Wu",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/472561837/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/472703693",
    "html_url": "https://github.com/ethereum/EIPs/issues/1843#issuecomment-472703693",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1843",
    "id": 472703693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjcwMzY5Mw==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T04:52:23Z",
    "updated_at": "2019-03-14T04:52:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "totalReceivedFunds can overflow if you deposit tokens, withdraw, and then deposit them back in",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/472703693/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/472803957",
    "html_url": "https://github.com/ethereum/EIPs/issues/1843#issuecomment-472803957",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1843",
    "id": 472803957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjgwMzk1Nw==",
    "user": {
      "login": "jo-tud",
      "id": 1543640,
      "node_id": "MDQ6VXNlcjE1NDM2NDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1543640?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jo-tud",
      "html_url": "https://github.com/jo-tud",
      "followers_url": "https://api.github.com/users/jo-tud/followers",
      "following_url": "https://api.github.com/users/jo-tud/following{/other_user}",
      "gists_url": "https://api.github.com/users/jo-tud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jo-tud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jo-tud/subscriptions",
      "organizations_url": "https://api.github.com/users/jo-tud/orgs",
      "repos_url": "https://api.github.com/users/jo-tud/repos",
      "events_url": "https://api.github.com/users/jo-tud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jo-tud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T11:02:14Z",
    "updated_at": "2019-03-14T11:06:56Z",
    "author_association": "NONE",
    "body": "> totalReceivedFunds can overflow if you deposit tokens, withdraw, and then deposit them back in\r\n\r\nYes, theoretically that is a potential problem. However it is limited by the economics of an attack:\r\n\r\n`costFactorPerAttackCycle >= 1-fractionOwnedByAttacker`\r\n\r\n- In case of Ether, overflowing totalReceivedFunds is economically only possible if the attacker is the only token holder. If there are one or more independent parties holding tokens, each round incurs a cost relative to the percentage of tokens held.\r\n- In case of a token, generally the same applies. But the token could have a very high total supply and be available at a much lower cost - thus making the overflow more viable.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/472803957/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/473681150",
    "html_url": "https://github.com/ethereum/EIPs/issues/1843#issuecomment-473681150",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1843",
    "id": 473681150,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzY4MTE1MA==",
    "user": {
      "login": "rudolfix",
      "id": 17202864,
      "node_id": "MDQ6VXNlcjE3MjAyODY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/17202864?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rudolfix",
      "html_url": "https://github.com/rudolfix",
      "followers_url": "https://api.github.com/users/rudolfix/followers",
      "following_url": "https://api.github.com/users/rudolfix/following{/other_user}",
      "gists_url": "https://api.github.com/users/rudolfix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rudolfix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rudolfix/subscriptions",
      "organizations_url": "https://api.github.com/users/rudolfix/orgs",
      "repos_url": "https://api.github.com/users/rudolfix/repos",
      "events_url": "https://api.github.com/users/rudolfix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rudolfix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-17T16:21:46Z",
    "updated_at": "2019-03-17T16:21:46Z",
    "author_association": "NONE",
    "body": "why do you add this to token itself instead of using snapshots from MiniMe token (that btw. are used extensively in AragonOs apps) and implementing separate, specialized disbursal contract? claiming token is an app on the snapshot/MiniMe token protocol and 90% of the code to implement it, would be token snapshot re-implementation.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/473681150/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/474785733",
    "html_url": "https://github.com/ethereum/EIPs/issues/1843#issuecomment-474785733",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1843",
    "id": 474785733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDc4NTczMw==",
    "user": {
      "login": "jo-tud",
      "id": 1543640,
      "node_id": "MDQ6VXNlcjE1NDM2NDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1543640?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jo-tud",
      "html_url": "https://github.com/jo-tud",
      "followers_url": "https://api.github.com/users/jo-tud/followers",
      "following_url": "https://api.github.com/users/jo-tud/following{/other_user}",
      "gists_url": "https://api.github.com/users/jo-tud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jo-tud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jo-tud/subscriptions",
      "organizations_url": "https://api.github.com/users/jo-tud/orgs",
      "repos_url": "https://api.github.com/users/jo-tud/repos",
      "events_url": "https://api.github.com/users/jo-tud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jo-tud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-20T11:10:19Z",
    "updated_at": "2019-03-20T11:10:19Z",
    "author_association": "NONE",
    "body": "> why do you add this to token itself instead of using snapshots from MiniMe token\r\n\r\nThe MiniMe token is great, no question! It can probably be used to create an alternative implementation for the proposed interface. However, I see the snapshots as an unnecessary overhead for the core functionality of claims distribution. The elegance in our reference implementation lies in the fact that the balance history doesn't have to be recorded explicitly and it is still possible to correctly distribute payments to token holders. The consequence is that payments are free and transfers and payouts are very cheap, allowing for scaling to high frequency payments and large amounts of transfers.\r\n\r\nThe Claims Token is specifically designed to be integrated into the ERC1400 and similar modular frameworks. It adds a very well defined & limited functionality to Tokens derived from e.g. the OpenZeppelin reference implementations. Happy to discuss this further.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/474785733/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/476595803",
    "html_url": "https://github.com/ethereum/EIPs/issues/1843#issuecomment-476595803",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1843",
    "id": 476595803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjU5NTgwMw==",
    "user": {
      "login": "Roger-Wu",
      "id": 6902276,
      "node_id": "MDQ6VXNlcjY5MDIyNzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6902276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Roger-Wu",
      "html_url": "https://github.com/Roger-Wu",
      "followers_url": "https://api.github.com/users/Roger-Wu/followers",
      "following_url": "https://api.github.com/users/Roger-Wu/following{/other_user}",
      "gists_url": "https://api.github.com/users/Roger-Wu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Roger-Wu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Roger-Wu/subscriptions",
      "organizations_url": "https://api.github.com/users/Roger-Wu/orgs",
      "repos_url": "https://api.github.com/users/Roger-Wu/repos",
      "events_url": "https://api.github.com/users/Roger-Wu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Roger-Wu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-26T12:03:38Z",
    "updated_at": "2019-03-26T12:03:38Z",
    "author_association": "NONE",
    "body": "Is it possible to mint/burn tokens and keep the available funds unchanged in your implementation?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/476595803/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/477990624",
    "html_url": "https://github.com/ethereum/EIPs/issues/1843#issuecomment-477990624",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1843",
    "id": 477990624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Nzk5MDYyNA==",
    "user": {
      "login": "jo-tud",
      "id": 1543640,
      "node_id": "MDQ6VXNlcjE1NDM2NDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1543640?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jo-tud",
      "html_url": "https://github.com/jo-tud",
      "followers_url": "https://api.github.com/users/jo-tud/followers",
      "following_url": "https://api.github.com/users/jo-tud/following{/other_user}",
      "gists_url": "https://api.github.com/users/jo-tud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jo-tud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jo-tud/subscriptions",
      "organizations_url": "https://api.github.com/users/jo-tud/orgs",
      "repos_url": "https://api.github.com/users/jo-tud/repos",
      "events_url": "https://api.github.com/users/jo-tud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jo-tud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-29T13:06:30Z",
    "updated_at": "2019-03-29T13:06:46Z",
    "author_association": "NONE",
    "body": "> Is it possible to mint/burn tokens and keep the available funds unchanged in your implementation?\r\n\r\nNo, in the provided reference implementation this is not possible, it needs a fixed total supply (see requirements).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/477990624/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/487234108",
    "html_url": "https://github.com/ethereum/EIPs/issues/1843#issuecomment-487234108",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1843",
    "id": 487234108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzIzNDEwOA==",
    "user": {
      "login": "nbundi",
      "id": 7461840,
      "node_id": "MDQ6VXNlcjc0NjE4NDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7461840?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nbundi",
      "html_url": "https://github.com/nbundi",
      "followers_url": "https://api.github.com/users/nbundi/followers",
      "following_url": "https://api.github.com/users/nbundi/following{/other_user}",
      "gists_url": "https://api.github.com/users/nbundi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nbundi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nbundi/subscriptions",
      "organizations_url": "https://api.github.com/users/nbundi/orgs",
      "repos_url": "https://api.github.com/users/nbundi/repos",
      "events_url": "https://api.github.com/users/nbundi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nbundi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-26T23:51:41Z",
    "updated_at": "2019-04-26T23:51:41Z",
    "author_association": "NONE",
    "body": "@Roger-Wu this is a good point. in the financial context minting/burning is an interesting feature directly related to corporate actions such as stock splits for example.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/487234108/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/488719311",
    "html_url": "https://github.com/ethereum/EIPs/issues/1843#issuecomment-488719311",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1843",
    "id": 488719311,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODcxOTMxMQ==",
    "user": {
      "login": "jo-tud",
      "id": 1543640,
      "node_id": "MDQ6VXNlcjE1NDM2NDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1543640?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jo-tud",
      "html_url": "https://github.com/jo-tud",
      "followers_url": "https://api.github.com/users/jo-tud/followers",
      "following_url": "https://api.github.com/users/jo-tud/following{/other_user}",
      "gists_url": "https://api.github.com/users/jo-tud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jo-tud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jo-tud/subscriptions",
      "organizations_url": "https://api.github.com/users/jo-tud/orgs",
      "repos_url": "https://api.github.com/users/jo-tud/repos",
      "events_url": "https://api.github.com/users/jo-tud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jo-tud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-02T15:30:08Z",
    "updated_at": "2019-05-02T15:30:08Z",
    "author_association": "NONE",
    "body": "@Roger-Wu We're currently working on a merge between our approaches. It uses the implementation of #1726 but the terminology of this EIP #1843 (avoiding the term Dividend). We also integrated our solution for claims paid in Tokens, so now ERC20 token payments can be distributed. Let's have a conversation with on the past path to converge. I'll ping you via mail.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/488719311/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/496923774",
    "html_url": "https://github.com/ethereum/EIPs/issues/1843#issuecomment-496923774",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1843",
    "id": 496923774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjkyMzc3NA==",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-29T12:53:57Z",
    "updated_at": "2019-05-29T12:53:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "In light of #777 you should think about how you can support that standard, as it will play a more significant role in the near future.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/496923774/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/497068202",
    "html_url": "https://github.com/ethereum/EIPs/issues/1843#issuecomment-497068202",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1843",
    "id": 497068202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzA2ODIwMg==",
    "user": {
      "login": "jo-es",
      "id": 45110941,
      "node_id": "MDQ6VXNlcjQ1MTEwOTQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/45110941?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jo-es",
      "html_url": "https://github.com/jo-es",
      "followers_url": "https://api.github.com/users/jo-es/followers",
      "following_url": "https://api.github.com/users/jo-es/following{/other_user}",
      "gists_url": "https://api.github.com/users/jo-es/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jo-es/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jo-es/subscriptions",
      "organizations_url": "https://api.github.com/users/jo-es/orgs",
      "repos_url": "https://api.github.com/users/jo-es/repos",
      "events_url": "https://api.github.com/users/jo-es/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jo-es/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-29T19:01:49Z",
    "updated_at": "2019-05-29T19:01:49Z",
    "author_association": "NONE",
    "body": "We have that on our roadmap. Through the ClaimsToken extension architecture it's straightforward to support ERC777 and future token standards.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/497068202/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974705476",
    "html_url": "https://github.com/ethereum/EIPs/issues/1843#issuecomment-974705476",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1843",
    "id": 974705476,
    "node_id": "IC_kwDOAq426M46GNNE",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-11-20T20:12:24Z",
    "updated_at": "2021-11-20T20:12:24Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974705476/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986086424",
    "html_url": "https://github.com/ethereum/EIPs/issues/1843#issuecomment-986086424",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1843",
    "id": 986086424,
    "node_id": "IC_kwDOAq426M46xnwY",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-04T20:12:52Z",
    "updated_at": "2021-12-04T20:12:52Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986086424/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
