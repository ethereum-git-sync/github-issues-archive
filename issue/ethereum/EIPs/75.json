{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/75/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/75/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/75/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/75",
  "id": 139613172,
  "node_id": "MDU6SXNzdWUxMzk2MTMxNzI=",
  "number": 75,
  "title": "Standard Writeable Mnemonic Seed Proposal",
  "user": {
    "login": "alexvandesande",
    "id": 112898,
    "node_id": "MDQ6VXNlcjExMjg5OA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/112898?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alexvandesande",
    "html_url": "https://github.com/alexvandesande",
    "followers_url": "https://api.github.com/users/alexvandesande/followers",
    "following_url": "https://api.github.com/users/alexvandesande/following{/other_user}",
    "gists_url": "https://api.github.com/users/alexvandesande/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alexvandesande/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alexvandesande/subscriptions",
    "organizations_url": "https://api.github.com/users/alexvandesande/orgs",
    "repos_url": "https://api.github.com/users/alexvandesande/repos",
    "events_url": "https://api.github.com/users/alexvandesande/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alexvandesande/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 40,
  "created_at": "2016-03-09T15:44:38Z",
  "updated_at": "2018-03-23T15:03:30Z",
  "closed_at": "2018-03-22T19:11:10Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Having an easily portable, easily writeable and even memorisable seed\\*  is an often requested issue and I think there would be benefit to have a cross implementation compatible standard, specially because there's a lot of space for pain if you implement it the wrong way. The end goal should not an \"easy to memorize\" but rather a \"easy to write down/possible to memorize\", since the value isn't so much on keeping the wallet 100% on your brain, but rather the extreme portability. \n\n\\* Sometimes called a _Brain wallet_, but usually when referring to a human picking the random phrase, which is not the goal here\n### 1. Ask for a Salt: Email address\n\nIt doesn't matter how hard is your password to guess, if you don't have a unique part of it, then an attacker could continuously generate a giant table of passwords, that would allow him to steal wallets that are yet to be created for any users. A salt doesn't need to be _secret_ it just needs to be _unique_, if an attacker knows your salt they can try to guess your password but then they would be using all that hash power against one specific user, so the potential gains are limited.\n\nAn **email address** would be a perfect salt: it's instantly memorable by the user and is unique enough to add security.  A client could also use the email to send a message with instructions, which allows a few interesting uses: \n- the user could make an email on the form of username+randomstring@gmail.com to add more uniqueness, but they could still search their inbox for it\n-  it could be used as an invitation. You add someone emails address and the client will send them instructions on how to redeem the ether (of course the full seed would not be sent on the email, that would require the invitee to contact the inviter)\n- Users are used to the pattern email + password as a login on social networks, so while the way this works is different, they might feel more at ease\n### 2. Random seed generator\n\nThe _user should never pick his own random seed_. Humans are terrible sources of randomness and that should be provided for them. The user could be presented with the following choices:\n1. The level of security they want. This could be presented as \"safe to secure up to X amount\" and should reflect on the size of the seed. All clients should provide a minimum maximum security that should be in trillions of trillions of possible seeds. Not all use cases need to have complete unbreakable encryption, for transfer of small amounts of pocket money, a password that would take thousands of dollars to break should be enough.\n2. The option to generate a new seed if they want. In a typical use case the user should not have to see more than 10 seeds before settling on one, so that this wouldn't decrease the entropy by much.\n3. The option of selecting between string generation scheme. The user should pick the one that feels more comfortable with his culture or input device. Some examples would be:\n- Word List. [BIP39 has an excellent word dictionary](https://github.com/bitcoin/bips/blob/master/bip-0039/bip-0039-wordlists.md) of words in multiple languages. Those were picked up to be common words yet all of them can be unambiguously distinguished by just the first 4 letters.\n- Pseudo-words. [Using syllables to generate pseudo-words](http://codepen.io/alexvandesande/pen/mymWEj) can be as strong and easier to write down. For example these three alien words: \"fakpug temvuw jorzul\" have the entropy equivalence of 6 random words (from a 1024 word list). Another example: \"uffu wojtij ewiome wu cajreg hajkut mar\" is the equivalent of 12 seed words.\n- Symbols. If you have a pen input or have knowledge of chinese, [then an ideogram is a great seed](https://github.com/bitcoin/bips/blob/master/bip-0039/chinese_traditional.txt). There probably a use case for an emoji based seed generation.\n- Security questions. An interesting way to transmit a brain wallet securely to someone would be to generate a series of questions that the user needs to answer on the other side. The questions could be sent via email and the hash would include both the question and answer. _This would be much less secure_ but could be useful in a case where the user simply wants to send a small amount of ethers just so that the user can execute a contract\n- A mix of the above?\n### 3. Multiple hashing rounds and multiple account outputs\n\nInstead of a single round of hashing, the seed should be generated by hashing the password multiple times. The number should be standard, based on something that would take an average laptop/mobile phone in 2016 an average of 1 second or so. This means that even with a specialised computer and taking moose's law in consideration, testing millions  of passwords would still take a considerable time and cost for the attacker.\n\nAnother layer of security can be added by generating not one, but an indeterminate amount of accounts for the user, by repeating the same hash amount. The user could be presented with 10-12 accounts to choose from whenever they generated a brain wallet, and could even choose them by picking a memorable and aesthetic pleasing icon. The attacker would then have to choose between testing a thousand passwords for 1 account or testing 10 accounts for 100 passwords. Since the user can be using the 12th account, there's a chance the attacker would have his salt, try his password combination and still not find his private key.\n### Interface Mockup\n\nThe following is just a mockup on how a brain wallet  could look like in the Wallet. Once a user selects an ethereum address field, a pop up would appear asking them to select a field from their contact list, recently used addresses or a new brain wallet. Once selecting the brain wallet, the user would fill the email, passphrase and then they could select from multiple addresses. Each address would take about a second to appear, and the user could select any page they want. \n#### Creating a new brain wallet:\n\n<img width=\"1192\" alt=\"screen shot 2016-03-09 at 1 23 53 pm\" src=\"https://cloud.githubusercontent.com/assets/112898/13642187/4087a9e4-e5fa-11e5-988a-1d587470d67b.png\">\n#### Loading an existing brain wallet\n\n<img width=\"1433\" alt=\"screen shot 2016-03-09 at 12 42 00 pm\" src=\"https://cloud.githubusercontent.com/assets/112898/13640658/5704e7fa-e5f4-11e5-9dc1-f9d0432ffabb.png\">\n",
  "closed_by": {
    "login": "alexvandesande",
    "id": 112898,
    "node_id": "MDQ6VXNlcjExMjg5OA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/112898?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alexvandesande",
    "html_url": "https://github.com/alexvandesande",
    "followers_url": "https://api.github.com/users/alexvandesande/followers",
    "following_url": "https://api.github.com/users/alexvandesande/following{/other_user}",
    "gists_url": "https://api.github.com/users/alexvandesande/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alexvandesande/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alexvandesande/subscriptions",
    "organizations_url": "https://api.github.com/users/alexvandesande/orgs",
    "repos_url": "https://api.github.com/users/alexvandesande/repos",
    "events_url": "https://api.github.com/users/alexvandesande/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alexvandesande/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/75/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/75/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194367156",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-194367156",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 194367156,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDM2NzE1Ng==",
    "user": {
      "login": "alexvandesande",
      "id": 112898,
      "node_id": "MDQ6VXNlcjExMjg5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/112898?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexvandesande",
      "html_url": "https://github.com/alexvandesande",
      "followers_url": "https://api.github.com/users/alexvandesande/followers",
      "following_url": "https://api.github.com/users/alexvandesande/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexvandesande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexvandesande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexvandesande/subscriptions",
      "organizations_url": "https://api.github.com/users/alexvandesande/orgs",
      "repos_url": "https://api.github.com/users/alexvandesande/repos",
      "events_url": "https://api.github.com/users/alexvandesande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexvandesande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-09T16:10:24Z",
    "updated_at": "2016-03-09T16:10:24Z",
    "author_association": "NONE",
    "body": "@axic also wrote a similar page almost at the same time: https://github.com/ethereum/EIPs/issues/76\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194367156/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194372339",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-194372339",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 194372339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDM3MjMzOQ==",
    "user": {
      "login": "pascalvanhecke",
      "id": 290665,
      "node_id": "MDQ6VXNlcjI5MDY2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/290665?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pascalvanhecke",
      "html_url": "https://github.com/pascalvanhecke",
      "followers_url": "https://api.github.com/users/pascalvanhecke/followers",
      "following_url": "https://api.github.com/users/pascalvanhecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/pascalvanhecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pascalvanhecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pascalvanhecke/subscriptions",
      "organizations_url": "https://api.github.com/users/pascalvanhecke/orgs",
      "repos_url": "https://api.github.com/users/pascalvanhecke/repos",
      "events_url": "https://api.github.com/users/pascalvanhecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pascalvanhecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-09T16:20:29Z",
    "updated_at": "2016-03-09T16:20:29Z",
    "author_association": "NONE",
    "body": "Suggestion: omit the term \"brain wallet\" altogether because it has a bad rep, and can only stir controversy.  This is not a brainwallet, as the main intent is not to memorize it, and the words are not chosen by users.\n\nElectrum [calls it](http://docs.electrum.org/en/latest/seedphrase.html) \"seed\", \"wallet seed\" or \"seed phrase\", BIP 39 [calls it](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki) mnemonic code or mnemonic sentence.\n\nI think \"writeable seed\" is still even better since it indicates the main purpose is low-tech cold storage?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194372339/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194377899",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-194377899",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 194377899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDM3Nzg5OQ==",
    "user": {
      "login": "alexvandesande",
      "id": 112898,
      "node_id": "MDQ6VXNlcjExMjg5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/112898?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexvandesande",
      "html_url": "https://github.com/alexvandesande",
      "followers_url": "https://api.github.com/users/alexvandesande/followers",
      "following_url": "https://api.github.com/users/alexvandesande/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexvandesande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexvandesande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexvandesande/subscriptions",
      "organizations_url": "https://api.github.com/users/alexvandesande/orgs",
      "repos_url": "https://api.github.com/users/alexvandesande/repos",
      "events_url": "https://api.github.com/users/alexvandesande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexvandesande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-09T16:28:08Z",
    "updated_at": "2016-03-09T16:28:08Z",
    "author_association": "NONE",
    "body": "@pascalvanhecke You are right, I renamed the EIP\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194377899/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194382148",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-194382148",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 194382148,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDM4MjE0OA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-09T16:32:35Z",
    "updated_at": "2016-03-09T16:39:09Z",
    "author_association": "MEMBER",
    "body": "I do like the idea of providing multiple accounts at the end and distinguish them with identicons, however I do think that part has to be considered in more depth.\n\nRemembering all this might be too much in certain cases:\n- username/email\n- generated seed (passphrase) (_are spaces sensitive or ignored?_)\n- and the actual account chosen\n\nYou display 12 accounts right now and offer a possibility to generate more. Depending on the KDF that might be too much effort in terms of CPU in a browser.\n\nIn terms of a user: **has to be displayed in the exact same layout with the exact identicons everywhere**. \n\nI do not think the account number (4 mixed-case letters!) would be remembered by anyone.  Extra care should be taken when generating those addresses to not have very similar identicons (and perhaps take color disabilities into consideration).\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194382148/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194383619",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-194383619",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 194383619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDM4MzYxOQ==",
    "user": {
      "login": "rfikki",
      "id": 1055929,
      "node_id": "MDQ6VXNlcjEwNTU5Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1055929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rfikki",
      "html_url": "https://github.com/rfikki",
      "followers_url": "https://api.github.com/users/rfikki/followers",
      "following_url": "https://api.github.com/users/rfikki/following{/other_user}",
      "gists_url": "https://api.github.com/users/rfikki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rfikki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rfikki/subscriptions",
      "organizations_url": "https://api.github.com/users/rfikki/orgs",
      "repos_url": "https://api.github.com/users/rfikki/repos",
      "events_url": "https://api.github.com/users/rfikki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rfikki/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-09T16:34:31Z",
    "updated_at": "2016-03-09T16:38:17Z",
    "author_association": "NONE",
    "body": "Suggestion, please change this text to more accurately portray what it is you are trying to state: \"The end goal should not an \"easy to memorize\" but rather a \"easy to write down/possible to memorize\", \". \n\nI kind of understand what you are trying to say, but for some it could be confusing.\n\nAlso kind of silly to tell the user how much ether to store at what security level. Is it not better to just give a security level rating: \n\nWarning not very secure\nMedium Security\nVery Secure\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194383619/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194409032",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-194409032",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 194409032,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDQwOTAzMg==",
    "user": {
      "login": "taoteh1221",
      "id": 1760489,
      "node_id": "MDQ6VXNlcjE3NjA0ODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1760489?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/taoteh1221",
      "html_url": "https://github.com/taoteh1221",
      "followers_url": "https://api.github.com/users/taoteh1221/followers",
      "following_url": "https://api.github.com/users/taoteh1221/following{/other_user}",
      "gists_url": "https://api.github.com/users/taoteh1221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/taoteh1221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/taoteh1221/subscriptions",
      "organizations_url": "https://api.github.com/users/taoteh1221/orgs",
      "repos_url": "https://api.github.com/users/taoteh1221/repos",
      "events_url": "https://api.github.com/users/taoteh1221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/taoteh1221/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-09T17:19:22Z",
    "updated_at": "2016-03-09T17:19:22Z",
    "author_association": "NONE",
    "body": "Since you are doing this in a GUI in your example (which looks great BTW), a \"Print\" dialogue prompt with an Icon / Text Button to print the seed phrase would be a good idea to display after generating the brain wallet. I could see typos writing it down by hand occurring. I personally agree with @rfikki that it is a good idea to be backed up in places other than the brain (like an encrypted / password-protected zip or rar file). :smile: \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194409032/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194416341",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-194416341",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 194416341,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDQxNjM0MQ==",
    "user": {
      "login": "alexvandesande",
      "id": 112898,
      "node_id": "MDQ6VXNlcjExMjg5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/112898?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexvandesande",
      "html_url": "https://github.com/alexvandesande",
      "followers_url": "https://api.github.com/users/alexvandesande/followers",
      "following_url": "https://api.github.com/users/alexvandesande/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexvandesande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexvandesande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexvandesande/subscriptions",
      "organizations_url": "https://api.github.com/users/alexvandesande/orgs",
      "repos_url": "https://api.github.com/users/alexvandesande/repos",
      "events_url": "https://api.github.com/users/alexvandesande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexvandesande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-09T17:35:54Z",
    "updated_at": "2016-03-09T17:35:54Z",
    "author_association": "NONE",
    "body": "@axic The account should not be something you need to memorize actually.  I think the idea should more like something @taoteh1221  is proposing, once you create the wallet it offers you the option of creating a PDF that you can print or send to an email and you'll keep all the accounts you need.\n\nAlso notice that which account to use should be sort of obvious to the user: it's either one that has some ether or token on it, or it's an account that is referenced in another contract.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194416341/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194416525",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-194416525",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 194416525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDQxNjUyNQ==",
    "user": {
      "login": "alexvandesande",
      "id": 112898,
      "node_id": "MDQ6VXNlcjExMjg5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/112898?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexvandesande",
      "html_url": "https://github.com/alexvandesande",
      "followers_url": "https://api.github.com/users/alexvandesande/followers",
      "following_url": "https://api.github.com/users/alexvandesande/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexvandesande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexvandesande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexvandesande/subscriptions",
      "organizations_url": "https://api.github.com/users/alexvandesande/orgs",
      "repos_url": "https://api.github.com/users/alexvandesande/repos",
      "events_url": "https://api.github.com/users/alexvandesande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexvandesande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-09T17:36:28Z",
    "updated_at": "2016-03-09T17:36:28Z",
    "author_association": "NONE",
    "body": "@rfikki suggestion?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194416525/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194425619",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-194425619",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 194425619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDQyNTYxOQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-09T18:01:08Z",
    "updated_at": "2016-03-09T18:01:08Z",
    "author_association": "MEMBER",
    "body": "@alexvandesande I think our motivations are different. Your proposal tries to make a secure seed wallet in all cases suitable for high value storage. The user should not need to reenter these details frequently, possibly only once or twice during the lifetime of the wallet.\n\nBased on that assumption it is a bit complex and heavy on RPC (need to check the balance of each address) and suits the use case in Mist well, but I do not see it as suitable for DApps.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194425619/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194429844",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-194429844",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 194429844,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDQyOTg0NA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-09T18:10:29Z",
    "updated_at": "2016-03-09T18:12:30Z",
    "author_association": "MEMBER",
    "body": "## Motivation\n\nTo have a standard process to generate wallets based on various sources of seed.\n\nIt should be:\n- easy to implement on the web and on phones\n- shouldn't take a long time (< 2 seconds) to calculate the seed (or at least the first _page_, as seen below)\n- provide a basic level of security with optionally increasing that with larger, securely generated passphrases\n\n## Seed requirements\n\nTwo inputs are required:\n- user identifier\n- passphrase\n\n### User identifier\n\nA user identifier without limitation on the content. It can be an email address to be memorable.\n\nRequirements:\n- must be at least 10 characters long\n\n### Passphrase\n\nA passphrase either entered manually or generated from a dictionary/seed tool.\n\nRequirements:\n- must be at least 10 characters long\n- specify alphabet? does space count? etc.\n\n## Calculation\n\n**This is a basic outline, but in no means a final proposal. It is potentially unsafe.**\n\nFirst devise master seed using scrypt with:\n- N = 1 << 12\n- r = 8\n- p = 6\n- dklen = 32\n\nThen calculate each account as a subsequent sha3 on the seed. e.g. `account1 = sha3(masterSeed)` and `account2 = sha3(sha3(masterSeed))`\n\nAt each account step, the appropriate Ethereum address should be calculated, and the step should not be used if the resulting address doesn't fit into 155bits. This is to have the address compatible with ICAP Direct. e.g. if `account1` doesn't fit, then  `account1 = sha3(sha3(masterSeed))` and `account2 = sha3(sha3(sha3(masterSeed)))`\n\n## Visual representation (UI)\n\nRequirements:\n- Allow user to enter a user id\n- Allow user to enter a passphrase\n- Display each account with the initial 5 characters of its address and its position (1st, 2nd, etc) in the derivation chain. Excluding the `0x` prefix.\n- Display 6 accounts first. Prompt for displaying the next 6.\n\nOptional:\n- Display strength of passphrase (based on?)\n- Offer the ability to generate passphrase from a dictionary\n- Display identicons next to the accounts\n- Format the account addresses using checksumming (#55)\n\n## Remarks\n\nThe user interface  looks great and can be applied to the above with the changes mentioned.\n\nAn important difference is allowing the user to set the passphrase. My main motivation is to use this seed wallet in low impact cases (such as on a DApp site to pay for execution fees). Given the formula of generating the wallet is fixed and higher entropy passphrases can be used, with the right implementation it should be feasible to use as a high value wallet.\n\nIt is possible this proposal is trying to reimplement what a HD wallet does. It may make sense to use a subset of HD wallets instead?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194429844/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194431430",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-194431430",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 194431430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDQzMTQzMA==",
    "user": {
      "login": "alexvandesande",
      "id": 112898,
      "node_id": "MDQ6VXNlcjExMjg5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/112898?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexvandesande",
      "html_url": "https://github.com/alexvandesande",
      "followers_url": "https://api.github.com/users/alexvandesande/followers",
      "following_url": "https://api.github.com/users/alexvandesande/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexvandesande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexvandesande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexvandesande/subscriptions",
      "organizations_url": "https://api.github.com/users/alexvandesande/orgs",
      "repos_url": "https://api.github.com/users/alexvandesande/repos",
      "events_url": "https://api.github.com/users/alexvandesande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexvandesande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-09T18:13:24Z",
    "updated_at": "2016-03-09T18:13:24Z",
    "author_association": "NONE",
    "body": "@axic  what you wrote sounded 100% compatible with what I am proposing, so I guess we are on the same page?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194431430/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194432708",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-194432708",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 194432708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDQzMjcwOA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-09T18:15:15Z",
    "updated_at": "2016-03-09T18:15:15Z",
    "author_association": "MEMBER",
    "body": "In point 2 you have this: _The user should never pick his own random seed._ That is the entire opposite :)\n\nThe other difference is the number of accounts displayed and how they are displayed.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194432708/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194435376",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-194435376",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 194435376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDQzNTM3Ng==",
    "user": {
      "login": "alexvandesande",
      "id": 112898,
      "node_id": "MDQ6VXNlcjExMjg5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/112898?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexvandesande",
      "html_url": "https://github.com/alexvandesande",
      "followers_url": "https://api.github.com/users/alexvandesande/followers",
      "following_url": "https://api.github.com/users/alexvandesande/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexvandesande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexvandesande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexvandesande/subscriptions",
      "organizations_url": "https://api.github.com/users/alexvandesande/orgs",
      "repos_url": "https://api.github.com/users/alexvandesande/repos",
      "events_url": "https://api.github.com/users/alexvandesande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexvandesande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-09T18:21:21Z",
    "updated_at": "2016-03-09T18:21:21Z",
    "author_association": "NONE",
    "body": "The number of accounts displayed, if we use a username or email as salt and even how to generate the seed phrase, is up to each clients implementation in my opinion. What really matters is that how to generate a key, based on salt + seed + account index, should be the same on all clients.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194435376/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194543604",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-194543604",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 194543604,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDU0MzYwNA==",
    "user": {
      "login": "trapp",
      "id": 559823,
      "node_id": "MDQ6VXNlcjU1OTgyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/559823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trapp",
      "html_url": "https://github.com/trapp",
      "followers_url": "https://api.github.com/users/trapp/followers",
      "following_url": "https://api.github.com/users/trapp/following{/other_user}",
      "gists_url": "https://api.github.com/users/trapp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trapp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trapp/subscriptions",
      "organizations_url": "https://api.github.com/users/trapp/orgs",
      "repos_url": "https://api.github.com/users/trapp/repos",
      "events_url": "https://api.github.com/users/trapp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trapp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-09T22:33:13Z",
    "updated_at": "2016-03-09T22:33:13Z",
    "author_association": "NONE",
    "body": "Have you thought about just using BIP32 hierarchical deterministic wallets with the BIP39 mnemonic word lists? Maybe follow even the BIP44 standard, Ethereum has been assigned coin type 60 in that standard. This has already been worked out and gives you real hierarchical wallets instead of just an account index.\n\nThe private keys are the same (secp256k1) in Ethereum and Bitcoin, public keys can get converted easily.\n\nLibraries are already written in multiple languages which would make integration easy as well.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194543604/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194557478",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-194557478",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 194557478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDU1NzQ3OA==",
    "user": {
      "login": "trapp",
      "id": 559823,
      "node_id": "MDQ6VXNlcjU1OTgyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/559823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trapp",
      "html_url": "https://github.com/trapp",
      "followers_url": "https://api.github.com/users/trapp/followers",
      "following_url": "https://api.github.com/users/trapp/following{/other_user}",
      "gists_url": "https://api.github.com/users/trapp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trapp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trapp/subscriptions",
      "organizations_url": "https://api.github.com/users/trapp/orgs",
      "repos_url": "https://api.github.com/users/trapp/repos",
      "events_url": "https://api.github.com/users/trapp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trapp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-09T23:04:23Z",
    "updated_at": "2016-03-09T23:10:22Z",
    "author_association": "NONE",
    "body": "Example Ethereum implementation of BIP44 in 60 lines: https://github.com/trapp/ethereum-bip44\n\nTo extend this to match the objective of this EIP we could use [bitcore-mnemonic](https://github.com/bitpay/bitcore-mnemonic) to create the HDPrivateKey used for the derivation from a 'writable mnemonic seed' (12 bip39 words):\n\n``` js\nvar EthereumBIP44 = require('ethereum-bip44');\nvar Mnemonic = require('bitcore-mnemonic');\nvar code = new Mnemonic('label cart bounce visit such wide warrior siren lake under stable panda');\nvar hd = new EthereumBIP44(code.toHDPrivateKey());\nconsole.log(hd.getAddress(0)); //0x47f283cff1e42e01bb050eb7d4b1e0a29dc8ebb2\nconsole.log(hd.getAddress(1)); //0x1af839859d829c6b190e87072717959b8f98e96a\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194557478/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194665799",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-194665799",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 194665799,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDY2NTc5OQ==",
    "user": {
      "login": "niran",
      "id": 106437,
      "node_id": "MDQ6VXNlcjEwNjQzNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/106437?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/niran",
      "html_url": "https://github.com/niran",
      "followers_url": "https://api.github.com/users/niran/followers",
      "following_url": "https://api.github.com/users/niran/following{/other_user}",
      "gists_url": "https://api.github.com/users/niran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/niran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/niran/subscriptions",
      "organizations_url": "https://api.github.com/users/niran/orgs",
      "repos_url": "https://api.github.com/users/niran/repos",
      "events_url": "https://api.github.com/users/niran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/niran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T05:00:44Z",
    "updated_at": "2016-03-10T05:00:44Z",
    "author_association": "NONE",
    "body": "Yes, please reuse BIPs 39 and 44. This is a solved problem.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194665799/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194701992",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-194701992",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 194701992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDcwMTk5Mg==",
    "user": {
      "login": "jprichardson",
      "id": 150063,
      "node_id": "MDQ6VXNlcjE1MDA2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/150063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jprichardson",
      "html_url": "https://github.com/jprichardson",
      "followers_url": "https://api.github.com/users/jprichardson/followers",
      "following_url": "https://api.github.com/users/jprichardson/following{/other_user}",
      "gists_url": "https://api.github.com/users/jprichardson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jprichardson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jprichardson/subscriptions",
      "organizations_url": "https://api.github.com/users/jprichardson/orgs",
      "repos_url": "https://api.github.com/users/jprichardson/repos",
      "events_url": "https://api.github.com/users/jprichardson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jprichardson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T06:56:46Z",
    "updated_at": "2016-03-10T06:56:46Z",
    "author_association": "NONE",
    "body": "> Yes, please reuse BIPs 39 and 44. This is a solved problem.\n\nIndeed. This is what we do in Exodus - for all coins/tokens. Please just use BIP39/BIP44. This would ensure compatibility across a diverse range of wallets.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194701992/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194812148",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-194812148",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 194812148,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDgxMjE0OA==",
    "user": {
      "login": "alexvandesande",
      "id": 112898,
      "node_id": "MDQ6VXNlcjExMjg5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/112898?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexvandesande",
      "html_url": "https://github.com/alexvandesande",
      "followers_url": "https://api.github.com/users/alexvandesande/followers",
      "following_url": "https://api.github.com/users/alexvandesande/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexvandesande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexvandesande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexvandesande/subscriptions",
      "organizations_url": "https://api.github.com/users/alexvandesande/orgs",
      "repos_url": "https://api.github.com/users/alexvandesande/repos",
      "events_url": "https://api.github.com/users/alexvandesande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexvandesande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T11:58:32Z",
    "updated_at": "2016-03-10T11:58:32Z",
    "author_association": "NONE",
    "body": "Thanks for the suggestions I will take a loony at those BIP, of course I favor reusability and compatibility. \n\n> On Mar 10, 2016, at 03:56, JP Richardson notifications@github.com wrote:\n> \n> Yes, please reuse BIPs 39 and 44. This is a solved problem.\n> \n> Indeed. This is what we do in Exodus - for all coins/tokens. Please just use BIP39/BIP44. This would ensure compatibility across a diverse range of wallets.\n> \n> —\n> Reply to this email directly or view it on GitHub.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194812148/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194841713",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-194841713",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 194841713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDg0MTcxMw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T13:39:34Z",
    "updated_at": "2016-03-10T13:40:45Z",
    "author_association": "MEMBER",
    "body": "I think there are two distinct use cases:\n- low impact wallet\n- high impact wallet\n\nI think @alexvandesande's target was something between the two. My proposal (as above and in #76) targets low impact wallets.\n\n### High impact wallet\n\nThis should definitely just follow BIP32 as there is no point reinventing the wheel. I do have a few comments regarding BIP32:\n\n1) should we define our own _network_, e.g. priv/pub prefixes for the Base58 exports\n\nProbably not if it wants to be compatible with hardware wallets and the master seed starts from the text 'Bitcoin seed' anyway.\n\n2) at a closer look, using vanilla BIP32 as is might not be as elegant as Ethereum strives to be:\n- uses RIPEM160 in the fingerprint\n- forces the use of compressed keys, which have to be decompressed for the purpose of address generation\n\nProbably these two aren't worth changing either.\n\n3) BIP32 is (almost?) exclusively used with BIP39 mnemonics. Is it worth considering other dictionaries (as mentioned in above)?\n\nPerhaps if it is using vanilla BIP32, there is no point changing dictionaries either.\n\n### Low impact wallet\n\nThis is a lower security wallet only to be used for small amounts, predominantly for interacting with low impact DApps.\n\nAs BIP44 (well, SLIP44) allocates coin type 60 for Ethereum, the first public address would be the path `m/44'/60'/0'/0/0`. That is at least 106 derivation steps (not counting possible invalid key steps which have to be skipped). Each step involves SHA512-HMAC + ECC multiplication and/or addition.\n\nThat might be too much effort CPU wise and the code is slightly more complex. These might be the reasons it is not used on Ethereum sites yet?\n\nMaybe a good middle ground would be fleshing out a restricted feature set of BIP32 for these low impact wallets?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194841713/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194882775",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-194882775",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 194882775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDg4Mjc3NQ==",
    "user": {
      "login": "jprichardson",
      "id": 150063,
      "node_id": "MDQ6VXNlcjE1MDA2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/150063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jprichardson",
      "html_url": "https://github.com/jprichardson",
      "followers_url": "https://api.github.com/users/jprichardson/followers",
      "following_url": "https://api.github.com/users/jprichardson/following{/other_user}",
      "gists_url": "https://api.github.com/users/jprichardson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jprichardson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jprichardson/subscriptions",
      "organizations_url": "https://api.github.com/users/jprichardson/orgs",
      "repos_url": "https://api.github.com/users/jprichardson/repos",
      "events_url": "https://api.github.com/users/jprichardson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jprichardson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T14:49:36Z",
    "updated_at": "2016-03-10T14:52:27Z",
    "author_association": "NONE",
    "body": "> should we define our own network, e.g. priv/pub prefixes for the Base58 exports\n\nNo. See: https://github.com/bitcoin/bips/blob/master/bip-0043.mediawiki#node-serialization\n\n> master seed starts from the text 'Bitcoin seed' anyway.\n\nYep.\n\n> at a closer look, using vanilla BIP32 as is might not be as elegant as Ethereum strives to be:\n\nYou only really care about this scheme to derive private keys in a compatible way. With this new private key, you can then generate the the Ethereum address (and public) in the Ethereum way. That's what we do.\n\n> BIP32 is (almost?) exclusively used with BIP39 mnemonics.\n\nYes, today BIP39 and BIP32/44 are frequently used together although they don't have to be.\n\n>  Is it worth considering other dictionaries (as mentioned in above)?\n\nPer the BIP39 standard, technically the dictionary does not matter. i.e. you could use any text to seed for BIP32 - that is, in any correct BIP39 implementation the same text will always produce the same seed. However, practically, it would matter, because most wallets now check (validate) the mnemonic to make sure that it matches the dictionary. Why not just use the standard dictionary?\n\n> As BIP44 (well, SLIP44) allocates coin type 60 for Ethereum, the first public address would be the path m/44'/60'/0'/0/0.\n\nCorrect.\n\n> That might be too much effort CPU wise and the code is slightly more complex.\n\nI disagree, but I don't have hard numbers handy. Probably worth benchmarking here. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194882775/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195024150",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-195024150",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 195024150,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTAyNDE1MA==",
    "user": {
      "login": "leafcutterant",
      "id": 7106231,
      "node_id": "MDQ6VXNlcjcxMDYyMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7106231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leafcutterant",
      "html_url": "https://github.com/leafcutterant",
      "followers_url": "https://api.github.com/users/leafcutterant/followers",
      "following_url": "https://api.github.com/users/leafcutterant/following{/other_user}",
      "gists_url": "https://api.github.com/users/leafcutterant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leafcutterant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leafcutterant/subscriptions",
      "organizations_url": "https://api.github.com/users/leafcutterant/orgs",
      "repos_url": "https://api.github.com/users/leafcutterant/repos",
      "events_url": "https://api.github.com/users/leafcutterant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leafcutterant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T20:02:28Z",
    "updated_at": "2016-03-10T23:20:48Z",
    "author_association": "NONE",
    "body": "I highly agree, both with the need for a mnemonic-based HD wallet structure, and most of the mentioned methods to achieve it. Allow me some comments though:\n\n@alexvandesande \n\n>  Users are used to the pattern email + password as a login on social networks, so while the way this works is different, they might feel more at ease\n\nThis is a **very bad** idea. Most people heavily re-use credentials even when prompted not to. If you go this way, Facebook/Gmail/any-big-provider will be \"co-owners\" and potential thieves of a big chunk of ethers.\n\n> The option of selecting between string generation scheme\n\nThis is great from a perspective of user freedom. But it may backfire in terms of compatibility and also makes things more difficult for novice users who can't understand why certain schemes would or would not fit them.\n\n> The user should never pick his own random seed.\n\nI very much disagree with this. I see your fear and agree with the possible dangers, but as some advanced option maybe, the user shall be given the option to set the seed. What if I want to use my seed that I already used with other applications and successfully memorized? Or better, what if I don't trust the wallet's (or my computer's) entropy and want to generate my own with my dices?\n\n> Pseudo-words.\n\nThis sounds like a good idea, but I fear that in reality, less people would choose this. It may be half the length of a regular seed, but it's more than two times more difficult to memorize.\n\n@taoteh1221 \n\n> Since you are doing this in a GUI in your example (which looks great BTW), a \"Print\" dialogue prompt with an Icon / Text Button to print the seed phrase would be a good idea to display after generating the brain wallet. I could see typos writing it down by hand occurring. I personally agree with @rfikki that it is a good idea to be backed up in places other than the brain (like an encrypted / password-protected zip or rar file). :smile:\n\nI wouldn't go with this. The file to be printed would have to leave the safe memory space of the wallet, and it would remain in 1) the operating system's temp files 2) the memory (or what) of the printer (think of today's smart printers). Mnemonics are engineered with the purpose to be able to write them down easily with pen and paper – they are short and use common, short words.\n\n@trapp: I've been eyeing with your EIP for long, dude, thank you for it. I agree, we shouldn't reinvent the wheel, let's use already working solutions.\n\nSuggestion: in the wallet hierarchy, please use accounts (or, as they are called more appropriately in Dark Wallet, \"pockets\"). It would be important, in order to protect privacy through separating blockchain traces.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195024150/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195034725",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-195034725",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 195034725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTAzNDcyNQ==",
    "user": {
      "login": "taoteh1221",
      "id": 1760489,
      "node_id": "MDQ6VXNlcjE3NjA0ODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1760489?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/taoteh1221",
      "html_url": "https://github.com/taoteh1221",
      "followers_url": "https://api.github.com/users/taoteh1221/followers",
      "following_url": "https://api.github.com/users/taoteh1221/following{/other_user}",
      "gists_url": "https://api.github.com/users/taoteh1221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/taoteh1221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/taoteh1221/subscriptions",
      "organizations_url": "https://api.github.com/users/taoteh1221/orgs",
      "repos_url": "https://api.github.com/users/taoteh1221/repos",
      "events_url": "https://api.github.com/users/taoteh1221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/taoteh1221/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T20:31:59Z",
    "updated_at": "2016-03-10T20:31:59Z",
    "author_association": "NONE",
    "body": "@leafcutterant \n\n> > Since you are doing this in a GUI in your example (which looks great BTW), a \"Print\" dialogue prompt with an Icon / Text Button to print the seed phrase would be a good idea to display after generating the brain wallet. I could see typos writing it down by hand occurring. I personally agree with @rfikki that it is a good idea to be backed up in places other than the brain (like an encrypted / password-protected zip or rar file). :smile:\n> \n> I wouldn't go with this. The file to be printed would have to leave the safe memory space of the wallet, and it would remain in 1) the operating system's temp files 2) the memory (or what) of the printer (think of today's smart printers). Mnemonics are engineered with the purpose to be able to write them down easily with pen and paper – they are short and use common, short words.\n\nVery good point, but I think considering inexperienced new end users are required for mass adoption, coming up with some kind of a balance between ease-of-use with failsafes and security may be good to consider. Maybe just do some heavy backup prompting textually, with a warning there is no password recovery etc etc. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195034725/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195035676",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-195035676",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 195035676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTAzNTY3Ng==",
    "user": {
      "login": "alexvandesande",
      "id": 112898,
      "node_id": "MDQ6VXNlcjExMjg5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/112898?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexvandesande",
      "html_url": "https://github.com/alexvandesande",
      "followers_url": "https://api.github.com/users/alexvandesande/followers",
      "following_url": "https://api.github.com/users/alexvandesande/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexvandesande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexvandesande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexvandesande/subscriptions",
      "organizations_url": "https://api.github.com/users/alexvandesande/orgs",
      "repos_url": "https://api.github.com/users/alexvandesande/repos",
      "events_url": "https://api.github.com/users/alexvandesande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexvandesande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T20:35:43Z",
    "updated_at": "2016-03-10T20:35:43Z",
    "author_association": "NONE",
    "body": "@leafcutterant @taoteh1221 I think it's a bit too early to discuss printing but I think it's solvable: have a safer option where you print a PDF with some information like the salt and a list of the generated wallets, and leave a blank space for the user to write the seed down. Of course, the UI needs to make sure the user wrote the seed down after printing. Armoury does a similar thing\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195035676/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195070880",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-195070880",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 195070880,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTA3MDg4MA==",
    "user": {
      "login": "taoteh1221",
      "id": 1760489,
      "node_id": "MDQ6VXNlcjE3NjA0ODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1760489?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/taoteh1221",
      "html_url": "https://github.com/taoteh1221",
      "followers_url": "https://api.github.com/users/taoteh1221/followers",
      "following_url": "https://api.github.com/users/taoteh1221/following{/other_user}",
      "gists_url": "https://api.github.com/users/taoteh1221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/taoteh1221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/taoteh1221/subscriptions",
      "organizations_url": "https://api.github.com/users/taoteh1221/orgs",
      "repos_url": "https://api.github.com/users/taoteh1221/repos",
      "events_url": "https://api.github.com/users/taoteh1221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/taoteh1221/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T21:57:51Z",
    "updated_at": "2016-03-10T21:57:51Z",
    "author_association": "NONE",
    "body": ":+1: \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195070880/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195148414",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-195148414",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 195148414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTE0ODQxNA==",
    "user": {
      "login": "christianlundkvist",
      "id": 6892901,
      "node_id": "MDQ6VXNlcjY4OTI5MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6892901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/christianlundkvist",
      "html_url": "https://github.com/christianlundkvist",
      "followers_url": "https://api.github.com/users/christianlundkvist/followers",
      "following_url": "https://api.github.com/users/christianlundkvist/following{/other_user}",
      "gists_url": "https://api.github.com/users/christianlundkvist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/christianlundkvist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/christianlundkvist/subscriptions",
      "organizations_url": "https://api.github.com/users/christianlundkvist/orgs",
      "repos_url": "https://api.github.com/users/christianlundkvist/repos",
      "events_url": "https://api.github.com/users/christianlundkvist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/christianlundkvist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-11T02:23:56Z",
    "updated_at": "2016-03-11T02:23:56Z",
    "author_association": "NONE",
    "body": "I'm also favoring BIP32 and BIP44 (at least at this point). In [Lightwallet](https://github.com/ConsenSys/eth-lightwallet) a different BIP32 derivation path is used ATM by default but I plan on using BIP44 specifically for addresses that are used to send/receive ETH value.\n\nThere is a long discussion to be had about HD key derivation paths for various purposes: Ethereum keys used for dapp interactions / keys used for value transfer / keys used for encryption.\n\n@axic I am staunchly against letting the user pick their own passphrase. People _will_ pick \"password\" and their son's name (these are the two passwords one of my friends likes to use) and they will lose their money instantly. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195148414/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195152694",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-195152694",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 195152694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTE1MjY5NA==",
    "user": {
      "login": "cubedro",
      "id": 6094026,
      "node_id": "MDQ6VXNlcjYwOTQwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6094026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cubedro",
      "html_url": "https://github.com/cubedro",
      "followers_url": "https://api.github.com/users/cubedro/followers",
      "following_url": "https://api.github.com/users/cubedro/following{/other_user}",
      "gists_url": "https://api.github.com/users/cubedro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cubedro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cubedro/subscriptions",
      "organizations_url": "https://api.github.com/users/cubedro/orgs",
      "repos_url": "https://api.github.com/users/cubedro/repos",
      "events_url": "https://api.github.com/users/cubedro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cubedro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-11T02:38:49Z",
    "updated_at": "2016-03-11T02:38:49Z",
    "author_association": "MEMBER",
    "body": ":+1: \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195152694/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195568850",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-195568850",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 195568850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTU2ODg1MA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-11T21:53:56Z",
    "updated_at": "2016-03-11T22:01:06Z",
    "author_association": "MEMBER",
    "body": "@christianlundkvist I am still sticking to my point that different use cases may require different solutions.\n\nIf someone is looking forward to create a proper HD wallet, that should just work based off BIP32 + BIP39. This issue got fully transformed into a discussion about mnemonic seed wallets and for that I fully agree to follow these.\n\nIf the wallet is for the purpose of paying for gas and storing insignificant amounts, then it might not be the best solution in my opinion. In my use case, the user has to enter the \"seed\" every single time trying to use the app. If it is a BIP39 mnemonic based seed they will just copy & paste that. Who would try to remember that for a wallet worth <1 ETH?\n\nIt is possible that this use case is very limited and no one else is facing that apart from me.\n\n(This issue started out with a different title, namely brain wallet. The use case I describe fits the \"brain wallet\" scenario and not the \"mnemonic seed wallet\" one. Maybe better to move this part of the discussion to #76 to avoid confusion.)\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/195568850/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/198575053",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-198575053",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 198575053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODU3NTA1Mw==",
    "user": {
      "login": "christianlundkvist",
      "id": 6892901,
      "node_id": "MDQ6VXNlcjY4OTI5MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6892901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/christianlundkvist",
      "html_url": "https://github.com/christianlundkvist",
      "followers_url": "https://api.github.com/users/christianlundkvist/followers",
      "following_url": "https://api.github.com/users/christianlundkvist/following{/other_user}",
      "gists_url": "https://api.github.com/users/christianlundkvist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/christianlundkvist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/christianlundkvist/subscriptions",
      "organizations_url": "https://api.github.com/users/christianlundkvist/orgs",
      "repos_url": "https://api.github.com/users/christianlundkvist/repos",
      "events_url": "https://api.github.com/users/christianlundkvist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/christianlundkvist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-18T23:07:13Z",
    "updated_at": "2016-03-18T23:07:13Z",
    "author_association": "NONE",
    "body": "@axic I think in future use cases the amount of Ether in an address will have little correlation to the value or sensitivity of that address. Think about having an address that is used to digitally signing important documents or an admin key for an important smart contract. You only need < 1 ETH in that address, but it is vitally important to safeguard that private key. In my \"dream\" scenario the user would never have to see or interact with their private keys, they would be randomly generated on their devices with backup systems in place to allow them to replace their keys if all their devices are lost. It will take some time to get there though...\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/198575053/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/198583944",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-198583944",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 198583944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODU4Mzk0NA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-18T23:31:18Z",
    "updated_at": "2016-03-18T23:31:37Z",
    "author_association": "MEMBER",
    "body": "@christianlundkvist to clarify, by \"worth < 1 ETH\" I not only meant that it stores < 1 ETH in that address, rather that the overall impact it has is around that value. If, through a contract its impact is bigger, then it doesn't fall under the low impact account criteria.\n\nA master key for a wallet contract would clearly not mean it is low impact.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/198583944/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/200991754",
    "html_url": "https://github.com/ethereum/EIPs/issues/75#issuecomment-200991754",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/75",
    "id": 200991754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDk5MTc1NA==",
    "user": {
      "login": "christianlundkvist",
      "id": 6892901,
      "node_id": "MDQ6VXNlcjY4OTI5MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6892901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/christianlundkvist",
      "html_url": "https://github.com/christianlundkvist",
      "followers_url": "https://api.github.com/users/christianlundkvist/followers",
      "following_url": "https://api.github.com/users/christianlundkvist/following{/other_user}",
      "gists_url": "https://api.github.com/users/christianlundkvist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/christianlundkvist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/christianlundkvist/subscriptions",
      "organizations_url": "https://api.github.com/users/christianlundkvist/orgs",
      "repos_url": "https://api.github.com/users/christianlundkvist/repos",
      "events_url": "https://api.github.com/users/christianlundkvist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/christianlundkvist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-24T19:54:12Z",
    "updated_at": "2016-03-24T19:54:12Z",
    "author_association": "NONE",
    "body": "@axic Cool, understood! I guess I wanted to convey that in general it might be hard to know in advance if a key will be used for something trivial or important, so it may be better to make sure that it's hard for the user to get confused and use an insecure method.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/200991754/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
