{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/2561",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2561/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2561/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2561/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/2561",
  "id": 582654667,
  "node_id": "MDU6SXNzdWU1ODI2NTQ2Njc=",
  "number": 2561,
  "title": "EIP: eth_simulateTransaction - transaction dry runs",
  "user": {
    "login": "petejkim",
    "id": 30173,
    "node_id": "MDQ6VXNlcjMwMTcz",
    "avatar_url": "https://avatars.githubusercontent.com/u/30173?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/petejkim",
    "html_url": "https://github.com/petejkim",
    "followers_url": "https://api.github.com/users/petejkim/followers",
    "following_url": "https://api.github.com/users/petejkim/following{/other_user}",
    "gists_url": "https://api.github.com/users/petejkim/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/petejkim/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/petejkim/subscriptions",
    "organizations_url": "https://api.github.com/users/petejkim/orgs",
    "repos_url": "https://api.github.com/users/petejkim/repos",
    "events_url": "https://api.github.com/users/petejkim/events{/privacy}",
    "received_events_url": "https://api.github.com/users/petejkim/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2020-03-16T23:22:52Z",
  "updated_at": "2022-04-24T20:03:15Z",
  "closed_at": "2022-04-24T20:03:15Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "---\r\neip: EIP-2561\r\ntitle: eth_simulateTransaction - transaction dry runs\r\nauthor: Peter Jihoon Kim (@petejkim)\r\ndiscussions-to: [tbd]\r\nstatus: Draft\r\ntype: Standards Track\r\ncategory (*only required for Standard Track): Interface\r\ncreated: 2020-03-16\r\n---\r\n\r\n[Pull Request](https://github.com/ethereum/EIPs/pull/2560)\r\n\r\n## Simple Summary\r\n\r\nWallet/DApp browser software should provide as much information as possible when presenting a transaction to the user to sign, as there may be unforeseen consequences including a potential loss of funds. A new JSONRPC method `eth_simulateTransaction` enables wallets to perform a dry run of the transaction so that it can provide more information about what might happen such as token movements.\r\n\r\n## Abstract\r\n\r\nThis is a standard for a new JSONRPC endpoint `eth_simulateTransaction` that enables clients to perform a dry run (transaction simulation) before signing and submitting an actual transaction.\r\n\r\n## Motivation\r\n\r\nWhen transaction signing is requested and presented to the user, wallet/DApp browser software (\"wallets\") should attempt to inform the user of what the transaction entails and what the side effects may be.\r\n\r\nCurrently, most wallets simply show basic transaction parameters such as the recipient address, the value of ETH being transferred, the gas price/limit, and the encoded data. For well-known transaction types such as ERC20 `approve()` and `transfer()`, some wallets decode the call data and present additional information.\r\n\r\nFor most smart contract transactions however, what the transaction entails is completely opaque to average users, and a malicious transaction may even appear completely harmless (a smart contract transaction will show the value being transferred as zero as if no ETH is moved, but may nevertheless be moving other types of assets such as ERC20 tokens if an allowance was set previously).\r\n\r\nThis is terrible for user experience as it encourages users to be accustomed to signing transactions blindly, which may have adverse consequences such as loss of funds.\r\n\r\nA new JSONRPC method `eth_simulateTransaction` aims to improve the situation by providing a way for wallets to perform a dry run and read events emitted (such as the ERC20 `Transfer` events), thereby enabling the user to make a more informed decision about whether to sign a transaction that is requested.\r\n\r\n## Specification\r\n\r\n#### eth_simulateTransaction\r\n\r\nPerforms a dry-run of the transaction and returns a transaction result object. The transaction will not be added to the blockchain. Note that the actual transaction may have a different result for a variety of reasons including EVM mechanics, node performance, and the difference in the state of the blockchain when the transaction is processed.\r\n\r\n##### Parameters\r\n\r\n1. `Object` - The transaction object\r\n  - `from`: `DATA`, 20 Bytes - The address the transaction is send from.\r\n  - `to`: `DATA`, 20 Bytes - (optional when creating new contract) The address the transaction is directed to.\r\n  - `gas`: `QUANTITY`  - (optional, default: 90000) Integer of the gas provided for the transaction execution. It will return unused gas.\r\n  - `gasPrice`: `QUANTITY`  - (optional, default: To-Be-Determined) Integer of the gasPrice used for each paid gas\r\n  - `value`: `QUANTITY`  - (optional) Integer of the value sent with this transaction\r\n  - `data`: `DATA`  - The compiled code of a contract OR the hash of the invoked method signature and encoded parameters. For details see [Ethereum Contract ABI](https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI)\r\n  - `nonce`: `QUANTITY`  - (optional) Integer of a nonce. This allows to overwrite your own pending transactions that use the same nonce.\r\n\r\n##### Example Parameters\r\n```js\r\nparams: [{\r\n  \"from\": \"0x1111111111111111111111111111111111111111\",\r\n  \"to\": \"0x2222222222222222222222222222222222222222\",\r\n  \"gas\": \"0x200000\",\r\n  \"gasPrice\": \"0x3b9aca00\",\r\n  \"value\": \"0x0\",\r\n  \"data\": \"0xdeadbeef000000000000000000000001111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000abcde\"\r\n}]\r\n```\r\n\r\n##### Returns\r\n\r\n`Object` - A transaction result object.\r\n\r\n  - `transactionHash`: `DATA`, 32 Bytes - hash of the transaction.\r\n  - `from`: `DATA`, 20 Bytes - address of the sender.\r\n  - `to`: `DATA`, 20 Bytes - address of the receiver. null when it's a contract creation transaction.\r\n  - `gasUsed`: `QUANTITY` - The amount of gas used by this specific transaction alone.\r\n  - `contractAddress`: `DATA`, 20 Bytes - The contract address created, if the transaction was a contract creation, otherwise `null`.\r\n  - `logs`: `Array` - Array of log objects, which this transaction generated.\r\n\r\n##### Example\r\n```js\r\n// Request\r\ncurl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_sendTransaction\",\"params\":[{see above}],\"id\":1}'\r\n\r\n// Result\r\n{\r\n  \"id\": 1,\r\n  \"jsonrpc\": \"2.0\",\r\n  \"result\": {\r\n    \"transactionHash\": \"0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n    \"from\": \"0x1111111111111111111111111111111111111111\",\r\n    \"to\": \"0x2222222222222222222222222222222222222222\",\r\n    \"gasUsed\": \"0x123456\",\r\n    \"contractAddress\": \"0x3333333333333333333333333333333333333333\", // or null, if none was created\r\n    \"logs\": [{\r\n        // logs as returned by getFilterLogs, etc.\r\n    }, ...]\r\n  }\r\n}\r\n```\r\n\r\n## Rationale\r\n\r\nThe request parameters are the same as `eth_sendTransaction`, and the response is a subset of a transaction receipt object you can obtain using `eth_getTransactionReceipt`, for consistency and familiarity.\r\n\r\nNote that it does not require a signed transaction (raw tx), as the motivation is to provide more information to the user before signing happens.\r\n\r\n## Implementation\r\n\r\nThere is an existing method `eth_estimateGas` that already performs transaction dry runs, but the method only returns the amount of gas used by the transaction. The code for `eth_estimateGas` may be reusable for the implementation of `eth_simulateTransaction`.\r\n\r\n## Security Considerations\r\n\r\nWallets and DApp browsers utilizing `eth_simulateTransaction` must highlight that it can only provide an _estimated_ outcome and that the actual mileage may vary.\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).\r\n",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/2561/reactions",
    "total_count": 9,
    "+1": 9,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/2561/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/602650138",
    "html_url": "https://github.com/ethereum/EIPs/issues/2561#issuecomment-602650138",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2561",
    "id": 602650138,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjY1MDEzOA==",
    "user": {
      "login": "jstoxrocky",
      "id": 5459666,
      "node_id": "MDQ6VXNlcjU0NTk2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5459666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstoxrocky",
      "html_url": "https://github.com/jstoxrocky",
      "followers_url": "https://api.github.com/users/jstoxrocky/followers",
      "following_url": "https://api.github.com/users/jstoxrocky/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstoxrocky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstoxrocky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstoxrocky/subscriptions",
      "organizations_url": "https://api.github.com/users/jstoxrocky/orgs",
      "repos_url": "https://api.github.com/users/jstoxrocky/repos",
      "events_url": "https://api.github.com/users/jstoxrocky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstoxrocky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-23T14:54:10Z",
    "updated_at": "2020-03-23T14:54:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this is a good idea.  The hex `data` field displayed in wallet software when interacting with a contract function is not great UI for someone without the ability to parse insight from it.  \r\n\r\nMy understanding is that with `eth_simulateTransaction` users will gain (reasonable) confirmation that (1) the transaction succeeds, (2) a list of event logs that would be created upon an actual transaction. Any other information we gain from this?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/602650138/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/631617210",
    "html_url": "https://github.com/ethereum/EIPs/issues/2561#issuecomment-631617210",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2561",
    "id": 631617210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTYxNzIxMA==",
    "user": {
      "login": "Nokhal",
      "id": 13810287,
      "node_id": "MDQ6VXNlcjEzODEwMjg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13810287?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nokhal",
      "html_url": "https://github.com/Nokhal",
      "followers_url": "https://api.github.com/users/Nokhal/followers",
      "following_url": "https://api.github.com/users/Nokhal/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nokhal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nokhal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nokhal/subscriptions",
      "organizations_url": "https://api.github.com/users/Nokhal/orgs",
      "repos_url": "https://api.github.com/users/Nokhal/repos",
      "events_url": "https://api.github.com/users/Nokhal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nokhal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-20T17:29:14Z",
    "updated_at": "2020-05-21T09:43:40Z",
    "author_association": "NONE",
    "body": "Good idea. I would also extend the features to allow for calls (view only) to be atomatically chained after a transaction dry run, the use case being using view functions to check for status after a transaction dry run. (Essentially easily allowing for easy front-end manipulation of postulat checks)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/631617210/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1094358988",
    "html_url": "https://github.com/ethereum/EIPs/issues/2561#issuecomment-1094358988",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2561",
    "id": 1094358988,
    "node_id": "IC_kwDOAq426M5BOpfM",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-04-10T20:02:43Z",
    "updated_at": "2022-04-10T20:02:43Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1094358988/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1107908833",
    "html_url": "https://github.com/ethereum/EIPs/issues/2561#issuecomment-1107908833",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2561",
    "id": 1107908833,
    "node_id": "IC_kwDOAq426M5CCVjh",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-04-24T20:03:15Z",
    "updated_at": "2022-04-24T20:03:15Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1107908833/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
