{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/182",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/182/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/182/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/182/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/182",
  "id": 193882767,
  "node_id": "MDU6SXNzdWUxOTM4ODI3Njc=",
  "number": 182,
  "title": "Control Protocol Parameters with on-chain governance",
  "user": {
    "login": "CJentzsch",
    "id": 8452011,
    "node_id": "MDQ6VXNlcjg0NTIwMTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8452011?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/CJentzsch",
    "html_url": "https://github.com/CJentzsch",
    "followers_url": "https://api.github.com/users/CJentzsch/followers",
    "following_url": "https://api.github.com/users/CJentzsch/following{/other_user}",
    "gists_url": "https://api.github.com/users/CJentzsch/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/CJentzsch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/CJentzsch/subscriptions",
    "organizations_url": "https://api.github.com/users/CJentzsch/orgs",
    "repos_url": "https://api.github.com/users/CJentzsch/repos",
    "events_url": "https://api.github.com/users/CJentzsch/events{/privacy}",
    "received_events_url": "https://api.github.com/users/CJentzsch/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2016-12-06T20:59:39Z",
  "updated_at": "2022-01-17T08:15:17Z",
  "closed_at": "2022-01-17T08:15:17Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "<pre>\r\n  EIP: draft\r\n  Title: Control Protocol Parameters by defined governance\r\n  Author: Christoph Jentzsch <christoph@slock.it>\r\n  Status: Draft\r\n  Type: Informal\r\n  Layer: Consensus (hard-fork)\r\n  Created: 2016-12-06\r\n</pre>\r\n\r\n==Abstract==\r\n\r\nThis is a proposal to move most constants of the protocol (https://github.com/ethereum/common/blob/master/params.json) in a contract, to be controlled by a choosen goverment model.\r\n\r\n==Motivation==\r\n\r\n1. This is in line with https://github.com/ethereum/EIPs/issues/86, which intends to move protocol logic and data needed to construct a new block into the EVM.\r\n\r\n2. Most constants are gas costs for several opcodes. Fine tuning will be an ongoing process and currently requires a hard fork each time. This EIP would remove the necessity for a hard fork for future optimizations.\r\n\r\n==Specification==\r\n\r\nThe following contract is used to specify the parameters:\r\n\r\n```\r\ncontract Governance{\r\n    function vote(bytes32 _voteID, bool _support) payable;\r\n    function result(bytes32 _voteID) returns (bool);\r\n}\r\n\r\n\r\ncontract ProtocolParameters {\r\n    mapping(uint => uint) public parameters;\r\n    Governance public governanceAddress = Governance(0x00); // to be replaced by correct address\r\n    \r\n    function setParameter(uint _key, uint _value){\r\n        bytes32 hash = sha256(this, _key, _value);\r\n        if (governanceAddress.result(hash))\r\n            parameters[_key] = _value;\r\n    }\r\n}\r\n```\r\n\r\n\r\nThe parameters in https://github.com/ethereum/common/blob/master/params.json, except of `genesisGasLimit` and `genesisDifficulty`, are indexed with 0..47 in the order of appearance.\r\nThis index is used as the key in the `parameters` map.\r\nClients use this contract to read the current value in order to correctly process blocks.\r\n\r\n\r\nGovernance:\r\n\r\n\r\nVariant A - MinerGovernance:\r\n\r\n\r\nIn this case the miners vote for those parameters, the following contract (or a derivative of it) is used:\r\n\r\n\r\n```\r\ncontract MinerVote is Governance{\r\n    struct Vote {\r\n        uint approve;\r\n        uint oppose;\r\n        uint startBlock;\r\n    }\r\n    \r\n    uint constant minQuorum = 10000;\r\n    \r\n    mapping (bytes32 => Vote) public votes;\r\n    \r\n    function vote(bytes32 _voteID, bool _support) payable {\r\n        if (msg.sender != block.coinbase) throw;\r\n        Vote vote = votes[_voteID];\r\n        if (vote.startBlock == 0) vote.startBlock = block.number;\r\n        if (_support)\r\n            vote.approve++;\r\n        else\r\n            vote.oppose++;\r\n    }\r\n    \r\n    function result(bytes32 _voteID) returns (bool) {\r\n        Vote vote = votes[_voteID];\r\n        if (vote.approve > vote.oppose \r\n            && (vote.approve + vote.oppose) * 4 > (block.number - vote.startBlock) // at least 25% of hash power has voted\r\n            && vote.approve + vote.oppose > minQuorum)\r\n        // alternatives:\r\n        //  if (vote.approve > vote.oppose && vote.approve > minQuorum)\r\n        //  more advanced voting rules could be used (prevention of ambush attacks, ...)\r\n            return true;\r\n    }\r\n}\r\n```\r\n\r\nVariant B - Stake governance\r\n\r\nIn this case voting is weighted by the amount of Ether given as a deposit, similar in spirit as Proof Of Stake.\r\n\r\nthe following contract (or a derivative of it) is used:\r\n\r\n```\r\ncontract StakeVote is Governance{\r\n    struct Vote {\r\n        uint approve;\r\n        uint oppose;\r\n        mapping (address => uint) deposits;\r\n        mapping (address => bool) support;\r\n    }\r\n    \r\n    uint constant minQuorum = 10000000 ether;\r\n    \r\n    mapping (bytes32 => Vote) public votes;\r\n    \r\n    function vote(bytes32 _voteID, bool _support) payable {\r\n        Vote vote = votes[_voteID];\r\n        if (vote.deposits[msg.sender] > 0 && vote.support[msg.sender] != _support) throw; // user has to withdraw first\r\n        if (_support)\r\n            vote.approve += msg.value;\r\n        else\r\n            vote.oppose += msg.value;\r\n            \r\n        vote.deposits[msg.sender] += msg.value;\r\n        vote.support[msg.sender] = _support;\r\n    }\r\n    \r\n    function withdraw(bytes32 _voteID){\r\n        Vote vote = votes[_voteID];\r\n        if (vote.support[msg.sender])\r\n            vote.approve -= vote.deposits[msg.sender];\r\n        else\r\n            vote.oppose -= vote.deposits[msg.sender];\r\n        \r\n        uint deposit = vote.deposits[msg.sender];\r\n        vote.deposits[msg.sender] = 0;\r\n        if (!msg.sender.send(deposit))\r\n            throw;\r\n    }\r\n    \r\n    function result(bytes32 _voteID) returns (bool) {\r\n        Vote vote = votes[_voteID];\r\n        if (vote.approve > vote.oppose && vote.approve + vote.oppose > minQuorum)\r\n        // alternative:\r\n        //  if (vote.approve > vote.oppose && vote.approve > minQuorum)\r\n        //  more advanced voting rules could be used (prevention of ambush attacks, ...)\r\n            return true;\r\n    }\r\n}\r\n```\r\n\r\nOther Variants:\r\n\r\nOne could use government models which separate voting from making proposals. For example having an expert consortium which are the ones proposing changes and Miners and/or Ether owners voting on them.\r\nAdditionally one could differentiate the governance model depending on the parameter type (gas price parameter for miners, everything else for Ether owner).\r\n\r\n==Rationale==\r\n\r\nThis allows protocol changes, especially optimizing gas prices for opcodes, without the need for a hard fork.\r\n\r\n==Implementation==\r\n\r\nNot implemented.\r\n\r\n==Remarks==\r\n\r\nThis should be seen as a starting point for a discussion, the contracts are not tested or reviewed but should show the general idea. The governance model in the contracts also need improvement (e.g.: only relative change of parameters (to avoid attacks and big jumps in the numbers), what is the right min quorum, ...)",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/182/reactions",
    "total_count": 9,
    "+1": 7,
    "-1": 0,
    "laugh": 0,
    "hooray": 2,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/182/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/265290180",
    "html_url": "https://github.com/ethereum/EIPs/issues/182#issuecomment-265290180",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/182",
    "id": 265290180,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTI5MDE4MA==",
    "user": {
      "login": "CJentzsch",
      "id": 8452011,
      "node_id": "MDQ6VXNlcjg0NTIwMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8452011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CJentzsch",
      "html_url": "https://github.com/CJentzsch",
      "followers_url": "https://api.github.com/users/CJentzsch/followers",
      "following_url": "https://api.github.com/users/CJentzsch/following{/other_user}",
      "gists_url": "https://api.github.com/users/CJentzsch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CJentzsch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CJentzsch/subscriptions",
      "organizations_url": "https://api.github.com/users/CJentzsch/orgs",
      "repos_url": "https://api.github.com/users/CJentzsch/repos",
      "events_url": "https://api.github.com/users/CJentzsch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CJentzsch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-06T22:14:35Z",
    "updated_at": "2016-12-06T22:15:10Z",
    "author_association": "NONE",
    "body": "I personally would prefer the miner vote, since it is in there self interest to optimize the opcode prices.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/265290180/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/265330653",
    "html_url": "https://github.com/ethereum/EIPs/issues/182#issuecomment-265330653",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/182",
    "id": 265330653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTMzMDY1Mw==",
    "user": {
      "login": "tjade273",
      "id": 3936648,
      "node_id": "MDQ6VXNlcjM5MzY2NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3936648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjade273",
      "html_url": "https://github.com/tjade273",
      "followers_url": "https://api.github.com/users/tjade273/followers",
      "following_url": "https://api.github.com/users/tjade273/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjade273/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjade273/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjade273/subscriptions",
      "organizations_url": "https://api.github.com/users/tjade273/orgs",
      "repos_url": "https://api.github.com/users/tjade273/repos",
      "events_url": "https://api.github.com/users/tjade273/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjade273/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-07T01:43:33Z",
    "updated_at": "2016-12-07T01:43:33Z",
    "author_association": "NONE",
    "body": "@CJentzsch Maybe not likely, but miners could potentially be incentivised to optimize based on their own abilities, not necessarily those of the network as a whole. i.e. buy a lot of storage, then decrease the SSTORE price, and spam the network, potentially taking other miners offline. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/265330653/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/265370526",
    "html_url": "https://github.com/ethereum/EIPs/issues/182#issuecomment-265370526",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/182",
    "id": 265370526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTM3MDUyNg==",
    "user": {
      "login": "janx",
      "id": 5958,
      "node_id": "MDQ6VXNlcjU5NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5958?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janx",
      "html_url": "https://github.com/janx",
      "followers_url": "https://api.github.com/users/janx/followers",
      "following_url": "https://api.github.com/users/janx/following{/other_user}",
      "gists_url": "https://api.github.com/users/janx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janx/subscriptions",
      "organizations_url": "https://api.github.com/users/janx/orgs",
      "repos_url": "https://api.github.com/users/janx/repos",
      "events_url": "https://api.github.com/users/janx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-07T06:54:10Z",
    "updated_at": "2016-12-07T06:55:21Z",
    "author_association": "MEMBER",
    "body": "Thanks @CJentzsch for starting this discussion.\r\n\r\nI'm in favor of stake vote. My concerns on variation B (vote by transfer) are:\r\n\r\n1. Transfer is a 'heavy' operation, like payment in online shopping. The willingness to transfer for vote is weak.\r\n2. In Casper era, locking stakes in governance contract means you would give up interests, which will further reduce the desire to vote.\r\n3. If we want to collect as many votes as possible, the stakes accumulated in such a global governance contract could be unbounded, not a good practice consider security.\r\n\r\nI like the scheme used by [Carbonvote](http://www.carbonvote.com/), it (with delegated vote) may address the concerns above. One problem is it's hard to be implemented purely in smart contract. Maybe governance is worth to be done in underlying layer.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/265370526/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/265388443",
    "html_url": "https://github.com/ethereum/EIPs/issues/182#issuecomment-265388443",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/182",
    "id": 265388443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTM4ODQ0Mw==",
    "user": {
      "login": "CJentzsch",
      "id": 8452011,
      "node_id": "MDQ6VXNlcjg0NTIwMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8452011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CJentzsch",
      "html_url": "https://github.com/CJentzsch",
      "followers_url": "https://api.github.com/users/CJentzsch/followers",
      "following_url": "https://api.github.com/users/CJentzsch/following{/other_user}",
      "gists_url": "https://api.github.com/users/CJentzsch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CJentzsch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CJentzsch/subscriptions",
      "organizations_url": "https://api.github.com/users/CJentzsch/orgs",
      "repos_url": "https://api.github.com/users/CJentzsch/repos",
      "events_url": "https://api.github.com/users/CJentzsch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CJentzsch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-07T08:39:54Z",
    "updated_at": "2016-12-07T08:39:54Z",
    "author_association": "NONE",
    "body": "@tjade273 sure. But that's also a current danger. Miners could try to find a weakness in the current opcode pricing, optimize there hardware for it and spam the network. Or even easier, just look for the most used contract (may be a \"buyToken\" function in a contract during an ICO) during a certain time, optimize the client to precompile this function to bypass the EVM, and thereby being orders of magnitudes faster to process those transactions.\r\nThe key will be to find the right governance model. For example a high relative hash power which needs to vote in order to activate a parameter change.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/265388443/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/265388776",
    "html_url": "https://github.com/ethereum/EIPs/issues/182#issuecomment-265388776",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/182",
    "id": 265388776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTM4ODc3Ng==",
    "user": {
      "login": "CJentzsch",
      "id": 8452011,
      "node_id": "MDQ6VXNlcjg0NTIwMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8452011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CJentzsch",
      "html_url": "https://github.com/CJentzsch",
      "followers_url": "https://api.github.com/users/CJentzsch/followers",
      "following_url": "https://api.github.com/users/CJentzsch/following{/other_user}",
      "gists_url": "https://api.github.com/users/CJentzsch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CJentzsch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CJentzsch/subscriptions",
      "organizations_url": "https://api.github.com/users/CJentzsch/orgs",
      "repos_url": "https://api.github.com/users/CJentzsch/repos",
      "events_url": "https://api.github.com/users/CJentzsch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CJentzsch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-07T08:41:36Z",
    "updated_at": "2016-12-07T08:41:36Z",
    "author_association": "NONE",
    "body": "@janx As you said, Carbonvote is nice, but can not be used in a smart contract, the tallying is done off-chain. But in the stake vote contract, you do not really freeze your ether, since you can withdraw them at any time, although you will undo your vote when doing so.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/265388776/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/265661947",
    "html_url": "https://github.com/ethereum/EIPs/issues/182#issuecomment-265661947",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/182",
    "id": 265661947,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTY2MTk0Nw==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-08T06:15:05Z",
    "updated_at": "2016-12-08T06:19:41Z",
    "author_association": "MEMBER",
    "body": "> In Casper era, locking stakes in governance contract means you would give up interests, which will further reduce the desire to vote.\r\n\r\nCasper deposits can be queried by other contracts, so we can definitely create a scheme where stake votes can be done by Casper validators; that is no problem.\r\n\r\nI am starting to like the idea of putting gas policies into a contract for easier editing, although it is important to note that we do want to balance adaptability with the goal of giving contract developers assurances that contracts they write will not suddenly become unusable due to gas cost increases. That said, the concept of putting gas policies in-protocol does not in principle imply any specific governance mechanism; we could even still rely on hard forks to change the contents of the contract, it would just be a much safer way of executing the hard fork as you only need to make one state change instead of a few parameter changes.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/265661947/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/285921895",
    "html_url": "https://github.com/ethereum/EIPs/issues/182#issuecomment-285921895",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/182",
    "id": 285921895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTkyMTg5NQ==",
    "user": {
      "login": "3esmit",
      "id": 224810,
      "node_id": "MDQ6VXNlcjIyNDgxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/224810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3esmit",
      "html_url": "https://github.com/3esmit",
      "followers_url": "https://api.github.com/users/3esmit/followers",
      "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
      "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
      "organizations_url": "https://api.github.com/users/3esmit/orgs",
      "repos_url": "https://api.github.com/users/3esmit/repos",
      "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3esmit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-12T04:38:32Z",
    "updated_at": "2017-03-13T15:19:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this is really important feature to have, especially with the need of autoupdate in clients, where Mist and Parity already have their own autoupdate feature.\r\nFor me is not clear if is the most secure way of doing it and if there is a better way of doing it, but if well implemented would be an evolution to autoupdate.\r\nI like carbonvote of stakes in the validator for PoS chains, and for PoW I like carbonvote by account holdings in some account.\r\nDelegative voting is important, so instead of voting, people cold just drop his trust in the hands of other, until reaching someone who actually votes in something (if anything). \r\n\r\n@CJentzsch the voting contract should be watched by default in wallets, and if user move his funds he would need to redelegate/revote. The delegation/vote could be attached using a wrapper ETH contract and/or using incoming features of ethereum, such as zsnarks or raiden, so the redelegation would be needed only for changing your direction.\r\nThis might be interesting for all contracts using a quorum, and even become an ethereum defined standard, such as the current in progress ERC20. \r\nA solution for the current consesus system we can try some transfer function in wrapped eth with vote delegation, look this implementation of liquid delegative democracy:\r\nhttps://github.com/ethereans/direct-democracy/blob/master/contracts/LiquidDelegativeDemocracy.sol\r\nexample in a wrapped eth token:\r\nhttps://github.com/ethereans/direct-democracy/blob/master/contracts/DelegativeVoteToken.sol\r\nhttps://github.com/ethereans/abstract-token/blob/master/contracts/WrappedEthToken.sol",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/285921895/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/323088065",
    "html_url": "https://github.com/ethereum/EIPs/issues/182#issuecomment-323088065",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/182",
    "id": 323088065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzA4ODA2NQ==",
    "user": {
      "login": "3esmit",
      "id": 224810,
      "node_id": "MDQ6VXNlcjIyNDgxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/224810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3esmit",
      "html_url": "https://github.com/3esmit",
      "followers_url": "https://api.github.com/users/3esmit/followers",
      "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
      "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
      "organizations_url": "https://api.github.com/users/3esmit/orgs",
      "repos_url": "https://api.github.com/users/3esmit/repos",
      "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3esmit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-17T14:20:24Z",
    "updated_at": "2017-08-17T14:20:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm working in a democracy model for this project https://github.com/HiveCommons/Hive-Democracy/ that might be useful for this case.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/323088065/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/323169838",
    "html_url": "https://github.com/ethereum/EIPs/issues/182#issuecomment-323169838",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/182",
    "id": 323169838,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzE2OTgzOA==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-17T19:24:09Z",
    "updated_at": "2017-08-17T19:24:09Z",
    "author_association": "MEMBER",
    "body": "While a cool concept, I'm generally against any democratic solution to chain governance.  Democracy results in the masses, people without in-depth knowledge/understanding of the issues being voted on and their repercussions, deciding the fate of the system.  We can see this in democracies all over the world and in many forms, where people vote with their gut despite the fact that experts repeatedly tell them that their gut is wrong.\r\n\r\nWhile one would assume that miners would at least vote in their own self interest, and due to mining pools the votes are controlled by experts, they don't have a large incentive to vote for the long-term stability of the platform.  Also, with PoS coming miner voting doesn't really make sense.  Stake voting sounds good on the surface but again, it preferences short term thinking rather than long term thinking.  Unless stakers are forced to lock their voting ETH up for very long periods of time, the stakers are incentivized to optimize for short term increases in ETH profits over long-term stability.\r\n\r\nAt the moment, the system does not have any group who has the proper incentives for long-term stability from an economic standpoint.  The closest we have is the Ethereum Foundation, but even they don't have economic incentives (they have just socially signaled that they care about the long-term success of the project).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/323169838/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003905723",
    "html_url": "https://github.com/ethereum/EIPs/issues/182#issuecomment-1003905723",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/182",
    "id": 1003905723,
    "node_id": "IC_kwDOAq426M471mK7",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-03T07:12:05Z",
    "updated_at": "2022-01-03T07:12:05Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003905723/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1014247777",
    "html_url": "https://github.com/ethereum/EIPs/issues/182#issuecomment-1014247777",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/182",
    "id": 1014247777,
    "node_id": "IC_kwDOAq426M48dDFh",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-17T08:15:16Z",
    "updated_at": "2022-01-17T08:15:16Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1014247777/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
