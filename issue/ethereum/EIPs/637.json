{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/637",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/637/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/637/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/637/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/637",
  "id": 230972848,
  "node_id": "MDU6SXNzdWUyMzA5NzI4NDg=",
  "number": 637,
  "title": "change of tx.origin for account abstraction",
  "user": {
    "login": "frozeman",
    "id": 232662,
    "node_id": "MDQ6VXNlcjIzMjY2Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frozeman",
    "html_url": "https://github.com/frozeman",
    "followers_url": "https://api.github.com/users/frozeman/followers",
    "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
    "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
    "organizations_url": "https://api.github.com/users/frozeman/orgs",
    "repos_url": "https://api.github.com/users/frozeman/repos",
    "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frozeman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 22,
  "created_at": "2017-05-24T09:18:11Z",
  "updated_at": "2022-06-11T07:07:38Z",
  "closed_at": "2022-06-11T07:07:37Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "This is a an ERC concerning the account abstraction proposed by @vbuterin and currently as a PR for review here: https://github.com/ethereum/EIPs/pull/208\r\n\r\nThe reason for this ERC is to gather community feedback concerning a change of `tx.origin` for transactions from `0xFFFFF...`\r\n\r\n### Abstract\r\n\r\nInitially https://github.com/ethereum/EIPs/issues/86 proposed a changes where transaction can happen from a un-owned account named `0xFFFFFF..`. The reasoning is that this allows for custom signature schemes, as well as 0 gas transactions, where the verifier contract pays for the gas.\r\n\r\nThis feature comes with the fact that `tx.origin` or the ORIGIN opcode will point to `0xFFFFF..`.\r\n\r\nMy proposal is to make `tx.origin` point to the `tx.origin+1` for those type of transactions, to prevent the loss of the knowledge of the origin of a transaction.\r\n\r\n`tx.origin+1` will be the contract verifying the signature coming from the `0xFFFFF...` account, where everybody can send a transaction from.\r\n\r\nThose verifier contracts, could also implement much more features, like representing a identity with verified properties about the identity holder etc.\r\n\r\n#### Discussion and Problems \r\n\r\nThere is a short discussion here: https://github.com/ethereum/EIPs/pull/208#issuecomment-300760243, which i recommend to read, as well as a length discussion in the [AllCoreDevs Gitter channel](https://gitter.im/ethereum/AllCoreDevs).\r\n\r\nThe two sides are:\r\n1. Not moving `tx.origin+1` removes the ability to know from where transactions originated, which might be useful in some cases.\r\nWhile allowing automatically verification of identity properties, if the verifier contract, is more than just a signature verifier. This can have all kind of benefits for KYC etc.\r\n2. BUT, it comes with some uncertainty, as middle men contracts could alter the actions of the origin and therefore slip in malicious behaviour, or transfer call data wrongly.\r\n\r\nI would like to invite the community to bring use cases where pointing `tx.origin` to the verifier contract, rather than the `0xFFFF...` address. Or examples why that is not useful.\r\n\r\n#### Suggested solution for 2.\r\n\r\nOne solution for the middle men problem, would be to send the actual call data along with the signature, so that the receiving contract can verify the calldata - know that it was not manipulated, and execute it. While still be able to check the `tx.origin` identity/verifier contract for properties a user needs to fullfill (e.g. user is human, has good reputation, etc.)\r\n\r\n##### Request\r\n\r\nPlease lets discuss the use of `tx.origin` and its usefulness, so that we either get rid of it completely, or move `tx.origin+1` for transactions originating from `0xFFFF..`. As we are doing the Metropolis hard fork changes now, it its crucial to get to an agreement now, rather than later, and eventually require a second hard fork to solve this issue.",
  "closed_by": {
    "login": "MicahZoltu",
    "id": 886059,
    "node_id": "MDQ6VXNlcjg4NjA1OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MicahZoltu",
    "html_url": "https://github.com/MicahZoltu",
    "followers_url": "https://api.github.com/users/MicahZoltu/followers",
    "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
    "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
    "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
    "repos_url": "https://api.github.com/users/MicahZoltu/repos",
    "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/637/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/637/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303671921",
    "html_url": "https://github.com/ethereum/EIPs/issues/637#issuecomment-303671921",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/637",
    "id": 303671921,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzY3MTkyMQ==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T09:38:13Z",
    "updated_at": "2017-05-24T09:38:13Z",
    "author_association": "MEMBER",
    "body": "Some context; the Allcoredevs-discussion starts around here: https://gitter.im/ethereum/AllCoreDevs?at=5923f82000efc2bb3e966db1. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303671921/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303683470",
    "html_url": "https://github.com/ethereum/EIPs/issues/637#issuecomment-303683470",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/637",
    "id": 303683470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzY4MzQ3MA==",
    "user": {
      "login": "tjayrush",
      "id": 5417918,
      "node_id": "MDQ6VXNlcjU0MTc5MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5417918?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjayrush",
      "html_url": "https://github.com/tjayrush",
      "followers_url": "https://api.github.com/users/tjayrush/followers",
      "following_url": "https://api.github.com/users/tjayrush/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjayrush/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjayrush/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjayrush/subscriptions",
      "organizations_url": "https://api.github.com/users/tjayrush/orgs",
      "repos_url": "https://api.github.com/users/tjayrush/repos",
      "events_url": "https://api.github.com/users/tjayrush/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjayrush/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T10:26:54Z",
    "updated_at": "2017-05-24T10:26:54Z",
    "author_association": "NONE",
    "body": "I come at this from a different perspective, I think. That of off-chain, after-the-fact forensic analysis or accounting. I don't really understand the issue, but to the extent that this abstraction makes it more difficult to distinguish between contract and external accounts in the data it makes analyzing the data more difficult.\r\n\r\nThere are certain optimizations one can make if one knows an account is external (for example, there's no need to search if the account participated in an 'internal' transaction' as initiator).\r\n\r\nMy comment is the ability to distinguish between external and contract accounts is beneficial to off-chain, after-the-fact analysis tools.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303683470/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303690538",
    "html_url": "https://github.com/ethereum/EIPs/issues/637#issuecomment-303690538",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/637",
    "id": 303690538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzY5MDUzOA==",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T10:55:50Z",
    "updated_at": "2017-05-24T10:55:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "In a way external accounts and contract based accounts are similar, in the sense that both require a signature. Your contact account still needs some kind of signature passed into the verifier account. Just thew which signature it is is more flexible than before. The signer account knows which signatures it will allow to work through it, and additional this contract can contain a lot more then just the signature verification.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303690538/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303734156",
    "html_url": "https://github.com/ethereum/EIPs/issues/637#issuecomment-303734156",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/637",
    "id": 303734156,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzczNDE1Ng==",
    "user": {
      "login": "alex-miller-0",
      "id": 7378490,
      "node_id": "MDQ6VXNlcjczNzg0OTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7378490?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alex-miller-0",
      "html_url": "https://github.com/alex-miller-0",
      "followers_url": "https://api.github.com/users/alex-miller-0/followers",
      "following_url": "https://api.github.com/users/alex-miller-0/following{/other_user}",
      "gists_url": "https://api.github.com/users/alex-miller-0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alex-miller-0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alex-miller-0/subscriptions",
      "organizations_url": "https://api.github.com/users/alex-miller-0/orgs",
      "repos_url": "https://api.github.com/users/alex-miller-0/repos",
      "events_url": "https://api.github.com/users/alex-miller-0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alex-miller-0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T14:05:44Z",
    "updated_at": "2017-05-24T14:05:44Z",
    "author_association": "NONE",
    "body": "Why not use `tx.origin` to represent what it always has (for backwards compatibility) and `tx.verifier` to represent this new abstracted verifier contract?\r\n\r\nIs there some reason why losing information is a good thing?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303734156/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303745208",
    "html_url": "https://github.com/ethereum/EIPs/issues/637#issuecomment-303745208",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/637",
    "id": 303745208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzc0NTIwOA==",
    "user": {
      "login": "rabbit",
      "id": 241264,
      "node_id": "MDQ6VXNlcjI0MTI2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rabbit",
      "html_url": "https://github.com/rabbit",
      "followers_url": "https://api.github.com/users/rabbit/followers",
      "following_url": "https://api.github.com/users/rabbit/following{/other_user}",
      "gists_url": "https://api.github.com/users/rabbit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rabbit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rabbit/subscriptions",
      "organizations_url": "https://api.github.com/users/rabbit/orgs",
      "repos_url": "https://api.github.com/users/rabbit/repos",
      "events_url": "https://api.github.com/users/rabbit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rabbit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T14:41:32Z",
    "updated_at": "2017-05-24T14:41:32Z",
    "author_association": "NONE",
    "body": "I don't entirely understand the tradeoffs but, in terms of usefulness, every situation I thought `tx.origin` would be useful ended up being better served by redesigning for `msg.sender` instead. I'm more concerned with the abstract action of introducing a breaking change to what feels like a system constant.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303745208/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303751141",
    "html_url": "https://github.com/ethereum/EIPs/issues/637#issuecomment-303751141",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/637",
    "id": 303751141,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzc1MTE0MQ==",
    "user": {
      "login": "veox",
      "id": 3036030,
      "node_id": "MDQ6VXNlcjMwMzYwMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3036030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veox",
      "html_url": "https://github.com/veox",
      "followers_url": "https://api.github.com/users/veox/followers",
      "following_url": "https://api.github.com/users/veox/following{/other_user}",
      "gists_url": "https://api.github.com/users/veox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/veox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/veox/subscriptions",
      "organizations_url": "https://api.github.com/users/veox/orgs",
      "repos_url": "https://api.github.com/users/veox/repos",
      "events_url": "https://api.github.com/users/veox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/veox/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T15:00:00Z",
    "updated_at": "2017-05-24T15:04:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@frozeman Could you edit the OP to have `tx.{origin+1}` (or similar)? Was confused on first encounter.\r\n\r\nEDIT: Compare to `(tx.origin)+1`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303751141/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303756425",
    "html_url": "https://github.com/ethereum/EIPs/issues/637#issuecomment-303756425",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/637",
    "id": 303756425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzc1NjQyNQ==",
    "user": {
      "login": "alex-miller-0",
      "id": 7378490,
      "node_id": "MDQ6VXNlcjczNzg0OTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7378490?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alex-miller-0",
      "html_url": "https://github.com/alex-miller-0",
      "followers_url": "https://api.github.com/users/alex-miller-0/followers",
      "following_url": "https://api.github.com/users/alex-miller-0/following{/other_user}",
      "gists_url": "https://api.github.com/users/alex-miller-0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alex-miller-0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alex-miller-0/subscriptions",
      "organizations_url": "https://api.github.com/users/alex-miller-0/orgs",
      "repos_url": "https://api.github.com/users/alex-miller-0/repos",
      "events_url": "https://api.github.com/users/alex-miller-0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alex-miller-0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T15:16:22Z",
    "updated_at": "2017-05-24T15:16:22Z",
    "author_association": "NONE",
    "body": "> every situation I thought tx.origin would be useful ended up being better served by redesigning for msg.sender instead\r\n\r\nI personally have never used `tx.origin` either, but I won't presume to understand the design decisions of every app developer in the ecosystem and would suggest we don't break backward compatibility of contracts that can't be updated.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303756425/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303778913",
    "html_url": "https://github.com/ethereum/EIPs/issues/637#issuecomment-303778913",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/637",
    "id": 303778913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzc3ODkxMw==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T16:31:21Z",
    "updated_at": "2017-05-24T16:33:24Z",
    "author_association": "MEMBER",
    "body": "There are some misconceptions here and on Reddit. , I'll call them `origin` (the proposed one) and `origin+1` for @frozeman 's version.\r\n\r\nRegarding backward compatibility. \r\n* `msg.sender == tx.origin` checks in use today, will continue to work with `origin`, but will fail with \r\n`origin+1`. Fail, in the sense that the check can no longer verify that the caller is a non-contract-account. \r\n* `origin` and `origin+1` both kind of destroys backwards compatibility, since multiple accounts can get the same result. However, this is an artefact of the underlying EIP, not the particulars of the opcode. \r\n\r\nAnd I don't see that either way makes any difference for off-chain analysis. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/303778913/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/304001365",
    "html_url": "https://github.com/ethereum/EIPs/issues/637#issuecomment-304001365",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/637",
    "id": 304001365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDAwMTM2NQ==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-25T12:44:22Z",
    "updated_at": "2017-05-25T12:46:09Z",
    "author_association": "MEMBER",
    "body": "@tjayrush I don't see how having this opcode or not will affect that; can you elaborate?\r\n\r\n@alex-miller-0 \r\n> Is there some reason why losing information is a good thing?\r\n\r\nBecause I, and others, have never seen a use-case for `tx.origin` that isn't dangerous and broken.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/304001365/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/304164457",
    "html_url": "https://github.com/ethereum/EIPs/issues/637#issuecomment-304164457",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/637",
    "id": 304164457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDE2NDQ1Nw==",
    "user": {
      "login": "tjayrush",
      "id": 5417918,
      "node_id": "MDQ6VXNlcjU0MTc5MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5417918?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjayrush",
      "html_url": "https://github.com/tjayrush",
      "followers_url": "https://api.github.com/users/tjayrush/followers",
      "following_url": "https://api.github.com/users/tjayrush/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjayrush/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjayrush/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjayrush/subscriptions",
      "organizations_url": "https://api.github.com/users/tjayrush/orgs",
      "repos_url": "https://api.github.com/users/tjayrush/repos",
      "events_url": "https://api.github.com/users/tjayrush/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjayrush/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-26T01:09:24Z",
    "updated_at": "2017-05-26T01:09:24Z",
    "author_association": "NONE",
    "body": "@Arachnid I wasn't really saying this would or would not make it more difficult to distinguish contracts from non-contracts. I was just saying that if it does make distinguishing them off-chain more difficult (i.e. by doing a `getCode` call to the RPC) that would negatively affect my work.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/304164457/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/304274008",
    "html_url": "https://github.com/ethereum/EIPs/issues/637#issuecomment-304274008",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/637",
    "id": 304274008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDI3NDAwOA==",
    "user": {
      "login": "christianlundkvist",
      "id": 6892901,
      "node_id": "MDQ6VXNlcjY4OTI5MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6892901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/christianlundkvist",
      "html_url": "https://github.com/christianlundkvist",
      "followers_url": "https://api.github.com/users/christianlundkvist/followers",
      "following_url": "https://api.github.com/users/christianlundkvist/following{/other_user}",
      "gists_url": "https://api.github.com/users/christianlundkvist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/christianlundkvist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/christianlundkvist/subscriptions",
      "organizations_url": "https://api.github.com/users/christianlundkvist/orgs",
      "repos_url": "https://api.github.com/users/christianlundkvist/repos",
      "events_url": "https://api.github.com/users/christianlundkvist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/christianlundkvist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-26T12:46:41Z",
    "updated_at": "2017-05-26T12:46:41Z",
    "author_association": "NONE",
    "body": "@frozeman I'm also not convinced of the need to keep `tx.origin` around and I share a lot of the concerns expressed by @arachnid and @holiman about man-in-the-middle attacks.\r\n\r\nI think the identity usecase in the linked gitter convo is not that good of an example since IMO best practices is not to link identities directly to keys (which can/will be lost) but instead to contract addresses or other non-key identifiers (which allows for key rotation etc). \r\n\r\nSo I'm also in favor of deprecating tx.origin.\r\n\r\nI also think that the \"origin\" word introduces some preconceptions. tx.origin is defined as the hash of the pubkey that signed the transaction. If this signature is supposed to convey some authorization then IMO this is something that should be explicitly passed in with the transaction data and/or function parameters. If the signature is passed in that way it doesn't matter who is actually \"sending\" the transaction.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/304274008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/304274725",
    "html_url": "https://github.com/ethereum/EIPs/issues/637#issuecomment-304274725",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/637",
    "id": 304274725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDI3NDcyNQ==",
    "user": {
      "login": "christianlundkvist",
      "id": 6892901,
      "node_id": "MDQ6VXNlcjY4OTI5MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6892901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/christianlundkvist",
      "html_url": "https://github.com/christianlundkvist",
      "followers_url": "https://api.github.com/users/christianlundkvist/followers",
      "following_url": "https://api.github.com/users/christianlundkvist/following{/other_user}",
      "gists_url": "https://api.github.com/users/christianlundkvist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/christianlundkvist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/christianlundkvist/subscriptions",
      "organizations_url": "https://api.github.com/users/christianlundkvist/orgs",
      "repos_url": "https://api.github.com/users/christianlundkvist/repos",
      "events_url": "https://api.github.com/users/christianlundkvist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/christianlundkvist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-26T12:50:38Z",
    "updated_at": "2017-05-26T12:50:38Z",
    "author_association": "NONE",
    "body": "An example/proposed standard of passing in the signature explicitly is https://github.com/ethereum/EIPs/issues/191 by @holiman",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/304274725/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/304436262",
    "html_url": "https://github.com/ethereum/EIPs/issues/637#issuecomment-304436262",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/637",
    "id": 304436262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDQzNjI2Mg==",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-27T07:57:48Z",
    "updated_at": "2017-05-27T07:57:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Maybe I don't explain correctly, but the identity/verifier can have key rotation, as it decides which keys to accept. \r\nSure data can be passed as signature, like I said in the example,  it it still\r\nHelps if you can check for WHO send the signature, then you don't need to put the address in the signed data itself. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/304436262/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/304451961",
    "html_url": "https://github.com/ethereum/EIPs/issues/637#issuecomment-304451961",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/637",
    "id": 304451961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDQ1MTk2MQ==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-27T13:35:46Z",
    "updated_at": "2017-05-27T13:35:46Z",
    "author_association": "MEMBER",
    "body": "@tjayrush This sounds like an objection to the account abstraction change, rather than to the tx.origin change.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/304451961/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/349954858",
    "html_url": "https://github.com/ethereum/EIPs/issues/637#issuecomment-349954858",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/637",
    "id": 349954858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTk1NDg1OA==",
    "user": {
      "login": "oojr",
      "id": 1275902,
      "node_id": "MDQ6VXNlcjEyNzU5MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1275902?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oojr",
      "html_url": "https://github.com/oojr",
      "followers_url": "https://api.github.com/users/oojr/followers",
      "following_url": "https://api.github.com/users/oojr/following{/other_user}",
      "gists_url": "https://api.github.com/users/oojr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oojr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oojr/subscriptions",
      "organizations_url": "https://api.github.com/users/oojr/orgs",
      "repos_url": "https://api.github.com/users/oojr/repos",
      "events_url": "https://api.github.com/users/oojr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oojr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T12:36:14Z",
    "updated_at": "2017-12-07T12:36:14Z",
    "author_association": "NONE",
    "body": "@frozeman I am trying to catch up why `tx.origin` is being deprecated? Approved addresses mapping will solve all middleman problems, having the user approve and then transferFrom in two different contracts is okay but having another transfer function that can check `tx.origin` should be fine, if people send money to a malicious contract `tx.origin` or `msg.sender` will not matter. What am I missing?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/349954858/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/999821003",
    "html_url": "https://github.com/ethereum/EIPs/issues/637#issuecomment-999821003",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/637",
    "id": 999821003,
    "node_id": "IC_kwDOAq426M47mA7L",
    "user": {
      "login": "CodeMustRule",
      "id": 96443116,
      "node_id": "U_kgDOBb-a7A",
      "avatar_url": "https://avatars.githubusercontent.com/u/96443116?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeMustRule",
      "html_url": "https://github.com/CodeMustRule",
      "followers_url": "https://api.github.com/users/CodeMustRule/followers",
      "following_url": "https://api.github.com/users/CodeMustRule/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeMustRule/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeMustRule/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeMustRule/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeMustRule/orgs",
      "repos_url": "https://api.github.com/users/CodeMustRule/repos",
      "events_url": "https://api.github.com/users/CodeMustRule/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeMustRule/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-22T19:43:39Z",
    "updated_at": "2021-12-22T19:43:39Z",
    "author_association": "NONE",
    "body": "Most contract creators rely on standard `require( msg.sender == owner )` making their contracts vulnerable to a highly unlike but not impossible address collision. I personally use `require( msg.sender == owner && tx.origin != msg.sender )` ensuring that a random EOA will NEVER gain control of an important contract and compromise user funds. I believe`tx.origin` is useful in its current state for that purpose.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/999821003/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/999835340",
    "html_url": "https://github.com/ethereum/EIPs/issues/637#issuecomment-999835340",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/637",
    "id": 999835340,
    "node_id": "IC_kwDOAq426M47mEbM",
    "user": {
      "login": "CodeMustRule",
      "id": 96443116,
      "node_id": "U_kgDOBb-a7A",
      "avatar_url": "https://avatars.githubusercontent.com/u/96443116?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeMustRule",
      "html_url": "https://github.com/CodeMustRule",
      "followers_url": "https://api.github.com/users/CodeMustRule/followers",
      "following_url": "https://api.github.com/users/CodeMustRule/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeMustRule/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeMustRule/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeMustRule/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeMustRule/orgs",
      "repos_url": "https://api.github.com/users/CodeMustRule/repos",
      "events_url": "https://api.github.com/users/CodeMustRule/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeMustRule/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-22T20:11:24Z",
    "updated_at": "2021-12-22T20:11:24Z",
    "author_association": "NONE",
    "body": "> @tjayrush I don't see how having this opcode or not will affect that; can you elaborate?\r\n> \r\n> @alex-miller-0\r\n> \r\n> > Is there some reason why losing information is a good thing?\r\n> \r\n> Because I, and others, have never seen a use-case for `tx.origin` that isn't dangerous and broken.\r\n\r\nThe reasoning behind... I never have used it or I don't know how to use it correctly, doesn't mean something is useless or that no one knows how to use it correctly.\r\n\r\nPassing `tx.origin` up the call chain as `msg.sender` increases gas usage and blockchains must provide all tools available to program contracts efficiently, not expending precious computing time passing constants from one call to another.\r\n\r\nBreaking backwards compatibility out of personal taste in a blockchain full of contracts using `tx.origin` may cause many non expert users to lose funds due to usage of contracts that will just fail using such feature after you remove or change it.\r\n\r\nStop believing that `tx.origin` is used only to incorrectly verify authorization.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/999835340/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1000006838",
    "html_url": "https://github.com/ethereum/EIPs/issues/637#issuecomment-1000006838",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/637",
    "id": 1000006838,
    "node_id": "IC_kwDOAq426M47muS2",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-23T02:59:44Z",
    "updated_at": "2021-12-23T02:59:44Z",
    "author_association": "MEMBER",
    "body": "> Most contract creators rely on standard require( msg.sender == owner ) making their contracts vulnerable to a highly unlike but not impossible address collision.\r\n\r\nThis collision isn't possible as of recently: https://eips.ethereum.org/EIPS/eip-3607\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1000006838/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1002823225",
    "html_url": "https://github.com/ethereum/EIPs/issues/637#issuecomment-1002823225",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/637",
    "id": 1002823225,
    "node_id": "IC_kwDOAq426M47xd45",
    "user": {
      "login": "CodeMustRule",
      "id": 96443116,
      "node_id": "U_kgDOBb-a7A",
      "avatar_url": "https://avatars.githubusercontent.com/u/96443116?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeMustRule",
      "html_url": "https://github.com/CodeMustRule",
      "followers_url": "https://api.github.com/users/CodeMustRule/followers",
      "following_url": "https://api.github.com/users/CodeMustRule/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeMustRule/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeMustRule/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeMustRule/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeMustRule/orgs",
      "repos_url": "https://api.github.com/users/CodeMustRule/repos",
      "events_url": "https://api.github.com/users/CodeMustRule/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeMustRule/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-30T00:23:17Z",
    "updated_at": "2021-12-30T00:23:17Z",
    "author_association": "NONE",
    "body": "> > Most contract creators rely on standard require( msg.sender == owner ) making their contracts vulnerable to a highly unlike but not impossible address collision.\r\n> \r\n> This collision isn't possible as of recently: https://eips.ethereum.org/EIPS/eip-3607\r\n\r\nThis is exactly what I am trying to say, some programmers thought of this before EIP-3607 was proposed and used `tx.origin` for protecting their logic or making other kinds of logic decisions, now that you try to fix that issue for those with poor skills and that was addressed by good programmers with something similar to `msg.sender != tx.origin`. You will support the introduction of a breaking change to such well though programmers logic changing the behavior of `tx.origin` because some bad programmers don't envision good usages of such feature or believe that other programmers can't handle the usage of it. That is my point, don't break code that is immutable because some programmers are bad at their job of handling security, or will you solve reentrancy, economic attacks, randomness... for them, breaking how solidity was supposed to work for making it easier to use by bad programmers.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1002823225/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1002868642",
    "html_url": "https://github.com/ethereum/EIPs/issues/637#issuecomment-1002868642",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/637",
    "id": 1002868642,
    "node_id": "IC_kwDOAq426M47xo-i",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-30T04:28:41Z",
    "updated_at": "2021-12-30T04:28:41Z",
    "author_association": "MEMBER",
    "body": "In case you missed it, this issue is from 2017, long before any of the things you mentioned.  We (core devs and security community) have been telling people to not use tx.origin checks for a very long time, but unfortunately no one listens.  😢 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1002868642/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003437739",
    "html_url": "https://github.com/ethereum/EIPs/issues/637#issuecomment-1003437739",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/637",
    "id": 1003437739,
    "node_id": "IC_kwDOAq426M47zz6r",
    "user": {
      "login": "CodeMustRule",
      "id": 96443116,
      "node_id": "U_kgDOBb-a7A",
      "avatar_url": "https://avatars.githubusercontent.com/u/96443116?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeMustRule",
      "html_url": "https://github.com/CodeMustRule",
      "followers_url": "https://api.github.com/users/CodeMustRule/followers",
      "following_url": "https://api.github.com/users/CodeMustRule/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeMustRule/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeMustRule/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeMustRule/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeMustRule/orgs",
      "repos_url": "https://api.github.com/users/CodeMustRule/repos",
      "events_url": "https://api.github.com/users/CodeMustRule/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeMustRule/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-31T19:09:39Z",
    "updated_at": "2021-12-31T19:09:39Z",
    "author_association": "NONE",
    "body": "> In case you missed it, this issue is from 2017, long before any of the things you mentioned. We (core devs and security community) have been telling people to not use tx.origin checks for a very long time, but unfortunately no one listens. 😢\r\n\r\nI must insist that my opinion is that changing the behavior of `tx.origin` is inconvenient and could break contracts that rely in a simple idea, it gives you the address that initiated a transaction, simple and no more than that, you use it considering that logic and the fact that a third party can fool a user to execute a contract call making it useless for authentication purposes. The reasoning that users can be fool in a phishing attack is the same danger as the the fact that users give unlimited approval on ERC20 tokens to any contract they feel the need, if a user executes a compromised contract is not the failure of the language is the user's failure. From my perspective is clear that using `msg.sender` for security reasons is a must, but breaking `tx.origin` as it was implemented is useless and hurts the language, I personally love solidity, love blockchain but for me, programming solidity contracts relies in the important premise of immutability. This proposed change or removal of `tx.origin` gives more reasons for people that feel the main problem of ethereum is centralization in the hands of their developers. I strongly insist that keeping the premise of immutability unless critical is a must (tx.origin is not critical), and as in good politics the principle is that you don't change basic rules, you can implement new ones but without breaking what already many programmers rely or relied on.\r\n\r\nIn other topics... I wish anyone that reads this comment a ¡happy new year! 😄",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003437739/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1152871392",
    "html_url": "https://github.com/ethereum/EIPs/issues/637#issuecomment-1152871392",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/637",
    "id": 1152871392,
    "node_id": "IC_kwDOAq426M5Et2vg",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-11T07:07:37Z",
    "updated_at": "2022-06-11T07:07:37Z",
    "author_association": "MEMBER",
    "body": "Closing this issue for housekeeping purposes.  People are welcome to continue discussing in this thread, but for additional visibility an EIP should be created or the conversation should be migrated to https://ethereum-magicians.org/",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1152871392/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
