{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/963",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/963/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/963/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/963/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/963",
  "id": 310389864,
  "node_id": "MDU6SXNzdWUzMTAzODk4NjQ=",
  "number": 963,
  "title": "Suggested modifications of EIP758",
  "user": {
    "login": "reductionista",
    "id": 2644901,
    "node_id": "MDQ6VXNlcjI2NDQ5MDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2644901?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/reductionista",
    "html_url": "https://github.com/reductionista",
    "followers_url": "https://api.github.com/users/reductionista/followers",
    "following_url": "https://api.github.com/users/reductionista/following{/other_user}",
    "gists_url": "https://api.github.com/users/reductionista/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/reductionista/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/reductionista/subscriptions",
    "organizations_url": "https://api.github.com/users/reductionista/orgs",
    "repos_url": "https://api.github.com/users/reductionista/repos",
    "events_url": "https://api.github.com/users/reductionista/events{/privacy}",
    "received_events_url": "https://api.github.com/users/reductionista/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 21,
  "created_at": "2018-04-02T04:14:05Z",
  "updated_at": "2018-06-28T05:13:49Z",
  "closed_at": "2018-06-28T05:13:49Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Having made it most of the way through in [implementing](https://github.com/ethereum/go-ethereum/pull/16424) [EIP758](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-758.md), I've run into a few places where I'd recommend some slight modifications of the original proposal.  3 of them have question marks next to them because I'm unsure whether they are the right solution but it's an idea.\r\n\r\n# eth_newReturnDataFilter\r\n\r\nThe first is to maintain a consistent JSON-RPC interface, by using `eth_newReturnDataFilter` instead of `eth_newFilter` with `params=[\"ReturnData\"]`. \r\n\r\nPresently eth_newFilter creates a log filter, `eth_newBlockFilter` creates a block filter, and `eth_newPendingTransactionFilter` creates a new pending transaction filter.  Ideally, `eth_newFilter` would be named `eth_newLogFilter` but I assume we are stuck there due to backwards compatibility requirements with older versions where logs were the only filter type you could create.  Since there are no such concerns with the new return data filter type, it seems pretty straightforward that it should be named `eth_newReturnDataFilter` (or perhaps `eth_newTransactionFilter`, see below)\r\n\r\n# Add `from` (and `to`?) param to `eth_newReturnDataFilter` ?\r\n\r\nThe biggest issue I see with the present EIP758 is that it assumes the node can tell which client sent which transactions over http (so that only the return data from those transactions would be returned upon calling `eth_getFilterChanges`).  However, this is not the case--at least, not unless other unspecified modifications to the JSON-RPC interface are added.\r\n\r\nOne solution to this problem is to add a `from` param to `eth_newReturnDataFilter` that specifies a list of wallet addresses the client controls and might send from.  Then the node would know to associate any transactions originating from those addresses with this subscription id.  It would save return data only from transactions with a from address matching one in the list, and store them for retrieval with `eth_getFilterChanges`.  If the client really wants to get return data from all transactions that gets added to the blockchain, it could simply leave off the from param or set it to 0.  Or, we could decide not to allow that as it might have greater potential for mis-use and make it easier to launch a DoS attack aimed at wasting memory resources on the node.\r\n\r\n# Instead add `subID` param to `eth_SendTransaction` & `eth_SendRawTransaction` ?\r\n\r\nThis could either be an alternative to the \"from\" param or in addition to it.  My instinct is that we should avoid modifying these two JSON-RPC commands simply to get a new command to work properly.  But if it's important to have `eth_newReturnDataFilter` function like `eth_subscribe`, where the set of transactions being filtered for is determined by which client sent them rather than the from address, I think this may be the only way.\r\n\r\n# Add `noEmpty` param to `eth_newReturnDataFilter`\r\n\r\nI propose we add a `noEmpty` param (suggestions for other names welcome) to `eth_newReturnDataFilter`.  This would be very easy to add to the current implementation, and provide more general functionality.  If noEmpty is set, the node would notify the client only about transactions where the return data is non-empty.  Presently, it returns return data for any transaction sent from the client, even if there is no data returned from that transaction (in which case the data field is just []).  It's easy to imagine some cases where a client would want to know when any of the transactions it submits complete, and other cases where it would only care about ones that have non-empty return data.\r\n\r\n# `NewTransactionFilter` or `NewCompletedTransactionFilter`?\r\n\r\nIf we do decide to add the `noEmpty` flag, then it seems logical to explore taking this one step further.  Since the functionality is then more general, we could rename `eth_newReturnDataFilter` to `eth_NewTransactionFilter`.  This would reflect the more general use case where a client wants to get notified of any transaction it submits as soon as it completes execution.  The internal naming of the kind of data structure returned by the node would also make more sense if they were changed too.  For example, in geth instead of a `ReturnData struct`, which includes a tx hash, a flag indicating whether the transaction was removed due to a chain reorg, and any return data associated with the completed transaction, it could simply be named `CompletedTransaction struct`.  (I assume the same could be said for parity.)  This puts subscription to pending transactions (`NewPendingTransactionFilter`) and completed transactions (`NewTransactionFilter` or perhaps `NewCompletedTransactionFilter`) on the same footing.  You can make a filter for either, and subscribe to either, and the code is already basically written to do this.\r\n\r\nAlso, if we opt for this idea, then it would probably make sense to call the `noEmpty` flag something like `hasReturnData` instead.\r\n\r\n\r\n",
  "closed_by": {
    "login": "reductionista",
    "id": 2644901,
    "node_id": "MDQ6VXNlcjI2NDQ5MDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2644901?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/reductionista",
    "html_url": "https://github.com/reductionista",
    "followers_url": "https://api.github.com/users/reductionista/followers",
    "following_url": "https://api.github.com/users/reductionista/following{/other_user}",
    "gists_url": "https://api.github.com/users/reductionista/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/reductionista/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/reductionista/subscriptions",
    "organizations_url": "https://api.github.com/users/reductionista/orgs",
    "repos_url": "https://api.github.com/users/reductionista/repos",
    "events_url": "https://api.github.com/users/reductionista/events{/privacy}",
    "received_events_url": "https://api.github.com/users/reductionista/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/963/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/963/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/377899666",
    "html_url": "https://github.com/ethereum/EIPs/issues/963#issuecomment-377899666",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/963",
    "id": 377899666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Nzg5OTY2Ng==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-02T10:06:17Z",
    "updated_at": "2018-04-02T10:06:17Z",
    "author_association": "MEMBER",
    "body": "I'd suggest making this an issue or a PR on @pirapira's repository.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/377899666/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/377986577",
    "html_url": "https://github.com/ethereum/EIPs/issues/963#issuecomment-377986577",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/963",
    "id": 377986577,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Nzk4NjU3Nw==",
    "user": {
      "login": "reductionista",
      "id": 2644901,
      "node_id": "MDQ6VXNlcjI2NDQ5MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2644901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reductionista",
      "html_url": "https://github.com/reductionista",
      "followers_url": "https://api.github.com/users/reductionista/followers",
      "following_url": "https://api.github.com/users/reductionista/following{/other_user}",
      "gists_url": "https://api.github.com/users/reductionista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reductionista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reductionista/subscriptions",
      "organizations_url": "https://api.github.com/users/reductionista/orgs",
      "repos_url": "https://api.github.com/users/reductionista/repos",
      "events_url": "https://api.github.com/users/reductionista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reductionista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-02T17:30:11Z",
    "updated_at": "2018-04-02T17:51:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "It looks like his fork of the EIPs repo hasn't been updated since May 2017, while the original EIP758 this is referencing was created in Nov 2017 and merged in here in Jan 2018.  But if you're sure that's the best place, I'll go ahead and add it there.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/377986577/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/378165223",
    "html_url": "https://github.com/ethereum/EIPs/issues/963#issuecomment-378165223",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/963",
    "id": 378165223,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODE2NTIyMw==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-03T08:09:01Z",
    "updated_at": "2018-04-03T08:09:01Z",
    "author_association": "MEMBER",
    "body": "To me, it sounds like @reductionista and @tinybike need to talk.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/378165223/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/378320340",
    "html_url": "https://github.com/ethereum/EIPs/issues/963#issuecomment-378320340",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/963",
    "id": 378320340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODMyMDM0MA==",
    "user": {
      "login": "reductionista",
      "id": 2644901,
      "node_id": "MDQ6VXNlcjI2NDQ5MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2644901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reductionista",
      "html_url": "https://github.com/reductionista",
      "followers_url": "https://api.github.com/users/reductionista/followers",
      "following_url": "https://api.github.com/users/reductionista/following{/other_user}",
      "gists_url": "https://api.github.com/users/reductionista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reductionista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reductionista/subscriptions",
      "organizations_url": "https://api.github.com/users/reductionista/orgs",
      "repos_url": "https://api.github.com/users/reductionista/repos",
      "events_url": "https://api.github.com/users/reductionista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reductionista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-03T16:54:18Z",
    "updated_at": "2018-04-03T16:54:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "We've been talking--he's on board with the first one, but hasn't really had time to think about the rest yet.  He was the one who suggested I open this Issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/378320340/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/380586245",
    "html_url": "https://github.com/ethereum/EIPs/issues/963#issuecomment-380586245",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/963",
    "id": 380586245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDU4NjI0NQ==",
    "user": {
      "login": "adisney",
      "id": 154663,
      "node_id": "MDQ6VXNlcjE1NDY2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/154663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adisney",
      "html_url": "https://github.com/adisney",
      "followers_url": "https://api.github.com/users/adisney/followers",
      "following_url": "https://api.github.com/users/adisney/following{/other_user}",
      "gists_url": "https://api.github.com/users/adisney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adisney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adisney/subscriptions",
      "organizations_url": "https://api.github.com/users/adisney/orgs",
      "repos_url": "https://api.github.com/users/adisney/repos",
      "events_url": "https://api.github.com/users/adisney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adisney/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-11T20:32:15Z",
    "updated_at": "2018-04-11T20:32:15Z",
    "author_association": "NONE",
    "body": "I would suggest that the `from` parameter be added as an element in a filter object that you can pass to both the websocket and the polling filter. In fact, I suggest that filter allow one more field: `to`.\r\n\r\nFor example,\r\n```\r\n{\r\n    \"from\": \"0x00000000000000000000000000000000000000000000000000000000deadbeef\",\r\n    \"to\": \"0x0000000000000000000000000000000000000000000000000000000000cabbac\"\r\n}\r\n```\r\n\r\nBoth fields would be optional.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/380586245/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/380878858",
    "html_url": "https://github.com/ethereum/EIPs/issues/963#issuecomment-380878858",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/963",
    "id": 380878858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDg3ODg1OA==",
    "user": {
      "login": "reductionista",
      "id": 2644901,
      "node_id": "MDQ6VXNlcjI2NDQ5MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2644901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reductionista",
      "html_url": "https://github.com/reductionista",
      "followers_url": "https://api.github.com/users/reductionista/followers",
      "following_url": "https://api.github.com/users/reductionista/following{/other_user}",
      "gists_url": "https://api.github.com/users/reductionista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reductionista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reductionista/subscriptions",
      "organizations_url": "https://api.github.com/users/reductionista/orgs",
      "repos_url": "https://api.github.com/users/reductionista/repos",
      "events_url": "https://api.github.com/users/reductionista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reductionista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-12T17:11:31Z",
    "updated_at": "2018-04-12T17:11:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@adisney I agree.  The from field is more important, but if we're going to add one we may as well add the other.\r\n\r\nBy the way, the `eth_newReturnDataFilter` change has now been [merged](https://github.com/ethereum/EIPs/commit/a328583df109abccc73a5a72e0c6964fb0298e3a).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/380878858/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/389217170",
    "html_url": "https://github.com/ethereum/EIPs/issues/963#issuecomment-389217170",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/963",
    "id": 389217170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTIxNzE3MA==",
    "user": {
      "login": "tinybike",
      "id": 2637020,
      "node_id": "MDQ6VXNlcjI2MzcwMjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2637020?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tinybike",
      "html_url": "https://github.com/tinybike",
      "followers_url": "https://api.github.com/users/tinybike/followers",
      "following_url": "https://api.github.com/users/tinybike/following{/other_user}",
      "gists_url": "https://api.github.com/users/tinybike/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tinybike/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tinybike/subscriptions",
      "organizations_url": "https://api.github.com/users/tinybike/orgs",
      "repos_url": "https://api.github.com/users/tinybike/repos",
      "events_url": "https://api.github.com/users/tinybike/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tinybike/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T15:50:20Z",
    "updated_at": "2018-05-15T15:50:20Z",
    "author_association": "MEMBER",
    "body": "@reductionista I'm on board with #2.  Should we add from and to fields to the new subscription as well?  I think it's good to have comparable functionality for http rpc and pubsub.\r\n\r\nThe subID thing isn't a bad idea but I agree that we shouldn't modify sendtx and sendrawtx just for this.  Let's hold off on that IMO.\r\n\r\nI like the \"new completed transaction filter\" proposal, and I think a hasReturnData flag sounds great.\r\n\r\n@adisney is this all reasonable on your end?  Trying to avoid moving goalposts on you guys!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/389217170/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/389220832",
    "html_url": "https://github.com/ethereum/EIPs/issues/963#issuecomment-389220832",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/963",
    "id": 389220832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTIyMDgzMg==",
    "user": {
      "login": "adisney",
      "id": 154663,
      "node_id": "MDQ6VXNlcjE1NDY2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/154663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adisney",
      "html_url": "https://github.com/adisney",
      "followers_url": "https://api.github.com/users/adisney/followers",
      "following_url": "https://api.github.com/users/adisney/following{/other_user}",
      "gists_url": "https://api.github.com/users/adisney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adisney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adisney/subscriptions",
      "organizations_url": "https://api.github.com/users/adisney/orgs",
      "repos_url": "https://api.github.com/users/adisney/repos",
      "events_url": "https://api.github.com/users/adisney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adisney/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T16:00:39Z",
    "updated_at": "2018-05-15T16:00:39Z",
    "author_association": "NONE",
    "body": "#2 makes sense to me. I agree the filtering should be available in both rpc and pubsub.\r\n\r\nI think the hasReturnData flag makes sense and I have no opinion regarding the \"new completed transaction filter\" rename. That's a fairly straightforward update.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/389220832/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/389615444",
    "html_url": "https://github.com/ethereum/EIPs/issues/963#issuecomment-389615444",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/963",
    "id": 389615444,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTYxNTQ0NA==",
    "user": {
      "login": "reductionista",
      "id": 2644901,
      "node_id": "MDQ6VXNlcjI2NDQ5MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2644901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reductionista",
      "html_url": "https://github.com/reductionista",
      "followers_url": "https://api.github.com/users/reductionista/followers",
      "following_url": "https://api.github.com/users/reductionista/following{/other_user}",
      "gists_url": "https://api.github.com/users/reductionista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reductionista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reductionista/subscriptions",
      "organizations_url": "https://api.github.com/users/reductionista/orgs",
      "repos_url": "https://api.github.com/users/reductionista/repos",
      "events_url": "https://api.github.com/users/reductionista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reductionista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-16T18:14:54Z",
    "updated_at": "2018-05-16T18:14:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@tinybike I'd lean toward saying yes, we should include from and to fields with eth_subscribe.  It's not really needed there since it already filters by rpc client--but it makes sense to me to make them as parallel as possible.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/389615444/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/389617091",
    "html_url": "https://github.com/ethereum/EIPs/issues/963#issuecomment-389617091",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/963",
    "id": 389617091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTYxNzA5MQ==",
    "user": {
      "login": "reductionista",
      "id": 2644901,
      "node_id": "MDQ6VXNlcjI2NDQ5MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2644901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reductionista",
      "html_url": "https://github.com/reductionista",
      "followers_url": "https://api.github.com/users/reductionista/followers",
      "following_url": "https://api.github.com/users/reductionista/following{/other_user}",
      "gists_url": "https://api.github.com/users/reductionista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reductionista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reductionista/subscriptions",
      "organizations_url": "https://api.github.com/users/reductionista/orgs",
      "repos_url": "https://api.github.com/users/reductionista/repos",
      "events_url": "https://api.github.com/users/reductionista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reductionista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-16T18:20:13Z",
    "updated_at": "2018-05-16T18:22:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh, and I have one more proposal for modifying the EIP, which I only thought of after opening this issue:\r\n\r\nI think when removed=true (signaling the transaction was removed from canonical chain), there is no reason to include the actual return data.  It requires re-executing extra transactions again after the transaction was removed, which is a waste of CPU, plus wasting extra bandwidth sending information that was already sent to the client previously (when the transaction was mined and removed=false).  The only new information is that the transaction was removed, so it's really just the removed=true flag that matters (and the tx hash and subscription id).  My opinion is that the rpc client should be responsible for remembering what that return data was, if it needs to (although most of the time I would expect, there would be no reason for it to care about the return data any more, as the transaction was not even included in the canonical chain).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/389617091/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/389653872",
    "html_url": "https://github.com/ethereum/EIPs/issues/963#issuecomment-389653872",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/963",
    "id": 389653872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTY1Mzg3Mg==",
    "user": {
      "login": "tinybike",
      "id": 2637020,
      "node_id": "MDQ6VXNlcjI2MzcwMjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2637020?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tinybike",
      "html_url": "https://github.com/tinybike",
      "followers_url": "https://api.github.com/users/tinybike/followers",
      "following_url": "https://api.github.com/users/tinybike/following{/other_user}",
      "gists_url": "https://api.github.com/users/tinybike/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tinybike/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tinybike/subscriptions",
      "organizations_url": "https://api.github.com/users/tinybike/orgs",
      "repos_url": "https://api.github.com/users/tinybike/repos",
      "events_url": "https://api.github.com/users/tinybike/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tinybike/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-16T20:25:39Z",
    "updated_at": "2018-05-16T20:25:39Z",
    "author_association": "MEMBER",
    "body": "I think that makes sense, re: not re-executing the transaction on removed=true.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/389653872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/389656225",
    "html_url": "https://github.com/ethereum/EIPs/issues/963#issuecomment-389656225",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/963",
    "id": 389656225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTY1NjIyNQ==",
    "user": {
      "login": "adisney",
      "id": 154663,
      "node_id": "MDQ6VXNlcjE1NDY2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/154663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adisney",
      "html_url": "https://github.com/adisney",
      "followers_url": "https://api.github.com/users/adisney/followers",
      "following_url": "https://api.github.com/users/adisney/following{/other_user}",
      "gists_url": "https://api.github.com/users/adisney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adisney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adisney/subscriptions",
      "organizations_url": "https://api.github.com/users/adisney/orgs",
      "repos_url": "https://api.github.com/users/adisney/repos",
      "events_url": "https://api.github.com/users/adisney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adisney/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-16T20:33:53Z",
    "updated_at": "2018-05-16T20:33:53Z",
    "author_association": "NONE",
    "body": "I don't know that we can assume that the data has already been sent to the client in the case of removed=false. I could see situations in which a client could take advantage of the removed data without being aware of the data as it was originally executed.\r\n\r\nFWIW, I've already implemented that portion of the EIP for Parity, so I'm biased. To ease the burden on the CPU I'm caching the return data after the block is replayed the first time. The additional CPU load could be a problem not only for replaying txns when the block is removed but also if multiple clients are connected and subscribed to return_data.\r\n\r\nIn general, it seems like there are members of the Ethereum community who are pushing to have node client designs take into account that not everyone will be running their own node. That means there will be more public nodes out there (e.g. Infura) and so node implementations should take into account that many clients may be connected to a single node. This is why Parity asked me to add caching to my EIP pull request. Incidentally, that caching addresses the CPU load concern in the case of a block being removed from the canonical chain.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/389656225/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/389670058",
    "html_url": "https://github.com/ethereum/EIPs/issues/963#issuecomment-389670058",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/963",
    "id": 389670058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTY3MDA1OA==",
    "user": {
      "login": "tinybike",
      "id": 2637020,
      "node_id": "MDQ6VXNlcjI2MzcwMjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2637020?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tinybike",
      "html_url": "https://github.com/tinybike",
      "followers_url": "https://api.github.com/users/tinybike/followers",
      "following_url": "https://api.github.com/users/tinybike/following{/other_user}",
      "gists_url": "https://api.github.com/users/tinybike/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tinybike/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tinybike/subscriptions",
      "organizations_url": "https://api.github.com/users/tinybike/orgs",
      "repos_url": "https://api.github.com/users/tinybike/repos",
      "events_url": "https://api.github.com/users/tinybike/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tinybike/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-16T21:22:24Z",
    "updated_at": "2018-05-16T21:23:08Z",
    "author_association": "MEMBER",
    "body": "> I don't know that we can assume that the data has already been sent to the client in the case of removed=false. I could see situations in which a client could take advantage of the removed data without being aware of the data as it was originally executed.\r\n\r\n> FWIW, I've already implemented that portion of the EIP for Parity, so I'm biased.\r\n\r\n@adisney These are both fair points.  Okay, let's keep the `removed=true` return data requirement in.  (Pinging @reductionista as well.)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/389670058/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/389757015",
    "html_url": "https://github.com/ethereum/EIPs/issues/963#issuecomment-389757015",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/963",
    "id": 389757015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTc1NzAxNQ==",
    "user": {
      "login": "reductionista",
      "id": 2644901,
      "node_id": "MDQ6VXNlcjI2NDQ5MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2644901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reductionista",
      "html_url": "https://github.com/reductionista",
      "followers_url": "https://api.github.com/users/reductionista/followers",
      "following_url": "https://api.github.com/users/reductionista/following{/other_user}",
      "gists_url": "https://api.github.com/users/reductionista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reductionista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reductionista/subscriptions",
      "organizations_url": "https://api.github.com/users/reductionista/orgs",
      "repos_url": "https://api.github.com/users/reductionista/repos",
      "events_url": "https://api.github.com/users/reductionista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reductionista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-17T06:17:20Z",
    "updated_at": "2018-05-17T06:17:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@adisney Good point about caching--yes, that would avoid the extra CPU time.  I guess I'm also biased having not implemented any transaction replays, but as long as the node is behaving according to the EIP758 spec,  I don't see any case where a removed=true could arrive with no previous removed=false.  The only transactions it gets notified about are ones which it submitted _after_ the subscription begins.  If the client submits a transaction, and then it subscribes to return data, it should not receive any notifications about that transaction--if it did, that would be in violation of the EIP758 spec. Would you agree?\r\n\r\nAs I see it, the removed=true is a way for the node to signal the rpc client saying \"please forget about that data I just sent you!\"  If it never received any return data in the first place, then there would be no reason to send this signal.\r\n\r\n\"The additional CPU load could be a problem not only for replaying txns when the block is removed but also if multiple clients are connected and subscribed to return_data.\"\r\n\r\nPersonally, I don't see a good reason why a tx would ever need to be replayed--so this has not been a relevant issue for me so far with geth (which has never had to replay transactions for any reason, so far).  I should probably look at your Parity code to see how you accomplish this, but from my investigations into it so far it looks to me like it would be a complex and costly operation.  You can't guarantee that the return data will be accurate unless you replay all prior transactions in the same block, which is often hundreds of transactions.  So from my perspective, the problem isn't multiple vs single clients, it's that you shouldn't be re-running hundreds of transactions just to get the return data from a single transaction, when it could have just been sent as soon as the transaction completed originally.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/389757015/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/389851253",
    "html_url": "https://github.com/ethereum/EIPs/issues/963#issuecomment-389851253",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/963",
    "id": 389851253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTg1MTI1Mw==",
    "user": {
      "login": "adisney",
      "id": 154663,
      "node_id": "MDQ6VXNlcjE1NDY2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/154663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adisney",
      "html_url": "https://github.com/adisney",
      "followers_url": "https://api.github.com/users/adisney/followers",
      "following_url": "https://api.github.com/users/adisney/following{/other_user}",
      "gists_url": "https://api.github.com/users/adisney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adisney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adisney/subscriptions",
      "organizations_url": "https://api.github.com/users/adisney/orgs",
      "repos_url": "https://api.github.com/users/adisney/repos",
      "events_url": "https://api.github.com/users/adisney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adisney/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-17T12:36:35Z",
    "updated_at": "2018-05-17T12:36:35Z",
    "author_association": "NONE",
    "body": "> The only transactions it gets notified about are ones which it submitted after the subscription begins. If the client submits a transaction, and then it subscribes to return data, it should not receive any notifications about that transaction--if it did, that would be in violation of the EIP758 spec. Would you agree?\r\n\r\nI don't believe I agree. My thinking is that we should send the return data for all txns that were on blocks that were added and send return data with `removed: true` for all blocks that were removed. The client would not need to know if it sent return_data for a txn that was on an added block before determining if it should send return_data for a invalidated block. It seems like that would simplify things as you don't need to track txns sent to the clients.\r\n\r\nRegarding txn replays, all of your points regarding replaying txns are valid. Unfortunately, in the case of Parity, the location at which the subscriptions and HTTP RPC functionality lives does not have access to the txns as they execute. In fact, it doesn't have access to the txn return data at all unless the txns are replayed. Since a txn may depend on state that was changed by a txn in the same block, getting the return_data for a specific txn requires executing all of the txns that came before it in that block. Or, at the very least, restoring the state the txn saw when it began execution.\r\n\r\nFor that reason, replaying the txns is unavoidable without significant modification to Parity and the CPU load is a given, which is why the caching is so important.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/389851253/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/389953510",
    "html_url": "https://github.com/ethereum/EIPs/issues/963#issuecomment-389953510",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/963",
    "id": 389953510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTk1MzUxMA==",
    "user": {
      "login": "reductionista",
      "id": 2644901,
      "node_id": "MDQ6VXNlcjI2NDQ5MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2644901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reductionista",
      "html_url": "https://github.com/reductionista",
      "followers_url": "https://api.github.com/users/reductionista/followers",
      "following_url": "https://api.github.com/users/reductionista/following{/other_user}",
      "gists_url": "https://api.github.com/users/reductionista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reductionista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reductionista/subscriptions",
      "organizations_url": "https://api.github.com/users/reductionista/orgs",
      "repos_url": "https://api.github.com/users/reductionista/repos",
      "events_url": "https://api.github.com/users/reductionista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reductionista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-17T17:52:56Z",
    "updated_at": "2018-05-17T17:52:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@adisney I think in your first paragraph, you are disagreeing with something that was stated twice in  EIP-785 as it [currently stands](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-758.md).  Both times the word \"after\" was emphasized in italics, which to me indicates that this was considered an important requirement.\r\n\r\nFirst time:\r\n\r\n> Notifications are sent to the client for all transactions submitted from the client that are sealed _after_ subscribing. \r\n\r\nand again later:\r\n\r\n> All transactions submitted by the client that were sealed _after_ the initial eth_newReturnDataFilter request are included in this array.\r\n\r\nGiven that the EIP as it stands is not fully implementable, we have to make some changes.  So I'm not saying there's anything wrong with disagreeing with the current EIP.  Just pointing out that what you're suggesting is a major change, and would change the original vision (which is what my implementation is based around).\r\n\r\n\"It seems like that would simplify things as you don't need to track txns sent to the clients.\"\r\n\r\nTracking transactions submitted by the rpc client is one of the central features of the way I designed mine, so I guess I'm biased in wanting to keep this; but it does seem useful to me.  I saw it as a necessary requirement of the EIP, and already invested the time at the very beginning in designing it to work that way, but if @tinybike thinks it's not necessary we can change that I guess.\r\n\r\n\"Unfortunately, in the case of Parity, the location at which the subscriptions and HTTP RPC functionality lives does not have access to the txns as they execute.\"\r\n\r\nThe same is true in geth, rpc module is somewhat isolated from the blockchain itself.  However, in geth there is an easy way to pass messages back and forth using Go channels, which is what I use to pass return data back to the rpc module.  I assume there is some way for two different modules to communicate in Rust, but don't know if the architecture of Parity might make that more difficult.  If so, I guess that explains why we've come at this project from such different angles.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/389953510/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/389968214",
    "html_url": "https://github.com/ethereum/EIPs/issues/963#issuecomment-389968214",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/963",
    "id": 389968214,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTk2ODIxNA==",
    "user": {
      "login": "adisney",
      "id": 154663,
      "node_id": "MDQ6VXNlcjE1NDY2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/154663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adisney",
      "html_url": "https://github.com/adisney",
      "followers_url": "https://api.github.com/users/adisney/followers",
      "following_url": "https://api.github.com/users/adisney/following{/other_user}",
      "gists_url": "https://api.github.com/users/adisney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adisney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adisney/subscriptions",
      "organizations_url": "https://api.github.com/users/adisney/orgs",
      "repos_url": "https://api.github.com/users/adisney/repos",
      "events_url": "https://api.github.com/users/adisney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adisney/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-17T18:42:45Z",
    "updated_at": "2018-05-17T18:42:45Z",
    "author_association": "NONE",
    "body": "> @adisney I think in your first paragraph, you are disagreeing with something that was stated twice in EIP-785 as it currently stands. Both times the word \"after\" was emphasized in italics, which to me indicates that this was considered an important requirement.\r\n\r\nFair point!\r\n\r\nFortunately, for txns in newly added blocks, my implementation follows the spec as written. However, my implementation does send return_data for blocks being *removed* that may have initially been sealed prior to the subscription. If it's determined that the EIP should specify that return data be sent on removed blocks and it's important that the removed txn data not be sent for blocks sealed prior to the subscription then I will have to make some changes. If the EIP is updated so that return data need not be sent when a block is removed, then I won't have to change as much.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/389968214/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/396320928",
    "html_url": "https://github.com/ethereum/EIPs/issues/963#issuecomment-396320928",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/963",
    "id": 396320928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjMyMDkyOA==",
    "user": {
      "login": "reductionista",
      "id": 2644901,
      "node_id": "MDQ6VXNlcjI2NDQ5MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2644901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reductionista",
      "html_url": "https://github.com/reductionista",
      "followers_url": "https://api.github.com/users/reductionista/followers",
      "following_url": "https://api.github.com/users/reductionista/following{/other_user}",
      "gists_url": "https://api.github.com/users/reductionista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reductionista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reductionista/subscriptions",
      "organizations_url": "https://api.github.com/users/reductionista/orgs",
      "repos_url": "https://api.github.com/users/reductionista/repos",
      "events_url": "https://api.github.com/users/reductionista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reductionista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-11T17:26:56Z",
    "updated_at": "2018-06-11T17:27:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've revised the EIP with all of the changes we've come to agreement about here (from/to filtering, hasReturnData, and renaming ReturnData to CompletedTransaction and NewReturnDataFilter to NewCompletedTransactionFilter).  \r\n\r\nI didn't make the removed=true change, as it seems we are still in disagreement about that.  I'm still in favor of it, but @tinybike has yet to respond to my latest arguments for it.\r\n\r\nhttps://github.com/ethereum/EIPs/pull/1148",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/396320928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/396322872",
    "html_url": "https://github.com/ethereum/EIPs/issues/963#issuecomment-396322872",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/963",
    "id": 396322872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjMyMjg3Mg==",
    "user": {
      "login": "reductionista",
      "id": 2644901,
      "node_id": "MDQ6VXNlcjI2NDQ5MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2644901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reductionista",
      "html_url": "https://github.com/reductionista",
      "followers_url": "https://api.github.com/users/reductionista/followers",
      "following_url": "https://api.github.com/users/reductionista/following{/other_user}",
      "gists_url": "https://api.github.com/users/reductionista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reductionista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reductionista/subscriptions",
      "organizations_url": "https://api.github.com/users/reductionista/orgs",
      "repos_url": "https://api.github.com/users/reductionista/repos",
      "events_url": "https://api.github.com/users/reductionista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reductionista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-11T17:33:21Z",
    "updated_at": "2018-06-11T17:36:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Copying over here an important point I made in recent Discord discussions:\r\n\r\nHere's my philosophy about what these events should mean... feel free to disagree with any of this.  Purpose of this subscription or filter is for the client to get notified of new completed transaction events.  Purpose of the removed=true version of the event is to say \"oh wait, nevermind about that last one I just notified you about... please disregard!\".  So if the client does receive a nevermind message without the original, it's outside of the intended behavior, and should just ignore it anyway.  But I do think the \"never send a removed=true without first sending a removed=false\" rule should be enforced as much as possible on the server side also.  It's already enforced in my implementation for eth_subscribe, and I don't think it would be difficult to ensure it's also enforced for polling, if we care about that.  Original EIP does stipulate this is enforced, but we can decide to relax that if we want.\r\n\r\nThis was in response to the argument that we should include return data for removed=true in case the client never received a removed=false.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/396322872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/396761411",
    "html_url": "https://github.com/ethereum/EIPs/issues/963#issuecomment-396761411",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/963",
    "id": 396761411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njc2MTQxMQ==",
    "user": {
      "login": "reductionista",
      "id": 2644901,
      "node_id": "MDQ6VXNlcjI2NDQ5MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2644901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reductionista",
      "html_url": "https://github.com/reductionista",
      "followers_url": "https://api.github.com/users/reductionista/followers",
      "following_url": "https://api.github.com/users/reductionista/following{/other_user}",
      "gists_url": "https://api.github.com/users/reductionista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reductionista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reductionista/subscriptions",
      "organizations_url": "https://api.github.com/users/reductionista/orgs",
      "repos_url": "https://api.github.com/users/reductionista/repos",
      "events_url": "https://api.github.com/users/reductionista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reductionista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T23:02:01Z",
    "updated_at": "2018-06-12T23:02:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Update regarding the last remaining issue:  @tinybike has convinced me now that it's better to include ReturnData with removed=true events, in order to be consistent with existing log filter/notification behavior.  While I think it probably would be better if they both didn't include the Data field, I withdraw my suggestion to change it for EIP758--let's just keep it as is.\r\n\r\nI think everything is settled now as far as the specs!  But I'll leave this Issue open until my latest revision of the EIP gets merged, in case review of it brings up any other further concerns.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/396761411/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/400912916",
    "html_url": "https://github.com/ethereum/EIPs/issues/963#issuecomment-400912916",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/963",
    "id": 400912916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDkxMjkxNg==",
    "user": {
      "login": "reductionista",
      "id": 2644901,
      "node_id": "MDQ6VXNlcjI2NDQ5MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2644901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reductionista",
      "html_url": "https://github.com/reductionista",
      "followers_url": "https://api.github.com/users/reductionista/followers",
      "following_url": "https://api.github.com/users/reductionista/following{/other_user}",
      "gists_url": "https://api.github.com/users/reductionista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reductionista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reductionista/subscriptions",
      "organizations_url": "https://api.github.com/users/reductionista/orgs",
      "repos_url": "https://api.github.com/users/reductionista/repos",
      "events_url": "https://api.github.com/users/reductionista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reductionista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-28T05:13:49Z",
    "updated_at": "2018-06-28T05:13:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "All [changes](https://github.com/ethereum/EIPs/commit/0fe9ffabd6b2c081dbdae141870a43f1d447854c) have been merged now--closing issue.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/400912916/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
