{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/1246",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/1246/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/1246/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/1246/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/1246",
  "id": 343560011,
  "node_id": "MDU6SXNzdWUzNDM1NjAwMTE=",
  "number": 1246,
  "title": "ERC ? : Token Migration",
  "user": {
    "login": "chiro-hiro",
    "id": 8078873,
    "node_id": "MDQ6VXNlcjgwNzg4NzM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8078873?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chiro-hiro",
    "html_url": "https://github.com/chiro-hiro",
    "followers_url": "https://api.github.com/users/chiro-hiro/followers",
    "following_url": "https://api.github.com/users/chiro-hiro/following{/other_user}",
    "gists_url": "https://api.github.com/users/chiro-hiro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chiro-hiro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chiro-hiro/subscriptions",
    "organizations_url": "https://api.github.com/users/chiro-hiro/orgs",
    "repos_url": "https://api.github.com/users/chiro-hiro/repos",
    "events_url": "https://api.github.com/users/chiro-hiro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chiro-hiro/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2018-07-23T09:41:16Z",
  "updated_at": "2018-12-16T10:23:28Z",
  "closed_at": "2018-07-24T12:39:40Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "```\r\ntitle: Token Migration\r\nauthor: Chiro Hiro (@chiro-hiro)\r\nstatus: Draft\r\ndiscussions-to: <chiro@fkguru.com>\r\ncategory: ERC\r\ncreated: 2018-07-23\r\n```\r\n# Token Migration\r\n\r\n## Simple Summary\r\n\r\nThis document provides a standard to migrating the old token standard to the new one.\r\n\r\n## Abstract\r\n\r\nEach particular token is holding ledger of transactions then It isn't a good idea to make a massive copy, meanwhile new standard of the token is feature rich and secure, so a migration is needed to keep all tokens are up-to-date and reduce the fragment. The Token Migration defines a set of methods to migrate token's ledger for reasonable cost and security.\r\n\r\n## Motivation\r\n\r\nThere are many standards of Ethereum token such as `ERC-20`, `ERC-223`, `ERC-821`. We need a standard to stay away from the fragment or at least a method to migrate old token standard like `ERC-20` to the new one.\r\n\r\n# Specification\r\n\r\n## Rationale\r\n\r\nThe old token will be burned in an invalid address which will keep increasing over time (e.g `0x0000000000000000000000000000000000000001`) meanwhile a new token will be issued with the same amount.\r\n\r\nThe burning process makes the old token impossible to recover or redeem once again.\r\n\r\nThe cost of migration will be distributed among tokenholders and It cost around `77470 gas` for each `migrate()` call.\r\n\r\nThe redeemed token and the non-redeemed token will be *transferred* normally.\r\n\r\n## Implementation\r\n\r\nERC20 Token interface:\r\n```\r\ncontract ERC20Interface {\r\n    function totalSupply() public constant returns (uint);\r\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\r\n    function transfer(address to, uint256 tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n```\r\nNew token with migration code:\r\n```\r\ncontract NewToken{\r\n    \r\n    mapping (address => uint256) public balances;\r\n    \r\n    uint256 currentProcess = 1;\r\n    \r\n    ERC20Interface oldToken;\r\n    \r\n    constructor(address _oldAddress) public {\r\n        oldToken = ERC20Interface(_oldAddress);\r\n    }\r\n\r\n    /* Token code here */\r\n    \r\n    function migrate() public returns(bool){\r\n        uint256 oldBalance = oldToken.balanceOf(msg.sender);\r\n        \r\n        require(oldBalance > 0);\r\n        \r\n        //Burn old token\r\n        require(address(oldToken).delegatecall(bytes4(keccak256(\"transfer(address,uint256)\")), address(currentProcess), oldBalance));\r\n        \r\n        //Issue new token\r\n        balances[msg.sender] = oldBalance;\r\n        \r\n        currentProcess++;\r\n        \r\n        return true;\r\n    }\r\n    \r\n}\r\n```",
  "closed_by": {
    "login": "chiro-hiro",
    "id": 8078873,
    "node_id": "MDQ6VXNlcjgwNzg4NzM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8078873?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chiro-hiro",
    "html_url": "https://github.com/chiro-hiro",
    "followers_url": "https://api.github.com/users/chiro-hiro/followers",
    "following_url": "https://api.github.com/users/chiro-hiro/following{/other_user}",
    "gists_url": "https://api.github.com/users/chiro-hiro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chiro-hiro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chiro-hiro/subscriptions",
    "organizations_url": "https://api.github.com/users/chiro-hiro/orgs",
    "repos_url": "https://api.github.com/users/chiro-hiro/repos",
    "events_url": "https://api.github.com/users/chiro-hiro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chiro-hiro/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/1246/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/1246/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/407090228",
    "html_url": "https://github.com/ethereum/EIPs/issues/1246#issuecomment-407090228",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1246",
    "id": 407090228,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzA5MDIyOA==",
    "user": {
      "login": "nateawelch",
      "id": 706153,
      "node_id": "MDQ6VXNlcjcwNjE1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/706153?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nateawelch",
      "html_url": "https://github.com/nateawelch",
      "followers_url": "https://api.github.com/users/nateawelch/followers",
      "following_url": "https://api.github.com/users/nateawelch/following{/other_user}",
      "gists_url": "https://api.github.com/users/nateawelch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nateawelch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nateawelch/subscriptions",
      "organizations_url": "https://api.github.com/users/nateawelch/orgs",
      "repos_url": "https://api.github.com/users/nateawelch/repos",
      "events_url": "https://api.github.com/users/nateawelch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nateawelch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-23T15:04:48Z",
    "updated_at": "2018-07-23T15:07:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think this will work as expected. This `address(oldToken).delegatecall(bytes4(keccak256(\"transfer(address,uint256)\")), address(currentProcess), oldBalance)` wont transfer the tokens on the old token to `currentProcess`, since delegatecall will make it act on the current contracts Storage. This will essentially call the `transfer` function of `oldToken`, but act on the storage of the `newToken` contract. Which doesn't make much sense.\r\n\r\nAlso, why have `currentProcess`? Just send to 0x0...0 or 0x0...0dead. The `currentProcess` variable isn't even public so you aren't getting anything by including it aside from the added gas costs.\r\n\r\nFor this to work you'd have to `approve` the `newToken` contract to move the `oldToken`, and do a `transferFrom` within the `newToken`'s `migrate` function.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/407090228/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/407128115",
    "html_url": "https://github.com/ethereum/EIPs/issues/1246#issuecomment-407128115",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1246",
    "id": 407128115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzEyODExNQ==",
    "user": {
      "login": "chiro-hiro",
      "id": 8078873,
      "node_id": "MDQ6VXNlcjgwNzg4NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8078873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chiro-hiro",
      "html_url": "https://github.com/chiro-hiro",
      "followers_url": "https://api.github.com/users/chiro-hiro/followers",
      "following_url": "https://api.github.com/users/chiro-hiro/following{/other_user}",
      "gists_url": "https://api.github.com/users/chiro-hiro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chiro-hiro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chiro-hiro/subscriptions",
      "organizations_url": "https://api.github.com/users/chiro-hiro/orgs",
      "repos_url": "https://api.github.com/users/chiro-hiro/repos",
      "events_url": "https://api.github.com/users/chiro-hiro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chiro-hiro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-23T16:59:13Z",
    "updated_at": "2018-07-24T02:02:58Z",
    "author_association": "NONE",
    "body": "@flygoing \r\n>I don't think this will work as expected. This address(oldToken).delegatecall(bytes4(keccak256(\"transfer(address,uint256)\")), address(currentProcess), oldBalance) wont transfer the tokens on the old token to currentProcess. since delegatecall will make it act on the current contracts Storage. This will essentially call the transfer function of oldToken, but act on the storage of the newToken contract. Which doesn't make much sense.\r\n\r\nCould you teach me about this section?. I have just expected `delegatecall()` will keep `msg.sender` of the original actor who calls `migrate()`  and trigger `oldToken.transfer(address, uint256);`.\r\n\r\n>Also, why have currentProcess? Just send to 0x0...0 or 0x0...0dead. The currentProcess variable isn't even public so you aren't getting anything by including it aside from the added gas costs.\r\n\r\nSome token contract won't allow me to burn token since:\r\n```\r\nmodifier onlyValidAddress(address _to){\r\n    require(_to != address(0x00));\r\n}\r\n```\r\nI'd like to keep migration is able to track. It's possible to rebuild a table of redeemed holders. e.g.\r\n\r\nOld Tokenholder| Burned Address | Value\r\n--- | --- | ---\r\n0xea....deaf|0x00....0001|1000\r\n0x44....deaf|0x00....0002|5000\r\n\r\n> For this to work you'd have to approve the newToken contract to move the oldToken, and do a transferFrom within the newToken's migrate function.\r\n\r\nIt's mean, I have to paying  for gas of two transactions.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/407128115/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/407263434",
    "html_url": "https://github.com/ethereum/EIPs/issues/1246#issuecomment-407263434",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1246",
    "id": 407263434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzI2MzQzNA==",
    "user": {
      "login": "nateawelch",
      "id": 706153,
      "node_id": "MDQ6VXNlcjcwNjE1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/706153?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nateawelch",
      "html_url": "https://github.com/nateawelch",
      "followers_url": "https://api.github.com/users/nateawelch/followers",
      "following_url": "https://api.github.com/users/nateawelch/following{/other_user}",
      "gists_url": "https://api.github.com/users/nateawelch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nateawelch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nateawelch/subscriptions",
      "organizations_url": "https://api.github.com/users/nateawelch/orgs",
      "repos_url": "https://api.github.com/users/nateawelch/repos",
      "events_url": "https://api.github.com/users/nateawelch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nateawelch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-24T02:50:27Z",
    "updated_at": "2018-07-24T02:50:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Could you teach me about this section?. I have just expected delegatecall() will keep msg.sender of the original actor who calls migrate() and trigger oldToken.transfer(address, uint256);.\r\n\r\nthe DELEGATECALL opcode calls the _code_ of the given address, in this case `oldToken`'s code, *but* it calls it with the calling contracts storage. It's _delegating_ it's execution code to another contract. Yes, DELEGATECALL preserves msg.sender and msg.value, but it also acts on the calling contracts storage.\r\n\r\n> Some token contract won't allow me to burn token since:\r\n\r\nThen send them all to 0x1.\r\n\r\n> I'd like to keep migration is able to track. It's possible to rebuild a table of redeemed holders. e.g.\r\n\r\nDoes it need to be rebuilt on-chain? If not, you could simply use events to log the migration, e.g. an event in solidity like `Migration(address migrator, address oldToken, uint256 amount)` or something similar.\r\n\r\n> It's mean, I have to paying for gas of two transactions.\r\n\r\nThat's just how ERC20 tokens work. A contract can't move another addresses tokens for them outside of the approve/transferFrom workflow.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/407263434/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/407265798",
    "html_url": "https://github.com/ethereum/EIPs/issues/1246#issuecomment-407265798",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1246",
    "id": 407265798,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzI2NTc5OA==",
    "user": {
      "login": "chiro-hiro",
      "id": 8078873,
      "node_id": "MDQ6VXNlcjgwNzg4NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8078873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chiro-hiro",
      "html_url": "https://github.com/chiro-hiro",
      "followers_url": "https://api.github.com/users/chiro-hiro/followers",
      "following_url": "https://api.github.com/users/chiro-hiro/following{/other_user}",
      "gists_url": "https://api.github.com/users/chiro-hiro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chiro-hiro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chiro-hiro/subscriptions",
      "organizations_url": "https://api.github.com/users/chiro-hiro/orgs",
      "repos_url": "https://api.github.com/users/chiro-hiro/repos",
      "events_url": "https://api.github.com/users/chiro-hiro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chiro-hiro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-24T03:06:15Z",
    "updated_at": "2018-07-24T03:06:15Z",
    "author_association": "NONE",
    "body": "@flygoing Thank you very much, I will keep thinking for a reasonable on-chain migration.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/407265798/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/407377289",
    "html_url": "https://github.com/ethereum/EIPs/issues/1246#issuecomment-407377289",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1246",
    "id": 407377289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzM3NzI4OQ==",
    "user": {
      "login": "chiro-hiro",
      "id": 8078873,
      "node_id": "MDQ6VXNlcjgwNzg4NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8078873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chiro-hiro",
      "html_url": "https://github.com/chiro-hiro",
      "followers_url": "https://api.github.com/users/chiro-hiro/followers",
      "following_url": "https://api.github.com/users/chiro-hiro/following{/other_user}",
      "gists_url": "https://api.github.com/users/chiro-hiro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chiro-hiro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chiro-hiro/subscriptions",
      "organizations_url": "https://api.github.com/users/chiro-hiro/orgs",
      "repos_url": "https://api.github.com/users/chiro-hiro/repos",
      "events_url": "https://api.github.com/users/chiro-hiro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chiro-hiro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-24T11:46:07Z",
    "updated_at": "2018-07-24T11:53:30Z",
    "author_association": "NONE",
    "body": "> For this to work you'd have to approve the `newToken` contract to move the `oldToken`, and do a `transferFrom` within the `newToken`'s `migrate` function.\r\n\r\nThis migration need three steps to be done, I thought.\r\n1. The token-holder registers his address\r\n2. The token-holder approve `newToken` to use his token.\r\n3. The token-holder triggers `newToken`'s `migrate()` then finish the migration.\r\n\r\nI think, we can use `burn and redeem`  mechanism.\r\n1. The token-holder transfer all tokens to `address(keccak256(ms.sender))`.\r\n2. Trigger `newToken`'s `redeem()`.\r\n\r\n```\r\ncontract NewToken{\r\n    \r\n    mapping (address => uint256) public balances;\r\n    \r\n    mapping (address => bool) public redeemed;\r\n    \r\n    ERC20Interface oldToken;\r\n    \r\n    constructor(address _oldAddress) public {\r\n        oldToken = ERC20Interface(_oldAddress);\r\n    }\r\n    \r\n    function redeemAddress() public view returns(address){\r\n        return address(keccak256(abi.encodePacked(msg.sender)));\r\n    }\r\n    \r\n    function redeem() public returns(bool){\r\n        address _owner = redeemAddress();\r\n        uint256 _balance = oldToken.balanceOf(_owner);\r\n        require(redeemed[_owner] == false);\r\n        require(_balance > 0);\r\n        balances[msg.sender] = _balance;\r\n        redeemed[_owner] = true;\r\n        return true;\r\n    }\r\n\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/407377289/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/407389591",
    "html_url": "https://github.com/ethereum/EIPs/issues/1246#issuecomment-407389591",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1246",
    "id": 407389591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzM4OTU5MQ==",
    "user": {
      "login": "nateawelch",
      "id": 706153,
      "node_id": "MDQ6VXNlcjcwNjE1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/706153?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nateawelch",
      "html_url": "https://github.com/nateawelch",
      "followers_url": "https://api.github.com/users/nateawelch/followers",
      "following_url": "https://api.github.com/users/nateawelch/following{/other_user}",
      "gists_url": "https://api.github.com/users/nateawelch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nateawelch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nateawelch/subscriptions",
      "organizations_url": "https://api.github.com/users/nateawelch/orgs",
      "repos_url": "https://api.github.com/users/nateawelch/repos",
      "events_url": "https://api.github.com/users/nateawelch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nateawelch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-24T12:31:02Z",
    "updated_at": "2018-07-24T12:31:51Z",
    "author_association": "CONTRIBUTOR",
    "body": ">This migration need three steps to be done, I thought.\r\n\r\n>1. The token-holder registers his address\r\n>2. The token-holder approve newToken to use his token.\r\n>3. The token-holder triggers newToken's migrate() then finish the migration.\r\n\r\nThey don't need to register their address for anything. `approve` allows a third party address to move tokens upto the amount I specify from my address to anywhere else. So I `approve` the newToken contract to move my oldTokens. Then I call `migrate` on newToken, which checks the balance of oldToken, moves them to either itself or to a burn address, and then creates the same amount in itself for the person migrating.\r\n\r\n> I think, we can use burn and redeem mechanism.\r\n>\r\n>The token-holder transfer all tokens to address(keccak256(ms.sender)).\r\n>Trigger newToken's redeem().\r\n\r\nThis is still two transactions, but they aren't following established standards like approve/transferFrom.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/407389591/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/407391683",
    "html_url": "https://github.com/ethereum/EIPs/issues/1246#issuecomment-407391683",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1246",
    "id": 407391683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzM5MTY4Mw==",
    "user": {
      "login": "chiro-hiro",
      "id": 8078873,
      "node_id": "MDQ6VXNlcjgwNzg4NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8078873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chiro-hiro",
      "html_url": "https://github.com/chiro-hiro",
      "followers_url": "https://api.github.com/users/chiro-hiro/followers",
      "following_url": "https://api.github.com/users/chiro-hiro/following{/other_user}",
      "gists_url": "https://api.github.com/users/chiro-hiro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chiro-hiro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chiro-hiro/subscriptions",
      "organizations_url": "https://api.github.com/users/chiro-hiro/orgs",
      "repos_url": "https://api.github.com/users/chiro-hiro/repos",
      "events_url": "https://api.github.com/users/chiro-hiro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chiro-hiro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-24T12:38:59Z",
    "updated_at": "2018-07-24T12:38:59Z",
    "author_association": "NONE",
    "body": "@flygoing I get it, I will close this issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/407391683/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/447631691",
    "html_url": "https://github.com/ethereum/EIPs/issues/1246#issuecomment-447631691",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1246",
    "id": 447631691,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzYzMTY5MQ==",
    "user": {
      "login": "alikseij",
      "id": 45906627,
      "node_id": "MDQ6VXNlcjQ1OTA2NjI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/45906627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alikseij",
      "html_url": "https://github.com/alikseij",
      "followers_url": "https://api.github.com/users/alikseij/followers",
      "following_url": "https://api.github.com/users/alikseij/following{/other_user}",
      "gists_url": "https://api.github.com/users/alikseij/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alikseij/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alikseij/subscriptions",
      "organizations_url": "https://api.github.com/users/alikseij/orgs",
      "repos_url": "https://api.github.com/users/alikseij/repos",
      "events_url": "https://api.github.com/users/alikseij/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alikseij/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-16T10:23:16Z",
    "updated_at": "2018-12-16T10:23:16Z",
    "author_association": "NONE",
    "body": "П п д м в р",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/447631691/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/447631700",
    "html_url": "https://github.com/ethereum/EIPs/issues/1246#issuecomment-447631700",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1246",
    "id": 447631700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzYzMTcwMA==",
    "user": {
      "login": "alikseij",
      "id": 45906627,
      "node_id": "MDQ6VXNlcjQ1OTA2NjI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/45906627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alikseij",
      "html_url": "https://github.com/alikseij",
      "followers_url": "https://api.github.com/users/alikseij/followers",
      "following_url": "https://api.github.com/users/alikseij/following{/other_user}",
      "gists_url": "https://api.github.com/users/alikseij/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alikseij/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alikseij/subscriptions",
      "organizations_url": "https://api.github.com/users/alikseij/orgs",
      "repos_url": "https://api.github.com/users/alikseij/repos",
      "events_url": "https://api.github.com/users/alikseij/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alikseij/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-16T10:23:27Z",
    "updated_at": "2018-12-16T10:23:27Z",
    "author_association": "NONE",
    "body": "П п д м в р",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/447631700/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
