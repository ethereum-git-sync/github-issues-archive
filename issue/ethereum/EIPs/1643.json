{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/1643",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/1643/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/1643/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/1643/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/1643",
  "id": 389390927,
  "node_id": "MDU6SXNzdWUzODkzOTA5Mjc=",
  "number": 1643,
  "title": "ERC-1643: Document Management Standard",
  "user": {
    "login": "adamdossa",
    "id": 2633913,
    "node_id": "MDQ6VXNlcjI2MzM5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2633913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/adamdossa",
    "html_url": "https://github.com/adamdossa",
    "followers_url": "https://api.github.com/users/adamdossa/followers",
    "following_url": "https://api.github.com/users/adamdossa/following{/other_user}",
    "gists_url": "https://api.github.com/users/adamdossa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/adamdossa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/adamdossa/subscriptions",
    "organizations_url": "https://api.github.com/users/adamdossa/orgs",
    "repos_url": "https://api.github.com/users/adamdossa/repos",
    "events_url": "https://api.github.com/users/adamdossa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/adamdossa/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2018-12-10T16:49:53Z",
  "updated_at": "2021-12-05T05:10:38Z",
  "closed_at": "2021-12-05T05:10:38Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "---\r\n\r\neip: ERC-1643\r\ntitle: Document Management Standard (part of the ERC-1400 Security Token Standards)\r\nauthor: Adam Dossa (@adamdossa), Pablo Ruiz (@pabloruiz55), Fabian Vogelsteller (@frozeman), Stephane Gosselin (@thegostep)\r\ndiscussions-to: #1411\r\nstatus: Draft\r\ntype: Standards Track\r\ncategory: ERC\r\ncreated: 2018-09-09\r\nrequire: None\r\n\r\n---\r\n\r\n## Simple Summary\r\n\r\nThis standard sits under the ERC-1400 (#1411) umbrella set of standards related to security tokens.\r\n\r\nProvides a standard to support attaching documentation to smart contracts, specifically security token contracts in the context of ERC-1400 (#1411).\r\n\r\n## Abstract\r\n\r\nAllows documents to be associated with a smart contract and a standard interface for querying / modifying these contracts, as well as receiving updates (via events) to changes on these documents.\r\n\r\nExamples of documentation could include offering documents and legends associated with security tokens.\r\n\r\n## Motivation\r\n\r\nAccelerate the issuance and management of securities on the Ethereum blockchain by specifying a set of standard interfaces through which security tokens can be operated on and interrogated by all relevant parties.\r\n\r\nSince security tokens and their ownership usually entails rights and obligations either from the investor or the issuer, the ability to associate legal documents with the relevant contracts is important. Doing this in a standardised way allows wallets, exchanges and other ecosystem members to provide a standard view of these documents, and allows investors to subscribe to updates in a standardised manner.\r\n\r\n## Requirements\r\n\r\nSee ERC-1400 (#1411) for a full set of requirements across the library of standards.\r\n\r\nThe following requirements have been compiled following discussions with parties across the Security Token ecosystem.\r\n\r\n- MUST support querying and subscribing to updates on any relevant documentation for the security.\r\n\r\n## Rationale\r\n\r\nBeing able to attach documents to a security token allows the issuer, or other authorised entities, to communicate documentation associated with the security to token holders. An attached document can optionally include a hash of its contents in order to provide an immutability guarantee.\r\n\r\n## Specification\r\n\r\nThese functions are used to manage a library of documents associated with the token. These documents can be legal documents, or other reference materials.\r\n\r\nA document is associated with a short name (represented as a `bytes32`), a modified timestamp, and can optionally have a hash of the document contents associated with it on-chain.\r\n\r\nIt is referenced via a generic URI that could point to a website or other document portal.\r\n\r\n### getDocument\r\n\r\nUsed to return the details of a document with a known name (`bytes32`). Returns the URI associated with the document (`string`), the hash (of the contents) of the document (`bytes32`), and the timestamp at which the document was last modified via `setDocument` (`uint256`).\r\n\r\n``` solidity\r\nfunction getDocument(bytes32 _name) external view returns (string, bytes32, uint256);\r\n```\r\n\r\n### setDocument\r\n\r\nUsed to attach a new document to the contract, or update the URI or hash of an existing attached document.\r\n\r\n`setDocument` MUST throw if the document is not successfully stored.\r\n\r\n`setDocument` MUST emit a `DocumentUpdated` event with details of the document being attached or modified.\r\n\r\n``` solidity\r\nfunction setDocument(bytes32 _name, string _uri, bytes32 _documentHash) external;\r\n```\r\n\r\n### removeDocument\r\n\r\nUsed to remove an existing document from the contract.\r\n\r\n`removeDocument` MUST throw if the document is not successfully removed.\r\n\r\n`removeDocument` MUST emit a `DocumentRemoved` event with details of the document being attached or modified.\r\n\r\n``` solidity\r\nfunction removeDocument(bytes32 _name) external;\r\n```\r\n\r\n### getAllDocuments\r\n\r\nUsed to retrieve a full list of documents attached to the smart contract.\r\n\r\nAny document added via `setDocument` and not subsequently removed via the `removeDocument` function MUST be returned.\r\n\r\n``` solidity\r\nfunction getAllDocuments() view returns (bytes32[]);\r\n```\r\n\r\n## Interface\r\n\r\n``` solidity\r\n/// @title IERC1643 Document Management (part of the ERC1400 Security Token Standards)\r\n/// @dev See https://github.com/SecurityTokenStandard/EIP-Spec\r\n\r\ninterface IERC1643 {\r\n\r\n    // Document Management\r\n    function getDocument(bytes32 _name) external view returns (string, bytes32, uint256);\r\n    function setDocument(bytes32 _name, string _uri, bytes32 _documentHash) external;\r\n    function removeDocument(bytes32 _name) external;\r\n    function getAllDocuments() external view returns (bytes32[]);\r\n\r\n    // Document Events\r\n    event DocumentRemoved(bytes32 indexed _name, string _uri, bytes32 _documentHash);\r\n    event DocumentUpdated(bytes32 indexed _name, string _uri, bytes32 _documentHash);\r\n\r\n}\r\n```\r\n\r\n## References\r\n- [EIP 1400: Security Token Standard With Partitions](https://github.com/ethereum/EIPs/issues/1411)\r\n- [EIP Draft](https://github.com/SecurityTokenStandard/EIP-Spec)",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/1643/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/1643/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/450105182",
    "html_url": "https://github.com/ethereum/EIPs/issues/1643#issuecomment-450105182",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1643",
    "id": 450105182,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDEwNTE4Mg==",
    "user": {
      "login": "bzzl",
      "id": 45984530,
      "node_id": "MDQ6VXNlcjQ1OTg0NTMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/45984530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bzzl",
      "html_url": "https://github.com/bzzl",
      "followers_url": "https://api.github.com/users/bzzl/followers",
      "following_url": "https://api.github.com/users/bzzl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bzzl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bzzl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bzzl/subscriptions",
      "organizations_url": "https://api.github.com/users/bzzl/orgs",
      "repos_url": "https://api.github.com/users/bzzl/repos",
      "events_url": "https://api.github.com/users/bzzl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bzzl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-27T08:42:09Z",
    "updated_at": "2018-12-27T08:42:09Z",
    "author_association": "NONE",
    "body": "my confusion: why the **removeDocuments** have the same functionality with **setDocuments** ?\r\n\r\n> Used to attach a new document to the contract, or update the URI or hash of an existing attached document.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/450105182/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/451235656",
    "html_url": "https://github.com/ethereum/EIPs/issues/1643#issuecomment-451235656",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1643",
    "id": 451235656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTIzNTY1Ng==",
    "user": {
      "login": "adamdossa",
      "id": 2633913,
      "node_id": "MDQ6VXNlcjI2MzM5MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2633913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamdossa",
      "html_url": "https://github.com/adamdossa",
      "followers_url": "https://api.github.com/users/adamdossa/followers",
      "following_url": "https://api.github.com/users/adamdossa/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamdossa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamdossa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamdossa/subscriptions",
      "organizations_url": "https://api.github.com/users/adamdossa/orgs",
      "repos_url": "https://api.github.com/users/adamdossa/repos",
      "events_url": "https://api.github.com/users/adamdossa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamdossa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-03T18:35:50Z",
    "updated_at": "2019-01-03T18:35:50Z",
    "author_association": "NONE",
    "body": "@bzzl - thanks - that was a typo - I've updated the description now.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/451235656/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/453970278",
    "html_url": "https://github.com/ethereum/EIPs/issues/1643#issuecomment-453970278",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1643",
    "id": 453970278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mzk3MDI3OA==",
    "user": {
      "login": "itinance",
      "id": 1758597,
      "node_id": "MDQ6VXNlcjE3NTg1OTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1758597?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/itinance",
      "html_url": "https://github.com/itinance",
      "followers_url": "https://api.github.com/users/itinance/followers",
      "following_url": "https://api.github.com/users/itinance/following{/other_user}",
      "gists_url": "https://api.github.com/users/itinance/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/itinance/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/itinance/subscriptions",
      "organizations_url": "https://api.github.com/users/itinance/orgs",
      "repos_url": "https://api.github.com/users/itinance/repos",
      "events_url": "https://api.github.com/users/itinance/events{/privacy}",
      "received_events_url": "https://api.github.com/users/itinance/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-14T11:12:24Z",
    "updated_at": "2019-01-14T11:13:14Z",
    "author_association": "NONE",
    "body": "I would suggest to not shrink the name to 32 bytes. Especially in terms of legal entities there might by much longer document titles that could crash with other titles when only 32 characters are left.\r\nTherefore i would suggest to use **string**. \r\n\r\nFurthermore, if we would work with a document registry, while each document gets its own UUID (which could be represented by bytes16), any reference to this document could be handled with this ID only instead of storing full document records in the contract or a token mapping although many contracts or token would share the same entity.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/453970278/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/476423232",
    "html_url": "https://github.com/ethereum/EIPs/issues/1643#issuecomment-476423232",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1643",
    "id": 476423232,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjQyMzIzMg==",
    "user": {
      "login": "joequant",
      "id": 2908185,
      "node_id": "MDQ6VXNlcjI5MDgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2908185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joequant",
      "html_url": "https://github.com/joequant",
      "followers_url": "https://api.github.com/users/joequant/followers",
      "following_url": "https://api.github.com/users/joequant/following{/other_user}",
      "gists_url": "https://api.github.com/users/joequant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joequant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joequant/subscriptions",
      "organizations_url": "https://api.github.com/users/joequant/orgs",
      "repos_url": "https://api.github.com/users/joequant/repos",
      "events_url": "https://api.github.com/users/joequant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joequant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-26T00:04:39Z",
    "updated_at": "2019-03-26T00:04:39Z",
    "author_association": "NONE",
    "body": "bytes32 is much too small.  the referenceid should be string.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/476423232/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/476425114",
    "html_url": "https://github.com/ethereum/EIPs/issues/1643#issuecomment-476425114",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1643",
    "id": 476425114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjQyNTExNA==",
    "user": {
      "login": "joequant",
      "id": 2908185,
      "node_id": "MDQ6VXNlcjI5MDgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2908185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joequant",
      "html_url": "https://github.com/joequant",
      "followers_url": "https://api.github.com/users/joequant/followers",
      "following_url": "https://api.github.com/users/joequant/following{/other_user}",
      "gists_url": "https://api.github.com/users/joequant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joequant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joequant/subscriptions",
      "organizations_url": "https://api.github.com/users/joequant/orgs",
      "repos_url": "https://api.github.com/users/joequant/repos",
      "events_url": "https://api.github.com/users/joequant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joequant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-26T00:14:41Z",
    "updated_at": "2019-03-26T00:14:41Z",
    "author_association": "NONE",
    "body": "One thing about document management is that it's necessary to somehow attach arbitrary metadata, and I think the basic conceptual question is what about the document gets stored on the blockchain and what gets stored offchain.\r\n\r\nBoth the uri and hash code should be optional fields.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/476425114/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/528394789",
    "html_url": "https://github.com/ethereum/EIPs/issues/1643#issuecomment-528394789",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1643",
    "id": 528394789,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODM5NDc4OQ==",
    "user": {
      "login": "chapati23",
      "id": 117495,
      "node_id": "MDQ6VXNlcjExNzQ5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/117495?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chapati23",
      "html_url": "https://github.com/chapati23",
      "followers_url": "https://api.github.com/users/chapati23/followers",
      "following_url": "https://api.github.com/users/chapati23/following{/other_user}",
      "gists_url": "https://api.github.com/users/chapati23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chapati23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chapati23/subscriptions",
      "organizations_url": "https://api.github.com/users/chapati23/orgs",
      "repos_url": "https://api.github.com/users/chapati23/repos",
      "events_url": "https://api.github.com/users/chapati23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chapati23/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-05T14:37:42Z",
    "updated_at": "2019-09-05T14:37:42Z",
    "author_association": "NONE",
    "body": "A problem I see is the handling of non-public documents. There will be documents or reports that issuers will (or can) only make available to shareholders (= token owners). So either the issuer runs into the problem that they'll need to upload a document publicly that should be restricted OR the investor runs into the problem that they need additional information from the issuer (e.g. a decryption password for the document) to access the document.\r\n\r\nAny thoughts here? We at Brickblock are currently just storing an IPFS hash on-chain that links to the off-chain document, but haven't yet found an elegant way to allow only token holders to access it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/528394789/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/573907277",
    "html_url": "https://github.com/ethereum/EIPs/issues/1643#issuecomment-573907277",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1643",
    "id": 573907277,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MzkwNzI3Nw==",
    "user": {
      "login": "jameshiester",
      "id": 55632569,
      "node_id": "MDQ6VXNlcjU1NjMyNTY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/55632569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jameshiester",
      "html_url": "https://github.com/jameshiester",
      "followers_url": "https://api.github.com/users/jameshiester/followers",
      "following_url": "https://api.github.com/users/jameshiester/following{/other_user}",
      "gists_url": "https://api.github.com/users/jameshiester/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jameshiester/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jameshiester/subscriptions",
      "organizations_url": "https://api.github.com/users/jameshiester/orgs",
      "repos_url": "https://api.github.com/users/jameshiester/repos",
      "events_url": "https://api.github.com/users/jameshiester/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jameshiester/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-13T22:40:21Z",
    "updated_at": "2020-01-13T22:40:21Z",
    "author_association": "NONE",
    "body": "I would like to propose the addition of a bytes32 type field to the setDocument arguments.  This would support grouping documents added to the contract.  For example, if there are multiple revisions of the Form D, a user could query all the documents with type Form D.  There might be standardized/reserved document types in much the same way that there are standard codes written into the spec.  This would also support extending the contract to include a getDocumentsByType function.  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/573907277/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/777629577",
    "html_url": "https://github.com/ethereum/EIPs/issues/1643#issuecomment-777629577",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1643",
    "id": 777629577,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzYyOTU3Nw==",
    "user": {
      "login": "conor10",
      "id": 2148266,
      "node_id": "MDQ6VXNlcjIxNDgyNjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2148266?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/conor10",
      "html_url": "https://github.com/conor10",
      "followers_url": "https://api.github.com/users/conor10/followers",
      "following_url": "https://api.github.com/users/conor10/following{/other_user}",
      "gists_url": "https://api.github.com/users/conor10/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/conor10/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/conor10/subscriptions",
      "organizations_url": "https://api.github.com/users/conor10/orgs",
      "repos_url": "https://api.github.com/users/conor10/repos",
      "events_url": "https://api.github.com/users/conor10/events{/privacy}",
      "received_events_url": "https://api.github.com/users/conor10/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-11T16:42:02Z",
    "updated_at": "2021-02-11T16:42:02Z",
    "author_association": "NONE",
    "body": "Did this ERC go any further? This is the closest thing I've found to a standard for representing externally stored documents in Ethereum contracts. \r\n\r\nThis linking of external documents comes up a lot, but I've not come across a standard which strikes me as strange given how many organisations want to use blockchain for this use case.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/777629577/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974757124",
    "html_url": "https://github.com/ethereum/EIPs/issues/1643#issuecomment-974757124",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1643",
    "id": 974757124,
    "node_id": "IC_kwDOAq426M46GZ0E",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-11-21T05:09:54Z",
    "updated_at": "2021-11-21T05:09:54Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974757124/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986168197",
    "html_url": "https://github.com/ethereum/EIPs/issues/1643#issuecomment-986168197",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1643",
    "id": 986168197,
    "node_id": "IC_kwDOAq426M46x7uF",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-05T05:10:37Z",
    "updated_at": "2021-12-05T05:10:37Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986168197/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
