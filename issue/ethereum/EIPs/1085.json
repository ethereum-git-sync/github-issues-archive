{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/1085",
  "id": 323665397,
  "node_id": "MDU6SXNzdWUzMjM2NjUzOTc=",
  "number": 1085,
  "title": "Common genesis.json format scheme across all client implementations",
  "user": {
    "login": "winsvega",
    "id": 4492341,
    "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/winsvega",
    "html_url": "https://github.com/winsvega",
    "followers_url": "https://api.github.com/users/winsvega/followers",
    "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
    "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
    "organizations_url": "https://api.github.com/users/winsvega/orgs",
    "repos_url": "https://api.github.com/users/winsvega/repos",
    "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
    "received_events_url": "https://api.github.com/users/winsvega/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 29,
  "created_at": "2018-05-16T15:11:26Z",
  "updated_at": "2021-12-20T03:12:01Z",
  "closed_at": "2021-12-20T03:12:01Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "**Simple Summary**\r\n-----\r\nClient should be able to parse genesis.json config file that is commonly accepted and supported by all other client implementations. \r\n\r\n**Motivation**\r\n-----\r\nCurrently every ethereum client has it's own genesis.json format which makes it impossible to move one node configuration to another node. (parity config to geth and vice versa). And it is not about unique options that some clients have, it's about using common fields but with different format. Same options has different style and names in .json configurations across client implementation. \r\n\r\nHive tool uses bash script in order to make a config file for each client individually. \r\n\r\nUsers have to search for correct genesis.json description for each client on different web pages. \r\n\r\n**Suggestion**\r\n-----\r\nMake a list of minimum required fields for genesis.json config file that each client would be able to parse and understand.\r\n\r\nExample:\r\n```\r\n{\r\n       \"version\" : \"1\",\r\n       \"params\": {\r\n                \"miningMethod\" : \"NoProof\",\r\n            \t\"homesteadForkBlock\": \"0x00\",\r\n\t\t\"EIP150ForkBlock\": \"0x00\",\r\n\t\t\"EIP158ForkBlock\": \"0x00\",\r\n\t\t\"byzantiumForkBlock\": \"0x00\",\r\n\t\t\"constantinopleForkBlock\": \"0x00\",\r\n\t\t\"chainID\": \"0x01\",\r\n       },\r\n       \"genesis\" : {\r\n            \t\"nonce\": \"0x0000000000000042\",\r\n\t\t\"difficulty\": \"0x020000\",\r\n\t\t\"author\": \"0x0000000000000000000000000000000000000000\",\r\n\t\t\"timestamp\": \"0x00\",\r\n\t\t\"extraData\": \"0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa\",\r\n\t\t\"gasLimit\": \"0x1388\"\r\n       },\r\n       \"accounts\": {\r\n            \"0x095e7baea6a6c7c4c2dfeb977efac326af552d87\" : {\r\n                \"balance\" : \"0x0de0b6b3a76586a0\",\r\n                \"code\" : \"0x6001600101600055\",\r\n                \"nonce\" : \"0x00\",\r\n                \"storage\" : {\r\n                    \"0x00\" : \"0x02\"\r\n                }\r\n            },\r\n            \"0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba\" : {\r\n                \"balance\" : \"0x29a2241af62ca034\",\r\n                \"code\" : \"\",\r\n                \"nonce\" : \"0x00\",\r\n                \"storage\" : {\r\n                }\r\n            }\r\n       }\r\n}\r\n```\r\n",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/1085/reactions",
    "total_count": 11,
    "+1": 8,
    "-1": 0,
    "laugh": 0,
    "hooray": 2,
    "confused": 1,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/390156695",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-390156695",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 390156695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDE1NjY5NQ==",
    "user": {
      "login": "holgerd77",
      "id": 931137,
      "node_id": "MDQ6VXNlcjkzMTEzNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/931137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holgerd77",
      "html_url": "https://github.com/holgerd77",
      "followers_url": "https://api.github.com/users/holgerd77/followers",
      "following_url": "https://api.github.com/users/holgerd77/following{/other_user}",
      "gists_url": "https://api.github.com/users/holgerd77/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holgerd77/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holgerd77/subscriptions",
      "organizations_url": "https://api.github.com/users/holgerd77/orgs",
      "repos_url": "https://api.github.com/users/holgerd77/repos",
      "events_url": "https://api.github.com/users/holgerd77/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holgerd77/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-18T09:51:31Z",
    "updated_at": "2018-05-18T09:51:31Z",
    "author_association": "MEMBER",
    "body": "Hi, thanks for submitting this EIP, I think this could be useful to find some common ground here.\r\n\r\nIn the current format I see different problems with the data structure, which would probably hold me back to use this in production:\r\n\r\n1) To have the hardforks added in a centrally managed/updated file makes things unflexible. If a client relies on this and would want to e.g. add some draft ``Casper`` hardfork params based an this list, one would have to wait for an updated released ``genesis.json`` file. This is not practical.\r\n\r\n2) If a hardfork list should be maintained/included I would propose not to include this into the genesis file. Beside that this actually is no genesis data, this takes off the static nature of a genesis.json file. This prevents to e.g. provide a checksum/hash for the file, which would be useful to verify its integrity. So I would instead maintain a separate ``hardforks.json`` file.\r\n\r\n3) Having the genesis accounts integrated in the file makes the file very large. If clients just need the genesis parameters (e.g. to instantiate a genesis block) they always have to load the whole huge file. This makes things unnecessarily inefficient. I would also propose to use a separate ``genesisAccounts.json`` file here.\r\n\r\n4) I think for this to be maximally useful this should be defined with different networks in mind, not just the Ethereum mainnet.\r\n\r\nSidenote: have seen that this is discussed in the core devs meeting today, sorry, can't join on this for time reasons.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/390156695/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/390158139",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-390158139",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 390158139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDE1ODEzOQ==",
    "user": {
      "login": "holgerd77",
      "id": 931137,
      "node_id": "MDQ6VXNlcjkzMTEzNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/931137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holgerd77",
      "html_url": "https://github.com/holgerd77",
      "followers_url": "https://api.github.com/users/holgerd77/followers",
      "following_url": "https://api.github.com/users/holgerd77/following{/other_user}",
      "gists_url": "https://api.github.com/users/holgerd77/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holgerd77/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holgerd77/subscriptions",
      "organizations_url": "https://api.github.com/users/holgerd77/orgs",
      "repos_url": "https://api.github.com/users/holgerd77/repos",
      "events_url": "https://api.github.com/users/holgerd77/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holgerd77/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-18T09:57:10Z",
    "updated_at": "2018-05-18T09:57:24Z",
    "author_association": "MEMBER",
    "body": "One thought further: I am generally skeptical if this can be provided in a way that clients want to use/parse this \"as is\". It will nevertheless be helpful if this information is provided officially and from a trustful source, even if only parts are taken and/or not parsed or used directly but just copied.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/390158139/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/390621196",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-390621196",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 390621196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDYyMTE5Ng==",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-21T10:52:01Z",
    "updated_at": "2018-05-21T10:52:01Z",
    "author_association": "MEMBER",
    "body": "Speaking of splitting the config file. I think it is not a good idea. If you split options into several different files everything will become messy pretty fast. \r\nHowever you don't want to edit a large file with the genesis state. \r\nAn idea for solution of this was to allow the field `accounts` (or `state`) that contains all the state data for the genesis block to be of two types. \r\n1) if the state is small (like in tests) then it could easily fit into config file\r\n2) if the state is huge, the field `accounts` could contain a path to the file that contains all the state. \r\n\r\na node reads the link with a path to a file that contains huge state and loads up the state data from it. \r\nthus you could have one small config file with all the options for node and a huge state file separated.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/390621196/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/392821795",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-392821795",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 392821795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjgyMTc5NQ==",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-29T15:32:44Z",
    "updated_at": "2018-05-29T15:32:44Z",
    "author_association": "MEMBER",
    "body": "hmm. I wonder, could we abstract  EVM gasPrices to some config file as well. \r\nIt looks like some other parties doing their own implementation of ethereum would like to use our test source files",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/392821795/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/422181267",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-422181267",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 422181267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjE4MTI2Nw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-17T21:41:04Z",
    "updated_at": "2018-09-17T21:41:04Z",
    "author_association": "MEMBER",
    "body": "This should probably be updated to use the *Fancy* names for forks as is being done here:  https://github.com/ethereum/tests/issues/488",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/422181267/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/422564259",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-422564259",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 422564259,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjU2NDI1OQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-18T21:35:28Z",
    "updated_at": "2018-09-18T21:35:28Z",
    "author_association": "MEMBER",
    "body": "@winsvega while working to implement this in trinity I've found the spec to be lacking a bit.  What do you think about adding a JSON-schema definition to this EIP?  I've written one up which can be found in this PR: https://github.com/ethereum/py-evm/pull/1299 though I think there's some necessary discussion on things like required fields and the required formats for data.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/422564259/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/422588360",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-422588360",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 422588360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjU4ODM2MA==",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-18T23:08:29Z",
    "updated_at": "2018-09-18T23:08:29Z",
    "author_association": "MEMBER",
    "body": "We've tried already. Making a complicated hard to read several pages jsob scheme does not help. Could we just formalize fields and its values? Please look",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/422588360/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 1,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/422588687",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-422588687",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 422588687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjU4ODY4Nw==",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-18T23:10:04Z",
    "updated_at": "2018-09-18T23:10:04Z",
    "author_association": "MEMBER",
    "body": "Set chsin params at https://github.com/ethereum/retesteth/wiki/RPC-Methods#test_setchainparams",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/422588687/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/422878583",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-422878583",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 422878583,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjg3ODU4Mw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-19T16:56:43Z",
    "updated_at": "2018-09-19T16:56:43Z",
    "author_association": "MEMBER",
    "body": "> Could we just formalize fields and its values? Please look\r\n\r\nYes, that was my intent with JSON-schema, but I understand that format is not the most accessible.  It sounds like you are thinking about more of a natural language spec which defines the fields, formats, required/optional, etc?  If so, :+1: as I'm indifferent to how it is specified, only that there is a spec with what I think is necessary information:\r\n\r\n- what fields are required\r\n- what each field means\r\n- what formats are allowed (like is the `0x` prefix required/optional?)\r\n- additional validation (like is it invalid to have `homesteadForkBlock < byzantiumForkBlock`?)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/422878583/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/427121433",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-427121433",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 427121433,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzEyMTQzMw==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T18:24:33Z",
    "updated_at": "2018-10-04T18:24:33Z",
    "author_association": "MEMBER",
    "body": "I guess explicitly mention that network ID is not identified in genesis (so the same genesis can be used for different networks), but chainID must be specified if the SpuriousDragon fork (or later) is included.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/427121433/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/440794460",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-440794460",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 440794460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDc5NDQ2MA==",
    "user": {
      "login": "5chdn",
      "id": 15729797,
      "node_id": "MDQ6VXNlcjE1NzI5Nzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/15729797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/5chdn",
      "html_url": "https://github.com/5chdn",
      "followers_url": "https://api.github.com/users/5chdn/followers",
      "following_url": "https://api.github.com/users/5chdn/following{/other_user}",
      "gists_url": "https://api.github.com/users/5chdn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/5chdn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/5chdn/subscriptions",
      "organizations_url": "https://api.github.com/users/5chdn/orgs",
      "repos_url": "https://api.github.com/users/5chdn/repos",
      "events_url": "https://api.github.com/users/5chdn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/5chdn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T20:09:10Z",
    "updated_at": "2018-11-21T20:09:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Now that I have to run so many different clients with different ways approaching this issue, I would say, the ones implementing the Genesis format / EIP-1085 are the most annoying ones. \r\n\r\nI think we should not stop at defining the genesis and forks only but give a complete [network description](https://github.com/ethereum/wiki/wiki/Ethereum-Chain-Spec-Format). This is what [Parity Ethereum is doing](https://wiki.parity.io/Chain-specification). The advantage is, you can simply pass a single file to a client and it runs without any additional need for parameters or descriptors.\r\n\r\nMy main critique is the lack of `networkID` and `bootnodes` support. I don't see why a Genesis should be reusable across different networks. For example, I run the following four commands to launch a Görli testnet node with four different clients:\r\n\r\nParity Ethereum and Nethermind with chain spec:\r\n\r\n```\r\nparity --chain goerli.json\r\n\r\ndotnet run --project Nethermind.Runner --config configs/goerli.cfg\r\n```\r\n\r\nGeth and Pantheon with EIP-1085 Genesis:\r\n\r\n```\r\ngeth init goerli.genesis\r\ngeth --networkid 6284 --bootnodes enode://04fb7acb86f47b64298374b5ccb3c2959f1e5e9362158e50e0793c261518ffe83759d8295ca4a88091d4726d5f85e6276d53ae9ef4f35b8c4c0cc6b99c8c0537@40.70.214.166:40303,enode://17de5580bbc1620081a21f82954731c7854305463630a0d677ed991487609829a6bf1ffcb8fb8ef269eff4829690625db176b498c629b9b13cb39b73b6e7b08b@213.186.16.82:1345,enode://22da3ef3707626a92a32b0527d0846f88228daa0536c62d83c9ac7e96660bc8e4ac70a9aa8f8cedf71b580cd41449ad46c6e5a06ecf138b142f38a9d1b2b856a@85.7.110.224:30303,enode://3897b1a5786948f643d9755df92dc56d0b2284f36730dc198ef371aebf191b24b5cbe8162c2032b09b2f14ba73460bfc3f7d4ef1e26bcc59297d4f235dc5cdc5@54.88.169.219:30303,enode://3d197d65ed92af6d0adf280ce486714fb641ef9f9f38f0bdd5ddd552666fc1132f033eb249a87f7f30086902c131f30f054f872ae80ac83eea6bd3760a7bbce2@40.70.214.166:30405,enode://3d8d6698d2d4d730d896c7c1e3602ff845343f71bacbf8cb614b0e94fcb3b10e1a49ac2a5063c76617182a1c5928a4a63d4be897e54ae1cb858a1b94d0d275b8@188.166.20.30:30303,enode://46add44b9f13965f7b9875ac6b85f016f341012d84f975377573800a863526f4da19ae2c620ec73d11591fa9510e992ecc03ad0751f53cc02f7c7ed6d55c7291@94.237.54.114:30313,enode://5065d5221b507764771a8b74abc69df0351217eae09b96ec0df4275576a8b2bbba9986ce3037e6fb3c933b5b301364e18030c1ada8cec4ae00f1fa4dfff32eb8@13.113.211.0:30303\r\n\r\npantheon --genesis=goerli.genesis --network-id=6284 --bootnodes=enode://04fb7acb86f47b64298374b5ccb3c2959f1e5e9362158e50e0793c261518ffe83759d8295ca4a88091d4726d5f85e6276d53ae9ef4f35b8c4c0cc6b99c8c0537@40.70.214.166:40303,enode://17de5580bbc1620081a21f82954731c7854305463630a0d677ed991487609829a6bf1ffcb8fb8ef269eff4829690625db176b498c629b9b13cb39b73b6e7b08b@213.186.16.82:1345,enode://22da3ef3707626a92a32b0527d0846f88228daa0536c62d83c9ac7e96660bc8e4ac70a9aa8f8cedf71b580cd41449ad46c6e5a06ecf138b142f38a9d1b2b856a@85.7.110.224:30303,enode://3897b1a5786948f643d9755df92dc56d0b2284f36730dc198ef371aebf191b24b5cbe8162c2032b09b2f14ba73460bfc3f7d4ef1e26bcc59297d4f235dc5cdc5@54.88.169.219:30303,enode://3d197d65ed92af6d0adf280ce486714fb641ef9f9f38f0bdd5ddd552666fc1132f033eb249a87f7f30086902c131f30f054f872ae80ac83eea6bd3760a7bbce2@40.70.214.166:30405,enode://3d8d6698d2d4d730d896c7c1e3602ff845343f71bacbf8cb614b0e94fcb3b10e1a49ac2a5063c76617182a1c5928a4a63d4be897e54ae1cb858a1b94d0d275b8@188.166.20.30:30303,enode://46add44b9f13965f7b9875ac6b85f016f341012d84f975377573800a863526f4da19ae2c620ec73d11591fa9510e992ecc03ad0751f53cc02f7c7ed6d55c7291@94.237.54.114:30313,enode://5065d5221b507764771a8b74abc69df0351217eae09b96ec0df4275576a8b2bbba9986ce3037e6fb3c933b5b301364e18030c1ada8cec4ae00f1fa4dfff32eb8@13.113.211.0:30303\r\n```\r\n\r\nNote the scrollbar. When I talk with client implementers I encourage them to use chain specs rather than genesis files. /cc @cburgdorf @ajsutton \r\n\r\nHappy to draft an additional ERC for that, however, meanwhile what about networkID and bootnodes support?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/440794460/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/440805041",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-440805041",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 440805041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDgwNTA0MQ==",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T20:52:58Z",
    "updated_at": "2018-11-21T20:52:58Z",
    "author_association": "MEMBER",
    "body": "`networkID` and `bootnodes` could be supported. \r\nwhat are the other issues? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/440805041/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/440824114",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-440824114",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 440824114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDgyNDExNA==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T22:00:45Z",
    "updated_at": "2018-11-21T22:00:45Z",
    "author_association": "MEMBER",
    "body": "> Happy to draft an additional ERC for that\r\n\r\nI hope you do @5chdn! It's pretty compelling to be able to launch the client with only the chain spec file.\r\n\r\nIt seems that chain spec is a proper subset of the genesis file spec, which is a nice property: implementing chain spec means that you necessarily support genesis files, too.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/440824114/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/440843568",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-440843568",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 440843568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDg0MzU2OA==",
    "user": {
      "login": "FrankSzendzielarz",
      "id": 33515470,
      "node_id": "MDQ6VXNlcjMzNTE1NDcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/33515470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FrankSzendzielarz",
      "html_url": "https://github.com/FrankSzendzielarz",
      "followers_url": "https://api.github.com/users/FrankSzendzielarz/followers",
      "following_url": "https://api.github.com/users/FrankSzendzielarz/following{/other_user}",
      "gists_url": "https://api.github.com/users/FrankSzendzielarz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FrankSzendzielarz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FrankSzendzielarz/subscriptions",
      "organizations_url": "https://api.github.com/users/FrankSzendzielarz/orgs",
      "repos_url": "https://api.github.com/users/FrankSzendzielarz/repos",
      "events_url": "https://api.github.com/users/FrankSzendzielarz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FrankSzendzielarz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T23:10:22Z",
    "updated_at": "2018-11-21T23:10:41Z",
    "author_association": "MEMBER",
    "body": "I only became aware of this EIP just a moment ago and I was thinking about this topic today. The Hive updates now allow simulations to run multiple flavours of client at once, and I am now in the process of adding Trinity, Nethermind, Harmony,, into the available clients. Simulators now determine which clients should be invoked, rather than letting the Hive engine specify. In this case, the Simulators can now also specify which concrete configuration/genesis each client instance can use. The current Hive code places the responsibility of parsing the genesis.json (supplied by the engine) onto some fairly fragile shell scripts in the client container entrypoints. I want to get rid of all that. So until I noticed the convo on AllCoreDevs and here, I was about to go the route of having the Simulator instantiate the client with a client specific config that the Sim supplies. Based on this new info here, I think the best route instead would be for me to have Hive accept a common format and then implement the conversions there, so the Simulators can be agnostic about Client launch details.  \r\nHive will expose some kind of common API in that case anyway, allowing Simulator authors to launch Clients and hopefully not worry too much about how the Client is sparked up. I will implement the conversions where possible. Perhaps whether or not a common format is agreed upon, the conversion tools could become a useful component, or there may be other synergies.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/440843568/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/440855854",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-440855854",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 440855854,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDg1NTg1NA==",
    "user": {
      "login": "ajsutton",
      "id": 72675,
      "node_id": "MDQ6VXNlcjcyNjc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsutton",
      "html_url": "https://github.com/ajsutton",
      "followers_url": "https://api.github.com/users/ajsutton/followers",
      "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsutton/orgs",
      "repos_url": "https://api.github.com/users/ajsutton/repos",
      "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsutton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-22T00:01:58Z",
    "updated_at": "2018-11-22T00:01:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Supporting `networkId` and `bootnodes` in the genesis config makes a lot of sense to me.  In Pantheon a predefined network is essentially a tuple of genesis, networkId and bootnodes which has been enough to describe MainNet, Rinkeby, Ropsten and Goerli.\r\n\r\nChain spec also looks quite good, the only concern I have is that it enables significantly more customisation in a couple of areas which I suspect wouldn't be supported by a number of clients (such as defining precompiles in the chain spec file). It could be trimmed it down to the configurable options that are widely supported and/or required by major networks, or for some things maybe it's a reasonable lever to make them more configurable (e.g. some of the ethash params seem sensible to make configurable).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/440855854/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/440856816",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-440856816",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 440856816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDg1NjgxNg==",
    "user": {
      "login": "ajsutton",
      "id": 72675,
      "node_id": "MDQ6VXNlcjcyNjc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsutton",
      "html_url": "https://github.com/ajsutton",
      "followers_url": "https://api.github.com/users/ajsutton/followers",
      "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsutton/orgs",
      "repos_url": "https://api.github.com/users/ajsutton/repos",
      "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsutton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-22T00:05:09Z",
    "updated_at": "2018-11-22T00:05:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "One other consideration is what the default values should be for things that aren't specified in the config and/or which fields are strictly required. That's important for cross-client compatibility but also for upgradability as new fields are added as part of future hard forks.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/440856816/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/440876865",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-440876865",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 440876865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDg3Njg2NQ==",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-22T01:12:04Z",
    "updated_at": "2018-11-22T01:12:04Z",
    "author_association": "MEMBER",
    "body": "The common genesis format should be as a yellowpaper rule for all clients to implement. Writing scripts that convert one format to another for specific client is not a good design.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/440876865/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/440940851",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-440940851",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 440940851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDk0MDg1MQ==",
    "user": {
      "login": "FrankSzendzielarz",
      "id": 33515470,
      "node_id": "MDQ6VXNlcjMzNTE1NDcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/33515470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FrankSzendzielarz",
      "html_url": "https://github.com/FrankSzendzielarz",
      "followers_url": "https://api.github.com/users/FrankSzendzielarz/followers",
      "following_url": "https://api.github.com/users/FrankSzendzielarz/following{/other_user}",
      "gists_url": "https://api.github.com/users/FrankSzendzielarz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FrankSzendzielarz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FrankSzendzielarz/subscriptions",
      "organizations_url": "https://api.github.com/users/FrankSzendzielarz/orgs",
      "repos_url": "https://api.github.com/users/FrankSzendzielarz/repos",
      "events_url": "https://api.github.com/users/FrankSzendzielarz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FrankSzendzielarz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-22T07:45:47Z",
    "updated_at": "2018-11-22T07:45:47Z",
    "author_association": "MEMBER",
    "body": "@winsvega That is true. Hive, however, needs to support scenarios like starting simulations involving different versions of client concurrently, including those prior to a commonly agreed format, and even when different versions of the later common format exist.  A common format however would make the implementation of those requirements a lot simpler. In the meantime, the code from Hive (when implemented) could serve as a config/genesis generator for whomever (eventually)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/440940851/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/441124442",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-441124442",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 441124442,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTEyNDQ0Mg==",
    "user": {
      "login": "ajsutton",
      "id": 72675,
      "node_id": "MDQ6VXNlcjcyNjc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsutton",
      "html_url": "https://github.com/ajsutton",
      "followers_url": "https://api.github.com/users/ajsutton/followers",
      "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsutton/orgs",
      "repos_url": "https://api.github.com/users/ajsutton/repos",
      "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsutton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-22T21:47:33Z",
    "updated_at": "2018-11-22T21:47:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "With `\"miningMethod\" : \"NoProof\",` defining the consensus algorithm\r\n\r\n 1. Would it be clearer to actually call this `consensusAlgorithm` since PoA schemes like Clique technically don't mine blocks but seal them? Mining is commonly used for those anyway so not a big deal.\r\n 2. Where would options for the consensus algorithm go? For example block period and epoch length in clique or IBFT?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/441124442/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/441344504",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-441344504",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 441344504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTM0NDUwNA==",
    "user": {
      "login": "holgerd77",
      "id": 931137,
      "node_id": "MDQ6VXNlcjkzMTEzNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/931137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holgerd77",
      "html_url": "https://github.com/holgerd77",
      "followers_url": "https://api.github.com/users/holgerd77/followers",
      "following_url": "https://api.github.com/users/holgerd77/following{/other_user}",
      "gists_url": "https://api.github.com/users/holgerd77/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holgerd77/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holgerd77/subscriptions",
      "organizations_url": "https://api.github.com/users/holgerd77/orgs",
      "repos_url": "https://api.github.com/users/holgerd77/repos",
      "events_url": "https://api.github.com/users/holgerd77/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holgerd77/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-24T05:15:26Z",
    "updated_at": "2018-11-24T05:16:29Z",
    "author_association": "MEMBER",
    "body": "We lately have introduced a new https://github.com/ethereumjs/ethereumjs-common library - providing generic access to network and hardfork params - where a lot of design thinking has been put in, it might be worth to take some inspiration for some structures. On the other way we are also ready to rework if things are suboptimal, over- or under-engineered.\r\n\r\nJust as a first note, have no time right now to go into more detail but will join the discussion during the next days.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/441344504/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/441345289",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-441345289",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 441345289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTM0NTI4OQ==",
    "user": {
      "login": "holgerd77",
      "id": 931137,
      "node_id": "MDQ6VXNlcjkzMTEzNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/931137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holgerd77",
      "html_url": "https://github.com/holgerd77",
      "followers_url": "https://api.github.com/users/holgerd77/followers",
      "following_url": "https://api.github.com/users/holgerd77/following{/other_user}",
      "gists_url": "https://api.github.com/users/holgerd77/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holgerd77/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holgerd77/subscriptions",
      "organizations_url": "https://api.github.com/users/holgerd77/orgs",
      "repos_url": "https://api.github.com/users/holgerd77/repos",
      "events_url": "https://api.github.com/users/holgerd77/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holgerd77/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-24T05:37:58Z",
    "updated_at": "2018-11-24T05:37:58Z",
    "author_association": "MEMBER",
    "body": "Have opened an issue https://github.com/ethereumjs/ethereumjs-common/issues/30 on genesis format changes, if you have a first look on our library and stumble over things which you think we should definitely change, feel free to post there.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/441345289/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/443716766",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-443716766",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 443716766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzcxNjc2Ng==",
    "user": {
      "login": "holgerd77",
      "id": 931137,
      "node_id": "MDQ6VXNlcjkzMTEzNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/931137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holgerd77",
      "html_url": "https://github.com/holgerd77",
      "followers_url": "https://api.github.com/users/holgerd77/followers",
      "following_url": "https://api.github.com/users/holgerd77/following{/other_user}",
      "gists_url": "https://api.github.com/users/holgerd77/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holgerd77/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holgerd77/subscriptions",
      "organizations_url": "https://api.github.com/users/holgerd77/orgs",
      "repos_url": "https://api.github.com/users/holgerd77/repos",
      "events_url": "https://api.github.com/users/holgerd77/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holgerd77/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-03T13:52:14Z",
    "updated_at": "2018-12-03T13:52:14Z",
    "author_association": "MEMBER",
    "body": "Sorry, due to personal reasons I am delayed on this, still plan to jump in though and give some thought.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/443716766/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/468444528",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-468444528",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 468444528,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODQ0NDUyOA==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-28T21:25:50Z",
    "updated_at": "2019-02-28T21:29:31Z",
    "author_association": "MEMBER",
    "body": "Is there a standardized name for the new constantinople fork yet?  We picked `petersburgForkBlock` in trinity, but it's easy to change (for now).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/468444528/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/468445049",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-468445049",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 468445049,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODQ0NTA0OQ==",
    "user": {
      "login": "ajsutton",
      "id": 72675,
      "node_id": "MDQ6VXNlcjcyNjc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsutton",
      "html_url": "https://github.com/ajsutton",
      "followers_url": "https://api.github.com/users/ajsutton/followers",
      "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsutton/orgs",
      "repos_url": "https://api.github.com/users/ajsutton/repos",
      "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsutton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-28T21:27:21Z",
    "updated_at": "2019-02-28T21:27:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Pantheon picked constantinopleFix which I believe matches what the reference tests are using.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/468445049/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/468445729",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-468445729",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 468445729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODQ0NTcyOQ==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-28T21:29:24Z",
    "updated_at": "2019-02-28T21:29:24Z",
    "author_association": "MEMBER",
    "body": "So your genesis key name is `constantinopleFixForkBlock`?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/468445729/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/468446807",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-468446807",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 468446807,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODQ0NjgwNw==",
    "user": {
      "login": "ajsutton",
      "id": 72675,
      "node_id": "MDQ6VXNlcjcyNjc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsutton",
      "html_url": "https://github.com/ajsutton",
      "followers_url": "https://api.github.com/users/ajsutton/followers",
      "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsutton/orgs",
      "repos_url": "https://api.github.com/users/ajsutton/repos",
      "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsutton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-28T21:32:27Z",
    "updated_at": "2019-02-28T21:32:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "`constantinopleFixBlock`. e.g.\r\n```\r\n    \"homesteadBlock\": 1150000,\r\n    \"daoForkBlock\": 1920000,\r\n    \"daoForkSupport\": true,\r\n    \"eip150Block\": 2463000,\r\n    \"eip150Hash\": \"0x2086799aeebeae135c246c65021c82b4e15a2c451340993aacfd2751886514f0\",\r\n    \"eip155Block\": 2675000,\r\n    \"eip158Block\": 2675000,\r\n    \"byzantiumBlock\": 4370000,\r\n    \"constantinopleBlock\": 7280000,\r\n    \"constantinopleFixBlock\": 7280000,\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/468446807/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/468448435",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-468448435",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 468448435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODQ0ODQzNQ==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-28T21:37:33Z",
    "updated_at": "2019-02-28T21:37:44Z",
    "author_association": "MEMBER",
    "body": "Interesting, that's definitely something this EIP would have to get consensus on. All of the key names in trinity (and in the issue summary above) include `Fork`, eg: https://github.com/ethereum/trinity/blob/master/trinity/assets/eip1085.schema.json#L70\r\n\r\nWould be good to check what other major clients are doing too. But for now, I have to go push a trinity release.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/468448435/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986398077",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-986398077",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 986398077,
    "node_id": "IC_kwDOAq426M46yz19",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-06T03:11:51Z",
    "updated_at": "2021-12-06T03:11:51Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986398077/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997555267",
    "html_url": "https://github.com/ethereum/EIPs/issues/1085#issuecomment-997555267",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1085",
    "id": 997555267,
    "node_id": "IC_kwDOAq426M47dXxD",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-20T03:12:00Z",
    "updated_at": "2021-12-20T03:12:00Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997555267/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
