{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/67/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/67/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/67/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/67",
  "id": 134276078,
  "node_id": "MDU6SXNzdWUxMzQyNzYwNzg=",
  "number": 67,
  "title": "ERC: Standard URI scheme with metadata, value and byte code ",
  "user": {
    "login": "alexvandesande",
    "id": 112898,
    "node_id": "MDQ6VXNlcjExMjg5OA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/112898?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alexvandesande",
    "html_url": "https://github.com/alexvandesande",
    "followers_url": "https://api.github.com/users/alexvandesande/followers",
    "following_url": "https://api.github.com/users/alexvandesande/following{/other_user}",
    "gists_url": "https://api.github.com/users/alexvandesande/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alexvandesande/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alexvandesande/subscriptions",
    "organizations_url": "https://api.github.com/users/alexvandesande/orgs",
    "repos_url": "https://api.github.com/users/alexvandesande/repos",
    "events_url": "https://api.github.com/users/alexvandesande/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alexvandesande/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 92,
  "created_at": "2016-02-17T13:12:35Z",
  "updated_at": "2019-12-15T12:01:54Z",
  "closed_at": "2018-02-16T12:46:10Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "This proposal is inspired by [BIP 21](https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki) and could apply to [IBAN address format](https://github.com/ethereum/wiki/wiki/ICAP:-Inter-exchange-Client-Address-Protocol) but can be extended to other proposed addresses formats. Imagine these scenarios:\r\n- An exchange or a instant converter like shape shift wants to create a single ethereum address for payments that will be converted into credit in their internal system or output bitcoin to an address\r\n- A store wants to show a QR code to a client that will pop up a payment for exactly 12.34 ethers, which contains metadata on the product being bought\r\n- A betting site wants to provide a link that the user can click on his site and it will open a default ethereum wallet and and execute a specific contract with given parameters\r\n- A dapp in Mist wants so simply ask the user to sign a transaction with a specific abi in a single call\r\n\r\nIn all these scenarios, the provider wants to set up internally a transaction, with a recipient, an associated number of ethers (or none) and optional byte code, all without requiring any fuss from the end user that is expected simply to choose a sender and authorise the transaction. \r\n\r\nCurrently implementations for this are wonky: shape shift creates tons of temporary addresses and uses an internal system to check which one correspond to which metadata, there isn't any standard way for stores that want payment in ether to put specific metadata about price on the call and any app implementing contracts will have to use different solutions depending on the client they are targeting.\r\n\r\nI propose adding, beyond address, also optional byte code and value to any proposed address standard. Of course this would make the link longer, but it should not be something visible to the user, instead it should be shown as a visual code (QR or otherwise), a link or some other way to pass the information.\r\n\r\nIf properly implemented in all wallets, this should make execution of contracts directly from wallets much simpler as the wallet client only needs to put the byte code by reading the qr code.\r\n\r\nIf we follow the bitcoin standard, the result would be:\r\n\r\n```\r\n ethereum:<address>[?value=<value>][?gas=<suggestedGas>][?data=<bytecode>]\r\n```\r\n\r\nOther data could be added, but ideally the client should take them from elsewhere in the blockchain, so instead of having a `label` or a `message` to be displayed to the users, these should be read from an identity system or metadata on the transaction itself.\r\n#### Example:\r\n\r\nClicking this link would open a transaction that would try to send _5 unicorns_ to address _deadbeef_. The user would then simply to approve, based on each wallet UI.\r\n\r\n```\r\n ethereum:0x89205A3A3b2A69De6Dbf7f01ED13B2108B2c43e7?gas=100000&data=0xa9059cbb00000000000000000000000000000000000000000000000000000000deadbeef0000000000000000000000000000000000000000000000000000000000000005\r\n```\r\n### Without byte code\r\n\r\nAlternatively, the byte code could be generated by the client and the request would be in plain text:\r\n\r\n```\r\n ethereum:<address>[?value=<value>][?gas=<suggestedGas>][?function=nameOfFunction(param)]\r\n```\r\n#### Example:\r\n\r\nThis is the same function as above, to send 5 unicorns from he sender to _deadbeef_, but now with a more readable function, which the client converts to byte code.\r\n\r\n```\r\n ethereum:0x89205A3A3b2A69De6Dbf7f01ED13B2108B2c43e7?gas=100000&function=transfer(address 0xdeadbeef, uint 5)\r\n```\r\n",
  "closed_by": {
    "login": "alexvandesande",
    "id": 112898,
    "node_id": "MDQ6VXNlcjExMjg5OA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/112898?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alexvandesande",
    "html_url": "https://github.com/alexvandesande",
    "followers_url": "https://api.github.com/users/alexvandesande/followers",
    "following_url": "https://api.github.com/users/alexvandesande/following{/other_user}",
    "gists_url": "https://api.github.com/users/alexvandesande/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alexvandesande/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alexvandesande/subscriptions",
    "organizations_url": "https://api.github.com/users/alexvandesande/orgs",
    "repos_url": "https://api.github.com/users/alexvandesande/repos",
    "events_url": "https://api.github.com/users/alexvandesande/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alexvandesande/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/67/reactions",
    "total_count": 34,
    "+1": 29,
    "-1": 0,
    "laugh": 0,
    "hooray": 5,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/67/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/185202653",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-185202653",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 185202653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NTIwMjY1Mw==",
    "user": {
      "login": "Gustav-Simonsson",
      "id": 293096,
      "node_id": "MDQ6VXNlcjI5MzA5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/293096?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gustav-Simonsson",
      "html_url": "https://github.com/Gustav-Simonsson",
      "followers_url": "https://api.github.com/users/Gustav-Simonsson/followers",
      "following_url": "https://api.github.com/users/Gustav-Simonsson/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gustav-Simonsson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gustav-Simonsson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gustav-Simonsson/subscriptions",
      "organizations_url": "https://api.github.com/users/Gustav-Simonsson/orgs",
      "repos_url": "https://api.github.com/users/Gustav-Simonsson/repos",
      "events_url": "https://api.github.com/users/Gustav-Simonsson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gustav-Simonsson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-17T13:21:24Z",
    "updated_at": "2016-02-17T13:21:24Z",
    "author_association": "NONE",
    "body": "Sounds similar to https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/185202653/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/185202890",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-185202890",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 185202890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NTIwMjg5MA==",
    "user": {
      "login": "alexvandesande",
      "id": 112898,
      "node_id": "MDQ6VXNlcjExMjg5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/112898?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexvandesande",
      "html_url": "https://github.com/alexvandesande",
      "followers_url": "https://api.github.com/users/alexvandesande/followers",
      "following_url": "https://api.github.com/users/alexvandesande/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexvandesande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexvandesande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexvandesande/subscriptions",
      "organizations_url": "https://api.github.com/users/alexvandesande/orgs",
      "repos_url": "https://api.github.com/users/alexvandesande/repos",
      "events_url": "https://api.github.com/users/alexvandesande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexvandesande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-17T13:22:29Z",
    "updated_at": "2016-02-17T13:22:29Z",
    "author_association": "NONE",
    "body": "Thanks @Gustav-Simonsson , I added the reference to the main text and modified the title to reflect that!\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/185202890/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/185278492",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-185278492",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 185278492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NTI3ODQ5Mg==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-17T16:15:20Z",
    "updated_at": "2016-02-17T21:20:03Z",
    "author_association": "MEMBER",
    "body": "Why call the `data` field `bytecode`? It is less likely to be bytecode in such a transaction (although it could be), more likely to be arguments to a method.\n\nPerhaps `suggestedgas` / `mingas` could be a useful optional field in that case.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/185278492/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/185389934",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-185389934",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 185389934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NTM4OTkzNA==",
    "user": {
      "login": "alexvandesande",
      "id": 112898,
      "node_id": "MDQ6VXNlcjExMjg5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/112898?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexvandesande",
      "html_url": "https://github.com/alexvandesande",
      "followers_url": "https://api.github.com/users/alexvandesande/followers",
      "following_url": "https://api.github.com/users/alexvandesande/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexvandesande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexvandesande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexvandesande/subscriptions",
      "organizations_url": "https://api.github.com/users/alexvandesande/orgs",
      "repos_url": "https://api.github.com/users/alexvandesande/repos",
      "events_url": "https://api.github.com/users/alexvandesande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexvandesande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-17T20:29:06Z",
    "updated_at": "2016-02-17T20:29:06Z",
    "author_association": "NONE",
    "body": "I just don't want to call the variable `data`. All variables hold data, it's as specific as calling it `stuff`.. ;-)\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/185389934/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/185410174",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-185410174",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 185410174,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NTQxMDE3NA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-17T21:21:04Z",
    "updated_at": "2016-02-18T16:26:18Z",
    "author_association": "MEMBER",
    "body": "@alexvandesande lets call it `stuff` or `things` :)\n\n`data` might sound generic, yet that is how it is called in every interface. I just don't think `bytecode` is a good choice. Any other ideas? How about `command`/`commands`/`cmd`/`arguments`/`args`?\n\nMy reasoning is it only asks as (EVM) bytecode when deploying a contract, in every other scenario it cannot be bytecode as far as I know.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/185410174/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/186816058",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-186816058",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 186816058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjgxNjA1OA==",
    "user": {
      "login": "ethernomad",
      "id": 161566,
      "node_id": "MDQ6VXNlcjE2MTU2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/161566?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ethernomad",
      "html_url": "https://github.com/ethernomad",
      "followers_url": "https://api.github.com/users/ethernomad/followers",
      "following_url": "https://api.github.com/users/ethernomad/following{/other_user}",
      "gists_url": "https://api.github.com/users/ethernomad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ethernomad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ethernomad/subscriptions",
      "organizations_url": "https://api.github.com/users/ethernomad/orgs",
      "repos_url": "https://api.github.com/users/ethernomad/repos",
      "events_url": "https://api.github.com/users/ethernomad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ethernomad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-21T12:34:01Z",
    "updated_at": "2016-02-21T12:34:01Z",
    "author_association": "NONE",
    "body": "In the JavaScript API the parameter is called `data`. Probably best just stick with that.\n\nHow should the data field be encoded? In base64 like https://en.wikipedia.org/wiki/Data_URI_scheme ?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/186816058/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/191921298",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-191921298",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 191921298,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTkyMTI5OA==",
    "user": {
      "login": "Smithgift",
      "id": 10504499,
      "node_id": "MDQ6VXNlcjEwNTA0NDk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/10504499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Smithgift",
      "html_url": "https://github.com/Smithgift",
      "followers_url": "https://api.github.com/users/Smithgift/followers",
      "following_url": "https://api.github.com/users/Smithgift/following{/other_user}",
      "gists_url": "https://api.github.com/users/Smithgift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Smithgift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Smithgift/subscriptions",
      "organizations_url": "https://api.github.com/users/Smithgift/orgs",
      "repos_url": "https://api.github.com/users/Smithgift/repos",
      "events_url": "https://api.github.com/users/Smithgift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Smithgift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-03T19:15:13Z",
    "updated_at": "2016-03-03T19:15:13Z",
    "author_association": "NONE",
    "body": "Two wei: I think we should use hexidecimal for these URIs if possible. Everywhere else we use hex, and it'll be easier to convert to and back. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/191921298/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194861651",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-194861651",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 194861651,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDg2MTY1MQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T14:10:31Z",
    "updated_at": "2016-03-10T14:10:31Z",
    "author_association": "MEMBER",
    "body": "@Smithgift I'm all for the hexadecimal representation.\n\nThe above proposal uses the ICAP as the address. Would it make sense defining support multiple address formats? ICAP, address (incl. checksummed), etc?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/194861651/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/205219878",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-205219878",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 205219878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTIxOTg3OA==",
    "user": {
      "login": "killerstorm",
      "id": 232745,
      "node_id": "MDQ6VXNlcjIzMjc0NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232745?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/killerstorm",
      "html_url": "https://github.com/killerstorm",
      "followers_url": "https://api.github.com/users/killerstorm/followers",
      "following_url": "https://api.github.com/users/killerstorm/following{/other_user}",
      "gists_url": "https://api.github.com/users/killerstorm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/killerstorm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/killerstorm/subscriptions",
      "organizations_url": "https://api.github.com/users/killerstorm/orgs",
      "repos_url": "https://api.github.com/users/killerstorm/repos",
      "events_url": "https://api.github.com/users/killerstorm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/killerstorm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-04T09:52:43Z",
    "updated_at": "2016-04-04T09:52:43Z",
    "author_association": "NONE",
    "body": "Have you considered security implications of URIs with byte code?\n\nUsing an URI with a data field is akin to signing a message written by another party: you should either trust that party, or verify the message yourself.\n\nOtherwise this can be used for CSRF-style attacks. E.g. suppose that you want to buy a donut, you get an URI from the merchant, check that value is reasonable and submit it.\n\nBut this transaction will steal your gold/shares/house, as it might encode an instruction to send your assets to someone else.\n\nOne way to address this is to segregate different assets into different addresses. If you use an address which only holds ether, nothing can be stolen. But this cannot be enforced by a wallet as a wallet might be unaware of a \"special powers\" an address might have.\n\nE.g perhaps an address doesn't hold any assets, but is associated with your identity, which will give a third party to sign a petition on your behalf.\n\nThe only way to address this is to transfer funds to a fresh address first, which sounds kinda inefficient (now you need two transactions).\n\nOther way to address this is to enable 'data' payments only to known whitelisted addresses which wallet can understand.\n\nIn principle it might be enough to display 'the meaning' of addresses which are known to the wallet. E.g. user wants to buy a donut, gets URI from a merchant and observes that it wants to do something with a gold contract. Understanding that buying a donut shouldn't in any way involve gold, user will cancel a transaction. Ideally if contract is recognized it should parse data and display details of the call being made.\n\nBut in this case there is a risk that a keypair is shared between several different wallets, and while wallet A knows that address X is a gold contract, wallet B doesn't, so it will happily sign a gold-stealing transaction thinking it's something new and harmless.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/205219878/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/205285189",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-205285189",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 205285189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTI4NTE4OQ==",
    "user": {
      "login": "ShockiTV",
      "id": 9205101,
      "node_id": "MDQ6VXNlcjkyMDUxMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9205101?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ShockiTV",
      "html_url": "https://github.com/ShockiTV",
      "followers_url": "https://api.github.com/users/ShockiTV/followers",
      "following_url": "https://api.github.com/users/ShockiTV/following{/other_user}",
      "gists_url": "https://api.github.com/users/ShockiTV/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ShockiTV/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ShockiTV/subscriptions",
      "organizations_url": "https://api.github.com/users/ShockiTV/orgs",
      "repos_url": "https://api.github.com/users/ShockiTV/repos",
      "events_url": "https://api.github.com/users/ShockiTV/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ShockiTV/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-04T12:56:17Z",
    "updated_at": "2016-04-04T12:56:17Z",
    "author_association": "NONE",
    "body": "I dont get what has 'data' with stealing anything from your account. You specify value and gas and it can play with just these on receiving end.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/205285189/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/205287284",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-205287284",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 205287284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTI4NzI4NA==",
    "user": {
      "login": "killerstorm",
      "id": 232745,
      "node_id": "MDQ6VXNlcjIzMjc0NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232745?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/killerstorm",
      "html_url": "https://github.com/killerstorm",
      "followers_url": "https://api.github.com/users/killerstorm/followers",
      "following_url": "https://api.github.com/users/killerstorm/following{/other_user}",
      "gists_url": "https://api.github.com/users/killerstorm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/killerstorm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/killerstorm/subscriptions",
      "organizations_url": "https://api.github.com/users/killerstorm/orgs",
      "repos_url": "https://api.github.com/users/killerstorm/repos",
      "events_url": "https://api.github.com/users/killerstorm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/killerstorm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-04T13:02:12Z",
    "updated_at": "2016-04-04T13:02:12Z",
    "author_association": "NONE",
    "body": "Data can specify instructions to transfer assets held using smart contracts. value is irrelevant here. Perhaps you should read more on CSRF, confused deputy attack, how Ethereum works etc.\n\nIt's basically like signing a document prepared by someone else without reading it: it can do arbitrary nasty things.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/205287284/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/205619750",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-205619750",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 205619750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTYxOTc1MA==",
    "user": {
      "login": "edmundedgar",
      "id": 75964,
      "node_id": "MDQ6VXNlcjc1OTY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/75964?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/edmundedgar",
      "html_url": "https://github.com/edmundedgar",
      "followers_url": "https://api.github.com/users/edmundedgar/followers",
      "following_url": "https://api.github.com/users/edmundedgar/following{/other_user}",
      "gists_url": "https://api.github.com/users/edmundedgar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/edmundedgar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/edmundedgar/subscriptions",
      "organizations_url": "https://api.github.com/users/edmundedgar/orgs",
      "repos_url": "https://api.github.com/users/edmundedgar/repos",
      "events_url": "https://api.github.com/users/edmundedgar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/edmundedgar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-05T02:58:58Z",
    "updated_at": "2016-04-05T02:58:58Z",
    "author_association": "NONE",
    "body": "We did a bit of this on the Reddit thread but I think the issue @killerstorm is talking about is common to any means of sharing the address of a contract, rather than being particular to sharing that address along with parameters. If you're signing what you think is a contract to sign up for a credit card and it's really a contract to give somebody your house, you're going to have a bad day.\n\nBringing parameters along too potentially makes it slightly easier to exploit, because if the \"transfer your house\" signature happened to be along a dotted line marked \"function transferYourHouse()\" that'll give the game away if you have to do some work to specify it, but whatever method we end up with for identifying contracts can't safely rely on everything important having an unambiguous function name.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/205619750/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/206445847",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-206445847",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 206445847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjQ0NTg0Nw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-06T16:13:39Z",
    "updated_at": "2016-04-06T16:13:39Z",
    "author_association": "MEMBER",
    "body": "@killerstorm wouldn't any implementation display all these details and let them be approved by the user before doing anything? Wallets could decide to reject any URL which contains bytecode. Others could display what it does if it's for a known purpose (e.g. it would be easy to parse if it is for calls on the token interface).\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/206445847/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/207348229",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-207348229",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 207348229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzM0ODIyOQ==",
    "user": {
      "login": "killerstorm",
      "id": 232745,
      "node_id": "MDQ6VXNlcjIzMjc0NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232745?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/killerstorm",
      "html_url": "https://github.com/killerstorm",
      "followers_url": "https://api.github.com/users/killerstorm/followers",
      "following_url": "https://api.github.com/users/killerstorm/following{/other_user}",
      "gists_url": "https://api.github.com/users/killerstorm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/killerstorm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/killerstorm/subscriptions",
      "organizations_url": "https://api.github.com/users/killerstorm/orgs",
      "repos_url": "https://api.github.com/users/killerstorm/repos",
      "events_url": "https://api.github.com/users/killerstorm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/killerstorm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-08T09:31:40Z",
    "updated_at": "2016-04-08T09:31:40Z",
    "author_association": "NONE",
    "body": "@axic EIP specification should cover wallet's behavior. You can't just leave it up to wallet implementors to decide. Some of them might be not aware of security concerns.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/207348229/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214069566",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-214069566",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 214069566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDA2OTU2Ng==",
    "user": {
      "login": "alexvandesande",
      "id": 112898,
      "node_id": "MDQ6VXNlcjExMjg5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/112898?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexvandesande",
      "html_url": "https://github.com/alexvandesande",
      "followers_url": "https://api.github.com/users/alexvandesande/followers",
      "following_url": "https://api.github.com/users/alexvandesande/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexvandesande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexvandesande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexvandesande/subscriptions",
      "organizations_url": "https://api.github.com/users/alexvandesande/orgs",
      "repos_url": "https://api.github.com/users/alexvandesande/repos",
      "events_url": "https://api.github.com/users/alexvandesande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexvandesande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-25T00:07:51Z",
    "updated_at": "2016-04-25T00:07:51Z",
    "author_association": "NONE",
    "body": "I don't think this issue is at all related to the uri scheme or bytecode but it's a general problem to any Ethereum client that works with dapps: it has to, as much as it can, display information about what the contract you are about to execute does. \n\nThere are many ways of doing those that wel be exploring on the wallet, and I hope the community comes with many others:\n- reverse engineering the bytecode to match known fiction formats and show either you are calling a \"donutstore.buyDonut()\" or \"gold.transfer()\"\n- simulate the transaction in the front end and see if it results in transfer of tokens or other common use cases \n- add a web of trust so that the user can check if a given contract has been audited by someone they trust \n- add prediction markets to predict future behavior of that particular contract \n\nAll these apply either we are talking about a transaction has been initiated by a js call in a dapp, a link or a qrcode.\n\n> On Apr 5, 2016, at 10:59, Edmund Edgar notifications@github.com wrote:\n> \n> We did a bit of this on the Reddit thread but I think the issue @killerstorm is talking about is common to any means of sharing the address of a contract, rather than being particular to sharing that address along with parameters. If you're signing what you think is a contract to sign up for a credit card and it's really a contract to give somebody your house, you're going to have a bad day.\n> \n> Bringing parameters along too potentially makes it slightly easier to exploit, because if the \"transfer your house\" signature happened to be along a dotted line marked \"function transferYourHouse()\" that'll give the game away if you have to do some work to specify it, but whatever method we end up with for identifying contracts can't safely rely on everything important having an unambiguous function name.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214069566/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214575268",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-214575268",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 214575268,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDU3NTI2OA==",
    "user": {
      "login": "niran",
      "id": 106437,
      "node_id": "MDQ6VXNlcjEwNjQzNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/106437?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/niran",
      "html_url": "https://github.com/niran",
      "followers_url": "https://api.github.com/users/niran/followers",
      "following_url": "https://api.github.com/users/niran/following{/other_user}",
      "gists_url": "https://api.github.com/users/niran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/niran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/niran/subscriptions",
      "organizations_url": "https://api.github.com/users/niran/orgs",
      "repos_url": "https://api.github.com/users/niran/repos",
      "events_url": "https://api.github.com/users/niran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/niran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-26T00:54:01Z",
    "updated_at": "2016-04-26T00:54:01Z",
    "author_association": "NONE",
    "body": "We probably need to add a way for apps to suggest a sending address with a `from` parameter. Authenticators that handle multiple accounts need a way to know which account was active in the app that generated the URL.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214575268/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214578039",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-214578039",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 214578039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDU3ODAzOQ==",
    "user": {
      "login": "alexvandesande",
      "id": 112898,
      "node_id": "MDQ6VXNlcjExMjg5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/112898?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexvandesande",
      "html_url": "https://github.com/alexvandesande",
      "followers_url": "https://api.github.com/users/alexvandesande/followers",
      "following_url": "https://api.github.com/users/alexvandesande/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexvandesande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexvandesande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexvandesande/subscriptions",
      "organizations_url": "https://api.github.com/users/alexvandesande/orgs",
      "repos_url": "https://api.github.com/users/alexvandesande/repos",
      "events_url": "https://api.github.com/users/alexvandesande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexvandesande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-26T01:11:36Z",
    "updated_at": "2016-04-26T01:11:36Z",
    "author_association": "NONE",
    "body": "But the whole point was that the \"from\" field would be set by the client. But I suppose \"from\" and some custom parameters could be useful \n\n> On Apr 25, 2016, at 21:54, Niran Babalola notifications@github.com wrote:\n> \n> We probably need to add a way for apps to suggest a sending address with a from parameter. Authenticators that handle multiple accounts need a way to know which account was active in the app that generated the URL.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214578039/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214585779",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-214585779",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 214585779,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDU4NTc3OQ==",
    "user": {
      "login": "niran",
      "id": 106437,
      "node_id": "MDQ6VXNlcjEwNjQzNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/106437?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/niran",
      "html_url": "https://github.com/niran",
      "followers_url": "https://api.github.com/users/niran/followers",
      "following_url": "https://api.github.com/users/niran/following{/other_user}",
      "gists_url": "https://api.github.com/users/niran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/niran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/niran/subscriptions",
      "organizations_url": "https://api.github.com/users/niran/orgs",
      "repos_url": "https://api.github.com/users/niran/repos",
      "events_url": "https://api.github.com/users/niran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/niran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-26T02:09:04Z",
    "updated_at": "2016-04-26T02:09:04Z",
    "author_association": "NONE",
    "body": "The client sets all the fields. They're just hints that can be ignored. `from` is particularly useful when keys are managed in a separate process from a running dapp, which will be a common choice for its security benefits. Simple payments don't need `from`, but voting for a DAO proposal needs to be done from the account that holds tokens, which the dapp already knows.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214585779/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214701171",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-214701171",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 214701171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDcwMTE3MQ==",
    "user": {
      "login": "killerstorm",
      "id": 232745,
      "node_id": "MDQ6VXNlcjIzMjc0NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232745?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/killerstorm",
      "html_url": "https://github.com/killerstorm",
      "followers_url": "https://api.github.com/users/killerstorm/followers",
      "following_url": "https://api.github.com/users/killerstorm/following{/other_user}",
      "gists_url": "https://api.github.com/users/killerstorm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/killerstorm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/killerstorm/subscriptions",
      "organizations_url": "https://api.github.com/users/killerstorm/orgs",
      "repos_url": "https://api.github.com/users/killerstorm/repos",
      "events_url": "https://api.github.com/users/killerstorm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/killerstorm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-26T10:52:22Z",
    "updated_at": "2016-04-26T10:52:22Z",
    "author_association": "NONE",
    "body": "@alexvandesande You have been warned about security implications. If people will lose their property because of the way these URIs are handled you will be responsible for that.\n\n@edmundedgar I think normally contracts are structured in such a way that sending ether to that contract without attached data cannot result in unexpected loss (aside from loss of the sent ether which is expected). Thus it's normally safe to sign a simple send transaction as potential risk is well understood and contained.\n\nIn other words, only an insane contract will do something destructive upon receiving ether. However, potential loss will be restricted to the value held within such an insane contract, which is normally zero.\n\nSo yes, adding an ability to attach data has serious security implication. Just because things aren't perfect from security perspectives right now doesn't mean it's OK to create new holes.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214701171/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214720904",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-214720904",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 214720904,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDcyMDkwNA==",
    "user": {
      "login": "alexvandesande",
      "id": 112898,
      "node_id": "MDQ6VXNlcjExMjg5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/112898?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexvandesande",
      "html_url": "https://github.com/alexvandesande",
      "followers_url": "https://api.github.com/users/alexvandesande/followers",
      "following_url": "https://api.github.com/users/alexvandesande/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexvandesande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexvandesande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexvandesande/subscriptions",
      "organizations_url": "https://api.github.com/users/alexvandesande/orgs",
      "repos_url": "https://api.github.com/users/alexvandesande/repos",
      "events_url": "https://api.github.com/users/alexvandesande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexvandesande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-26T12:17:21Z",
    "updated_at": "2016-04-26T12:17:21Z",
    "author_association": "NONE",
    "body": "@killerstorm the security implications you are suggesting also apply to the current model where the site builds a transaction in javascript and the client just confirms it. How is it specific to this EIP?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214720904/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214752321",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-214752321",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 214752321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDc1MjMyMQ==",
    "user": {
      "login": "taoteh1221",
      "id": 1760489,
      "node_id": "MDQ6VXNlcjE3NjA0ODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1760489?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/taoteh1221",
      "html_url": "https://github.com/taoteh1221",
      "followers_url": "https://api.github.com/users/taoteh1221/followers",
      "following_url": "https://api.github.com/users/taoteh1221/following{/other_user}",
      "gists_url": "https://api.github.com/users/taoteh1221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/taoteh1221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/taoteh1221/subscriptions",
      "organizations_url": "https://api.github.com/users/taoteh1221/orgs",
      "repos_url": "https://api.github.com/users/taoteh1221/repos",
      "events_url": "https://api.github.com/users/taoteh1221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/taoteh1221/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-26T13:53:20Z",
    "updated_at": "2016-04-26T13:53:20Z",
    "author_association": "NONE",
    "body": "I agree with @killerstorm that data / bytecode should not be a URI parameter. You'd most likely be patching newly-discovered vulnerabilities on a monthly basis until the end of time...that's a hacker's field day to be able to add executable data to a URI. That's why web2 browsers don't allow it.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214752321/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214753008",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-214753008",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 214753008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDc1MzAwOA==",
    "user": {
      "login": "alexvandesande",
      "id": 112898,
      "node_id": "MDQ6VXNlcjExMjg5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/112898?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexvandesande",
      "html_url": "https://github.com/alexvandesande",
      "followers_url": "https://api.github.com/users/alexvandesande/followers",
      "following_url": "https://api.github.com/users/alexvandesande/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexvandesande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexvandesande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexvandesande/subscriptions",
      "organizations_url": "https://api.github.com/users/alexvandesande/orgs",
      "repos_url": "https://api.github.com/users/alexvandesande/repos",
      "events_url": "https://api.github.com/users/alexvandesande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexvandesande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-26T13:55:39Z",
    "updated_at": "2016-04-26T13:55:39Z",
    "author_association": "NONE",
    "body": "It's not a general executable data, it's data meant to be executed only in the context of an EVM. Any vulnerability there that allow execution outside of that environment is a big issue for the ecosystem as a whole that should be patched, independently of the particular way the transaction was initiated.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214753008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214765091",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-214765091",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 214765091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDc2NTA5MQ==",
    "user": {
      "login": "killerstorm",
      "id": 232745,
      "node_id": "MDQ6VXNlcjIzMjc0NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232745?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/killerstorm",
      "html_url": "https://github.com/killerstorm",
      "followers_url": "https://api.github.com/users/killerstorm/followers",
      "following_url": "https://api.github.com/users/killerstorm/following{/other_user}",
      "gists_url": "https://api.github.com/users/killerstorm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/killerstorm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/killerstorm/subscriptions",
      "organizations_url": "https://api.github.com/users/killerstorm/orgs",
      "repos_url": "https://api.github.com/users/killerstorm/repos",
      "events_url": "https://api.github.com/users/killerstorm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/killerstorm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-26T14:33:09Z",
    "updated_at": "2016-04-26T14:33:09Z",
    "author_association": "NONE",
    "body": "@alexvandesande The difference is that when a site builds a transaction, wallet knows the context. It might associate a particular account with a particular context. \n\nIt can work similarly to the same-origin policy on the web: a web site can only work with its own data. E.g. code which is executed in the context of gmail.com is able to send emails in my name, but code is executed in the context of bash.org cannot.\n\nIf one uses URIs, the origin/context is not known to the wallet, so it doesn't know what account will be safe to use. It might ask the user about the context, e.g. \"Did you receive this URI from a trusted source?\", but users are generally bad with that kind of stuff.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214765091/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214769497",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-214769497",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 214769497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDc2OTQ5Nw==",
    "user": {
      "login": "alexvandesande",
      "id": 112898,
      "node_id": "MDQ6VXNlcjExMjg5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/112898?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexvandesande",
      "html_url": "https://github.com/alexvandesande",
      "followers_url": "https://api.github.com/users/alexvandesande/followers",
      "following_url": "https://api.github.com/users/alexvandesande/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexvandesande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexvandesande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexvandesande/subscriptions",
      "organizations_url": "https://api.github.com/users/alexvandesande/orgs",
      "repos_url": "https://api.github.com/users/alexvandesande/repos",
      "events_url": "https://api.github.com/users/alexvandesande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexvandesande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-26T14:46:49Z",
    "updated_at": "2016-04-26T14:46:49Z",
    "author_association": "NONE",
    "body": "@killerstorm in that case, clients could implement variations of same origin policies. Mist will know where the link was clicked. If someone builds an ethereum extension, it would know the page origin too. If someone is building an app that accepts any external links, then it's up to that app to handle their policies.\n\nAnd in all those cases it's essential for ethereum clients to show as much information as possible about the transaction as they can. A malicious app in Mist can also attempt to execute a transaction that will not do what it says it will do and we can't prevent it (if an app wants to receive payment in digix gold, it's acceptable for them to request a transaction from the digix contract, even thou they are not digix themselves).\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214769497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214772673",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-214772673",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 214772673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDc3MjY3Mw==",
    "user": {
      "login": "pelle",
      "id": 8680,
      "node_id": "MDQ6VXNlcjg2ODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8680?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pelle",
      "html_url": "https://github.com/pelle",
      "followers_url": "https://api.github.com/users/pelle/followers",
      "following_url": "https://api.github.com/users/pelle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pelle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pelle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pelle/subscriptions",
      "organizations_url": "https://api.github.com/users/pelle/orgs",
      "repos_url": "https://api.github.com/users/pelle/repos",
      "events_url": "https://api.github.com/users/pelle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pelle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-26T14:56:44Z",
    "updated_at": "2016-04-26T14:56:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "I really like the function parameter. It's an elegant solution. I like others think it's a bad idea to even standardize a huge security hole like the  bytecode parameter. The way tech journalists work once fraudsters figure out how to use it, it will unfortunately be a setback for Ethereum.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214772673/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214838263",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-214838263",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 214838263,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDgzODI2Mw==",
    "user": {
      "login": "alexvandesande",
      "id": 112898,
      "node_id": "MDQ6VXNlcjExMjg5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/112898?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexvandesande",
      "html_url": "https://github.com/alexvandesande",
      "followers_url": "https://api.github.com/users/alexvandesande/followers",
      "following_url": "https://api.github.com/users/alexvandesande/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexvandesande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexvandesande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexvandesande/subscriptions",
      "organizations_url": "https://api.github.com/users/alexvandesande/orgs",
      "repos_url": "https://api.github.com/users/alexvandesande/repos",
      "events_url": "https://api.github.com/users/alexvandesande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexvandesande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-26T18:23:26Z",
    "updated_at": "2016-04-26T18:23:26Z",
    "author_association": "NONE",
    "body": "@killerstorm would replacing pure data by the function parameters (recently added) address your concerns?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214838263/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214842121",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-214842121",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 214842121,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDg0MjEyMQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-26T18:33:21Z",
    "updated_at": "2016-04-26T18:36:15Z",
    "author_association": "MEMBER",
    "body": "If the _bytecode_ field is a security risk, how are function parameters not? It surely helps a lot to show what the method name is without knowing the contract (as you cannot retrieve that from the method hash), but it wont reassure you that `getBalance()` is not actually a concealed `transfer()`.\n\nWouldn't it make more sense having a security recommendation what wallets should and shouldn't do?\n\nI do like having both `data` (bytecode) and `function`. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214842121/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214870850",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-214870850",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 214870850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDg3MDg1MA==",
    "user": {
      "login": "niran",
      "id": 106437,
      "node_id": "MDQ6VXNlcjEwNjQzNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/106437?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/niran",
      "html_url": "https://github.com/niran",
      "followers_url": "https://api.github.com/users/niran/followers",
      "following_url": "https://api.github.com/users/niran/following{/other_user}",
      "gists_url": "https://api.github.com/users/niran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/niran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/niran/subscriptions",
      "organizations_url": "https://api.github.com/users/niran/orgs",
      "repos_url": "https://api.github.com/users/niran/repos",
      "events_url": "https://api.github.com/users/niran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/niran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-26T20:09:19Z",
    "updated_at": "2016-04-26T20:09:19Z",
    "author_association": "NONE",
    "body": "Bytecode opens up the whole EVM and Solidity's function handling as an attack surface. I have a pretty good understanding of what can go wrong with malicious function parameters, but arbitrary malicious bytecode sent to a contract address isn't something I've ever looked into. If I were developing a key manager, I'd be doing my users a service by only signing transactions that I understand. The `function` interface should be the primary one, and I'd advise not supporting arbitrary bytecode until there's a use case for it. It's probably safe, but it's not just as safe as a function call.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214870850/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/215161409",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-215161409",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 215161409,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTE2MTQwOQ==",
    "user": {
      "login": "niran",
      "id": 106437,
      "node_id": "MDQ6VXNlcjEwNjQzNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/106437?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/niran",
      "html_url": "https://github.com/niran",
      "followers_url": "https://api.github.com/users/niran/followers",
      "following_url": "https://api.github.com/users/niran/following{/other_user}",
      "gists_url": "https://api.github.com/users/niran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/niran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/niran/subscriptions",
      "organizations_url": "https://api.github.com/users/niran/orgs",
      "repos_url": "https://api.github.com/users/niran/repos",
      "events_url": "https://api.github.com/users/niran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/niran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-27T17:30:29Z",
    "updated_at": "2016-04-27T17:30:29Z",
    "author_association": "NONE",
    "body": "We should also consider extending the function syntax to allow nested functions. Consider the [wallet contract's](https://github.com/ethereum/dapp-bin/blob/master/wallet/wallet.sol) `execute` method. If my dapp wants to request approval for unicorn tokens, it can generate a URI with a function parameter of `execute(address 0x89205A3A3b2A69De6Dbf7f01ED13B2108B2c43e7, uint 0, bytes 0x...)`. Authenticators can display more useful information if the nested transaction data is provided with the function syntax instead of raw bytes, like `function approve(...)`. This doesn't improve security since arbitrary bytes will always be valid, but it allows authenticators to build a better user experience.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/215161409/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/215172130",
    "html_url": "https://github.com/ethereum/EIPs/issues/67#issuecomment-215172130",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/67",
    "id": 215172130,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTE3MjEzMA==",
    "user": {
      "login": "tayvano",
      "id": 7924827,
      "node_id": "MDQ6VXNlcjc5MjQ4Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7924827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tayvano",
      "html_url": "https://github.com/tayvano",
      "followers_url": "https://api.github.com/users/tayvano/followers",
      "following_url": "https://api.github.com/users/tayvano/following{/other_user}",
      "gists_url": "https://api.github.com/users/tayvano/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tayvano/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tayvano/subscriptions",
      "organizations_url": "https://api.github.com/users/tayvano/orgs",
      "repos_url": "https://api.github.com/users/tayvano/repos",
      "events_url": "https://api.github.com/users/tayvano/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tayvano/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-27T17:59:35Z",
    "updated_at": "2016-04-27T17:59:35Z",
    "author_association": "NONE",
    "body": "@killerstorm \n\n> Using an URI with a data field is akin to signing a message written by another party: you should either trust that party, or verify the message yourself.\n\nMaybe I'm confused, but how is this different than how people are handling it today? Right now if you have a contract where you want a user to send you ETH + data, or increase the gas, the contract owner posts the information and instructions on what to do. ie: Using Jaxx, do this. Using MyEtherWallet, do this. Using Mist, do this. Or command line do (eth.SendTransaction({ ... }). Paste this data. Change default gas to this. Etc.\n\nBy providing a URI you are providing a shortcut but it is not anything that isn't currently happening.\n\nIf there are security concerns with the data field, then they are concerns that should be addressed in a more broad scope than just this EIP.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/215172130/reactions",
      "total_count": 7,
      "+1": 7,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
