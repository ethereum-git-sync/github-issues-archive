{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/4643",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/4643/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/4643/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/4643/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/4643",
  "id": 1096543148,
  "node_id": "I_kwDOAq426M5BW-us",
  "number": 4643,
  "title": "(EIP712) Unclear `encodeType` protocol/implementation for >2nd order nested structure",
  "user": {
    "login": "alex-miller-0",
    "id": 7378490,
    "node_id": "MDQ6VXNlcjczNzg0OTA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7378490?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alex-miller-0",
    "html_url": "https://github.com/alex-miller-0",
    "followers_url": "https://api.github.com/users/alex-miller-0/followers",
    "following_url": "https://api.github.com/users/alex-miller-0/following{/other_user}",
    "gists_url": "https://api.github.com/users/alex-miller-0/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alex-miller-0/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alex-miller-0/subscriptions",
    "organizations_url": "https://api.github.com/users/alex-miller-0/orgs",
    "repos_url": "https://api.github.com/users/alex-miller-0/repos",
    "events_url": "https://api.github.com/users/alex-miller-0/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alex-miller-0/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-01-07T18:01:42Z",
  "updated_at": "2022-01-07T18:32:14Z",
  "closed_at": "2022-01-07T18:21:09Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "*Apologies if this is not the right place to raise this issue, but it is related to something in this repo so I thought I would start here.*\r\n\r\n---\r\n\r\n### Background\r\n\r\n`encodeType`, as [defined in the spec](https://eips.ethereum.org/EIPS/eip-712#definition-of-encodetype), should include all information about the types in the message. My reading from the spec is that type objects should be recursively defined until the final depth is reached, at which point the atomic types should be defined (in the linked spec example, this final step is `Person(address wallet,string name)`).\r\n\r\nIn the canonical EIP712 example (in this repo), the type name is encoded with the following function: https://github.com/ethereum/EIPs/blob/ecb2eb89b0610428c1f6b2e25fdae173fa479cc3/assets/eip-712/Example.js#L64-L76\r\n\r\nUsing the [included example object](https://github.com/ethereum/EIPs/blob/ecb2eb89b0610428c1f6b2e25fdae173fa479cc3/assets/eip-712/Example.js#L5) this produces the following definition:\r\n\r\n```\r\nMail(Person from,Person to,string contents)Person(string name,address wallet)\r\n```\r\n\r\nThis expresses all information about the types, notably that the `Person` type is fully defined at the end.\r\n\r\n### Exposing the edge case\r\n\r\nSuppose we change the object to now include another nested type (`Wallet`). This is now what I would call a 2nd-order type definition:\r\n\r\n```\r\n    types: {\r\n        EIP712Domain: [\r\n            { name: 'name', type: 'string' },\r\n            { name: 'version', type: 'string' },\r\n            { name: 'chainId', type: 'uint256' },\r\n            { name: 'verifyingContract', type: 'address' },\r\n        ],\r\n        Wallet: [\r\n          { name: 'address', type: 'address' }\r\n        ],\r\n        Person: [\r\n            { name: 'name', type: 'string' },\r\n            { name: 'wallet', type: 'Wallet' }\r\n        ],\r\n        Mail: [\r\n            { name: 'from', type: 'Person' },\r\n            { name: 'to', type: 'Person' },\r\n            { name: 'contents', type: 'string' }\r\n        ],\r\n    }\r\n```\r\n\r\nAs expected, this produces the following definition:\r\n\r\n```\r\nMail(Person from,Person to,string contents)Person(string name,Wallet wallet)Wallet(address address)\r\n```\r\n\r\nNow suppose we add one more nested type (reaching 3rd-order nesting):\r\n\r\n```\r\n    types: {\r\n        EIP712Domain: [\r\n            { name: 'name', type: 'string' },\r\n            { name: 'version', type: 'string' },\r\n            { name: 'chainId', type: 'uint256' },\r\n            { name: 'verifyingContract', type: 'address' },\r\n        ],\r\n        Balance: [\r\n          { name: 'address', type: 'address' },\r\n          { name: 'value', type: 'uint256' }\r\n        ],\r\n        Wallet: [\r\n          { name: 'balance', type: 'Balance' }\r\n        ],\r\n        Person: [\r\n            { name: 'name', type: 'string' },\r\n            { name: 'wallet', type: 'Wallet' }\r\n        ],\r\n        Mail: [\r\n            { name: 'from', type: 'Person' },\r\n            { name: 'to', type: 'Person' },\r\n            { name: 'contents', type: 'string' }\r\n        ],\r\n    }\r\n```\r\nThis produces the following definition:\r\n\r\n```\r\nMail(Person from,Person to,string contents)Balance(address address,uint256 value)Person(string name,Wallet wallet)Wallet(Balance balance)\r\n```\r\n\r\n**Notice how `Balance` is not fully expressed at the end.**\r\n\r\n### Path forward?\r\n\r\nMy guess here is that the example code in this repo did not take this edge case into account and that `Balance` should be fully expressed. Indeed, [`ethers-eip712`](https://github.com/0xsequence/ethers-eip712/blob/4d902572d3ce4615bb8d2685316692816e9018b2/src/typed-data.ts#L122) generates what I assume is the actually correct definition:\r\n\r\n```\r\nMail(Person from,Person to,string contents)Balance(address address,uint256 value)Person(string name,Wallet wallet)Wallet(Balance balance)Balance(address address,uint256 value)\r\n```\r\n\r\nUnfortunately, this differs from the [MetaMask implementation](https://github.com/MetaMask/eth-sig-util/blob/73ace3309bf4b97d901fb66cd61db15eede7afe9/src/sign-typed-data.ts#L271-L292) as well as the `eip-712` module, which is used by MyCrypto (I opened [an issue](https://github.com/Mrtenz/eip-712/issues/35#issuecomment-1007405890) in their repo initially and was alerted that their implementation matches the canonical one in this repo).\r\n\r\nSo I guess I would pose the following questions:\r\n\r\n1. Is this indeed an error in the canonical example code, or is EIP712 *supposed to* behave differently for types with >2 orders of nesting?\r\n2. Assuming this is an error in the example code, given that there are now several widely used implementations that use the incorrect formatting, should the spec be amended to account for this edge case?\r\n",
  "closed_by": {
    "login": "alex-miller-0",
    "id": 7378490,
    "node_id": "MDQ6VXNlcjczNzg0OTA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7378490?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alex-miller-0",
    "html_url": "https://github.com/alex-miller-0",
    "followers_url": "https://api.github.com/users/alex-miller-0/followers",
    "following_url": "https://api.github.com/users/alex-miller-0/following{/other_user}",
    "gists_url": "https://api.github.com/users/alex-miller-0/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alex-miller-0/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alex-miller-0/subscriptions",
    "organizations_url": "https://api.github.com/users/alex-miller-0/orgs",
    "repos_url": "https://api.github.com/users/alex-miller-0/repos",
    "events_url": "https://api.github.com/users/alex-miller-0/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alex-miller-0/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/4643/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/4643/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1007630917",
    "html_url": "https://github.com/ethereum/EIPs/issues/4643#issuecomment-1007630917",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/4643",
    "id": 1007630917,
    "node_id": "IC_kwDOAq426M48DzpF",
    "user": {
      "login": "alex-miller-0",
      "id": 7378490,
      "node_id": "MDQ6VXNlcjczNzg0OTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7378490?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alex-miller-0",
      "html_url": "https://github.com/alex-miller-0",
      "followers_url": "https://api.github.com/users/alex-miller-0/followers",
      "following_url": "https://api.github.com/users/alex-miller-0/following{/other_user}",
      "gists_url": "https://api.github.com/users/alex-miller-0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alex-miller-0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alex-miller-0/subscriptions",
      "organizations_url": "https://api.github.com/users/alex-miller-0/orgs",
      "repos_url": "https://api.github.com/users/alex-miller-0/repos",
      "events_url": "https://api.github.com/users/alex-miller-0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alex-miller-0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-07T18:21:09Z",
    "updated_at": "2022-01-07T18:21:09Z",
    "author_association": "NONE",
    "body": "I have identified the issue and it is not related to nesting per se. Will open a different issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1007630917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1007639364",
    "html_url": "https://github.com/ethereum/EIPs/issues/4643#issuecomment-1007639364",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/4643",
    "id": 1007639364,
    "node_id": "IC_kwDOAq426M48D1tE",
    "user": {
      "login": "alex-miller-0",
      "id": 7378490,
      "node_id": "MDQ6VXNlcjczNzg0OTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7378490?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alex-miller-0",
      "html_url": "https://github.com/alex-miller-0",
      "followers_url": "https://api.github.com/users/alex-miller-0/followers",
      "following_url": "https://api.github.com/users/alex-miller-0/following{/other_user}",
      "gists_url": "https://api.github.com/users/alex-miller-0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alex-miller-0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alex-miller-0/subscriptions",
      "organizations_url": "https://api.github.com/users/alex-miller-0/orgs",
      "repos_url": "https://api.github.com/users/alex-miller-0/repos",
      "events_url": "https://api.github.com/users/alex-miller-0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alex-miller-0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-07T18:32:14Z",
    "updated_at": "2022-01-07T18:32:14Z",
    "author_association": "NONE",
    "body": "Never mind... there is no issue here! My bad. It was a useful learning experience :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1007639364/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
