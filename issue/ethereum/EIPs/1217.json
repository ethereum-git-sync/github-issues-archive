{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/1217",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/1217/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/1217/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/1217/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/1217",
  "id": 340908944,
  "node_id": "MDU6SXNzdWUzNDA5MDg5NDQ=",
  "number": 1217,
  "title": "EIP1192: Standard interface for reading & cancelling subscription payments ",
  "user": {
    "login": "kermankohli",
    "id": 2050929,
    "node_id": "MDQ6VXNlcjIwNTA5Mjk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2050929?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kermankohli",
    "html_url": "https://github.com/kermankohli",
    "followers_url": "https://api.github.com/users/kermankohli/followers",
    "following_url": "https://api.github.com/users/kermankohli/following{/other_user}",
    "gists_url": "https://api.github.com/users/kermankohli/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kermankohli/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kermankohli/subscriptions",
    "organizations_url": "https://api.github.com/users/kermankohli/orgs",
    "repos_url": "https://api.github.com/users/kermankohli/repos",
    "events_url": "https://api.github.com/users/kermankohli/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kermankohli/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2018-07-13T07:18:55Z",
  "updated_at": "2021-12-18T21:12:20Z",
  "closed_at": "2021-12-18T21:12:20Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**Problem**\r\nWe need a standard way of dealing with recurring/subscription payments on Ethereum. The original discussion began with [EIP948](https://github.com/ethereum/EIPs/issues/948), however there are currently 2 ideas around what a subscription payment standard should have be (read vs edit/write). \r\n\r\n**Solution**\r\nRather than creating a lowest common denominator for competing standards, at 8x we propose to create a new standard to separate the two altogether. We propose EIP1192 will be a standard for applications such as wallets to allow users to view their existing subscriptions and manage them at a basic level (eg. cancelling). However, it should be up to each protocol/network to determine how they would like to handle the creation of a payment or be compliant with EIP948.\r\n\r\n**Current Progress**\r\n\r\nSo far we have these basic functions defined for a read/cancel only standard. These are not in any way finalised, but merely a starting point for a discussion. One problem which needs to be addressed is a potential metadata format for both EIP948 and EIP 1992 to be in agreement with. \r\n\r\nSome potential issues include: \r\n- Formate for dates (epoch vs unit of dates)\r\n- Fields that should or should not be included\r\n- Format for meta/extra data\r\n- Standard way to communicate once a subscription has been created (event logs)\r\n\r\nApart from the above, this is the current implementation proposal for EIP1192.\r\n \r\n```   \r\n/** @dev Checks if the subscription is valid.\r\n      * @param _subscription is the identifier of the customer's subscription with its relevant details.\r\n      * @return success is the result of whether the subscription is valid or not.\r\n    */\r\n    function isValidSubscription(bytes32 _subscription)\r\n        public\r\n        view\r\n        returns (bool success);\r\n```\r\n```\r\n    /** @dev Gets the token contract address within the subscription.\r\n      * @param _subscription is the identifier of the customer's subscription with its relevant details.\r\n      * @return subscriptionTokenAddress is token contract address within the subscription.\r\n    */\r\n    function getSubscriptionTokenAddress(bytes32 _subscription)\r\n        public\r\n        view\r\n        returns (address subscriptionTokenAddress);\r\n```\r\n```\r\n    /** @dev Returns the from (customer) and to (business) addresses of a subscription.\r\n      * @param _subscription is the identifier of the customer's subscription with its relevant details.\r\n      * @return from is the address where recurring payments are deducted (customer).\r\n      * @return to is the address where recurring payments are sent (business).\r\n    */\r\n    function getSubscriptionFromToAddresses(bytes32 _subscription)\r\n        public\r\n        view\r\n        returns (address from, address to);\r\n```\r\n```\r\n    /** @dev Gets the token amount due from the subscription.\r\n      * @param _subscription is the identifier of the customer's subscription with its relevant details.\r\n      * @return amount is token amount due from the subscription.\r\n    */\r\n    function getAmountDueFromSubscription(bytes32 _subscription)\r\n        public\r\n        view\r\n        returns (uint amount);\r\n```\r\n```\r\n    /** @dev Gets the subscription fee.\r\n      * @param _subscription is the identifier of the customer's subscription with its relevant details.\r\n      * @return fee is the subscription fee.\r\n    */\r\n    function getSubscriptionFee(bytes32 _subscription)\r\n        public\r\n        view\r\n        returns (uint fee);\r\n```\r\n```\r\n    /** @dev Cancel the subscription. User or service node iniated.\r\n      * @param _subscription is the identifier of the customer's subscription with its relevant details.\r\n    */\r\n    function cancelSubscription(bytes32 _subscription)\r\n        public;\r\n```",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/1217/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/1217/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/404835925",
    "html_url": "https://github.com/ethereum/EIPs/issues/1217#issuecomment-404835925",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1217",
    "id": 404835925,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDgzNTkyNQ==",
    "user": {
      "login": "owocki",
      "id": 513929,
      "node_id": "MDQ6VXNlcjUxMzkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/513929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/owocki",
      "html_url": "https://github.com/owocki",
      "followers_url": "https://api.github.com/users/owocki/followers",
      "following_url": "https://api.github.com/users/owocki/following{/other_user}",
      "gists_url": "https://api.github.com/users/owocki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/owocki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/owocki/subscriptions",
      "organizations_url": "https://api.github.com/users/owocki/orgs",
      "repos_url": "https://api.github.com/users/owocki/repos",
      "events_url": "https://api.github.com/users/owocki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/owocki/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T13:37:49Z",
    "updated_at": "2018-07-13T13:38:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "> However, it should be up to each protocol/network to determine how they would like to handle the creation of a payment or be compliant with EIP948.\r\n\r\nI don't feel that the rest of the working group for #948 agrees with this.  \r\n\r\nMy personal view is that there will be too much fragmentation in the marketplace if there are no standards around creation of a subscription.  \r\n\r\nIf you we are going to break the standard into two components, then there should be a separate set of standards for writing/creation of a standard.\r\n\r\n> So far we have these basic functions defined for a read/cancel only standard. These are not in any way finalised, but merely a starting point for a discussion.\r\n\r\nYour proposal is *not a starting point* .  The starting point was https://github.com/EthereumOpenSubscriptions/standard , which we had all previously been working towards together until you stopped showing up to the #948 calls and then submitted this EIP without any communication with the rest of the working group.\r\n\r\n*its not a standard if it’s just 8x in the working group.*",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/404835925/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/404932878",
    "html_url": "https://github.com/ethereum/EIPs/issues/1217#issuecomment-404932878",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1217",
    "id": 404932878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDkzMjg3OA==",
    "user": {
      "login": "kermankohli",
      "id": 2050929,
      "node_id": "MDQ6VXNlcjIwNTA5Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2050929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kermankohli",
      "html_url": "https://github.com/kermankohli",
      "followers_url": "https://api.github.com/users/kermankohli/followers",
      "following_url": "https://api.github.com/users/kermankohli/following{/other_user}",
      "gists_url": "https://api.github.com/users/kermankohli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kermankohli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kermankohli/subscriptions",
      "organizations_url": "https://api.github.com/users/kermankohli/orgs",
      "repos_url": "https://api.github.com/users/kermankohli/repos",
      "events_url": "https://api.github.com/users/kermankohli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kermankohli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T19:37:09Z",
    "updated_at": "2018-07-13T19:37:09Z",
    "author_association": "NONE",
    "body": "Hey @owocki, I think there's been some cross wires around what's been communicated due to the calls being at 12:30am and me trying to catch up via chat. \r\n\r\n> My personal view is that there will be too much fragmentation in the marketplace if there are no standards around creation of a subscription.\r\n\r\nWe believe that there's a magnitude of use cases (donation, up to X, oraclised etc) that might want to be created and it'll be unfair to be locked into one interface to create these subscriptions. It's also worth considering that a user isn't expecting a standard way to create subscriptions since you subscribe to services from various businesses/developers. Although, what the user does want is a standard way to view all of their current subscriptions and cancel them if required. Hence, our intent is for the two standards to be complimentary to each other and not competing :)\r\n\r\nI'd also like to thank you for starting the EIP948 group as that's been where we've been able to collaborate together. I don't intend to come off as `going rogue` or `being the only one in the working group`, this is simply an _idea_ to resolve the differences we have to move forward and get the standards over the line. Apologies in advance if you felt offended that I've forked the standard you originally created.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/404932878/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/404955545",
    "html_url": "https://github.com/ethereum/EIPs/issues/1217#issuecomment-404955545",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1217",
    "id": 404955545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDk1NTU0NQ==",
    "user": {
      "login": "sb777",
      "id": 10205537,
      "node_id": "MDQ6VXNlcjEwMjA1NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10205537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sb777",
      "html_url": "https://github.com/sb777",
      "followers_url": "https://api.github.com/users/sb777/followers",
      "following_url": "https://api.github.com/users/sb777/following{/other_user}",
      "gists_url": "https://api.github.com/users/sb777/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sb777/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sb777/subscriptions",
      "organizations_url": "https://api.github.com/users/sb777/orgs",
      "repos_url": "https://api.github.com/users/sb777/repos",
      "events_url": "https://api.github.com/users/sb777/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sb777/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T21:13:05Z",
    "updated_at": "2018-07-13T21:13:05Z",
    "author_association": "NONE",
    "body": "Having a recurring subscription standard without subscription initiation doesn't make sense. That's the whole point of ERC-948 - to initiate, manage, and process subscriptions.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/404955545/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/404957208",
    "html_url": "https://github.com/ethereum/EIPs/issues/1217#issuecomment-404957208",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1217",
    "id": 404957208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDk1NzIwOA==",
    "user": {
      "login": "kermankohli",
      "id": 2050929,
      "node_id": "MDQ6VXNlcjIwNTA5Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2050929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kermankohli",
      "html_url": "https://github.com/kermankohli",
      "followers_url": "https://api.github.com/users/kermankohli/followers",
      "following_url": "https://api.github.com/users/kermankohli/following{/other_user}",
      "gists_url": "https://api.github.com/users/kermankohli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kermankohli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kermankohli/subscriptions",
      "organizations_url": "https://api.github.com/users/kermankohli/orgs",
      "repos_url": "https://api.github.com/users/kermankohli/repos",
      "events_url": "https://api.github.com/users/kermankohli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kermankohli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T21:20:49Z",
    "updated_at": "2018-07-13T21:20:49Z",
    "author_association": "NONE",
    "body": "@sb777 Could you explain why initiation doesn't make sense to not be in a standard? Use cases would be helpful to understand :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/404957208/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/404981510",
    "html_url": "https://github.com/ethereum/EIPs/issues/1217#issuecomment-404981510",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1217",
    "id": 404981510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDk4MTUxMA==",
    "user": {
      "login": "sindarknave",
      "id": 4745532,
      "node_id": "MDQ6VXNlcjQ3NDU1MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4745532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sindarknave",
      "html_url": "https://github.com/sindarknave",
      "followers_url": "https://api.github.com/users/sindarknave/followers",
      "following_url": "https://api.github.com/users/sindarknave/following{/other_user}",
      "gists_url": "https://api.github.com/users/sindarknave/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sindarknave/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sindarknave/subscriptions",
      "organizations_url": "https://api.github.com/users/sindarknave/orgs",
      "repos_url": "https://api.github.com/users/sindarknave/repos",
      "events_url": "https://api.github.com/users/sindarknave/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sindarknave/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T23:55:21Z",
    "updated_at": "2018-07-13T23:57:59Z",
    "author_association": "NONE",
    "body": "I'd be in favor of separating subscription initiation from a subscription management interface standard, so long as the reference implementation includes an example of subscription initiation. All the contract needs to return is an amount due; there's a lot of business logic (first time free, price stabilization, etc.) that would be better modularized in a separate contract than through an interface standard.\r\n\r\nIn fact, I think the word \"subscriptions\" is too opinionated because it attaches the concept of recurring payments to an enterprise use-case, whereas in real life recurring payments are used in other forms such as license fees, rentals, donations etc.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/404981510/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/405747683",
    "html_url": "https://github.com/ethereum/EIPs/issues/1217#issuecomment-405747683",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1217",
    "id": 405747683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTc0NzY4Mw==",
    "user": {
      "login": "AC0DEM0NK3Y",
      "id": 36201133,
      "node_id": "MDQ6VXNlcjM2MjAxMTMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/36201133?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AC0DEM0NK3Y",
      "html_url": "https://github.com/AC0DEM0NK3Y",
      "followers_url": "https://api.github.com/users/AC0DEM0NK3Y/followers",
      "following_url": "https://api.github.com/users/AC0DEM0NK3Y/following{/other_user}",
      "gists_url": "https://api.github.com/users/AC0DEM0NK3Y/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AC0DEM0NK3Y/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AC0DEM0NK3Y/subscriptions",
      "organizations_url": "https://api.github.com/users/AC0DEM0NK3Y/orgs",
      "repos_url": "https://api.github.com/users/AC0DEM0NK3Y/repos",
      "events_url": "https://api.github.com/users/AC0DEM0NK3Y/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AC0DEM0NK3Y/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-17T22:23:15Z",
    "updated_at": "2018-07-17T22:23:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wondering about the decision to use bytes32 for the subscription parameter? Why restrict this when you can store a lot more data in a uint256 and it's faster for the EVM to process.\r\n\r\nI agree with the choice for a standard for view may be better than a standard for initiation because subscription to what exactly? It could be many things. \r\nWhich makes me think amount due and fee returns...I guess this standard as is will be only useful for tokens and fiat representation subscriptions?\r\n\r\nDo you think there's merit in adding array params to the gets so you can pull out many subscription details for the chain at once rather than hitting the chain many times for use cases where there are many subscriptions?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/405747683/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/405897828",
    "html_url": "https://github.com/ethereum/EIPs/issues/1217#issuecomment-405897828",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1217",
    "id": 405897828,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTg5NzgyOA==",
    "user": {
      "login": "kermankohli",
      "id": 2050929,
      "node_id": "MDQ6VXNlcjIwNTA5Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2050929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kermankohli",
      "html_url": "https://github.com/kermankohli",
      "followers_url": "https://api.github.com/users/kermankohli/followers",
      "following_url": "https://api.github.com/users/kermankohli/following{/other_user}",
      "gists_url": "https://api.github.com/users/kermankohli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kermankohli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kermankohli/subscriptions",
      "organizations_url": "https://api.github.com/users/kermankohli/orgs",
      "repos_url": "https://api.github.com/users/kermankohli/repos",
      "events_url": "https://api.github.com/users/kermankohli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kermankohli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-18T11:21:44Z",
    "updated_at": "2018-07-18T11:21:44Z",
    "author_association": "NONE",
    "body": "Thank you for your input and apologies for the late reply!\r\n\r\n@sindarknave Definitely. The idea behind what a subscription actually is so varied that it's better to find what should be in common and cutting where ideas/implementation diverge too greatly. Out of the existing standard, what do you thinks should be changed though?\r\n\r\n@AC0DEM0NK3Y Honestly, I didn't really know that uint256 was more gas efficient than bytes32. Would be keen to learn more about this - any links would be greatly appreciated! Could you elaborate more about your points of amount due and return fees. Regarding array params, it's still dependent on some kind of format or structure for the subscription. eg. what should index 0 contain, what format do you store dates/time intervals in (epoch or some kind of enum based system) etc. Also returning a dynamic array in Solidity is really messy right now so wanted to avoid going down that rabbit hole altogether haha. It's easier to have s JSON object serialised as a string, data or uint imo.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/405897828/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986093543",
    "html_url": "https://github.com/ethereum/EIPs/issues/1217#issuecomment-986093543",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1217",
    "id": 986093543,
    "node_id": "IC_kwDOAq426M46xpfn",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-04T21:12:05Z",
    "updated_at": "2021-12-04T21:12:05Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986093543/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997285390",
    "html_url": "https://github.com/ethereum/EIPs/issues/1217#issuecomment-997285390",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1217",
    "id": 997285390,
    "node_id": "IC_kwDOAq426M47cV4O",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-18T21:12:20Z",
    "updated_at": "2021-12-18T21:12:20Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997285390/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
