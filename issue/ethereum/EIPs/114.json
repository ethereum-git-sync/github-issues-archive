{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/114",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/114/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/114/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/114/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/114",
  "id": 160782694,
  "node_id": "MDU6SXNzdWUxNjA3ODI2OTQ=",
  "number": 114,
  "title": "Substitute call stack limit with child gas restriction",
  "user": {
    "login": "vbuterin",
    "id": 2230894,
    "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vbuterin",
    "html_url": "https://github.com/vbuterin",
    "followers_url": "https://api.github.com/users/vbuterin/followers",
    "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
    "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
    "organizations_url": "https://api.github.com/users/vbuterin/orgs",
    "repos_url": "https://api.github.com/users/vbuterin/repos",
    "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vbuterin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 18,
  "created_at": "2016-06-16T23:24:20Z",
  "updated_at": "2022-01-30T02:24:16Z",
  "closed_at": "2022-01-30T02:24:16Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "For blocks where `block.number >= METROPOLIS_HARDFORK_BLKNUM`, make the following changes:\r\n1. The 1024 call stack limit no longer exists\r\n2. Still keep track of the call stack depth; however, if the call stack depth is at least 1024 (ie. in and only in those execution environments which would never be reachable in the current Ethereum implementation because they would trigger the max call stack depth exception), a `CALL`, `CALLCODE`, `CREATE` or `DELEGATECALL` can allocate a maximum of `(g * 63) // 64` gas to the child, where `g` is the remaining gas in the message at the time the call is made, after subtracting gas costs for the call and for memory expansion.\r\n\r\n**Option B**: allow any amount of gas to be required, and if the amount of gas required is too high then don't throw an exception, instead just limit it to the maximum. Option **B1**: the maximum is 100% for call depths up to 1024 and 63/64 as above after, option **B2**: the maximum is 63/64 as above at all depths. If the limit is equal to the maximum, then if the call throws, immediately set the parent gas to 0 (this preserves a nice safety property that currently exists in contracts by default).\r\n\r\nAssuming a block gas limit of `10**9` (a safe upper limit for the foreseeable future), and a minimum gas cost of ~50 for a call + pushing stack arguments + doing the arithmetic of \\* 63 / 64, we can compute a maximum de-facto stack depth of `1024 + log(10**9 / 50) / log(64 / 63) = 2091`, so the stack depth remains very safely bounded. However, with this mechanism for enforcing a maximum call stack depth, contracts no longer have to worry about the remaining call stack depth in the execution environment they are running in, and possible attacks or bugs if the depth is too low, and instead only need to worry about the single limiting variable of gas.\r\n",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/114/reactions",
    "total_count": 23,
    "+1": 23,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/114/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/226987708",
    "html_url": "https://github.com/ethereum/EIPs/issues/114#issuecomment-226987708",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/114",
    "id": 226987708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjk4NzcwOA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-19T09:24:31Z",
    "updated_at": "2016-06-19T09:24:46Z",
    "author_association": "MEMBER",
    "body": "In general, I much prefer methods that use gas to limit resources (because that is what gas was designed for). The question here is how to retain backwards compatibility and make this practical at the same time. Currently, calls try to forward all gas in calls. In order to achieve this, some gas has to be retained to pay for the call opcode itself. So the gas that is sent via the call is `gas - cost_of_call`. The problem we already have is that it is extremely difficult to calculate the cost of the call opcode because there are a lot of factors that play into this:\n- whether or not the target account exists\n- whether or not we send ether along with the call\n- how much we have to resize memory for input and output parameters\n\nNot to forget that we have to take into account the costs for performing these calculations themselves.\n\nIf we even complicate this by restricting the amount of gas we can send along depending on the current call depth (a value that is impossible to retrieve inside the contract), it will even get worse.\n\nBecause of that, I would like to bring forward the following proposal:\n- limit the amount of gas for a child call depending on the depth as explained in this issue\n- if we want to send more gas than is available or allowed, the call does not fail but it just sends the max possible amount of gas\n\nThis has already been brought up in https://github.com/ethereum/EIPs/issues/90\n\nStill, these are quite drastic changes that might break existing contracts. I do not think that contracts rely on that, but there might be other problems I did not see.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/226987708/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/227109949",
    "html_url": "https://github.com/ethereum/EIPs/issues/114#issuecomment-227109949",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/114",
    "id": 227109949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzEwOTk0OQ==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-20T10:48:04Z",
    "updated_at": "2016-06-20T10:51:29Z",
    "author_association": "MEMBER",
    "body": "> if we want to send more gas than is available or allowed, the call does not fail but it just sends the max possible amount of gas\n\nI'd support this. Actually, combining this with @chfast 's idea from #90 seems like a very good idea, this way we resolve both issues at the same time.\n\nActually, if we are doing this, I'd strongly consider removing the exemption for the first 1024 units of call stack depth.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/227109949/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/227110585",
    "html_url": "https://github.com/ethereum/EIPs/issues/114#issuecomment-227110585",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/114",
    "id": 227110585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzExMDU4NQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-20T10:51:37Z",
    "updated_at": "2016-06-20T10:52:32Z",
    "author_association": "MEMBER",
    "body": "Sure, the change does not affect the prior 1023 call depths, but we know that there are contracts that deliberately probe the stack call depth. Those will report \"all is fine, go on\" now, which is probably fine, because we can go on, only until such contracts also make assumptions about how much gas is still left for the recursive call. Which is probably also fine, but just saying :-)\n\nSo this change will modify the behaviour of existing contracts, but _probably_ in line with their intent.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/227110585/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/227188783",
    "html_url": "https://github.com/ethereum/EIPs/issues/114#issuecomment-227188783",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/114",
    "id": 227188783,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzE4ODc4Mw==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-20T16:08:09Z",
    "updated_at": "2016-06-20T16:08:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Having seen how expensive a small deviation of behaviour from apparent intent can be, 'probably' is not reassuring.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/227188783/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/227502280",
    "html_url": "https://github.com/ethereum/EIPs/issues/114#issuecomment-227502280",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/114",
    "id": 227502280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzUwMjI4MA==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-21T16:54:20Z",
    "updated_at": "2016-06-21T18:02:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I also suspect that tracking gas use is actually more difficult for a programmer than a hard limit.  From what I can tell programmers don't track it.  They try to write correct code, then use tools to estimate gas usage, then throw in some extra gas to be sure.  But they can count to 1024.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/227502280/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/227502582",
    "html_url": "https://github.com/ethereum/EIPs/issues/114#issuecomment-227502582",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/114",
    "id": 227502582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzUwMjU4Mg==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-21T16:55:23Z",
    "updated_at": "2016-06-21T16:55:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "In general, I would prefer that the EVM have hard edges on its resource constraints.  That makes it possible for the EVM implementation to optimize for the limits, (e.g. preallocate memory, use small indexes instead of big pointers, etc.) the systems running EVMs to provision for those limits, and programmers of the EVM to respect those limits.  If it's all based on gas the limits become fuzzy, as they are now for memory.  As computers become more powerful the limits can be increased.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/227502582/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/227589209",
    "html_url": "https://github.com/ethereum/EIPs/issues/114#issuecomment-227589209",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/114",
    "id": 227589209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzU4OTIwOQ==",
    "user": {
      "login": "nicksavers",
      "id": 7483198,
      "node_id": "MDQ6VXNlcjc0ODMxOTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7483198?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicksavers",
      "html_url": "https://github.com/nicksavers",
      "followers_url": "https://api.github.com/users/nicksavers/followers",
      "following_url": "https://api.github.com/users/nicksavers/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicksavers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicksavers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicksavers/subscriptions",
      "organizations_url": "https://api.github.com/users/nicksavers/orgs",
      "repos_url": "https://api.github.com/users/nicksavers/repos",
      "events_url": "https://api.github.com/users/nicksavers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicksavers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-21T22:17:12Z",
    "updated_at": "2016-06-22T08:32:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "> ... this change will modify the behaviour of existing contracts ...\n\nNot if these changes would only apply for contracts which were created after the rule was implemented. Unfortunately there is no easy way to find out in which block a contract was added to the state. Adding a `creationBlock` to the account state or another way to easily figure that out, could have made backwards compatibility with EVM updates a lot easier.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/227589209/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/227604657",
    "html_url": "https://github.com/ethereum/EIPs/issues/114#issuecomment-227604657",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/114",
    "id": 227604657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzYwNDY1Nw==",
    "user": {
      "login": "eth1au",
      "id": 1072408,
      "node_id": "MDQ6VXNlcjEwNzI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1072408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eth1au",
      "html_url": "https://github.com/eth1au",
      "followers_url": "https://api.github.com/users/eth1au/followers",
      "following_url": "https://api.github.com/users/eth1au/following{/other_user}",
      "gists_url": "https://api.github.com/users/eth1au/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eth1au/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eth1au/subscriptions",
      "organizations_url": "https://api.github.com/users/eth1au/orgs",
      "repos_url": "https://api.github.com/users/eth1au/repos",
      "events_url": "https://api.github.com/users/eth1au/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eth1au/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-21T23:43:11Z",
    "updated_at": "2016-06-21T23:43:11Z",
    "author_association": "NONE",
    "body": "...optimal amount of gas \n![eip0 7](https://cloud.githubusercontent.com/assets/1072408/16250020/001764ca-3812-11e6-9518-592686d9d265.jpg) \nsource: econresdata http://www.federalreserve.gov/econresdata/feds/2015/files/2015031pap.pdf\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/227604657/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/227936364",
    "html_url": "https://github.com/ethereum/EIPs/issues/114#issuecomment-227936364",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/114",
    "id": 227936364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzkzNjM2NA==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-23T02:52:46Z",
    "updated_at": "2016-06-23T02:52:46Z",
    "author_association": "MEMBER",
    "body": "I think in this case using gas is fine because the call depth will go up only logarithmically with increasing gas counts. So you can write code with the assumption that the max depth will be less than 3072 and it will work fine until the heat depth of the universe.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/227936364/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/227936721",
    "html_url": "https://github.com/ethereum/EIPs/issues/114#issuecomment-227936721",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/114",
    "id": 227936721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzkzNjcyMQ==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-23T02:55:31Z",
    "updated_at": "2016-06-23T02:55:31Z",
    "author_association": "MEMBER",
    "body": "> Unfortunately there is no easy way to find out in which block a contract was added to the state.\n\nOne way to satisfy this constraint is to have a new opcode, CALL', which has the new behavior (ie. it has a 63/64 max but it does not increment the stack depth). Another approach is via the nonce.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/227936721/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229164828",
    "html_url": "https://github.com/ethereum/EIPs/issues/114#issuecomment-229164828",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/114",
    "id": 229164828,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTE2NDgyOA==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-28T20:00:33Z",
    "updated_at": "2016-06-28T20:00:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vbuterin  After re-reading https://blog.ethereum.org/2016/06/19/thinking-smart-contract-security/ I agree with some variation on this idea, depending on the resolution of the discussions above.  My preferences are totally trumped by the security advantages.  Plus I'm starting to come around on my preferences. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229164828/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/231218243",
    "html_url": "https://github.com/ethereum/EIPs/issues/114#issuecomment-231218243",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/114",
    "id": 231218243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTIxODI0Mw==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T21:51:07Z",
    "updated_at": "2016-07-08T02:30:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vbuterin A problem remains -- testers go for the theoretical limits, not the practical limits.  (So I just went months unable to check in my faster interpreter code until somebody decided we would never really need 2^64 units of gas, let alone the 2^256 actually tested for.)  So a maximum depth for testing is needed.\n\nWe could choose a cost function that has the stack depth asymptote on some limit.  Or we could set a limit in this EIP in addition to your cost function.  From your calculations an asymptote or limit of 2048 should last longer than homo sapiens will, keep the testing realistic, and be small enough to preallocate.  (And powers of 2 are nice to build machines with, but 3072 is OK too ;-)\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/231218243/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/253055248",
    "html_url": "https://github.com/ethereum/EIPs/issues/114#issuecomment-253055248",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/114",
    "id": 253055248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzA1NTI0OA==",
    "user": {
      "login": "chfast",
      "id": 573380,
      "node_id": "MDQ6VXNlcjU3MzM4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chfast",
      "html_url": "https://github.com/chfast",
      "followers_url": "https://api.github.com/users/chfast/followers",
      "following_url": "https://api.github.com/users/chfast/following{/other_user}",
      "gists_url": "https://api.github.com/users/chfast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chfast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chfast/subscriptions",
      "organizations_url": "https://api.github.com/users/chfast/orgs",
      "repos_url": "https://api.github.com/users/chfast/repos",
      "events_url": "https://api.github.com/users/chfast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chfast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-11T21:40:53Z",
    "updated_at": "2016-10-11T21:40:53Z",
    "author_association": "MEMBER",
    "body": "From the available options I'm very much for B2. Suggestions:\n1. Using test limit of 2^63 gas and the call cost of 700 from #150 should give the depth limit of 2094 according to [WolframAlpha](https://www.wolframalpha.com/input/?i=a_n+%3D+63%2F64*%28a_n-1+-+700%29;a_0%3D2%5E63;) or 2357 according to @vbuterin formula. It is still over twice as big as the current limit, se we might have issues with stack overflows.\n2. I would use the formula `g - (g // 64)` instead of `(g * 63) // 64` to avoid overflows in implementations.\n3. Please update the description if anything has become obsoleted by recent attacks and/or #150.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/253055248/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/253198996",
    "html_url": "https://github.com/ethereum/EIPs/issues/114#issuecomment-253198996",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/114",
    "id": 253198996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzE5ODk5Ng==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-12T12:25:02Z",
    "updated_at": "2016-10-12T12:25:02Z",
    "author_association": "MEMBER",
    "body": "@chfast I think if you actually allow `2^63` gas, we have a lot of other problems. I would say that voting the gas up to such areas while knowing that some miners cannot cope with such a resource usage can be seen as a 51% attack, so I would not include this as something we have to guard against.\n\nI would prefer a stack depth around 1024 (unless this number was deemed unrealistic in a recent analysis) at the current magnitude of the block gas limit.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/253198996/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/253212609",
    "html_url": "https://github.com/ethereum/EIPs/issues/114#issuecomment-253212609",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/114",
    "id": 253212609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzIxMjYwOQ==",
    "user": {
      "login": "chfast",
      "id": 573380,
      "node_id": "MDQ6VXNlcjU3MzM4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chfast",
      "html_url": "https://github.com/chfast",
      "followers_url": "https://api.github.com/users/chfast/followers",
      "following_url": "https://api.github.com/users/chfast/following{/other_user}",
      "gists_url": "https://api.github.com/users/chfast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chfast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chfast/subscriptions",
      "organizations_url": "https://api.github.com/users/chfast/orgs",
      "repos_url": "https://api.github.com/users/chfast/repos",
      "events_url": "https://api.github.com/users/chfast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chfast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-12T13:26:24Z",
    "updated_at": "2016-10-12T13:26:24Z",
    "author_association": "MEMBER",
    "body": "I was thinking about the limit we test for. We can lower it to 2^62 or 10^9. It should be a number we never plan to reach in the block gas limit.\n\nWith the limit of 5.5M the call depth will be ~63 (needs verification). Is it fine?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/253212609/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/342877850",
    "html_url": "https://github.com/ethereum/EIPs/issues/114#issuecomment-342877850",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/114",
    "id": 342877850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mjg3Nzg1MA==",
    "user": {
      "login": "lght",
      "id": 33022781,
      "node_id": "MDQ6VXNlcjMzMDIyNzgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33022781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lght",
      "html_url": "https://github.com/lght",
      "followers_url": "https://api.github.com/users/lght/followers",
      "following_url": "https://api.github.com/users/lght/following{/other_user}",
      "gists_url": "https://api.github.com/users/lght/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lght/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lght/subscriptions",
      "organizations_url": "https://api.github.com/users/lght/orgs",
      "repos_url": "https://api.github.com/users/lght/repos",
      "events_url": "https://api.github.com/users/lght/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lght/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-08T16:44:45Z",
    "updated_at": "2017-11-08T16:44:45Z",
    "author_association": "NONE",
    "body": "I'm really interested in this area for static analysis and testing, is changing the call stack to child gas limit still a thing?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/342877850/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1013794853",
    "html_url": "https://github.com/ethereum/EIPs/issues/114#issuecomment-1013794853",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/114",
    "id": 1013794853,
    "node_id": "IC_kwDOAq426M48bUgl",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-16T02:06:43Z",
    "updated_at": "2022-01-16T02:06:43Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1013794853/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1025053107",
    "html_url": "https://github.com/ethereum/EIPs/issues/114#issuecomment-1025053107",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/114",
    "id": 1025053107,
    "node_id": "IC_kwDOAq426M49GRGz",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-30T02:24:16Z",
    "updated_at": "2022-01-30T02:24:16Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1025053107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
