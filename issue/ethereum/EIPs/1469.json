{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/1469",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/1469/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/1469/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/1469/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/1469",
  "id": 366588136,
  "node_id": "MDU6SXNzdWUzNjY1ODgxMzY=",
  "number": 1469,
  "title": "EIP-1470: Smart Contract Weakness Classification (SWC)",
  "user": {
    "login": "thec00n",
    "id": 6027459,
    "node_id": "MDQ6VXNlcjYwMjc0NTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6027459?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/thec00n",
    "html_url": "https://github.com/thec00n",
    "followers_url": "https://api.github.com/users/thec00n/followers",
    "following_url": "https://api.github.com/users/thec00n/following{/other_user}",
    "gists_url": "https://api.github.com/users/thec00n/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/thec00n/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/thec00n/subscriptions",
    "organizations_url": "https://api.github.com/users/thec00n/orgs",
    "repos_url": "https://api.github.com/users/thec00n/repos",
    "events_url": "https://api.github.com/users/thec00n/events{/privacy}",
    "received_events_url": "https://api.github.com/users/thec00n/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2018-10-04T01:26:12Z",
  "updated_at": "2021-12-13T02:20:06Z",
  "closed_at": "2021-12-13T02:20:05Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "---\r\neip: 1470\r\ntitle: Smart Contract Weakness Classification (SWC)\r\nauthor:  Gerhard Wagner (@thec00n)\r\ndiscussions-to: #1469\r\nstatus: Draft\r\ntype: Informational\r\ncreated: 2018-09-18\r\n---\r\n\r\n<!--You can leave these HTML comments in your merged EIP and delete the visible duplicate text guides, they will not appear and may be helpful to refer to if you edit it again. This is the suggested template for new EIPs. Note that an EIP number will be assigned by an editor. When opening a pull request to submit your EIP, please use an abbreviated title in the filename, `eip-draft_title_abbrev.md`. The title should be 44 characters or less.-->\r\n\r\n## Simple Summary\r\n\r\nThis EIP proposes a classification scheme for security weaknesses in Ethereum smart contracts. \r\n\r\n## Abstract\r\n<!--A short (~200 word) description of the technical issue being addressed.-->\r\n\r\nThe SWC is a smart contract specific software weakness classification scheme for developers, tool vendors and security practitioners. The SWC is loosely aligned to the terminologies and structure used in the [Common Weakness Enumeration - CWE](https://cwe.mitre.org) scheme while overlaying a wide range of weakness variants that are specific to smart contracts.\r\n\r\nThe goals of the SWC scheme are as follows:\r\n\r\n- Provide a straightforward way to classify weaknesses in smart contract systems.\r\n- Provide a straightforward way to identify the weakness(es) that lead to a vulnerability in a smart contract system. \r\n- Define a common language for describing weaknesses in smart contract systems' architecture, design and code.\r\n- Train and increase the performance of smart contract security analysis tools.\r\n\r\n\r\n## Motivation\r\n<!--The motivation is critical for EIPs that want to change the Ethereum protocol. It should clearly explain why the existing protocol specification is inadequate to address the problem that the EIP solves. EIP submissions without sufficient motivation may be rejected outright.-->\r\n\r\nIn the software security industry, it is a widely accepted practice to use a common terminology and to classify security related bugs and errors with a standardized scheme. While this has not stopped vulnerabilities from appearing in software, it has helped communities focusing on web applications, network protocols, IOT devices and various other fields to educate users and developers to understand the nature of security related issues in their software. It has also allowed the security community to quickly understand vulnerabilities that occur in production systems to perform root cause analysis or triage findings from various security analysis sources. In recent years various organizations and companies also published vulnerability data to find the most widespread security issues based on collected vulnerability data. Two examples that are widely used and referred to are the [SANS TOP 25 Most Dangerous Software Errors](https://www.sans.org/top25-software-errors) and the [OWASP TOP 10](https://www.owasp.org/index.php/Top_10-2017_Top_10). None of those publications would have been possible without a common classification scheme. \r\n\r\nAt present no such weakness classification scheme exists for weaknesses specific to Ethereum Smart Contracts. Common language and awareness of security weaknesses is mostly derived from academic papers, best practice guides and published articles. Findings from audit reports and security tool analysis add to the wide range of terminologies that is used to describe the discovered weaknesses. It is often time consuming to understand the technical root cause and the risk associated to findings from different sources even for security experts. \r\n\r\n## Rationale \r\n\r\nWhile recognizing the current gap, the SWC does not aim to reinvent the wheel in regards to classification of security weaknesses. It rather proposes to build on top of what has worked well in other parts of the software security community -  specifically the Common Weakness Enumeration (CWE), a list of software vulnerability types that stands out in terms of adoption and breadth of coverage. While CWE does not describe any weaknesses specific to smart contracts, it does describe related weaknesses at higher abstraction layers. This EIP proposes to create smart contract specific variants while linking back to the larger spectrum of software errors and mistakes listed in the CWE that different platforms and technologies have in common. \r\n\r\n## Specification\r\n<!--The technical specification should describe the syntax and semantics of any new feature. The specification should be detailed enough to allow competing, interoperable implementations for any of the current Ethereum platforms (go-ethereum, parity, cpp-ethereum, ethereumj, ethereumjs, and [others](https://github.com/ethereum/wiki/wiki/Clients)).-->\r\n\r\nBefore discussing the SWC specification it is important to describe the terminology used:\r\n\r\n- Weakness: A software error or mistake that in the right conditions can by itself or coupled with other weaknesses lead to a vulnerability. \r\n- Vulnerability: A weakness or multiple weaknesses which directly or indirectly lead to an undesirable state in a smart contract system. \r\n- Variant: A specific weakness that is described in a very low detail specific to Ethereum smart contracts. Each variant is assigned an unique SWC ID.\r\n- Relationships: CWE has a wide range of _Base_ and _Class_ types that group weaknesses on higher abstraction layers. The CWE uses _Relationships_ to link SWC smart contract weakness variants to existing _Base_ or _Class_ CWE types. _Relationships_ are  used to provide context on how SWCs are linked to the wider group of software security weaknesses and to be able to generate useful visualisations and insights through issue data sets. In its current revision it is proposed to link a SWC to its closest parent in the CWE. \r\n- SWC ID: A numeric identifier linked to a variant (e.g. SWC-101).\r\n- Test Case: A test case constitutes a micro-sample or real-world smart contract that demonstrates concrete instances of one or multiple SWC variants. Test cases serve as the basis for meaningful weakness classification and are useful to security analysis tool developers. \r\n\r\nThe SWC in its most basic form links a numeric identifier to a weakness variant. For example the identifier _SWC-101_ is linked to the _Integer Overflow and Underflow_ variant. While a list with the weakness title and a unique id is useful by itself, it would also be ambiguous without further details. Therefore the SWC recommends to add a definition and test cases to any weakness variant.\r\n\r\n**SWC definition**  \r\n\r\nA SWC definition is formated in markdown to allow good readability and tools to process them easily. It consists of the following attributes. \r\n\r\n- Title: A name for the weakness that points to the technical root cause.\r\n- Relationships: Links a CWE _Base_ or _Class_ type to its CWE variant. The _Integer Overflow and Underflow_ variant for example is linked to [CWE-682 - Incorrect Calculation](https://cwe.mitre.org/data/definitions/682.html).\r\n- Description: Describes the nature and potential impact of the weakness on the contract system. \r\n- Remediation: Describes ways on how to fix the weakness. \r\n- References: Links to external references that contain relevant additional information on the weakness.\r\n\r\n**Test cases**\r\n\r\nTest cases include crafted as well as real-world samples of vulnerable smart contracts. A single test case consists of three components:\r\n\r\n1. Source code of a smart contract sample; e.g. Solidity, Vyper, etc.\r\n2. Compiled asset from an EVM compiler in machine readable format; e.g. JSON or ethPM.\r\n3. Test result configuration that describes which and how many instances of a weakness variant can be found in a given sample. The YAML schema for the proposed test case configuration is listed below.\r\n\r\n```YAML\r\ntitle: SWC config\r\ntype: object\r\nrequired:\r\n- description\r\n- issues\r\nproperties:\r\n  description:\r\n    type: string\r\n  issues:\r\n    title: Issues\r\n    type: array\r\n    items:\r\n      title: Issue\r\n      type: object\r\n      required:\r\n      - id\r\n      - count\r\n      properties:\r\n        id:\r\n          type: string\r\n        count:\r\n          type: number\r\n        locations:\r\n          items:\r\n            bytecode_offsets:\r\n              type: object\r\n            line_numbers:\r\n              type: object\r\n```\r\n\r\n## Implementation\r\n<!--The implementations must be completed before any EIP is given status \"Final\", but it need not be completed before the EIP is accepted. While there is merit to the approach of reaching consensus on the specification and rationale before writing code, the principle of \"rough consensus and running code\" is still useful when it comes to resolving many discussions of API details.-->\r\n\r\nThe Smart Contract Weakness Classification registry located in this [Github repository](https://github.com/SmartContractSecurity/SWC-registry) uses the SWC scheme proposed in this EIP. A Github Pages rendered version is also available [here](https://smartcontractsecurity.github.io/SWC-registry/).\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).",
  "closed_by": {
    "login": "MicahZoltu",
    "id": 886059,
    "node_id": "MDQ6VXNlcjg4NjA1OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MicahZoltu",
    "html_url": "https://github.com/MicahZoltu",
    "followers_url": "https://api.github.com/users/MicahZoltu/followers",
    "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
    "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
    "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
    "repos_url": "https://api.github.com/users/MicahZoltu/repos",
    "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/1469/reactions",
    "total_count": 18,
    "+1": 15,
    "-1": 0,
    "laugh": 0,
    "hooray": 3,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/1469/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/427114205",
    "html_url": "https://github.com/ethereum/EIPs/issues/1469#issuecomment-427114205",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1469",
    "id": 427114205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzExNDIwNQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T18:01:44Z",
    "updated_at": "2018-10-04T18:19:11Z",
    "author_association": "MEMBER",
    "body": "To reword the test case structure:\r\n1. Compiled asset (JSON format) from an EVM compiler (solc, Vyper, etc.). Uses the solc output format, but eventually could use the ethPM packaging spec.\r\n2. Source code (for reference only). Note: ethPM has an option to store source code and bytecode-sourcecode mappings.\r\n3. Expected results (YAML format). Contains a test case description and a listing of bugs that are expectes to be found. If no list is provided, expected result is that no bug is found.\r\n\r\nDo you agree with this rewording?\r\n\r\n---\r\n\r\nAlso, the naming scheme should differentiate on compiler, so different languages can be tried.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/427114205/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/427235111",
    "html_url": "https://github.com/ethereum/EIPs/issues/1469#issuecomment-427235111",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1469",
    "id": 427235111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzIzNTExMQ==",
    "user": {
      "login": "thec00n",
      "id": 6027459,
      "node_id": "MDQ6VXNlcjYwMjc0NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6027459?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thec00n",
      "html_url": "https://github.com/thec00n",
      "followers_url": "https://api.github.com/users/thec00n/followers",
      "following_url": "https://api.github.com/users/thec00n/following{/other_user}",
      "gists_url": "https://api.github.com/users/thec00n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thec00n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thec00n/subscriptions",
      "organizations_url": "https://api.github.com/users/thec00n/orgs",
      "repos_url": "https://api.github.com/users/thec00n/repos",
      "events_url": "https://api.github.com/users/thec00n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thec00n/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-05T03:24:55Z",
    "updated_at": "2018-10-05T08:22:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for your feedback @fubuloubu! I have reworded the paragraph based on your suggestions. I also realised that this should be worded more generically as we need to consider other languages and file formats in the future. \r\n\r\n> Test cases include crafted as well as real-world samples of vulnerable smart contracts. A single test case consists of three components:\r\n> 1. Source code of a smart contract sample; e.g. Solidity, Vyper, etc.  \r\n> 2. Compiled asset from an EVM compiler in machine readable format; e.g. JSON or ethPM.\r\n> 3. Test result configuration that describes which and how many instances of a weakness variant can be found in a given sample. The YAML schema for the proposed test result configuration is listed below.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/427235111/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/427450930",
    "html_url": "https://github.com/ethereum/EIPs/issues/1469#issuecomment-427450930",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1469",
    "id": 427450930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzQ1MDkzMA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-05T18:03:33Z",
    "updated_at": "2018-10-05T18:03:50Z",
    "author_association": "MEMBER",
    "body": "Let me also note that I think the primary result this EIP should seek to codify is in defining the \"test result configuration\" file and any supplemental files. ethPM packages are a great format for compiled assets; source code and execution paths may also make sense too.\r\n\r\nPerhaps the configuration file should reference the relative location of these supplemental files?\r\n\r\nThe specification of a common weakness classification may be out of scope for an EIP. Indeed, there may be multiple such classifications covering different topics. We should seek to make them highly interoperable so as to enable the consensus and colloboration of different benchmarks and classifications.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/427450930/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/427658349",
    "html_url": "https://github.com/ethereum/EIPs/issues/1469#issuecomment-427658349",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1469",
    "id": 427658349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzY1ODM0OQ==",
    "user": {
      "login": "thec00n",
      "id": 6027459,
      "node_id": "MDQ6VXNlcjYwMjc0NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6027459?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thec00n",
      "html_url": "https://github.com/thec00n",
      "followers_url": "https://api.github.com/users/thec00n/followers",
      "following_url": "https://api.github.com/users/thec00n/following{/other_user}",
      "gists_url": "https://api.github.com/users/thec00n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thec00n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thec00n/subscriptions",
      "organizations_url": "https://api.github.com/users/thec00n/orgs",
      "repos_url": "https://api.github.com/users/thec00n/repos",
      "events_url": "https://api.github.com/users/thec00n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thec00n/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-07T14:39:07Z",
    "updated_at": "2018-10-07T14:39:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fubuloubu It has become quickly apparent to me that with a growing set of test cases (or any security issue data set) it is very difficult to differentiate between weakness variants without a classification scheme as you create overlap and you get lost in the ambiguity of what different people call something. Also it’s helpful to discuss weakness classification based on micro-samples and real-world smart contracts where instances of a weakness occur together with description, mitigation strategies, references and how the weakness relates to the bigger picture of software security weaknesses -> CWE.  So I think the test cases and the classification scheme go hand in hand and doing one them in isolation would be less meaningful. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/427658349/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/463540040",
    "html_url": "https://github.com/ethereum/EIPs/issues/1469#issuecomment-463540040",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1469",
    "id": 463540040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzU0MDA0MA==",
    "user": {
      "login": "thec00n",
      "id": 6027459,
      "node_id": "MDQ6VXNlcjYwMjc0NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6027459?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thec00n",
      "html_url": "https://github.com/thec00n",
      "followers_url": "https://api.github.com/users/thec00n/followers",
      "following_url": "https://api.github.com/users/thec00n/following{/other_user}",
      "gists_url": "https://api.github.com/users/thec00n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thec00n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thec00n/subscriptions",
      "organizations_url": "https://api.github.com/users/thec00n/orgs",
      "repos_url": "https://api.github.com/users/thec00n/repos",
      "events_url": "https://api.github.com/users/thec00n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thec00n/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-14T08:37:02Z",
    "updated_at": "2019-02-14T08:37:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Update the EIP to reflect the changes proposed in https://github.com/SmartContractSecurity/SWC-registry/issues/168.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/463540040/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/491617390",
    "html_url": "https://github.com/ethereum/EIPs/issues/1469#issuecomment-491617390",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1469",
    "id": 491617390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTYxNzM5MA==",
    "user": {
      "login": "guylando",
      "id": 14879163,
      "node_id": "MDQ6VXNlcjE0ODc5MTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/14879163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guylando",
      "html_url": "https://github.com/guylando",
      "followers_url": "https://api.github.com/users/guylando/followers",
      "following_url": "https://api.github.com/users/guylando/following{/other_user}",
      "gists_url": "https://api.github.com/users/guylando/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guylando/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guylando/subscriptions",
      "organizations_url": "https://api.github.com/users/guylando/orgs",
      "repos_url": "https://api.github.com/users/guylando/repos",
      "events_url": "https://api.github.com/users/guylando/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guylando/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-12T18:19:06Z",
    "updated_at": "2019-05-12T19:53:44Z",
    "author_association": "NONE",
    "body": "Interesting idea, few comments:\r\n1. Why to create a new standard for this instead of adding smart contracts weaknesses as new CWEs?\r\n2. I think that several important properties which are missing for SWC are: how severe the weakness impact can be, how easy to fix is it, how easy to exploit is it.\r\n3. I think for it to be useful, it should be very clear about where is the weakness in the test case and the SWC should be organized in a very strict and well defined manner. For example here: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-130 it is not clear where is the weakness in the test case contract other than pointing in the source to a 41 minutes video which has 1-2 minutes relevant for the actual weakness. Here is another example where it is left for the reader to discover where is the weakness in the test cases: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-105 and also this weakness seems to be a combination of other weaknesses so I am not sure it deserves a SWC of its own. Also this one: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-106 is also a consequence of other weaknesses and I dont think it should be a new SWC. If it has a new SWC for destroying a contract then it should have been named in a more general way since selfdestruct can be triggered also by a delegatecall and other ways. Also seems SWC 100 and SWC 108 should be united, even the link inside SWC 108 talks about the SWC 100 weakness too and since state variables auto-generate a getter by the same name and when called externally are basically functions (also in SWC 108 contract again it is not clearly stated where is the weakness, line number for example or some comment in the code). The list goes on and many of the test cases are contracts from CTFs which make it not so trivial to identify the weakness in them which is probably not the goal in the SWC.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/491617390/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/493818868",
    "html_url": "https://github.com/ethereum/EIPs/issues/1469#issuecomment-493818868",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1469",
    "id": 493818868,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MzgxODg2OA==",
    "user": {
      "login": "thec00n",
      "id": 6027459,
      "node_id": "MDQ6VXNlcjYwMjc0NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6027459?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thec00n",
      "html_url": "https://github.com/thec00n",
      "followers_url": "https://api.github.com/users/thec00n/followers",
      "following_url": "https://api.github.com/users/thec00n/following{/other_user}",
      "gists_url": "https://api.github.com/users/thec00n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thec00n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thec00n/subscriptions",
      "organizations_url": "https://api.github.com/users/thec00n/orgs",
      "repos_url": "https://api.github.com/users/thec00n/repos",
      "events_url": "https://api.github.com/users/thec00n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thec00n/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-20T02:25:34Z",
    "updated_at": "2019-05-20T02:27:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "hey @guylando.\r\n\r\n1.) If you mean why we do not add the weaknesses to https://cwe.mitre.org/, then the answer is because there is no edit or create a PR button. We wanted to have something that can receive contributions from anyone in the community and that does not require anyone to go through some kind of onboarding process to get started. That does not mean of course that someone could not take the content in the SWC-registry and put it on https://cwe.mitre.org/. It's intentionally compatible with CWE and under a permissive MIT license. \r\n\r\n2.) There is a section for mitigation strategies `Remediation`. As for the risk related properties like severity and likelihood they should generally assigned when you find an instance of a particular weakness. You should use something like CVSS scoring to determine an objective risk value. Having said that there were discussions recently around having a \"risk range\" field that would indicate the CVSS categories that a particular weakness typically falls under. \r\n\r\n3.) \r\n\r\n`I think for it to be useful, it should be very clear about where is the weakness in the test case and the SWC should be organized in a very strict and well defined manner. For example here: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-130 it is not clear where is the weakness in the test case contract other than pointing in the source to a 41 minutes video which has 1-2 minutes relevant for the actual weakness. Here is another example where it is left for the reader to discover where is the weakness in the test cases:`\r\n\r\nIf you try `guess_the_number.sol` I think it becomes quickly clear what the issue is about. \r\n\r\n`https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-105 and also this weakness seems to be a combination of other weaknesses so I am not sure it deserves a SWC of its own. `\r\n\r\nGenerally I would agree that there should not be overlap between categories and this a strong consideration when merging new definitions. The reason why SWC-105 and SWC-106 have their own categories is because they represent very critical general negative properties that are always bad if you discover them in smart contracts. Therefore it seemed appropriate to assign them their own category. \r\n\r\nI appreciate your feedback and I hope I could clarify your questions. Feel free to open up issues/PRs on the SWC-registry repo to discuss questions and improvements in more detail.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/493818868/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/493908597",
    "html_url": "https://github.com/ethereum/EIPs/issues/1469#issuecomment-493908597",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1469",
    "id": 493908597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MzkwODU5Nw==",
    "user": {
      "login": "guylando",
      "id": 14879163,
      "node_id": "MDQ6VXNlcjE0ODc5MTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/14879163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guylando",
      "html_url": "https://github.com/guylando",
      "followers_url": "https://api.github.com/users/guylando/followers",
      "following_url": "https://api.github.com/users/guylando/following{/other_user}",
      "gists_url": "https://api.github.com/users/guylando/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guylando/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guylando/subscriptions",
      "organizations_url": "https://api.github.com/users/guylando/orgs",
      "repos_url": "https://api.github.com/users/guylando/repos",
      "events_url": "https://api.github.com/users/guylando/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guylando/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-20T09:26:48Z",
    "updated_at": "2019-05-20T09:35:15Z",
    "author_association": "NONE",
    "body": "1,2,3. https://cwe.mitre.org/ has more fields such as those I wrote, see for example: https://cwe.mitre.org/data/definitions/682.html\r\na. \"Likelihood Of Exploit\"\r\nb. \"Common Consequences\" + impacts.\r\nregarding the examples:\r\nc. \"Demonstrative Examples\" see the level of description, I believe it shouldn't be expected of everybody to waste their time trying \"guess_the_number.sol\" and instead providing better explanations for test cases will save a lot of people a lot of time.\r\n\r\nIf this is to be useful to everybody then the weaknesses should present not only the problem but also help prioritize dealing with it. Otherwise there will be hundreds of weaknesses without any information on how to prioritize and then you can't expect developers to go every time over EVERYTHING.\r\n\r\nThose are suggestions in improving the standard proposed in the first comment here to make it more useful and the specific examples are to demonstrate the reasoning.\r\n\r\nWould also suggest to add another field to the template which specifies the component affected to make it easier for developers to know which weaknesses are related to contract exploits and which are related to contract code presentation and which are related to dapps using the smart contract. For example the following weakness would not be considered an in-chain weakness which would make it easier to know when to deal with it (during contract code display/verification and not during contract development): https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-130",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/493908597/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986093281",
    "html_url": "https://github.com/ethereum/EIPs/issues/1469#issuecomment-986093281",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1469",
    "id": 986093281,
    "node_id": "IC_kwDOAq426M46xpbh",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-04T21:10:31Z",
    "updated_at": "2021-12-04T21:10:31Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986093281/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/990560487",
    "html_url": "https://github.com/ethereum/EIPs/issues/1469#issuecomment-990560487",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1469",
    "id": 990560487,
    "node_id": "IC_kwDOAq426M47CsDn",
    "user": {
      "login": "thec00n",
      "id": 6027459,
      "node_id": "MDQ6VXNlcjYwMjc0NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6027459?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thec00n",
      "html_url": "https://github.com/thec00n",
      "followers_url": "https://api.github.com/users/thec00n/followers",
      "following_url": "https://api.github.com/users/thec00n/following{/other_user}",
      "gists_url": "https://api.github.com/users/thec00n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thec00n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thec00n/subscriptions",
      "organizations_url": "https://api.github.com/users/thec00n/orgs",
      "repos_url": "https://api.github.com/users/thec00n/repos",
      "events_url": "https://api.github.com/users/thec00n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thec00n/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-10T02:51:28Z",
    "updated_at": "2021-12-10T02:51:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is an old EIP and not sure if people are using it but from what I understand it received the feedback it required. I think it can be merged. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/990560487/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/992050229",
    "html_url": "https://github.com/ethereum/EIPs/issues/1469#issuecomment-992050229",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1469",
    "id": 992050229,
    "node_id": "IC_kwDOAq426M47IXw1",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-13T02:20:05Z",
    "updated_at": "2021-12-13T02:20:05Z",
    "author_association": "MEMBER",
    "body": "This isn't an EIP, it is just an idea for an EIP.  To be an EIP, someone needs to submit a pull request to this repository that adds a new file.  Please see [EIP-1](https://eips.ethereum.org/EIPS/eip-1) for details on this process.  I'm going to close this for now, as ideas for EIPs should live at [Ethereum Magicians](https://ethereum-magicians.org/), and this is incredibly old.  If someone wants to turn this into an actual EIP I recommend opening a PR so it can start moving through the process to becoming an EIP.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/992050229/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
