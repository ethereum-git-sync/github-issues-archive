{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/804",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/804/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/804/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/804/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/804",
  "id": 283912633,
  "node_id": "MDU6SXNzdWUyODM5MTI2MzM=",
  "number": 804,
  "title": "ERC: Separating Token Balance from Voting Rights",
  "user": {
    "login": "pabloruiz55",
    "id": 526558,
    "node_id": "MDQ6VXNlcjUyNjU1OA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/526558?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pabloruiz55",
    "html_url": "https://github.com/pabloruiz55",
    "followers_url": "https://api.github.com/users/pabloruiz55/followers",
    "following_url": "https://api.github.com/users/pabloruiz55/following{/other_user}",
    "gists_url": "https://api.github.com/users/pabloruiz55/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pabloruiz55/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pabloruiz55/subscriptions",
    "organizations_url": "https://api.github.com/users/pabloruiz55/orgs",
    "repos_url": "https://api.github.com/users/pabloruiz55/repos",
    "events_url": "https://api.github.com/users/pabloruiz55/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pabloruiz55/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2017-12-21T15:14:48Z",
  "updated_at": "2022-01-02T08:13:49Z",
  "closed_at": "2022-01-02T08:13:49Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Preamble\r\n\r\n    EIP: <to be assigned>\r\n    Title: Token Voting Rights Separation\r\n    Author: Pablo Ruiz <me@pabloruiz.co>\r\n    Type: Standard Track\r\n    Category: ERC\r\n    Status: Draft\r\n    Created: 2017-12-21\r\n\r\n## Simple Summary\r\nThe proposed ERC20 add-on allows the decoupling of voting rights and token balance.\r\n\r\n## Abstract\r\nThe following discusses the implementation of a backwards-compatible ERC20 add-on to separate voting rights from token balance. The idea behind this implementation is to allow tokens to have their voting rights separated from the token balance, in order to prevent -mainly- exchanges from voting using someone else's tokens while they are \"deposited\" on their platform.\r\n\r\nThis implementation would be backwards-compatible so that accounts can still transfer their balance normally, but for an application using this token, voting rights won't be moved around unless explicitly done by the owner of the token balance. \r\nThe applications / smart contracts basing their voting process on the token, instead of using `balanceOf(address _owner)` to calculate the voting weight, they would use another function `votingRightsOf(address _owner)` that considers not only the token balance but also the voting rights held by the accounts.\r\n\r\n## Motivation\r\nIt is a common practice to use tokens for on-chain voting as a decision mechanism. Most applications / smart contracts using tokens as a means of governance base the decision-making process on having token holders vote according to the amount of tokens they own.\r\n\r\nEven though each application implements voting as they see fit, they base the voting process on how many tokens an account owns - or if an account has _any_ tokens-  by checking the `balanceOf(address _owner)`. \r\n\r\nThis creates at least one big problem related to exchanges. When people transact with a token exchange platform, they are transferring their tokens to said platform, and with them, they also transfer whatever voting rights they had on an application using those tokens. For example, this can lead to exchanges holding massive amounts of a particular token, to attack a platform by voting on key decision-making processes, if they wanted to impact on a particular token's value.\r\n\r\n## Specification\r\n## TokenWithVotingRights \r\n**NOTE:** The TokenWithVotingRights contract extends the ERC20 token specification, so it MUST inherit from an ERC20 contract.\r\n\r\n### Methods\r\n\r\n#### votingRightsOf\r\nReturns the voting rights a given account currently holds. An application wanting to base their voting process on tokens held, MUST use this method instead of `balanceOf()`. \r\n`votingRightsOf(address _owner)` returns the least between balances[_owner] and votingRights[_owner], which determines the account's voting weight.\r\n\r\n``` js\r\nfunction votingRightsOf(address _owner) public view returns (uint256)\r\n```\r\n\r\n#### transferVotingRights\r\nTransfers `_value` amount of voting rights to address `_to`, and MUST fire the TransferVotingRights event. \r\n\r\n``` js\r\nfunction transferVotingRights(address _to, uint256 _value) public returns (bool)\r\n```\r\n\r\n#### transferTokensAndVotingRights\r\nIt MUST call `transferVotingRights()` to transfer the specified voting rights.\r\nIt MUST also call the ERC20 `transfer(_to, _value)` method to transfer the tokens as well.\r\nIf the `_from` account does not have enough voting rights, all specified tokens are still transferred as well as whatever voting rights `_from` had.\r\n_For example, if `_from` had 1000 voting rights and 2000 tokens, transferring 1500 tokens will leave him with 0 voting rights and 500 tokens and `_to` will have 1000 voting rights and 1500 tokens_ \r\n\r\n``` js\r\nfunction transferTokensAndVotingRights(address _to, uint256 _value) public returns (bool)\r\n```\r\n\r\n### Events\r\n\r\n#### TransferVotingRights\r\nMUST trigger when voting rights are transferred, including zero value transfers.\r\n\r\nA token contract which creates new tokens SHOULD trigger a TransferVotingRights event with the _from address set to 0x0 when tokens and voting rights are created.\r\n\r\n``` js\r\nevent TransferVotingRights(address indexed from, address indexed to, uint256 value);\r\n```\r\n\r\n## Rationale\r\nThis token keeps track of not only the balance held by each account, but also of the voting rights held by each of them. Here's a common scenario:\r\n\r\n1. Company deploys Crowdsale and Token With Voting Rights contracts (TWVR for short) and assigns initial/total supply to the contract, as well as all the voting rights to it. These TWVR can be used for on-chain voting within Company's ecosystem. Company wants to prevent an exchange, which at some point might hold many of their tokens, from being able to participate in a voting process with those tokens. \r\n\r\n2. During the crowdsale period, Alice contributes enough funds to buy 1000 TWVR. These tokens are transferred to her by executing `transferTokensAndVotingRights(address _to, uint256 _value)` instead of `transfer(address _to, uint256 _value)`. \r\n**Alice now has a balance and voting rights of 1000.**\r\n\r\n3. Alice wants to transfer Bob 500 of her tokens. She has two options: a) Using `transfer(address _to, uint256 _value)` to send Bob the tokens without the voting rights; b) Using  `transferTokensAndVotingRights(address _to, uint256 _value)` to transfer the tokens AND an equal number of voting rights to Bob.\r\nBobs wants to be also part of the Company's decision process, so he asks Alice to transfer the tokens and voting rights.\r\n**Both Alice and Bob now have 500 tokens and 500 voting rights.**\r\n\r\n4. Alice wants to sell 400 of her remaining tokens on a token exchange platform (EtherD). To do so, she would just do what she always does. She enters the platform and transfers the tokens to EtherD (which SHOULD be calling the token's `transfer(address _to, uint256 _value)` function as usual. This would transfer 400 tokens out of Alice's balance, but she would still hold her 500 voting rights.\r\n**Alice now has a balance of 100 and 500 voting rights.**\r\n\r\n5. John wants to buy some tokens but he doesn't know anyone that wants to sell them to him, so he goes to EtherD exchange and buys 300 tokens. \r\nJohn now has a balance of 300 and 0 voting rights, since these tokens were sold and transferred by an account that didn't have any voting rights.\r\n\r\n5. Company needs to hold a voting process. Alice, Bob and John cast their votes. Company needs to check what each account's voting weight is. Instead of relying on `balanceOf(address _owner)` the company MUST use TWVR's `votingRightsOf(address _owner)` which returns whichever is the least between the token balance and the voting rights.\r\n**Bob's vote weight is 500 since he has 500 voting rights and he owns the 500 tokens to cast such voting weight.\r\nAlice vote weight is 100 since, even if she has 500 voting rights, she currently only holds 100 tokens.\r\nJohn's vote weight is 0 since, even if he has 300 tokens, he has 0 voting rights.**\r\n\r\n_As a side note, in the example above the Company could also extend the TWVR to only allow voting rights to be transferred from the crowdsale to the original contributors (By allowing the usage of `transferTokensAndVotingRights(address _to, uint256 _value)` only during the crowdsale period). Then, the only accounts able to vote would be the people that participated in the crowdsale (as long as they still hold the tokens) and prevent voting rights to be distributed among new accounts._\r\n\r\n## Implementation\r\nExample implementation:\r\nhttps://github.com/pabloruiz55/TokenWithVotingRights\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/804/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/804/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/354185453",
    "html_url": "https://github.com/ethereum/EIPs/issues/804#issuecomment-354185453",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/804",
    "id": 354185453,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDE4NTQ1Mw==",
    "user": {
      "login": "clesaege",
      "id": 8873352,
      "node_id": "MDQ6VXNlcjg4NzMzNTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8873352?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/clesaege",
      "html_url": "https://github.com/clesaege",
      "followers_url": "https://api.github.com/users/clesaege/followers",
      "following_url": "https://api.github.com/users/clesaege/following{/other_user}",
      "gists_url": "https://api.github.com/users/clesaege/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/clesaege/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/clesaege/subscriptions",
      "organizations_url": "https://api.github.com/users/clesaege/orgs",
      "repos_url": "https://api.github.com/users/clesaege/repos",
      "events_url": "https://api.github.com/users/clesaege/events{/privacy}",
      "received_events_url": "https://api.github.com/users/clesaege/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-27T22:14:07Z",
    "updated_at": "2017-12-27T22:14:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think it's easier to make a voting right token separated from the main one for the cases you described.\r\nAbout token with voting rights, you can look at the Minime https://github.com/Giveth/minime/blob/master/contracts/MiniMeToken.sol where you could fork the token to have a vote token.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/354185453/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/357659823",
    "html_url": "https://github.com/ethereum/EIPs/issues/804#issuecomment-357659823",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/804",
    "id": 357659823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzY1OTgyMw==",
    "user": {
      "login": "stevenh512",
      "id": 110500,
      "node_id": "MDQ6VXNlcjExMDUwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/110500?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevenh512",
      "html_url": "https://github.com/stevenh512",
      "followers_url": "https://api.github.com/users/stevenh512/followers",
      "following_url": "https://api.github.com/users/stevenh512/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevenh512/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevenh512/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevenh512/subscriptions",
      "organizations_url": "https://api.github.com/users/stevenh512/orgs",
      "repos_url": "https://api.github.com/users/stevenh512/repos",
      "events_url": "https://api.github.com/users/stevenh512/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevenh512/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-15T11:43:04Z",
    "updated_at": "2018-01-15T11:46:22Z",
    "author_association": "NONE",
    "body": "The problem with this is, if I buy a large amount of your tokens at ICO and sell them immediately, I would retain my voting rights as if I still owned those tokens. Meanwhile, the person or people who just bought a million tokens from me get no voting rights at all unless I voluntarily transfer rights to them. If all of Ethereum's users were as tech savvy as the people here on GitHub writing code this might not be a problem, but I see questions every day on Reddit about the simplest of things (like \"How do I transfer tokens from MetaMask to MyEtherWallet?\"). I can't imagine something like this not being used by a malicious actor to scam a lot of people. I think using something like MiniMe, where you can either fork the token into a voting token or just query `balanceOfAt` at a certain block number is probably a better solution to the voting rights problem.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/357659823/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/397580179",
    "html_url": "https://github.com/ethereum/EIPs/issues/804#issuecomment-397580179",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/804",
    "id": 397580179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzU4MDE3OQ==",
    "user": {
      "login": "AnthonyAkentiev",
      "id": 1623033,
      "node_id": "MDQ6VXNlcjE2MjMwMzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1623033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AnthonyAkentiev",
      "html_url": "https://github.com/AnthonyAkentiev",
      "followers_url": "https://api.github.com/users/AnthonyAkentiev/followers",
      "following_url": "https://api.github.com/users/AnthonyAkentiev/following{/other_user}",
      "gists_url": "https://api.github.com/users/AnthonyAkentiev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AnthonyAkentiev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AnthonyAkentiev/subscriptions",
      "organizations_url": "https://api.github.com/users/AnthonyAkentiev/orgs",
      "repos_url": "https://api.github.com/users/AnthonyAkentiev/repos",
      "events_url": "https://api.github.com/users/AnthonyAkentiev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AnthonyAkentiev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-15T10:26:27Z",
    "updated_at": "2018-06-15T10:26:27Z",
    "author_association": "NONE",
    "body": "@pabloruiz55 Your proposal is a compilcation. Instead, imho, it's better to use separate token with 'governance' rights only. This token will be ERC20-compatible and will not require any changes to wallets and software. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/397580179/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/418236013",
    "html_url": "https://github.com/ethereum/EIPs/issues/804#issuecomment-418236013",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/804",
    "id": 418236013,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODIzNjAxMw==",
    "user": {
      "login": "chaitanyapotti",
      "id": 1688380,
      "node_id": "MDQ6VXNlcjE2ODgzODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1688380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chaitanyapotti",
      "html_url": "https://github.com/chaitanyapotti",
      "followers_url": "https://api.github.com/users/chaitanyapotti/followers",
      "following_url": "https://api.github.com/users/chaitanyapotti/following{/other_user}",
      "gists_url": "https://api.github.com/users/chaitanyapotti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chaitanyapotti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chaitanyapotti/subscriptions",
      "organizations_url": "https://api.github.com/users/chaitanyapotti/orgs",
      "repos_url": "https://api.github.com/users/chaitanyapotti/repos",
      "events_url": "https://api.github.com/users/chaitanyapotti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chaitanyapotti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-04T04:13:16Z",
    "updated_at": "2018-09-04T04:13:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "We are currently developing a membership token which is used as a proof of membership. It decouples voting rights from token balance. \r\nThe owner of an organization is free to assign/revoke memberships.\r\nUsers can request for membership to govern. They can only participate in polls if they have a min amt of tokens along with membership token.\r\nDuring Governance, several types of polls can be used which check for the existence of voting rights for a particular poll using a single/combination of membership tokens.\r\nThere is game-theoretic security at stake (If he acts irrationally, people wouldn't invest in his token). \r\nYou can find more information [here](https://github.com/ethereum/EIPs/issues/1261)\r\nFurther discussion/comments are welcome.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/418236013/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997341481",
    "html_url": "https://github.com/ethereum/EIPs/issues/804#issuecomment-997341481",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/804",
    "id": 997341481,
    "node_id": "IC_kwDOAq426M47cjkp",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-19T07:11:34Z",
    "updated_at": "2021-12-19T07:11:34Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997341481/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003679153",
    "html_url": "https://github.com/ethereum/EIPs/issues/804#issuecomment-1003679153",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/804",
    "id": 1003679153,
    "node_id": "IC_kwDOAq426M470u2x",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-02T08:13:48Z",
    "updated_at": "2022-01-02T08:13:48Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003679153/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
