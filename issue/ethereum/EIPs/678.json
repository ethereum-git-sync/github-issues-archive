{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/678",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/678/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/678/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/678/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/678",
  "id": 245860586,
  "node_id": "MDU6SXNzdWUyNDU4NjA1ODY=",
  "number": 678,
  "title": "On EIP 86 and EIP 648: account abstraction, DoS vectors, and parallelizability",
  "user": {
    "login": "cdetrio",
    "id": 997681,
    "node_id": "MDQ6VXNlcjk5NzY4MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/997681?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cdetrio",
    "html_url": "https://github.com/cdetrio",
    "followers_url": "https://api.github.com/users/cdetrio/followers",
    "following_url": "https://api.github.com/users/cdetrio/following{/other_user}",
    "gists_url": "https://api.github.com/users/cdetrio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cdetrio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cdetrio/subscriptions",
    "organizations_url": "https://api.github.com/users/cdetrio/orgs",
    "repos_url": "https://api.github.com/users/cdetrio/repos",
    "events_url": "https://api.github.com/users/cdetrio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cdetrio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2017-07-26T21:29:56Z",
  "updated_at": "2022-01-16T00:44:01Z",
  "closed_at": "2022-01-16T00:44:01Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "One of the outstanding questions about EIP 86 (and earlier, EIP 101) is how miners can safely process NULL SENDER transactions (i.e. transactions sent from abstracted accounts) without opening up DoS attack vectors.[1,2,3] One possible answer, outlined in EIP 86, is the idea that miners employ a strategy of only processing NULL SENDER transactions to whitelisted \"forwarding contracts\", where only contracts that are known to be safe against DoS attacks, perhaps by static analysis or some other method, would be added to the whitelist.\r\n\r\nIn another proposal, EIP 648 (and earlier, EIP 105) defines transactions that specify activity ranges. This was proposed a means to parallelize transaction processing. But requiring transactions to restrict their activity ranges also provides a different solution to the outstanding EIP 86 miner strategy question.\r\n\r\nTo see how the parallelization in (EIP 105 / EIP 648) solves the miner strategy question of (EIP 101 / EIP 86), first let's look at how the DoS attack vector works and consider why traditional transactions, i.e. transactions that originate from non-contract accounts or Externally Owned Accounts (EOAs), are safe for miners to process.\r\n\r\nThe DoS vector works by overloading the pending pool with transactions that are valid when initially received by miners, but then later become invalid, so that a miner wastes resources attempting to include them in a pending block. When attacked, a miner could spend the entire block period (15 seconds on average) attempting to include invalid pending transactions. By the time the pending block is found, few or no valid transactions have been included. \r\n\r\nSo what makes it safe for miners to include traditional transactions? The key property, I think, is that when a pending transaction is valid (i.e. the sending account has a balance, and the tx is signed with the correct nonce; these two properties ensure that the miner will earn a gas fee), then it can be expected to remain valid. When new pending transactions arrive, or when a new block arrives, this expectation of validity may change for some of the transactions (i.e. other transactions from the same sending account), but the majority of pending transactions remain valid.\r\n\r\nFor example, take a sequence of nine pending transactions sent from a single account, with nonces 0x1 through 0x9. Now suppose the account sends a new pending tx, with duplicate nonce 0x2, that spends all remaining balance. Then the tx's with nonces 0x3 through 0x9 will become invalid and can be evicted from the pending pool. But all other tx's (i.e. those from other sending accounts) remain valid.\r\n\r\nIn contrast, with EIP 86 (NULL SENDER) transactions the ability for an account to pay the gas fee depends on not just a subset of the pending transactions, but on all pending transactions, since any pending transaction may affect the gas-paying account. This is the root issue which prevents miners from safely processing NULL SENDER transactions to generic (non-whitelisted) contracts. Attempting to censor traditional transactions by blacklisting a set of contract addresses or code hashes is also a DoS vector, for the same reason.[4]\r\n\r\nWith EIP 648, transactions specify an \"activity range\" of account addresses, which restricts the accounts a transaction can affect.[5,6] This restriction allows miners to safely include pending transactions with sets of disjoint (non-overlapping) ranges, since a new pending transaction with one activity range cannot affect the validity of pending transactions with other activity ranges. When activity ranges are not entirely disjoint but overlapping at some addresses, they form a dependency graph or \"serialization graph\". When a new block arrives and miners need to construct a new pending block, they check this dependency graph. Only those pending transactions with dependent activity ranges need to be reprocessed to check if they are still valid. All non-overlapping pending transactions are independent and remain valid, satisfying the key safety property.\r\n\r\nTaking a dependency graph view of the traditional pending transaction pool, we can see that the reason traditional transactions are not a DoS vector (so long as the miner only cares that they earn gas fees, and does not attempt to censor which contracts the tx interacts with) is that transactions from different accounts are non-overlapping in the dependency graph. A sequence of pending transactions with increasing nonces from the same account forms a \"dependency chain\" that is independent of transactions from all other accounts; this is why they are safe for miners to process.\r\n\r\nIn summary, with (EIP 648 / EIP 105) miners know the activity ranges of all transactions. With this knowledge they can analyze the dependency graph of the pending pool, and this allows them to safely process (EIP 86 / EIP 101) transactions from abstracted accounts.\r\n\r\n1. https://github.com/ethereum/EIPs/issues/86 - Proposed initial abstraction changes for Metropolis (EIP 86 issue)\r\n2. https://github.com/ethereum/EIPs/pull/208 - Abstraction of transaction origin and signature (EIP 86 pull request)\r\n3. https://github.com/ethereum/EIPs/blob/master/EIPS/eip-101.md - Serenity Currency and Crypto Abstraction\r\n4. http://hackingdistributed.com/2016/06/28/ethereum-soft-fork-dos-vector/ - Ethereum's DAO Wars Soft Fork is a Potential DoS Vector\r\n5. https://github.com/ethereum/EIPs/issues/53 - EIP 105 (Serenity): Binary sharding plus contract calling semantics\r\n6. https://github.com/ethereum/EIPs/issues/648 - Easy parallelizability\r\n\r\n\r\n",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/678/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/678/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/352783808",
    "html_url": "https://github.com/ethereum/EIPs/issues/678#issuecomment-352783808",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/678",
    "id": 352783808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mjc4MzgwOA==",
    "user": {
      "login": "cdetrio",
      "id": 997681,
      "node_id": "MDQ6VXNlcjk5NzY4MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/997681?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdetrio",
      "html_url": "https://github.com/cdetrio",
      "followers_url": "https://api.github.com/users/cdetrio/followers",
      "following_url": "https://api.github.com/users/cdetrio/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdetrio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdetrio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdetrio/subscriptions",
      "organizations_url": "https://api.github.com/users/cdetrio/orgs",
      "repos_url": "https://api.github.com/users/cdetrio/repos",
      "events_url": "https://api.github.com/users/cdetrio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdetrio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T15:01:36Z",
    "updated_at": "2017-12-19T15:01:36Z",
    "author_association": "MEMBER",
    "body": "Discussion of account abstraction proposals has continued here https://ethresear.ch/t/tradeoffs-in-account-abstraction-proposals/263",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/352783808/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003642779",
    "html_url": "https://github.com/ethereum/EIPs/issues/678#issuecomment-1003642779",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/678",
    "id": 1003642779,
    "node_id": "IC_kwDOAq426M470l-b",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-02T00:42:48Z",
    "updated_at": "2022-01-02T00:42:48Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003642779/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1013783601",
    "html_url": "https://github.com/ethereum/EIPs/issues/678#issuecomment-1013783601",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/678",
    "id": 1013783601,
    "node_id": "IC_kwDOAq426M48bRwx",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-16T00:44:00Z",
    "updated_at": "2022-01-16T00:44:00Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1013783601/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
