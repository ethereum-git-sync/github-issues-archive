{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/3055",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/3055/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/3055/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/3055/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/3055",
  "id": 724028713,
  "node_id": "MDU6SXNzdWU3MjQwMjg3MTM=",
  "number": 3055,
  "title": "ERC: transferFrom Token Standard",
  "user": {
    "login": "gkucmierz",
    "id": 739084,
    "node_id": "MDQ6VXNlcjczOTA4NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/739084?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gkucmierz",
    "html_url": "https://github.com/gkucmierz",
    "followers_url": "https://api.github.com/users/gkucmierz/followers",
    "following_url": "https://api.github.com/users/gkucmierz/following{/other_user}",
    "gists_url": "https://api.github.com/users/gkucmierz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gkucmierz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gkucmierz/subscriptions",
    "organizations_url": "https://api.github.com/users/gkucmierz/orgs",
    "repos_url": "https://api.github.com/users/gkucmierz/repos",
    "events_url": "https://api.github.com/users/gkucmierz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gkucmierz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 16,
  "created_at": "2020-10-18T15:13:35Z",
  "updated_at": "2021-11-07T02:29:21Z",
  "closed_at": "2021-11-07T02:29:21Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Preamble\r\n```\r\nTitle: transferFrom Token Standard\r\nAuthor: Grzegorz Kucmierz <gkucmierz@gmail.com>\r\nType: Informational\r\nCategory: ERC\r\nStatus: Draft\r\nCreated: 2020-10-18\r\nRequires: ERC20\r\n```\r\n\r\n## Simple Summary\r\nAllow tokens to be transferred from address, that have no ETH in it to cover gas for transaction, but it provides off-chain signature that is allowing transfer for specified `amount` and specified `recipient`.\r\n\r\n## Abstract\r\nThis adds a new function to [ERC20](https://github.com/ethereum/EIPs/issues/20) token contracts, `transferFrom`* which can be called to transfer tokens from another address.\r\n\r\n* This `transferFrom` have different signature than original `ERC20` `transferFrom`\r\n\r\n```solidity\r\nfunction transferFrom(address, uint256, uint8, bytes32, bytes32) returns (bool);\r\n```\r\n\r\n## Motivation\r\nUsing this function it is possible to deposit tokens to contract, and also contract can react to this transfer within one transaction.\r\nAlso single address is able to make transfer from any other address by providing additional signature, that confirms validity of this transfer.\r\n\r\n## Specification\r\n### Token\r\n#### transferFrom\r\n```solidity\r\nmapping (address => mapping (address => uint256)) public nonceOf;\r\n  \r\nfunction transferFrom(address recipient, uint256 amount, uint256 nonce, uint8 _v, bytes32 _r, bytes32 _s) public returns (bool) {\r\n    bytes32 hash = keccak256(abi.encodePacked('transferFrom', recipient, amount, nonce));\r\n    address from = ecrecover(hash, _v, _r, _s);\r\n    return _transfer(from, recipient, amount, nonce);\r\n}\r\n```\r\n\r\n`transferFrom` transfers tokens to `from`, which is calculated using `ecrecover`\r\nWarning about this function is that created signature will be valid forever, so there should be another function also that limits signature validity to only specified block\r\n\r\n#### transferFromUntil\r\n```solidity\r\nfunction transferFromUntil(address recipient, uint256 amount, uint256 untilBlock, uint256 nonce, uint8 _v, bytes32 _r, bytes32 _s) public returns (bool) {\r\n    require(untilBlock <= block.number);\r\n    bytes32 hash = keccak256(abi.encodePacked('transferFromUntil', recipient, amount, nonce, untilBlock));\r\n    address from = ecrecover(hash, _v, _r, _s);\r\n    return _transfer(from, recipient, amount, nonce);\r\n}\r\n```\r\n\r\n## Backwards Compatibility\r\nThis proposal is backwards compatible for all ERC20 tokens and contracts. New tokens and contracts moving forward can implement the `transferFrom` functionality.\r\n\r\n## Implementation\r\n\r\n```solidity\r\ncontract ERCTransferFrom is ERC20 {\r\n  mapping (address => mapping (address => uint256)) public nonceOf;\r\n  \r\n  function _transfer(address from, address recipient, uint256 amount, uint256 nonce) private returns (bool) {\r\n    uint256 nextNonce = nonceOf[from][recipient] + 1;\r\n    require(nonce == nextNonce);\r\n    bool success = super._transfer(from, recipient, amount);\r\n    if (success) nonceOf[from][recipient] = nextNonce;\r\n    return success;\r\n  }\r\n\r\n  function transferFrom(address recipient, uint256 amount, uint256 nonce, uint8 _v, bytes32 _r, bytes32 _s) public returns (bool) {\r\n    bytes32 hash = keccak256(abi.encodePacked('transferFrom', recipient, amount, nonce));\r\n    address from = ecrecover(hash, _v, _r, _s);\r\n    return _transfer(from, recipient, amount, nonce);\r\n  }\r\n\r\n  function transferFromUntil(address recipient, uint256 amount, uint256 untilBlock, uint256 nonce, uint8 _v, bytes32 _r, bytes32 _s) public returns (bool) {\r\n    require(block.number <= untilBlock);\r\n    bytes32 hash = keccak256(abi.encodePacked('transferFromUntil', recipient, amount, nonce, untilBlock));\r\n    address from = ecrecover(hash, _v, _r, _s);\r\n    return _transfer(from, recipient, amount, nonce);\r\n  }\r\n}\r\n```",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/3055/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/3055/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/711211546",
    "html_url": "https://github.com/ethereum/EIPs/issues/3055#issuecomment-711211546",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/3055",
    "id": 711211546,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMTIxMTU0Ng==",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2020-10-18T15:14:15Z",
    "updated_at": "2020-10-18T15:14:15Z",
    "author_association": "NONE",
    "body": "Since this is your first issue, we kindly remind you to check out [EIP-1](https://eips.ethereum.org/EIPS/eip-1) for guidance.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/711211546/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/711291174",
    "html_url": "https://github.com/ethereum/EIPs/issues/3055#issuecomment-711291174",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/3055",
    "id": 711291174,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMTI5MTE3NA==",
    "user": {
      "login": "zemse",
      "id": 22412996,
      "node_id": "MDQ6VXNlcjIyNDEyOTk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/22412996?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zemse",
      "html_url": "https://github.com/zemse",
      "followers_url": "https://api.github.com/users/zemse/followers",
      "following_url": "https://api.github.com/users/zemse/following{/other_user}",
      "gists_url": "https://api.github.com/users/zemse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zemse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zemse/subscriptions",
      "organizations_url": "https://api.github.com/users/zemse/orgs",
      "repos_url": "https://api.github.com/users/zemse/repos",
      "events_url": "https://api.github.com/users/zemse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zemse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-18T17:01:34Z",
    "updated_at": "2020-10-18T17:01:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is there any security consideration for replay protection?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/711291174/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/711336983",
    "html_url": "https://github.com/ethereum/EIPs/issues/3055#issuecomment-711336983",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/3055",
    "id": 711336983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMTMzNjk4Mw==",
    "user": {
      "login": "gkucmierz",
      "id": 739084,
      "node_id": "MDQ6VXNlcjczOTA4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/739084?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gkucmierz",
      "html_url": "https://github.com/gkucmierz",
      "followers_url": "https://api.github.com/users/gkucmierz/followers",
      "following_url": "https://api.github.com/users/gkucmierz/following{/other_user}",
      "gists_url": "https://api.github.com/users/gkucmierz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gkucmierz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gkucmierz/subscriptions",
      "organizations_url": "https://api.github.com/users/gkucmierz/orgs",
      "repos_url": "https://api.github.com/users/gkucmierz/repos",
      "events_url": "https://api.github.com/users/gkucmierz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gkucmierz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-18T17:57:32Z",
    "updated_at": "2020-10-18T17:57:32Z",
    "author_association": "NONE",
    "body": "Design of this function do not allow to replay attack because in case when contract is transfering tokens to itself or other contract it controls flow of code. And no other contract code is run like for example in `ERC 223` or `ERC 667`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/711336983/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/711351096",
    "html_url": "https://github.com/ethereum/EIPs/issues/3055#issuecomment-711351096",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/3055",
    "id": 711351096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMTM1MTA5Ng==",
    "user": {
      "login": "zemse",
      "id": 22412996,
      "node_id": "MDQ6VXNlcjIyNDEyOTk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/22412996?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zemse",
      "html_url": "https://github.com/zemse",
      "followers_url": "https://api.github.com/users/zemse/followers",
      "following_url": "https://api.github.com/users/zemse/following{/other_user}",
      "gists_url": "https://api.github.com/users/zemse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zemse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zemse/subscriptions",
      "organizations_url": "https://api.github.com/users/zemse/orgs",
      "repos_url": "https://api.github.com/users/zemse/repos",
      "events_url": "https://api.github.com/users/zemse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zemse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-18T18:15:10Z",
    "updated_at": "2020-10-18T18:15:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh, I think your reply sounds for re-entrancy explanation, pls correct me if I'm wrong. I meant to say when someone has the signature, they could simply call the function multiple times. Just in case, you can see how this is handelled by ethereum in the protocol level https://medium.com/swlh/ethereum-series-understanding-nonce-3858194b39bf.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/711351096/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/711354472",
    "html_url": "https://github.com/ethereum/EIPs/issues/3055#issuecomment-711354472",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/3055",
    "id": 711354472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMTM1NDQ3Mg==",
    "user": {
      "login": "gkucmierz",
      "id": 739084,
      "node_id": "MDQ6VXNlcjczOTA4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/739084?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gkucmierz",
      "html_url": "https://github.com/gkucmierz",
      "followers_url": "https://api.github.com/users/gkucmierz/followers",
      "following_url": "https://api.github.com/users/gkucmierz/following{/other_user}",
      "gists_url": "https://api.github.com/users/gkucmierz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gkucmierz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gkucmierz/subscriptions",
      "organizations_url": "https://api.github.com/users/gkucmierz/orgs",
      "repos_url": "https://api.github.com/users/gkucmierz/repos",
      "events_url": "https://api.github.com/users/gkucmierz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gkucmierz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-18T18:19:15Z",
    "updated_at": "2020-10-19T11:51:39Z",
    "author_association": "NONE",
    "body": "You are correct, it is not considered here, but it should be.\r\n\r\nI have an idea how to solve this problem, but there may be better solution.\r\n\r\nBasic idea is to keep in token contract all hashes that was already executed.\r\n\r\n```solidity\r\nmapping (bytes32 => bool) transferred;\r\n  \r\nfunction transferFrom(address recipient, uint256 amount, uint8 _v, bytes32 _r, bytes32 _s) public returns (bool) {\r\n    bytes32 hash = keccak256(abi.encodePacked('transferFrom', recipient, amount));\r\n    require(!transferred[hash]);\r\n    address from = ecrecover(hash, _v, _r, _s);\r\n    bool success = super._transfer(from, recipient, amount);\r\n    transferred[hash] = success;\r\n    return success;\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/711354472/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/712005035",
    "html_url": "https://github.com/ethereum/EIPs/issues/3055#issuecomment-712005035",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/3055",
    "id": 712005035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjAwNTAzNQ==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-19T10:29:07Z",
    "updated_at": "2020-10-19T10:29:07Z",
    "author_association": "MEMBER",
    "body": "That would prevent the sender from sending the same amount of tokens to the same recipient twice in a row.\r\n\r\nConsider adding a `nonce` variable instead to handle replay attacks in a similar way as to how Ethereum handles them.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/712005035/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/712103471",
    "html_url": "https://github.com/ethereum/EIPs/issues/3055#issuecomment-712103471",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/3055",
    "id": 712103471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjEwMzQ3MQ==",
    "user": {
      "login": "gkucmierz",
      "id": 739084,
      "node_id": "MDQ6VXNlcjczOTA4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/739084?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gkucmierz",
      "html_url": "https://github.com/gkucmierz",
      "followers_url": "https://api.github.com/users/gkucmierz/followers",
      "following_url": "https://api.github.com/users/gkucmierz/following{/other_user}",
      "gists_url": "https://api.github.com/users/gkucmierz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gkucmierz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gkucmierz/subscriptions",
      "organizations_url": "https://api.github.com/users/gkucmierz/orgs",
      "repos_url": "https://api.github.com/users/gkucmierz/repos",
      "events_url": "https://api.github.com/users/gkucmierz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gkucmierz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-19T11:50:39Z",
    "updated_at": "2020-10-27T11:24:50Z",
    "author_association": "NONE",
    "body": "I fixed this by adding additional `nonce` to hash function.\r\n\r\n```solidity\r\ncontract ERCTransferFrom is ERC20 {\r\n  mapping (bytes32 => bool) transferred;\r\n  \r\n  function _transfer(address recipient, uint256 amount, bytes32 hash, uint8 _v, bytes32 _r, bytes32 _s) private returns (bool) {\r\n    require(!transferred[hash]);\r\n    address from = ecrecover(hash, _v, _r, _s);\r\n    bool success = super._transfer(from, recipient, amount);\r\n    transferred[hash] = success;\r\n    return success;\r\n  }\r\n\r\n  function transferFrom(address recipient, uint256 amount, uint256 nonce, uint8 _v, bytes32 _r, bytes32 _s) public returns (bool) {\r\n    bytes32 hash = keccak256(abi.encodePacked('transferFrom', recipient, amount, nonce));\r\n    return _transfer(recipient, amount, hash, _v, _r, _s);\r\n  }\r\n\r\n  function transferFromUntil(address recipient, uint256 amount, uint256 untilBlock, uint256 nonce, uint8 _v, bytes32 _r, bytes32 _s) public returns (bool) {\r\n    require(block.number <= untilBlock);\r\n    bytes32 hash = keccak256(abi.encodePacked('transferFromUntil', recipient, amount, untilBlock, nonce));\r\n    return _transfer(recipient, amount, hash, _v, _r, _s);\r\n  }\r\n}\r\n```\r\n\r\nThis nonce needs to be handled outside of contract.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/712103471/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/712107660",
    "html_url": "https://github.com/ethereum/EIPs/issues/3055#issuecomment-712107660",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/3055",
    "id": 712107660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjEwNzY2MA==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-19T11:59:13Z",
    "updated_at": "2020-10-19T11:59:13Z",
    "author_association": "MEMBER",
    "body": "If someone decides to move forward with this as an EIP PR, I recommend adjusting the specification to only specify the interface and define what the parameters represent.  You can move the implementation into an `## Implementations` section if you think a reference implementation adds additional value.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/712107660/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/712110773",
    "html_url": "https://github.com/ethereum/EIPs/issues/3055#issuecomment-712110773",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/3055",
    "id": 712110773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjExMDc3Mw==",
    "user": {
      "login": "gkucmierz",
      "id": 739084,
      "node_id": "MDQ6VXNlcjczOTA4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/739084?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gkucmierz",
      "html_url": "https://github.com/gkucmierz",
      "followers_url": "https://api.github.com/users/gkucmierz/followers",
      "following_url": "https://api.github.com/users/gkucmierz/following{/other_user}",
      "gists_url": "https://api.github.com/users/gkucmierz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gkucmierz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gkucmierz/subscriptions",
      "organizations_url": "https://api.github.com/users/gkucmierz/orgs",
      "repos_url": "https://api.github.com/users/gkucmierz/repos",
      "events_url": "https://api.github.com/users/gkucmierz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gkucmierz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-19T12:05:05Z",
    "updated_at": "2020-10-27T11:24:32Z",
    "author_association": "NONE",
    "body": "I removed `transferred` hashmap as you suggested above.\r\n\r\n```solidity\r\ncontract ERCTransferFrom is ERC20 {\r\n  mapping (address => mapping (address => uint256)) public nonceOf;\r\n  \r\n  function _transfer(address from, address recipient, uint256 amount, uint256 nonce) private returns (bool) {\r\n    uint256 nextNonce = nonceOf[from][recipient] + 1;\r\n    require(nonce == nextNonce);\r\n    bool success = super._transfer(from, recipient, amount);\r\n    if (success) nonceOf[from][recipient] = nextNonce;\r\n    return success;\r\n  }\r\n\r\n  function transferFrom(address recipient, uint256 amount, uint256 nonce, uint8 _v, bytes32 _r, bytes32 _s) public returns (bool) {\r\n    bytes32 hash = keccak256(abi.encodePacked('transferFrom', recipient, amount, nonce));\r\n    address from = ecrecover(hash, _v, _r, _s);\r\n    return _transfer(from, recipient, amount, nonce);\r\n  }\r\n\r\n  function transferFromUntil(address recipient, uint256 amount, uint256 untilBlock, uint256 nonce, uint8 _v, bytes32 _r, bytes32 _s) public returns (bool) {\r\n    require(block.number <= untilBlock);\r\n    bytes32 hash = keccak256(abi.encodePacked('transferFromUntil', recipient, amount, nonce, untilBlock));\r\n    address from = ecrecover(hash, _v, _r, _s);\r\n    return _transfer(from, recipient, amount, nonce);\r\n  }\r\n}\r\n```\r\n\r\nIn this implementation `nonce` handles replay-attack and also allow make transactions with the same `amount` and `recipient`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/712110773/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/719986339",
    "html_url": "https://github.com/ethereum/EIPs/issues/3055#issuecomment-719986339",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/3055",
    "id": 719986339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTk4NjMzOQ==",
    "user": {
      "login": "zemse",
      "id": 22412996,
      "node_id": "MDQ6VXNlcjIyNDEyOTk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/22412996?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zemse",
      "html_url": "https://github.com/zemse",
      "followers_url": "https://api.github.com/users/zemse/followers",
      "following_url": "https://api.github.com/users/zemse/following{/other_user}",
      "gists_url": "https://api.github.com/users/zemse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zemse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zemse/subscriptions",
      "organizations_url": "https://api.github.com/users/zemse/orgs",
      "repos_url": "https://api.github.com/users/zemse/repos",
      "events_url": "https://api.github.com/users/zemse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zemse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-31T20:44:44Z",
    "updated_at": "2020-10-31T23:31:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have a suggestion to rename it into `transferBySig`. This way, the contract stays `ERC20`, along with an added functionality. Also to classify between `transferBySig` and `transferFromBySig`, as `transferFromBySig` requires `approve` done. Though both could be added.\r\n\r\nIn this ERC20 extension, you could simply add these 4 methods into the `ERC3055` interface:\r\n\r\n- `transferBySig`\r\n- `transferFromBySig`\r\n- `transferBySigUntil`\r\n- `transferFromBySigUntil`\r\n\r\nEdit: It's true that this transferFrom would have a different signature, but I think it would be preferable to have a different reasonable name if possible because it would prevent using bracket syntax in the JS side since it doesn't support overloading. Also given that, this method will probably only called from client side instead of contract to contract message calls.\r\n\r\n```ts\r\n// when same name methods are present\r\ncontractInstance['transferFrom(address,address,uint256)'](...args)\r\ncontractInstance['transferFrom(address,uint256,uint256,uint8,bytes32,bytes32)'](...args)\r\n\r\n// vs when all methods in contract are different\r\ncontractInstance.transferBySig(...args)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/719986339/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/720006993",
    "html_url": "https://github.com/ethereum/EIPs/issues/3055#issuecomment-720006993",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/3055",
    "id": 720006993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMDAwNjk5Mw==",
    "user": {
      "login": "gkucmierz",
      "id": 739084,
      "node_id": "MDQ6VXNlcjczOTA4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/739084?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gkucmierz",
      "html_url": "https://github.com/gkucmierz",
      "followers_url": "https://api.github.com/users/gkucmierz/followers",
      "following_url": "https://api.github.com/users/gkucmierz/following{/other_user}",
      "gists_url": "https://api.github.com/users/gkucmierz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gkucmierz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gkucmierz/subscriptions",
      "organizations_url": "https://api.github.com/users/gkucmierz/orgs",
      "repos_url": "https://api.github.com/users/gkucmierz/repos",
      "events_url": "https://api.github.com/users/gkucmierz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gkucmierz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-01T00:28:50Z",
    "updated_at": "2020-11-03T17:57:08Z",
    "author_association": "NONE",
    "body": "@zemse I will consider changing names.\r\n\r\nActually we are implementing this in Wisdom token.\r\n\r\nHere is our implementation: https://github.com/Experty/wisdom-contract/blob/ce7a5b35792279551e6b5518e4ef66e219a4bb6a/src/ERCTransferFrom.sol\r\n\r\nThat implementation also utilizes EIP #712 https://eips.ethereum.org/EIPS/eip-712 which is making this more secure.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/720006993/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/720009336",
    "html_url": "https://github.com/ethereum/EIPs/issues/3055#issuecomment-720009336",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/3055",
    "id": 720009336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMDAwOTMzNg==",
    "user": {
      "login": "gkucmierz",
      "id": 739084,
      "node_id": "MDQ6VXNlcjczOTA4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/739084?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gkucmierz",
      "html_url": "https://github.com/gkucmierz",
      "followers_url": "https://api.github.com/users/gkucmierz/followers",
      "following_url": "https://api.github.com/users/gkucmierz/following{/other_user}",
      "gists_url": "https://api.github.com/users/gkucmierz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gkucmierz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gkucmierz/subscriptions",
      "organizations_url": "https://api.github.com/users/gkucmierz/orgs",
      "repos_url": "https://api.github.com/users/gkucmierz/repos",
      "events_url": "https://api.github.com/users/gkucmierz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gkucmierz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-01T00:52:59Z",
    "updated_at": "2020-11-01T02:57:10Z",
    "author_association": "NONE",
    "body": "@zemse can you explain difference between `transferBySig` and `transferFromBySig`?\r\nIf I understand correctly `transferFromBySig` is the same as `transferFrom` from my implementation right?\r\nIf so, what `transferBySig` should do?\r\n\r\nAlso `transferFrom` can be dropped completely, because actually its behaviour can be mimic by using `transferFromUntil` with very big `block.number`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/720009336/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/720009544",
    "html_url": "https://github.com/ethereum/EIPs/issues/3055#issuecomment-720009544",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/3055",
    "id": 720009544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMDAwOTU0NA==",
    "user": {
      "login": "zemse",
      "id": 22412996,
      "node_id": "MDQ6VXNlcjIyNDEyOTk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/22412996?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zemse",
      "html_url": "https://github.com/zemse",
      "followers_url": "https://api.github.com/users/zemse/followers",
      "following_url": "https://api.github.com/users/zemse/following{/other_user}",
      "gists_url": "https://api.github.com/users/zemse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zemse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zemse/subscriptions",
      "organizations_url": "https://api.github.com/users/zemse/orgs",
      "repos_url": "https://api.github.com/users/zemse/repos",
      "events_url": "https://api.github.com/users/zemse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zemse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-01T00:55:43Z",
    "updated_at": "2020-11-01T00:56:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "By `transferFromBySig` I mean the one who is giving signature has an allowance from the `from` address. Just like the original `transferForm`\r\n\r\n> Also transferFrom can be dropped completely, because actually its behaviour can be mimic by using transferFromUntil with very big block.number.\r\n\r\nI see, that makes sense. This would reduce the functions",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/720009544/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/720009865",
    "html_url": "https://github.com/ethereum/EIPs/issues/3055#issuecomment-720009865",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/3055",
    "id": 720009865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMDAwOTg2NQ==",
    "user": {
      "login": "gkucmierz",
      "id": 739084,
      "node_id": "MDQ6VXNlcjczOTA4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/739084?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gkucmierz",
      "html_url": "https://github.com/gkucmierz",
      "followers_url": "https://api.github.com/users/gkucmierz/followers",
      "following_url": "https://api.github.com/users/gkucmierz/following{/other_user}",
      "gists_url": "https://api.github.com/users/gkucmierz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gkucmierz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gkucmierz/subscriptions",
      "organizations_url": "https://api.github.com/users/gkucmierz/orgs",
      "repos_url": "https://api.github.com/users/gkucmierz/repos",
      "events_url": "https://api.github.com/users/gkucmierz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gkucmierz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-01T00:59:32Z",
    "updated_at": "2020-11-01T00:59:32Z",
    "author_association": "NONE",
    "body": "I am not sure If I understand this.\r\nIntention of this proposal is to not require any allowances. \r\nAllowance here can be signed off-chain.\r\nI see potential that additional function can be implemented which is `pure` and `view` and can create signature. But this process can be done also off-chain in any other language.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/720009865/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/950248978",
    "html_url": "https://github.com/ethereum/EIPs/issues/3055#issuecomment-950248978",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/3055",
    "id": 950248978,
    "node_id": "IC_kwDOAq426M44o6YS",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-10-24T02:27:35Z",
    "updated_at": "2021-10-24T02:27:35Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/950248978/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/962541446",
    "html_url": "https://github.com/ethereum/EIPs/issues/3055#issuecomment-962541446",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/3055",
    "id": 962541446,
    "node_id": "IC_kwDOAq426M45XzeG",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-11-07T02:29:20Z",
    "updated_at": "2021-11-07T02:29:20Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/962541446/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
