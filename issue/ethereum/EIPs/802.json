{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/802",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/802/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/802/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/802/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/802",
  "id": 283394355,
  "node_id": "MDU6SXNzdWUyODMzOTQzNTU=",
  "number": 802,
  "title": "ERC: address-to-address messaging system protocol",
  "user": {
    "login": "Dexaran",
    "id": 26142412,
    "node_id": "MDQ6VXNlcjI2MTQyNDEy",
    "avatar_url": "https://avatars.githubusercontent.com/u/26142412?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dexaran",
    "html_url": "https://github.com/Dexaran",
    "followers_url": "https://api.github.com/users/Dexaran/followers",
    "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
    "organizations_url": "https://api.github.com/users/Dexaran/orgs",
    "repos_url": "https://api.github.com/users/Dexaran/repos",
    "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dexaran/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 14,
  "created_at": "2017-12-19T22:48:44Z",
  "updated_at": "2022-01-02T08:13:51Z",
  "closed_at": "2022-01-02T08:13:50Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "```\r\nERC: <to be assigned>\r\nTitle: Address-to-Address messaging system protocol\r\nAuthor: Dexaran, dexaran@ethereumclassic.org\r\nStatus: Draft\r\nType: ERC\r\nCreated: 19-12.2017\r\nResolution: https://github.com/EthereumCommonwealth/Address-to-Address-messaging\r\n```\r\n\r\n## Abstract\r\n\r\nThe following describes the details of the smart-contract based messaging system which aims to allow Ethereum users to directly contact the address owner without having to know who hi (she) is.\r\n\r\n## Motivation\r\n\r\nEthereum lacks a central messaging system that will allow to contact an address owner directly. You can send him a transaction with ASCII message attached as `data` but it is likely that address owner will not even try to recognize it as a text message. As the result there is no viable way to deliver a message to address owner directly.\r\n\r\nThis service is necessary in some circumstances, for example:\r\n\r\n1. **You sent someone a token, the existence of which this person does not know.** It is likely that a person will spot an incoming ETH transaction, but there is no way that a person will spot an incoming token transaction or the fact that his balance of this token increases. You need to contact the owner of this address and ask to send your tokens back.\r\n\r\n2. **You sent ETC into someone's ETH address.** The same situation as with tokens. It is likely that a person will not recognize an incoming transaction of an alternative currency. But he definitely can access it and send it back (or just go and sell it).\r\n\r\n3. **You spotted that someone have deployed a contract that is proven to be vulnerable.** If you're a good guy then you want to contact an owner of the \"vulnerable contract\" and warn him that he is going to use a contract that contains vulnerability and his funds are at risk in this case.\r\n\r\n4. **You spotted that someone has hacked something.** You would like to contact a hacker and kindly ask him to send everything back but the hacker likely will not respond if you will try to contact him via forums. I suppose that it is the most important case. On-chain methods of communication are the only way to securely contact a hacker or to respond if you are the hacker.\r\n\r\n## Specification\r\n\r\nBasic address-to-address messaging smart-contract.\r\n\r\nThis is a simple smart-contract that stores messages mapped to addresses by id and a mapping that represents the last message id for each address. Last message id increases for the receiver address when this address receives a new message (there is no message at `last_message_id` in fact... this represents a numeric id that will be filled with the next incoming message in fact). If the `last_message_id` is equal to 0 then there are no messages for this address. If `last_message_id` is equal to 2 then there are 2 messages at positions 0 and 1 for this address.\r\n\r\nThere is no possibility to edit, change, delete messages. This contract is not a messenger or a chat. This contract is an emergency way to contact an owner of a certain address when there is no possibility to contact him off-chain. As the result, editing and deleting messages has no reason because it will still be available via history of transactions.\r\n\r\nBasically, there is no way to encrypt message on-chain because there is no way to hide an input call data. As a result, there is an additional field for attaching a public asymmetric encryption key. If the owner of a certain address has a desire to allow someone to contact him privately, then he can publish his public key at this contract and describe what type of key he has published at the \"Key type\" variable (for example `PGP public key` or `RSA 2048 bit public key`). Anyone else is allowed to look at the public key in the contract, encrypt the message outside the network and send an encrypted message on this contract.\r\n\r\n## Methods\r\n\r\n#### sendMessage\r\n```js\r\n    function sendMessage(address _to, string _text)\r\n```\r\n\r\nDelivers a string message to `_to` address owner.\r\n\r\n#### lastIndex\r\n```js\r\n    function lastIndex(address _owner) constant returns (uint256)\r\n```\r\n\r\nReturns an index of the last message for the `_owner` address.\r\n\r\nNOTE: This means that there are messages at `0` to `lastIndex - 1` positions. There is no message at `lastIndex` position actually. This will be filled with the next message for this address. If the `lastIndex` is equal to `0` then there is no messages for this address.\r\n\r\n#### getLastMessage\r\n```js\r\n    function getLastMessage(address _who) constant returns (address _from, string _text)\r\n```\r\n\r\nReturns the last message for the `_who` address and the sender of this message.\r\n\r\nNOTE: Message is actually at `lastIndex(_who) - 1` position.\r\n\r\n#### getMessageByIndex\r\n```js\r\n    function getMessageByIndex(address _who, uint256 _index) constant returns (address, string)\r\n```\r\n\r\nReturns the message for `_who` address at `_index` position and the sender of this message.\r\n\r\n#### getPublicKey\r\n```js\r\n    function getPublicKey(address _who) constant returns (string _key, string _key_type)\r\n```\r\n\r\nReturns a public key of the `_who` address and a type of this key.\r\n\r\n#### setPublicKey\r\n```js\r\n    function setPublicKey(string _key, string _type)\r\n```\r\n\r\nSets a public key and a description of key type for the sender address.\r\n\r\n## Events\r\n\r\n#### NewMessage\r\n```js\r\nevent Message(address indexed _sender, address indexed _receiver, uint256 _time, string message)\r\n```\r\nTriggered when a new message is sent. This event logs `timestamp` of the message in UNIX seconds.\r\n\r\n#### PublicKeyUpdated\r\n```js\r\nevent PublicKeyUpdated(address indexed _sender, string _key, string _keytype)\r\n```\r\nTriggered when a customer updates a public key of an address or sets it first time. This event logs a new public key and key type to make it easier to recognize which encryption algorithm should be used with this key.\r\n\r\n\r\n## Resolution\r\n\r\nObviously, this contract can not guarantee that an owner of the address will receive a message. It requires to be supported by UIs. It is likely that an owner of a certain address will see a message if MyEtherWallet, MetaMask or Mist will display messages somehow (for example a certain number of last messages). \r\n\r\nAlso, it makes sense to standardize possible public key types. Ideally, UI should have a button \"Send message to address\" and \"Send encrypted message to address\" and distinguish public key, key type and then encrypt message automatically.",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/802/reactions",
    "total_count": 8,
    "+1": 8,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/802/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/353159700",
    "html_url": "https://github.com/ethereum/EIPs/issues/802#issuecomment-353159700",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/802",
    "id": 353159700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzE1OTcwMA==",
    "user": {
      "login": "pabloruiz55",
      "id": 526558,
      "node_id": "MDQ6VXNlcjUyNjU1OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/526558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabloruiz55",
      "html_url": "https://github.com/pabloruiz55",
      "followers_url": "https://api.github.com/users/pabloruiz55/followers",
      "following_url": "https://api.github.com/users/pabloruiz55/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabloruiz55/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabloruiz55/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabloruiz55/subscriptions",
      "organizations_url": "https://api.github.com/users/pabloruiz55/orgs",
      "repos_url": "https://api.github.com/users/pabloruiz55/repos",
      "events_url": "https://api.github.com/users/pabloruiz55/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabloruiz55/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-20T19:28:08Z",
    "updated_at": "2017-12-20T19:28:08Z",
    "author_association": "NONE",
    "body": "Looks very useful. Just the other day I was thinking about something similar, given how many issues I've seen of people mistakenly sending tokens, or even the case you mention of a contract being hacked and having no way to communicate with the perp.\r\n\r\nHave you thought about firing an Event when a message is sent? It would make it easier to read all messages for a particular contract and even filter them by date or sender. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/353159700/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/353168442",
    "html_url": "https://github.com/ethereum/EIPs/issues/802#issuecomment-353168442",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/802",
    "id": 353168442,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzE2ODQ0Mg==",
    "user": {
      "login": "Dexaran",
      "id": 26142412,
      "node_id": "MDQ6VXNlcjI2MTQyNDEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/26142412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dexaran",
      "html_url": "https://github.com/Dexaran",
      "followers_url": "https://api.github.com/users/Dexaran/followers",
      "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
      "organizations_url": "https://api.github.com/users/Dexaran/orgs",
      "repos_url": "https://api.github.com/users/Dexaran/repos",
      "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dexaran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-20T20:04:14Z",
    "updated_at": "2017-12-20T20:04:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pabloruiz55 Thanks for the useful idea. I'll update the code with `events` to make it easier to watch events of the contract for third party services.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/353168442/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/353368076",
    "html_url": "https://github.com/ethereum/EIPs/issues/802#issuecomment-353368076",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/802",
    "id": 353368076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzM2ODA3Ng==",
    "user": {
      "login": "Dexaran",
      "id": 26142412,
      "node_id": "MDQ6VXNlcjI2MTQyNDEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/26142412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dexaran",
      "html_url": "https://github.com/Dexaran",
      "followers_url": "https://api.github.com/users/Dexaran/followers",
      "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
      "organizations_url": "https://api.github.com/users/Dexaran/orgs",
      "repos_url": "https://api.github.com/users/Dexaran/repos",
      "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dexaran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-21T14:44:33Z",
    "updated_at": "2017-12-21T14:44:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Added events: https://github.com/EthereumCommonwealth/Address-to-Address-messaging\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/353368076/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/353562097",
    "html_url": "https://github.com/ethereum/EIPs/issues/802#issuecomment-353562097",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/802",
    "id": 353562097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzU2MjA5Nw==",
    "user": {
      "login": "RorschachRev",
      "id": 858397,
      "node_id": "MDQ6VXNlcjg1ODM5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858397?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RorschachRev",
      "html_url": "https://github.com/RorschachRev",
      "followers_url": "https://api.github.com/users/RorschachRev/followers",
      "following_url": "https://api.github.com/users/RorschachRev/following{/other_user}",
      "gists_url": "https://api.github.com/users/RorschachRev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RorschachRev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RorschachRev/subscriptions",
      "organizations_url": "https://api.github.com/users/RorschachRev/orgs",
      "repos_url": "https://api.github.com/users/RorschachRev/repos",
      "events_url": "https://api.github.com/users/RorschachRev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RorschachRev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-22T09:46:25Z",
    "updated_at": "2017-12-22T09:46:25Z",
    "author_association": "NONE",
    "body": "We could possibly enhance this a little. If someone sends a transaction it exposes their public key. A blockchain explorer could act as an oracle in this case.\r\nIf we add a \"MSG!\" Token and send them to people, this may get noticed by wallets and block chain explorers. With a \"watch this address\" that some explorers already have, the user would get an actual email. We could potentially include the decrypted contents by wallet, but that's a stretch. (Using block chain public key, wallet would have the private key, but symmetric key and decoding method would be required.) ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/353562097/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/353764081",
    "html_url": "https://github.com/ethereum/EIPs/issues/802#issuecomment-353764081",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/802",
    "id": 353764081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mzc2NDA4MQ==",
    "user": {
      "login": "3esmit",
      "id": 224810,
      "node_id": "MDQ6VXNlcjIyNDgxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/224810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3esmit",
      "html_url": "https://github.com/3esmit",
      "followers_url": "https://api.github.com/users/3esmit/followers",
      "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
      "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
      "organizations_url": "https://api.github.com/users/3esmit/orgs",
      "repos_url": "https://api.github.com/users/3esmit/repos",
      "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3esmit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-24T04:07:27Z",
    "updated_at": "2017-12-24T04:07:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "That's would be a very expansive way of sending messages.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/353764081/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/353779845",
    "html_url": "https://github.com/ethereum/EIPs/issues/802#issuecomment-353779845",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/802",
    "id": 353779845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mzc3OTg0NQ==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-24T11:45:37Z",
    "updated_at": "2017-12-24T11:45:37Z",
    "author_association": "NONE",
    "body": "@3esmit the expense doesn't really matter here; use public key cryptography to organize conversation off-chain. This serves the (particularly useful) purpose of a central location to check for messages that you want to send to an address, without having to know anything about someone besides their address.\r\n\r\n@Dexaran I would also include that this is also useful for contacting owners of ENS domains.\r\n\r\nI like this and could contribute time towards building a canonical interface for this contract.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/353779845/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/353809465",
    "html_url": "https://github.com/ethereum/EIPs/issues/802#issuecomment-353809465",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/802",
    "id": 353809465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzgwOTQ2NQ==",
    "user": {
      "login": "Dexaran",
      "id": 26142412,
      "node_id": "MDQ6VXNlcjI2MTQyNDEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/26142412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dexaran",
      "html_url": "https://github.com/Dexaran",
      "followers_url": "https://api.github.com/users/Dexaran/followers",
      "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
      "organizations_url": "https://api.github.com/users/Dexaran/orgs",
      "repos_url": "https://api.github.com/users/Dexaran/repos",
      "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dexaran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-25T00:28:17Z",
    "updated_at": "2017-12-25T00:28:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@RorschachRev it is an interesting idea to use Ethereum's private and public keys of an address to encrypt/decrypt messages, but it's not related to the logic of the smart-contract in any case. Encryption/decryption process should be off-chain.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/353809465/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/353809538",
    "html_url": "https://github.com/ethereum/EIPs/issues/802#issuecomment-353809538",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/802",
    "id": 353809538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzgwOTUzOA==",
    "user": {
      "login": "Dexaran",
      "id": 26142412,
      "node_id": "MDQ6VXNlcjI2MTQyNDEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/26142412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dexaran",
      "html_url": "https://github.com/Dexaran",
      "followers_url": "https://api.github.com/users/Dexaran/followers",
      "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
      "organizations_url": "https://api.github.com/users/Dexaran/orgs",
      "repos_url": "https://api.github.com/users/Dexaran/repos",
      "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dexaran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-25T00:30:29Z",
    "updated_at": "2017-12-25T00:30:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Shrugs \r\n\r\n>@Dexaran I would also include that this is also useful for contacting owners of ENS domains.\r\n\r\nI suppose that it is up to UI and this should not be part of messagin contract as well.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/353809538/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/353849185",
    "html_url": "https://github.com/ethereum/EIPs/issues/802#issuecomment-353849185",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/802",
    "id": 353849185,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mzg0OTE4NQ==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-25T08:39:32Z",
    "updated_at": "2017-12-25T08:39:32Z",
    "author_association": "NONE",
    "body": "@Dexaran  Of course, I mean this is a good usecase for entering negotiations with squatters (for example, we've been trying to obtain truebit.eth for ages, including with ascii transactions, but without progress).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/353849185/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/353898633",
    "html_url": "https://github.com/ethereum/EIPs/issues/802#issuecomment-353898633",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/802",
    "id": 353898633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mzg5ODYzMw==",
    "user": {
      "login": "Dexaran",
      "id": 26142412,
      "node_id": "MDQ6VXNlcjI2MTQyNDEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/26142412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dexaran",
      "html_url": "https://github.com/Dexaran",
      "followers_url": "https://api.github.com/users/Dexaran/followers",
      "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
      "organizations_url": "https://api.github.com/users/Dexaran/orgs",
      "repos_url": "https://api.github.com/users/Dexaran/repos",
      "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dexaran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-26T00:45:39Z",
    "updated_at": "2017-12-26T00:45:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "There is one concern that I'd like to discuss: crosschain interoperability.\r\n\r\n## Request for comment: cross chain interoperability\r\n\r\nThe whole Ethereum ecosystem lacks an address to address central messaging system. It is not a local problem of Ethereum, it is a bit more global. Currently, there are some \"Ethereum-compatible\" chains: ETC, PIRL, UBQ, EXP, MusiCoin (and probably RootStock) and they all need to solve the same problem.\r\n\r\nNOTE: I've said Ethereum-compatible chains since they all utilize the same address schemes. The owner of `0x1111111111111111` address can use this address on any of the mentioned chains. One private key can unlock exactly the same addresses on any of this chains. As the result, if you sent UBQ into EXP address, then the owner of this address can access your UBQ.\r\n\r\nTo be honest, I don't see any reason to deploy exactly the same service on each chain separately. This is not to benefit of anyone. I think that the best idea is to deploy the service on one chain and then consider it a core part of the overall messaging system.\r\n\r\nA UI that have access to multiple nodes (for example MyEtherWallet) can connect to the core-node (node of the network that will be used to deploy this service contract) and look for messages. If the message for the address is found at the core-network, then the UI should display it to the user. It doesn't matter if the user is currently on the core-network or any of the alternative Ethereum-compatible chains.\r\n\r\nThis approach has some advantages:\r\n\r\n1. Deploying one contract on multiple chains is just irrational. Now we have many copies of the ENS in each network. As practice has shown, it is not needed for anyone.\r\n\r\n2. If there is only one core network, then the user can send a message from an \"address\" to an \"address\" regardless of whether he uses his address in the same chain with the owner of the message recipient or not. You can inform a ETH user that you have sent him a token that is deployed on UBQ, for example, and he will receive your message.\r\n\r\n3. It is cheaper for ETH users to utilize the powers of some else network.\r\n\r\nI'd like to receive more feedback and any thoughts about this.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/353898633/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/375414008",
    "html_url": "https://github.com/ethereum/EIPs/issues/802#issuecomment-375414008",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/802",
    "id": 375414008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTQxNDAwOA==",
    "user": {
      "login": "Dexaran",
      "id": 26142412,
      "node_id": "MDQ6VXNlcjI2MTQyNDEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/26142412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dexaran",
      "html_url": "https://github.com/Dexaran",
      "followers_url": "https://api.github.com/users/Dexaran/followers",
      "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
      "organizations_url": "https://api.github.com/users/Dexaran/orgs",
      "repos_url": "https://api.github.com/users/Dexaran/repos",
      "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dexaran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-22T18:35:55Z",
    "updated_at": "2018-03-22T18:36:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Message system in use: https://github.com/ethereumproject/ECIPs/issues/85#issuecomment-375413336\r\n\r\n# General info\r\n\r\nHere is a reference implementation of the described Message System at CLassicEtherWallet.\r\n\r\nhttps://ethereumproject.github.io/etherwallet/#messages\r\n\r\nInterchain Address-To-Address messaging contract is currently deployed on Ethereum CLassic chain at [0x6A77417FFeef35ae6fe2E9d6562992bABA47a676](http://gastracker.io/addr/0x6a77417ffeef35ae6fe2e9d6562992baba47a676) address.\r\n\r\nIt is an open-source contract and it is licensed under GPLv3. Source codes could be found here: https://github.com/EthereumCommonwealth/Address-to-Address-messaging\r\n\r\n# Functionality\r\n\r\nThe described messaging system allows:\r\n- send messages\r\n- retrieve messages\r\n- display messages to a user when he/she unlocks a wallet to send a transaction\r\n\r\n# Howto\r\n\r\n### Sending a message.\r\n\r\n1. Open ClassicEtherWallet and go to `messages` tab. Make sure that you are at ETC network. It is necessary to use ETC network in order to send a message https://ethereumproject.github.io/etherwallet/#messages\r\n\r\n2. Unlock your wallet.\r\n\r\n3. Click a New Message section.\r\n![newmsg](https://user-images.githubusercontent.com/26142412/37787703-896270d0-2df7-11e8-86f9-f8f89ced0539.png)\r\n\r\n4. Type the address and the message.\r\n![newmsg2](https://user-images.githubusercontent.com/26142412/37787823-cbe35082-2df7-11e8-8850-f2e9fbe39f29.png)\r\n\r\n5. Click `SEND` button and wait for transaction info to appear. NOTE: It may take longer to calculate the transaction info if your network speed is low.\r\n![newmsg3](https://user-images.githubusercontent.com/26142412/37787974-295ec386-2df8-11e8-96b0-2dc7c5d777a6.png)\r\n\r\n6. Check the transaction hash to make sure that your message was successfully sent.\r\n![newmsg4](https://user-images.githubusercontent.com/26142412/37787994-37f90316-2df8-11e8-9250-69533995d890.png)\r\n\r\n### Watching your messages.\r\n\r\n1. Open ClassicEtherWallet and go to `messages` tab. It doesn't matter what network you are currently at to display your messages. You can retrieve ETC messages being on UBQ network. https://ethereumproject.github.io/etherwallet/#messages\r\n\r\n2. Unlock your wallet. Wait for messages to load. It may take a minute or something like this because it requires a number of contract calls. NOTE: You can view messages with address only but you will not be able to respond if you are using this method of message checking.\r\n![viewmessage1](https://user-images.githubusercontent.com/26142412/37788356-2162f944-2df9-11e8-8a03-ab1494bfe919.png)\r\n\r\n3. You can also reply to a message if you want. However, it requires gas.\r\n![viewmessage2](https://user-images.githubusercontent.com/26142412/37788480-76891bce-2df9-11e8-8f12-70a650aed1c8.png)\r\n\r\n### NOTE: This is an emergency message system! Not an on-chain chatroom.\r\n\r\nEvery symbol that you broadcast to the network will cost you gas. This is not an on-chain chat! This is only an emergency system that allows you to contact an owner of a certain address if there is no way to contact him off-chain. For example if you accidentally sent a number of funds into someone elses address or if you want to interview TheDAO hacker.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/375414008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/566053193",
    "html_url": "https://github.com/ethereum/EIPs/issues/802#issuecomment-566053193",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/802",
    "id": 566053193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjA1MzE5Mw==",
    "user": {
      "login": "meirdavis",
      "id": 13727087,
      "node_id": "MDQ6VXNlcjEzNzI3MDg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13727087?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meirdavis",
      "html_url": "https://github.com/meirdavis",
      "followers_url": "https://api.github.com/users/meirdavis/followers",
      "following_url": "https://api.github.com/users/meirdavis/following{/other_user}",
      "gists_url": "https://api.github.com/users/meirdavis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meirdavis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meirdavis/subscriptions",
      "organizations_url": "https://api.github.com/users/meirdavis/orgs",
      "repos_url": "https://api.github.com/users/meirdavis/repos",
      "events_url": "https://api.github.com/users/meirdavis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meirdavis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-16T13:07:44Z",
    "updated_at": "2019-12-16T13:07:44Z",
    "author_association": "NONE",
    "body": "Ideally wallets like Metamask and MEW would display received messages within their interfaces.\r\nThis could be used for keeping users up to date, instead of requiring an email address to use dapps.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/566053193/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997341484",
    "html_url": "https://github.com/ethereum/EIPs/issues/802#issuecomment-997341484",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/802",
    "id": 997341484,
    "node_id": "IC_kwDOAq426M47cjks",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-19T07:11:35Z",
    "updated_at": "2021-12-19T07:11:35Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997341484/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003679157",
    "html_url": "https://github.com/ethereum/EIPs/issues/802#issuecomment-1003679157",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/802",
    "id": 1003679157,
    "node_id": "IC_kwDOAq426M470u21",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-02T08:13:50Z",
    "updated_at": "2022-01-02T08:13:50Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003679157/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
