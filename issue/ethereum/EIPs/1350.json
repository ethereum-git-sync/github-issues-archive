{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/1350",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/1350/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/1350/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/1350/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/1350",
  "id": 353706598,
  "node_id": "MDU6SXNzdWUzNTM3MDY1OTg=",
  "number": 1350,
  "title": "Secure DelegateCall",
  "user": {
    "login": "rmeissner",
    "id": 2896048,
    "node_id": "MDQ6VXNlcjI4OTYwNDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2896048?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rmeissner",
    "html_url": "https://github.com/rmeissner",
    "followers_url": "https://api.github.com/users/rmeissner/followers",
    "following_url": "https://api.github.com/users/rmeissner/following{/other_user}",
    "gists_url": "https://api.github.com/users/rmeissner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rmeissner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rmeissner/subscriptions",
    "organizations_url": "https://api.github.com/users/rmeissner/orgs",
    "repos_url": "https://api.github.com/users/rmeissner/repos",
    "events_url": "https://api.github.com/users/rmeissner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rmeissner/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2018-08-24T09:16:10Z",
  "updated_at": "2021-12-18T21:11:59Z",
  "closed_at": "2021-12-18T21:11:59Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "---\r\neip: TDB\r\ntitle: Secure DelegateCall\r\nauthor: Richard Meissner (@rmeissner)\r\ncategory: Core\r\ntype: Standards Track\r\nstatus: Draft\r\ncreated: 2018-08-24\r\n---\r\n\r\n### Specification\r\n\r\nAdds a new opcode at `0xf6`, which is identical to `0xf4` (delegatecall), but doesn't allow to execute `0xff`(SELFDESTRUCT).\r\n\r\n### Motivation\r\n\r\nThe use of proxy contract is increasing and with this the use \"master copies\" with complex code is also increasing. This increases the security risk, if a contract should support delegate calls to any address, to allow the usage of a large selection of library contracts (e.g. a contract that executes multiple transactions at once in the context of a MultiSig). Imposing the requirement that a delegate call is not selfdestructing a contract make it more secure and support audits. With this it can be ensured that a master copy contract can never be suicided and the logic for all the proxies is always available.\r\n\r\n### Optional\r\n\r\nIt would also be really helpful to be able to specify a storage range that the delegate call is allowed to access.",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/1350/reactions",
    "total_count": 8,
    "+1": 8,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/1350/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/415786520",
    "html_url": "https://github.com/ethereum/EIPs/issues/1350#issuecomment-415786520",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1350",
    "id": 415786520,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTc4NjUyMA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-24T15:02:17Z",
    "updated_at": "2018-08-24T15:02:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree something like this would be very valuable. However, the specification needs a lot of work.\r\n\r\nIf I'm understanding correctly, this would make any attempt to execute `selfdestruct` throw an exception when reached through a `0xf6` opcode. As a consequence, the caller cannot be selfdestructed. This might be valuable in some scenarios but the stated motivation of the EIP is the opposite: that the master copy (the call target) is not selfdestructed. I don't see how that is guaranteed here. If we were to directly invoke the master copy, instead of through `0xf6`, nothing would prevent `selfdestruct` from executing normally. Have you considered this scenario?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/415786520/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/415794225",
    "html_url": "https://github.com/ethereum/EIPs/issues/1350#issuecomment-415794225",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1350",
    "id": 415794225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTc5NDIyNQ==",
    "user": {
      "login": "rmeissner",
      "id": 2896048,
      "node_id": "MDQ6VXNlcjI4OTYwNDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2896048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmeissner",
      "html_url": "https://github.com/rmeissner",
      "followers_url": "https://api.github.com/users/rmeissner/followers",
      "following_url": "https://api.github.com/users/rmeissner/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmeissner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmeissner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmeissner/subscriptions",
      "organizations_url": "https://api.github.com/users/rmeissner/orgs",
      "repos_url": "https://api.github.com/users/rmeissner/repos",
      "events_url": "https://api.github.com/users/rmeissner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmeissner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-24T15:27:54Z",
    "updated_at": "2018-08-24T15:30:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "So my motivation was to prevent that a master copy can be suicided. \r\n\r\nWe have a master copy which allows the use of delegate calls. While the master copy itself has no way of calling `selfdestruct` it is theoretically possible to call it via a delegate call. Therefore we have to bring the master copy in a state that this is not possible and we should proof that it is not possible to call `selfdestruct`, since else all the proxies that make use of that master copy are not functional.\r\n\r\nIt would be nice that this could be ensured on the evm level. So even if somebody somehow finds a way to trigger a `delegatecall` on that contract it should not be possible to suicide it. (Basically we want to prevent something like https://github.com/paritytech/parity-ethereum/issues/6995)\r\n\r\nEDIT: and yes the specification needs work :D just wanted to have some input first, before deep diving into the evm related stuff.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/415794225/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/415810331",
    "html_url": "https://github.com/ethereum/EIPs/issues/1350#issuecomment-415810331",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1350",
    "id": 415810331,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTgxMDMzMQ==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-24T16:24:11Z",
    "updated_at": "2018-08-24T16:24:11Z",
    "author_association": "MEMBER",
    "body": "This is best worked around at the user level:\r\n\r\n - Don't delegatecall untrusted code (it's a terrible idea anyway)\r\n - Check that library code is being called from an instance, not directly\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/415810331/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/439746017",
    "html_url": "https://github.com/ethereum/EIPs/issues/1350#issuecomment-439746017",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1350",
    "id": 439746017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTc0NjAxNw==",
    "user": {
      "login": "wadeAlexC",
      "id": 18387287,
      "node_id": "MDQ6VXNlcjE4Mzg3Mjg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/18387287?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wadeAlexC",
      "html_url": "https://github.com/wadeAlexC",
      "followers_url": "https://api.github.com/users/wadeAlexC/followers",
      "following_url": "https://api.github.com/users/wadeAlexC/following{/other_user}",
      "gists_url": "https://api.github.com/users/wadeAlexC/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wadeAlexC/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wadeAlexC/subscriptions",
      "organizations_url": "https://api.github.com/users/wadeAlexC/orgs",
      "repos_url": "https://api.github.com/users/wadeAlexC/repos",
      "events_url": "https://api.github.com/users/wadeAlexC/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wadeAlexC/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-19T01:30:05Z",
    "updated_at": "2018-11-19T01:30:05Z",
    "author_association": "NONE",
    "body": "> So my motivation was to prevent that a master copy can be suicided.\r\n> \r\n> We have a master copy which allows the use of delegate calls. While the master copy itself has no way of calling `selfdestruct` it is theoretically possible to call it via a delegate call. Therefore we have to bring the master copy in a state that this is not possible and we should proof that it is not possible to call `selfdestruct`, since else all the proxies that make use of that master copy are not functional.\r\n> \r\n> It would be nice that this could be ensured on the evm level. So even if somebody somehow finds a way to trigger a `delegatecall` on that contract it should not be possible to suicide it. (Basically we want to prevent something like [paritytech/parity-ethereum#6995](https://github.com/paritytech/parity-ethereum/issues/6995))\r\n> \r\n> EDIT: and yes the specification needs work :D just wanted to have some input first, before deep diving into the evm related stuff.\r\n\r\nA `selfdestruct` can be mitigated if the caller enforces a `revert` status from the callee. If the callee does not `revert` (selfdestruct returns a 'success' status), the caller reverts, protecting state.\r\n\r\nThe only interaction the caller and callee can have, then, is passing data back via the revert.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/439746017/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986093440",
    "html_url": "https://github.com/ethereum/EIPs/issues/1350#issuecomment-986093440",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1350",
    "id": 986093440,
    "node_id": "IC_kwDOAq426M46xpeA",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-04T21:11:26Z",
    "updated_at": "2021-12-04T21:11:26Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986093440/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997285331",
    "html_url": "https://github.com/ethereum/EIPs/issues/1350#issuecomment-997285331",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1350",
    "id": 997285331,
    "node_id": "IC_kwDOAq426M47cV3T",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-18T21:11:59Z",
    "updated_at": "2021-12-18T21:11:59Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997285331/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
