{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/6245",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/6245/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/6245/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/6245/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/6245",
  "id": 1515873018,
  "node_id": "I_kwDOAq426M5aWmL6",
  "number": 6245,
  "title": "Clarify & rationalize blob transaction hash computations in EIP-4844",
  "user": {
    "login": "roberto-bayardo",
    "id": 10271917,
    "node_id": "MDQ6VXNlcjEwMjcxOTE3",
    "avatar_url": "https://avatars.githubusercontent.com/u/10271917?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/roberto-bayardo",
    "html_url": "https://github.com/roberto-bayardo",
    "followers_url": "https://api.github.com/users/roberto-bayardo/followers",
    "following_url": "https://api.github.com/users/roberto-bayardo/following{/other_user}",
    "gists_url": "https://api.github.com/users/roberto-bayardo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/roberto-bayardo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/roberto-bayardo/subscriptions",
    "organizations_url": "https://api.github.com/users/roberto-bayardo/orgs",
    "repos_url": "https://api.github.com/users/roberto-bayardo/repos",
    "events_url": "https://api.github.com/users/roberto-bayardo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/roberto-bayardo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-01-01T22:22:22Z",
  "updated_at": "2023-01-03T19:11:57Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "[EIP-4844](https://eips.ethereum.org/EIPS/eip-4844) currently specifies how to compute the hash of a blob type transaction for the purposes of transaction signing as:\r\n\r\n`keccak256(BLOB_TX_TYPE + ssz.hash_tree_root(tx.message))`\r\n\r\nHowever it does not currently specify how to compute the hash of a blob-type transaction for non-signing purposes, which presumably should include the signature to avoid tx malleability issues.\r\n\r\nPrevious transaction types have their raw serialized form (including signature) hashed with keccak256 in order to obtain the tx hash. If we follow this model, we might compute the blob-type transaction hash as:\r\n\r\n`keccak256(BLOB_TX_TYPE + ssz.serialize(tx))`\r\n\r\n(see https://github.com/ethereum/EIPs/pull/6238)\r\n\r\nNote that compared to the signing-hash, here we hash tx instead of tx.message in order to include the signature, and use ssz.serialize instead of ssz.hash_tree_root to obtain the hash preimage.\r\n\r\nThis brings up a second question surrounding the signing hash: why use ssz.hash_tree_root instead of ssz.serialize? Presumably this is to be consistent with how signing hashes are computed in the consensus layer, but this is a bit inconsistent with how execution layer obtains signing hashes for other transaction types.   We might therefore consider changing the signing hash to use straight serialization rather than hash_tree_root:\r\n\r\n`keccak256(BLOB_TX_TYPE + ssz.hash_tree_root(tx.message))`\r\n\r\n(see https://github.com/ethereum/EIPs/pull/6241)\r\n\r\nWe might also choose to use hash_tree_root instead of serialize for both the signing hash and the regular blob-type transaction hash preimages.\r\n\r\nAnother alternative would be to use RLP encoding instead of SSZ for blob transaction serialization which provides the most consistency with how other tx types are handled. This would however require the consensus layer have some understanding of RLP in order to extract the versioned hashes (see [tx_peek_versioned_hashes](https://github.com/ethereum/consensus-specs/blob/dev/specs/eip4844/beacon-chain.md#tx_peek_blob_versioned_hashes))\r\n\r\nWhatever choices we end up making here here should be accompanied with appropriate justification within the EIP.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/6245/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/6245/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1368553239",
    "html_url": "https://github.com/ethereum/EIPs/issues/6245#issuecomment-1368553239",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/6245",
    "id": 1368553239,
    "node_id": "IC_kwDOAq426M5RkncX",
    "user": {
      "login": "roberto-bayardo",
      "id": 10271917,
      "node_id": "MDQ6VXNlcjEwMjcxOTE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10271917?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roberto-bayardo",
      "html_url": "https://github.com/roberto-bayardo",
      "followers_url": "https://api.github.com/users/roberto-bayardo/followers",
      "following_url": "https://api.github.com/users/roberto-bayardo/following{/other_user}",
      "gists_url": "https://api.github.com/users/roberto-bayardo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roberto-bayardo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roberto-bayardo/subscriptions",
      "organizations_url": "https://api.github.com/users/roberto-bayardo/orgs",
      "repos_url": "https://api.github.com/users/roberto-bayardo/repos",
      "events_url": "https://api.github.com/users/roberto-bayardo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roberto-bayardo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-01T22:27:10Z",
    "updated_at": "2023-01-01T22:27:10Z",
    "author_association": "NONE",
    "body": "cc @protolambda @timbeiko ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1368553239/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1368555443",
    "html_url": "https://github.com/ethereum/EIPs/issues/6245#issuecomment-1368555443",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/6245",
    "id": 1368555443,
    "node_id": "IC_kwDOAq426M5Rkn-z",
    "user": {
      "login": "roberto-bayardo",
      "id": 10271917,
      "node_id": "MDQ6VXNlcjEwMjcxOTE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10271917?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roberto-bayardo",
      "html_url": "https://github.com/roberto-bayardo",
      "followers_url": "https://api.github.com/users/roberto-bayardo/followers",
      "following_url": "https://api.github.com/users/roberto-bayardo/following{/other_user}",
      "gists_url": "https://api.github.com/users/roberto-bayardo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roberto-bayardo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roberto-bayardo/subscriptions",
      "organizations_url": "https://api.github.com/users/roberto-bayardo/orgs",
      "repos_url": "https://api.github.com/users/roberto-bayardo/repos",
      "events_url": "https://api.github.com/users/roberto-bayardo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roberto-bayardo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-01T22:46:56Z",
    "updated_at": "2023-01-01T22:56:28Z",
    "author_association": "NONE",
    "body": "My preference is the solution from the PRs I linked in the issue:  Continue using SSZ encoding for blob type transactions, but use ssz.serialize for both signing-hash and regular tx hash in the EL.\r\n\r\nRationale:\r\n\r\nOn SSZ vs RLP: If SSZ is \"the future\" it makes sense to start adopting it now even in the EL, and since typed transactions are [opaque byte arrays](https://eips.ethereum.org/EIPS/eip-2718) it is reasonably straightforward to do so for this particular purpose.  Plus if we use RLP encoding for blob txs, the CL would have to start having some understanding of RLP to get at the versioned hashes within the blob transaction.\r\n\r\nOn using ssz.serialize for both hash computations rather than ssz.hash_tree_root:  Other tx types use straight serialization for these computations in the EL, and maintaining consistency with the EL approach to tx-hashing rather than introducing a new approach keeps things conceptually simpler.   I don't see why we'd need to do merkle-like proving over transaction contents, so I'm not seeing any benefit of using the tree root here other than having more consistency with the consensus layer approach to signing.\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1368555443/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1370021002",
    "html_url": "https://github.com/ethereum/EIPs/issues/6245#issuecomment-1370021002",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/6245",
    "id": 1370021002,
    "node_id": "IC_kwDOAq426M5RqNyK",
    "user": {
      "login": "acolytec3",
      "id": 17355484,
      "node_id": "MDQ6VXNlcjE3MzU1NDg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/17355484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/acolytec3",
      "html_url": "https://github.com/acolytec3",
      "followers_url": "https://api.github.com/users/acolytec3/followers",
      "following_url": "https://api.github.com/users/acolytec3/following{/other_user}",
      "gists_url": "https://api.github.com/users/acolytec3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/acolytec3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/acolytec3/subscriptions",
      "organizations_url": "https://api.github.com/users/acolytec3/orgs",
      "repos_url": "https://api.github.com/users/acolytec3/repos",
      "events_url": "https://api.github.com/users/acolytec3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/acolytec3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-03T17:12:25Z",
    "updated_at": "2023-01-03T17:12:25Z",
    "author_association": "MEMBER",
    "body": "I agree with the the logic suggested @roberto-bayardo above regarding the use of `ssz.serialize` over `hash_tree_root`.  The only scenario I can think of off hand where it might somehow be useful to have `hash_tree_root` over `serialize` would be if in the future we also migrate EL layer block serialization from RLP to SSZ.  We've already [sort of done this in the Portal Network spec](https://github.com/ethereum/portal-network-specs/blob/master/history-network.md#block-body) but I don't know if that's really where we're going to land longer term since there we're actually just wrapping RLP encoded transactions inside an SSZ container.  In any case, makes sense enough for now to just use `ssz.serialize` and move forward.  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1370021002/reactions",
      "total_count": 5,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1370131327",
    "html_url": "https://github.com/ethereum/EIPs/issues/6245#issuecomment-1370131327",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/6245",
    "id": 1370131327,
    "node_id": "IC_kwDOAq426M5Rqot_",
    "user": {
      "login": "roberto-bayardo",
      "id": 10271917,
      "node_id": "MDQ6VXNlcjEwMjcxOTE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10271917?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roberto-bayardo",
      "html_url": "https://github.com/roberto-bayardo",
      "followers_url": "https://api.github.com/users/roberto-bayardo/followers",
      "following_url": "https://api.github.com/users/roberto-bayardo/following{/other_user}",
      "gists_url": "https://api.github.com/users/roberto-bayardo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roberto-bayardo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roberto-bayardo/subscriptions",
      "organizations_url": "https://api.github.com/users/roberto-bayardo/orgs",
      "repos_url": "https://api.github.com/users/roberto-bayardo/repos",
      "events_url": "https://api.github.com/users/roberto-bayardo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roberto-bayardo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-03T19:11:57Z",
    "updated_at": "2023-01-03T19:11:57Z",
    "author_association": "NONE",
    "body": "Seemed we had consensus around the solution on the client-dev's call today. If there are any concerns please express them ASAP!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1370131327/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
