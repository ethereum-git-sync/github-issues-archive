{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/905/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/905/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/905/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/905",
  "id": 300180503,
  "node_id": "MDU6SXNzdWUzMDAxODA1MDM=",
  "number": 905,
  "title": "EIP 905: New Opcode SCLONE - fast clone the storage by copying the storage root hash of the source contract (Draft)",
  "user": {
    "login": "ivica7",
    "id": 17837189,
    "node_id": "MDQ6VXNlcjE3ODM3MTg5",
    "avatar_url": "https://avatars.githubusercontent.com/u/17837189?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ivica7",
    "html_url": "https://github.com/ivica7",
    "followers_url": "https://api.github.com/users/ivica7/followers",
    "following_url": "https://api.github.com/users/ivica7/following{/other_user}",
    "gists_url": "https://api.github.com/users/ivica7/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ivica7/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ivica7/subscriptions",
    "organizations_url": "https://api.github.com/users/ivica7/orgs",
    "repos_url": "https://api.github.com/users/ivica7/repos",
    "events_url": "https://api.github.com/users/ivica7/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ivica7/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 28,
  "created_at": "2018-02-26T10:18:48Z",
  "updated_at": "2022-01-01T23:11:52Z",
  "closed_at": "2022-01-01T23:11:52Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Preamble\r\n```\r\nEIP: 905\r\nTitle: New Opcode SCLONE - fast clone the storage by copying the storage root hash of the source contract\r\nAuthor: Ivica Aracic <aracic@gmail.com>\r\nCategory: EVM\r\nCreated: 2018-02-26\r\nUpdated: 2018-02-26\r\n```\r\n\r\n## Abstract\r\n\r\nThe following EIP describes an opcode which would replace the storage root hash of the contract with the storage root hash of another contract instance, effectively cloning the storage.\r\n\r\n## Motivation\r\n\r\nIn most situations smart contract code (like any other software) needs the possibility to be upgraded/changed. Reasons are obvious: bugs and changing requirements. In such upgrade scenarios it is often necessary to keep the storage while changing the functions. Currently the solution for this problem is to use delegatecalls. Data (D) and Functions (F) are separated into two contract instances. D uses delegatecalls to call functions from F and let them run in the context of its own storage.\r\n\r\nThis pattern is applicable, however, it introduces additional gas costs for the delegatecalls and for the additional setup during the initialisation. Moreover, it introduces additional infrastructure code which doesn't add to the business value.\r\n\r\nA simple Opcode allowing us to clone contract storage and use it as starting baseline in the new one, would significantly simplify the upgradability of contracts while preserving the security and saving the gas costs.  \r\n\r\n## Specification\r\nIntroduce a new SCLONE (storage clone) opcode to the EVM. \r\n\r\n*Parameters*\r\n* sourceContractAddress - the address of the source contract whose storage is to be cloned\r\n\r\n*Corner Cases*\r\n* source address doesn't exist - continue and leave contract's storage root hash unchanged\r\n\r\n``Opcode: 0x5c``\r\n``Gas Usage: 400``\r\n\r\n## Example\r\n\r\nThe examples sketch with the help of Solidity pseudo code at which place the new Opcode could be used.\r\n\r\n### Usecase: Copy Storage in Constructor\r\n```\r\ncontract DAOv2 {\r\n    function DAOv2(DAOv1 daoV1) {\r\n        ...\r\n        SCLONE(daoV1);\r\n        // from here on, we have a full fledged copy of daoV1's storage @blockNr\r\n        ...\r\n    }\r\n}\r\n```\r\n\r\n### Usecase: Make a Snapshot, revert to snapshot\r\n\r\n*To be discussed*: I am not sure if this is a good pattern to apply, but it would be possible with SCLONE.\r\n\r\n```\r\ncontract Snapshot {\r\n    function Snapshot(address source) {\r\n        SCLONE(source);\r\n    }\r\n\r\n    function() {throw;}\r\n}\r\n\r\ncontract SomeContract {\r\n    ...\r\n    function revertToSnapshot(address snapshot) {\r\n        SCLONE(snapshot);\r\n    }\r\n\r\n    function makeSnapshot() returns (Snapshot) {\r\n        return new Snapshot(this);\r\n    }\r\n    ...\r\n}\r\n\r\nSomeContract someContract = new SomeContract();\r\n... transactions take place ...\r\nSnapshot snapshot1 = someContract.makeSnapshot();\r\n... something bad happens ...\r\nsomeContract.revertToSnapshot(snapshot1);\r\n```\r\n\r\n### Usecase: Clone productive contract, make tests, delete the clone\r\n\r\nA productive instance can be cloned, tests can be made at the clone (e.g. testing for bugs based on production data (will be difficult if ether deposits are involved...)), when tests are finished the clone contract is deleted.\r\n\r\n## Rationale\r\n\r\nHaving blockNr as parameter to cloning the storage at a specific block sounds tempting, however, it is omitted here to keep the implementation simple.\r\n\r\nEspecially the upgradeability of contracts would benefit from this Opcode:\r\n- no need to separate data and functions into two contracts\r\n- changes in function result in a new smart contract\r\n- less infrastructure code -> less gas usage, easier to maintain, less bug potentials\r\n- the most efficient way to make a safe copy of the storage\r\n\r\n## Implementation\r\n\r\nThe client will do the following steps\r\n- lookup the storage root hash of the source contract (opcode parameter)\r\n- replace own storage root hash with the hash of the source contract\r\n\r\n## Alternatives\r\n\r\nContinue using the delegatecall pattern.\r\n\r\n\r\n## Test Cases\r\n\r\n_TBD_",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/905/reactions",
    "total_count": 7,
    "+1": 6,
    "-1": 1,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/905/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370133025",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-370133025",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 370133025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDEzMzAyNQ==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-03T09:12:02Z",
    "updated_at": "2018-03-03T09:12:02Z",
    "author_association": "MEMBER",
    "body": "I like the idea; it would allow contracts to fork just like chains, and it has very low implementation cost. Systems like Augur could use something like this right now.\r\n\r\nA few thoughts:\r\n - It shouldn't specify a block number, but rather just fork at the current state, or the state at the start of the present block. Specifying a block number would impose significant overhead on clients.\r\n - It shouldn't enforce anything about the current state root hash, but rather just overwrite it. Protections against this can be implemented in programs.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370133025/reactions",
      "total_count": 5,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370133667",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-370133667",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 370133667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDEzMzY2Nw==",
    "user": {
      "login": "ivica7",
      "id": 17837189,
      "node_id": "MDQ6VXNlcjE3ODM3MTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/17837189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivica7",
      "html_url": "https://github.com/ivica7",
      "followers_url": "https://api.github.com/users/ivica7/followers",
      "following_url": "https://api.github.com/users/ivica7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivica7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivica7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivica7/subscriptions",
      "organizations_url": "https://api.github.com/users/ivica7/orgs",
      "repos_url": "https://api.github.com/users/ivica7/repos",
      "events_url": "https://api.github.com/users/ivica7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivica7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-03T09:25:13Z",
    "updated_at": "2018-03-03T12:51:29Z",
    "author_association": "NONE",
    "body": "@Arachnid thank you for the feedback. I guess you're right, allowing to specify a blockNr sounds tempting, but it complicates the implementation. Instead of that, developers could decide to simply make a snapshot for a later reuse (like discussed in #909). Meanwhile I think, the enforcement with the empty state is unnecessary limiting. The argument with trust is not that strong anyway. It will be obvious from the code of the contract at which places the cloning can happen. I'll wait a little bit for other comments, then I'll rewrite the draft.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370133667/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370148720",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-370148720",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 370148720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDE0ODcyMA==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-03T13:47:45Z",
    "updated_at": "2018-03-03T13:47:45Z",
    "author_association": "MEMBER",
    "body": "The biggest problem I can see with something like this is \"where does the ETH go\"?  My assumption would be that the ETH remains in the old contracts and the application developer would need to build in a mechanism for migrating the ETH from the old system to the new one.  Similarly, any external contracts that track \"ownership\" (e.g., tokens) would leave the ownership on the original code rather than the forked code.\r\n\r\nI'm certainly not against this pattern, though I do worry about how effectively it can be leveraged since most systems must interact with external systems and solving the problem of migration of ownership from old system to new is non-trivial.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370148720/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370150655",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-370150655",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 370150655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDE1MDY1NQ==",
    "user": {
      "login": "ivica7",
      "id": 17837189,
      "node_id": "MDQ6VXNlcjE3ODM3MTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/17837189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivica7",
      "html_url": "https://github.com/ivica7",
      "followers_url": "https://api.github.com/users/ivica7/followers",
      "following_url": "https://api.github.com/users/ivica7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivica7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivica7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivica7/subscriptions",
      "organizations_url": "https://api.github.com/users/ivica7/orgs",
      "repos_url": "https://api.github.com/users/ivica7/repos",
      "events_url": "https://api.github.com/users/ivica7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivica7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-03T14:18:42Z",
    "updated_at": "2018-03-03T14:20:56Z",
    "author_association": "NONE",
    "body": "@MicahZoltu thanks for the feedback! You're absolutely right with ETH. The developers need to design a migration path for ETH infront. \r\n\r\n> I'm certainly not against this pattern, though I do worry about how effectively it can be leveraged since most systems must interact with external systems and solving the problem of migration of ownership from old system to new is non-trivial.\r\n\r\nYes, SCLONE wouldn't alone solve the problem for all these aspects, however, there are already good solutions for coping with this:\r\n- Interaction World -> Contract: Indirection -> don't use the address, use ENS. Same as with IP and DNS for WWW and co. Alternatively, you can build your own lookup service for your own contracts (better performance?). When you migrate to a new instance of the contract, update ENS/your own Lookup service. \r\n- Interaction Contract -> Other Contracts: Indirection again -> Use a stable IdentityProxy contract (like in uPort for instance) and permit the clone to run through it.\r\n- Interaction Other Contracts -> Contract: basically the same as World -> Contract.\r\n\r\nIn all cases the dependency goes into the direction of stability.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370150655/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371465684",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-371465684",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 371465684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTQ2NTY4NA==",
    "user": {
      "login": "ghasshee",
      "id": 11690126,
      "node_id": "MDQ6VXNlcjExNjkwMTI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/11690126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghasshee",
      "html_url": "https://github.com/ghasshee",
      "followers_url": "https://api.github.com/users/ghasshee/followers",
      "following_url": "https://api.github.com/users/ghasshee/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghasshee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghasshee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghasshee/subscriptions",
      "organizations_url": "https://api.github.com/users/ghasshee/orgs",
      "repos_url": "https://api.github.com/users/ghasshee/repos",
      "events_url": "https://api.github.com/users/ghasshee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghasshee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T11:51:42Z",
    "updated_at": "2018-03-08T14:26:28Z",
    "author_association": "NONE",
    "body": "The idea seems interesting apparently, however I began to consider how it will do along with the process of the construction of the state trie. \r\n\r\nI thought that SCLONE meant nothing in terms of the state trie. Is it right ? \r\nIs this an alias of copying the same code and creates the new contract owner with the same code? \r\n\r\nI am currently on the way of interpreting yellow paper and it seems that \r\nSCLONE provides just a simple and convenient alias for it?\r\nIs this right?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371465684/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371467154",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-371467154",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 371467154,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTQ2NzE1NA==",
    "user": {
      "login": "ivica7",
      "id": 17837189,
      "node_id": "MDQ6VXNlcjE3ODM3MTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/17837189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivica7",
      "html_url": "https://github.com/ivica7",
      "followers_url": "https://api.github.com/users/ivica7/followers",
      "following_url": "https://api.github.com/users/ivica7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivica7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivica7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivica7/subscriptions",
      "organizations_url": "https://api.github.com/users/ivica7/orgs",
      "repos_url": "https://api.github.com/users/ivica7/repos",
      "events_url": "https://api.github.com/users/ivica7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivica7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T11:58:52Z",
    "updated_at": "2018-03-08T11:58:52Z",
    "author_association": "NONE",
    "body": "@ghasshee SCLONE would be a new opcode in the EVM. It would copy the storageRootHash of a source contract for the contract instance where it's executed. Logically, you would have the storage cloned with this.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371467154/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371468184",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-371468184",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 371468184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTQ2ODE4NA==",
    "user": {
      "login": "ghasshee",
      "id": 11690126,
      "node_id": "MDQ6VXNlcjExNjkwMTI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/11690126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghasshee",
      "html_url": "https://github.com/ghasshee",
      "followers_url": "https://api.github.com/users/ghasshee/followers",
      "following_url": "https://api.github.com/users/ghasshee/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghasshee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghasshee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghasshee/subscriptions",
      "organizations_url": "https://api.github.com/users/ghasshee/orgs",
      "repos_url": "https://api.github.com/users/ghasshee/repos",
      "events_url": "https://api.github.com/users/ghasshee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghasshee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T12:03:53Z",
    "updated_at": "2018-03-08T13:11:06Z",
    "author_association": "NONE",
    "body": "@ivica7 \r\n\r\nI meant, 'is it the specification of the current ethereum ? '\r\nDo you know how the trie db is constructed ? \r\nI do not know well, but I thought that it was the current specification in terms of db size.\r\nso, your implementation of the new opcodes seem to be just an alias of the action of copying the new code in terms of db size. \r\n\r\nIs this right ? I am afraid I am not sure...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371468184/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371480426",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-371480426",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 371480426,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTQ4MDQyNg==",
    "user": {
      "login": "ivica7",
      "id": 17837189,
      "node_id": "MDQ6VXNlcjE3ODM3MTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/17837189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivica7",
      "html_url": "https://github.com/ivica7",
      "followers_url": "https://api.github.com/users/ivica7/followers",
      "following_url": "https://api.github.com/users/ivica7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivica7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivica7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivica7/subscriptions",
      "organizations_url": "https://api.github.com/users/ivica7/orgs",
      "repos_url": "https://api.github.com/users/ivica7/repos",
      "events_url": "https://api.github.com/users/ivica7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivica7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T13:02:38Z",
    "updated_at": "2018-03-08T13:02:38Z",
    "author_association": "NONE",
    "body": "@ghasshee you can meet me in Gitter later.. then we can have a chat. I am not sure if I exactly understand what your question is.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371480426/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371481683",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-371481683",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 371481683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTQ4MTY4Mw==",
    "user": {
      "login": "ghasshee",
      "id": 11690126,
      "node_id": "MDQ6VXNlcjExNjkwMTI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/11690126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghasshee",
      "html_url": "https://github.com/ghasshee",
      "followers_url": "https://api.github.com/users/ghasshee/followers",
      "following_url": "https://api.github.com/users/ghasshee/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghasshee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghasshee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghasshee/subscriptions",
      "organizations_url": "https://api.github.com/users/ghasshee/orgs",
      "repos_url": "https://api.github.com/users/ghasshee/repos",
      "events_url": "https://api.github.com/users/ghasshee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghasshee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T13:08:27Z",
    "updated_at": "2018-03-08T14:22:02Z",
    "author_association": "NONE",
    "body": "Yeah, I am happy to hear having the opportunity !\r\nAnd I should say I am so slow interpreter of yellow paper, now it has passed 3 years since I decided to read  it, that I might not know well... \r\nBut now I am tracking yellow paper more deeply than before thanking to your idea!\r\n\r\nIn short, I mean I do not know well how the contract code is stored in the trie in contract creation.\r\nI thought that the bytecode stored to the 'k' of (k,v). (But I have not followed the definition exactly in yellow paper) Thus the 'bytecode k' would be stored in [Merkle Patricia tree](https://github.com/ethereum/wiki/wiki/Patricia-Tree) efficiently and it is the very part I am not sure.\r\nI am afraid I am sure that trie db is a set of (k,v) pairs.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371481683/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371487086",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-371487086",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 371487086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTQ4NzA4Ng==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T13:31:48Z",
    "updated_at": "2018-03-08T13:31:48Z",
    "author_association": "MEMBER",
    "body": "While this is technically simple to implement, consider this: \r\n\r\n* I clone the storage of btcrelay, or cryptokitties\r\n* I delete every storage entry, get the gas-cashback for the deletion...\r\n\r\nSo basically I could use another contracts data (which it paid for), to create very cheap state modification (since the deletion of data is subsidized). Sounds like a DoS-attack to me.  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371487086/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371502678",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-371502678",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 371502678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTUwMjY3OA==",
    "user": {
      "login": "ivica7",
      "id": 17837189,
      "node_id": "MDQ6VXNlcjE3ODM3MTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/17837189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivica7",
      "html_url": "https://github.com/ivica7",
      "followers_url": "https://api.github.com/users/ivica7/followers",
      "following_url": "https://api.github.com/users/ivica7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivica7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivica7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivica7/subscriptions",
      "organizations_url": "https://api.github.com/users/ivica7/orgs",
      "repos_url": "https://api.github.com/users/ivica7/repos",
      "events_url": "https://api.github.com/users/ivica7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivica7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T14:29:35Z",
    "updated_at": "2018-03-08T14:29:35Z",
    "author_association": "NONE",
    "body": "Thanks for commenting @holiman. That's worth taking a closer look on it!\r\n\r\nSo what would an attacker do?\r\n\r\nCase 1:\r\nHe SCLONE a contract and deletes all slots in one transaction. This would effectively cause no change in the trie, since the old contract is reusing the trie structure as is and the new empty contract would have a storage root hash poiting to empty storage.\r\n\r\nCase 2:\r\nThe attacker SCLONE a contract with a large storage 100 times and then randomly deletes storage slots in these contracts with the goal to introduce new paths/nodes in the trie? \r\n\r\nAFAIK, the accumulated refund can not exceed half the gas used for the current execution. So in sum your deletes won't be for free in the end. You'll have to pay for it.\r\n\r\nNow the essential question is: does the gas price for the delete has a dependency to the fact that someone had to pay at least one full price for the write of this slot? Or does the deletion of a slot has a gas price which exactly reflects the computation necessary for this deletion independently of past events?\r\n\r\nIf the second is the case, it doesn't matter if I have for one write to a slot more than one delete of that slot. In the first case it could be a problem. But I guess we need expert's opinion here. @Arachnid ?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371502678/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371503670",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-371503670",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 371503670,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTUwMzY3MA==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T14:32:50Z",
    "updated_at": "2018-03-08T14:32:50Z",
    "author_association": "MEMBER",
    "body": "The attacker basically gets half off on all of their transactions by just suffixing them with a big deletion.\r\n\r\nAlternatively, the attacker clones something like Augur periodically which prevents the trie nodes from being deleted, so when Augur transactions clear storage, the system can't actually clean up any space so other people end up getting gas refunds when they shouldn't.\r\n\r\nI think the only way for the gas to work out is for the SCLONE to cost whatever it would cost to store all of the things in the contract.  For most interesting contracts, this is beyond the gas limit.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371503670/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371517066",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-371517066",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 371517066,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTUxNzA2Ng==",
    "user": {
      "login": "ivica7",
      "id": 17837189,
      "node_id": "MDQ6VXNlcjE3ODM3MTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/17837189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivica7",
      "html_url": "https://github.com/ivica7",
      "followers_url": "https://api.github.com/users/ivica7/followers",
      "following_url": "https://api.github.com/users/ivica7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivica7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivica7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivica7/subscriptions",
      "organizations_url": "https://api.github.com/users/ivica7/orgs",
      "repos_url": "https://api.github.com/users/ivica7/repos",
      "events_url": "https://api.github.com/users/ivica7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivica7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T15:15:08Z",
    "updated_at": "2018-03-08T15:15:08Z",
    "author_association": "NONE",
    "body": "@MicahZoltu @holiman : ok. I've got the point why this is dangerous. \r\n\r\nJust for the reference @flygoing, made a good comment on this in #909 (it could work, if we would have rent based storage).\r\n\r\nOk, I am closing this ticket. I learned a lot! Thank you very much for your time and comments.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371517066/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371889165",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-371889165",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 371889165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTg4OTE2NQ==",
    "user": {
      "login": "ivica7",
      "id": 17837189,
      "node_id": "MDQ6VXNlcjE3ODM3MTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/17837189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivica7",
      "html_url": "https://github.com/ivica7",
      "followers_url": "https://api.github.com/users/ivica7/followers",
      "following_url": "https://api.github.com/users/ivica7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivica7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivica7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivica7/subscriptions",
      "organizations_url": "https://api.github.com/users/ivica7/orgs",
      "repos_url": "https://api.github.com/users/ivica7/repos",
      "events_url": "https://api.github.com/users/ivica7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivica7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T17:46:51Z",
    "updated_at": "2018-03-09T17:46:51Z",
    "author_association": "NONE",
    "body": "Some fresh ideas from Gitter: If refund would be disabled for SCLONEd contracts, SCLONE couldn't be used for DoS. \r\n\r\n@Arachnid is pointing out that this would require storing the information about if the contract was cloned or not, which would be a big change in the state trie. Moreover, Parity could have a problem with cloning, because it is keeping each storage trie isolated from each other. It's not a graph like in geth.\r\n\r\nMoreover @holiman is concerned that storage trie could be bloated by cloning and making minor changes to the state. I think this shouldn't be a problem, since SSTORE as used today would cause the same changes in the existing tries.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371889165/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/372372786",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-372372786",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 372372786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjM3Mjc4Ng==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-12T16:28:56Z",
    "updated_at": "2018-04-03T17:52:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Now we need to track the SCLONE-ness of each contract. This is expensive and it feels too much of a hack.\r\n\r\nThe affect on gas usage of this opcode makes accounting impossible and poses a real harm to the ethereum ecosystem. \r\n\r\n# Exploit proof of concept:\r\n\r\nMy attack application runs an SCLONE on every new contract that is created. Now the benefit of `SSTORE addr 0` is permanently lost. This is a cheap attack for me to fund and the cost to the platform is significant.\r\n\r\n# Discussion\r\n\r\nI believe we should consider SSTORE only after the discussion on EVM rent (charging per storage per month) is held and discussed entirely to its conclusion.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/372372786/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/373205628",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-373205628",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 373205628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzIwNTYyOA==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-14T23:12:25Z",
    "updated_at": "2018-03-14T23:13:13Z",
    "author_association": "MEMBER",
    "body": "I fully support this so long as costs for it are properly reflected and internalized. One thing that might be of some concern however is transmitting storage to the interface in play and this needs to be taken into account. SCLONE would be good if it's properly defining the state for a certain interface at a certain point in time. This enables the possibility of \"forks\" of certain software designs in open source projects and the upgradeability of contracts. It also acts more like a pointer which could be taken further ti eventually copying it when one of the storage pointers is modified (though this would require reads which could make this expensive...thus negating any gains to be had from \"storing\" the gas for a later refund). ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/373205628/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/377540002",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-377540002",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 377540002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzU0MDAwMg==",
    "user": {
      "login": "Agusx1211",
      "id": 12701942,
      "node_id": "MDQ6VXNlcjEyNzAxOTQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/12701942?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Agusx1211",
      "html_url": "https://github.com/Agusx1211",
      "followers_url": "https://api.github.com/users/Agusx1211/followers",
      "following_url": "https://api.github.com/users/Agusx1211/following{/other_user}",
      "gists_url": "https://api.github.com/users/Agusx1211/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Agusx1211/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Agusx1211/subscriptions",
      "organizations_url": "https://api.github.com/users/Agusx1211/orgs",
      "repos_url": "https://api.github.com/users/Agusx1211/repos",
      "events_url": "https://api.github.com/users/Agusx1211/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Agusx1211/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-30T14:48:49Z",
    "updated_at": "2018-03-30T14:48:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "There is a security issue with this OPCODE; some contracts could rely on the premise that other contracts cannot read its storage.\r\n\r\nYou could clone or \"steal\" any information from any contract, I know that reading private variables is already possible, but only from an external user perspective, not from the EVM itself, this breaks encapsulation.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/377540002/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/377563395",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-377563395",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 377563395,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzU2MzM5NQ==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-30T16:28:54Z",
    "updated_at": "2018-03-30T16:28:54Z",
    "author_association": "MEMBER",
    "body": "@Agusx1211 this is a compilers issue and how compilers utilize the opcode itself and what they allow to be written and not be written. Not a problem with the opcode itself. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/377563395/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/377593784",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-377593784",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 377593784,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzU5Mzc4NA==",
    "user": {
      "login": "GNSPS",
      "id": 4008213,
      "node_id": "MDQ6VXNlcjQwMDgyMTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4008213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GNSPS",
      "html_url": "https://github.com/GNSPS",
      "followers_url": "https://api.github.com/users/GNSPS/followers",
      "following_url": "https://api.github.com/users/GNSPS/following{/other_user}",
      "gists_url": "https://api.github.com/users/GNSPS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GNSPS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GNSPS/subscriptions",
      "organizations_url": "https://api.github.com/users/GNSPS/orgs",
      "repos_url": "https://api.github.com/users/GNSPS/repos",
      "events_url": "https://api.github.com/users/GNSPS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GNSPS/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-30T18:43:42Z",
    "updated_at": "2018-03-30T18:43:42Z",
    "author_association": "NONE",
    "body": "@Agusx1211 You can already achieve that with an oracle.\r\n\r\nThe only difference from that would be that you could get other contract storage's contents during a \"same transaction\" context (as opposed to another transaction's context with an oracle).\r\n\r\nDo you know of a design where this is an actual vulnerability, though? (i.e. where the actual encapsulation of `private` storage vars is essential to a contract's design) ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/377593784/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/378275060",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-378275060",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 378275060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODI3NTA2MA==",
    "user": {
      "login": "ivica7",
      "id": 17837189,
      "node_id": "MDQ6VXNlcjE3ODM3MTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/17837189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivica7",
      "html_url": "https://github.com/ivica7",
      "followers_url": "https://api.github.com/users/ivica7/followers",
      "following_url": "https://api.github.com/users/ivica7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivica7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivica7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivica7/subscriptions",
      "organizations_url": "https://api.github.com/users/ivica7/orgs",
      "repos_url": "https://api.github.com/users/ivica7/repos",
      "events_url": "https://api.github.com/users/ivica7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivica7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-03T14:43:15Z",
    "updated_at": "2018-04-03T14:43:15Z",
    "author_association": "NONE",
    "body": "> There is a security issue with this OPCODE; some contracts could rely on the premise that other contracts cannot read its storage.\r\n\r\n@Agusx1211 : This would be a very dangerous premise, since all data put on-chain is readable by everyone.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/378275060/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/378288833",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-378288833",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 378288833,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODI4ODgzMw==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-03T15:21:47Z",
    "updated_at": "2018-04-03T15:21:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Or put another way -- please provide a specific example, because I can go and attack that contract today!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/378288833/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/378303979",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-378303979",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 378303979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODMwMzk3OQ==",
    "user": {
      "login": "ivica7",
      "id": 17837189,
      "node_id": "MDQ6VXNlcjE3ODM3MTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/17837189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivica7",
      "html_url": "https://github.com/ivica7",
      "followers_url": "https://api.github.com/users/ivica7/followers",
      "following_url": "https://api.github.com/users/ivica7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivica7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivica7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivica7/subscriptions",
      "organizations_url": "https://api.github.com/users/ivica7/orgs",
      "repos_url": "https://api.github.com/users/ivica7/repos",
      "events_url": "https://api.github.com/users/ivica7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivica7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-03T16:05:16Z",
    "updated_at": "2018-04-03T16:05:16Z",
    "author_association": "NONE",
    "body": "> I believe we should consider SSTORE only after the discussion on EVM rent (charging per storage per month) is held and discussed entirely to its conclusion.\r\n\r\n@fulldecent I agree. Eventually gas refunds will be redesigned too and we can re-evaluate the refund-attack in the new context.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/378303979/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/379561498",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-379561498",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 379561498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTU2MTQ5OA==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-08T16:06:37Z",
    "updated_at": "2018-04-08T16:06:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here is a competing straw man proposal that addresses the use case that SCLONE is trying to solve and does not have the gas problem.\r\n\r\n---\r\n\r\n# SLOADANY\r\n\r\n> µ'<sub>s</sub>[0] ≡ σ[µ<sub>s</sub>[1]]<sub>s</sub>µ<sub>s</sub>[0]\r\n\r\nAnd you would use this like:\r\n\r\n```solidity\r\nfunction f(uint word, uint account) public returns (uint value) {\r\n    assembly {\r\n        value := sloadany(word, account))\r\n    }\r\n}\r\n```\r\n\r\nThen the higher-level Solidity might look like this:\r\n\r\n```solidity\r\ninterface EIP721V2 {\r\n    function tokens() returns (uint[]);\r\n}\r\n\r\ncontract ColorInspector {\r\n    function firstYellowToken(EIP721V2 contract) returns (uint) {\r\n        uint[] tokens = contract.tokens;\r\n        for ...\r\n            if (isYellow(tokens[i]))\r\n                return tokens[i];\r\n    }\r\n}\r\n```\r\n\r\n# Discussion\r\n\r\n* This is a O(1) operation. \r\n* The Entriken attack above does not work -- if the underlying storage is gone (and partially refunded) then you can't access it any more.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/379561498/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/379561782",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-379561782",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 379561782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTU2MTc4Mg==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-08T16:10:41Z",
    "updated_at": "2018-04-08T16:10:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "# Proof of concept attack number 2\r\n\r\n1. Deploy large contract.\r\n1. Use it as normal.\r\n1. Clone it, switch everyone to the new contract (this is trivial if you are using upgradeable contracts).\r\n1. Somebody pays you for the opportunity to `selfdestruct` and get proceeds of your existing contract.\r\n\r\nThis attack produces 8,000,000 / 2 * gas price money out of thin air. Currently worth $6 each time you do this.\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/379561782/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/504808429",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-504808429",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 504808429,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDgwODQyOQ==",
    "user": {
      "login": "xinbenlv",
      "id": 640325,
      "node_id": "MDQ6VXNlcjY0MDMyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/640325?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xinbenlv",
      "html_url": "https://github.com/xinbenlv",
      "followers_url": "https://api.github.com/users/xinbenlv/followers",
      "following_url": "https://api.github.com/users/xinbenlv/following{/other_user}",
      "gists_url": "https://api.github.com/users/xinbenlv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xinbenlv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xinbenlv/subscriptions",
      "organizations_url": "https://api.github.com/users/xinbenlv/orgs",
      "repos_url": "https://api.github.com/users/xinbenlv/repos",
      "events_url": "https://api.github.com/users/xinbenlv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xinbenlv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-24T01:30:09Z",
    "updated_at": "2019-06-24T01:30:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fulldecent 's proof of concept attack is interesting. Does this proposal have any follow up discussion?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/504808429/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/558281797",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-558281797",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 558281797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODI4MTc5Nw==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-25T18:29:26Z",
    "updated_at": "2019-11-25T18:29:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "It seems this proposal is dead. Recommending to close issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/558281797/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997291776",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-997291776",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 997291776,
    "node_id": "IC_kwDOAq426M47cXcA",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-18T22:11:24Z",
    "updated_at": "2021-12-18T22:11:24Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997291776/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003634069",
    "html_url": "https://github.com/ethereum/EIPs/issues/905#issuecomment-1003634069",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/905",
    "id": 1003634069,
    "node_id": "IC_kwDOAq426M470j2V",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-01T23:11:52Z",
    "updated_at": "2022-01-01T23:11:52Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003634069/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
