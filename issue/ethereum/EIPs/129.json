{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/129/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/129/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/129/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/129",
  "id": 164134048,
  "node_id": "MDU6SXNzdWUxNjQxMzQwNDg=",
  "number": 129,
  "title": "Precompiled BLAKE2b ",
  "user": {
    "login": "tjade273",
    "id": 3936648,
    "node_id": "MDQ6VXNlcjM5MzY2NDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3936648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tjade273",
    "html_url": "https://github.com/tjade273",
    "followers_url": "https://api.github.com/users/tjade273/followers",
    "following_url": "https://api.github.com/users/tjade273/following{/other_user}",
    "gists_url": "https://api.github.com/users/tjade273/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tjade273/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tjade273/subscriptions",
    "organizations_url": "https://api.github.com/users/tjade273/orgs",
    "repos_url": "https://api.github.com/users/tjade273/repos",
    "events_url": "https://api.github.com/users/tjade273/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tjade273/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 35,
  "created_at": "2016-07-06T17:45:04Z",
  "updated_at": "2016-10-04T15:25:06Z",
  "closed_at": "2016-10-04T15:25:06Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Title\n\n```\n  Title: Add precompiled BLAKE2b contract\n  Author: Tjaden Hess <tah83@cornell.edu>\n  Status: Draft\n  Type: Standard Track\n  Layer: Consensus (hard-fork)\n  Created 2016-06-30\n```\n### Abstract\n\nThis EIP introduces a new precompiled contract which implements the BLAKE2b cryptographic hashing algorithm, for the purpose of allowing interoperability between the Zcash blockchain and the EVM.\n### Parameters\n- `METROPOLIS_FORK_BLKNUM`: TBD\n- `GBLAKEBASE`: 30\n- `GBLAKEWORD`: 6\n### Specification\n\nAdds a precompile at address `0x0000....0c` which accepts a variable length input interpreted as\n\n```\n[OUTSIZE, SALT[0...15], PERSONALIZATION[0...15], D_1, D_2, ..., D_INSIZE]\n```\n\n where `INSIZE` is the length in bytes of the input. Throws if `OUTSIZE` is greater than 64. Returns the `OUTSIZE`-byte BLAKE2b digest, as defined in [RFC 7693](https://tools.ietf.org/html/rfc7693).\n\nGas costs would be equal to `GBLAKEBASE + GBLAKEWORD * floor(INSIZE / 32)`\n\nIn order to maintain backwards compatibility, the precompile will return `0` if `CURRENT_BLOCKNUM < METROPOLIS_FORK_BLKNUM`\n### Motivation\n\nBesides being a useful cryptographic hash function and SHA3 finalist, BLAKE2b allows for efficient verification of the Equihash PoW used in Zcash, making a BTC Relay - style SPV client possible on Ethereum. One BLAKE2 digest in Soldity, (see https://github.com/tjade273/eth-blake2/blob/optimise_everything/contracts/blake2.sol) currently requires `~480,000 + ~90*INSIZE` gas, and a single verification of an [Equihash](https://www.internetsociety.org/sites/default/files/blogs-media/equihash-asymmetric-proof-of-work-based-generalized-birthday-problem.pdf) PoW verification requires 2<sup>5</sup> to 2<sup>7</sup> iterations of the hash function, making verification of Zcash block headers prohibitively expensive.\n\nThe BLAKE2b algorithm is highly optimized for 64-bit CPUs, and is faster than MD5 on modern processors.\n\nInteroperability with Zcash would enable trustless atomic swaps between the chains, which could provide a much needed aspect of privacy to the very public Ethereum blockchain.\n### Rationale\n\nThe most frequent concern with EIPs of this type is that the addition of specific functions at the protocol level is an infringement on Ethereum's \"featureless\" design. It is true that a more elegant solution to the issue is to simply improve the scalability characteristics of the network so as to make calculating functions requiring millions of gas practical for everyday use. In the meantime, however, I believe that certain operations are worth subsidising via precompiled contracts and there is significant precedent for this, most notably the inclusion of the SHA256 prcompiled contract, which is included largely to allow inter-operation with the Bitcoin blockchain.\n\nAdditionally, BLAKE2b is an excellent candidate for precompilation because of the extremely asymetric efficiency which it exhibits. BLAKE2b is heavily optimized for modern 64-bit CPUs, specifically utilizing 24 and 63-bit rotations to allow parallelism through SIMD instructions and is little-endian. These characteristics provide exceptional speed on native CPUs: 3.08 cycles per byte, or 1 gibibyte per second on an Intel i5.\n\nIn contrast, the big-endian 32 byte semantics of the EVM are not conducive to efficient implementation of BLAKE2, and thus the gas cost associated with computing the hash on the EVM is disproportionate to the true cost of computing the function natively.\n\nNote that the function can produce a variable-length digest, up to 64 bytes, which is a feature currently missing from the hash functions included in the EVM and is an important component in the Equihash PoW algorithm.  \n\nThere is very little risk of breaking backwards-compatibility with this EIP, the sole issue being if someone were to build a contract relying on the address at `0x000....0000c` being empty. Te likelihood of this is low, and should specific instances arise, the address could be chosen to be any arbitrary value, with negligible risk of collision.\n",
  "closed_by": {
    "login": "tjade273",
    "id": 3936648,
    "node_id": "MDQ6VXNlcjM5MzY2NDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3936648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tjade273",
    "html_url": "https://github.com/tjade273",
    "followers_url": "https://api.github.com/users/tjade273/followers",
    "following_url": "https://api.github.com/users/tjade273/following{/other_user}",
    "gists_url": "https://api.github.com/users/tjade273/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tjade273/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tjade273/subscriptions",
    "organizations_url": "https://api.github.com/users/tjade273/orgs",
    "repos_url": "https://api.github.com/users/tjade273/repos",
    "events_url": "https://api.github.com/users/tjade273/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tjade273/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/129/reactions",
    "total_count": 13,
    "+1": 13,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/129/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/231173288",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-231173288",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 231173288,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTE3MzI4OA==",
    "user": {
      "login": "tjade273",
      "id": 3936648,
      "node_id": "MDQ6VXNlcjM5MzY2NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3936648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjade273",
      "html_url": "https://github.com/tjade273",
      "followers_url": "https://api.github.com/users/tjade273/followers",
      "following_url": "https://api.github.com/users/tjade273/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjade273/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjade273/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjade273/subscriptions",
      "organizations_url": "https://api.github.com/users/tjade273/orgs",
      "repos_url": "https://api.github.com/users/tjade273/repos",
      "events_url": "https://api.github.com/users/tjade273/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjade273/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T18:54:24Z",
    "updated_at": "2016-07-07T18:54:24Z",
    "author_association": "NONE",
    "body": "PRs implementing the changes are in the works\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/231173288/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/231225491",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-231225491",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 231225491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTIyNTQ5MQ==",
    "user": {
      "login": "kumavis",
      "id": 1474978,
      "node_id": "MDQ6VXNlcjE0NzQ5Nzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1474978?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kumavis",
      "html_url": "https://github.com/kumavis",
      "followers_url": "https://api.github.com/users/kumavis/followers",
      "following_url": "https://api.github.com/users/kumavis/following{/other_user}",
      "gists_url": "https://api.github.com/users/kumavis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kumavis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kumavis/subscriptions",
      "organizations_url": "https://api.github.com/users/kumavis/orgs",
      "repos_url": "https://api.github.com/users/kumavis/repos",
      "events_url": "https://api.github.com/users/kumavis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kumavis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T22:21:30Z",
    "updated_at": "2016-07-07T22:37:49Z",
    "author_association": "MEMBER",
    "body": "@tjade273 excellent EIP - clear and easy to follow. can you explain how this enables Zcash atomic swaps? BTC relay does not enable atomic BTC swaps, only tx confirmation.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/231225491/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/231230239",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-231230239",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 231230239,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTIzMDIzOQ==",
    "user": {
      "login": "tjade273",
      "id": 3936648,
      "node_id": "MDQ6VXNlcjM5MzY2NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3936648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjade273",
      "html_url": "https://github.com/tjade273",
      "followers_url": "https://api.github.com/users/tjade273/followers",
      "following_url": "https://api.github.com/users/tjade273/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjade273/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjade273/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjade273/subscriptions",
      "organizations_url": "https://api.github.com/users/tjade273/orgs",
      "repos_url": "https://api.github.com/users/tjade273/repos",
      "events_url": "https://api.github.com/users/tjade273/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjade273/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T22:46:51Z",
    "updated_at": "2016-07-07T22:46:51Z",
    "author_association": "NONE",
    "body": "Even with BTC relay, one can construct a sort of swap contract. If Alice wants to buy 1 BTC from Bob, \n\nAlice can create a contract which pays 100 ETH to whomever can provide a merkle proof of a transaction to Alice's BTC address, or sends the ETH back to Alice if no one provides a valid transaction within some time limit. \n\nThe Zrelay would enable the same thing\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/231230239/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/231232685",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-231232685",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 231232685,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTIzMjY4NQ==",
    "user": {
      "login": "kumavis",
      "id": 1474978,
      "node_id": "MDQ6VXNlcjE0NzQ5Nzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1474978?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kumavis",
      "html_url": "https://github.com/kumavis",
      "followers_url": "https://api.github.com/users/kumavis/followers",
      "following_url": "https://api.github.com/users/kumavis/following{/other_user}",
      "gists_url": "https://api.github.com/users/kumavis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kumavis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kumavis/subscriptions",
      "organizations_url": "https://api.github.com/users/kumavis/orgs",
      "repos_url": "https://api.github.com/users/kumavis/repos",
      "events_url": "https://api.github.com/users/kumavis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kumavis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T23:01:18Z",
    "updated_at": "2016-07-07T23:01:18Z",
    "author_association": "MEMBER",
    "body": "👍  right ok, requires a market+escrow contract 👍 \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/231232685/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/234734095",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-234734095",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 234734095,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDczNDA5NQ==",
    "user": {
      "login": "daira",
      "id": 643204,
      "node_id": "MDQ6VXNlcjY0MzIwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/643204?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daira",
      "html_url": "https://github.com/daira",
      "followers_url": "https://api.github.com/users/daira/followers",
      "following_url": "https://api.github.com/users/daira/following{/other_user}",
      "gists_url": "https://api.github.com/users/daira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daira/subscriptions",
      "organizations_url": "https://api.github.com/users/daira/orgs",
      "repos_url": "https://api.github.com/users/daira/repos",
      "events_url": "https://api.github.com/users/daira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-23T18:53:58Z",
    "updated_at": "2016-07-23T18:55:37Z",
    "author_association": "NONE",
    "body": "Note that the variation of BLAKE2b used by the Zcash PoW is set to have an output length other than the default 512 bits, and a custom personalisation string (both of these depend on the Equihash parameters, which have not been nailed down yet): https://github.com/zcash/zcash/blob/zc.v0.11.2.latest/src/crypto/equihash.cpp#L30\n\nI recommend allowing arbitrary personalisation strings and output lengths (and maybe salts, which are not used by Zcash but may be used by other protocols) to be specified.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/234734095/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/234736633",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-234736633",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 234736633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDczNjYzMw==",
    "user": {
      "login": "tjade273",
      "id": 3936648,
      "node_id": "MDQ6VXNlcjM5MzY2NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3936648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjade273",
      "html_url": "https://github.com/tjade273",
      "followers_url": "https://api.github.com/users/tjade273/followers",
      "following_url": "https://api.github.com/users/tjade273/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjade273/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjade273/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjade273/subscriptions",
      "organizations_url": "https://api.github.com/users/tjade273/orgs",
      "repos_url": "https://api.github.com/users/tjade273/repos",
      "events_url": "https://api.github.com/users/tjade273/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjade273/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-23T19:48:40Z",
    "updated_at": "2016-07-23T19:48:40Z",
    "author_association": "NONE",
    "body": "Yes, I originally drafted the EIP with arbitrary length output, but in the\ninterests of getting the idea out there, I made it a little simpler.\n\nI recently added personalisation to Solidity implementation as well, so\nthat shouldn't be a problem\n\nOn Sat, Jul 23, 2016, 8:54 PM Daira Hopwood notifications@github.com\nwrote:\n\n> Note that the variation of BLAKE2b used by the Zcash PoW is set to have an\n> output length other than the default 512 bits, and a custom personalisation\n> string (both of these depend on the Equihash parameters, which have not\n> been nailed down yet):\n> https://github.com/zcash/zcash/blob/zc.v0.11.2.latest/src/crypto/equihash.cpp#L30\n> \n> I recommend allowing arbitrary personalisation strings and output lengths\n> to be specified.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/ethereum/EIPs/issues/129#issuecomment-234734095, or mute\n> the thread\n> https://github.com/notifications/unsubscribe-auth/ADwRiHAsf5PwvCgpgRG5v_taTCYkdY6hks5qYmNJgaJpZM4JGVJJ\n> .\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/234736633/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/234748084",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-234748084",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 234748084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDc0ODA4NA==",
    "user": {
      "login": "zookozcash",
      "id": 16416064,
      "node_id": "MDQ6VXNlcjE2NDE2MDY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/16416064?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zookozcash",
      "html_url": "https://github.com/zookozcash",
      "followers_url": "https://api.github.com/users/zookozcash/followers",
      "following_url": "https://api.github.com/users/zookozcash/following{/other_user}",
      "gists_url": "https://api.github.com/users/zookozcash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zookozcash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zookozcash/subscriptions",
      "organizations_url": "https://api.github.com/users/zookozcash/orgs",
      "repos_url": "https://api.github.com/users/zookozcash/repos",
      "events_url": "https://api.github.com/users/zookozcash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zookozcash/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-24T00:01:26Z",
    "updated_at": "2016-07-24T00:01:26Z",
    "author_association": "NONE",
    "body": "Way to go!\n\nQuestions:\n- Is it likely to go into Metropolis? Is there anything I can do to help get it in?\n- Why does the Solidity version take ~480K gas to set up the state, but then only ~12K gas per 128-byte input block? It shouldn't be that expensive to set up the state! What's going on there?\n- How much gas does a Solidity implementation of BLAKE2s cost? We could switch from BLAKE2b to BLAKE2s and it would be a modest performance benefit in C/C++ — reducing the cost of hashing to about 75% of previous levels. I wonder if it would be an even bigger win in Solidity.\n- Suppose we changed it from:\n  \n  X_i = H(block header up to end of nonce | index_i)\n  \n  to\n  \n  U = H(block header up to end of nonce)\n  X_i = H(U | index_i)\n  \n  Then an Equihash implementation would need to generate a lot (like 2^5 or 2^7) X_i's, but the smaller input (U | index_i) would fit into a single BLAKE2b or BLAKE2s input block, so it should take about half as much gas per X_i as hashing H(block header up to end of nonce | index_i) for each X_i, like we currently do.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/234748084/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/234796806",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-234796806",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 234796806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDc5NjgwNg==",
    "user": {
      "login": "zookozcash",
      "id": 16416064,
      "node_id": "MDQ6VXNlcjE2NDE2MDY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/16416064?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zookozcash",
      "html_url": "https://github.com/zookozcash",
      "followers_url": "https://api.github.com/users/zookozcash/followers",
      "following_url": "https://api.github.com/users/zookozcash/following{/other_user}",
      "gists_url": "https://api.github.com/users/zookozcash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zookozcash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zookozcash/subscriptions",
      "organizations_url": "https://api.github.com/users/zookozcash/orgs",
      "repos_url": "https://api.github.com/users/zookozcash/repos",
      "events_url": "https://api.github.com/users/zookozcash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zookozcash/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-24T19:26:52Z",
    "updated_at": "2016-07-24T19:26:52Z",
    "author_association": "NONE",
    "body": "Oh, is the high cost of gas to initialize the state due to the fact that memory isn't free? In that case, I would expect BLAKE2s to cost about half as much gas, for both the initialization and the per-byte processing, as BLAKE2b. So maybe ~240K + 45 \\* INSIZE. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/234796806/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/234797667",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-234797667",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 234797667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDc5NzY2Nw==",
    "user": {
      "login": "tjade273",
      "id": 3936648,
      "node_id": "MDQ6VXNlcjM5MzY2NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3936648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjade273",
      "html_url": "https://github.com/tjade273",
      "followers_url": "https://api.github.com/users/tjade273/followers",
      "following_url": "https://api.github.com/users/tjade273/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjade273/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjade273/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjade273/subscriptions",
      "organizations_url": "https://api.github.com/users/tjade273/orgs",
      "repos_url": "https://api.github.com/users/tjade273/repos",
      "events_url": "https://api.github.com/users/tjade273/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjade273/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-24T19:42:43Z",
    "updated_at": "2016-07-24T19:42:43Z",
    "author_association": "NONE",
    "body": "@zookozcash Yes, the gas cost is almost entirely from the high memory costs. BLAKE2s may well be much more practical, I can modify the implementation and run some tests pretty quickly.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/234797667/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/249357904",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-249357904",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 249357904,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTM1NzkwNA==",
    "user": {
      "login": "daira",
      "id": 643204,
      "node_id": "MDQ6VXNlcjY0MzIwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/643204?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daira",
      "html_url": "https://github.com/daira",
      "followers_url": "https://api.github.com/users/daira/followers",
      "following_url": "https://api.github.com/users/daira/following{/other_user}",
      "gists_url": "https://api.github.com/users/daira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daira/subscriptions",
      "organizations_url": "https://api.github.com/users/daira/orgs",
      "repos_url": "https://api.github.com/users/daira/repos",
      "events_url": "https://api.github.com/users/daira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-24T10:31:59Z",
    "updated_at": "2016-09-24T10:31:59Z",
    "author_association": "NONE",
    "body": "Right, but note that BLAKE2b with an arbitrary personalisation string and output length is what Equihash needs.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/249357904/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/249361639",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-249361639",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 249361639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTM2MTYzOQ==",
    "user": {
      "login": "tjade273",
      "id": 3936648,
      "node_id": "MDQ6VXNlcjM5MzY2NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3936648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjade273",
      "html_url": "https://github.com/tjade273",
      "followers_url": "https://api.github.com/users/tjade273/followers",
      "following_url": "https://api.github.com/users/tjade273/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjade273/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjade273/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjade273/subscriptions",
      "organizations_url": "https://api.github.com/users/tjade273/orgs",
      "repos_url": "https://api.github.com/users/tjade273/repos",
      "events_url": "https://api.github.com/users/tjade273/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjade273/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-24T12:10:20Z",
    "updated_at": "2016-09-24T12:12:20Z",
    "author_association": "NONE",
    "body": "Yes, the current proposal allows for arbitrary output length. The\npersonalization and salt are padded to 16 bytes, as per the BLAKE2b specification.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/249361639/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/249766568",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-249766568",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 249766568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTc2NjU2OA==",
    "user": {
      "login": "zookozcash",
      "id": 16416064,
      "node_id": "MDQ6VXNlcjE2NDE2MDY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/16416064?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zookozcash",
      "html_url": "https://github.com/zookozcash",
      "followers_url": "https://api.github.com/users/zookozcash/followers",
      "following_url": "https://api.github.com/users/zookozcash/following{/other_user}",
      "gists_url": "https://api.github.com/users/zookozcash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zookozcash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zookozcash/subscriptions",
      "organizations_url": "https://api.github.com/users/zookozcash/orgs",
      "repos_url": "https://api.github.com/users/zookozcash/repos",
      "events_url": "https://api.github.com/users/zookozcash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zookozcash/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-27T04:58:44Z",
    "updated_at": "2016-09-27T05:03:14Z",
    "author_association": "NONE",
    "body": "```\nGBLAKEBASE: 30\nGBLAKEWORD: 6\n```\n\n(See also someone asking [what is the cheapest hash function available in solidity](http://ethereum.stackexchange.com/questions/3184/what-is-the-cheapest-hash-function-available-in-solidity).)\n\nAccording to [the yellow paper](https://github.com/ethereum/yellowpaper), SHA3 has base gas cost 30 and per-word gas cost 6.\n\nAccording to [bench.cr.yp.to](http://bench.cr.yp.to/results-hash.html), BLAKE2b costs roughly 3 times less than SHA3 (\"keccakc512\") per base and 2.7 times less per byte on a Knight's Landing CPU.\n\nI'd suggest reflecting this efficiency in the gas costs. Dividing by those ratios and rounding up that would be:\n\n```\nGBLAKEBASE: 10\nGBLAKEWORD: 3\n```\n\nBy the way, here's [an answer I just posted](https://crypto.stackexchange.com/a/40263/39692) on crypto.stackexchange.com about why NIST chose Keccak instead of BLAKE (not BLAKE2) for SHA-3.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/249766568/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/249770460",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-249770460",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 249770460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTc3MDQ2MA==",
    "user": {
      "login": "zookozcash",
      "id": 16416064,
      "node_id": "MDQ6VXNlcjE2NDE2MDY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/16416064?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zookozcash",
      "html_url": "https://github.com/zookozcash",
      "followers_url": "https://api.github.com/users/zookozcash/followers",
      "following_url": "https://api.github.com/users/zookozcash/following{/other_user}",
      "gists_url": "https://api.github.com/users/zookozcash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zookozcash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zookozcash/subscriptions",
      "organizations_url": "https://api.github.com/users/zookozcash/orgs",
      "repos_url": "https://api.github.com/users/zookozcash/repos",
      "events_url": "https://api.github.com/users/zookozcash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zookozcash/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-27T05:34:11Z",
    "updated_at": "2016-09-27T05:34:31Z",
    "author_association": "NONE",
    "body": "Sometimes protocols need to incrementally process inputs, i.e. to produce a series of chunks, and after producing each one, add it into the hash computation, and then after many of these chunks, generate the hash result.\n\nIf the Ethereum precompile for BLAKE2b has a way to initialize a hasher object, update it with some more bytes, and then finalize it, then Ethereum apps can do the this — updating the hasher object with each successive chunk until all the chunks have been processed, and then producing the hash result by finalizing the hasher object.\n\nWith the API in the current proposal, above, Ethereum apps would instead have to accumulate a buffer of all the chunks, wait until they've produced or received the last chunk, and then pass the entire buffer into the hash precompile at once. Depending on the protocol, this could impose a much higher memory cost — the Ethereum app would need to use enough memory to store all of the chunks put together, vs. enough to store the biggest chunk.\n\nSome other protocols (i.e. not Ethereum apps, but pre-existing or external protocols) may assume this kind of incremental hashing ability, and the absence of it could hinder the ability of an Ethereum app to interoperate with that other protocol.\n\nThe discussion about the \"block header\" in https://github.com/ethereum/EIPs/issues/129#issuecomment-234748084 is an example of someone wanting to write an Ethereum app that is compatible with a pre-existing protocol — [Zcash](https://z.cash) — and the absence of the incremental hasher causing the Ethereum implementation to be unnecessarily expensive.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/249770460/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/249946157",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-249946157",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 249946157,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTk0NjE1Nw==",
    "user": {
      "login": "zmanian",
      "id": 93434,
      "node_id": "MDQ6VXNlcjkzNDM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/93434?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zmanian",
      "html_url": "https://github.com/zmanian",
      "followers_url": "https://api.github.com/users/zmanian/followers",
      "following_url": "https://api.github.com/users/zmanian/following{/other_user}",
      "gists_url": "https://api.github.com/users/zmanian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zmanian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zmanian/subscriptions",
      "organizations_url": "https://api.github.com/users/zmanian/orgs",
      "repos_url": "https://api.github.com/users/zmanian/repos",
      "events_url": "https://api.github.com/users/zmanian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zmanian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-27T18:00:28Z",
    "updated_at": "2016-09-27T18:07:51Z",
    "author_association": "NONE",
    "body": "I think @zookozcash's proposal to offer a reduced gas cost to Blake2 is potentially ill considered.\n\nZooko is obviously correct about the performance benefits of Blake2 on relevant general purpose hardware and Blake2's cryptographic strength relative to sha3.\n\nEthereum discounts selected cryptographic functions by executing them outside of the Ethereum Virtual Machine. The reason Ethereum does this is that without offering theses discounts there would be incentives to use weak cryptography in contracts to keep the gas prices of contract calls reasonable.\n\nGas costs on these discounted functions must balance protection against CPU exhaustion attacks, encouraging user safety in smart contracts and the cost of validation for full nodes.\n\nThe gas cost of sha3 is an approximation of the optimal value that appears to have been arrived at intuitively.  It seems to be a good enough approximation because other operations have benn better low hanging fruit for resource attacks on the networks.\n\nUnless Ethereum wants to signal to users that Blake2 is preferred to Sha3 in all three criteria above, I recommend that the discounted gas cost for digest functions be identical within same order of magnitude of performance.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/249946157/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/249950874",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-249950874",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 249950874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTk1MDg3NA==",
    "user": {
      "login": "AFDudley",
      "id": 660650,
      "node_id": "MDQ6VXNlcjY2MDY1MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/660650?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AFDudley",
      "html_url": "https://github.com/AFDudley",
      "followers_url": "https://api.github.com/users/AFDudley/followers",
      "following_url": "https://api.github.com/users/AFDudley/following{/other_user}",
      "gists_url": "https://api.github.com/users/AFDudley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AFDudley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AFDudley/subscriptions",
      "organizations_url": "https://api.github.com/users/AFDudley/orgs",
      "repos_url": "https://api.github.com/users/AFDudley/repos",
      "events_url": "https://api.github.com/users/AFDudley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AFDudley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-27T18:16:22Z",
    "updated_at": "2016-09-27T18:16:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@zmanian Good points. But I suspect external reasons besides price, like interoperability, will decide which hash is used. If this turns out to not be the case, then they should raise the price.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/249950874/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/249955958",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-249955958",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 249955958,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTk1NTk1OA==",
    "user": {
      "login": "tjade273",
      "id": 3936648,
      "node_id": "MDQ6VXNlcjM5MzY2NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3936648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjade273",
      "html_url": "https://github.com/tjade273",
      "followers_url": "https://api.github.com/users/tjade273/followers",
      "following_url": "https://api.github.com/users/tjade273/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjade273/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjade273/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjade273/subscriptions",
      "organizations_url": "https://api.github.com/users/tjade273/orgs",
      "repos_url": "https://api.github.com/users/tjade273/repos",
      "events_url": "https://api.github.com/users/tjade273/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjade273/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-27T18:33:50Z",
    "updated_at": "2016-09-27T18:33:50Z",
    "author_association": "NONE",
    "body": "@zmanian I'm not sure that SHA3 is actually discounted all that much. The [spreadsheet](https://docs.google.com/spreadsheets/d/1m89CVujrQe5LAFJ8-YAUCcNK950dUzMQPMJBxRtGCqs/edit#gid=0) used to determine the original gas costs has the cost of SHA3 set to the average compute time in microseconds, in the same manner applied to the other opcodes. The spreadsheet may not be entirely accurate, and @vbuterin may be able to shed more light on that process.\n\nIn the end, I think the best way to determine the gas cost for the new opcodes is to just do a simulation in each of the clients, and compare the compute time and memory relative to the other opcodes. I do think that we'll find that the actual cost should be lower than the one I proposed. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/249955958/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/249958206",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-249958206",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 249958206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTk1ODIwNg==",
    "user": {
      "login": "zmanian",
      "id": 93434,
      "node_id": "MDQ6VXNlcjkzNDM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/93434?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zmanian",
      "html_url": "https://github.com/zmanian",
      "followers_url": "https://api.github.com/users/zmanian/followers",
      "following_url": "https://api.github.com/users/zmanian/following{/other_user}",
      "gists_url": "https://api.github.com/users/zmanian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zmanian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zmanian/subscriptions",
      "organizations_url": "https://api.github.com/users/zmanian/orgs",
      "repos_url": "https://api.github.com/users/zmanian/repos",
      "events_url": "https://api.github.com/users/zmanian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zmanian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-27T18:41:46Z",
    "updated_at": "2016-09-27T18:41:46Z",
    "author_association": "NONE",
    "body": "Thank you for that spreadsheet. It's a great source of data.\n\nThe discounting is relative to implementing sha3 in EVM op codes rather than as externally callable function. \n\nThe approach for approximation documented in that spreadsheet is to trying estimate an optimal gas by treating sha3 as equivalent to another EVM opcode. I don't consider this estimation methodology robust but it is perhaps good enough.\n\nI don't the spreadsheet refutes my argument. But my argument is merely offered for considered.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/249958206/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/249962726",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-249962726",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 249962726,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTk2MjcyNg==",
    "user": {
      "login": "tjade273",
      "id": 3936648,
      "node_id": "MDQ6VXNlcjM5MzY2NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3936648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjade273",
      "html_url": "https://github.com/tjade273",
      "followers_url": "https://api.github.com/users/tjade273/followers",
      "following_url": "https://api.github.com/users/tjade273/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjade273/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjade273/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjade273/subscriptions",
      "organizations_url": "https://api.github.com/users/tjade273/orgs",
      "repos_url": "https://api.github.com/users/tjade273/repos",
      "events_url": "https://api.github.com/users/tjade273/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjade273/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-27T18:56:27Z",
    "updated_at": "2016-09-27T18:56:27Z",
    "author_association": "NONE",
    "body": "@zookozcash  I think that incremental hashing could be useful; implementing that would really make BLAKE2 a precompiled _contract_, as opposed to the current precompiles which offer very restricted functionality, and are essentially designed to emulate opcodes.\n\nImplementation would be slightly more involved, but there would be the added benefit that the precompile could follow the ABI spec, making it easier for users to interact with the contract directly, instead of through Solidity reserved keywords.\n\nIn the end, I think it's a question of what the community sees as the purpose of precompiled contracts: to essentially add new opcodes or to subsidize actual contracts that add important functionality to the ecosystem.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/249962726/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/249964751",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-249964751",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 249964751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTk2NDc1MQ==",
    "user": {
      "login": "zookozcash",
      "id": 16416064,
      "node_id": "MDQ6VXNlcjE2NDE2MDY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/16416064?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zookozcash",
      "html_url": "https://github.com/zookozcash",
      "followers_url": "https://api.github.com/users/zookozcash/followers",
      "following_url": "https://api.github.com/users/zookozcash/following{/other_user}",
      "gists_url": "https://api.github.com/users/zookozcash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zookozcash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zookozcash/subscriptions",
      "organizations_url": "https://api.github.com/users/zookozcash/orgs",
      "repos_url": "https://api.github.com/users/zookozcash/repos",
      "events_url": "https://api.github.com/users/zookozcash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zookozcash/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-27T19:02:47Z",
    "updated_at": "2016-09-27T19:02:47Z",
    "author_association": "NONE",
    "body": "I don't precisely understand the difference between a contract and an\nopcode. Could you teach me?\n\nOn Sep 27, 2016 11:56 AM, \"Tjaden Hess\" notifications@github.com wrote:\n\n> @zookozcash https://github.com/zookozcash I think that incremental\n> hashing could be useful; implementing that would really make BLAKE2 a\n> precompiled _contract_, as opposed to the current precompiles which offer\n> very restricted functionality, and are essentially designed to emulate\n> opcodes.\n> \n> Implementation would be slightly more involved, but there would be the\n> added benefit that the precompile could follow the ABI spec, making it\n> easier for users to interact with the contract directly, instead of through\n> Solidity reserved keywords.\n> \n> In the end, I think it's a question of what the community sees as the\n> purpose of precompiled contracts: to essentially add new opcodes or to\n> subsidize actual contracts that add important functionality to the\n> ecosystem.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/ethereum/EIPs/issues/129#issuecomment-249962726, or mute\n> the thread\n> https://github.com/notifications/unsubscribe-auth/APp9QICIlzjJEK7aoiY11YJs2aOxvh3uks5quWbfgaJpZM4JGVJJ\n> .\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/249964751/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/249965215",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-249965215",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 249965215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTk2NTIxNQ==",
    "user": {
      "login": "zookozcash",
      "id": 16416064,
      "node_id": "MDQ6VXNlcjE2NDE2MDY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/16416064?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zookozcash",
      "html_url": "https://github.com/zookozcash",
      "followers_url": "https://api.github.com/users/zookozcash/followers",
      "following_url": "https://api.github.com/users/zookozcash/following{/other_user}",
      "gists_url": "https://api.github.com/users/zookozcash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zookozcash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zookozcash/subscriptions",
      "organizations_url": "https://api.github.com/users/zookozcash/orgs",
      "repos_url": "https://api.github.com/users/zookozcash/repos",
      "events_url": "https://api.github.com/users/zookozcash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zookozcash/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-27T19:04:20Z",
    "updated_at": "2016-09-27T19:04:20Z",
    "author_association": "NONE",
    "body": "I don't understand your objection, Zaki. My naïve assumption was that gas\ncosts are supposed to approximate CPU time and/or energy costs to the\nexecutor. Is that not the case?\n\nOn Sep 27, 2016 11:00 AM, \"Zaki Manian\" notifications@github.com wrote:\n\n> I think @zookozcash https://github.com/zookozcash's proposal to offer a\n> reduced gas cost to Blake2 is potentially ill considered.\n> \n> Zooko is obviously correct about the performance benefits of Blake2 on\n> relevant general purpose hardware and Blake2's cryptographic strength\n> relative to sha3.\n> \n> Ethereum discounts selected cryptographic functions by executing them\n> outside of the Ethereum Virtual Machine. The reason Ethereum does this is\n> that without offering theses discounts there would be incentives to use\n> weak cryptography in contracts to keep the gas prices of contract calls\n> reasonable.\n> \n> Gas costs on these discounted functions must balance protection against\n> CPU exhaustion attacks, encouraging user safety in smart contracts and the\n> cost of validation for full nodes.\n> \n> The gas cost of sha3 is an approximation of the optimal value that appears\n> to have been arrived at intuitively. It seems to be a good enough\n> approximation because other operations have better low hanging fruit for\n> resource attacks on the networks.\n> \n> Unless Ethereum wants to signal to users that Blake2 is preferred to Sha3\n> in all three criteria above, I recommend that the discounted gas cost for\n> digest functions be identical within same order of magnitude of performance.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/ethereum/EIPs/issues/129#issuecomment-249946157, or mute\n> the thread\n> https://github.com/notifications/unsubscribe-auth/APp9QAIg8yR-OG227mNC3i7h-qKAipf6ks5quVnBgaJpZM4JGVJJ\n> .\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/249965215/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/249969319",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-249969319",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 249969319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTk2OTMxOQ==",
    "user": {
      "login": "tjade273",
      "id": 3936648,
      "node_id": "MDQ6VXNlcjM5MzY2NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3936648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjade273",
      "html_url": "https://github.com/tjade273",
      "followers_url": "https://api.github.com/users/tjade273/followers",
      "following_url": "https://api.github.com/users/tjade273/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjade273/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjade273/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjade273/subscriptions",
      "organizations_url": "https://api.github.com/users/tjade273/orgs",
      "repos_url": "https://api.github.com/users/tjade273/repos",
      "events_url": "https://api.github.com/users/tjade273/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjade273/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-27T19:18:53Z",
    "updated_at": "2016-09-27T19:18:53Z",
    "author_association": "NONE",
    "body": "An opcode is like a regular CPU instruction. It pops arguments off the stack and puts a return value back on top, and is represented by an instruction in the EVM (i.e. ADD, MUL, PUSH, MSTORE, etc.)\n\nPrecompiled contracts look and act like contracts, but under the hood they are executed natively, instead of within the EVM. These contracts have an address, like other accounts, and are called using the `CALL` opcode or a transaction. They are assigned an address, which could be anything under 20 bytes but is usually 1, 2, 3, etc. for convenience (we assume that the chance of collision is negligible).\n\nInterestingly, `SHA3` is implemented as an opcode (0x20), while `SHA256` is implemented as a precompiled contract at address 2.\n\nPrecompiles have more flexibility in the size of their input and output, but they are more expensive to use, since they require a `CALL`, and they must be allocated gas, instead of simply using the available gas.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/249969319/reactions",
      "total_count": 6,
      "+1": 6,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/250216324",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-250216324",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 250216324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDIxNjMyNA==",
    "user": {
      "login": "zookozcash",
      "id": 16416064,
      "node_id": "MDQ6VXNlcjE2NDE2MDY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/16416064?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zookozcash",
      "html_url": "https://github.com/zookozcash",
      "followers_url": "https://api.github.com/users/zookozcash/followers",
      "following_url": "https://api.github.com/users/zookozcash/following{/other_user}",
      "gists_url": "https://api.github.com/users/zookozcash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zookozcash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zookozcash/subscriptions",
      "organizations_url": "https://api.github.com/users/zookozcash/orgs",
      "repos_url": "https://api.github.com/users/zookozcash/repos",
      "events_url": "https://api.github.com/users/zookozcash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zookozcash/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-28T16:13:15Z",
    "updated_at": "2016-09-28T16:57:45Z",
    "author_association": "NONE",
    "body": "Okay, thanks for the explanation of opcode vs contract.\n\n> Precompiles have more flexibility in the size of their input and output, but they are more expensive to use, since they require a CALL, and they must be allocated gas, instead of simply using the available gas.\n\nWhat do you mean \"more flexibility\" in the size of the input? Does it mean that the input size of an opcode cannot be dynamically determined? Or does it mean that opcodes have a max input size that they can accept? (And if so what is the max?)\n\nSo there are three options:\n1. an opcode that does the full BLAKE2 hash\n   pros:\n   - it's an opcode so it is efficient to invoke\n   - it's simple to use\n   \n   cons:\n   - can't do incremental (streaming) processing\n   - it's more to design and implement inside consensus rules\n2. a precompiled contract that offers the `initialize`, `update`, `finalize` API\n   pros:\n   - can do incremental processing\n   - can also offer a simple one-shot API, so it can be simple to use \n   \n   cons:\n   - it requires a `CALL` and must be allocated gas\n   - it's more to design and implement inside consensus rules\n3. an opcode that does the BLAKE2 [Compression Function F](https://tools.ietf.org/html/rfc7693#section-3.2)\n   pros:\n   - can do incremental processing\n   - it's an opcode so it is efficient to invoke\n   - it's simple to implement\n   - it's less to design and implement inside consensus rules\n   - can be wrapped in some Solidity code that provides the full BLAKE2 API, so that wrapper code can be simple to use\n   - the wrapper can provide both one-shot and incremental processing, so both of those can be simple to use\n   \n   cons:\n   - isn't simple to use unless you have that wrapper code\n   - it'll be a little less efficient than option 1 when your inputs are few and already-here (But note \"incremental processing\" in the \"pros\" above — \"incremental processing\" means that it'll be a lot _more_ efficient than option 1 when your inputs are numerous or not-yet-here.)\n\nI'd support any of these three, but I especially like option 3 because it moves some of the implementation and the design trade-offs out of consensus code and into Solidity wrapper code. People can optimize that stuff or settle on new idioms without any further changes to consensus.\n\nNote that option 1, which precludes streaming processing, would be precluding an idiom that the rest of the crypto-engineering world has already settled on over the last decade or so.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/250216324/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/250658133",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-250658133",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 250658133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDY1ODEzMw==",
    "user": {
      "login": "zmanian",
      "id": 93434,
      "node_id": "MDQ6VXNlcjkzNDM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/93434?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zmanian",
      "html_url": "https://github.com/zmanian",
      "followers_url": "https://api.github.com/users/zmanian/followers",
      "following_url": "https://api.github.com/users/zmanian/following{/other_user}",
      "gists_url": "https://api.github.com/users/zmanian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zmanian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zmanian/subscriptions",
      "organizations_url": "https://api.github.com/users/zmanian/orgs",
      "repos_url": "https://api.github.com/users/zmanian/repos",
      "events_url": "https://api.github.com/users/zmanian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zmanian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-30T04:51:07Z",
    "updated_at": "2016-09-30T04:51:07Z",
    "author_association": "NONE",
    "body": "Relevant to [metering estimation](https://github.com/ewasm/design/issues/50#issuecomment-250637569)\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/250658133/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/250797516",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-250797516",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 250797516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDc5NzUxNg==",
    "user": {
      "login": "zookozcash",
      "id": 16416064,
      "node_id": "MDQ6VXNlcjE2NDE2MDY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/16416064?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zookozcash",
      "html_url": "https://github.com/zookozcash",
      "followers_url": "https://api.github.com/users/zookozcash/followers",
      "following_url": "https://api.github.com/users/zookozcash/following{/other_user}",
      "gists_url": "https://api.github.com/users/zookozcash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zookozcash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zookozcash/subscriptions",
      "organizations_url": "https://api.github.com/users/zookozcash/orgs",
      "repos_url": "https://api.github.com/users/zookozcash/repos",
      "events_url": "https://api.github.com/users/zookozcash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zookozcash/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-30T17:00:42Z",
    "updated_at": "2016-09-30T17:00:42Z",
    "author_association": "NONE",
    "body": "@tjade273: would you be willing to implement an opcode for [BLAKE2b Compression Function F](https://tools.ietf.org/html/rfc7693#section-3.2) per option 3 in [this comment](https://github.com/ethereum/EIPs/issues/129#issuecomment-250216324)? Jay Graber from the Zcash Company might be interested in doing that, or to pair program with you in order to learn how.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/250797516/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/250801647",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-250801647",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 250801647,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDgwMTY0Nw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-30T17:18:12Z",
    "updated_at": "2016-09-30T17:18:12Z",
    "author_association": "MEMBER",
    "body": "Please don't implement a new opcode.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/250801647/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/250803378",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-250803378",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 250803378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDgwMzM3OA==",
    "user": {
      "login": "tjade273",
      "id": 3936648,
      "node_id": "MDQ6VXNlcjM5MzY2NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3936648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjade273",
      "html_url": "https://github.com/tjade273",
      "followers_url": "https://api.github.com/users/tjade273/followers",
      "following_url": "https://api.github.com/users/tjade273/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjade273/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjade273/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjade273/subscriptions",
      "organizations_url": "https://api.github.com/users/tjade273/orgs",
      "repos_url": "https://api.github.com/users/tjade273/repos",
      "events_url": "https://api.github.com/users/tjade273/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjade273/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-30T17:25:56Z",
    "updated_at": "2016-09-30T17:25:56Z",
    "author_association": "NONE",
    "body": "I'm not sure a new opcode is a great idea. I personally think that the EVM should have a relatively limited instruction set, and only implement relatively trivial and basic functions.\n\nI like the idea of only implementing the compression function at the protocol level, though. It would make a BLAKE2 contact much more efficient, while not overly complicating the protocol and allowing a lot of flexibility\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/250803378/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/250809574",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-250809574",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 250809574,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDgwOTU3NA==",
    "user": {
      "login": "zookozcash",
      "id": 16416064,
      "node_id": "MDQ6VXNlcjE2NDE2MDY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/16416064?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zookozcash",
      "html_url": "https://github.com/zookozcash",
      "followers_url": "https://api.github.com/users/zookozcash/followers",
      "following_url": "https://api.github.com/users/zookozcash/following{/other_user}",
      "gists_url": "https://api.github.com/users/zookozcash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zookozcash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zookozcash/subscriptions",
      "organizations_url": "https://api.github.com/users/zookozcash/orgs",
      "repos_url": "https://api.github.com/users/zookozcash/repos",
      "events_url": "https://api.github.com/users/zookozcash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zookozcash/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-30T17:52:57Z",
    "updated_at": "2016-09-30T17:53:09Z",
    "author_association": "NONE",
    "body": "@tjade273:\n\nSo are you suggesting an option 4 (compared to the other three from [this comment](https://github.com/ethereum/EIPs/issues/129#issuecomment-250216324)):\n\n\\4. a precompiled contract that does the BLAKE2 Compression Function F\n- pros:\n  - can do incremental processing\n  - it's simple to implement\n  - it's less to design and implement inside consensus rules\n  - can be wrapped in some Solidity code that provides the full BLAKE2 API, so that wrapper code can be simple to use\n  - the wrapper can provide both one-shot and incremental processing, so both of those can be simple to use\n- cons:\n  - isn't simple to use unless you have that wrapper code\n  - it requires a `CALL` (thus making it less efficient) and must be allocated gas\n  - it'll be less efficient than option 1 when your inputs are few and already-here (But note \"incremental processing\" in the \"pros\" above — \"incremental processing\" means that it'll be a lot more efficient than option 1 when your inputs are numerous or not-yet-here.)\n\nI'm still a fan of [option 3](https://github.com/ethereum/EIPs/issues/129#issuecomment-250216324). In my ever so humble opinion a BLAKE2b Compression Function F is a great basic opcode, and I think real hardware microprocessors ought to add such an instruction too. :-)\n\nHowever, option 4 seems okay too. The exact performance results aren't clear to me, but that probably doesn't matter too much — just having a precompile for BLAKE2b Compression Function F is already going to be enough to solve all of our (current) performance problems. Option 4 keeps more things outside of consensus rules than Option 2.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/250809574/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/250810819",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-250810819",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 250810819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDgxMDgxOQ==",
    "user": {
      "login": "zookozcash",
      "id": 16416064,
      "node_id": "MDQ6VXNlcjE2NDE2MDY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/16416064?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zookozcash",
      "html_url": "https://github.com/zookozcash",
      "followers_url": "https://api.github.com/users/zookozcash/followers",
      "following_url": "https://api.github.com/users/zookozcash/following{/other_user}",
      "gists_url": "https://api.github.com/users/zookozcash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zookozcash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zookozcash/subscriptions",
      "organizations_url": "https://api.github.com/users/zookozcash/orgs",
      "repos_url": "https://api.github.com/users/zookozcash/repos",
      "events_url": "https://api.github.com/users/zookozcash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zookozcash/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-30T17:58:07Z",
    "updated_at": "2016-09-30T17:58:07Z",
    "author_association": "NONE",
    "body": "Okay, so the next step on Option 4 is to define the API to BLAKE2b Compression Function F. It should be stateless, and the inputs are: \n\n```\nCompression function F takes as an argument the state vector \"h\",\nmessage block vector \"m\" (last block is padded with zeros to full\nblock size, if required), 2w-bit offset counter \"t\", and final block\nindicator flag \"f\".  Local vector v[0..15] is used in processing.  F\nreturns a new state vector.\n```\n\n(Quoted from [the RFC](https://tools.ietf.org/html/rfc7693#section-3.2).)\n\nIt might also be worth passing in the number of rounds `r` as an input, instead of hard-coding 12, because there are multiple newer cryptographic projects that have been experimenting with or at least talking about reduced-round BLAKE2b.\n\nThe implementation of BLAKE2b Compression Function F is conveniently shown in pseudocode in [this section of the RFC](https://tools.ietf.org/html/rfc7693#section-3.2).\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/250810819/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/250811581",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-250811581",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 250811581,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDgxMTU4MQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-30T18:01:30Z",
    "updated_at": "2016-09-30T18:01:30Z",
    "author_association": "MEMBER",
    "body": "@zookozcash:\n\n> a precompiled contract that offers the initialize, update, finalize API\n> pros:\n> - can do incremental processing\n\nprecompiled contracts are stateless, so in order to do those 3 calls, you need to pass the state back and forth.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/250811581/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/250812460",
    "html_url": "https://github.com/ethereum/EIPs/issues/129#issuecomment-250812460",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/129",
    "id": 250812460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDgxMjQ2MA==",
    "user": {
      "login": "tjade273",
      "id": 3936648,
      "node_id": "MDQ6VXNlcjM5MzY2NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3936648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjade273",
      "html_url": "https://github.com/tjade273",
      "followers_url": "https://api.github.com/users/tjade273/followers",
      "following_url": "https://api.github.com/users/tjade273/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjade273/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjade273/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjade273/subscriptions",
      "organizations_url": "https://api.github.com/users/tjade273/orgs",
      "repos_url": "https://api.github.com/users/tjade273/repos",
      "events_url": "https://api.github.com/users/tjade273/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjade273/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-30T18:05:22Z",
    "updated_at": "2016-10-04T13:36:11Z",
    "author_association": "NONE",
    "body": "Yes, implementing F should be pretty straightforward, and it's inherently stateless. The API can easily just be the ABI encoding of the arguments, i.e.\n\n `F(bytes32[2] h, bytes32[4] b, uint t, bool f) returns (bytes32[2] h1)` \n\nWhere `h` is the state, `b` is the input, `t` is the byte counter, and `f` is the finalization flag\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/250812460/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
