{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/201",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/201/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/201/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/201/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/201",
  "id": 204871294,
  "node_id": "MDU6SXNzdWUyMDQ4NzEyOTQ=",
  "number": 201,
  "title": "EVM opcode: breakpoint",
  "user": {
    "login": "axic",
    "id": 20340,
    "node_id": "MDQ6VXNlcjIwMzQw",
    "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/axic",
    "html_url": "https://github.com/axic",
    "followers_url": "https://api.github.com/users/axic/followers",
    "following_url": "https://api.github.com/users/axic/following{/other_user}",
    "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
    "organizations_url": "https://api.github.com/users/axic/orgs",
    "repos_url": "https://api.github.com/users/axic/repos",
    "events_url": "https://api.github.com/users/axic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/axic/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 21,
  "created_at": "2017-02-02T13:21:34Z",
  "updated_at": "2022-01-16T09:11:28Z",
  "closed_at": "2022-01-16T09:11:28Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Motivation\r\n\r\nTo speed up debugging, if a breakpoint is expected there is no need to step through execution, but can safely stop at the breakpoint.\r\n\r\n### Specification\r\n\r\nA new opcode, `BREAKPOINT` is introduced at `0xfd`.\r\n\r\nOption 1:\r\n\r\nA virtual machine if run in debugging mode, should stop execution when encountering this instruction, otherwise it should ignore it.\r\n\r\nOption 2:\r\n\r\nIt stays as an invalid instruction in a deployed contract, but special debugging EVM implementations are allowed to support it.\r\n\r\nAlternatively, another good name is `DEBUG`.",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/201/reactions",
    "total_count": 5,
    "+1": 5,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/201/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/276956728",
    "html_url": "https://github.com/ethereum/EIPs/issues/201#issuecomment-276956728",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/201",
    "id": 276956728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Njk1NjcyOA==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-02T13:28:48Z",
    "updated_at": "2017-02-02T13:28:48Z",
    "author_association": "MEMBER",
    "body": "Can't debuggers set breakpoints using external information? This method would require changing the code every time you want to add or remove breakpoints.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/276956728/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/281414624",
    "html_url": "https://github.com/ethereum/EIPs/issues/201#issuecomment-281414624",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/201",
    "id": 281414624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTQxNDYyNA==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-21T17:26:15Z",
    "updated_at": "2017-02-21T17:26:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "The C++ VM has hook for a callback function that can be and I think is used for debugging.  @yann300 ?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/281414624/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/281637144",
    "html_url": "https://github.com/ethereum/EIPs/issues/201#issuecomment-281637144",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/201",
    "id": 281637144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTYzNzE0NA==",
    "user": {
      "login": "yann300",
      "id": 6940742,
      "node_id": "MDQ6VXNlcjY5NDA3NDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6940742?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yann300",
      "html_url": "https://github.com/yann300",
      "followers_url": "https://api.github.com/users/yann300/followers",
      "following_url": "https://api.github.com/users/yann300/following{/other_user}",
      "gists_url": "https://api.github.com/users/yann300/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yann300/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yann300/subscriptions",
      "organizations_url": "https://api.github.com/users/yann300/orgs",
      "repos_url": "https://api.github.com/users/yann300/repos",
      "events_url": "https://api.github.com/users/yann300/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yann300/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-22T10:59:30Z",
    "updated_at": "2017-02-22T10:59:30Z",
    "author_association": "MEMBER",
    "body": "Yes. Though that would mean to readd the JavaScript interpreter I guess...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/281637144/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/282495205",
    "html_url": "https://github.com/ethereum/EIPs/issues/201#issuecomment-282495205",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/201",
    "id": 282495205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjQ5NTIwNQ==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-25T16:35:58Z",
    "updated_at": "2017-02-25T16:42:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@yann300 I don't really understand, as the hook must already be used by any debugger that wants to single-step, inspect stack and memory, etc.  The hook gets called for every instruction executed, so it can stop when the desired program counter is reached.  But I do get that performance takes a hit.  If we do go with the breakpoint instruction there would need to be a way to call into the running VM to modify the code, and probably a way to get the other information the hook provides.  Just stopping doesn't help if you can't inspect the state of the program.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/282495205/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/282746177",
    "html_url": "https://github.com/ethereum/EIPs/issues/201#issuecomment-282746177",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/201",
    "id": 282746177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mjc0NjE3Nw==",
    "user": {
      "login": "yann300",
      "id": 6940742,
      "node_id": "MDQ6VXNlcjY5NDA3NDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6940742?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yann300",
      "html_url": "https://github.com/yann300",
      "followers_url": "https://api.github.com/users/yann300/followers",
      "following_url": "https://api.github.com/users/yann300/following{/other_user}",
      "gists_url": "https://api.github.com/users/yann300/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yann300/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yann300/subscriptions",
      "organizations_url": "https://api.github.com/users/yann300/orgs",
      "repos_url": "https://api.github.com/users/yann300/repos",
      "events_url": "https://api.github.com/users/yann300/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yann300/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-27T15:07:42Z",
    "updated_at": "2017-02-27T15:07:42Z",
    "author_association": "MEMBER",
    "body": "Calling the running VM to modify the code on the fly sounds interesting.\r\nWhen the user is is debug session, the bytecode could be updated as the user is writing new solidity code that is about to be executed... (not sure if it completely doable).\r\nAs remix is in JavaScript that would mean to add a JavaScript interpreter in a c++ code that could call JavaScript callback right? or maybe I misunderstood something....",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/282746177/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/282919736",
    "html_url": "https://github.com/ethereum/EIPs/issues/201#issuecomment-282919736",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/201",
    "id": 282919736,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjkxOTczNg==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-28T02:08:45Z",
    "updated_at": "2017-02-28T02:09:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "I only meant modifying a single opcode with this new BREAKPOINT opcode.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/282919736/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/282998762",
    "html_url": "https://github.com/ethereum/EIPs/issues/201#issuecomment-282998762",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/201",
    "id": 282998762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mjk5ODc2Mg==",
    "user": {
      "login": "yann300",
      "id": 6940742,
      "node_id": "MDQ6VXNlcjY5NDA3NDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6940742?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yann300",
      "html_url": "https://github.com/yann300",
      "followers_url": "https://api.github.com/users/yann300/followers",
      "following_url": "https://api.github.com/users/yann300/following{/other_user}",
      "gists_url": "https://api.github.com/users/yann300/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yann300/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yann300/subscriptions",
      "organizations_url": "https://api.github.com/users/yann300/orgs",
      "repos_url": "https://api.github.com/users/yann300/repos",
      "events_url": "https://api.github.com/users/yann300/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yann300/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-28T10:13:20Z",
    "updated_at": "2017-02-28T10:13:20Z",
    "author_association": "MEMBER",
    "body": "yes i know, I was just wondering if we could also update the bytecode as the user is writting. Some IDEs do that.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/282998762/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/284189829",
    "html_url": "https://github.com/ethereum/EIPs/issues/201#issuecomment-284189829",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/201",
    "id": 284189829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDE4OTgyOQ==",
    "user": {
      "login": "nmushegian",
      "id": 924397,
      "node_id": "MDQ6VXNlcjkyNDM5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/924397?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nmushegian",
      "html_url": "https://github.com/nmushegian",
      "followers_url": "https://api.github.com/users/nmushegian/followers",
      "following_url": "https://api.github.com/users/nmushegian/following{/other_user}",
      "gists_url": "https://api.github.com/users/nmushegian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nmushegian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nmushegian/subscriptions",
      "organizations_url": "https://api.github.com/users/nmushegian/orgs",
      "repos_url": "https://api.github.com/users/nmushegian/repos",
      "events_url": "https://api.github.com/users/nmushegian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nmushegian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T22:37:16Z",
    "updated_at": "2017-03-04T22:37:16Z",
    "author_association": "NONE",
    "body": "A general principle of ethereum and blockchains is if it can be done off-chain, do it off chain.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/284189829/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/315492226",
    "html_url": "https://github.com/ethereum/EIPs/issues/201#issuecomment-315492226",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/201",
    "id": 315492226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTQ5MjIyNg==",
    "user": {
      "login": "kumavis",
      "id": 1474978,
      "node_id": "MDQ6VXNlcjE0NzQ5Nzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1474978?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kumavis",
      "html_url": "https://github.com/kumavis",
      "followers_url": "https://api.github.com/users/kumavis/followers",
      "following_url": "https://api.github.com/users/kumavis/following{/other_user}",
      "gists_url": "https://api.github.com/users/kumavis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kumavis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kumavis/subscriptions",
      "organizations_url": "https://api.github.com/users/kumavis/orgs",
      "repos_url": "https://api.github.com/users/kumavis/repos",
      "events_url": "https://api.github.com/users/kumavis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kumavis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T23:45:46Z",
    "updated_at": "2017-07-14T23:45:46Z",
    "author_association": "MEMBER",
    "body": "`0xfd` is claimed by revert",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/315492226/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/315784317",
    "html_url": "https://github.com/ethereum/EIPs/issues/201#issuecomment-315784317",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/201",
    "id": 315784317,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTc4NDMxNw==",
    "user": {
      "login": "GNSPS",
      "id": 4008213,
      "node_id": "MDQ6VXNlcjQwMDgyMTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4008213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GNSPS",
      "html_url": "https://github.com/GNSPS",
      "followers_url": "https://api.github.com/users/GNSPS/followers",
      "following_url": "https://api.github.com/users/GNSPS/following{/other_user}",
      "gists_url": "https://api.github.com/users/GNSPS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GNSPS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GNSPS/subscriptions",
      "organizations_url": "https://api.github.com/users/GNSPS/orgs",
      "repos_url": "https://api.github.com/users/GNSPS/repos",
      "events_url": "https://api.github.com/users/GNSPS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GNSPS/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-17T15:10:44Z",
    "updated_at": "2017-07-17T15:10:44Z",
    "author_association": "NONE",
    "body": "I really like the idea of having a breakpoint opcode. I feel that option 2 kind of defeats the purpose of standardizing this though, I would go with 1.\r\n\r\nWould it make sense to mimic x86 arch and have an `interrupt` opcode with a single byte param?\r\n\r\nThe VM, if run in debugging mode, would then have the opportunity to have stored routines given different interrupt values. (And we could have a single-byte version for the breakpoint interrupt much like `INT 3` in x86.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/315784317/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/343636883",
    "html_url": "https://github.com/ethereum/EIPs/issues/201#issuecomment-343636883",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/201",
    "id": 343636883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzYzNjg4Mw==",
    "user": {
      "login": "insipx",
      "id": 6452260,
      "node_id": "MDQ6VXNlcjY0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/insipx",
      "html_url": "https://github.com/insipx",
      "followers_url": "https://api.github.com/users/insipx/followers",
      "following_url": "https://api.github.com/users/insipx/following{/other_user}",
      "gists_url": "https://api.github.com/users/insipx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/insipx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/insipx/subscriptions",
      "organizations_url": "https://api.github.com/users/insipx/orgs",
      "repos_url": "https://api.github.com/users/insipx/repos",
      "events_url": "https://api.github.com/users/insipx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/insipx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T03:24:55Z",
    "updated_at": "2017-11-11T03:24:55Z",
    "author_association": "NONE",
    "body": "I like the idea of mimic-ing x86 functionality along with UNIX Opcodes. On UNIX, the process of breakpoints looks something like:\r\n\r\nCreate Breakpoint\r\n```\r\n    Compute location of the break point\r\n    Read byte that was there and save it.\r\n    Put 0xCC byte there (int3 opcode). If program is ptraced, executing int3 will freeze it.\r\n```\r\ndisabling Breakpoints:\r\n```\r\n    Disable breakpoint (write back old instruction)\r\n    Run single step (PTRACE_SINGLESTEP)\r\n    Enable breakpoint (write int3)\r\n    Continue (PTRACE_CONT)\r\n```\r\nIt could look similar in EVM too.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/343636883/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/343638396",
    "html_url": "https://github.com/ethereum/EIPs/issues/201#issuecomment-343638396",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/201",
    "id": 343638396,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzYzODM5Ng==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T03:55:18Z",
    "updated_at": "2017-11-11T03:55:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "It might be more useful to consider something more general like the Java Debug Wire Protocol.  The debugger asks the VM to set a breakpoint, single step, or whatever and it's up to the VM to make it happen however it likes.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/343638396/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/343643722",
    "html_url": "https://github.com/ethereum/EIPs/issues/201#issuecomment-343643722",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/201",
    "id": 343643722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzY0MzcyMg==",
    "user": {
      "login": "insipx",
      "id": 6452260,
      "node_id": "MDQ6VXNlcjY0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/insipx",
      "html_url": "https://github.com/insipx",
      "followers_url": "https://api.github.com/users/insipx/followers",
      "following_url": "https://api.github.com/users/insipx/following{/other_user}",
      "gists_url": "https://api.github.com/users/insipx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/insipx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/insipx/subscriptions",
      "organizations_url": "https://api.github.com/users/insipx/orgs",
      "repos_url": "https://api.github.com/users/insipx/repos",
      "events_url": "https://api.github.com/users/insipx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/insipx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T06:09:14Z",
    "updated_at": "2017-11-11T06:09:14Z",
    "author_association": "NONE",
    "body": "@gcolvin Huhm, didn't think of that. Definitely a potential solution, but I worry about it's extendability. Would this be more of a solidity feature, or can it be extended to apply to other languages (IE: Viper)? I'm not totally familiar with the Java Debug Wire Protocol. Would it require making changes to the VM for every language that is to be debugged with?\r\n\r\nI think the con of doing it the UNIX-way would be the potential need to implement a compile option for debug symbols in order to be able to step-over and into solidity code rather than the underlying assembly. However, once an interface is created, it may be easier to create debug symbols for other languages rather than modify an interface similar to the Java Debug Wire Protocol.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/343643722/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/343645774",
    "html_url": "https://github.com/ethereum/EIPs/issues/201#issuecomment-343645774",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/201",
    "id": 343645774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzY0NTc3NA==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T07:02:39Z",
    "updated_at": "2017-11-11T07:04:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's not a language feature, it's a wire protocol that all JVMs have to implement.  It could be optional if we wanted.  That way any Java debugger can be used for either VM.  Another advantage is that debuggers (Eclipse, JSwat, etc.) aren't linked to the VM, but connect via a socket.  It's stood up to years of use and extension by now.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/343645774/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/343688134",
    "html_url": "https://github.com/ethereum/EIPs/issues/201#issuecomment-343688134",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/201",
    "id": 343688134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzY4ODEzNA==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T19:25:24Z",
    "updated_at": "2017-11-11T19:25:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "So yes, a protocol like that would be language and VM agnostic.  It would even be possible for an EVM to pretend to be a JVM and use the actual JDWP for the purposes of debugging.  We did that for PL/SQL at Oracle.  Lining up source and bytecode might be an issue - the Java class file format takes care of that and we don't.  At worst, the tool that created the code you are debugging could keep of that for the code it knows about, and perhaps disassemble other code if you don't want to work at the bytecode level.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/343688134/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/343706891",
    "html_url": "https://github.com/ethereum/EIPs/issues/201#issuecomment-343706891",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/201",
    "id": 343706891,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzcwNjg5MQ==",
    "user": {
      "login": "insipx",
      "id": 6452260,
      "node_id": "MDQ6VXNlcjY0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/insipx",
      "html_url": "https://github.com/insipx",
      "followers_url": "https://api.github.com/users/insipx/followers",
      "following_url": "https://api.github.com/users/insipx/following{/other_user}",
      "gists_url": "https://api.github.com/users/insipx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/insipx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/insipx/subscriptions",
      "organizations_url": "https://api.github.com/users/insipx/orgs",
      "repos_url": "https://api.github.com/users/insipx/repos",
      "events_url": "https://api.github.com/users/insipx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/insipx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-12T01:27:30Z",
    "updated_at": "2017-11-12T01:28:05Z",
    "author_association": "NONE",
    "body": "@gcolvin Did some digging on this topic, and actually the functionality of mapping the bytecode to sourcecode may already exist, taken from the docs for solidity compiler:\r\n\r\n> Furthermore, the compiler can also generate a mapping from the bytecode to the range in the source code that generated the instruction. This is again important for static analysis tools that operate on bytecode level and for displaying the current position in the source code inside a debugger or for breakpoint handling.\r\n\r\n> Both kinds of source mappings use integer identifiers to refer to source files. These are regular array indices into a list of source files usually called \"sourceList\", which is part of the combined-json and the output of the json / npm compiler.\r\n\r\n> The source mappings inside the AST use the following notation:\r\n\r\n> `s:l:f`\r\n\r\n> Where s is the byte-offset to the start of the range in the source file, l is the length of the source range in bytes and f is the source index mentioned above.\r\n\r\n> The encoding in the source mapping for the bytecode is more complicated: It is a list of s:l:f:j separated by ;. Each of these elements corresponds to an instruction, i.e. you cannot use the byte offset but have to use the instruction offset (push instructions are longer than a single byte). The fields s, l and f are as above and j can be either i, o or - signifying whether a jump instruction goes into a function, returns from a function or is a regular jump as part of e.g. a loop.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/343706891/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/343707472",
    "html_url": "https://github.com/ethereum/EIPs/issues/201#issuecomment-343707472",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/201",
    "id": 343707472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzcwNzQ3Mg==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-12T01:43:12Z",
    "updated_at": "2017-11-12T01:43:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Does this mapping get stored on the blockchain?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/343707472/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/343707745",
    "html_url": "https://github.com/ethereum/EIPs/issues/201#issuecomment-343707745",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/201",
    "id": 343707745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzcwNzc0NQ==",
    "user": {
      "login": "insipx",
      "id": 6452260,
      "node_id": "MDQ6VXNlcjY0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/insipx",
      "html_url": "https://github.com/insipx",
      "followers_url": "https://api.github.com/users/insipx/followers",
      "following_url": "https://api.github.com/users/insipx/following{/other_user}",
      "gists_url": "https://api.github.com/users/insipx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/insipx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/insipx/subscriptions",
      "organizations_url": "https://api.github.com/users/insipx/orgs",
      "repos_url": "https://api.github.com/users/insipx/repos",
      "events_url": "https://api.github.com/users/insipx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/insipx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-12T01:51:24Z",
    "updated_at": "2017-11-12T01:52:45Z",
    "author_association": "NONE",
    "body": "It does not, It's just a compiler option used on solidity code that outputs to stdout.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/343707745/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/343708002",
    "html_url": "https://github.com/ethereum/EIPs/issues/201#issuecomment-343708002",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/201",
    "id": 343708002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzcwODAwMg==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-12T01:58:32Z",
    "updated_at": "2017-11-12T01:58:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK.  Not so nice as what Java provides so far as debugging arbitrary code on the blockchain, but still very good for development.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/343708002/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003685329",
    "html_url": "https://github.com/ethereum/EIPs/issues/201#issuecomment-1003685329",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/201",
    "id": 1003685329,
    "node_id": "IC_kwDOAq426M470wXR",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-02T09:11:14Z",
    "updated_at": "2022-01-02T09:11:14Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003685329/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1013838171",
    "html_url": "https://github.com/ethereum/EIPs/issues/201#issuecomment-1013838171",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/201",
    "id": 1013838171,
    "node_id": "IC_kwDOAq426M48bfFb",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-16T09:11:27Z",
    "updated_at": "2022-01-16T09:11:27Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1013838171/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
