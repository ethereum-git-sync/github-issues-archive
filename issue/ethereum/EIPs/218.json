{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/218",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/218/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/218/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/218/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/218",
  "id": 208632880,
  "node_id": "MDU6SXNzdWUyMDg2MzI4ODA=",
  "number": 218,
  "title": "Opcode proposal: CREATE_INSTANCE",
  "user": {
    "login": "tawaren",
    "id": 22982658,
    "node_id": "MDQ6VXNlcjIyOTgyNjU4",
    "avatar_url": "https://avatars.githubusercontent.com/u/22982658?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tawaren",
    "html_url": "https://github.com/tawaren",
    "followers_url": "https://api.github.com/users/tawaren/followers",
    "following_url": "https://api.github.com/users/tawaren/following{/other_user}",
    "gists_url": "https://api.github.com/users/tawaren/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tawaren/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tawaren/subscriptions",
    "organizations_url": "https://api.github.com/users/tawaren/orgs",
    "repos_url": "https://api.github.com/users/tawaren/repos",
    "events_url": "https://api.github.com/users/tawaren/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tawaren/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2017-02-18T10:57:15Z",
  "updated_at": "2017-02-18T16:30:09Z",
  "closed_at": "2017-02-18T16:30:09Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# Proposal\r\nI propose a new opcode `CREATE_INSTANCE` which works as `CREATE` but instead of having two parameters to say where in the memory the code lies and what the size of the code is it has a parameter with an address pointing to another smart contract whichs code is used for the newly created smart contract. \r\n\r\n# Motivation \r\nIf we currently want to have multiple instances of a smart contract (with their own storage each) of a certain kind we have two options:\r\n\r\n- Option 1: We copy the code from somwhere into the memory before calling `CREATE`. The copy can be done per `CODECOPY` or `EXTCODECOPY`\r\n- Option 2: We just create a stub contract which forwards all calls with `DELEGATECALL` to the contract containing the code.\r\n\r\nOption 1 makes it expensive to create these instances, because each time we pay the gas costs for the whole code and there will be multiple unecessary copies of the same code in the blockchain. This makes it impracticall to create a lot of smart contracts dynamically, especially if the contracts have a large code base.\r\nOption 2 is relatively cheap two create a new instance, if we can generatea generic forwarder without reimplementing the complete ABI of the target contract, this can be done by passing as an additional parameter the expected return size. The drawback of this solution is, that calls into these smart contracts cost twice as much (for the call part not the actual execution) and increase the call stack by two elements instead of one.\r\n\r\nThe proposed opcode would have the benefit that the code only has to be stored once on the blockchain and could be used by different smart contracts without creating unecessary copies for it or using unecessary `DELEGATECALLS`. Additional it would be very cache friendly. Because of the additional lookup for the linked code a call to such a contract may still cost twice as much, but the additional call stack frame could be avoided and during thecreation of the contract would be much simpler, just one opcode instead of coping code around to prepare it in memory.\r\n\r\nEspecially standard contracts would benefit from that, like wallets or tokens.",
  "closed_by": {
    "login": "tawaren",
    "id": 22982658,
    "node_id": "MDQ6VXNlcjIyOTgyNjU4",
    "avatar_url": "https://avatars.githubusercontent.com/u/22982658?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tawaren",
    "html_url": "https://github.com/tawaren",
    "followers_url": "https://api.github.com/users/tawaren/followers",
    "following_url": "https://api.github.com/users/tawaren/following{/other_user}",
    "gists_url": "https://api.github.com/users/tawaren/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tawaren/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tawaren/subscriptions",
    "organizations_url": "https://api.github.com/users/tawaren/orgs",
    "repos_url": "https://api.github.com/users/tawaren/repos",
    "events_url": "https://api.github.com/users/tawaren/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tawaren/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/218/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/218/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/280849007",
    "html_url": "https://github.com/ethereum/EIPs/issues/218#issuecomment-280849007",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/218",
    "id": 280849007,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDg0OTAwNw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-18T14:29:18Z",
    "updated_at": "2017-02-18T14:29:18Z",
    "author_association": "MEMBER",
    "body": "Please note that the code of a contract account is the runtime bytecode.\r\n\r\nThe `CREATE` opcode expects a \"deployer bytecode\". The deployer bytecode can do any state operations and whatever it will return using the `RETURN` opcode will become the code of the contract.\r\n\r\nAdditionally, the constructor code of contracts is part of this deployer together with the constructor parameters.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/280849007/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/280856543",
    "html_url": "https://github.com/ethereum/EIPs/issues/218#issuecomment-280856543",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/218",
    "id": 280856543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDg1NjU0Mw==",
    "user": {
      "login": "tawaren",
      "id": 22982658,
      "node_id": "MDQ6VXNlcjIyOTgyNjU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/22982658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tawaren",
      "html_url": "https://github.com/tawaren",
      "followers_url": "https://api.github.com/users/tawaren/followers",
      "following_url": "https://api.github.com/users/tawaren/following{/other_user}",
      "gists_url": "https://api.github.com/users/tawaren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tawaren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tawaren/subscriptions",
      "organizations_url": "https://api.github.com/users/tawaren/orgs",
      "repos_url": "https://api.github.com/users/tawaren/repos",
      "events_url": "https://api.github.com/users/tawaren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tawaren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-18T16:30:09Z",
    "updated_at": "2017-02-18T16:30:09Z",
    "author_association": "NONE",
    "body": "A thanks for the clarification. I had their some missconceptions.\r\nIf I understand that right then the deployer code could in essence just do an `EXTCODECOPY` followed by a `RETURN` to create an instance of a contract. I assume that the cost of the `CREATE` would still depend on the size of the return and creating multiple instances of a large contract would still be very expensive and and forces multiple copies of the same code into the blockchain.\r\n\r\nBut now that my misconceptions how the `CREATE` opcode works are clarified this proposal does at least in the current form not make any sense, so I will close it. At least I have learned something more about the EVM wich will come in handy in the project I planned.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/280856543/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
