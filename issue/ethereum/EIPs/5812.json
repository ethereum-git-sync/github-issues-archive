{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/5812",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/5812/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/5812/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/5812/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/5812",
  "id": 1419037112,
  "node_id": "I_kwDOAq426M5UlMm4",
  "number": 5812,
  "title": "https://gist.github.com/frozeman/090ae32041bcfe120824",
  "user": {
    "login": "Maxim17081983",
    "id": 51949016,
    "node_id": "MDQ6VXNlcjUxOTQ5MDE2",
    "avatar_url": "https://avatars.githubusercontent.com/u/51949016?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Maxim17081983",
    "html_url": "https://github.com/Maxim17081983",
    "followers_url": "https://api.github.com/users/Maxim17081983/followers",
    "following_url": "https://api.github.com/users/Maxim17081983/following{/other_user}",
    "gists_url": "https://api.github.com/users/Maxim17081983/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Maxim17081983/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Maxim17081983/subscriptions",
    "organizations_url": "https://api.github.com/users/Maxim17081983/orgs",
    "repos_url": "https://api.github.com/users/Maxim17081983/repos",
    "events_url": "https://api.github.com/users/Maxim17081983/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Maxim17081983/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-10-22T02:24:10Z",
  "updated_at": "2022-10-23T13:45:43Z",
  "closed_at": "2022-10-23T13:45:43Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "        recent discussion from https://gist.github.com/frozeman/090ae32041bcfe120824\r\n\r\n@vbuterin said:\r\nYeah, `createCheque` and `cashCheque` as above, plus `transferCheque(address _from, address _to, uint256 _value)` sounds good. In that case, we should probably remove the `_to` argument from `cashCheque`; generally, you can only cash cheques from your own bank account.\r\n\r\nWe probably also want `getChequeValue(address _from, address _for)`. We then have a choice of whether we want to keep the value argument in `cashCheque` rather than simply only allowing cashing in 100% of whatever is in there. If we want to fully follow the cheque analogy, this triad seems most intuitive to me:\r\n\r\n``` js\r\nfunction createCheque(address _for, uint256 _maxValue)\r\nfunction cashCheque(address _from)\r\nfunction getChequeValue(address _from, address _for)\r\n```\r\n\r\nQuestion: does running createCheque twice add the value of the two cheques together? Are there legitimate use cases for creating a cheque multiple times and then cashing either once or multiple times?\r\n\r\n@nmushegian said:\r\nAll the functions that return uint should `return (uint, bool)` instead. You can easily make up scenarios where a 0 return value is ambiguous and significant. Is there any other simpler pattern for handling this?\r\n\r\n@niran said:\r\nI think the value parameter is useful in `cashCheque`. It absolves callers from having to verify that the amount they needed was provided, and from having to refund amounts greater than what was needed. cashCheque would only succeed if the provided value was remaining in the cheque.\r\nAlso, I think using `createCheque(2**100)` for the approve use case is going to lead to less clear code. It gets better if you make the magic number a constant, like `createCheque(UNLIMITED_CHEQUE_VALUE)`, but lots of people won't do that. I think it's worth having a createBlankCheque or something for the approve scenario. Most tokens will use the TokenLib to handle all of the cheque logic, so it doesn't really make things worse for token authors.\r\n\r\n@caktux \r\nI also think there is a problem with the terminology of cheques since they imply one-offs. Cheques are also unique, and here cheques wouldn't return unique IDs or anything; those are merely approval methods for transfers using internal bookkeeping. I think the current approve/transfer terminology is accurate and simple enough, instead of ending up with a mix of transfer and cashCheque. Would we change unapprove to `tearCheque`? There's also that ambiguity of cheques adding up, where approvals more clearly override a previous one.\r\n\r\nIn the use case described by Vitalik of contracts charging fees in subcurrencies, it could easily cost more to have to call approveOnce each time (if we replace the current approve method with it) than the actual fee in subcurrency. For that reason I think we should keep both `approve` and `approveOnce`, but we could add the `_maxValue` argument to the former, that way subscriptions or fees could be taken in multiple calls but only up to a certain amount. Another reason to keep the approval terminology, as I think it's much simpler to describe approve and approveOnce than some createMultiCheque and createCheque. Regarding `isApprovedFor`, it would have to return the approved amount if we do add `_maxValue`, just as `isApprovedOnceFor` does.\r\n\r\n_Originally posted by @frozeman in https://github.com/ethereum/EIPs/issues/20#issuecomment-158017280_\r\n      ",
  "closed_by": {
    "login": "Pandapip1",
    "id": 45835846,
    "node_id": "MDQ6VXNlcjQ1ODM1ODQ2",
    "avatar_url": "https://avatars.githubusercontent.com/u/45835846?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Pandapip1",
    "html_url": "https://github.com/Pandapip1",
    "followers_url": "https://api.github.com/users/Pandapip1/followers",
    "following_url": "https://api.github.com/users/Pandapip1/following{/other_user}",
    "gists_url": "https://api.github.com/users/Pandapip1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Pandapip1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Pandapip1/subscriptions",
    "organizations_url": "https://api.github.com/users/Pandapip1/orgs",
    "repos_url": "https://api.github.com/users/Pandapip1/repos",
    "events_url": "https://api.github.com/users/Pandapip1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Pandapip1/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/5812/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/5812/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1288116754",
    "html_url": "https://github.com/ethereum/EIPs/issues/5812#issuecomment-1288116754",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/5812",
    "id": 1288116754,
    "node_id": "IC_kwDOAq426M5MxxoS",
    "user": {
      "login": "Pandapip1",
      "id": 45835846,
      "node_id": "MDQ6VXNlcjQ1ODM1ODQ2",
      "avatar_url": "https://avatars.githubusercontent.com/u/45835846?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Pandapip1",
      "html_url": "https://github.com/Pandapip1",
      "followers_url": "https://api.github.com/users/Pandapip1/followers",
      "following_url": "https://api.github.com/users/Pandapip1/following{/other_user}",
      "gists_url": "https://api.github.com/users/Pandapip1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Pandapip1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Pandapip1/subscriptions",
      "organizations_url": "https://api.github.com/users/Pandapip1/orgs",
      "repos_url": "https://api.github.com/users/Pandapip1/repos",
      "events_url": "https://api.github.com/users/Pandapip1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Pandapip1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-23T13:45:43Z",
    "updated_at": "2022-10-23T13:45:43Z",
    "author_association": "MEMBER",
    "body": "Presuming spam. Please let me know if this is in error.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1288116754/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
