{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/2453",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2453/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2453/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2453/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/2453",
  "id": 545833234,
  "node_id": "MDU6SXNzdWU1NDU4MzMyMzQ=",
  "number": 2453,
  "title": "Draft EIP, Discussions-to. Add `updates` and `updated-by` EIP Header Options for `active` EIPs",
  "user": {
    "login": "edsonayllon",
    "id": 34966228,
    "node_id": "MDQ6VXNlcjM0OTY2MjI4",
    "avatar_url": "https://avatars.githubusercontent.com/u/34966228?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/edsonayllon",
    "html_url": "https://github.com/edsonayllon",
    "followers_url": "https://api.github.com/users/edsonayllon/followers",
    "following_url": "https://api.github.com/users/edsonayllon/following{/other_user}",
    "gists_url": "https://api.github.com/users/edsonayllon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/edsonayllon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/edsonayllon/subscriptions",
    "organizations_url": "https://api.github.com/users/edsonayllon/orgs",
    "repos_url": "https://api.github.com/users/edsonayllon/repos",
    "events_url": "https://api.github.com/users/edsonayllon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/edsonayllon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2020-01-06T17:02:15Z",
  "updated_at": "2020-06-01T22:53:34Z",
  "closed_at": "2020-06-01T22:53:34Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "```\r\n---\r\neip: 2458\r\ntitle: Add updates and updated-by EIP Header Options for active EIPs\r\nauthor: Edson Ayllon (@edsonayllon) \r\ndiscussions-to: https://github.com/ethereum/EIPs/issues/2453\r\nstatus: Draft\r\ntype: Informational\r\ncreated: 2020-01-06\r\nupdates: 1\r\n---\r\n```\r\n\r\n## Simple Summary\r\n<!--\"If you can't explain it simply, you don't understand it well enough.\" Provide a simplified and layman-accessible explanation of the EIP.-->\r\n\r\nAdds EIP header options `updates` and `updated-by` to frontmatter of `active` EIPs for use as needed. EIPs. \r\n\r\n## Scope\r\n\r\nAdds header options. Changes process for updating active EIPs.\r\n\r\n## Abstract\r\n<!--A short (~200 word) description of the technical issue being addressed.-->\r\n\r\nEIP headers `updates` and `updated-by` are used for updating `active` EIPs. This is to make the improvement process of EIPs more modular, and have updates to existing `active` EIPs receive similar exposures to EIPs which replace existing `final` EIPs. \r\n\r\n## Motivation\r\n<!--The motivation is critical for EIPs that want to change the Ethereum protocol. It should clearly explain why the existing protocol specification is inadequate to address the problem that the EIP solves. EIP submissions without sufficient motivation may be rejected outright.-->\r\n\r\nCurrently, EIP1 specifies EIP headers: `updated`, `replaces`, and `superseded-by`. Headers `replaces` and `superseded-by` indicates when an entire EIP is being replaced by another EIP, indicating when an EIP is now historical, and is updated by a new standard. \r\n\r\nThe header `updated` indicates the date an EIP has received an update by EIP authors and editors, an example EIP being EIP1. `updated` is reserved for EIPs in `draft` or `active` status. \r\n\r\nIn the case of `active` status, an EIP may receive an update, but these updates don't operate as with EIPs in `final` status, where a historical EIP is created, and the new EIP is referenced by the historical one. While these updates are not kept immutably, updates to active EIPs can be done modularly by creating a new EIP that goes through the standard discussion and auditing process EIPs undergo. The EIP headers `updates` and `updated-by` are to facilitate this modularity. Creating a new EIP also provides sufficient notification to affected stakeholders of an active EIP before that EIP is `updated`. \r\n\r\n## Specification\r\n<!--The technical specification should describe the syntax and semantics of any new feature. The specification should be detailed enough to allow competing, interoperable implementations for any of the current Ethereum platforms (go-ethereum, parity, cpp-ethereum, ethereumj, ethereumjs, and [others](https://github.com/ethereum/wiki/wiki/Clients)).-->\r\n\r\n### `updated-by` \r\n\r\n`updated-by` is reserved for EIPs in `active` status. For an EIP in status `active`, updates to that EIP, which update the header `updated`, should be started by opening a new EIP to start vetting for that update. When an `active` EIP receives a new entry to header `updated`, an associated `updated-by` EIP listing should be included, where that newly listed EIP has reached `final` status, except where changes that don't change meaning, such as spelling and grammar corrections, are made.\r\n\r\n`updates` should be included as an EIP header, as all EIP headers, and include a reference to an EIP designation. When multiple EIP designations are referenced, each should be separated by a comma. Example:\r\n\r\n```\r\n---\r\nupdated-by: EIP9999, EIP9998\r\n---\r\n```\r\n\r\n### `updates` \r\n\r\n`updates` is reserved for EIPs updating EIPs in `active` status. An EIP listed as `updates` is implied to also be `requires`; only `updates` is needed for those EIP listings. Having an EIP listing `updates` does not necessarily mean that referenced EIP must reference back with an `updated-by` listing.\r\n\r\n`updates` should be included as an EIP header, as all EIP headers, and include a reference to an EIP designation. When multiple EIP designations are referenced, each should be separated by a comma. Example:\r\n\r\n```\r\n---\r\nupdates: EIP1\r\n---\r\n```\r\n\r\n## Rationale\r\n<!--The rationale fleshes out the specification by describing what motivated the design and why particular design decisions were made. It should describe alternate designs that were considered and related work, e.g. how the feature is supported in other languages. The rationale may also provide evidence of consensus within the community, and should discuss important objections or concerns raised during discussion.-->\r\n\r\n`updates` and `updated-by` apply only to EIPs in `active` status as updates to EIPs in `final` status are already handled by EIP headers `superseded-by` and `replaces`.\r\n\r\nThe syntax should align with previous EIP header syntax, as this EIP is not updating syntax, simply adding header options.\r\n\r\n## Backwards Compatibility\r\n<!--All EIPs that introduce backward incompatibilities must include a section describing these incompatibilities and their severity. The EIP must explain how the author proposes to deal with these incompatibilities. EIP submissions without a sufficient backward compatibility treatise may be rejected outright.-->\r\n\r\nThese EIP headers are optional and do not introduce compatibility issues.\r\n\r\n\r\n## Implementation\r\n<!--The implementations must be completed before any EIP is given status \"Final\", but it need not be completed before the EIP is accepted. While there is merit to the approach of reaching consensus on the specification and rationale before writing code, the principle of \"rough consensus and running code\" is still useful when it comes to resolving many discussions of API details.-->\r\n\r\nThis EIP is an example implementation of `updates`, updating EIP1. \r\n\r\n## Security Considerations\r\n<!--All EIPs must contain a section that discusses the security implications/considerations relevant to the proposed change. Include information that might be important for security discussions, surface risks and can be used throughout the life cycle of the proposal. E.g. include security-relevant design decisions, concerns, important discussions, implementation-specific guidance and pitfalls, an outline of threats and risks and how they are being addressed. EIP submissions missing the \"Security Considerations\" section will be rejected. An EIP cannot proceed to status \"Final\" without a Security Considerations discussion deemed sufficient by the reviewers.-->\r\n\r\nThis standard is informational and does not introduce technical security issues.\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).\r\n\r\n\r\n",
  "closed_by": {
    "login": "edsonayllon",
    "id": 34966228,
    "node_id": "MDQ6VXNlcjM0OTY2MjI4",
    "avatar_url": "https://avatars.githubusercontent.com/u/34966228?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/edsonayllon",
    "html_url": "https://github.com/edsonayllon",
    "followers_url": "https://api.github.com/users/edsonayllon/followers",
    "following_url": "https://api.github.com/users/edsonayllon/following{/other_user}",
    "gists_url": "https://api.github.com/users/edsonayllon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/edsonayllon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/edsonayllon/subscriptions",
    "organizations_url": "https://api.github.com/users/edsonayllon/orgs",
    "repos_url": "https://api.github.com/users/edsonayllon/repos",
    "events_url": "https://api.github.com/users/edsonayllon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/edsonayllon/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/2453/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/2453/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/571230028",
    "html_url": "https://github.com/ethereum/EIPs/issues/2453#issuecomment-571230028",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2453",
    "id": 571230028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTIzMDAyOA==",
    "user": {
      "login": "edsonayllon",
      "id": 34966228,
      "node_id": "MDQ6VXNlcjM0OTY2MjI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/34966228?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/edsonayllon",
      "html_url": "https://github.com/edsonayllon",
      "followers_url": "https://api.github.com/users/edsonayllon/followers",
      "following_url": "https://api.github.com/users/edsonayllon/following{/other_user}",
      "gists_url": "https://api.github.com/users/edsonayllon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/edsonayllon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/edsonayllon/subscriptions",
      "organizations_url": "https://api.github.com/users/edsonayllon/orgs",
      "repos_url": "https://api.github.com/users/edsonayllon/repos",
      "events_url": "https://api.github.com/users/edsonayllon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/edsonayllon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-06T17:26:40Z",
    "updated_at": "2020-01-06T17:26:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc'ing contributors to EIP1: @axic, @fulldecent, @Arachnid, @Souptacular, @nicksavers, @timbeiko, @pirapira, @gcolvin, @xinbenlv, @tintinweb, @MicahZoltu, @corollari, @corollari, @guanqun, @gluk256, @chfast, @cdetrio, @Phistr90, @jamesray1 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/571230028/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/571357648",
    "html_url": "https://github.com/ethereum/EIPs/issues/2453#issuecomment-571357648",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2453",
    "id": 571357648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTM1NzY0OA==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-06T23:16:05Z",
    "updated_at": "2020-01-06T23:16:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "In every case where B will `updates` A, there will also already be the relation that B `requires` A.\r\n\r\nI see limited utility in articulating this `updates` relationship because it should be obvious from context within the existing metadata.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/571357648/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/571373553",
    "html_url": "https://github.com/ethereum/EIPs/issues/2453#issuecomment-571373553",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2453",
    "id": 571373553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTM3MzU1Mw==",
    "user": {
      "login": "edsonayllon",
      "id": 34966228,
      "node_id": "MDQ6VXNlcjM0OTY2MjI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/34966228?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/edsonayllon",
      "html_url": "https://github.com/edsonayllon",
      "followers_url": "https://api.github.com/users/edsonayllon/followers",
      "following_url": "https://api.github.com/users/edsonayllon/following{/other_user}",
      "gists_url": "https://api.github.com/users/edsonayllon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/edsonayllon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/edsonayllon/subscriptions",
      "organizations_url": "https://api.github.com/users/edsonayllon/orgs",
      "repos_url": "https://api.github.com/users/edsonayllon/repos",
      "events_url": "https://api.github.com/users/edsonayllon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/edsonayllon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-07T00:17:56Z",
    "updated_at": "2020-01-07T00:31:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fulldecent There could be cases of new functionality requiring another EIP, extending it, without updating it, such as EIPs requiring Account Versioning. `requires` doesn't imply the parent EIP will be updated by this child EIP, more-so implies that the child uses the parent. `updates` makes this distinction apparent. And, you're correct that including both `update` and `requires` is redundant. So, for EIPs listing `updates` it should imply `requires`—using `updates` instead of `requires` to be semantic.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/571373553/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/571507274",
    "html_url": "https://github.com/ethereum/EIPs/issues/2453#issuecomment-571507274",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2453",
    "id": 571507274,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTUwNzI3NA==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-07T09:29:34Z",
    "updated_at": "2020-01-07T09:29:34Z",
    "author_association": "MEMBER",
    "body": "EIPs are meant as technical specifications, not a process for deciding \"what is current\" or \"what should be included in some software\".  For example, #1191 updates #155, but not everyone agrees that this is a good idea and should be implemented by all Ethereum wallets.  It has been implemented in some major RSK wallets I believe, which are built off of EIPs.  #1191 is a valid EIP and has been merged as such and is currently in Last Call (will likely go to Final), despite the fact that many believe that #155 should be the terminal EIP in that chain (for now).\r\n\r\nIntroducing a forward reference (updated-by) requires a mechanism for coming to agreement on when that forward reference is appropriate, and that is often a political process rather than a technical process so I would prefer to keep that out of the EIP process.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/571507274/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/571849612",
    "html_url": "https://github.com/ethereum/EIPs/issues/2453#issuecomment-571849612",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2453",
    "id": 571849612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTg0OTYxMg==",
    "user": {
      "login": "edsonayllon",
      "id": 34966228,
      "node_id": "MDQ6VXNlcjM0OTY2MjI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/34966228?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/edsonayllon",
      "html_url": "https://github.com/edsonayllon",
      "followers_url": "https://api.github.com/users/edsonayllon/followers",
      "following_url": "https://api.github.com/users/edsonayllon/following{/other_user}",
      "gists_url": "https://api.github.com/users/edsonayllon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/edsonayllon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/edsonayllon/subscriptions",
      "organizations_url": "https://api.github.com/users/edsonayllon/orgs",
      "repos_url": "https://api.github.com/users/edsonayllon/repos",
      "events_url": "https://api.github.com/users/edsonayllon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/edsonayllon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-08T01:25:02Z",
    "updated_at": "2020-01-08T02:01:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @MicahZoltu EIPs are meant as technical specifications, not a process for deciding \"what is current\" or \"what should be included in some software\". For example, #1191 updates #155, but not everyone agrees that this is a good idea and should be implemented by all Ethereum wallets. It has been implemented in some major RSK wallets I believe, which are built off of EIPs. #1191 is a valid EIP and has been merged as such and is currently in Last Call (will likely go to Final), despite the fact that many believe that #155 should be the terminal EIP in that chain (for now).\r\n\r\nEIPs are meant as existing standards which may or may not see an implementation in respective clients. EIPs which extend another EIP may exist, but whether it exists as a valid continuation that everyone should adapt over a prior EIP remains subjective. Do I correctly understand? \r\n\r\nIf my understanding is correct, that perspective is valid. If an EIP is made, and even reaches `final` status, it being `final` means it has matured to be implemented, but doesn't indicate a requirement for implementors to do so. And in the cases where an EIP has been implemented, and a new EIP extends it, in an intended versioning chain, it still is the implementors choice to do so.\r\n\r\nNormative references that are meant to version existing EIPs are actually already included in EIP1, with `replaces` and `superceded-by`. Once an EIP has reached `final` status, I believe the only way to update it is creating a new one, and marking that old EIP as historical by using the `superceded-by` header, keeping EIP versioning immutable if it happens. \r\n\r\nHowever, that's not the case with an EIP in `active` status. My suggestion is that `updates` not be used to replace entire standards, but propose an update for a piece of an existing standard *when that standard is an active standard*,  and creates its own discussion around the validity of that update, such as this discussion here, introducing modularity when updating `active` EIPs. \r\n\r\n> @MicahZoltu  Introducing a forward reference (updated-by) requires a mechanism for coming to agreement on when that forward reference is appropriate, and that is often a political process rather than a technical process so I would prefer to keep that out of the EIP process.\r\n\r\nSo, the header `updated-by` would bring about discussion whether or not a specification should receive an update. That discussion may be more subject, dealing with *should* instead of the technical specifications of whether something is technically sound (that it works). These conversations have the potential to become conversations dealing with ethics and philosophy, rather than pure technical integrity. What is correct in those cases may be more difficult to determine, and may never reach a definitive conclusion. Do I correctly understand?\r\n\r\nWell, if an EIP is attempting to update an existing EIP for which it was not the original author, conversations on whether an update should happen are to be expected, they would be inevitable. \r\n\r\nThis concern more indicates that we don't have a process to ethically and systematically settle decisions involving ethics and philosophy, rather than pure technical specification. This indicates a need to develop such a process, possibly with multiple candidates available for use, which can be defined through EIPs of their own. I think I saw this issue with PropPOW, where the debate wasn't a technical debate, but more a debate of philosophy and maybe ethics, towards the middle and end of its maturation cycle. \r\n\r\nBut I think `updated-by` is actually more important than `updates`. At a given moment, for an active EIP, an author can push an update to their EIP with new information. These updates, from what I understand, don't have to go through auditing of `EFI`, `last call`, etc., statuses. This, though I think unlikely with informational EIPs, may introduce risk involving security, as the auditing process isn't done by the same standard. The header `updated-by` makes a suggested update to an `active` EIP temporarily modular, so discussion can occur around an update before being `updated`. And these updates, as they are done by creating a new EIP, go through the same auditing all EIPs go through, needing to pass all EIP stages before inclusion. This ensure updates are public and given sufficient consideration by the community they affect. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/571849612/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/571855030",
    "html_url": "https://github.com/ethereum/EIPs/issues/2453#issuecomment-571855030",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2453",
    "id": 571855030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTg1NTAzMA==",
    "user": {
      "login": "edsonayllon",
      "id": 34966228,
      "node_id": "MDQ6VXNlcjM0OTY2MjI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/34966228?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/edsonayllon",
      "html_url": "https://github.com/edsonayllon",
      "followers_url": "https://api.github.com/users/edsonayllon/followers",
      "following_url": "https://api.github.com/users/edsonayllon/following{/other_user}",
      "gists_url": "https://api.github.com/users/edsonayllon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/edsonayllon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/edsonayllon/subscriptions",
      "organizations_url": "https://api.github.com/users/edsonayllon/orgs",
      "repos_url": "https://api.github.com/users/edsonayllon/repos",
      "events_url": "https://api.github.com/users/edsonayllon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/edsonayllon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-08T01:48:21Z",
    "updated_at": "2020-01-08T01:48:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've updated the EIP keeping with the discussion points brought up.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/571855030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/572883944",
    "html_url": "https://github.com/ethereum/EIPs/issues/2453#issuecomment-572883944",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2453",
    "id": 572883944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3Mjg4Mzk0NA==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-10T05:46:53Z",
    "updated_at": "2020-01-10T05:46:53Z",
    "author_association": "MEMBER",
    "body": "> At a given moment, for an active EIP, an author can push an update to their EIP with new information. These updates, from what I understand, don't have to go through auditing of EFI, last call, etc., statuses.\r\n\r\nFinal EIPs can only receive non-normative changes (e.g., typo corrections and such).  A final EIP cannot have normative changes made to it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/572883944/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/573037902",
    "html_url": "https://github.com/ethereum/EIPs/issues/2453#issuecomment-573037902",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2453",
    "id": 573037902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MzAzNzkwMg==",
    "user": {
      "login": "edsonayllon",
      "id": 34966228,
      "node_id": "MDQ6VXNlcjM0OTY2MjI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/34966228?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/edsonayllon",
      "html_url": "https://github.com/edsonayllon",
      "followers_url": "https://api.github.com/users/edsonayllon/followers",
      "following_url": "https://api.github.com/users/edsonayllon/following{/other_user}",
      "gists_url": "https://api.github.com/users/edsonayllon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/edsonayllon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/edsonayllon/subscriptions",
      "organizations_url": "https://api.github.com/users/edsonayllon/orgs",
      "repos_url": "https://api.github.com/users/edsonayllon/repos",
      "events_url": "https://api.github.com/users/edsonayllon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/edsonayllon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-10T13:36:38Z",
    "updated_at": "2020-01-10T13:36:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Final EIPs can only receive non-normative changes (e.g., typo corrections and such). A final EIP cannot have normative changes made to it.\r\n\r\nAs stated in what you quoted, that's in reference to active EIPs, not final EIPs.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/573037902/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/573040301",
    "html_url": "https://github.com/ethereum/EIPs/issues/2453#issuecomment-573040301",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2453",
    "id": 573040301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MzA0MDMwMQ==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-10T13:43:24Z",
    "updated_at": "2020-01-10T13:43:24Z",
    "author_association": "MEMBER",
    "body": "Ah, I had forgotten about \"Active\" EIPs.  I think they are pretty rare?  EIP1 is the only one I know of.\r\n\r\n> Active – Some Informational and Process EIPs may also have a status of “Active” if they are never meant to be completed. E.g. EIP 1 (this EIP).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/573040301/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/573069220",
    "html_url": "https://github.com/ethereum/EIPs/issues/2453#issuecomment-573069220",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2453",
    "id": 573069220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MzA2OTIyMA==",
    "user": {
      "login": "edsonayllon",
      "id": 34966228,
      "node_id": "MDQ6VXNlcjM0OTY2MjI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/34966228?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/edsonayllon",
      "html_url": "https://github.com/edsonayllon",
      "followers_url": "https://api.github.com/users/edsonayllon/followers",
      "following_url": "https://api.github.com/users/edsonayllon/following{/other_user}",
      "gists_url": "https://api.github.com/users/edsonayllon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/edsonayllon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/edsonayllon/subscriptions",
      "organizations_url": "https://api.github.com/users/edsonayllon/orgs",
      "repos_url": "https://api.github.com/users/edsonayllon/repos",
      "events_url": "https://api.github.com/users/edsonayllon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/edsonayllon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-10T15:00:22Z",
    "updated_at": "2020-01-10T15:04:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think EIP1 is [the only active EIP at the moment](https://eips.ethereum.org/all), unless the EIP which tracks EFI EIPs is made, which would probably be `active` as well. Typically, it's best to push an EIP to the `final` track, and make any updates new EIPs that make the old EIP historical (aka `superceded`), [similar to how ASTM International handles their standards](https://www.astm.org/SNEWS/JUNE_2003/falco_jun03.html). But, this EIP handles a case that's expected for all `active` EIPs, which are `active` because they expect to be updated.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/573069220/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/573234717",
    "html_url": "https://github.com/ethereum/EIPs/issues/2453#issuecomment-573234717",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2453",
    "id": 573234717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MzIzNDcxNw==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-10T22:43:26Z",
    "updated_at": "2020-01-10T22:43:26Z",
    "author_association": "MEMBER",
    "body": "I see.  I didn't realize (upon-rereading I see that it was clear) that this proposal is only for Active EIPs.  I suddenly care far less about this since \"active\" is only used for EIP-1 with no clear path to use it for anything other than that, and I don't care much about the conventions used in EIP-1.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/573234717/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/637167267",
    "html_url": "https://github.com/ethereum/EIPs/issues/2453#issuecomment-637167267",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2453",
    "id": 637167267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzE2NzI2Nw==",
    "user": {
      "login": "edsonayllon",
      "id": 34966228,
      "node_id": "MDQ6VXNlcjM0OTY2MjI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/34966228?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/edsonayllon",
      "html_url": "https://github.com/edsonayllon",
      "followers_url": "https://api.github.com/users/edsonayllon/followers",
      "following_url": "https://api.github.com/users/edsonayllon/following{/other_user}",
      "gists_url": "https://api.github.com/users/edsonayllon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/edsonayllon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/edsonayllon/subscriptions",
      "organizations_url": "https://api.github.com/users/edsonayllon/orgs",
      "repos_url": "https://api.github.com/users/edsonayllon/repos",
      "events_url": "https://api.github.com/users/edsonayllon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/edsonayllon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-01T22:53:34Z",
    "updated_at": "2020-06-01T22:53:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm closing this issue. Discussion continued in Ethereum Magicians. https://ethereum-magicians.org/t/eip-2458-add-updates-and-updated-by-eip-header-options-for-active-eips/4113",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/637167267/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
