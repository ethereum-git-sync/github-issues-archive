{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/1121",
  "id": 327180710,
  "node_id": "MDU6SXNzdWUzMjcxODA3MTA=",
  "number": 1121,
  "title": "EIP-1191: Extend EIP-55: Add chain id to mixed-case checksum address encoding",
  "user": {
    "login": "juli",
    "id": 71986,
    "node_id": "MDQ6VXNlcjcxOTg2",
    "avatar_url": "https://avatars.githubusercontent.com/u/71986?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/juli",
    "html_url": "https://github.com/juli",
    "followers_url": "https://api.github.com/users/juli/followers",
    "following_url": "https://api.github.com/users/juli/following{/other_user}",
    "gists_url": "https://api.github.com/users/juli/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/juli/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/juli/subscriptions",
    "organizations_url": "https://api.github.com/users/juli/orgs",
    "repos_url": "https://api.github.com/users/juli/repos",
    "events_url": "https://api.github.com/users/juli/events{/privacy}",
    "received_events_url": "https://api.github.com/users/juli/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 69,
  "created_at": "2018-05-29T06:06:03Z",
  "updated_at": "2022-11-18T17:17:58Z",
  "closed_at": "2022-05-28T05:08:46Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "```\r\neip: 1191 \r\ntitle: Add chain id to mixed-case checksum address encoding \r\nauthor: Juliano Rizzo (@juli)\r\nstatus: Last Call\r\nreview-period-end: 2019-11-18\r\ntype: Standards Track\r\ncategory: ERC\r\ncreated: 2018-03-18\r\nrequires: 55, 155\r\ndiscussions-to: https://github.com/ethereum/EIPs/issues/1121\r\n```\r\n\r\n## Simple Summary\r\nThis EIP extends EIP-55 by optionally adding a chain id defined by EIP-155 to the checksum calculation.\r\n\r\n## Abstract\r\nThe EIP-55 was created to prevent users from losing funds by sending them to invalid addresses. This EIP extends EIP-55 to protect users from losing funds by sending them to addresses that are valid but that where obtained from a client of another network.For example, if this EIP is implemented, a wallet can alert the user that is trying to send funds to an Ethereum Testnet address from an Ethereum Mainnet wallet.  \r\n\r\n## Motivation\r\nThe motivation of this proposal is to provide a mechanism to allow software to distinguish addresses from different Ethereum based networks. This proposal is necessary because Ethereum addresses are hashes of public keys and do not include any metadata. By extending the EIP-55 checksum algorithm it is possible to achieve this objective.\r\n\r\n## Specification\r\nConvert the address using the same algorithm defined by EIP-55 but if a registered chain id is provided, add it to the input of the hash function. If the chain id passed to the function belongs to a network that opted for using this checksum variant, prefix the address with the chain id and the `0x` separator before calculating the hash. Then convert the address to hexadecimal, but if the ith digit is a letter (ie. it's one of `abcdef`) print it in uppercase if the 4*ith bit of the calculated hash is 1 otherwise print it in lowercase.\r\n\r\n## Rationale \r\n Benefits:\r\n - By means of a minimal code change on existing libraries, users are protected from losing funds by mixing addresses of different Ethereum based networks.\r\n\r\n## Backwards Compatibility\r\nThis proposal is fully backward compatible. The checksum calculation is changed only for new networks that choose to adopt this EIP and add their chain numbers to the Adoption Table included in this document.\r\n\r\n## Implementation\r\n```python\r\n#!/usr/bin/python3\r\nfrom sha3 import keccak_256\r\nimport random\r\n\"\"\"\r\n   addr (str): Hexadecimal address, 40 characters long with 2 characters prefix\r\n   chainid (int): chain id from EIP-155 \"\"\"\r\ndef eth_checksum_encode(addr, chainid=1):\r\n    adopted_eip1191 = [30, 31]\r\n    hash_input = str(chainid) + addr.lower() if chainid in adopted_eip1191 else addr[2:].lower()\r\n    hash_output = keccak_256(hash_input.encode('utf8')).hexdigest()\r\n    aggregate = zip(addr[2:].lower(),hash_output)\r\n    out = addr[:2] + ''.join([c.upper() if int(a,16) >= 8 else c for c,a in aggregate])\r\n    return out\r\n```\r\n\r\n## Test Cases\r\n```python\r\neth_mainnet = [\r\n\"0x27b1fdb04752bbc536007a920d24acb045561c26\",\r\n\"0x3599689E6292b81B2d85451025146515070129Bb\",\r\n\"0x42712D45473476b98452f434e72461577D686318\",\r\n\"0x52908400098527886E0F7030069857D2E4169EE7\",\r\n\"0x5aAeb6053F3E94C9b9A09f33669435E7Ef1BeAed\",\r\n\"0x6549f4939460DE12611948b3f82b88C3C8975323\",\r\n\"0x66f9664f97F2b50F62D13eA064982f936dE76657\",\r\n\"0x8617E340B3D01FA5F11F306F4090FD50E238070D\",\r\n\"0x88021160C5C792225E4E5452585947470010289D\",\r\n\"0xD1220A0cf47c7B9Be7A2E6BA89F429762e7b9aDb\",\r\n\"0xdbF03B407c01E7cD3CBea99509d93f8DDDC8C6FB\",\r\n\"0xde709f2102306220921060314715629080e2fb77\",\r\n\"0xfB6916095ca1df60bB79Ce92cE3Ea74c37c5d359\",\r\n]\r\nrsk_mainnet = [\r\n\"0x27b1FdB04752BBc536007A920D24ACB045561c26\",\r\n\"0x3599689E6292B81B2D85451025146515070129Bb\",\r\n\"0x42712D45473476B98452f434E72461577d686318\",\r\n\"0x52908400098527886E0F7030069857D2E4169ee7\",\r\n\"0x5aaEB6053f3e94c9b9a09f33669435E7ef1bEAeD\",\r\n\"0x6549F4939460DE12611948B3F82B88C3C8975323\",\r\n\"0x66F9664f97f2B50F62d13EA064982F936de76657\",\r\n\"0x8617E340b3D01Fa5f11f306f4090fd50E238070D\",\r\n\"0x88021160c5C792225E4E5452585947470010289d\",\r\n\"0xD1220A0Cf47c7B9BE7a2e6ba89F429762E7B9adB\",\r\n\"0xDBF03B407c01E7CD3cBea99509D93F8Dddc8C6FB\",\r\n\"0xDe709F2102306220921060314715629080e2FB77\",\r\n\"0xFb6916095cA1Df60bb79ce92cE3EA74c37c5d359\",\r\n]\r\nrsk_testnet = [\r\n\"0x27B1FdB04752BbC536007a920D24acB045561C26\",\r\n\"0x3599689e6292b81b2D85451025146515070129Bb\",\r\n\"0x42712D45473476B98452F434E72461577D686318\",\r\n\"0x52908400098527886E0F7030069857D2e4169EE7\",\r\n\"0x5aAeb6053F3e94c9b9A09F33669435E7EF1BEaEd\",\r\n\"0x6549f4939460dE12611948b3f82b88C3c8975323\",\r\n\"0x66f9664F97F2b50f62d13eA064982F936DE76657\",\r\n\"0x8617e340b3D01fa5F11f306F4090Fd50e238070d\",\r\n\"0x88021160c5C792225E4E5452585947470010289d\",\r\n\"0xd1220a0CF47c7B9Be7A2E6Ba89f429762E7b9adB\",\r\n\"0xdbF03B407C01E7cd3cbEa99509D93f8dDDc8C6fB\",\r\n\"0xDE709F2102306220921060314715629080e2Fb77\",\r\n\"0xFb6916095CA1dF60bb79CE92ce3Ea74C37c5D359\",\r\n]\r\ntest_cases = {30 : rsk_mainnet, 31 : rsk_testnet, 1 : eth_mainnet}\r\n\r\nfor chainid, cases in test_cases.items():\r\n    for addr in cases:\r\n        assert ( addr == eth_checksum_encode(addr,chainid) )\r\n```\r\n## Adoption\r\n\r\n### Adoption  Table\r\n\r\n| Network      | Chain id | Supports this EIP |\r\n|-|-|-|\r\n| RSK Mainnet  | 30       | Yes               |\r\n| RSK Testnet  | 31       | Yes               |\r\n\r\n### Implementation Table\r\n\r\n| Project         | Adopted this EIP | Implementation |\r\n|-|-|-|\r\n| MyCrypto       | Yes              | [JavaScript](https://github.com/MyCryptoHQ/MyCrypto/blob/develop/common/utils/formatters.ts#L126) |\r\n| MyEtherWallet  | Yes              | [JavaScript](https://github.com/MyEtherWallet/MyEtherWallet/blob/73c4a24f8f67c655749ac990c5b62efd92a2b11a/src/helpers/addressUtils.js#L22) |\r\n| Ledger         | Yes              | [C](https://github.com/LedgerHQ/ledger-app-eth/blob/master/src_common/ethUtils.c#L203) |\r\n| Trezor         | Yes              | [Python](https://github.com/trezor/trezor-core/blob/270bf732121d004a4cd1ab129adaccf7346ff1db/src/apps/ethereum/get_address.py#L32) and [C](https://github.com/trezor/trezor-crypto/blob/4153e662b60a0d83c1be15150f18483a37e9092c/address.c#L62) |\r\n| Web3.js           | Yes              | [JavaScript](https://github.com/ethereum/web3.js/blob/aaf26c8806bc9fb60cf6dcb6658104963c6c7fc7/packages/web3-utils/src/Utils.js#L140) |\r\n| EthereumJS-util   | Yes              | [JavaScript](https://github.com/ethereumjs/ethereumjs-util/pull/204/commits/cdf0b3c996b05ac5b1f758f17ea9f9ed1847c1eb) |\r\n| ENS address-encoder | Yes | [TypeScript](https://github.com/ensdomains/address-encoder/commit/5bf53b13fa014646ea28c9e5f937361dc9b40590) |\r\n\r\n## Copyright\r\n\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).\r\n",
  "closed_by": {
    "login": "MicahZoltu",
    "id": 886059,
    "node_id": "MDQ6VXNlcjg4NjA1OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MicahZoltu",
    "html_url": "https://github.com/MicahZoltu",
    "followers_url": "https://api.github.com/users/MicahZoltu/followers",
    "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
    "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
    "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
    "repos_url": "https://api.github.com/users/MicahZoltu/repos",
    "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/1121/reactions",
    "total_count": 6,
    "+1": 6,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/404539955",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-404539955",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 404539955,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDUzOTk1NQ==",
    "user": {
      "login": "SergioDemianLerner",
      "id": 1752347,
      "node_id": "MDQ6VXNlcjE3NTIzNDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1752347?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SergioDemianLerner",
      "html_url": "https://github.com/SergioDemianLerner",
      "followers_url": "https://api.github.com/users/SergioDemianLerner/followers",
      "following_url": "https://api.github.com/users/SergioDemianLerner/following{/other_user}",
      "gists_url": "https://api.github.com/users/SergioDemianLerner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SergioDemianLerner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SergioDemianLerner/subscriptions",
      "organizations_url": "https://api.github.com/users/SergioDemianLerner/orgs",
      "repos_url": "https://api.github.com/users/SergioDemianLerner/repos",
      "events_url": "https://api.github.com/users/SergioDemianLerner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SergioDemianLerner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T14:52:16Z",
    "updated_at": "2018-07-12T14:52:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is an excellent idea, because it prevents using addresses of Ethereum in Ethereum Classic or RSK by mistake and vice-versa.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/404539955/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/501444063",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-501444063",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 501444063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTQ0NDA2Mw==",
    "user": {
      "login": "juli",
      "id": 71986,
      "node_id": "MDQ6VXNlcjcxOTg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/71986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juli",
      "html_url": "https://github.com/juli",
      "followers_url": "https://api.github.com/users/juli/followers",
      "following_url": "https://api.github.com/users/juli/following{/other_user}",
      "gists_url": "https://api.github.com/users/juli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juli/subscriptions",
      "organizations_url": "https://api.github.com/users/juli/orgs",
      "repos_url": "https://api.github.com/users/juli/repos",
      "events_url": "https://api.github.com/users/juli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-12T20:31:46Z",
    "updated_at": "2019-06-12T20:31:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "EIP-1191 already adopted by Trezor, Ledger, MEW, MyCrypto and [web3](https://github.com/ethereum/web3.js/blob/aaf26c8806bc9fb60cf6dcb6658104963c6c7fc7/packages/web3-utils/src/Utils.js#L140)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/501444063/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/501481167",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-501481167",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 501481167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTQ4MTE2Nw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-12T22:43:08Z",
    "updated_at": "2019-06-12T22:43:08Z",
    "author_association": "MEMBER",
    "body": "@juli can you please check this comment: https://github.com/ethereum/EIPs/pull/1191#issuecomment-495398739 ?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/501481167/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/549097601",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-549097601",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 549097601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTA5NzYwMQ==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-03T01:59:09Z",
    "updated_at": "2019-11-03T01:59:09Z",
    "author_association": "MEMBER",
    "body": "The rationale says:\r\n> By means of a minimal code change on existing libraries, users are protected from losing funds by mixing addresses of different Ethereum based networks.\r\n\r\nIs the idea here that a user will receive a contract address from some source that uses this new checksum, and then when interacting with that contract address their tooling will tell them the address is invalid if they choose a different network during signing?\r\n\r\nI'm assuming that the intention is that EOA addresses would continue to use the EIP-55 checksum, since EOA addresses _do_ work across chains?  Presumably, the same for contracts that deploy to a standardized address across chains (like EIP 1820)?  If so, I think these things should be mentioned in the EIP to prevent implementers from going overboard and using this new checksum everywhere (it is not appropriate everywhere).\r\n\r\n----\r\n\r\nWhy do the test case arrays have different addresses for each network?  It feels like the same set of addresses should be encoded for each network in the tests.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/549097601/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/549101422",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-549101422",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 549101422,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTEwMTQyMg==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-03T03:17:40Z",
    "updated_at": "2019-11-03T03:17:40Z",
    "author_association": "MEMBER",
    "body": "> Why do the test case arrays have different addresses for each network? It feels like the same set of addresses should be encoded for each network in the tests.\r\n\r\nThis is debated on #2143.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/549101422/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/549102542",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-549102542",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 549102542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTEwMjU0Mg==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-03T03:43:30Z",
    "updated_at": "2019-11-03T03:43:30Z",
    "author_association": "MEMBER",
    "body": "@axic I don't see that particular topic debated over there.  Am I missing something?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/549102542/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/549102646",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-549102646",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 549102646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTEwMjY0Ng==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-03T03:46:30Z",
    "updated_at": "2019-11-03T03:46:30Z",
    "author_association": "MEMBER",
    "body": "I do agree with the arguments made in #2143 that \"Ethereum\" doesn't adopt this EIP, instead wallets adopt this EIP.  A wallet checking a checksum can check both the EIP-55 checksum and the EIP-1191 checksum and if either match green light the transaction.  When generating a checksum, it would be up to the wallet whether to generate an EIP-1191 checksum or an EIP-55 checksum for the user.  Getting adoption on _generation_ is a bit harder, since it means creating addresses that are incompatible with wallets that do checksum validation but don't support EIP-1191.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/549102646/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/549129226",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-549129226",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 549129226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTEyOTIyNg==",
    "user": {
      "login": "juli",
      "id": 71986,
      "node_id": "MDQ6VXNlcjcxOTg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/71986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juli",
      "html_url": "https://github.com/juli",
      "followers_url": "https://api.github.com/users/juli/followers",
      "following_url": "https://api.github.com/users/juli/following{/other_user}",
      "gists_url": "https://api.github.com/users/juli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juli/subscriptions",
      "organizations_url": "https://api.github.com/users/juli/orgs",
      "repos_url": "https://api.github.com/users/juli/repos",
      "events_url": "https://api.github.com/users/juli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-03T11:54:53Z",
    "updated_at": "2019-11-03T11:54:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MicahZoltu Thanks for your comments:\r\n \r\n 1. It should be used for EAO addresses.  For example, if you send ETC or RSK funds to your Ethereum address and you use a hardware wallet, the wallet can prevent you from signing transactions cross chain (derivation path checks) and you'll be forced to load the same seed in a software wallet to recover the funds. In some cases accessing the private key won't be possible for end users or will be too risky for organizations.\r\n\r\n2. Networks decide and specify what address format to use, not wallets alone. Ideally, Copy&paste of addresses should work across exchanges, explorers, and wallets without requiring users to do a conversion.\r\nIn the case of EIP-155, wallets can decide to protect users or not by adding the chain id to the signature but networks decide to implement EIP-155 in nodes and whether nodes allow signatures without chain id or not.\r\n\r\n3. If a wallet knows about EIP-55 and EIP-1191 then it should at least warn the user when a EIP-1191 RSK address is being used in a ETH transaction instead of green lighting it.\r\n\r\n4. Yes, adoption on generation before other wallets and exchanges implement EIP-1191 could be a problem and force users to convert the addresses for a while but wallets can decide to protect their own users by generating EIP-1191 addresses for networks that adopted it, we can consider it to be \"secure by default\" logic.\r\n\r\n5. The first item of each test case list is an all-uppercase valid checksum addresses for each chain id and that is why it is different for each chain id. The order in each list is different due to the upper/lower changes. RSK testnet has an extra test case. I can make changes to the test cases if you think it is important.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/549129226/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/549136813",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-549136813",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 549136813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTEzNjgxMw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-03T13:30:28Z",
    "updated_at": "2019-11-03T13:30:28Z",
    "author_association": "MEMBER",
    "body": "The \"network\" does not care, i.e. the RPC interface ignores the checksum. And the RPC interface is the closest you can get to the network, anything below that just deals with bytes and not hex strings. Checksums are only enforced by wallets.\r\n\r\nThis was the case for years, correct me if I'm wrong and the JSON RPC in `sendTransaction` and others enforce checksum now.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/549136813/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/549143782",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-549143782",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 549143782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTE0Mzc4Mg==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-03T14:48:54Z",
    "updated_at": "2019-11-03T14:48:54Z",
    "author_association": "MEMBER",
    "body": "@axic I'm confident that checksums are not required.  It is _possible_ the client will error on invalid checksum in a JSON-RPC request (I have never tried).\r\n\r\n@juli Some users intentionally use the same address across multiple chains as that allows them to only have to secure a single private key.  It certainly is unfortunate that hardware wallets chain lock like you have described.  The reason they do it is to protect users from a hardware wallet app attack, where some malicious app gets onto the hardware wallet and leaks a private key, it is restricted to what derivation paths it can leak keys for\r\n\r\nGiven that, I would suggest that EOA addresses be _optionally_ checksumed in this way, to cater to both usage scenarios.  It would be up to the wallet which solution was appropriate for a given address.\r\n\r\nNitpick: I would like to see the test cases sorted the same for each network and the same set of addresses included for each network.  It may also be valuable to show the same set of addresses encoded with EIP-55 checksum only, mainly for illustration purposes.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/549143782/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/549152071",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-549152071",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 549152071,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTE1MjA3MQ==",
    "user": {
      "login": "juli",
      "id": 71986,
      "node_id": "MDQ6VXNlcjcxOTg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/71986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juli",
      "html_url": "https://github.com/juli",
      "followers_url": "https://api.github.com/users/juli/followers",
      "following_url": "https://api.github.com/users/juli/following{/other_user}",
      "gists_url": "https://api.github.com/users/juli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juli/subscriptions",
      "organizations_url": "https://api.github.com/users/juli/orgs",
      "repos_url": "https://api.github.com/users/juli/repos",
      "events_url": "https://api.github.com/users/juli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-03T16:04:50Z",
    "updated_at": "2019-11-03T16:04:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@axic I know the checksum is for user facing applications, I know how Ethereum nodes work. But what I tried to say is that deciding address format is something that should be part of the standards of a cryptocurrency system and not a decision of individual wallets. In the same way a chain id and BIP44/SLIP-0044 ID is decided.\r\n\r\n@MicahZoltu Those users are doing it wrong, reusing the same private key for transactions in different networks is risky. They can use the same seed without reusing keys, that is why HD wallets were invented. This EIP makes sense if it is used for EAO and contract addresses.\r\n\r\nNitpick: done #2345 \r\n\r\nThe addresses encoded with EIP-55 only are in the eth_mainnet list, EIP-1191 is backward compatible.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/549152071/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/549304289",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-549304289",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 549304289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTMwNDI4OQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-04T10:58:34Z",
    "updated_at": "2019-11-04T10:58:34Z",
    "author_association": "MEMBER",
    "body": "The rendering for the \"Adoption\" table seems to be broken here: https://eips.ethereum.org/EIPS/eip-1191",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/549304289/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/549519995",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-549519995",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 549519995,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTUxOTk5NQ==",
    "user": {
      "login": "juli",
      "id": 71986,
      "node_id": "MDQ6VXNlcjcxOTg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/71986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juli",
      "html_url": "https://github.com/juli",
      "followers_url": "https://api.github.com/users/juli/followers",
      "following_url": "https://api.github.com/users/juli/following{/other_user}",
      "gists_url": "https://api.github.com/users/juli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juli/subscriptions",
      "organizations_url": "https://api.github.com/users/juli/orgs",
      "repos_url": "https://api.github.com/users/juli/repos",
      "events_url": "https://api.github.com/users/juli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-04T19:54:24Z",
    "updated_at": "2019-11-04T19:54:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@axic Fixed and a new implementation added.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/549519995/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/550080361",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-550080361",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 550080361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDA4MDM2MQ==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-06T00:06:13Z",
    "updated_at": "2019-11-06T00:06:13Z",
    "author_association": "MEMBER",
    "body": "Rendering of \"Backward Compatibility\" is also broken at that link.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/550080361/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/550081136",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-550081136",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 550081136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDA4MTEzNg==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-06T00:09:28Z",
    "updated_at": "2019-11-06T00:09:28Z",
    "author_association": "MEMBER",
    "body": "FWIW, I don't agree with the EIP as currently worded for the reasons I mentioned above.  I think that checksumming like this should NOT be applied to _all_ addresses, but be opt-in per address (a decision a wallet can choose to make).  I also agree with other commenters that the decision to support this is a wallet decision, not a chain decision, just like EIP-55.  Because of this, I don't think that the Adoption Table should be included.\r\n\r\nThat being said, I see nothing _technically_ wrong with this EIP, thus the above concerns are not a blocker for moving this EIP to final should the authors disagree with my assessment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/550081136/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/550104771",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-550104771",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 550104771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDEwNDc3MQ==",
    "user": {
      "login": "juli",
      "id": 71986,
      "node_id": "MDQ6VXNlcjcxOTg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/71986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juli",
      "html_url": "https://github.com/juli",
      "followers_url": "https://api.github.com/users/juli/followers",
      "following_url": "https://api.github.com/users/juli/following{/other_user}",
      "gists_url": "https://api.github.com/users/juli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juli/subscriptions",
      "organizations_url": "https://api.github.com/users/juli/orgs",
      "repos_url": "https://api.github.com/users/juli/repos",
      "events_url": "https://api.github.com/users/juli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-06T01:50:28Z",
    "updated_at": "2019-11-06T01:50:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MicahZoltu thanks for your comments. EIP-55 nor EIP-1191 can solve the initial mistake: using hexadecimal addresses. At least one very popular wallet fixed their EIP-55 implementation while adding EIP-1191. The EIP-55 bug of that wallet had not been reported before, that probably means most users don't pay attention to the upper/lower case differences. My main motivation to work on this EIP to make it _final_ is that it has been already implemented by wallets and libraries and having a peer reviewed EIP can contribute to adoption by other wallets and exchanges and allow users to copy&paste without doing conversions while reducing the probability of mistakes.  I don't think this EIP is enough to solve the problem with hexadecimal addresses but it is at least an attempt. Using a better address format is the real solution. If you think the current version is good enough I'll move to work on something more useful than this for Ethereum users. Thank you.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/550104771/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/550141529",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-550141529",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 550141529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDE0MTUyOQ==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-06T04:45:44Z",
    "updated_at": "2019-11-06T04:45:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "# The list\r\n\r\nIt is not clear to me how enumerating specific networks in the EIP is part of the specification.\r\n\r\nIf a network is NOT listed in the EIP then can they use the checksums?\r\n\r\nListing networks adds a cost to maintaining this document.\r\n\r\nRecommendation: remove this part\r\n\r\n# Mutable\r\n\r\nThe specification is mutable. It requires implementations to constantly check for an updated version of the EIP to know if a specific checksumming is valid:\r\n\r\n> ... If the chain id passed to the function belongs to a network that opted for using this checksum variant, prefix the address with the chain id and the 0x separator before calculating the hash\r\n\r\nIt is not specified how to know if \"a network that opted for using this checksum variant\". Presumably this is indicated by including the network on the list.\r\n\r\nThe reference implementation does not load https://eips.ethereum.org/EIPS/eip-1191 to check the list and so it does not properly implement the specification.\r\n\r\n# Spec undefined behavior\r\n\r\nThe spec states: \r\n\r\n> ...prefix the address with the chain id and the 0x separator before calculating the hash\r\n\r\nIt is not clear if chain id shall be lowercase, uppercase, or as provided, if it is provided as a string.\r\n\r\n# Not backwards compatible\r\n\r\nGiven the above, I believe it is not correct to say this is backwards compatible. It is fine to be not backwards compatible, but it should be clearly said that the new EIP replaces the old EIP for certain cases. But EIP-1191 will not implement and extend EIP-155\r\n\r\n# Limited utility / Will's explanation of why everyone is using CHAIN ID wrong\r\n\r\n*This item is a comment. It is meant to open discussion. This criticism is not a technical reason to reject this EIP.*\r\n\r\nI believe this EIP has limited or no utility because chain IDs are being used wrong currently and they should be changing more frequently in the future. There is a full discussion on this here https://ethereum-magicians.org/t/eip-1344-add-chain-id-opcode/1131/13\r\n\r\nBackground: nowadays it is popular when you are installing software to just give your root password to the software and let it install itself, or if you are setting up a brokerage account you give the brokerage your bank account password to login as you and do whatever it wants with your account. Similarly, when you sign a transaction on Ethereum, you permit that transaction to execute today on the current version of Ethereum or any future version of the consensus client that might be created in the future.\r\n\r\nDetails: The attack vector is: [SIGN+SUBMIT TRANSACTION] -> [ALL CLIENTS UPGRADE] -> [TRANSACTION EXECUTES]. Here the transaction you signed is not the one that executes. I consider this unacceptable. This is a design weakness and the solution is that every change to the consensus client or state hardfork must result in the chain id changing.\r\n\r\nThis affects the current EIP because if chain ids are changing frequently then the address checksumming is changing. It that would be a bad customer experience.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/550141529/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/550343937",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-550343937",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 550343937,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDM0MzkzNw==",
    "user": {
      "login": "juli",
      "id": 71986,
      "node_id": "MDQ6VXNlcjcxOTg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/71986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juli",
      "html_url": "https://github.com/juli",
      "followers_url": "https://api.github.com/users/juli/followers",
      "following_url": "https://api.github.com/users/juli/following{/other_user}",
      "gists_url": "https://api.github.com/users/juli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juli/subscriptions",
      "organizations_url": "https://api.github.com/users/juli/orgs",
      "repos_url": "https://api.github.com/users/juli/repos",
      "events_url": "https://api.github.com/users/juli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-06T14:50:45Z",
    "updated_at": "2019-11-06T14:50:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Chain ids are integers so they can't be lowercase. Everything in Ethereum, including the EVM is vaguely defined I can't fix that. I agree identifying genesis + network upgrade/hard forks makes more sense than a fixed short id but the chain id was the only id available when I looked at this problem.\r\n\r\nAbout mutability: keeping a JSON document for wallets sounds like a potential solution.\r\n\r\nWallets and libraries already have their own static list of networks with their BIP44 values. Example: [MyCrypto](https://github.com/MyCryptoHQ/MyCrypto/blob/master/common/config/dpaths.ts) [Ledger](https://github.com/LedgerHQ/ledger-app-eth/blob/master/Makefile#L40)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/550343937/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/551090825",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-551090825",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 551090825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTA5MDgyNQ==",
    "user": {
      "login": "SergioDemianLerner",
      "id": 1752347,
      "node_id": "MDQ6VXNlcjE3NTIzNDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1752347?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SergioDemianLerner",
      "html_url": "https://github.com/SergioDemianLerner",
      "followers_url": "https://api.github.com/users/SergioDemianLerner/followers",
      "following_url": "https://api.github.com/users/SergioDemianLerner/following{/other_user}",
      "gists_url": "https://api.github.com/users/SergioDemianLerner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SergioDemianLerner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SergioDemianLerner/subscriptions",
      "organizations_url": "https://api.github.com/users/SergioDemianLerner/orgs",
      "repos_url": "https://api.github.com/users/SergioDemianLerner/repos",
      "events_url": "https://api.github.com/users/SergioDemianLerner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SergioDemianLerner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-07T13:59:50Z",
    "updated_at": "2019-11-07T14:01:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "We should always put users first. This EIP improves the user experience and protects them from costly mistakes. I think is our duty to finalize this EIP, which has been de-facto standardized by wallets and is technically sound.\r\nIn following EIPs the community can create new address formats and protect from more exotic problems regarding network forks.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/551090825/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/552007572",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-552007572",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 552007572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjAwNzU3Mg==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-08T22:05:41Z",
    "updated_at": "2019-11-08T22:05:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@juli Currently in the specification the integer is lowercase.\r\n\r\n> \"add it to the input of the hash function.\"\r\n\r\n\"Add\" is underspecified.\r\n\r\nIf the specification is that a JSON document is required and there is a reference document published in the EIP then the reference implementation must include an HTTP client to retrieve this JSON file.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/552007572/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/552008166",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-552008166",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 552008166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjAwODE2Ng==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-08T22:07:22Z",
    "updated_at": "2019-11-08T22:07:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@SergioDemianLerner This EIP may be technically sound after it addresses the technical issues I have raised above.\r\n\r\nTo be clear, and as noted above, my complaint about chain ID in general is not a technical complaint against this EIP. But it is relevant for future readers and that's why I put it here.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/552008166/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/552029298",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-552029298",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 552029298,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjAyOTI5OA==",
    "user": {
      "login": "juli",
      "id": 71986,
      "node_id": "MDQ6VXNlcjcxOTg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/71986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juli",
      "html_url": "https://github.com/juli",
      "followers_url": "https://api.github.com/users/juli/followers",
      "following_url": "https://api.github.com/users/juli/following{/other_user}",
      "gists_url": "https://api.github.com/users/juli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juli/subscriptions",
      "organizations_url": "https://api.github.com/users/juli/orgs",
      "repos_url": "https://api.github.com/users/juli/repos",
      "events_url": "https://api.github.com/users/juli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-08T23:22:28Z",
    "updated_at": "2019-11-08T23:22:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fulldecent \r\n\r\n * The summary says `adding a chain id defined by EIP-155 ` then chain id format is defined by EIP-155. Please contribute with text to make it more clear if you think it is necessary to specify how to create the prefix ASCII string from the chain id decimal integer and how to make it lowercase.\r\n\r\n* Yes, `add` is not defined in that sentence but it is explained in the next one and code and test vectors are provided. \r\n\r\n* A JSON document is not required but I mentioned it as a way to enable automatic checks, conversions, and notifications. \r\n\r\n * One possibility is adding \"eip1191\" : true` to the [ethereum-list](https://github.com/ethereum-lists) JSON documents [here](https://github.com/ethereum-lists/chains/blob/master/_data/chains)\r\n\r\n*  HTTP Client: Please mention this to the EIP-155 authors so we can use the same standard HTTP client for EIP sample code. EIP-155 also defines a list of chain ids and links to a repository of JSON documents.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/552029298/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/552067837",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-552067837",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 552067837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjA2NzgzNw==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-09T05:18:43Z",
    "updated_at": "2019-11-09T05:19:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "# Proposed new specification\r\n\r\n> An address (string of 40 hex digits) and an EIP-155 chain ID (string of digits with no loading zeros) are required to calculate an EIP-1191 checksummed address.\r\n> \r\n> First calculate a reference string. This is the chain ID with the lowercased address concatenated after, the result sha3 hashed into hexadecimal format. The EIP-1191 checksummed address shall be equal to the original address with each hexdigit A through F at location `i` in the address shown in uppercase iff the hexdigit `i` in the reference string is greater than or equal to 8. Typically the checksummed address is shown with \"0x\" prefixed.\r\n\r\n# Proposed new implementation\r\n\r\nI could not get the existing implementation to run (library missing). And then assertion failures.\r\n\r\nAttached is an update including modern import, PEP8 styling, docstring documentation, and Python 3 static typing.\r\n\r\nThe output is wrong. Or the test case is wrong. Please help. \r\n\r\n```python\r\n#!/usr/bin/python3\r\nimport hashlib\r\n\r\ndef eip1191_checksum(ethereum_address: str, eip155_chainid: str) -> str:\r\n    \"\"\"\r\n    @param address: an Ethereum address, 40 hex digits\r\n    @param eip_155_chainid: digits with no loading zeros\r\n    \"\"\"\r\n    assert(len(ethereum_address) == 40)\r\n    assert(int(ethereum_address, 16) > 0)\r\n    assert(int(eip155_chainid, 10) > 0)\r\n    assert(str(int(eip155_chainid, 10)) == eip155_chainid)\r\n    hash_input = eip155_chainid + ethereum_address.lower()\r\n    reference_string = hashlib.sha3_256(hash_input.encode('utf8')).hexdigest()\r\n    aggregate = zip(ethereum_address.lower(), reference_string)\r\n    return \"0x\" + \"\".join([c if a < \"8\" else c.upper() for c, a in aggregate])\r\n\r\neth_mainnet = [\r\n    \"0x27b1fdb04752bbc536007a920d24acb045561c26\",\r\n    \"0x3599689E6292b81B2d85451025146515070129Bb\",\r\n    \"0x42712D45473476b98452f434e72461577D686318\",\r\n    \"0x52908400098527886E0F7030069857D2E4169EE7\",\r\n    \"0x5aAeb6053F3E94C9b9A09f33669435E7Ef1BeAed\",\r\n    \"0x6549f4939460DE12611948b3f82b88C3C8975323\",\r\n    \"0x66f9664f97F2b50F62D13eA064982f936dE76657\",\r\n    \"0x8617E340B3D01FA5F11F306F4090FD50E238070D\",\r\n    \"0x88021160C5C792225E4E5452585947470010289D\",\r\n    \"0xD1220A0cf47c7B9Be7A2E6BA89F429762e7b9aDb\",\r\n    \"0xdbF03B407c01E7cD3CBea99509d93f8DDDC8C6FB\",\r\n    \"0xde709f2102306220921060314715629080e2fb77\",\r\n    \"0xfB6916095ca1df60bB79Ce92cE3Ea74c37c5d359\",\r\n]\r\nrsk_mainnet = [\r\n    \"0x27b1FdB04752BBc536007A920D24ACB045561c26\",\r\n    \"0x3599689E6292B81B2D85451025146515070129Bb\",\r\n    \"0x42712D45473476B98452f434E72461577d686318\",\r\n    \"0x52908400098527886E0F7030069857D2E4169ee7\",\r\n    \"0x5aaEB6053f3e94c9b9a09f33669435E7ef1bEAeD\",\r\n    \"0x6549F4939460DE12611948B3F82B88C3C8975323\",\r\n    \"0x66F9664f97f2B50F62d13EA064982F936de76657\",\r\n    \"0x8617E340b3D01Fa5f11f306f4090fd50E238070D\",\r\n    \"0x88021160c5C792225E4E5452585947470010289d\",\r\n    \"0xD1220A0Cf47c7B9BE7a2e6ba89F429762E7B9adB\",\r\n    \"0xDBF03B407c01E7CD3cBea99509D93F8Dddc8C6FB\",\r\n    \"0xDe709F2102306220921060314715629080e2FB77\",\r\n    \"0xFb6916095cA1Df60bb79ce92cE3EA74c37c5d359\",\r\n]\r\nrsk_testnet = [\r\n    \"0x27B1FdB04752BbC536007a920D24acB045561C26\",\r\n    \"0x3599689e6292b81b2D85451025146515070129Bb\",\r\n    \"0x42712D45473476B98452F434E72461577D686318\",\r\n    \"0x52908400098527886E0F7030069857D2e4169EE7\",\r\n    \"0x5aAeb6053F3e94c9b9A09F33669435E7EF1BEaEd\",\r\n    \"0x6549f4939460dE12611948b3f82b88C3c8975323\",\r\n    \"0x66f9664F97F2b50f62d13eA064982F936DE76657\",\r\n    \"0x8617e340b3D01fa5F11f306F4090Fd50e238070d\",\r\n    \"0x88021160c5C792225E4E5452585947470010289d\",\r\n    \"0xd1220a0CF47c7B9Be7A2E6Ba89f429762E7b9adB\",\r\n    \"0xdbF03B407C01E7cd3cbEa99509D93f8dDDc8C6fB\",\r\n    \"0xDE709F2102306220921060314715629080e2Fb77\",\r\n    \"0xFb6916095CA1dF60bb79CE92ce3Ea74C37c5D359\",\r\n]\r\ntest_cases = {\"30\": rsk_mainnet, \"31\": rsk_testnet, \"1\": eth_mainnet}\r\n\r\nfor eip155_chainid, cases in test_cases.items():\r\n    for address in cases:\r\n        assert (address == eip1191_checksum(address[2:], eip155_chainid))\r\n```\r\n\r\n# Discussion\r\n\r\nThe list in EIP-155 is provided for informational purposes only. There is no effect on the interpretation of EIP-155 based on the entries in the table list. That is distinguishable from EIP-1191 (DRAFT) which currently requires that output be different based on whether a chain ID \"belongs to a network that opted...\". Networks are not human and they do not opt. That specification is undefined behavior.\r\n\r\nThe solution is: add this paragraph to the specification:\r\n\r\n> Clients should use EIP-1191 addresses for networks which are known to support EIP-1191, see Known Supported Networks, below. For other networks, clients should continue to use EIP-155 addresses.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/552067837/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 2,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/552083273",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-552083273",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 552083273,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjA4MzI3Mw==",
    "user": {
      "login": "juli",
      "id": 71986,
      "node_id": "MDQ6VXNlcjcxOTg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/71986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juli",
      "html_url": "https://github.com/juli",
      "followers_url": "https://api.github.com/users/juli/followers",
      "following_url": "https://api.github.com/users/juli/following{/other_user}",
      "gists_url": "https://api.github.com/users/juli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juli/subscriptions",
      "organizations_url": "https://api.github.com/users/juli/orgs",
      "repos_url": "https://api.github.com/users/juli/repos",
      "events_url": "https://api.github.com/users/juli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-09T09:38:42Z",
    "updated_at": "2019-11-09T09:38:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fulldecent \r\n * Please read about the differences between SHA3 and Keccak 256  [here](https://medium.com/@ConsenSys/are-you-really-using-sha-3-or-old-code-c5df31ad2b0).\r\n * Python 3 code from current version of EIP-1191 works for me.\r\n * Your code has the following problems:\r\n    * it does not include '0x' between the chain id and the address\r\n    * it uses EIP-1191 for the eth_mainnet test cases\r\n * Who opts to implement an EIP? \r\n * IMO the list of chain ids in the EIP-1191 implementation is more clear than adding the text you suggest.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/552083273/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/552121956",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-552121956",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 552121956,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjEyMTk1Ng==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-09T17:48:45Z",
    "updated_at": "2019-11-09T17:48:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "**Please read about the differences between SHA3 and Keccak 256 here.**\r\n\r\nPlease help to correct my implementation. I'm just here to point out problems.\r\n\r\n**Python 3 code from current version of EIP-1191 works for me.**\r\n\r\nHere is how I executed the current version of EIP-1191 (DRAFT). It does not compile.\r\n\r\n```sh\r\npython3 <<EOL\r\n#!/usr/bin/python3\r\nfrom sha3 import keccak_256\r\nimport random\r\n\"\"\"\r\n   addr (str): Hexadecimal address, 40 characters long with 2 characters prefix\r\n   chainid (int): chain id from EIP-155 \"\"\"\r\ndef eth_checksum_encode(addr, chainid=1):\r\n    adopted_eip1191 = [30, 31]\r\n    hash_input = str(chainid) + addr.lower() if chainid in adopted_eip1191 else addr[2:].lower()\r\n    hash_output = keccak_256(hash_input.encode('utf8')).hexdigest()\r\n    aggregate = zip(addr[2:].lower(),hash_output)\r\n    out = addr[:2] + ''.join([c.upper() if int(a,16) >= 8 else c for c,a in aggregate])\r\n    return out\r\nEOL\r\n```\r\n\r\nResult\r\n\r\n> Traceback (most recent call last):\r\n>   File \"<stdin>\", line 2, in <module>\r\n> ModuleNotFoundError: No module named 'sha3'\r\n\r\n**Your code has the following problems:**\r\n\r\n**it does not include '0x' between the chain id and the address**\r\n\r\nYes, this is intentional. EIP-55 does not use \"0x\" in the hash. Source https://eips.ethereum.org/EIPS/eip-55. Currently, EIP-1191 (DRAFT) also does not use \"0x\", source \"if a registered chain id is provided, add it to the input of the [EIP-55] hash function.\" So my implementation does not use \"0x\".\r\n\r\n**it uses EIP-1191 for the eth_mainnet test cases**\r\n\r\nPerhaps the mainnet test cases should be removed.\r\n\r\nOr, if a more complete test case is desired then we can add a function `checksum_address()` which decides whether to use EIP-1191 (DRAFT) or EIP-55.\r\n\r\n**Who opts to implement an EIP?**\r\n\r\n\"Opt\" is not used in my revised specification or my revised DRAFT implementation. I do not understand your question. But in general, anybody opts an EIP. This is specified at https://github.com/ethereum/EIPs\r\n\r\n> Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.\r\n\r\nThis must be read implicitly. Because this project scope statement says nothing of who opts to use EIPs, it is understood that anybody, or nobody can use an EIP.\r\n\r\n**IMO the list of chain ids in the EIP-1191 implementation is more clear than adding the text you suggest.** \r\n\r\nAgreed. Here is an update to be more clear:\r\n\r\n> An address (string of 40 hex digits) and an EIP-155 chain ID (string of digits with no loading zeros) are required to calculate an EIP-1191 checksummed address.\r\n>\r\n> First calculate a reference string. This is the hexadecimal SHA-3 hash of the concatenation of the address and chain ID. The EIP-1191 checksummed address shall be equal to the original address with each hexdigit A through F at location `i` in the address shown in uppercase iff the hexdigit `i` in the reference string is greater than or equal to 8. Typically the checksummed address is shown prefixed with \"0x\".\r\n> \r\n> Clients should use addresses in EIP-1191 format for networks listed in the Adoption Table below. For other networks, clients should use addresses in EIP-55 format.\r\n\r\n---\r\n\r\nPlease note that another benefit of doing it this way ^^ is that it allows mainnet to upgrade to EIP-1191 (DRAFT) in the future. Clients will recognize EIP-1191 (DRAFT) addresses and EIP-55 addresses. There will probably even be a common emoji or color that clients show to differentiate chain-specific (1191) and chain-general (55) addresses. Color and emoji are out of the scope of this proposal. And supporting this use case is NOT a motivation for the above changes.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/552121956/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/552137096",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-552137096",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 552137096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjEzNzA5Ng==",
    "user": {
      "login": "juli",
      "id": 71986,
      "node_id": "MDQ6VXNlcjcxOTg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/71986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juli",
      "html_url": "https://github.com/juli",
      "followers_url": "https://api.github.com/users/juli/followers",
      "following_url": "https://api.github.com/users/juli/following{/other_user}",
      "gists_url": "https://api.github.com/users/juli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juli/subscriptions",
      "organizations_url": "https://api.github.com/users/juli/orgs",
      "repos_url": "https://api.github.com/users/juli/repos",
      "events_url": "https://api.github.com/users/juli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-09T21:00:12Z",
    "updated_at": "2019-11-09T21:00:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fulldecent \r\n * When you write SHA3 you should write Keccak256, the output of both functions is different.\r\n * It will be more practical for everybody if you make a PR with your suggestions to the EIP instead of pasting them as Github comments.\r\n * You could also make a PR to EIP-55 because the way you write it is more clear than the original EIP-55 text.\r\n * Python3's sha3 module is necessary to make the code work.\r\n * EIP-55 for example requires the ethereum module in the same way EIP-1191 requires keccak_256  `from ethereum import utils`\r\n * Your implementation is wrong if it does not use `0x` for EIP-1191.\r\n * The EIP references 8 different implementations of EIP-1191 including Trezor and Ledger wallets so if your alternative implementation is not compatible you should make a new EIP including the emoji ideas.\r\n ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/552137096/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/555122824",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-555122824",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 555122824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTEyMjgyNA==",
    "user": {
      "login": "juli",
      "id": 71986,
      "node_id": "MDQ6VXNlcjcxOTg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/71986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juli",
      "html_url": "https://github.com/juli",
      "followers_url": "https://api.github.com/users/juli/followers",
      "following_url": "https://api.github.com/users/juli/following{/other_user}",
      "gists_url": "https://api.github.com/users/juli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juli/subscriptions",
      "organizations_url": "https://api.github.com/users/juli/orgs",
      "repos_url": "https://api.github.com/users/juli/repos",
      "events_url": "https://api.github.com/users/juli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-18T17:30:44Z",
    "updated_at": "2019-11-18T17:30:44Z",
    "author_association": "CONTRIBUTOR",
    "body": " replying to @axic [comment](https://github.com/ethereum/EIPs/pull/2143#issuecomment-548617325)\r\n\r\n> It makes a lot more sense to specify how to calculate the checksum and leave the adoption outside \r\n> the scope of this EIP.\r\n\r\n@alcuadrado @MicahZoltu \r\n\r\nWhat do you think about: \r\n1. replacing the adoption table by a link to the [ethereum-lists](https://github.com/ethereum-lists/chains/blob/master/_data/chains/) repository.\r\n2. Adding a JSON field such as `eip55` or `eip1191` or `checksumType` to the JSON documents where the chain id and name are specified? \r\n 3. If you agree, what would be the preferred JSON variable name and where should it be specified?\r\n\r\nThanks\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/555122824/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/555834447",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-555834447",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 555834447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTgzNDQ0Nw==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-20T04:39:35Z",
    "updated_at": "2019-11-20T04:39:35Z",
    "author_association": "MEMBER",
    "body": "What do you mean \"add a JSON field\"?\r\n\r\nMy argument is still the same as before, checksum support isn't something that is decided \"per chain\", it is something that is decided \"per tool\".  If tools think 1191 is useful, they will implement it.  If they think 55 is useful, they'll implement it, if they don't think either is useful, they'll implement neither.\r\n\r\nSome tools may defer the choice to users.\r\n\r\nSome chain dev teams will _strongly encourage_ the use of checksums to tool authors.\r\n\r\nHowever, there isn't a centralized authority that is able to _declare_ that all Ethereum tools **MUST** use EIP1191, or even **SHOULD**.  At best, you can write an EIP that says all Ethereum chains **MUST** and then people can choose to follow that EIP or not.  Keep in mind, there are many EIPs that are unfollowed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/555834447/reactions",
      "total_count": 3,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 1,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/555958071",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-555958071",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 555958071,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTk1ODA3MQ==",
    "user": {
      "login": "juli",
      "id": 71986,
      "node_id": "MDQ6VXNlcjcxOTg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/71986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juli",
      "html_url": "https://github.com/juli",
      "followers_url": "https://api.github.com/users/juli/followers",
      "following_url": "https://api.github.com/users/juli/following{/other_user}",
      "gists_url": "https://api.github.com/users/juli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juli/subscriptions",
      "organizations_url": "https://api.github.com/users/juli/orgs",
      "repos_url": "https://api.github.com/users/juli/repos",
      "events_url": "https://api.github.com/users/juli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-20T11:13:55Z",
    "updated_at": "2019-11-20T11:13:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I mean a JSON attribute. Wallets need chain ids and BIP44 paths and that is why BIP44/SLIP-0044 and ethereum-lists were created, looks like an appropriate place to inform the preferred checksum or address format for a network. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/555958071/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/560046878",
    "html_url": "https://github.com/ethereum/EIPs/issues/1121#issuecomment-560046878",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1121",
    "id": 560046878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDA0Njg3OA==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-01T03:18:00Z",
    "updated_at": "2019-12-01T03:18:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Recommend to please demote this EIP to draft status. We have a dozen other EIPs in last review and which are implemented and ready to go live on mainnet and are scheduled to hard fork in a week or so.\r\n\r\nThis EIP needs some updates, is not ready, and is better suited to go to draft status.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/560046878/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
