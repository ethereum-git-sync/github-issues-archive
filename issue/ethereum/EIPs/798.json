{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/798",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/798/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/798/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/798/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/798",
  "id": 281739572,
  "node_id": "MDU6SXNzdWUyODE3Mzk1NzI=",
  "number": 798,
  "title": "ERC : Sellable Contracts",
  "user": {
    "login": "pabloruiz55",
    "id": 526558,
    "node_id": "MDQ6VXNlcjUyNjU1OA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/526558?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pabloruiz55",
    "html_url": "https://github.com/pabloruiz55",
    "followers_url": "https://api.github.com/users/pabloruiz55/followers",
    "following_url": "https://api.github.com/users/pabloruiz55/following{/other_user}",
    "gists_url": "https://api.github.com/users/pabloruiz55/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pabloruiz55/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pabloruiz55/subscriptions",
    "organizations_url": "https://api.github.com/users/pabloruiz55/orgs",
    "repos_url": "https://api.github.com/users/pabloruiz55/repos",
    "events_url": "https://api.github.com/users/pabloruiz55/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pabloruiz55/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2017-12-13T12:54:34Z",
  "updated_at": "2022-01-02T08:13:52Z",
  "closed_at": "2022-01-02T08:13:52Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Preamble\r\n\r\n    EIP: <to be assigned>\r\n    Title: Sellable Contracts\r\n    Author: Pablo Ruiz <me@pabloruiz.co>\r\n    Type: Standard Track\r\n    Category: ERC\r\n    Status: Draft\r\n    Created: 2017-12-12\r\n\r\n## Simple Summary\r\nThe Sellable Contract protocol allows contracts to be sold in exchange of ether.\r\n\r\n## Abstract\r\nThe following discusses a protocol for smart contracts that can be sold by their owners. \r\nUser A offers User B the ownership of his contract. User B accepts the offer by sending the arranged sum of ether. By sending the specified sum of ether, User B agrees to buy the contract and becomes the new owner. \r\nAlternatively, User A may put the contract for sale at a certain asking price. Any other account may buy the contract from them on a first-come, first-serve basis.\r\n\r\n## Motivation\r\nGiven that there is no concept of \"whoever deploys a contract owns it\" in Ethereum, but it's very common for contracts to be assigned an owner upon initialization, there should be mechanisms in place to allow ownership to change hands. This ERC proposes the implementation of a secure transfer of ownership made in exchange of ether.\r\nSuch protocol could allow, among other things, for a \"smart contract marketplace\" or be used by contractors so they can be certain that the code they deploy on behalf of someone else will be paid for when they relinquish ownership.\r\n\r\n## Specification\r\n## Sellable \r\n**NOTE:** The contract inheriting the Sellable base contract must enforce the usage of the onlyOwner modifier. Owning a contract means having `owner` set to your account address. \r\n\r\n### Methods\r\n\r\n#### owner\r\nReturns the current owner of the contract. The owner is the EOA or other contract that can execute key functions of the contract.\r\n\r\n``` js\r\nfunction owner() view returns (address owner);\r\n```\r\n\r\n#### selling\r\nReturns whether or not the contract is being sold. A contract currently being sold might block certain functions until the transaction is completed or canceled by applying the `ifNotLocked` modifier.\r\n\r\n``` js\r\nfunction selling() view returns (bool selling);\r\n```\r\n\r\n#### sellingTo\r\nReturns the address set by the seller, if they specified a particular target buyer when putting the contract for sale.\r\n\r\nOPTIONAL - When putting the contract for sale, this variable can be set to `0x0`. In this case, anyone might be able to buy the contract in a first-come, first-serve basis.\r\n\r\n``` js\r\nfunction sellingTo() view returns (address sellingTo);\r\n```\r\n\r\n#### askingPrice\r\nReturns the price at which the contract has been offered for sale.\r\n\r\n``` js\r\nfunction askingPrice() view returns (uint askingPrice);\r\n```\r\n\r\n#### initiateSale\r\nPuts the contract for sale. Only allowed to the owner of the contract, they set an asking price for the contract and (optionally) set a target buyer.\r\nIt MUST throw if the contract is already being sold. \r\nIt MUST throw if the target buyer is itself or the owner.\r\n\r\nNOTE: The asking price can be 0, in the case the owner wants to give the contract away for free or \"donate\" it.\r\n\r\nNOTE: `address _to` is optional. It can be `0x0`, in which case, any other account will be able to buy it. \r\n\r\n``` js\r\nfunction initiateSale(uint _price, address _to) onlyOwner public\r\n```\r\n\r\n#### cancelSale\r\nCancels the sale of the contract. Resets all the sale parameters. Only available to the owner of the contract.\r\n\r\n``` js\r\nfunction cancelSale() onlyOwner public\r\n```\r\n\r\n#### completeSale\r\nCompletes the sale by having a buyer transfer the ether being asked by the seller and changing ownership of the contract. MUST fire `Transfer` event.\r\nCalled by the `sellingTo` account if specified or anyone other than the contract itself/owner if `sellingTo` was not specified.\r\nValue sent MUST match the askingPrice.\r\n\r\n``` js\r\nfunction completeSale() public payable\r\n```\r\n\r\n### Events\r\n\r\n#### Transfer\r\nMUST be fired when a sale is completed. Keeps a history of who the previous and new owners are, as well as the sale date and sale price. It also MUST be fired when the contract is created (with _from being 0x0 and salePrice being 0).\r\n\r\n``` js\r\nevent Transfer(uint _saleDate, address _from, address _to, uint _salePrice);\r\n```\r\n\r\n### Modifiers\r\n\r\n#### onlyOwner\r\nMUST be implemented in functions that should only be executed by the owner of the contract. \r\n\r\n``` js\r\nmodifier onlyOwner\r\n```\r\n\r\n#### ifNotLocked\r\nMUST be implemented in functions that should only be executed while the contract is not for sale.\r\nImplementing this modifier would give the buyers the certainty that key contract values are not being modified while they analyze the purchase. \r\n\r\n``` js\r\nmodifier ifNotLocked\r\n```\r\n\r\n## Rationale\r\nThe rationale behind this is allowing owners of a particular contract to sell them with the certainty they will receive the asking price at the same time the contract changes hands.\r\nThis protocol could also allow for a contract marketplace to be created, where developers can deploy specific contracts and put them for sale. \r\n\r\n- Allowing donations: The contract can be sold for 0 ether if the owner wishes so. This can be useful if the owner wants to gift/donate/give away the contract to someone in particular or whoever gets it first.\r\n\r\n- Allowing contracts with a balance to be put for sale: I'm putting this up for discussion. Right now whether or not the contract has some balance in it is not important, but maybe initiateSale() SHOULD throw if it has some balance to prevent selling a contract that held money inadvertently. \r\n\r\n## Implementation\r\nExample implementation:\r\nhttps://github.com/pabloruiz55/Saleable/blob/master/Sellable.sol\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/798/reactions",
    "total_count": 4,
    "+1": 4,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/798/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/351397518",
    "html_url": "https://github.com/ethereum/EIPs/issues/798#issuecomment-351397518",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/798",
    "id": 351397518,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTM5NzUxOA==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T13:55:13Z",
    "updated_at": "2017-12-13T13:55:13Z",
    "author_association": "NONE",
    "body": "Might be worth architecting this as a `[The Contract] -> [Ownership Auction Contract]` situation, where `TheContract` has a spec something like \r\n\r\n```\r\nstartAuction (address _auctionContract) onlyOwner {}\r\ntransferOwnershipFromAuction (address _to) onlyAuctionContract {}\r\n```\r\n\r\nand the auction contract handles all of the bidding/whatever using whatever model people want (`DutchAuction`, `FirstPriceAction`, `DutchAuction`, `EnglishAuction`, `FirstComeFirstServeAuction`) and then calls `transferOwnershipFromAuction` to transferOwnership.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/351397518/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/351399834",
    "html_url": "https://github.com/ethereum/EIPs/issues/798#issuecomment-351399834",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/798",
    "id": 351399834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTM5OTgzNA==",
    "user": {
      "login": "pabloruiz55",
      "id": 526558,
      "node_id": "MDQ6VXNlcjUyNjU1OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/526558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabloruiz55",
      "html_url": "https://github.com/pabloruiz55",
      "followers_url": "https://api.github.com/users/pabloruiz55/followers",
      "following_url": "https://api.github.com/users/pabloruiz55/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabloruiz55/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabloruiz55/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabloruiz55/subscriptions",
      "organizations_url": "https://api.github.com/users/pabloruiz55/orgs",
      "repos_url": "https://api.github.com/users/pabloruiz55/repos",
      "events_url": "https://api.github.com/users/pabloruiz55/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabloruiz55/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T14:03:10Z",
    "updated_at": "2017-12-13T14:03:10Z",
    "author_association": "NONE",
    "body": "@Shrugs Yes, sounds like a nice add-on, and I thought about that while working on the implementation example, but I left it out from here as I am not sure if it would be better to make it into a separate EIP. Something like an Auctionable Contract.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/351399834/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/351402333",
    "html_url": "https://github.com/ethereum/EIPs/issues/798#issuecomment-351402333",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/798",
    "id": 351402333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQwMjMzMw==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T14:12:23Z",
    "updated_at": "2017-12-13T14:12:23Z",
    "author_association": "NONE",
    "body": "I'm not sure combining the auction logic with the contract you're selling is desirable; deploy costs will be high (and unnecessary if you never auction it), it makes it impossible to change the auction structure later (maybe it's first-come-first-serve first, but the new owner runs a dutch auction). You could inline the auction creation logic (so a function like `startAuction () onlyOwner returns (address) { auction = new DutchAuction(); return auction.address; }`) if you don't want the auction type/parameters to be changeable.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/351402333/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/352533356",
    "html_url": "https://github.com/ethereum/EIPs/issues/798#issuecomment-352533356",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/798",
    "id": 352533356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjUzMzM1Ng==",
    "user": {
      "login": "aunyks",
      "id": 15711233,
      "node_id": "MDQ6VXNlcjE1NzExMjMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/15711233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aunyks",
      "html_url": "https://github.com/aunyks",
      "followers_url": "https://api.github.com/users/aunyks/followers",
      "following_url": "https://api.github.com/users/aunyks/following{/other_user}",
      "gists_url": "https://api.github.com/users/aunyks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aunyks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aunyks/subscriptions",
      "organizations_url": "https://api.github.com/users/aunyks/orgs",
      "repos_url": "https://api.github.com/users/aunyks/repos",
      "events_url": "https://api.github.com/users/aunyks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aunyks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-18T19:30:07Z",
    "updated_at": "2017-12-18T19:30:07Z",
    "author_association": "NONE",
    "body": "I recommend renaming the title of this ERC to ~Saleable~ Sellable Contracts",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/352533356/reactions",
      "total_count": 5,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/352542614",
    "html_url": "https://github.com/ethereum/EIPs/issues/798#issuecomment-352542614",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/798",
    "id": 352542614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjU0MjYxNA==",
    "user": {
      "login": "pabloruiz55",
      "id": 526558,
      "node_id": "MDQ6VXNlcjUyNjU1OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/526558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabloruiz55",
      "html_url": "https://github.com/pabloruiz55",
      "followers_url": "https://api.github.com/users/pabloruiz55/followers",
      "following_url": "https://api.github.com/users/pabloruiz55/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabloruiz55/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabloruiz55/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabloruiz55/subscriptions",
      "organizations_url": "https://api.github.com/users/pabloruiz55/orgs",
      "repos_url": "https://api.github.com/users/pabloruiz55/repos",
      "events_url": "https://api.github.com/users/pabloruiz55/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabloruiz55/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-18T20:04:53Z",
    "updated_at": "2017-12-18T20:04:53Z",
    "author_association": "NONE",
    "body": "@aunyks I don't mind renaming it although according to what I found online Saleable is as valid as Sellable and even Salable is a possibility. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/352542614/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/352914132",
    "html_url": "https://github.com/ethereum/EIPs/issues/798#issuecomment-352914132",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/798",
    "id": 352914132,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjkxNDEzMg==",
    "user": {
      "login": "3esmit",
      "id": 224810,
      "node_id": "MDQ6VXNlcjIyNDgxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/224810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3esmit",
      "html_url": "https://github.com/3esmit",
      "followers_url": "https://api.github.com/users/3esmit/followers",
      "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
      "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
      "organizations_url": "https://api.github.com/users/3esmit/orgs",
      "repos_url": "https://api.github.com/users/3esmit/repos",
      "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3esmit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T23:06:18Z",
    "updated_at": "2017-12-19T23:06:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sellable seems better, I needed to read twice to understand what was about the title, not sure why but at first glance I read it as sealable :rofl: \r\n\r\nInteresting proposal through, probably useful for decentraland :+1: ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/352914132/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/352947824",
    "html_url": "https://github.com/ethereum/EIPs/issues/798#issuecomment-352947824",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/798",
    "id": 352947824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mjk0NzgyNA==",
    "user": {
      "login": "pabloruiz55",
      "id": 526558,
      "node_id": "MDQ6VXNlcjUyNjU1OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/526558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pabloruiz55",
      "html_url": "https://github.com/pabloruiz55",
      "followers_url": "https://api.github.com/users/pabloruiz55/followers",
      "following_url": "https://api.github.com/users/pabloruiz55/following{/other_user}",
      "gists_url": "https://api.github.com/users/pabloruiz55/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pabloruiz55/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pabloruiz55/subscriptions",
      "organizations_url": "https://api.github.com/users/pabloruiz55/orgs",
      "repos_url": "https://api.github.com/users/pabloruiz55/repos",
      "events_url": "https://api.github.com/users/pabloruiz55/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pabloruiz55/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-20T02:35:37Z",
    "updated_at": "2017-12-20T02:35:37Z",
    "author_association": "NONE",
    "body": "@3esmit Yeah, I'll change the name. Sellable sounds the best. I'll update it shortly.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/352947824/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/353813550",
    "html_url": "https://github.com/ethereum/EIPs/issues/798#issuecomment-353813550",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/798",
    "id": 353813550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzgxMzU1MA==",
    "user": {
      "login": "paullizer",
      "id": 34814295,
      "node_id": "MDQ6VXNlcjM0ODE0Mjk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/34814295?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paullizer",
      "html_url": "https://github.com/paullizer",
      "followers_url": "https://api.github.com/users/paullizer/followers",
      "following_url": "https://api.github.com/users/paullizer/following{/other_user}",
      "gists_url": "https://api.github.com/users/paullizer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paullizer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paullizer/subscriptions",
      "organizations_url": "https://api.github.com/users/paullizer/orgs",
      "repos_url": "https://api.github.com/users/paullizer/repos",
      "events_url": "https://api.github.com/users/paullizer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paullizer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-25T01:43:15Z",
    "updated_at": "2017-12-25T01:44:06Z",
    "author_association": "NONE",
    "body": "Building Ownership transference into Ethereum dramatically improves trust between parties that may have little inherent confidence in each other and ensures a balance of power between individuals during the sale process. I think Pablo's proposal solves the problem. \n\n<sub>Sent with <a href=\"http://githawk.com\">GitHawk</a></sub>",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/353813550/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/359756135",
    "html_url": "https://github.com/ethereum/EIPs/issues/798#issuecomment-359756135",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/798",
    "id": 359756135,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTc1NjEzNQ==",
    "user": {
      "login": "hyperfekt",
      "id": 9434715,
      "node_id": "MDQ6VXNlcjk0MzQ3MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9434715?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hyperfekt",
      "html_url": "https://github.com/hyperfekt",
      "followers_url": "https://api.github.com/users/hyperfekt/followers",
      "following_url": "https://api.github.com/users/hyperfekt/following{/other_user}",
      "gists_url": "https://api.github.com/users/hyperfekt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hyperfekt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hyperfekt/subscriptions",
      "organizations_url": "https://api.github.com/users/hyperfekt/orgs",
      "repos_url": "https://api.github.com/users/hyperfekt/repos",
      "events_url": "https://api.github.com/users/hyperfekt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hyperfekt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-23T11:02:44Z",
    "updated_at": "2018-01-26T22:29:10Z",
    "author_association": "NONE",
    "body": "I could imagine that it would be possible to drastically increase compatibility by implementing the ability to own a contract with an ERC #821/#721 registry, and the contract looking its owner up there. (It's probably easiest to just have one global registry with the contract address as asset ID).\r\nWe would gain all the work done in different transfer and lookup methods for these, as a smart contract can effectively be seen as a non-fungible token, while at the same time reducing the standard's & implementation's complexity by not needing any sales functionality.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/359756135/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997341486",
    "html_url": "https://github.com/ethereum/EIPs/issues/798#issuecomment-997341486",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/798",
    "id": 997341486,
    "node_id": "IC_kwDOAq426M47cjku",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-19T07:11:37Z",
    "updated_at": "2021-12-19T07:11:37Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997341486/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003679160",
    "html_url": "https://github.com/ethereum/EIPs/issues/798#issuecomment-1003679160",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/798",
    "id": 1003679160,
    "node_id": "IC_kwDOAq426M470u24",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-02T08:13:52Z",
    "updated_at": "2022-01-02T08:13:52Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003679160/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
