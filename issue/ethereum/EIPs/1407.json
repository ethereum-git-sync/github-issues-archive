{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/1407",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/1407/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/1407/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/1407/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/1407",
  "id": 359926493,
  "node_id": "MDU6SXNzdWUzNTk5MjY0OTM=",
  "number": 1407,
  "title": "ERC1407 :Namespacing ABI interface to allow function signature reuse in different context but same contract",
  "user": {
    "login": "wighawag",
    "id": 790580,
    "node_id": "MDQ6VXNlcjc5MDU4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wighawag",
    "html_url": "https://github.com/wighawag",
    "followers_url": "https://api.github.com/users/wighawag/followers",
    "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
    "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
    "organizations_url": "https://api.github.com/users/wighawag/orgs",
    "repos_url": "https://api.github.com/users/wighawag/repos",
    "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wighawag/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2018-09-13T14:40:13Z",
  "updated_at": "2021-12-18T21:11:43Z",
  "closed_at": "2021-12-18T21:11:43Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "ip: ERC1407\r\ntitle: Namespacing ABI interface \r\nauthor: Ronan Sandford (wighawag)\r\ndiscussions-to: #1407\r\nstatus: Draft\r\ntype: Standards Track\r\ncategory: ERC\r\ncreated: 2018-13-09\r\n\r\nNamespacing ABI interface \r\n=================\r\n\r\nAbstract\r\n======\r\n\r\nCurrently function and event ABI are entirely defined with their name and type signature.\r\n\r\nIt would be great to include an extra data to allow namespacing the interfaces.\r\n\r\nSolidity and other smart contract languages could add the possibility to annotate function to use different namespace so a contract is not required to support only one namespace. \r\n\r\nThe default one could be the empty namespace '' for backward compatibility. Or alternatively every new contract would need to declare the default namespace for all functions (the default could be the contract name). Then annotations could be used to specify each function namespace if the one desired is different than the default.\r\n\r\n\r\nMotivation\r\n=======\r\n\r\nThis would allow a contract to support multiple conflicting interfaces at the same time.\r\n\r\nFor example, let say you plan to use an ERC20 token but would like it to be part of the same contract as an ERC721. (this could allow you to avoid calling external contract to transfer balances for example). When the contract is used as an ERC20 \"balanceOf\" would return the balance of the ERC20 token represented by that contract and when used as an ERC721 it would return how many NFT you own. The namespacing would simply result in different ABI, so even though the function has the same signature, both can be used.\r\n\r\nCurrently this is not possible (and won't be for this particular case even after this EIP get implemented in smart contract languages since the ERC721 and ERC20 ABI has already been decided) but as more smart contract interface standards come into being, the likeliness of interface conflict will increase. The usefulness of combining two conflicting interfaces into one contract will probably rise too.\r\n\r\n\r\nPotential Specification\r\n==============\r\n\r\nHere is a potential way to achieve that in solidity.\r\nSuggestion are more than welcome. The idea behind creating that issue to find a sensible specification for solving that problem elegantly.\r\n\r\n```solidity\r\n\r\nuse namsepace ERC721; // could be option since it match the contract's name\r\n\r\ncontract ERC721{\r\n  function totalSupply() public view returns (uint256) { // use default namespace, that of the Contract Name\r\n  ....\r\n  }\r\n\r\n  function balanceOf(address who) public view returns (uint256){\r\n\r\n  }\r\n\r\n```\r\n\r\n```solidity\r\ncontract ERC20 {\r\n  function totalSupply() public view returns (uint256) { // use default namespace, that of the Contract Name\r\n  ....\r\n  }\r\n\r\n  function balanceOf(address who) public view returns (uint256){\r\n\r\n  }\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n```\r\n\r\n```solidity\r\ncontract Combination is ERC721, ERC20 {\r\n    function test() {\r\n     this.@ERC721.balanceOf(msg.sender);\r\n     this.@ERC20.balanceOf(msg.sender); // could be a way to access namespaced function\r\n  }\r\n}\r\n```\r\n\r\nThe ABI for each function could then be \r\n```sha3(\"<namespace><canonical function signature>\")```\r\ninstead of\r\n```sha3(\"<canonical function signature>)\"```\r\n\r\nor maybe for allowing people to start using such scheme right now, we could do it this way\r\n```sha3(\"<namespace>__<canonical function signature>\")```\r\n\r\nwith that we can start namespacing our function waiting for proper language support (that would later make it easier to manage without typing and enforcing the use of namespace.\r\n\r\n```ERC20__totalSupply(.. ```\r\n\r\n\r\n",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/1407/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/1407/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/421331329",
    "html_url": "https://github.com/ethereum/EIPs/issues/1407#issuecomment-421331329",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1407",
    "id": 421331329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTMzMTMyOQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T11:33:29Z",
    "updated_at": "2018-09-14T11:33:29Z",
    "author_association": "MEMBER",
    "body": "What is the difference to prefixing all functions in an interface definition by the name of the interface?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/421331329/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/421334194",
    "html_url": "https://github.com/ethereum/EIPs/issues/1407#issuecomment-421334194",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1407",
    "id": 421334194,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTMzNDE5NA==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T11:47:49Z",
    "updated_at": "2018-09-14T11:47:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Technically not much apart from forcing programming language to enforce such namespacing by default (assuming the default is the contract name or a forced namespace specification)\r\n\r\nIn term of programming experience. People like to have meaninful function name ununcombered with prefix. As such since as a programmer you might not be aware that someone will use the same function name, using a namespace allow you to provide a nice meaningful interface without fear of conflict.\r\n\r\nAlso it allow late standard to continue using simple function name.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/421334194/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/422038188",
    "html_url": "https://github.com/ethereum/EIPs/issues/1407#issuecomment-422038188",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1407",
    "id": 422038188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjAzODE4OA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-17T14:25:16Z",
    "updated_at": "2018-09-17T14:25:16Z",
    "author_association": "MEMBER",
    "body": "I'm not too sure that putting `@namespace('ERC20')` in front of each function definition is so much less typing than actually prefixing it before the function name. It should be as explicit as possible, because otherwise it would lead to confusion.\r\n\r\nPerhaps we can get cheap proxies soon, then this issue would be not relevant anymore, would it?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/422038188/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/422511538",
    "html_url": "https://github.com/ethereum/EIPs/issues/1407#issuecomment-422511538",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1407",
    "id": 422511538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjUxMTUzOA==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-18T19:07:42Z",
    "updated_at": "2018-09-18T19:07:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "The idea is that you only need to put ```@namespace('ERC20')``` when that function belong to a different namespace that the one declared as default in the source file.\r\n\r\nUsing inheritance you call also group namespace. As such you might never need to use ```@namespace('ERC20')``` except if only one function needs it\r\n\r\nTo declare a namespace we could use a directive like \r\n\r\n````use namespace ERC20```` \r\n\r\nor something like that.\r\n\r\nI think the use of proxies is orthogonal to the proposal here.\r\n\r\nThe idea behind that proposal is to avoid conflict (especially the one that were not predicted by the original creator of the standards) by enforcing the use of namespace. This is why it is different than simply prepending a prefix to every function.\r\n\r\nThis is a common feature in many language so you can use a combination of libraries without them colliding.\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/422511538/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/423174840",
    "html_url": "https://github.com/ethereum/EIPs/issues/1407#issuecomment-423174840",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1407",
    "id": 423174840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzE3NDg0MA==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-20T13:03:17Z",
    "updated_at": "2018-09-20T13:03:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I updated the text to mention the use of inheritance and the idea of using _ or __ as separator so we can start using the standard before adoption by languages.\r\n\r\nNote though, that as mentioned, the idea behind namespace is protect from conflict by enforcing it at the language level.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/423174840/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986093355",
    "html_url": "https://github.com/ethereum/EIPs/issues/1407#issuecomment-986093355",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1407",
    "id": 986093355,
    "node_id": "IC_kwDOAq426M46xpcr",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-04T21:10:58Z",
    "updated_at": "2021-12-04T21:10:58Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986093355/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997285293",
    "html_url": "https://github.com/ethereum/EIPs/issues/1407#issuecomment-997285293",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1407",
    "id": 997285293,
    "node_id": "IC_kwDOAq426M47cV2t",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-18T21:11:43Z",
    "updated_at": "2021-12-18T21:11:43Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997285293/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
