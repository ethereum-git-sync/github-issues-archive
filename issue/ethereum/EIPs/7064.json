{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/7064",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/7064/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/7064/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/7064/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/7064",
  "id": 1724253250,
  "node_id": "I_kwDOAq426M5mxgRC",
  "number": 7064,
  "title": "Issues with CL Link Validation",
  "user": {
    "login": "timbeiko",
    "id": 9390255,
    "node_id": "MDQ6VXNlcjkzOTAyNTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9390255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/timbeiko",
    "html_url": "https://github.com/timbeiko",
    "followers_url": "https://api.github.com/users/timbeiko/followers",
    "following_url": "https://api.github.com/users/timbeiko/following{/other_user}",
    "gists_url": "https://api.github.com/users/timbeiko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/timbeiko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/timbeiko/subscriptions",
    "organizations_url": "https://api.github.com/users/timbeiko/orgs",
    "repos_url": "https://api.github.com/users/timbeiko/repos",
    "events_url": "https://api.github.com/users/timbeiko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/timbeiko/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4468107952,
      "node_id": "LA_kwDOAq426M8AAAABClHqsA",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/enhancement",
      "name": "enhancement",
      "color": "092FA2",
      "default": true,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2023-05-24T15:23:42Z",
  "updated_at": "2023-05-31T15:18:20Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Proposed Change\r\n\r\nThe regex used to [match CL spec links in EIP-1](https://eips.ethereum.org/EIPS/eip-1#consensus-layer-specifications) does not accommodate common CL spec linking practices. \r\n\r\nTwo recent examples of issues: \r\n\r\n1. It's not possible to refer to a PR directly, which seems useful when things are in draft (see @dapplion's EIP here: https://github.com/ethereum/EIPs/pull/7044/files#diff-b9072b226494f022f46b59068e6f9144194aeb301e57ed74dbefe9fba49ef39dR27)\r\n\r\n2. It's not possible to refer to feature directories, which are expected to be the canonical way to specify WIP features in the CL spec (see @djrtwo's EIP here: https://github.com/ethereum/EIPs/pull/6914/files#diff-768009de73cc7d111224f20db3c7f40c7eb3836aeaac51191810754ed62b8446R27) \r\n\r\nProposed solutions: \r\n\r\n1. Allow linking to PRs (`https://github.com/ethereum/consensus-specs/pull/*`), potentially only for Draft EIPs? \r\n2. Allow linking to feature directories (`https://github.com/ethereum/consensus-specs/specs/_features/*`)",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/7064/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/7064/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1563443315",
    "html_url": "https://github.com/ethereum/EIPs/issues/7064#issuecomment-1563443315",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/7064",
    "id": 1563443315,
    "node_id": "IC_kwDOAq426M5dMEBz",
    "user": {
      "login": "SamWilsn",
      "id": 57262657,
      "node_id": "MDQ6VXNlcjU3MjYyNjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamWilsn",
      "html_url": "https://github.com/SamWilsn",
      "followers_url": "https://api.github.com/users/SamWilsn/followers",
      "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
      "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
      "repos_url": "https://api.github.com/users/SamWilsn/repos",
      "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-25T20:05:12Z",
    "updated_at": "2023-05-25T20:05:12Z",
    "author_association": "MEMBER",
    "body": "> 1. Allow linking to PRs (`https://github.com/ethereum/consensus-specs/pull/*`), potentially only for Draft EIPs?\r\n\r\nWould putting such a link in a TODO comment be acceptable? Something like:\r\n\r\n```markdown\r\nExecution clients MUST floop the pig as defined in <!-- TODO: https://github.com/ethereum/EIPs/pull/7044/files#diff-b9072b226494f022f46b59068e6f9144194aeb301e57ed74dbefe9fba49ef39dR27 -->.\r\n```\r\n\r\n> 2\\. Allow linking to feature directories (`https://github.com/ethereum/consensus-specs/specs/_features/*`)\r\n\r\nNot a terribly hard change, just need to modify EIP-1 and `eipw` to use this regex instead:\r\n\r\n```regex\r\n^https://(www\\.)?github\\.com/ethereum/consensus-specs/(blob|tree)/[a-f0-9]{40}/.+$\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1563443315/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1568645095",
    "html_url": "https://github.com/ethereum/EIPs/issues/7064#issuecomment-1568645095",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/7064",
    "id": 1568645095,
    "node_id": "IC_kwDOAq426M5df5_n",
    "user": {
      "login": "g11tech",
      "id": 76567250,
      "node_id": "MDQ6VXNlcjc2NTY3MjUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/76567250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/g11tech",
      "html_url": "https://github.com/g11tech",
      "followers_url": "https://api.github.com/users/g11tech/followers",
      "following_url": "https://api.github.com/users/g11tech/following{/other_user}",
      "gists_url": "https://api.github.com/users/g11tech/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/g11tech/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/g11tech/subscriptions",
      "organizations_url": "https://api.github.com/users/g11tech/orgs",
      "repos_url": "https://api.github.com/users/g11tech/repos",
      "events_url": "https://api.github.com/users/g11tech/events{/privacy}",
      "received_events_url": "https://api.github.com/users/g11tech/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-30T15:29:56Z",
    "updated_at": "2023-05-30T15:29:56Z",
    "author_association": "MEMBER",
    "body": "Just explored if the PR commits hashes can be used to get a perma-link, following issues pop up\r\n\r\n1. PR  could refer multiple files in very speadout folders\r\n2. a permalink to commit is from the source repo for e.g. `https://github.com/dapplion/consensus-specs/tree/1c35eb1c3303fe1e0b101323106d766d8f848cd6` is the commit of a PR to `ethereum/consensus-specs` so would obviously fail current validation\r\n3. If commit never is merged in main repo, it might get pruned out (even in merges github deletes source branch tag) and squash would anyway lead to new commit ?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1568645095/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1569087352",
    "html_url": "https://github.com/ethereum/EIPs/issues/7064#issuecomment-1569087352",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/7064",
    "id": 1569087352,
    "node_id": "IC_kwDOAq426M5dhl94",
    "user": {
      "login": "timbeiko",
      "id": 9390255,
      "node_id": "MDQ6VXNlcjkzOTAyNTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9390255?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timbeiko",
      "html_url": "https://github.com/timbeiko",
      "followers_url": "https://api.github.com/users/timbeiko/followers",
      "following_url": "https://api.github.com/users/timbeiko/following{/other_user}",
      "gists_url": "https://api.github.com/users/timbeiko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timbeiko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timbeiko/subscriptions",
      "organizations_url": "https://api.github.com/users/timbeiko/orgs",
      "repos_url": "https://api.github.com/users/timbeiko/repos",
      "events_url": "https://api.github.com/users/timbeiko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timbeiko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-30T20:53:37Z",
    "updated_at": "2023-05-30T20:53:37Z",
    "author_association": "MEMBER",
    "body": "> Would putting such a link in a TODO comment be acceptable? Something like:\r\n\r\nI think so, @SamWilsn, but it might be simplest to simply allow `/pulls` for Draft and then require a folder directory to move to Review? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1569087352/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1570325444",
    "html_url": "https://github.com/ethereum/EIPs/issues/7064#issuecomment-1570325444",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/7064",
    "id": 1570325444,
    "node_id": "IC_kwDOAq426M5dmUPE",
    "user": {
      "login": "SamWilsn",
      "id": 57262657,
      "node_id": "MDQ6VXNlcjU3MjYyNjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamWilsn",
      "html_url": "https://github.com/SamWilsn",
      "followers_url": "https://api.github.com/users/SamWilsn/followers",
      "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
      "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
      "repos_url": "https://api.github.com/users/SamWilsn/repos",
      "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-31T14:15:46Z",
    "updated_at": "2023-05-31T14:15:46Z",
    "author_association": "MEMBER",
    "body": "> 1. PR  could refer multiple files in very speadout folders\r\n\r\nHm, yeah. I think linking to the tip commit of the pull request would be the best option.\r\n\r\n> 2. a permalink to commit is from the source repo for e.g. `https://github.com/dapplion/consensus-specs/tree/1c35eb1c3303fe1e0b101323106d766d8f848cd6` is the commit of a PR to `ethereum/consensus-specs` so would obviously fail current validation\r\n\r\nhttps://github.com/ethereum/consensus-specs/tree/1c35eb1c3303fe1e0b101323106d766d8f848cd6 seems to work for me. I believe GitHub adds commits from PRs to the destination repository under a weird ref.\r\n\r\n> 3. If commit never is merged in main repo, it might get pruned out (even in merges github deletes source branch tag) and squash would anyway lead to new commit ?\r\n\r\nThat's a great point. Hell, if you force push to your default branch, you can completely remove the linked commit. That's a whole other problem we should think about...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1570325444/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1570358694",
    "html_url": "https://github.com/ethereum/EIPs/issues/7064#issuecomment-1570358694",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/7064",
    "id": 1570358694,
    "node_id": "IC_kwDOAq426M5dmcWm",
    "user": {
      "login": "g11tech",
      "id": 76567250,
      "node_id": "MDQ6VXNlcjc2NTY3MjUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/76567250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/g11tech",
      "html_url": "https://github.com/g11tech",
      "followers_url": "https://api.github.com/users/g11tech/followers",
      "following_url": "https://api.github.com/users/g11tech/following{/other_user}",
      "gists_url": "https://api.github.com/users/g11tech/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/g11tech/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/g11tech/subscriptions",
      "organizations_url": "https://api.github.com/users/g11tech/orgs",
      "repos_url": "https://api.github.com/users/g11tech/repos",
      "events_url": "https://api.github.com/users/g11tech/events{/privacy}",
      "received_events_url": "https://api.github.com/users/g11tech/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-31T14:34:23Z",
    "updated_at": "2023-05-31T15:09:13Z",
    "author_association": "MEMBER",
    "body": "Thanks to the input from @SamWilsn that the main repo to which PR has been made has the commit, we have come to consensus on the EIP editors call on May 31 that we can allow `compare` links in regex\r\n\r\nhttps://github.com/ethereum/consensus-specs/compare/53a9324cf0afd90ea06c5ebb0bfef8fc95a01fd1...1c35eb1c3303fe1e0b101323106d766d8f848cd6\r\n(`https://github.com/ethereum/consensus-specs/compare/53a9324cf0afd90ea06c5ebb0bfef8fc95a01fd1...1c35eb1c3303fe1e0b101323106d766d8f848cd6`)\r\n\r\nwhich basically generates the PR diff being refereed to\r\n\r\nUPDATE: github only generates diff for the commit not the full chain, so the EIP author will have to squash all the relevant PR commits into 1 commit which imo should be an ok requirement\r\n\r\nUPDATE: two `..` instead of `...` show full diff (so we regex for 2 ... or 3 ...)\r\nhttps://github.com/ethereum/consensus-specs/compare/53a9324cf0afd90ea06c5ebb0bfef8fc95a01fd1..1c35eb1c3303fe1e0b101323106d766d8f848cd6 but then it also includes the diffs introduced by first commit id: `53a9324cf0afd90ea06c5ebb0bfef8fc95a01fd1` so one will have to generate the link point to the repo's commit when PR was generated (or rebase their PR to bring their commit upto date and then generate the link)\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1570358694/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1570435765",
    "html_url": "https://github.com/ethereum/EIPs/issues/7064#issuecomment-1570435765",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/7064",
    "id": 1570435765,
    "node_id": "IC_kwDOAq426M5dmvK1",
    "user": {
      "login": "g11tech",
      "id": 76567250,
      "node_id": "MDQ6VXNlcjc2NTY3MjUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/76567250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/g11tech",
      "html_url": "https://github.com/g11tech",
      "followers_url": "https://api.github.com/users/g11tech/followers",
      "following_url": "https://api.github.com/users/g11tech/following{/other_user}",
      "gists_url": "https://api.github.com/users/g11tech/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/g11tech/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/g11tech/subscriptions",
      "organizations_url": "https://api.github.com/users/g11tech/orgs",
      "repos_url": "https://api.github.com/users/g11tech/repos",
      "events_url": "https://api.github.com/users/g11tech/events{/privacy}",
      "received_events_url": "https://api.github.com/users/g11tech/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-31T15:18:09Z",
    "updated_at": "2023-05-31T15:18:20Z",
    "author_association": "MEMBER",
    "body": "I think this `https://github.com/ethereum/consensus-specs/compare/1c35eb1c3303fe1e0b101323106d766d8f848cd6~3...1c35eb1c3303fe1e0b101323106d766d8f848cd6`  (https://github.com/ethereum/consensus-specs/compare/1c35eb1c3303fe1e0b101323106d766d8f848cd6~3...1c35eb1c3303fe1e0b101323106d766d8f848cd6) this sort of diff would be best to include: which says last 3 commits including and preceding `96d29b7662f148842486d46117786ccb7fcc8018`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1570435765/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
