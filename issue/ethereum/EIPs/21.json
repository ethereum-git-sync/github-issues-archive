{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/21",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/21/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/21/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/21/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/21",
  "id": 117779946,
  "node_id": "MDU6SXNzdWUxMTc3Nzk5NDY=",
  "number": 21,
  "title": "Extend contract ABI with structs",
  "user": {
    "login": "chfast",
    "id": 573380,
    "node_id": "MDQ6VXNlcjU3MzM4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/573380?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chfast",
    "html_url": "https://github.com/chfast",
    "followers_url": "https://api.github.com/users/chfast/followers",
    "following_url": "https://api.github.com/users/chfast/following{/other_user}",
    "gists_url": "https://api.github.com/users/chfast/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chfast/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chfast/subscriptions",
    "organizations_url": "https://api.github.com/users/chfast/orgs",
    "repos_url": "https://api.github.com/users/chfast/repos",
    "events_url": "https://api.github.com/users/chfast/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chfast/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 18,
  "created_at": "2015-11-19T10:01:31Z",
  "updated_at": "2018-09-19T06:39:44Z",
  "closed_at": "2018-09-19T06:39:44Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Extend contract ABI with anonymous structs / tuples.\n\nProposed syntax: `{address, uint, bool}`\n\nThe size of a struct is a sum of sizes of its elements (data is packed). Aligned to words.\n### Rationale\n\nThere are cases when packed related elements are easier/cheaper to process. E.g. `function pay({address, uint96}[] payments)`.\n",
  "closed_by": {
    "login": "chfast",
    "id": 573380,
    "node_id": "MDQ6VXNlcjU3MzM4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/573380?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chfast",
    "html_url": "https://github.com/chfast",
    "followers_url": "https://api.github.com/users/chfast/followers",
    "following_url": "https://api.github.com/users/chfast/following{/other_user}",
    "gists_url": "https://api.github.com/users/chfast/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chfast/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chfast/subscriptions",
    "organizations_url": "https://api.github.com/users/chfast/orgs",
    "repos_url": "https://api.github.com/users/chfast/repos",
    "events_url": "https://api.github.com/users/chfast/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chfast/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/21/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/21/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158658125",
    "html_url": "https://github.com/ethereum/EIPs/issues/21#issuecomment-158658125",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/21",
    "id": 158658125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODY1ODEyNQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-21T15:53:44Z",
    "updated_at": "2015-11-21T18:56:37Z",
    "author_association": "MEMBER",
    "body": "On the first read, this looks good and very useful. Devil could be in the details ;-)\nOf course, the `X`, `Y` and `Z` in `{X,Y,Z}` should again be allowed to be any ABI type, including structs.\nFor simplicity, I would propose to use `()` and not `{}` - since we already use `()` I don't see why there should be a distinction between the tuple of parameters and an internal tuple type.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158658125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158672635",
    "html_url": "https://github.com/ethereum/EIPs/issues/21#issuecomment-158672635",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/21",
    "id": 158672635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODY3MjYzNQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-21T19:02:35Z",
    "updated_at": "2015-11-21T19:02:44Z",
    "author_association": "MEMBER",
    "body": "It seems to be trivial to adapt the [encoding specification](https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI) to that case (see this [comment](https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI#function-selector-and-argument-encoding)) and most of the encoders will probably also only need a recursive call - although parsing the types could be a bit more complicated.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158672635/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158777594",
    "html_url": "https://github.com/ethereum/EIPs/issues/21#issuecomment-158777594",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/21",
    "id": 158777594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODc3NzU5NA==",
    "user": {
      "login": "tgerring",
      "id": 731472,
      "node_id": "MDQ6VXNlcjczMTQ3Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731472?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tgerring",
      "html_url": "https://github.com/tgerring",
      "followers_url": "https://api.github.com/users/tgerring/followers",
      "following_url": "https://api.github.com/users/tgerring/following{/other_user}",
      "gists_url": "https://api.github.com/users/tgerring/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tgerring/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tgerring/subscriptions",
      "organizations_url": "https://api.github.com/users/tgerring/orgs",
      "repos_url": "https://api.github.com/users/tgerring/repos",
      "events_url": "https://api.github.com/users/tgerring/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tgerring/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-22T16:50:53Z",
    "updated_at": "2015-11-22T16:50:53Z",
    "author_association": "NONE",
    "body": "Single return variable:\n\n```\n    \"outputs\": [\n      {\n        \"type\": \"bool\",\n        \"name\": \"success\"\n      }\n    ]\n```\n\nMultiple return variables:\n\n```\n    \"outputs\": [\n      {\n        \"type\": \"address\",\n        \"name\": \"\"\n      },\n      {\n        \"type\": \"unit\",\n        \"name\": \"\"\n      },\n      {\n        \"type\": \"bool\",\n        \"name\": \"\"\n      }\n    ]\n```\n\nWhat would a tuple return of these values look like?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158777594/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158778358",
    "html_url": "https://github.com/ethereum/EIPs/issues/21#issuecomment-158778358",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/21",
    "id": 158778358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODc3ODM1OA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-22T17:01:40Z",
    "updated_at": "2015-11-22T17:01:40Z",
    "author_association": "MEMBER",
    "body": "A simple answer to that question would be `{\n  \"type\": \"(uint256,(string,uint16)[10])\",\n  \"name\": \"someParam\"\n}`, i.e. just don't name the internal types, but if we do that, we could also just forget about the json structure and simply give the function as `function f(abc: uint, def: (a: uint, b: (c: string, d: uint16)[10])))`.\n\nEspecially for arrays of structs, I'm not sure how to assign names to the elements.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158778358/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158808024",
    "html_url": "https://github.com/ethereum/EIPs/issues/21#issuecomment-158808024",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/21",
    "id": 158808024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODgwODAyNA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-22T22:14:15Z",
    "updated_at": "2015-11-22T22:14:15Z",
    "author_association": "MEMBER",
    "body": "### Proposal for the json-formatted abi:\n\n`inputs` and `outputs` is an array of objects with properties `name` (optional), `type`, `subtype` (optional, new) and `indexed` (for events). `type` can be any of the already used types (`\"uint256\"`, `\"uint256[10][]\"`, ...), but additional values are permitted:\n- `\"[]\"` or `\"[k]\"` for some integer `k`: If this is used, the object is of array type and the type of the elements of the arrays is specified under the property `subtype`.\n- an non-empty array of objects as described here - this models a tuple.\n\nIf the `subtype` property is used, its value cannot be `\"[]\"` or `\"[k]\"`, but it can be an array of length 1 whose element models the type one deeper in the array hierarchy.\n\n### Example:\n\nThe signature `function f(abc: uint, def: (a: uint, b: (c: string, d: uint16)[10])))` is translated into json-abi as follows:\n\n```\n{\n  name: \"f\",\n  inputs: [\n    {name: \"abc\", type: \"uint256\"},\n    {name: \"def\", type: [\n      {name: \"a\", type: \"uint256\"},\n      {name: \"b\", type: \"[10]\", subtype: [{name: \"c\", type: \"string\"}, {name: \"d\", type: \"uint16\"}]}\n    ]}\n  ]\n}\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158808024/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/159064465",
    "html_url": "https://github.com/ethereum/EIPs/issues/21#issuecomment-159064465",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/21",
    "id": 159064465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTA2NDQ2NQ==",
    "user": {
      "login": "chfast",
      "id": 573380,
      "node_id": "MDQ6VXNlcjU3MzM4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chfast",
      "html_url": "https://github.com/chfast",
      "followers_url": "https://api.github.com/users/chfast/followers",
      "following_url": "https://api.github.com/users/chfast/following{/other_user}",
      "gists_url": "https://api.github.com/users/chfast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chfast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chfast/subscriptions",
      "organizations_url": "https://api.github.com/users/chfast/orgs",
      "repos_url": "https://api.github.com/users/chfast/repos",
      "events_url": "https://api.github.com/users/chfast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chfast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-23T21:08:04Z",
    "updated_at": "2015-11-23T21:08:04Z",
    "author_association": "MEMBER",
    "body": "@chriseth if I understand your proposal, you want also name the elements of a struct/tuple? I don't have any objections but I thought is was not necessary.\n\nIn general, feel free to update the description of this issue.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/159064465/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/159092379",
    "html_url": "https://github.com/ethereum/EIPs/issues/21#issuecomment-159092379",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/21",
    "id": 159092379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTA5MjM3OQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-23T22:48:46Z",
    "updated_at": "2015-11-23T22:48:46Z",
    "author_association": "MEMBER",
    "body": "@chfast being able to name them makes the whole thing more symmetrical, basically the whole parameter set is just a tuple. Furthermore, it is easier to access elements by name from JavaScript.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/159092379/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/159092978",
    "html_url": "https://github.com/ethereum/EIPs/issues/21#issuecomment-159092978",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/21",
    "id": 159092978,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTA5Mjk3OA==",
    "user": {
      "login": "chfast",
      "id": 573380,
      "node_id": "MDQ6VXNlcjU3MzM4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chfast",
      "html_url": "https://github.com/chfast",
      "followers_url": "https://api.github.com/users/chfast/followers",
      "following_url": "https://api.github.com/users/chfast/following{/other_user}",
      "gists_url": "https://api.github.com/users/chfast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chfast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chfast/subscriptions",
      "organizations_url": "https://api.github.com/users/chfast/orgs",
      "repos_url": "https://api.github.com/users/chfast/repos",
      "events_url": "https://api.github.com/users/chfast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chfast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-23T22:51:33Z",
    "updated_at": "2015-11-23T22:51:33Z",
    "author_association": "MEMBER",
    "body": "@chriseth We might have alignment issues here. We want tuple elements on the top level to be 256-bit word aligned and elements on deeper levels to be packed.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/159092978/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/159093333",
    "html_url": "https://github.com/ethereum/EIPs/issues/21#issuecomment-159093333",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/21",
    "id": 159093333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTA5MzMzMw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-23T22:53:12Z",
    "updated_at": "2015-11-23T22:53:41Z",
    "author_association": "MEMBER",
    "body": "@chfast Even a `bool[]` has 32 bytes per element, so tuple elements should not be packed either.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/159093333/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/159096151",
    "html_url": "https://github.com/ethereum/EIPs/issues/21#issuecomment-159096151",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/21",
    "id": 159096151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTA5NjE1MQ==",
    "user": {
      "login": "chfast",
      "id": 573380,
      "node_id": "MDQ6VXNlcjU3MzM4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chfast",
      "html_url": "https://github.com/chfast",
      "followers_url": "https://api.github.com/users/chfast/followers",
      "following_url": "https://api.github.com/users/chfast/following{/other_user}",
      "gists_url": "https://api.github.com/users/chfast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chfast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chfast/subscriptions",
      "organizations_url": "https://api.github.com/users/chfast/orgs",
      "repos_url": "https://api.github.com/users/chfast/repos",
      "events_url": "https://api.github.com/users/chfast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chfast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-23T23:06:02Z",
    "updated_at": "2015-11-23T23:06:02Z",
    "author_association": "MEMBER",
    "body": "@chriseth I would like `(address, uint64)` to be fit in one word. In other words `(address, uint64)[]` to have 32 bytes per element.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/159096151/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/160621145",
    "html_url": "https://github.com/ethereum/EIPs/issues/21#issuecomment-160621145",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/21",
    "id": 160621145,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDYyMTE0NQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-30T12:58:09Z",
    "updated_at": "2015-11-30T12:58:09Z",
    "author_association": "MEMBER",
    "body": "@chfast I see your concerns, but memory is actually not too expensive and we always pad everything outside of storage, so it would need quite some changes in Solidity.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/160621145/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/160625856",
    "html_url": "https://github.com/ethereum/EIPs/issues/21#issuecomment-160625856",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/21",
    "id": 160625856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDYyNTg1Ng==",
    "user": {
      "login": "chfast",
      "id": 573380,
      "node_id": "MDQ6VXNlcjU3MzM4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chfast",
      "html_url": "https://github.com/chfast",
      "followers_url": "https://api.github.com/users/chfast/followers",
      "following_url": "https://api.github.com/users/chfast/following{/other_user}",
      "gists_url": "https://api.github.com/users/chfast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chfast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chfast/subscriptions",
      "organizations_url": "https://api.github.com/users/chfast/orgs",
      "repos_url": "https://api.github.com/users/chfast/repos",
      "events_url": "https://api.github.com/users/chfast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chfast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-30T13:24:08Z",
    "updated_at": "2015-11-30T13:24:08Z",
    "author_association": "MEMBER",
    "body": "I need that to define ABI-compatible functions with body optimized in EVM. Otherwise it has no use for me.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/160625856/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/160661832",
    "html_url": "https://github.com/ethereum/EIPs/issues/21#issuecomment-160661832",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/21",
    "id": 160661832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDY2MTgzMg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-30T15:30:54Z",
    "updated_at": "2015-11-30T15:30:54Z",
    "author_association": "MEMBER",
    "body": "Ah ok, now that I read the proposal again, I get that it is actually not so much about extending functionality but rather about reducing the padding.\n\nMy personal opinion is that structs in the ABI are a good feature for usability and type-safety purposes. Furthermore, I think it is important to add them in a backwards-compatible and consistent manner. For me, this means that we have to pad their elements just like everything else.\n\nI guess that having `(address, uint64)[]` where all elements are padded is still better than using `(address[], uint64[])`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/160661832/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/162822464",
    "html_url": "https://github.com/ethereum/EIPs/issues/21#issuecomment-162822464",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/21",
    "id": 162822464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjgyMjQ2NA==",
    "user": {
      "login": "chfast",
      "id": 573380,
      "node_id": "MDQ6VXNlcjU3MzM4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chfast",
      "html_url": "https://github.com/chfast",
      "followers_url": "https://api.github.com/users/chfast/followers",
      "following_url": "https://api.github.com/users/chfast/following{/other_user}",
      "gists_url": "https://api.github.com/users/chfast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chfast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chfast/subscriptions",
      "organizations_url": "https://api.github.com/users/chfast/orgs",
      "repos_url": "https://api.github.com/users/chfast/repos",
      "events_url": "https://api.github.com/users/chfast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chfast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-08T09:07:28Z",
    "updated_at": "2015-12-08T09:07:28Z",
    "author_association": "MEMBER",
    "body": "@chriseth, yes, having `(address, uint64)[]` is better than `address[], uint64[]`.\n\nUnnecessary waste of space stills worries me. I will try to write a benchmarks for both packed and aligned cases to see what the difference is. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/162822464/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/162861362",
    "html_url": "https://github.com/ethereum/EIPs/issues/21#issuecomment-162861362",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/21",
    "id": 162861362,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Mjg2MTM2Mg==",
    "user": {
      "login": "janx",
      "id": 5958,
      "node_id": "MDQ6VXNlcjU5NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5958?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janx",
      "html_url": "https://github.com/janx",
      "followers_url": "https://api.github.com/users/janx/followers",
      "following_url": "https://api.github.com/users/janx/following{/other_user}",
      "gists_url": "https://api.github.com/users/janx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janx/subscriptions",
      "organizations_url": "https://api.github.com/users/janx/orgs",
      "repos_url": "https://api.github.com/users/janx/repos",
      "events_url": "https://api.github.com/users/janx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-08T12:00:12Z",
    "updated_at": "2015-12-08T12:02:09Z",
    "author_association": "MEMBER",
    "body": "Packing is even more useful in case that functions cannot return dynamic array, and use large static array instead. And loading state from array of structs on dapp init seems to be a pattern?\n\nAn abi supports struct is very useful. Maybe this can go into a new proposal since the focus of this one is padding.\n\nIs this allowed?\n\n```\n{name: \"a\", type: \"[16]\", subtype: [\"uint32\"]}\n// equals\n{name: \"a\", type: \"uint32[16]\"}\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/162861362/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/292043013",
    "html_url": "https://github.com/ethereum/EIPs/issues/21#issuecomment-292043013",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/21",
    "id": 292043013,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjA0MzAxMw==",
    "user": {
      "login": "Souptacular",
      "id": 3460120,
      "node_id": "MDQ6VXNlcjM0NjAxMjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3460120?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Souptacular",
      "html_url": "https://github.com/Souptacular",
      "followers_url": "https://api.github.com/users/Souptacular/followers",
      "following_url": "https://api.github.com/users/Souptacular/following{/other_user}",
      "gists_url": "https://api.github.com/users/Souptacular/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Souptacular/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Souptacular/subscriptions",
      "organizations_url": "https://api.github.com/users/Souptacular/orgs",
      "repos_url": "https://api.github.com/users/Souptacular/repos",
      "events_url": "https://api.github.com/users/Souptacular/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Souptacular/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T01:26:37Z",
    "updated_at": "2017-04-06T01:26:37Z",
    "author_association": "MEMBER",
    "body": "Paged @chfast to check on this.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/292043013/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/321207201",
    "html_url": "https://github.com/ethereum/EIPs/issues/21#issuecomment-321207201",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/21",
    "id": 321207201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTIwNzIwMQ==",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-09T09:43:04Z",
    "updated_at": "2017-08-09T09:43:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "What is that state on this @chriseth ?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/321207201/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/338177860",
    "html_url": "https://github.com/ethereum/EIPs/issues/21#issuecomment-338177860",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/21",
    "id": 338177860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODE3Nzg2MA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-20T11:13:21Z",
    "updated_at": "2017-10-20T11:13:21Z",
    "author_association": "MEMBER",
    "body": "Solidity now went with the following:\r\n\r\nThe signature is using `()` for structs, i.e. `(uint256,bytes32,(uint8,string)[])` is a struct with three components, where the third component is a dynamic array of a struct with two components. In the json-abi we are able to name the components, and thus there is a key `components`, which has the same structure as the type list itself.\r\n\r\nExamples and specification can be found at https://solidity.readthedocs.io/en/develop/abi-spec.html#handling-tuple-types",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/338177860/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
