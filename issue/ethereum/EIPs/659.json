{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/659",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/659/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/659/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/659/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/659",
  "id": 239920388,
  "node_id": "MDU6SXNzdWUyMzk5MjAzODg=",
  "number": 659,
  "title": "Contract code size remove fixed limit",
  "user": {
    "login": "BlameByte",
    "id": 6662327,
    "node_id": "MDQ6VXNlcjY2NjIzMjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6662327?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/BlameByte",
    "html_url": "https://github.com/BlameByte",
    "followers_url": "https://api.github.com/users/BlameByte/followers",
    "following_url": "https://api.github.com/users/BlameByte/following{/other_user}",
    "gists_url": "https://api.github.com/users/BlameByte/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/BlameByte/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/BlameByte/subscriptions",
    "organizations_url": "https://api.github.com/users/BlameByte/orgs",
    "repos_url": "https://api.github.com/users/BlameByte/repos",
    "events_url": "https://api.github.com/users/BlameByte/events{/privacy}",
    "received_events_url": "https://api.github.com/users/BlameByte/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2017-07-01T02:05:08Z",
  "updated_at": "2022-01-16T00:44:09Z",
  "closed_at": "2022-01-16T00:44:09Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Parameters\r\n`fork_block = TBA`\r\n`max_code_size = 24 * 1024`\r\n\r\n### Specification\r\n**1a** - When current_block >= fork_block, make gas cost 200 per byte stored without a limit and use this calculation for gas cost on a call, callcode, delegatecall, extcodecopy, extcodesize: \r\n```sizeof(contract_code) <= max_code_size ? 700 : sizeof(contract_code) / 35```\r\n\r\n**1b** - All the above except extcodecopy is a special case and instead of checking the size of the contract instead use the amount of bytes copied as the charged gas cost.\r\n\r\n**1c** - All of the above and transactions sent to a contract with a size over max_code_size are also charged ```\r\nsizeof(contract_code)``` before contract code is loaded into EVM.\r\n\r\n**2a-c** - When current_block >= fork_block, make gas cost 200 per byte stored without a limit and use this for gas calculation on a call, callcode, delegatecall, extcodecopy, extcodesize:\r\n```sizeof(contract_code) <= max_code_size ? 700 : (1 + sizeof(contract_code) / max_code_size) * 700```\r\n\r\n### Rationale\r\nThe change made in EIP #170 should only be temporary as having a hard cap of 24,576 bytes on a contract will pose some issues on developers who want a lot of functions, libraries or just plain code and not being forced to use delegatecall, which can make code review harder as multiple contracts have to be checked and confusion over storage. The issue raised in that EIP was that there is a DoS issue if the contract size was too large as it has to fetch the entire code from disk, this fixes this by charging more depending on how much is stored.\r\n\r\nDividing the contract code size by 35 makes it so it costs 702 additional gas for a contract that is twice the max_code_size for a total of 1402 gas.\r\n\r\nProposal 1b makes it so that an extcodecopy does not require checking code size as it the amount of data copied can be read from the function which means that there is no need to check the code size.\r\n\r\nProposal 1c would provide a protection against transactions calling big contracts, which is not as big worry unless the contract code size is very large as it a lot harder to call as many contracts that way.\r\n\r\nProposal 2a-c makes it so the cost of gas would go up to 700, 1400, etc. This means that if you have a little over the max_code_size then you are charged 1400, but stops the possibility of finding a sweat spot to maximize disk I/O blocks.\r\n\r\nClient specific implements can easily cache / store the code size of a contract as they will never change after creation, so checking the size of the contract code is extremely cheap and would not require much reads to the state.\r\n\r\nIt should be noted that only recently has the block gas limit raised enough to make the contract code size limit introduced in EIP #170 the limitation, at current gas limits ~ 6.6m so the max code size should be ~33k bytes.",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/659/reactions",
    "total_count": 4,
    "+1": 4,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/659/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/317630993",
    "html_url": "https://github.com/ethereum/EIPs/issues/659#issuecomment-317630993",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/659",
    "id": 317630993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzYzMDk5Mw==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-25T05:09:43Z",
    "updated_at": "2017-07-25T05:10:30Z",
    "author_association": "MEMBER",
    "body": "> Client specific implements can easily cache / store the code size of a contract as they will never change after creation, so checking the size of the contract code is extremely cheap and would not require much reads to the state.\r\n\r\nThe problem is that there is one particular kind of verification that this is absolutely not true for: Merkle proofs (including fraud proofs). If I make a call with 800 gas, then inside that call make a child call that touches a 100,000-byte contract, then even though the inner call will immediately fail and OOG, creating the proof for that result still takes up 100,000 bytes of data.\r\n\r\nNow, if we added a code_size field to the account object, then I'd see no objections and would totally approve.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/317630993/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/319724530",
    "html_url": "https://github.com/ethereum/EIPs/issues/659#issuecomment-319724530",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/659",
    "id": 319724530,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTcyNDUzMA==",
    "user": {
      "login": "BlameByte",
      "id": 6662327,
      "node_id": "MDQ6VXNlcjY2NjIzMjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6662327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BlameByte",
      "html_url": "https://github.com/BlameByte",
      "followers_url": "https://api.github.com/users/BlameByte/followers",
      "following_url": "https://api.github.com/users/BlameByte/following{/other_user}",
      "gists_url": "https://api.github.com/users/BlameByte/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BlameByte/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BlameByte/subscriptions",
      "organizations_url": "https://api.github.com/users/BlameByte/orgs",
      "repos_url": "https://api.github.com/users/BlameByte/repos",
      "events_url": "https://api.github.com/users/BlameByte/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BlameByte/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-02T16:24:06Z",
    "updated_at": "2017-08-02T16:24:06Z",
    "author_association": "NONE",
    "body": "> Now, if we added a code_size field to the account object, then I'd see no objections and would totally approve.\r\nI would agree that is a better solution as it solves the above issue with merkle proofs which I did not take into account in the proposal, but I am concerned by how this would be added retroactively.\r\n\r\nThese are the ways I thought of which would be possible to implement, as adding it to all contracts at that block would obviously be infeasible.\r\n\r\n1. Adding it to only to new contracts created since the hard fork.\r\n\r\n2. Only adding it to new contracts created which exceed the max_code_size and if it lacks such a field we don't have to apply new rules.\r\n\r\n3. Making it so a contract which is \"touched\" has the max_code_size stored.\r\n\r\nBut overall I am happy to add the code_size field to the proposal and once I clear up the above I will edit the original proposal to include the code_size field.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/319724530/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/403282337",
    "html_url": "https://github.com/ethereum/EIPs/issues/659#issuecomment-403282337",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/659",
    "id": 403282337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzI4MjMzNw==",
    "user": {
      "login": "ekreda",
      "id": 20493716,
      "node_id": "MDQ6VXNlcjIwNDkzNzE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/20493716?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekreda",
      "html_url": "https://github.com/ekreda",
      "followers_url": "https://api.github.com/users/ekreda/followers",
      "following_url": "https://api.github.com/users/ekreda/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekreda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekreda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekreda/subscriptions",
      "organizations_url": "https://api.github.com/users/ekreda/orgs",
      "repos_url": "https://api.github.com/users/ekreda/repos",
      "events_url": "https://api.github.com/users/ekreda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekreda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-08T11:52:26Z",
    "updated_at": "2018-07-08T11:52:26Z",
    "author_association": "NONE",
    "body": "Hi @BlameByte @vbuterin any update on this EIP ? (mind that for private net - it's even more needed)\r\n\r\nWe are trying to deploy a ~8.1m of gas contract on a private blockchain, where we control the gaspricelimit of the genesis block & the miners, but even with a higher values we're hitting the ~ 6.6m limit!\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/403282337/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/404505693",
    "html_url": "https://github.com/ethereum/EIPs/issues/659#issuecomment-404505693",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/659",
    "id": 404505693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDUwNTY5Mw==",
    "user": {
      "login": "ekreda",
      "id": 20493716,
      "node_id": "MDQ6VXNlcjIwNDkzNzE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/20493716?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekreda",
      "html_url": "https://github.com/ekreda",
      "followers_url": "https://api.github.com/users/ekreda/followers",
      "following_url": "https://api.github.com/users/ekreda/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekreda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekreda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekreda/subscriptions",
      "organizations_url": "https://api.github.com/users/ekreda/orgs",
      "repos_url": "https://api.github.com/users/ekreda/repos",
      "events_url": "https://api.github.com/users/ekreda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekreda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T13:06:49Z",
    "updated_at": "2018-07-12T13:06:49Z",
    "author_association": "NONE",
    "body": "@BlameByte @vbuterin anyone.. :)\r\n\r\nWe are on a private network (geth based)! if this value is hardcoded it's defiantly not suitable for private net and introducing a real drawback.\r\n\r\nIs there a command line option or genesis file config to increase/override the EIP #170 limitation?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/404505693/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/410138635",
    "html_url": "https://github.com/ethereum/EIPs/issues/659#issuecomment-410138635",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/659",
    "id": 410138635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDEzODYzNQ==",
    "user": {
      "login": "nathanawmk",
      "id": 14244560,
      "node_id": "MDQ6VXNlcjE0MjQ0NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/14244560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanawmk",
      "html_url": "https://github.com/nathanawmk",
      "followers_url": "https://api.github.com/users/nathanawmk/followers",
      "following_url": "https://api.github.com/users/nathanawmk/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanawmk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanawmk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanawmk/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanawmk/orgs",
      "repos_url": "https://api.github.com/users/nathanawmk/repos",
      "events_url": "https://api.github.com/users/nathanawmk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanawmk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-03T04:06:37Z",
    "updated_at": "2018-08-03T04:06:37Z",
    "author_association": "NONE",
    "body": "hi guys i am building a sophisticated smart contract with quorum and I will prefer to have one smart contract instead of multiple ones. Any update on this? I tried maxCodeSize in genesis.json and it did not work.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/410138635/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003642790",
    "html_url": "https://github.com/ethereum/EIPs/issues/659#issuecomment-1003642790",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/659",
    "id": 1003642790,
    "node_id": "IC_kwDOAq426M470l-m",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-02T00:42:55Z",
    "updated_at": "2022-01-02T00:42:55Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003642790/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1013783614",
    "html_url": "https://github.com/ethereum/EIPs/issues/659#issuecomment-1013783614",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/659",
    "id": 1013783614,
    "node_id": "IC_kwDOAq426M48bRw-",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-16T00:44:09Z",
    "updated_at": "2022-01-16T00:44:09Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1013783614/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
