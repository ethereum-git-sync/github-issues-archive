{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/734",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/734/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/734/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/734/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/734",
  "id": 263853939,
  "node_id": "MDU6SXNzdWUyNjM4NTM5Mzk=",
  "number": 734,
  "title": "ERC: Key Manager",
  "user": {
    "login": "frozeman",
    "id": 232662,
    "node_id": "MDQ6VXNlcjIzMjY2Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frozeman",
    "html_url": "https://github.com/frozeman",
    "followers_url": "https://api.github.com/users/frozeman/followers",
    "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
    "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
    "organizations_url": "https://api.github.com/users/frozeman/orgs",
    "repos_url": "https://api.github.com/users/frozeman/repos",
    "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frozeman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2017-10-09T10:52:04Z",
  "updated_at": "2022-01-12T15:23:55Z",
  "closed_at": "2022-01-12T15:23:55Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "```\r\neip: 734\r\ntitle: Key Manager\r\nauthor: Fabian Vogelsteller (@frozeman)\r\ndiscussions-to: https://github.com/ethereum/EIPs/issues/734\r\nstatus: WIP\r\ntype: Standards Track\r\ncategory: ERC\r\ncreated: 2017-10-02\r\n```\r\n\r\n**NOTE: Due to the changes in [ERC725](https://github.com/ethereum/EIPs/issues/725), this spec is not fully compatible with the current ERC725v2. If you're interested in adopting this spec to work with 725v2, please comment below, or send a gist with changes.**\r\n\r\n**This standard is now superseeded by [LSP6-KeyManager](https://github.com/lukso-network/LIPs/blob/master/LSPs/LSP-6-KeyManager.md)**\r\n\r\n## Simple Summary\r\nA contract for key management of a blockchain proxy account.\r\n\r\n## Abstract\r\nThe following describes standard functions for a key manager to be used in conjunction with [ERC725](https://github.com/ethereum/EIPs/issues/725).\r\nThis contract can hold keys to sign actions (transactions, documents, logins, access, etc), as well as execute instructions through an ERC 725 proxy account.\r\n\r\n## Motivation\r\nThis key manager standard allows for more complex management of an [ERC725](https://github.com/ethereum/EIPs/issues/725) proxy account.\r\n\r\n\r\n## Definitions\r\n\r\n- `keys`: Keys are public keys from either external accounts, or contracts' addresses.\r\n- `claim issuer`: is another smart contract or external account, which issues claims about this identity. The claim issuer can be an identity contract itself.\r\n- `claim`: For details about claims see [#ERC735](https://github.com/ethereum/EIPs/issues/735)\r\n\r\n\r\n\r\n## Specification\r\n\r\n\r\n### Key Management\r\n\r\nKeys are cryptographic public keys, or contract addresses associated with this identity.\r\nThe structure should be as follows:\r\n\r\n- `key`: A public key owned by this identity\r\n    - `purpose`: `uint256[]` Array of the key types, like 1 = MANAGEMENT, 2 = EXECUTION\r\n    - `keyType`: The type of key used, which would be a `uint256` for different key types. e.g. 1 = ECDSA, 2 = RSA, etc.\r\n    - `key`: `bytes32` The public key. // for non-hex and long keys, its the Keccak256 hash of the key\r\n\r\n\r\n```js\r\nstruct Key {\r\n    uint256[] purposes;\r\n    uint256 keyType;\r\n    bytes32 key;\r\n}\r\n```\r\n\r\n#### getKey\r\n\r\nReturns the full key data, if present in the identity.\r\n\r\n``` js\r\nfunction getKey(bytes32 _key) constant returns(uint256[] purposes, uint256 keyType, bytes32 key);\r\n```\r\n\r\n#### keyHasPurpose\r\n\r\nReturns `TRUE` if a key is present and has the given purpose. If the key is not present it returns `FALSE`.\r\n\r\n``` js\r\nfunction keyHasPurpose(bytes32 _key, uint256 purpose) constant returns(bool exists);\r\n```\r\n\r\n\r\n#### getKeysByPurpose\r\n\r\nReturns an array of public key bytes32 held by this identity.\r\n\r\n``` js\r\nfunction getKeysByPurpose(uint256 _purpose) constant returns(bytes32[] keys);\r\n```\r\n\r\n\r\n#### addKey\r\n\r\nAdds a `_key` to the identity. The `_purpose` specifies the purpose of the key. Initially, we propose four purposes:\r\n\r\n- `1`: MANAGEMENT keys, which can manage the identity\r\n- `2`: EXECUTION keys, which perform executions in this identity's name (signing, logins, transactions, etc.)\r\n\r\nMUST only be done by keys of purpose `1`, or the identity itself. If it's the identity itself, the approval process will determine its approval.\r\n\r\n**Triggers Event:** [KeyAdded](#keyadded)\r\n\r\n``` js\r\nfunction addKey(bytes32 _key, uint256 _purpose, uint256 _keyType) returns (bool success)\r\n```\r\n\r\n\r\n#### removeKey\r\n\r\nRemoves `_key` from the identity.\r\n\r\nMUST only be done by keys of purpose `1`, or the identity itself. If it's the identity itself, the approval process will determine its approval.\r\n\r\n**Triggers Event:** [KeyRemoved](#keyremoved)\r\n\r\n``` js\r\nfunction removeKey(bytes32 _key, uint256 _purpose) returns (bool success)\r\n```\r\n\r\n\r\n#### changeKeysRequired\r\n\r\nChanges the keys required to perform an action for a specific purpose. (This is the *n* in an *n of m* multisig approval process.)\r\n\r\nMUST only be done by keys of purpose `1`, or the identity itself. If it's the identity itself, the approval process will determine its approval.\r\n\r\n**Triggers Event:** [KeysRequiredChanged](#keysrequiredchanged)\r\n\r\n``` js\r\nfunction changeKeysRequired(uint256 purpose, uint256 number) external\r\n```\r\n\r\n\r\n#### getKeysRequired\r\n\r\nReturns number of keys required for purpose.\r\n\r\n``` js\r\nfunction getKeysRequired(uint256 purpose) external view returns(uint256)\r\n```\r\n\r\n\r\n--------------------------------------------------------\r\n\r\n### Identity usage\r\n\r\n\r\n#### execute\r\n\r\nPasses an execution instruction to the keymanager.\r\nSHOULD require `approve` to be called with one or more keys of purpose `1` or `2` to approve this execution.\r\n\r\nExecute COULD be used as the only accessor for `addKey`, `removeKey` and `replaceKey` and `removeClaim`.\r\n\r\n**Returns `executionId`:** SHOULD be sent to the `approve` function, to approve or reject this execution.\r\n\r\n**Triggers Event:** [ExecutionRequested](#executionrequested)\r\n**Triggers on direct execution Event:** [Executed](#executed)\r\n\r\n``` js\r\nfunction execute(address _to, uint256 _value, bytes _data) returns (uint256 executionId)\r\n```\r\n\r\n\r\n#### approve\r\n\r\nApproves an execution or claim addition.\r\nThis SHOULD require `n` of `m` approvals of keys purpose `1`, if the `_to` of the execution is the identity contract itself, to successfully approve an execution.\r\nAnd COULD require `n` of `m` approvals of keys purpose `2`, if the `_to` of the execution is another contract, to successfully approve an execution.\r\n\r\n**Triggers Event:** [Approved](#approved)\r\n**Triggers on successfull execution Event:** [Executed](#executed)\r\n**Triggers on successfull claim addition Event:** [ClaimAdded](#claimadded)\r\n\r\n``` js\r\nfunction approve(uint256 _id, bool _approve) returns (bool success)\r\n```\r\n\r\n\r\n--------------------------------------------------------\r\n\r\n\r\n### Events\r\n\r\n\r\n#### KeyAdded\r\n\r\nMUST be triggered when `addKey` was successfully called.\r\n\r\n``` js\r\nevent KeyAdded(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType)\r\n```\r\n\r\n\r\n#### KeyRemoved\r\n\r\nMUST be triggered when `removeKey` was successfully called.\r\n\r\n``` js\r\nevent KeyRemoved(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType)\r\n```\r\n\r\n\r\n\r\n#### ExecutionRequested\r\n\r\nMUST be triggered when `execute` was successfully called.\r\n\r\n``` js\r\nevent ExecutionRequested(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data)\r\n```\r\n\r\n\r\n#### Executed\r\n\r\nMUST be triggered when `approve` was called and the execution was successfully approved.\r\n\r\n``` js\r\nevent Executed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data)\r\n```\r\n\r\n\r\n#### Approved\r\n\r\nMUST be triggered when `approve` was successfully called.\r\n\r\n``` js\r\nevent Approved(uint256 indexed executionId, bool approved)\r\n```\r\n\r\n\r\n#### KeysRequiredChanged\r\n\r\nMUST be triggered when `changeKeysRequired` was successfully called.\r\n\r\n``` js\r\nevent KeysRequiredChanged(uint256 purpose, uint256 number)\r\n```\r\n\r\n\r\n\r\n## Rationale\r\nThis specification was chosen to allow most flexibility and experimentation around verifiable accounts. By having a separate contract as proxy on chain allows for cross greater compatibility, as well as extra and altered functionality for new use cases.\r\n\r\n### Solidity Interface\r\n```js\r\npragma solidity ^0.4.18;\r\n\r\ncontract ERC734 {\r\n\r\n    uint256 constant MANAGEMENT_KEY = 1;\r\n    uint256 constant EXECUTION_KEY = 2;\r\n\r\n    event KeyAdded(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\r\n    event KeyRemoved(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\r\n    event ExecutionRequested(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\r\n    event Executed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\r\n    event Approved(uint256 indexed executionId, bool approved);\r\n    event KeysRequiredChanged(uint256 purpose, uint256 number);\r\n\r\n    struct Key {\r\n        uint256 purpose; //e.g., MANAGEMENT_KEY = 1, EXECUTION_KEY = 2, etc.\r\n        uint256 keyType; // e.g. 1 = ECDSA, 2 = RSA, etc.\r\n        bytes32 key;\r\n    }\r\n\r\n    function getKey(bytes32 _key) public constant returns(uint256[] purposes, uint256 keyType, bytes32 key);\r\n    function keyHasPurpose(bytes32 _key, uint256 _purpose) public constant returns (bool exists);\r\n    function getKeysByPurpose(uint256 _purpose) public constant returns (bytes32[] keys);\r\n    function addKey(bytes32 _key, uint256 _purpose, uint256 _keyType) public returns (bool success);\r\n    function removeKey(bytes32 _key, uint256 _purpose) public returns (bool success);\r\n    function changeKeysRequired(uint256 purpose, uint256 number) external;\r\n    function getKeysRequired(uint256 purpose) external view returns(uint256);\r\n    function execute(address _to, uint256 _value, bytes _data) public returns (uint256 executionId);\r\n    function approve(uint256 _id, bool _approve) public returns (bool success);\r\n}\r\n```\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).\r\n",
  "closed_by": {
    "login": "frozeman",
    "id": 232662,
    "node_id": "MDQ6VXNlcjIzMjY2Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frozeman",
    "html_url": "https://github.com/frozeman",
    "followers_url": "https://api.github.com/users/frozeman/followers",
    "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
    "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
    "organizations_url": "https://api.github.com/users/frozeman/orgs",
    "repos_url": "https://api.github.com/users/frozeman/repos",
    "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frozeman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/734/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/734/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/464213875",
    "html_url": "https://github.com/ethereum/EIPs/issues/734#issuecomment-464213875",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/734",
    "id": 464213875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDIxMzg3NQ==",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-15T21:47:57Z",
    "updated_at": "2019-02-15T21:47:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "This issue was reopened, to serve as a container for a Key Manager contract, which was formerly ERC 725 v1.\r\nThe new [ERC 725 v2](https://github.com/ERC725Alliance/erc725/blob/master/docs/ERC-725.md) serves now as a proxy account standard, that can be owned by a ERC 734 key manager contract.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/464213875/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/468891699",
    "html_url": "https://github.com/ethereum/EIPs/issues/734#issuecomment-468891699",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/734",
    "id": 468891699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODg5MTY5OQ==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-02T06:38:21Z",
    "updated_at": "2019-03-02T06:38:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nice. I like the simple design. \r\n\r\nI would add a ```bytes calldata _operationData``` parameter to ```execute``` though to not have to overload ```_data``` with extra purpose when extra data need to be passed in for specific operation type. I am thinking of #1077 for example.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/468891699/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/468892163",
    "html_url": "https://github.com/ethereum/EIPs/issues/734#issuecomment-468892163",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/734",
    "id": 468892163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODg5MjE2Mw==",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-02T06:43:42Z",
    "updated_at": "2019-03-02T06:43:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could you write the whole execution function how you envision it?\r\n\r\nThis standard needs to be improved a bit to fully fit 725v2. \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/468892163/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/468893136",
    "html_url": "https://github.com/ethereum/EIPs/issues/734#issuecomment-468893136",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/734",
    "id": 468893136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODg5MzEzNg==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-02T06:55:27Z",
    "updated_at": "2019-03-02T06:55:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was actually referring to [725v2](https://github.com/ERC725Alliance/erc725/blob/fdec0e04f939432900f87f0dd7a13ff8703de15d/docs/ERC-725.md)\r\n\r\nthe whole execute function would be \r\n\r\n```function execute(uint256 _operationType, bytes calldata _operationData, address _to, uint256 _value, bytes calldata _data) external;```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/468893136/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/489680048",
    "html_url": "https://github.com/ethereum/EIPs/issues/734#issuecomment-489680048",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/734",
    "id": 489680048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4OTY4MDA0OA==",
    "user": {
      "login": "charyorde",
      "id": 160010,
      "node_id": "MDQ6VXNlcjE2MDAxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/160010?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charyorde",
      "html_url": "https://github.com/charyorde",
      "followers_url": "https://api.github.com/users/charyorde/followers",
      "following_url": "https://api.github.com/users/charyorde/following{/other_user}",
      "gists_url": "https://api.github.com/users/charyorde/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charyorde/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charyorde/subscriptions",
      "organizations_url": "https://api.github.com/users/charyorde/orgs",
      "repos_url": "https://api.github.com/users/charyorde/repos",
      "events_url": "https://api.github.com/users/charyorde/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charyorde/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-06T16:16:08Z",
    "updated_at": "2019-05-06T16:16:08Z",
    "author_association": "NONE",
    "body": "@frozeman Simply, is this a design for KYC? Like Identity verification?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/489680048/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/489681607",
    "html_url": "https://github.com/ethereum/EIPs/issues/734#issuecomment-489681607",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/734",
    "id": 489681607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4OTY4MTYwNw==",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-06T16:20:59Z",
    "updated_at": "2019-05-06T16:20:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is a standard for key management, intended to be used in conjunction with #725",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/489681607/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/500668879",
    "html_url": "https://github.com/ethereum/EIPs/issues/734#issuecomment-500668879",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/734",
    "id": 500668879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDY2ODg3OQ==",
    "user": {
      "login": "cbruguera",
      "id": 2256202,
      "node_id": "MDQ6VXNlcjIyNTYyMDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2256202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbruguera",
      "html_url": "https://github.com/cbruguera",
      "followers_url": "https://api.github.com/users/cbruguera/followers",
      "following_url": "https://api.github.com/users/cbruguera/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbruguera/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbruguera/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbruguera/subscriptions",
      "organizations_url": "https://api.github.com/users/cbruguera/orgs",
      "repos_url": "https://api.github.com/users/cbruguera/repos",
      "events_url": "https://api.github.com/users/cbruguera/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbruguera/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-11T03:02:53Z",
    "updated_at": "2019-06-11T03:02:53Z",
    "author_association": "NONE",
    "body": "@frozeman I see there are multiple references to claim-related functionality in this spec. I thought all claim functionality was moved to be handled by ERC735... Is this proposal description outdated or is it indeed coupled with claim related functionality?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/500668879/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/509926567",
    "html_url": "https://github.com/ethereum/EIPs/issues/734#issuecomment-509926567",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/734",
    "id": 509926567,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTkyNjU2Nw==",
    "user": {
      "login": "cbruguera",
      "id": 2256202,
      "node_id": "MDQ6VXNlcjIyNTYyMDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2256202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbruguera",
      "html_url": "https://github.com/cbruguera",
      "followers_url": "https://api.github.com/users/cbruguera/followers",
      "following_url": "https://api.github.com/users/cbruguera/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbruguera/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbruguera/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbruguera/subscriptions",
      "organizations_url": "https://api.github.com/users/cbruguera/orgs",
      "repos_url": "https://api.github.com/users/cbruguera/repos",
      "events_url": "https://api.github.com/users/cbruguera/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbruguera/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-10T06:24:56Z",
    "updated_at": "2019-07-10T06:24:56Z",
    "author_association": "NONE",
    "body": "@frozeman You might have missed it, but could you provide clarity on my last question? I'm starting to work on an implementation for identity contracts based on these proposals (ERC734/725) soon. Thanks.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/509926567/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/509928522",
    "html_url": "https://github.com/ethereum/EIPs/issues/734#issuecomment-509928522",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/734",
    "id": 509928522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTkyODUyMg==",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-10T06:32:30Z",
    "updated_at": "2019-07-10T06:32:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @cbruguera those are outdated, in fact 734 and 735 needs a bit of re-work to adapt fully to 725v2, if you start working on it it would be great if you can improve the current spec. Send you transformed spec in a gist and ill will update it here.\r\n\r\nthe old 725 was moved to here (734), that's why there are those issues.\r\n\r\n734 should only concern about key management. Also the execute function needs to then call the execute function on 725v2 (and the key manager, needs to be an owner of an 725v2 contract).\r\n\r\nAlternatively, The [gnosis safe](https://github.com/gnosis/safe-contracts) should also work as a key manager.\r\nBut improving this spec would be appreciated.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/509928522/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/510323976",
    "html_url": "https://github.com/ethereum/EIPs/issues/734#issuecomment-510323976",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/734",
    "id": 510323976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDMyMzk3Ng==",
    "user": {
      "login": "cbruguera",
      "id": 2256202,
      "node_id": "MDQ6VXNlcjIyNTYyMDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2256202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbruguera",
      "html_url": "https://github.com/cbruguera",
      "followers_url": "https://api.github.com/users/cbruguera/followers",
      "following_url": "https://api.github.com/users/cbruguera/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbruguera/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbruguera/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbruguera/subscriptions",
      "organizations_url": "https://api.github.com/users/cbruguera/orgs",
      "repos_url": "https://api.github.com/users/cbruguera/repos",
      "events_url": "https://api.github.com/users/cbruguera/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbruguera/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-11T04:26:23Z",
    "updated_at": "2019-07-11T04:26:23Z",
    "author_association": "NONE",
    "body": "Thanks for the reply. I understand now.\r\n\r\nMaybe an indication at the top stating that the specs are outdated would be a good idea in the meantime.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/510323976/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/924070572",
    "html_url": "https://github.com/ethereum/EIPs/issues/734#issuecomment-924070572",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/734",
    "id": 924070572,
    "node_id": "IC_kwDOAq426M43FDKs",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-21T14:56:43Z",
    "updated_at": "2021-09-21T14:56:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "This standard is now superseeded by [LSP6-KeyManager](https://github.com/lukso-network/LIPs/blob/master/LSPs/LSP-6-KeyManager.md)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/924070572/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
