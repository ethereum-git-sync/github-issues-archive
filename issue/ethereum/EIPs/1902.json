{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/1902",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/1902",
  "id": 428391087,
  "node_id": "MDU6SXNzdWU0MjgzOTEwODc=",
  "number": 1902,
  "title": "Discussion: EIP 1901 Add OpenRPC Service Discovery To JSON-RPC Services",
  "user": {
    "login": "shanejonas",
    "id": 364566,
    "node_id": "MDQ6VXNlcjM2NDU2Ng==",
    "avatar_url": "https://avatars.githubusercontent.com/u/364566?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/shanejonas",
    "html_url": "https://github.com/shanejonas",
    "followers_url": "https://api.github.com/users/shanejonas/followers",
    "following_url": "https://api.github.com/users/shanejonas/following{/other_user}",
    "gists_url": "https://api.github.com/users/shanejonas/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/shanejonas/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/shanejonas/subscriptions",
    "organizations_url": "https://api.github.com/users/shanejonas/orgs",
    "repos_url": "https://api.github.com/users/shanejonas/repos",
    "events_url": "https://api.github.com/users/shanejonas/events{/privacy}",
    "received_events_url": "https://api.github.com/users/shanejonas/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 21,
  "created_at": "2019-04-02T19:02:18Z",
  "updated_at": "2022-06-04T07:02:53Z",
  "closed_at": "2022-06-04T07:02:53Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# Add OpenRPC Service Discovery To JSON-RPC Services\r\n\r\n    EIP: 1901\r\n    Title: Add OpenRPC Service Discovery To JSON-RPC Services\r\n    Author: Shane Jonas, Zachary Belford\r\n    Status: Draft\r\n    Type: Interface\r\n    Created: 2019-02-25\r\n\r\n# Abstract\r\n### What is this?\r\n\r\nThis is a proposal to add [OpenRPC](https://github.com/open-rpc/spec) support to existing and future JSON-RPC services by adding the method [`rpc.discover`](https://github.com/open-rpc/spec#service-discovery-method) to the projects [JSON-RPC](https://www.jsonrpc.org/specification) APIs, enabling automation and tooling.\r\n\r\n\r\nThe OpenRPC Document that specifies all the methods an EVM-based blockchain should implement can be found [here](https://github.com/etclabscore/ethereum-json-rpc-specification).\r\n\r\n# Motivation\r\nThis was first proposed [here as an ECIP](https://github.com/etclabscore/ECIPs/blob/master/ECIPs/ECIP-1053.md), but the benefits of this kind of tooling is apparent across Bitcoin, Ethereum Classic, Ethereum and other JSON-RPC accessible blockchains.\r\n\r\n### What is the problem?\r\n\r\n- Maintenence time and accuracy on:\r\n    - documentation\r\n    - APIs\r\n    - clients\r\n- Not all JSON-RPC servers return the same methods or return the same version of the API.\r\n- There is nothing that provides both human *and* machine-readable interfaces to be able to interact with JSON-RPC.\r\n- Communication between services in different programming languages is not easy.\r\n- Implementation usually comes at the cost of user experience consuming the API.\r\n\r\n# Implementation\r\n### How do I Solve the problem?\r\nJSON-RPC APIs can support the OpenRPC specification by implementing a service discovery method that will return the [OpenRPC document](https://github.com/open-rpc/spec#openrpc-document) for the JSON-RPC API. The method MUST be named `rpc.discover`. The `rpc.` prefix is a reserved method prefix for [JSON-RPC 2.0 Specification](https://www.jsonrpc.org/specification) system extensions.\r\n\r\n### Use Case\r\nThis is the vision for the use case of OpenRPC and how it would relate to multi-geth:\r\n\r\n![MultGethRpc-usecase](https://user-images.githubusercontent.com/364566/54172981-4605f480-443d-11e9-9e29-80c580f9edae.png)\r\n\r\n# Specification\r\n\r\n### What is OpenRPC?\r\nThe [OpenRPC](https://github.com/open-rpc/spec) Specification defines a standard, programming language-agnostic interface description for [JSON-RPC 2.0](https://www.jsonrpc.org/specification) APIs, which allows both humans and computers to discover and understand the capabilities of a service without requiring access to source code, additional documentation, or inspection of network traffic. When properly defined via OpenRPC, a consumer can understand and interact with the remote service with a minimal amount of implementation logic, and share these logic patterns across use cases. Similar to what interface descriptions have done for lower-level programming, the OpenRPC Specification removes guesswork in calling a service.\r\n\r\n##### Structure\r\nThis is the structure of an OpenRPC Document:\r\n\r\n![openrpc-spec-structure](https://github.com/open-rpc/design/raw/master/diagrams/structure/OpenRPC_structure.png)\r\n\r\n# Rationale\r\n### Why would we do this?\r\nServices need to figure out how to talk to each other. If we really want to build the next generation of automation, then having up to date libraries, documented APIs, and modern tools are going to provide easy discovery, on-boarding, and enable end user and developer interaction.\r\n\r\nUse cases for machine-readable [JSON-RPC 2.0](https://www.jsonrpc.org/specification) API definition documents include, but are not limited to:\r\n\r\n- A common vocabulary and document will keep developers, testers, architects, and technical writers all in sync.\r\n- Server stubs/skeletons generated in many languages\r\n- Clients generated in many languages\r\n- Mock Server generated in many languages\r\n- Tests generated in many languages\r\n- Documentation Generation\r\n\r\n\r\n# Alternative\r\n[OpenRPC](https://github.com/open-rpc/spec) documents just describe [JSON-RPC](https://www.jsonrpc.org/specification) APIs services, and are represented in JSON format. These documents may be produced and served statically OR generated dynamically from an application and returned via the [`rpc.discover`](https://github.com/open-rpc/spec#service-discovery-method) method. This gives projects and communities the flexibility to adopt tools before the [`rpc.discover`](https://github.com/open-rpc/spec#service-discovery-method) method is implemented.\r\n\r\n\r\n# Resources\r\n- https://github.com/ethereum/EIPs/pull/1474\r\n- https://github.com/ethereum/EIPs/issues/1442\r\n- https://github.com/ethereum/EIPs/issues/217\r\n- https://github.com/ethereum/EIPs/issues/136\r\n- https://ethereum-magicians.org/t/eip-remote-procedure-call-specification/1537/20\r\n- https://github.com/etclabscore/ECIPs/issues/16\r\n- https://github.com/ethereum/EIPs/pull/1901",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/1902/reactions",
    "total_count": 7,
    "+1": 7,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/487421145",
    "html_url": "https://github.com/ethereum/EIPs/issues/1902#issuecomment-487421145",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902",
    "id": 487421145,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzQyMTE0NQ==",
    "user": {
      "login": "shemnon",
      "id": 38109,
      "node_id": "MDQ6VXNlcjM4MTA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/38109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shemnon",
      "html_url": "https://github.com/shemnon",
      "followers_url": "https://api.github.com/users/shemnon/followers",
      "following_url": "https://api.github.com/users/shemnon/following{/other_user}",
      "gists_url": "https://api.github.com/users/shemnon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shemnon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shemnon/subscriptions",
      "organizations_url": "https://api.github.com/users/shemnon/orgs",
      "repos_url": "https://api.github.com/users/shemnon/repos",
      "events_url": "https://api.github.com/users/shemnon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shemnon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-28T22:33:34Z",
    "updated_at": "2019-04-28T22:33:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can an OpenRPC document be composed of multiple other OpenRPC documents?  \r\n\r\nIMHO this EIP should be one or more OpenRPC specs reflecting the already standard JSON-RPC calls for Ethereum.  Client Implementors then would then use those specific files and aggregate them with their own Admin RPCs.  The example linked externally should then include an example of including those standard OpenRPC documents.\r\n\r\nIf OpenRPC is not that flexible, and if the existing RPCs are not specced in some form in this EIP, then I don't think this EIP adds any value other than saying \"please use OpenRPC\"",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/487421145/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/487808676",
    "html_url": "https://github.com/ethereum/EIPs/issues/1902#issuecomment-487808676",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902",
    "id": 487808676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzgwODY3Ng==",
    "user": {
      "login": "shanejonas",
      "id": 364566,
      "node_id": "MDQ6VXNlcjM2NDU2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/364566?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shanejonas",
      "html_url": "https://github.com/shanejonas",
      "followers_url": "https://api.github.com/users/shanejonas/followers",
      "following_url": "https://api.github.com/users/shanejonas/following{/other_user}",
      "gists_url": "https://api.github.com/users/shanejonas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shanejonas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shanejonas/subscriptions",
      "organizations_url": "https://api.github.com/users/shanejonas/orgs",
      "repos_url": "https://api.github.com/users/shanejonas/repos",
      "events_url": "https://api.github.com/users/shanejonas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shanejonas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-30T03:04:17Z",
    "updated_at": "2019-04-30T03:48:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shemnon you can use `$ref` to reference local or remote documents the same way `JSON Schema` allows.\r\n\r\nAs we're writing the `openrpc.json` for `multi-geth` its definitely getting pretty hefty, lots of undocumented `debug_` methods for example, and like you said, `admin_`.\r\n\r\nYou can check that out here: https://raw.githubusercontent.com/etclabscore/multi-geth/feat/openrpc-discover/internal/openrpc/openrpc.json\r\n\r\nor you can check it out in the playground: https://playground.open-rpc.org/?schemaUrl=https://raw.githubusercontent.com/etclabscore/multi-geth/feat/openrpc-discover/internal/openrpc/openrpc.json\r\n\r\nWe could narrow it to the methods outlined in: #1474 within this EIP?\r\n\r\nAlso, I gave a talk at the recent EDCON on OpenRPC and how it can help our ecosystem, here's the slides: https://docs.google.com/presentation/d/13cz42ONpzbTucNGMlQOQ46Rfu-DZWon9mvlSIXuhgy8",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/487808676/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/487845801",
    "html_url": "https://github.com/ethereum/EIPs/issues/1902#issuecomment-487845801",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902",
    "id": 487845801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Nzg0NTgwMQ==",
    "user": {
      "login": "shanejonas",
      "id": 364566,
      "node_id": "MDQ6VXNlcjM2NDU2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/364566?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shanejonas",
      "html_url": "https://github.com/shanejonas",
      "followers_url": "https://api.github.com/users/shanejonas/followers",
      "following_url": "https://api.github.com/users/shanejonas/following{/other_user}",
      "gists_url": "https://api.github.com/users/shanejonas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shanejonas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shanejonas/subscriptions",
      "organizations_url": "https://api.github.com/users/shanejonas/orgs",
      "repos_url": "https://api.github.com/users/shanejonas/repos",
      "events_url": "https://api.github.com/users/shanejonas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shanejonas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-30T07:26:18Z",
    "updated_at": "2019-04-30T07:42:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shemnon I took some time and narrowed it down to all the methods from #1474 and #1436 and `getRawTransaction*`, added the `openrpc.json` to the EIP, can be found in [assets/eip-1901/openrpc.json](https://raw.githubusercontent.com/ethereum/EIPs/dbf64faff4dfe2f832d752292a39b8d7b9b46d2a/assets/eip-1901/openrpc.json) on the PR.\r\n\r\nheres a link to the playground:\r\nhttps://playground.open-rpc.org/?schemaUrl=https://raw.githubusercontent.com/ethereum/EIPs/dbf64faff4dfe2f832d752292a39b8d7b9b46d2a/assets/eip-1901/openrpc.json",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/487845801/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/487991614",
    "html_url": "https://github.com/ethereum/EIPs/issues/1902#issuecomment-487991614",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902",
    "id": 487991614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Nzk5MTYxNA==",
    "user": {
      "login": "shemnon",
      "id": 38109,
      "node_id": "MDQ6VXNlcjM4MTA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/38109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shemnon",
      "html_url": "https://github.com/shemnon",
      "followers_url": "https://api.github.com/users/shemnon/followers",
      "following_url": "https://api.github.com/users/shemnon/following{/other_user}",
      "gists_url": "https://api.github.com/users/shemnon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shemnon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shemnon/subscriptions",
      "organizations_url": "https://api.github.com/users/shemnon/orgs",
      "repos_url": "https://api.github.com/users/shemnon/repos",
      "events_url": "https://api.github.com/users/shemnon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shemnon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-30T15:11:01Z",
    "updated_at": "2019-04-30T15:11:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Those two eips are a great place to start.  \r\n* Can the schema file name have some reference to the EIPs they are implementing, such as openrpc_eip_1474.json?  If they are intended for composition then the name of the file should provide clarity as to what is being included.  `opejrpc.json` could be, literally, anything.\r\n* Do we need the server section?  Again, if this file is intended for composition then a partial file should be sufficient, providing only the standardized parts of the spec.  Opening on local host on 8545 is a standard port, but not a requirement for the service.\r\n* Can we get an example of how multigeth would compose the standardized files?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/487991614/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/488075648",
    "html_url": "https://github.com/ethereum/EIPs/issues/1902#issuecomment-488075648",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902",
    "id": 488075648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODA3NTY0OA==",
    "user": {
      "login": "shanejonas",
      "id": 364566,
      "node_id": "MDQ6VXNlcjM2NDU2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/364566?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shanejonas",
      "html_url": "https://github.com/shanejonas",
      "followers_url": "https://api.github.com/users/shanejonas/followers",
      "following_url": "https://api.github.com/users/shanejonas/following{/other_user}",
      "gists_url": "https://api.github.com/users/shanejonas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shanejonas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shanejonas/subscriptions",
      "organizations_url": "https://api.github.com/users/shanejonas/orgs",
      "repos_url": "https://api.github.com/users/shanejonas/repos",
      "events_url": "https://api.github.com/users/shanejonas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shanejonas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-30T19:03:57Z",
    "updated_at": "2019-04-30T23:56:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shemnon \r\n\r\nhere is an example of composition with a JSON Schema tool [json-schema-ref-parser](https://github.com/APIDevTools/json-schema-ref-parser):\r\n\r\nhere is a local reference\r\n```\r\nmethods: [\r\n  {\r\n      \"$ref\": \"schemas/methods/eth_getProof.json\"\r\n  }\r\n]\r\n```\r\n\r\nand a remote reference\r\n\r\n```\r\nmethods: [\r\n  {\r\n      \"$ref\": \"http://wayne-enterprises.com/methods/get_batmobile.json\"\r\n\r\n  }\r\n]\r\n```\r\n\r\nAlthough I'm not a fan of this approach if it includes relative paths, if `geth` returns `rpc.discover` with a relative `$ref` path, that will need to be served up to actually be resolved later. Or geth (or any client) needs to `dereference` relative paths before served. \r\n\r\nMaybe we can limit it to **absolute urls**/remote and link to EIPs with `.json` files?\r\n\r\nMy other thought is that this EIP implements #1474 and #1436 as of now, and it could be the canonical place to update methods, (like 1474 is now).\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/488075648/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/488235396",
    "html_url": "https://github.com/ethereum/EIPs/issues/1902#issuecomment-488235396",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902",
    "id": 488235396,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODIzNTM5Ng==",
    "user": {
      "login": "shanejonas",
      "id": 364566,
      "node_id": "MDQ6VXNlcjM2NDU2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/364566?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shanejonas",
      "html_url": "https://github.com/shanejonas",
      "followers_url": "https://api.github.com/users/shanejonas/followers",
      "following_url": "https://api.github.com/users/shanejonas/following{/other_user}",
      "gists_url": "https://api.github.com/users/shanejonas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shanejonas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shanejonas/subscriptions",
      "organizations_url": "https://api.github.com/users/shanejonas/orgs",
      "repos_url": "https://api.github.com/users/shanejonas/repos",
      "events_url": "https://api.github.com/users/shanejonas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shanejonas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-01T08:33:22Z",
    "updated_at": "2019-05-01T08:33:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Took the time to put this repo together to house the specification we've started to outline here: https://github.com/etclabscore/ethereum-json-rpc-specification\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/488235396/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/495065160",
    "html_url": "https://github.com/ethereum/EIPs/issues/1902#issuecomment-495065160",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902",
    "id": 495065160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTA2NTE2MA==",
    "user": {
      "login": "BelfordZ",
      "id": 1787231,
      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1787231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BelfordZ",
      "html_url": "https://github.com/BelfordZ",
      "followers_url": "https://api.github.com/users/BelfordZ/followers",
      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
      "repos_url": "https://api.github.com/users/BelfordZ/repos",
      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-23T04:44:00Z",
    "updated_at": "2019-05-23T04:47:10Z",
    "author_association": "NONE",
    "body": "@shemnon Just wondering if you have any time to review this?\r\n\r\nAs per your question about composition -- All OpenRPC tooling demands an entire OpenRPC document to be passed in. How you assemble the document is up to the user, and therefore is as composible as any other JSON document. For most cases, composition probably means splitting method definitions out into their own file, which is really as simple as concatenating the set of methods into the [methods array](https://spec.open-rpc.org/#openrpc-methods).\r\n\r\nfor the server section question  -- [it is not a required field](https://github.com/open-rpc/meta-schema/blob/master/schema.json#L4) and I think you are right there, for geth/multi-geth/ethereum-json-rpc-specification, we should not use the servers section ATM. That being said, it allows for many interesting applications, such as treating the servers array returned by a services rpc.discover as a DHT of available peers in a L2 p2p system.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/495065160/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/495065315",
    "html_url": "https://github.com/ethereum/EIPs/issues/1902#issuecomment-495065315",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902",
    "id": 495065315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTA2NTMxNQ==",
    "user": {
      "login": "BelfordZ",
      "id": 1787231,
      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1787231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BelfordZ",
      "html_url": "https://github.com/BelfordZ",
      "followers_url": "https://api.github.com/users/BelfordZ/followers",
      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
      "repos_url": "https://api.github.com/users/BelfordZ/repos",
      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-23T04:45:17Z",
    "updated_at": "2019-05-23T04:45:17Z",
    "author_association": "NONE",
    "body": "Forgot to mention - Multi-geth is now implementing OpenRPC along with its service discovery method, so you can have a look at how it was implemented if you wish\r\nhttps://github.com/multi-geth/multi-geth#openrpc-discovery",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/495065315/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/495065475",
    "html_url": "https://github.com/ethereum/EIPs/issues/1902#issuecomment-495065475",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902",
    "id": 495065475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTA2NTQ3NQ==",
    "user": {
      "login": "shemnon",
      "id": 38109,
      "node_id": "MDQ6VXNlcjM4MTA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/38109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shemnon",
      "html_url": "https://github.com/shemnon",
      "followers_url": "https://api.github.com/users/shemnon/followers",
      "following_url": "https://api.github.com/users/shemnon/following{/other_user}",
      "gists_url": "https://api.github.com/users/shemnon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shemnon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shemnon/subscriptions",
      "organizations_url": "https://api.github.com/users/shemnon/orgs",
      "repos_url": "https://api.github.com/users/shemnon/repos",
      "events_url": "https://api.github.com/users/shemnon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shemnon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-23T04:46:17Z",
    "updated_at": "2019-05-23T04:46:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "If current OpenRPC tooling requires a singular text document to serve as a schema, then I feel that the OpenRPC tooling should be improved.  One doesn't put all their Go interfaces in one file after all.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/495065475/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/495068766",
    "html_url": "https://github.com/ethereum/EIPs/issues/1902#issuecomment-495068766",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902",
    "id": 495068766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTA2ODc2Ng==",
    "user": {
      "login": "BelfordZ",
      "id": 1787231,
      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1787231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BelfordZ",
      "html_url": "https://github.com/BelfordZ",
      "followers_url": "https://api.github.com/users/BelfordZ/followers",
      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
      "repos_url": "https://api.github.com/users/BelfordZ/repos",
      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-23T05:06:52Z",
    "updated_at": "2019-05-23T05:08:43Z",
    "author_association": "NONE",
    "body": "OpenRPC is language agnostic - where/how you implement your methods, where you store the OpenRPC Documents JSON, or how you construct it is entirely up to you. This is not a concern of the tooling that we have thus far, which handles generating clients, documentation, mock servers, etc etc.\r\n\r\nWhat I think you are talking about (please correct me if I'm wrong) is a tool which would convert go interfaces into JSON schemas + [MethodObjects](https://spec.open-rpc.org/#method-object). I'd love to chat about making such a tool for OpenRPC, as you are now the 2nd Go dev to ask for such). ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/495068766/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/495070278",
    "html_url": "https://github.com/ethereum/EIPs/issues/1902#issuecomment-495070278",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902",
    "id": 495070278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTA3MDI3OA==",
    "user": {
      "login": "shemnon",
      "id": 38109,
      "node_id": "MDQ6VXNlcjM4MTA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/38109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shemnon",
      "html_url": "https://github.com/shemnon",
      "followers_url": "https://api.github.com/users/shemnon/followers",
      "following_url": "https://api.github.com/users/shemnon/following{/other_user}",
      "gists_url": "https://api.github.com/users/shemnon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shemnon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shemnon/subscriptions",
      "organizations_url": "https://api.github.com/users/shemnon/orgs",
      "repos_url": "https://api.github.com/users/shemnon/repos",
      "events_url": "https://api.github.com/users/shemnon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shemnon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-23T05:15:20Z",
    "updated_at": "2019-05-23T05:15:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Actually I'm a Java dev and our platform is Java, that wasn't a request for Go tooling.  \r\n\r\nWhat I want the OpenRPC spec to be able to handle is that I want to say my schema is made up of multiple pieces, evaluated in aggregate.  And I don't want to have to go into the files and do any JSON querying or assembly.  For example, I want to include the byte identical definition of the core Ehtereum JSON-RPCs, the byte identical definition of the EEA extension RPCs, and a set of PegaSys specific admin RPCs and say that those three files, in aggregate, form the schema of the endpoint.  I'm OK making a fourth document pointing to the other three, but I don't want to have to cut and paste the three documents in any way, shape, or form into one mega-document.  If my tool has to do any manipulation of the spec documents and those byte identical documents need to be modified in any form I consider it a problem with the OpenRPC spec, not the tooling.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/495070278/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/495073318",
    "html_url": "https://github.com/ethereum/EIPs/issues/1902#issuecomment-495073318",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902",
    "id": 495073318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTA3MzMxOA==",
    "user": {
      "login": "BelfordZ",
      "id": 1787231,
      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1787231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BelfordZ",
      "html_url": "https://github.com/BelfordZ",
      "followers_url": "https://api.github.com/users/BelfordZ/followers",
      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
      "repos_url": "https://api.github.com/users/BelfordZ/repos",
      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-23T05:31:08Z",
    "updated_at": "2019-05-23T05:31:08Z",
    "author_association": "NONE",
    "body": "@shemnon Understood, and I see your point about having to muck around merging JSON files together is not ideal when what you are looking for is a pattern to compose several documents into one.\r\n\r\ngive me some time to think of other ways we could achieve this.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/495073318/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/495073540",
    "html_url": "https://github.com/ethereum/EIPs/issues/1902#issuecomment-495073540",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902",
    "id": 495073540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTA3MzU0MA==",
    "user": {
      "login": "BelfordZ",
      "id": 1787231,
      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1787231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BelfordZ",
      "html_url": "https://github.com/BelfordZ",
      "followers_url": "https://api.github.com/users/BelfordZ/followers",
      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
      "repos_url": "https://api.github.com/users/BelfordZ/repos",
      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-23T05:32:15Z",
    "updated_at": "2019-05-23T05:32:15Z",
    "author_association": "NONE",
    "body": "merging/composing the methods is really simple. What is hard to understand is how composing OpenRPC documents would handle merging fields such as `info`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/495073540/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/495074567",
    "html_url": "https://github.com/ethereum/EIPs/issues/1902#issuecomment-495074567",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902",
    "id": 495074567,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTA3NDU2Nw==",
    "user": {
      "login": "BelfordZ",
      "id": 1787231,
      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1787231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BelfordZ",
      "html_url": "https://github.com/BelfordZ",
      "followers_url": "https://api.github.com/users/BelfordZ/followers",
      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
      "repos_url": "https://api.github.com/users/BelfordZ/repos",
      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-23T05:37:45Z",
    "updated_at": "2019-05-23T05:38:46Z",
    "author_association": "NONE",
    "body": "perhaps we could try a [Specification Extension](https://spec.open-rpc.org/#specification-extensions) to start with: `x-extends` which would allow you to specify a reference to another OpenRPC document from which to extend from.\r\n\r\nOpenRPC tooling such as [parse](https://open-rpc.github.io/schema-utils-js/globals.html#parseopenrpcdocument) could then return a single document that has been composed as you describe.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/495074567/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/527989324",
    "html_url": "https://github.com/ethereum/EIPs/issues/1902#issuecomment-527989324",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902",
    "id": 527989324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzk4OTMyNA==",
    "user": {
      "login": "shanejonas",
      "id": 364566,
      "node_id": "MDQ6VXNlcjM2NDU2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/364566?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shanejonas",
      "html_url": "https://github.com/shanejonas",
      "followers_url": "https://api.github.com/users/shanejonas/followers",
      "following_url": "https://api.github.com/users/shanejonas/following{/other_user}",
      "gists_url": "https://api.github.com/users/shanejonas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shanejonas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shanejonas/subscriptions",
      "organizations_url": "https://api.github.com/users/shanejonas/orgs",
      "repos_url": "https://api.github.com/users/shanejonas/repos",
      "events_url": "https://api.github.com/users/shanejonas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shanejonas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-04T16:53:03Z",
    "updated_at": "2019-09-04T16:58:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "🔔 just wanted to update this thread and show progress:\r\n\r\n## Implementation\r\nMulti-geth has full OpenRPC support, for Ethereum, Ethereum classic, kotti, goerli, and many other chains: \r\nhttps://github.com/etclabscore/multi-geth#openrpc-discovery\r\n\r\n### The Spec:\r\nThe repo itself is getting some contributors, added missing methods like `eth_pendingTransactions`:\r\nhttps://github.com/etclabscore/ethereum-json-rpc-specification\r\n\r\n\r\n#### The Tooling\r\n\r\nThe playground has gotten some upgrades to be able to make JSON-RPC calls from within the docs:\r\n\r\n![inspector_playground_1](https://user-images.githubusercontent.com/364566/64275019-7cf32980-cef9-11e9-9310-e13082f3b4c3.gif)\r\n\r\nYou can play with that here:\r\nhttps://playground.open-rpc.org/?schemaUrl=https://raw.githubusercontent.com/etclabscore/ethereum-json-rpc-specification/master/openrpc.json",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/527989324/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974705467",
    "html_url": "https://github.com/ethereum/EIPs/issues/1902#issuecomment-974705467",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902",
    "id": 974705467,
    "node_id": "IC_kwDOAq426M46GNM7",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-11-20T20:12:20Z",
    "updated_at": "2021-11-20T20:12:20Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974705467/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974714367",
    "html_url": "https://github.com/ethereum/EIPs/issues/1902#issuecomment-974714367",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902",
    "id": 974714367,
    "node_id": "IC_kwDOAq426M46GPX_",
    "user": {
      "login": "shanejonas",
      "id": 364566,
      "node_id": "MDQ6VXNlcjM2NDU2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/364566?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shanejonas",
      "html_url": "https://github.com/shanejonas",
      "followers_url": "https://api.github.com/users/shanejonas/followers",
      "following_url": "https://api.github.com/users/shanejonas/following{/other_user}",
      "gists_url": "https://api.github.com/users/shanejonas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shanejonas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shanejonas/subscriptions",
      "organizations_url": "https://api.github.com/users/shanejonas/orgs",
      "repos_url": "https://api.github.com/users/shanejonas/repos",
      "events_url": "https://api.github.com/users/shanejonas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shanejonas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-20T21:32:34Z",
    "updated_at": "2021-11-20T21:32:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Would like to see this moved through the process as OpenRPC is now being used here: https://github.com/ethereum/execution-apis",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974714367/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974784973",
    "html_url": "https://github.com/ethereum/EIPs/issues/1902#issuecomment-974784973",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902",
    "id": 974784973,
    "node_id": "IC_kwDOAq426M46GgnN",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-21T09:46:48Z",
    "updated_at": "2021-11-22T05:34:07Z",
    "author_association": "MEMBER",
    "body": "@shanejonas I recommend checking out [EIP-1](https://eips.ethereum.org/EIPS/eip-1) to understand the EIP process and how to get this pushed through.  Make sure you are prepared to do the leg work championing it, or you know someone who is, as this will require discussion with client dev teams.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974784973/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974868620",
    "html_url": "https://github.com/ethereum/EIPs/issues/1902#issuecomment-974868620",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902",
    "id": 974868620,
    "node_id": "IC_kwDOAq426M46G1CM",
    "user": {
      "login": "shanejonas",
      "id": 364566,
      "node_id": "MDQ6VXNlcjM2NDU2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/364566?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shanejonas",
      "html_url": "https://github.com/shanejonas",
      "followers_url": "https://api.github.com/users/shanejonas/followers",
      "following_url": "https://api.github.com/users/shanejonas/following{/other_user}",
      "gists_url": "https://api.github.com/users/shanejonas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shanejonas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shanejonas/subscriptions",
      "organizations_url": "https://api.github.com/users/shanejonas/orgs",
      "repos_url": "https://api.github.com/users/shanejonas/repos",
      "events_url": "https://api.github.com/users/shanejonas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shanejonas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-21T18:24:55Z",
    "updated_at": "2021-11-21T18:24:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I believe the client team devs are already involved with https://github.com/ethereum/execution-apis as it was used for EIP 1559 to ensure compatibility, and now for the ETH2 merge.\r\n\r\nI've also had a chat with client devs on All Core Devs previously which sparked some interest, but now that its being used it would be great to chat again to see where client teams are in regards to the current execution-apis in terms of compatibility.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974868620/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1133543568",
    "html_url": "https://github.com/ethereum/EIPs/issues/1902#issuecomment-1133543568",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902",
    "id": 1133543568,
    "node_id": "IC_kwDOAq426M5DkICQ",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-05-21T06:03:55Z",
    "updated_at": "2022-05-21T06:03:55Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1133543568/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1146553893",
    "html_url": "https://github.com/ethereum/EIPs/issues/1902#issuecomment-1146553893",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1902",
    "id": 1146553893,
    "node_id": "IC_kwDOAq426M5EVwYl",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-06-04T07:02:52Z",
    "updated_at": "2022-06-04T07:02:52Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1146553893/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
