{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/1888",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/1888/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/1888/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/1888/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/1888",
  "id": 427410865,
  "node_id": "MDU6SXNzdWU0Mjc0MTA4NjU=",
  "number": 1888,
  "title": "ERC-1888: Transferable Certificate (Claim) ",
  "user": {
    "login": "greg-flexidao",
    "id": 11168838,
    "node_id": "MDQ6VXNlcjExMTY4ODM4",
    "avatar_url": "https://avatars.githubusercontent.com/u/11168838?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/greg-flexidao",
    "html_url": "https://github.com/greg-flexidao",
    "followers_url": "https://api.github.com/users/greg-flexidao/followers",
    "following_url": "https://api.github.com/users/greg-flexidao/following{/other_user}",
    "gists_url": "https://api.github.com/users/greg-flexidao/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/greg-flexidao/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/greg-flexidao/subscriptions",
    "organizations_url": "https://api.github.com/users/greg-flexidao/orgs",
    "repos_url": "https://api.github.com/users/greg-flexidao/repos",
    "events_url": "https://api.github.com/users/greg-flexidao/events{/privacy}",
    "received_events_url": "https://api.github.com/users/greg-flexidao/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 17,
  "created_at": "2019-03-31T15:47:31Z",
  "updated_at": "2022-06-11T07:09:39Z",
  "closed_at": "2022-06-11T07:09:39Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "```\r\n---\r\neip: 1888\r\ntitle: ERC-1888 Transferable Certificate\r\nauthor: Grzegorz Bytniewski <g.bytniewski@flexidao.com>, Francesc Ortiz <f.ortiz@flexidao.com>, Joseph Bagaric <bagaricjos@gmail.com>\r\ntype: Standards Track\r\ncategory: ERC\r\nstatus: Draft\r\ncreated: 2019-03-31\r\ndiscussions-to: https://github.com/ethereum/EIPs/issues/1888\r\nrequires: 1155\r\n---\r\n```\r\n## Simple Summary\r\nA standard interface for a transferable certificate (claim). That extends highly flexible ERC-1155 Multi-token standard.\r\n\r\n## Abstract\r\nThis standard extends the ERC-1155 Multi Token Standard, with transferable certificate. The standard describes functions for issuing and claiming of transferable certificates.\r\nThese certificates are attested by third parties (issuers).\r\nPrimarily thought to accommodate the real-life needs of a utility sector (electricity, gas, water, heat).\r\n\r\n## Motivation\r\nTokens once issued are immutable by design. We cannot simply burn (invalidate) someone else's tokens, without their explicit permission. This design principle is not suitable for use cases where the data source, due to its nature cannot be 100% trusted, yet someone has to take that responsibility for the system to operate (i.e. utility sector). \r\n\r\nIn some real-life cases, there will be always certifying authorities (issuers) responsible for providing such data to the blockchain, without being in ultimate control of all the system end-points (i.e. utility metering devices at end-user premises). \r\n\r\nInspired by the concept of ERC-735 claims, the certificate itself is a light transferable claim which validity can be revoked by the issuer. Trust is here transferred to the issuers of the certificates.\r\n\r\nERC-1888 is not specific to the utility sector, and many other applications can potentially benefit from its additional features extending ERC-1155.\r\n\r\n## Definitions\r\n`issuer`: is another smart contract, which issues a transferable certificate.\r\n\r\n`certificate`: A certificate is an information an issuer has about the certificate (on top of the token balance). This contains the following:\r\n\r\n- `topic`: uint256 number which represents the topic of the certificate. (e.g. 1: origin-of-electricity, 2: electricity-with-origin) EXACT NUMBERING SCHEME TBD\r\n- `issuer`: The issuer is a contract address itself, at which the claim can be verified using the call validityData.\r\n- `validityData`: validity call data to issuer. Contains the signature of the function to verify the certificate as well as encoded parameters of the function to ultimately check the validity of the certificate.\r\n- `issuenceData`: The hash of the certificate data, sitting in another location, a bit-mask, or actual data based on the certificate topic.\r\n\r\n## Specification\r\nThe key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119.\r\n\r\nSmart contracts implementing the ERC-1888 standard MUST implement the ERC1888, ERC1155 and ERC165interfaces.\r\n\r\n### Certificate Structure\r\n\r\nThe certificates issued is bounded to the tokenId. Returns the certificate's properties.\r\n```solidity\r\nstruct Certificate {\r\n    uint256 topic;\r\n    address issuer; // msg.sender\r\n    bytes validityData;\r\n    bytes issuenceData;\r\n}\r\n```\r\n### Methods\r\n\r\n#### issue\r\nRequests the ADDITION or the CHANGE of a certificate from an `issuer`.\r\n\r\nMUST pass the `_to` and `_value` to `ERC1155.safeTransferFrom` function.\r\n\r\nMUST pass `0x0` as `_from` to `ERC1155.safeTransferFrom` function.\r\n\r\nMUST follow the ERC-1155 standard regarding minting new tokens.\r\n\r\n\r\n`issuer` of the certificate SCHOULD be `msg.sender`\r\nCaller CAN be approved to issue new certificates, on top of ERC1155 token minting permission\r\n\r\nMUST check validity of the certificate before continuing with the token minting\r\n(i.e. `issuer.staticcall(validityData)` should return `(true, )`)\r\n\r\nPossible certificate topics:\r\n* `01`: Utilities\r\n    * `01`: Electricity\r\n        * `01`: Origin (\"Green certificates\")\r\n        * `02`: Origin + Electricity \r\n        * `03`: Flexibility\r\n        * `04`: Flexibility + Electricity\r\n        * `05`: Efficiency (\"White certificates\")\r\n    * `02`: Water\r\n    * `03`: Gas\r\n    * `04`: Heat\r\n    \r\n(TODO: standardize and add more topics)\r\n\r\n`topic` SCHOULD define the `data` format \r\n(i.e topic = 010101, could standardize format of the `data` to (uint48 startTime, uint48 endTime, address origin))\r\n\r\nReturns **id**: minted ERC-1155 tokenId according to ERC-1155 implementation\r\n\r\nMUST emit [IssuanceSingle](#IssuanceSinge) upon successful token minting\r\n\r\n```solidity\r\nfunction issue(\r\n       address _to,\r\n       bytes calldata _validityData,\r\n       uint256 _topic,\r\n       uint256 _value,\r\n       bytes calldata _issuanceData\r\n   ) external returns (uint256 id);\r\n```\r\n#### batchIssue\r\nRequests the ADDITION or the CHANGE of a certificate from an `issuer`.\r\n\r\nMUST pass the `_to` and `_value` to `ERC1155.safeBatchTransferFrom` function.\r\n\r\nMUST pass `0x0` as `_from` to `ERC1155.safeBatchTransferFrom` function.\r\n\r\nMUST follow the ERC-1155 standard regarding minting new tokens.\r\n\r\n`issuer` of the certificate SCHOULD be `msg.sender`.\r\n\r\nCaller CAN be approved to issue new certificates, on top of ERC1155 token minting permission\r\n\r\nEach certificate in the batch MUST be validated against the same requrements as in the ``issue`` method. \r\n\r\nReturns **array of id**: minted ERC-1155 tokenIds according to ERC-1155 implementation\r\n\r\nMUST emit [IssuanceBatch](#IssuanceBatch) upon successful token minting\r\n\r\n```solidity\r\nfunction batchIssue(\r\n       address _to,\r\n       bytes[] calldata _validityData,\r\n       uint256[] calldata _topics,\r\n       uint256[] calldata _values,\r\n       bytes[] calldata _issuanceData\r\n   ) external returns (uint256[] memory ids);\r\n```\r\n\r\n#### safeTransferAndClaimFrom\r\nClaims (burns) certificate for the `_to` while transferring.\r\n\r\n`_from` and `_to` addresses CAN be equal, which would result in self claim\r\n\r\nSCHOULD pass the `_from`, `_to`, `_id`, `_value`, `_data` to `ERC1155.safeTransferFrom` function\r\n\r\nMUST decrease the balance of the `_to` address by `_value`\r\n\r\nMUST increase the claimedBalance of the `_to` address by `_value`\r\n\r\n`_claimData` additional data with format specified by the `topic` to be logged in [ClaimBatch](#ClaimBatch) event\r\n\r\nSCHOULD throw if the token _id lost validity.\r\n\r\nMUST emit [TransferSingle](https://github.com/ethereum/EIPs/issues/1155) upon successful token burning\r\n\r\nMUST emit [ClaimSingle](#ClaimSingle) upon successful token burning\r\n\r\n```solidity\r\n   function safeTransferAndClaimFrom(\r\n       address _from,\r\n       address _to,\r\n       uint256 _id,\r\n       uint256 _value,\r\n       bytes calldata _data\r\n       bytes calldata _claimData\r\n   ) external;\r\n```\r\n#### safeBatchTransferAndClaimFrom\r\nClaims (burns) multiple certificates for the `_to` while transferring.\r\n\r\n`_from` and `_to` addresses CAN be equal, which would result in self claim\r\n\r\nSCHOULD pass the `_from`, `_to`, `_ids`, `_values`, `_data` to `ERC1155.safeBatchTransferFrom` function\r\n\r\nMUST decrease the corresponding `_ids[i]` balance of the `_to` address by  `_values[i]`\r\n\r\nMUST increase the corresponding `_ids[i]` claimedBalance of the `_to` address by `_values[i]`\r\n\r\nMUST throw is the lengths of the `_ids`, `_values`, `_cliamData` are different\r\n\r\n`_claimData` additional data with format specified by the certificate `topic` to be logged in [ClaimBatch](#ClaimBatch) event\r\n\r\nSCHOULD throw if any of the token _ids lost validity\r\n\r\nMUST emit [TransferBatch](https://github.com/ethereum/EIPs/issues/1155) upon successful token burning\r\n\r\nMUST emit [ClaimBatch](#ClaimBatch) upon successful token burning\r\n\r\n```solidity\r\nfunction safeBatchTransferAndClaimFrom(\r\n    address _from,\r\n    address _to,\r\n    uint256[] calldata _ids,\r\n    uint256[] calldata _values,\r\n    bytes calldata _data,\r\n    bytes[] calldata _claimData\r\n) external;\r\n```\r\n\r\n### getCertifiate\r\nReturns a certificate by `_id`\r\n\r\n```solidity\r\nfunction getCertificate(uint256 _id) public view\r\n    returns (\r\n        address issuer,\r\n        uint256 topic,\r\n        bytes memory validityCall,\r\n        bytes memory data\r\n    ):\r\n```\r\n\r\n### claimedBalanceOf\r\nReturns an `_owner`'s claimed balance by `_id`.\r\n\r\n```solidity\r\nfunction claimedBalanceOf(\r\n    address _owner, \r\n    uint256 _id\r\n) external  view returns (uint256);\r\n```\r\n### claimedBalanceOfBatch\r\nReturns an array of `_owners[i]`'s claimed balance by `_ids[i]`.\r\n\r\n```solidity\r\nfunction claimedBalanceOfBatch(\r\n    address[] calldata _owners,\r\n    uint256[] calldata _ids\r\n) external view returns (uint256[] memory);\r\n```\r\n### Events\r\n\r\n#### IssuanceSingle\r\n\r\nMUST be triggered when certificate was successfully created.\r\n\r\n`_issuer` MUST be `msg.sender` \r\n\r\n```solidity\r\nevent IssuanceSingle(\r\n    address indexed _issuer, // msg.sender\r\n    uint256 indexed _topic,\r\n    uint256 _id,\r\n    uint256 _value\r\n);\r\n```\r\n\r\n#### IssuanceBatch\r\nMUST be triggered when certificate batch was successfully created.\r\n\r\n`_issuer` MUST be `msg.sender` \r\n\r\n```solidity\r\nevent IssuanceBatch(\r\n    address indexed _issuer, // msg.sender\r\n    uint256[] indexed _topics,\r\n    uint256[] _ids,\r\n    uint256[] _values\r\n);\r\n```\r\n\r\n#### ClaimSingle\r\nEither ClaimSingle or ClaimBatch MUST be emitted when certificates are claimed.\r\n\r\n`_claimIssuer` MUST be initial owner of the certificate (`_from` address in safeTransferAndClaimFrom) \r\n\r\n`_claimData` CAN contain additional data with format specified by certificate `topic`\r\n\r\n```solidity\r\n   event ClaimSingle(\r\n       address indexed _claimIssuer,\r\n       address indexed _claimSubject,\r\n       uint256 indexed _topic,\r\n       uint256 _id,\r\n       uint256 _value,\r\n       bytes _claimData\r\n   );\r\n```\r\n\r\n#### ClaimBatch\r\nEither ClaimSingle or ClaimBatch MUST be emitted when certificates are claimed.\r\n\r\n`_claimIssuer` MUST be initial owner of the certificate (`_from` address in safeBatchTransferAndClaimFrom) \r\n\r\n`_claimData` CAN contain additional data with format specified by certificate `topics[i]`\r\n\r\n```solidity\r\n   event ClaimBatch(\r\n       address indexed _claimIssuer,\r\n       address indexed _claimSubject,\r\n       uint256[] indexed _topics,\r\n       uint256[] _ids,\r\n       uint256[] _values,\r\n       bytes[] _claimData\r\n   );\r\n```\r\n\r\n## Rationale\r\n\r\n`uri` is already part of ERC-1155 therefore it has been omitted from the certificate specification\r\n\r\n## Solidity Interface\r\n\r\n```solidity\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.4;\r\n\r\ninterface ERC1888 /* is ERC1155 */{\r\n   event IssuanceSingle(address indexed _issuer, uint256 indexed _topic, uint256 _id, uint256 _value);\r\n   event IssuanceBatch(address indexed _issuer, uint256[] indexed _topics, uint256[] _ids, uint256[] _values);\r\n   \r\n   event ClaimSingle(address indexed _claimIssuer, address indexed _claimSubject, uint256 indexed _topic, uint256 _id, uint256 _value, bytes _claimData);\r\n   event ClaimBatch(address indexed _claimIssuer, address indexed _claimSubject, uint256[] indexed _topics, uint256[] _ids, uint256[] _values, bytes[] _claimData);\r\n   \r\n   function issue(address _to, bytes calldata _validityData, uint256 _topic, uint256 _value, bytes calldata _data) external returns (uint256 id);\r\n   function batchIssue(address _to, bytes[] calldata _validityData, uint256[] calldata _topics, uint256[] calldata _values, bytes[] calldata _data) external returns (uint256[] memory ids);\r\n   \r\n   function safeTransferAndClaimFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data, bytes calldata _claimData) external;\r\n   function safeBatchTransferAndClaimFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data, bytes[] calldata _claimData) external;\r\n\r\n   function getCertificate(uint256 _id) public view returns (address issuer, uint256 topic, bytes memory validityCall, bytes memory data);\r\n   function claimedBalanceOf(address _owner, uint256 _id) external view returns (uint256);\r\n   function claimedBalanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory);\r\n\r\n}\r\n```\r\n\r\n## References\r\n\r\n### Articles & Discussions\r\n- [Flexidao: Article on lack of ultimate trust in meter data](https://blog.flexidao.com/dont-trust-energy-data-oracles/)\r\n- [FabianVogelsteller: Slides of the ERC Identity presentation](https://www.slideshare.net/FabianVogelsteller/erc-725-identity)\r\n\r\n### Standards\r\n- [ERC1155 - Multi Token Standard](https://github.com/ethereum/EIPs/issues/1155)\r\n- [ERC735 - Claim Holder](https://github.com/ethereum/EIPs/issues/735)\r\n- [RFC 2119 Key words for use in RFCs to Indicate Requirement Levels](https://www.ietf.org/rfc/rfc2119.txt)\r\n\r\n### Implementations\r\n- [Flexidao's Imlementation](https://bitbucket.org/flexidao/sc-1888/src/master/)\r\n- [EWF's Imlementation](https://github.com/energywebfoundation/origin/blob/master/packages/traceability/issuer/contracts/Registry.sol)\r\n- [ERC-1155 Reference Implementation](https://github.com/enjin/erc-1155/)\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).\r\n",
  "closed_by": {
    "login": "MicahZoltu",
    "id": 886059,
    "node_id": "MDQ6VXNlcjg4NjA1OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MicahZoltu",
    "html_url": "https://github.com/MicahZoltu",
    "followers_url": "https://api.github.com/users/MicahZoltu/followers",
    "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
    "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
    "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
    "repos_url": "https://api.github.com/users/MicahZoltu/repos",
    "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/1888/reactions",
    "total_count": 5,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 5,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/1888/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/491502867",
    "html_url": "https://github.com/ethereum/EIPs/issues/1888#issuecomment-491502867",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1888",
    "id": 491502867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTUwMjg2Nw==",
    "user": {
      "login": "XanderXioMvB",
      "id": 49474721,
      "node_id": "MDQ6VXNlcjQ5NDc0NzIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/49474721?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/XanderXioMvB",
      "html_url": "https://github.com/XanderXioMvB",
      "followers_url": "https://api.github.com/users/XanderXioMvB/followers",
      "following_url": "https://api.github.com/users/XanderXioMvB/following{/other_user}",
      "gists_url": "https://api.github.com/users/XanderXioMvB/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/XanderXioMvB/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/XanderXioMvB/subscriptions",
      "organizations_url": "https://api.github.com/users/XanderXioMvB/orgs",
      "repos_url": "https://api.github.com/users/XanderXioMvB/repos",
      "events_url": "https://api.github.com/users/XanderXioMvB/events{/privacy}",
      "received_events_url": "https://api.github.com/users/XanderXioMvB/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-11T11:25:14Z",
    "updated_at": "2019-05-11T11:26:37Z",
    "author_association": "NONE",
    "body": "So I could potentially lend one of my tokens to somebody, and then call it back to my wallet, for example renting out a sword for a set amount of time for an X amount of funds, the person renting the item knows they will have the item until the contract completes and I know I will get it back exactly when I should guaranteed or am I not understanding this correctly?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/491502867/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/492217492",
    "html_url": "https://github.com/ethereum/EIPs/issues/1888#issuecomment-492217492",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1888",
    "id": 492217492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjIxNzQ5Mg==",
    "user": {
      "login": "greg-flexidao",
      "id": 11168838,
      "node_id": "MDQ6VXNlcjExMTY4ODM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11168838?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/greg-flexidao",
      "html_url": "https://github.com/greg-flexidao",
      "followers_url": "https://api.github.com/users/greg-flexidao/followers",
      "following_url": "https://api.github.com/users/greg-flexidao/following{/other_user}",
      "gists_url": "https://api.github.com/users/greg-flexidao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/greg-flexidao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/greg-flexidao/subscriptions",
      "organizations_url": "https://api.github.com/users/greg-flexidao/orgs",
      "repos_url": "https://api.github.com/users/greg-flexidao/repos",
      "events_url": "https://api.github.com/users/greg-flexidao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/greg-flexidao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-14T12:31:59Z",
    "updated_at": "2019-05-14T12:31:59Z",
    "author_association": "NONE",
    "body": "@XanderXioMvB : it more allows for revoking the validity of the token issued (a sword), which can be done on a pre-defined condition (lend time) in a transparent smart contract. You would not be in control of the token once you transfer it out, yet the game could potentially implement a simple mechanism to issue a new token (a sword) with pre-defined validity to be able to lend it to someone, keeping your sward as a deposit. After the lending time has passed the lend token would lose its validity and you could get your sword back from the deposit.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/492217492/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/565071782",
    "html_url": "https://github.com/ethereum/EIPs/issues/1888#issuecomment-565071782",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1888",
    "id": 565071782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTA3MTc4Mg==",
    "user": {
      "login": "kosecki123",
      "id": 5417665,
      "node_id": "MDQ6VXNlcjU0MTc2NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5417665?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kosecki123",
      "html_url": "https://github.com/kosecki123",
      "followers_url": "https://api.github.com/users/kosecki123/followers",
      "following_url": "https://api.github.com/users/kosecki123/following{/other_user}",
      "gists_url": "https://api.github.com/users/kosecki123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kosecki123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kosecki123/subscriptions",
      "organizations_url": "https://api.github.com/users/kosecki123/orgs",
      "repos_url": "https://api.github.com/users/kosecki123/repos",
      "events_url": "https://api.github.com/users/kosecki123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kosecki123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-12T16:06:51Z",
    "updated_at": "2019-12-12T16:06:51Z",
    "author_association": "NONE",
    "body": "@bytniak what is the purpose of `_claimSubject` in ClaimSingle and ClaimBatch events?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/565071782/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/565465748",
    "html_url": "https://github.com/ethereum/EIPs/issues/1888#issuecomment-565465748",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1888",
    "id": 565465748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTQ2NTc0OA==",
    "user": {
      "login": "greg-flexidao",
      "id": 11168838,
      "node_id": "MDQ6VXNlcjExMTY4ODM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11168838?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/greg-flexidao",
      "html_url": "https://github.com/greg-flexidao",
      "followers_url": "https://api.github.com/users/greg-flexidao/followers",
      "following_url": "https://api.github.com/users/greg-flexidao/following{/other_user}",
      "gists_url": "https://api.github.com/users/greg-flexidao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/greg-flexidao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/greg-flexidao/subscriptions",
      "organizations_url": "https://api.github.com/users/greg-flexidao/orgs",
      "repos_url": "https://api.github.com/users/greg-flexidao/repos",
      "events_url": "https://api.github.com/users/greg-flexidao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/greg-flexidao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-13T14:42:46Z",
    "updated_at": "2019-12-13T14:42:46Z",
    "author_association": "NONE",
    "body": "Thanks for noticing @kosecki123 ! I updated the description. In general `_claimSubject` == `_to`, so for whom/what you are claiming this certificate. `_claimSubject` and `_claimIssuer` are named on purpose differently (they equal to`_to`,`_from` respectively) to differentiate the transfer arguments and the claim arguments as they are logically different operations. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/565465748/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/626704378",
    "html_url": "https://github.com/ethereum/EIPs/issues/1888#issuecomment-626704378",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1888",
    "id": 626704378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjcwNDM3OA==",
    "user": {
      "login": "josipbagaric",
      "id": 9353642,
      "node_id": "MDQ6VXNlcjkzNTM2NDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9353642?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josipbagaric",
      "html_url": "https://github.com/josipbagaric",
      "followers_url": "https://api.github.com/users/josipbagaric/followers",
      "following_url": "https://api.github.com/users/josipbagaric/following{/other_user}",
      "gists_url": "https://api.github.com/users/josipbagaric/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josipbagaric/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josipbagaric/subscriptions",
      "organizations_url": "https://api.github.com/users/josipbagaric/orgs",
      "repos_url": "https://api.github.com/users/josipbagaric/repos",
      "events_url": "https://api.github.com/users/josipbagaric/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josipbagaric/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-11T13:33:08Z",
    "updated_at": "2020-05-11T13:34:21Z",
    "author_association": "NONE",
    "body": "Hi @bytniak,\r\n\r\nIs there a reason `_claimData` is of type `bytes32` while certificate data is of type `bytes`?\r\n\r\nI'd like to store more than 32 bytes as `_claimData`, so I'm curious if this is an arbitrary restriction that we could lift.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/626704378/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/626712303",
    "html_url": "https://github.com/ethereum/EIPs/issues/1888#issuecomment-626712303",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1888",
    "id": 626712303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjcxMjMwMw==",
    "user": {
      "login": "greg-flexidao",
      "id": 11168838,
      "node_id": "MDQ6VXNlcjExMTY4ODM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11168838?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/greg-flexidao",
      "html_url": "https://github.com/greg-flexidao",
      "followers_url": "https://api.github.com/users/greg-flexidao/followers",
      "following_url": "https://api.github.com/users/greg-flexidao/following{/other_user}",
      "gists_url": "https://api.github.com/users/greg-flexidao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/greg-flexidao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/greg-flexidao/subscriptions",
      "organizations_url": "https://api.github.com/users/greg-flexidao/orgs",
      "repos_url": "https://api.github.com/users/greg-flexidao/repos",
      "events_url": "https://api.github.com/users/greg-flexidao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/greg-flexidao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-11T13:47:11Z",
    "updated_at": "2020-05-11T13:47:11Z",
    "author_association": "NONE",
    "body": "Hi @JosephBagaric ,\r\nas from ABIEncoderV2 `bytes[]` are supported for the batch calls, I don't think there is reason to keep _claimData as bytes32 instead of bytes.\r\nWe can therefore also \"unlock\" the batchIssue function!\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/626712303/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/627370440",
    "html_url": "https://github.com/ethereum/EIPs/issues/1888#issuecomment-627370440",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1888",
    "id": 627370440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNzM3MDQ0MA==",
    "user": {
      "login": "kosecki123",
      "id": 5417665,
      "node_id": "MDQ6VXNlcjU0MTc2NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5417665?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kosecki123",
      "html_url": "https://github.com/kosecki123",
      "followers_url": "https://api.github.com/users/kosecki123/followers",
      "following_url": "https://api.github.com/users/kosecki123/following{/other_user}",
      "gists_url": "https://api.github.com/users/kosecki123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kosecki123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kosecki123/subscriptions",
      "organizations_url": "https://api.github.com/users/kosecki123/orgs",
      "repos_url": "https://api.github.com/users/kosecki123/repos",
      "events_url": "https://api.github.com/users/kosecki123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kosecki123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-12T14:10:37Z",
    "updated_at": "2020-05-12T14:10:37Z",
    "author_association": "NONE",
    "body": "@bytniak we run into this problem with `claimData` https://github.com/energywebfoundation/origin/pull/1006/files#r423763681\r\n\r\nI think the easiest way to overcome that would be to make `id` field in the ClaimSingle event as indexed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/627370440/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/647671170",
    "html_url": "https://github.com/ethereum/EIPs/issues/1888#issuecomment-647671170",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1888",
    "id": 647671170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzY3MTE3MA==",
    "user": {
      "login": "KaddieIII",
      "id": 28227335,
      "node_id": "MDQ6VXNlcjI4MjI3MzM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/28227335?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KaddieIII",
      "html_url": "https://github.com/KaddieIII",
      "followers_url": "https://api.github.com/users/KaddieIII/followers",
      "following_url": "https://api.github.com/users/KaddieIII/following{/other_user}",
      "gists_url": "https://api.github.com/users/KaddieIII/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KaddieIII/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KaddieIII/subscriptions",
      "organizations_url": "https://api.github.com/users/KaddieIII/orgs",
      "repos_url": "https://api.github.com/users/KaddieIII/repos",
      "events_url": "https://api.github.com/users/KaddieIII/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KaddieIII/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-22T17:30:49Z",
    "updated_at": "2020-06-22T17:30:49Z",
    "author_association": "NONE",
    "body": "Is there any kind of paper that shows the different topics and data formats? Could someone define his own topic and data format?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/647671170/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/648972660",
    "html_url": "https://github.com/ethereum/EIPs/issues/1888#issuecomment-648972660",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1888",
    "id": 648972660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODk3MjY2MA==",
    "user": {
      "login": "greg-flexidao",
      "id": 11168838,
      "node_id": "MDQ6VXNlcjExMTY4ODM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11168838?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/greg-flexidao",
      "html_url": "https://github.com/greg-flexidao",
      "followers_url": "https://api.github.com/users/greg-flexidao/followers",
      "following_url": "https://api.github.com/users/greg-flexidao/following{/other_user}",
      "gists_url": "https://api.github.com/users/greg-flexidao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/greg-flexidao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/greg-flexidao/subscriptions",
      "organizations_url": "https://api.github.com/users/greg-flexidao/orgs",
      "repos_url": "https://api.github.com/users/greg-flexidao/repos",
      "events_url": "https://api.github.com/users/greg-flexidao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/greg-flexidao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-24T17:53:36Z",
    "updated_at": "2020-06-24T17:54:29Z",
    "author_association": "NONE",
    "body": "@kosecki123 @JosephBagaric the `id` filed cannot be changed only in ClaimSingle, we would have to change it also in ClaimBatch and this in turn imposes another issue... If you make array of ids `indexed` then the indexed value is a hash of the array and not the value of each id in the array. I think this is the same reason why in underlying erc1155 the `ids` are not indexed too.\r\n\r\n@KaddieIII there is no reference to topics and data formats at the moment anyone can define his own topics and data formats. This could be subject to standardization at the later stage.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/648972660/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/861258803",
    "html_url": "https://github.com/ethereum/EIPs/issues/1888#issuecomment-861258803",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1888",
    "id": 861258803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MTI1ODgwMw==",
    "user": {
      "login": "josipbagaric",
      "id": 9353642,
      "node_id": "MDQ6VXNlcjkzNTM2NDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9353642?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josipbagaric",
      "html_url": "https://github.com/josipbagaric",
      "followers_url": "https://api.github.com/users/josipbagaric/followers",
      "following_url": "https://api.github.com/users/josipbagaric/following{/other_user}",
      "gists_url": "https://api.github.com/users/josipbagaric/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josipbagaric/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josipbagaric/subscriptions",
      "organizations_url": "https://api.github.com/users/josipbagaric/orgs",
      "repos_url": "https://api.github.com/users/josipbagaric/repos",
      "events_url": "https://api.github.com/users/josipbagaric/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josipbagaric/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-15T07:33:19Z",
    "updated_at": "2021-06-15T07:33:19Z",
    "author_association": "NONE",
    "body": "@bytniak Has there been an update of the interface to the latest solidity ^0.8.0?\r\nI've been looking at implementing the `batchIssue` functionality, and I have some questions about the interface:\r\n\r\n```solidity\r\nfunction batchIssue(bytes[] _data, uint256[] _topics, uint256[] _value, bytes32[] _signatures) external returns(uint256[]);\r\n```\r\n\r\n1. What would we store as the `_signatures`?\r\n2. The interface doesn't define a `_to` address(es) for issuance.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/861258803/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/867513199",
    "html_url": "https://github.com/ethereum/EIPs/issues/1888#issuecomment-867513199",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1888",
    "id": 867513199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NzUxMzE5OQ==",
    "user": {
      "login": "greg-flexidao",
      "id": 11168838,
      "node_id": "MDQ6VXNlcjExMTY4ODM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11168838?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/greg-flexidao",
      "html_url": "https://github.com/greg-flexidao",
      "followers_url": "https://api.github.com/users/greg-flexidao/followers",
      "following_url": "https://api.github.com/users/greg-flexidao/following{/other_user}",
      "gists_url": "https://api.github.com/users/greg-flexidao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/greg-flexidao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/greg-flexidao/subscriptions",
      "organizations_url": "https://api.github.com/users/greg-flexidao/orgs",
      "repos_url": "https://api.github.com/users/greg-flexidao/repos",
      "events_url": "https://api.github.com/users/greg-flexidao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/greg-flexidao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-24T10:08:03Z",
    "updated_at": "2021-06-24T10:08:03Z",
    "author_association": "NONE",
    "body": "The spec has been updated based on your comments. @JosephBagaric  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/867513199/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/869516289",
    "html_url": "https://github.com/ethereum/EIPs/issues/1888#issuecomment-869516289",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1888",
    "id": 869516289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2OTUxNjI4OQ==",
    "user": {
      "login": "josipbagaric",
      "id": 9353642,
      "node_id": "MDQ6VXNlcjkzNTM2NDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9353642?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josipbagaric",
      "html_url": "https://github.com/josipbagaric",
      "followers_url": "https://api.github.com/users/josipbagaric/followers",
      "following_url": "https://api.github.com/users/josipbagaric/following{/other_user}",
      "gists_url": "https://api.github.com/users/josipbagaric/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josipbagaric/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josipbagaric/subscriptions",
      "organizations_url": "https://api.github.com/users/josipbagaric/orgs",
      "repos_url": "https://api.github.com/users/josipbagaric/repos",
      "events_url": "https://api.github.com/users/josipbagaric/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josipbagaric/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-28T09:12:56Z",
    "updated_at": "2021-06-28T09:12:56Z",
    "author_association": "NONE",
    "body": "Thanks @bytniak. I've updated our contracts to the latest spec interface and solc complained about the following:\r\n\r\n1. In `batchIssue()` the return array is missing the storage type. I suggest to change it to:\r\n```solidity\r\nfunction batchIssue(...) external returns (uint256[] memory ids);\r\n```\r\n\r\n2. In `getCertificate()` the return types are `calldata` but solc only accepts calldata when used in function params and not return types. I suggest we change it from `calldata` to `memory`:\r\n```solidity\r\nfunction getCertificate(uint256 _id) external view returns (address issuer, uint256 topic, bytes memory validityCall, bytes memory data);\r\n```\r\n\r\n3. Also, I've noticed a typo in `batchIssue`. Return variable name is `_ids` in the interface but `ids` in the spec. I suggest we just use `ids` in both.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/869516289/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/869546465",
    "html_url": "https://github.com/ethereum/EIPs/issues/1888#issuecomment-869546465",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1888",
    "id": 869546465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2OTU0NjQ2NQ==",
    "user": {
      "login": "greg-flexidao",
      "id": 11168838,
      "node_id": "MDQ6VXNlcjExMTY4ODM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11168838?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/greg-flexidao",
      "html_url": "https://github.com/greg-flexidao",
      "followers_url": "https://api.github.com/users/greg-flexidao/followers",
      "following_url": "https://api.github.com/users/greg-flexidao/following{/other_user}",
      "gists_url": "https://api.github.com/users/greg-flexidao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/greg-flexidao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/greg-flexidao/subscriptions",
      "organizations_url": "https://api.github.com/users/greg-flexidao/orgs",
      "repos_url": "https://api.github.com/users/greg-flexidao/repos",
      "events_url": "https://api.github.com/users/greg-flexidao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/greg-flexidao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-28T09:55:52Z",
    "updated_at": "2021-06-28T09:55:52Z",
    "author_association": "NONE",
    "body": "Thanks @JosephBagaric! All the points has been fixed. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/869546465/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/869580582",
    "html_url": "https://github.com/ethereum/EIPs/issues/1888#issuecomment-869580582",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1888",
    "id": 869580582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2OTU4MDU4Mg==",
    "user": {
      "login": "josipbagaric",
      "id": 9353642,
      "node_id": "MDQ6VXNlcjkzNTM2NDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9353642?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josipbagaric",
      "html_url": "https://github.com/josipbagaric",
      "followers_url": "https://api.github.com/users/josipbagaric/followers",
      "following_url": "https://api.github.com/users/josipbagaric/following{/other_user}",
      "gists_url": "https://api.github.com/users/josipbagaric/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josipbagaric/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josipbagaric/subscriptions",
      "organizations_url": "https://api.github.com/users/josipbagaric/orgs",
      "repos_url": "https://api.github.com/users/josipbagaric/repos",
      "events_url": "https://api.github.com/users/josipbagaric/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josipbagaric/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-28T10:48:45Z",
    "updated_at": "2021-06-28T10:48:45Z",
    "author_association": "NONE",
    "body": "Thanks @bytniak, this looks great and works great in our codebase. :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/869580582/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/962488482",
    "html_url": "https://github.com/ethereum/EIPs/issues/1888#issuecomment-962488482",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1888",
    "id": 962488482,
    "node_id": "IC_kwDOAq426M45Xmii",
    "user": {
      "login": "Julian-dev28",
      "id": 73849597,
      "node_id": "MDQ6VXNlcjczODQ5NTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73849597?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Julian-dev28",
      "html_url": "https://github.com/Julian-dev28",
      "followers_url": "https://api.github.com/users/Julian-dev28/followers",
      "following_url": "https://api.github.com/users/Julian-dev28/following{/other_user}",
      "gists_url": "https://api.github.com/users/Julian-dev28/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Julian-dev28/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Julian-dev28/subscriptions",
      "organizations_url": "https://api.github.com/users/Julian-dev28/orgs",
      "repos_url": "https://api.github.com/users/Julian-dev28/repos",
      "events_url": "https://api.github.com/users/Julian-dev28/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Julian-dev28/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-06T18:04:08Z",
    "updated_at": "2021-11-06T18:04:08Z",
    "author_association": "NONE",
    "body": "Hello Is there a repo with an ERC-1888.sol example?\r\n\r\nThank you",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/962488482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/962509045",
    "html_url": "https://github.com/ethereum/EIPs/issues/1888#issuecomment-962509045",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1888",
    "id": 962509045,
    "node_id": "IC_kwDOAq426M45Xrj1",
    "user": {
      "login": "josipbagaric",
      "id": 9353642,
      "node_id": "MDQ6VXNlcjkzNTM2NDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9353642?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josipbagaric",
      "html_url": "https://github.com/josipbagaric",
      "followers_url": "https://api.github.com/users/josipbagaric/followers",
      "following_url": "https://api.github.com/users/josipbagaric/following{/other_user}",
      "gists_url": "https://api.github.com/users/josipbagaric/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josipbagaric/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josipbagaric/subscriptions",
      "organizations_url": "https://api.github.com/users/josipbagaric/orgs",
      "repos_url": "https://api.github.com/users/josipbagaric/repos",
      "events_url": "https://api.github.com/users/josipbagaric/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josipbagaric/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-06T20:58:15Z",
    "updated_at": "2021-11-06T20:58:15Z",
    "author_association": "NONE",
    "body": "> Hello Is there a repo with an ERC-1888.sol example?\n> \n> \n> \n> Thank you\n\nSure. We have an audited ERC-1888 implementation at Energy Web Foundation:\n\nhttps://github.com/energywebfoundation/origin/blob/master/packages/traceability/issuer/contracts/Registry.sol",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/962509045/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1152871679",
    "html_url": "https://github.com/ethereum/EIPs/issues/1888#issuecomment-1152871679",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1888",
    "id": 1152871679,
    "node_id": "IC_kwDOAq426M5Et2z_",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-11T07:09:39Z",
    "updated_at": "2022-06-11T07:09:39Z",
    "author_association": "MEMBER",
    "body": "Closing this issue for housekeeping purposes. People are welcome to continue discussing in this thread, but for additional visibility an EIP should be created or the conversation should be migrated to https://ethereum-magicians.org/",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1152871679/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
