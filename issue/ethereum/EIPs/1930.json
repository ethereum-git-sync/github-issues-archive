{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/1930",
  "id": 431343261,
  "node_id": "MDU6SXNzdWU0MzEzNDMyNjE=",
  "number": 1930,
  "title": "EIP-1930: call variant with strict gas to ensure a specific amount is sent",
  "user": {
    "login": "wighawag",
    "id": 790580,
    "node_id": "MDQ6VXNlcjc5MDU4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wighawag",
    "html_url": "https://github.com/wighawag",
    "followers_url": "https://api.github.com/users/wighawag/followers",
    "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
    "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
    "organizations_url": "https://api.github.com/users/wighawag/orgs",
    "repos_url": "https://api.github.com/users/wighawag/repos",
    "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wighawag/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 25,
  "created_at": "2019-04-10T07:22:19Z",
  "updated_at": "2022-05-28T05:12:25Z",
  "closed_at": "2022-05-28T05:12:24Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## EIP : https://eips.ethereum.org/EIPS/eip-1930\r\n\r\n---\r\neip: 1930\r\ntitle: CALLs with strict gas semantic. Revert if not enough gas available.\r\nauthor: Ronan Sandford (@wighawag)\r\ntype: Standards Track\r\ndiscussions-to: https://github.com/ethereum/EIPs/issues/1930\r\ncategory: Core\r\nstatus: Draft\r\ncreated: 2019-04-10\r\n---\r\n\r\n## Simple Summary\r\n\r\nAdd the ability for smart contract to execute calls with a specific amount of gas. If this is not possible the execution should revert.\r\n\r\n## Abstract\r\n\r\nThe current CALL, DELEGATE_CALL, STATIC_CALL opcode do not enforce the gas being sent, they simply consider the gas value as a maximum. This pose serious problem for applications that require the call to be executed with a precise amount of gas. \r\n\r\nThis is for example the case for meta-transaction where the contract needs to ensure the call is executed exactly as the signing user intended. \r\n\r\nBut this is also the case for common use cases, like checking \"on-chain\" if a smart contract support a specific interface (via [EIP-165](http://eips.ethereum.org/EIPS/eip-165) for example).\r\n\r\nThe solution presented here is to add new call semantic that enforce the amount of gas specified : the call either proceed with the exact amount of gas or do not get executed and the current call revert.\r\n\r\n\r\n### Specification\r\n\r\nThere are 2 possibilities\r\n\r\na) one is to add opcode variant that have a stricter gas semantic\r\n\r\nb) The other is to consider a specific gas value range (one that have never been used before) to have strict gas semantic, while leaving other values as before\r\n\r\nHere are the details description\r\n\r\n#### option a)\r\n\r\n- add a new variant of the CALL opcode where the gas specified is enforced so that if the gas left at the point of call is not enough to give the specified gas to the destination, the current call revert\r\n- add a new variant of the DELEGATE_CALL opcode where the gas specified is enforced so that if the gas left at the point of call is not enough to give the specified gas to the destination, the current call revert\r\n- add a new variant of the STATIC_CALL opcode where the gas specified is enforced so that if the gas left at the point of call is not enough to give the specified gas to the destination, the current call revert\r\n\r\n##### Rational for a)\r\nThis solution has the merit to avoid any possibility of old contract be affected by the change. On the other hand it introduce 3 new opcodes. With EIP-1702, we could render the old opcode obsolete though. \r\n\r\n#### option b)\r\n\r\nFor all opcode that allow to pass gas to another contract, do the following:\r\n- If the most significant bit is one, consider the 31 less significant bit as the amount of gas to be given to the receiving contract in the strict sense. SO like a) if the gas left at the point of call is not enough to give the specified gas to the destination, the current call revert.\r\n- If the 2nd most significant bit is zero, consider the whole value to behave like before, that is, it act as a maximum value, and even if not enough gas is present, the gas that can be given is given to the receiving contract \r\n\r\n##### Rational for b)\r\nThis solution relies on the fact that no contract would have given any value bigger or equal to 0x8000000000000000000000000000000000000000000000000000000000000000\r\n\r\nNote that solidity for example do not use value like 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF as it is more expensive than passing the gasLeft.\r\n\r\nIts main benefit though is that it does not require extra opcodes.\r\n\r\n#### strict gas semantic\r\n\r\nTo be precise, regarding the strict gas semantic, based on [EIP-150](http://eips.ethereum.org/EIPS/eip-150), the current call must revert unless G >= I x 64/63 where G is gas left at the point of call (after deducing the cost of the call itself) and I is the gas specified.\r\n\r\nSo instead of\r\n```\r\navailableGas = availableGas - base\r\ngas := availableGas - availableGas/64\r\n...\r\nif !callCost.IsUint64() || gas < callCost.Uint64() {\r\n    return gas, nil\r\n}\r\n```\r\nsee https://github.com/ethereum/go-ethereum/blob/7504dbd6eb3f62371f86b06b03ffd665690951f2/core/vm/gas.go#L41-L48\r\n\r\nwe would have\r\n```\r\navailableGas = availableGas - base\r\ngas := availableGas - availableGas/64\r\nif !callCost.IsUint64() || gas < callCost.Uint64() {\r\n    return 0, errNotEnoughGas\r\n}\r\n```\r\n\r\n### Rationale\r\n\r\nCurrently the gas specified as part of these opcodes is simply a maximum value. And due to the behavior of [EIP-150](http://eips.ethereum.org/EIPS/eip-150) it is possible for an external call to be given less gas than intended (less than the gas specified as part of the CALL) while the rest of the current call is given enough to continue and succeed. Indeed since with EIP-150, the external call is given at max  ```G - Math.floor(G/64)``` where G is the gasleft() at the point of the CALL, the rest of the current call is given ```Math.floor(G/64)``` which can be plenty enough for the transaction to succeed. For example, when G = 6,400,000 the rest of the transaction will be given 100,000 gas plenty enough in many case to succeed.\r\n\r\nThis is an issue for contracts that require external call to only fails if they would fails with enough gas. This requirement is present in smart contract wallet and meta transaction in general, where the one executing the transaction is not the signer of the execution data. Because in such case, the contract needs to ensure the call is executed exactly as the signing user intended.\r\n\r\nBut this is also true for simple use case, like checking if a contract implement an interface via EIP-165. Indeed as specified by such EIP, the ```supporstInterface``` method is bounded to use 30,000 gas so that it is theorically possible to ensure that the throw is not a result of a lack of gas. Unfortunately due to how the different CALL opcodes behave contracts can't simply rely on the gas value specified. They have to ensure by other means that there is enough gas for the call.\r\n\r\nIndeed, if the caller do not ensure that 30,000 gas or more is provided to the callee, the callee might throw because of a lack of gas (and not because it does not support the interface), and the parent call will be given up to 476 gas to continue. This would result in the caller interepreting wrongly that the callee is not implementing the interface in question. \r\n\r\nWhile such requirement can be enforced by checking the gas left according to EIP-150 and the precise gas required before the call (see solution presented in that [bug report](https://web.solidified.io/contract/5b4769b1e6c0d80014f3ea4e/bug/5c83d86ac2dd6600116381f9) or after the call (see the native meta transaction implementation [here](https://github.com/pixowl/thesandbox-contracts/blob/623f4d4ca10644dcee145bcbd9296579a1543d3d/src/Sand/erc20/ERC20MetaTxExtension.sol#L176), it would be much better if the EVM allowed us to strictly specify how much gas is to be given to the CALL so contract implementations do not need to follow [EIP-150](http://eips.ethereum.org/EIPS/eip-150) behavior and the current gas pricing so closely.\r\n\r\nThis would also allow the behaviour of [EIP-150](http://eips.ethereum.org/EIPS/eip-150) to be changed without having to affect contract that require this strict gas behaviour.\r\n\r\nAs mentioned, such strict gas behaviour is important for smart contract wallet and meta transaction in general.\r\nThe issue is actually already a problem in the wild as can be seen in the case of Gnosis safe which did not consider the behavior of EIP-150 and thus fails to check the gas properly, requiring the safe owners to add otherwise unnecessary extra gas to their signed message to avoid the possibility of losing funds. See https://github.com/gnosis/safe-contracts/issues/100\r\n\r\nAs for EIP-165, the issue already exists in the example implementation presented in the EIP. Please see the details of the issue [here](https://github.com/ethereum/EIPs/pull/881#issuecomment-491677748)\r\n\r\nThe same issue exists also on OpenZeppelin implementation, a library used by many. It does not for perform any check on gas before calling ```supportsInterface``` with 30,000 gas (see [here](https://github.com/OpenZeppelin/openzeppelin-solidity/blob/fa004a7f5de572b3dbcde1a8a81f9a87e353e799/contracts/introspection/ERC165Checker.sol#L37) and is thus vulnerable to the issue mentioned.\r\n\r\n\r\nWhile such issue can be prevented today by checking the gas with EIP-150 in mind, a solution at the opcode level is more elegant.\r\n\r\nIndeed, the two possible ways to currently enforce that the correct amount of gas is sent are as follow :\r\n\r\n1) check done before the call \r\n\r\n```\r\nuint256 gasAvailable = gasleft() - E;\r\nrequire(gasAvailable - gasAvailable / 64  >= `txGas`, \"not enough gas provided\")\r\nto.call.gas(txGas)(data); // CALL\r\n```\r\nwhere E is the gas required for the operation between the call to ```gasleft()``` and the actual call PLUS the gas cost of the call itself.\r\nWhile it is possible to simply over estimate ```E``` to prevent call to be executed if not enough gas is provided to the current call it would be better to have the EVM do the precise work itself. As gas pricing continue to evolve, this is important to have a mechanism to ensure a specific amount of gas is passed to the call so such mechanism can be used without having to relies on a specific gas pricing.\r\n\r\n\r\n2) check done after the call:\r\n\r\n```\r\nto.call.gas(txGas)(data); // CALL\r\nrequire(gasleft() > txGas / 63, \"not enough gas left\");\r\n```\r\nThis solution does not require to compute a ```E``` value and thus do not relies on a specific gas pricing (except for the behaviour of EIP-150) since if the call is given not enough gas and fails for that reason, the condition above will always fail, ensuring the current call will revert.\r\nBut this check still pass if the gas given was less AND the external call reverted or succeeded EARLY (so that the gas left after the call > txGas / 63).\r\nThis can be an issue if the code executed as part of the CALL is reverting as a result of a check against the gas provided. Like a meta transaction in a meta transaction.\r\n\r\nSimilarly to the the previous solution, an EVM mechanism would be much better.\r\n\r\n## Backwards Compatibility\r\n\r\nfor specification a) : Backwards compatible as it introduce new opcodes.\r\n\r\nfor specification b) : Backwards compatible as it use value range outside of what is used by existing contract (to be verified)\r\n",
  "closed_by": {
    "login": "MicahZoltu",
    "id": 886059,
    "node_id": "MDQ6VXNlcjg4NjA1OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MicahZoltu",
    "html_url": "https://github.com/MicahZoltu",
    "followers_url": "https://api.github.com/users/MicahZoltu/followers",
    "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
    "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
    "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
    "repos_url": "https://api.github.com/users/MicahZoltu/repos",
    "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/1930/reactions",
    "total_count": 3,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 1,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/487364328",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-487364328",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 487364328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzM2NDMyOA==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-28T10:00:00Z",
    "updated_at": "2019-04-28T10:01:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "How do we get that (and in general any EIP) merged in? \r\nShould I call out maintainer like @Arachnid ?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/487364328/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/488233971",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-488233971",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 488233971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODIzMzk3MQ==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-01T08:23:10Z",
    "updated_at": "2019-05-01T08:23:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could you merge the PR @Arachnid @nicksavers @gcolvin @Souptacular?\r\nSorry if I ping the wrong person. Let me know though as I have few more PR to merge.\r\nAnd if there are any issues let me know\r\nThanks",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/488233971/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/491790150",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-491790150",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 491790150,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTc5MDE1MA==",
    "user": {
      "login": "veox",
      "id": 3036030,
      "node_id": "MDQ6VXNlcjMwMzYwMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3036030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veox",
      "html_url": "https://github.com/veox",
      "followers_url": "https://api.github.com/users/veox/followers",
      "following_url": "https://api.github.com/users/veox/following{/other_user}",
      "gists_url": "https://api.github.com/users/veox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/veox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/veox/subscriptions",
      "organizations_url": "https://api.github.com/users/veox/orgs",
      "repos_url": "https://api.github.com/users/veox/repos",
      "events_url": "https://api.github.com/users/veox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/veox/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-13T11:48:08Z",
    "updated_at": "2019-05-13T11:48:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "As I've mentioned in https://github.com/ethereum/EIPs/pull/881#issuecomment-491783676, there is no need to implement this at the EVM level.\r\n\r\nThis can be done at language level - either in the compiler, introducing new keywords for \"call with extra checks\"; or in the program, using macros or function modifiers or decorators or whatever-is-available in the language of choice.\r\n\r\nOtherwise, we'll run out of unassigned opcodes by the end of the year.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/491790150/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/491808984",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-491808984",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 491808984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTgwODk4NA==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-13T12:50:30Z",
    "updated_at": "2019-05-13T12:50:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "As mentioned in the proposal as well as in my [reply](https://github.com/ethereum/EIPs/pull/881#issuecomment-491807727)  :\r\n\r\nThese solution are not perfect (either forbid certain behavior or are susceptible to gas pricing change). They also waste gas for computing what is already computed by the evm.\r\n\r\nIdeally the version of the opcode proposed here should replace the old one.\r\n\r\nThen if you worry about opcode space, we can version the old one out when times come.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/491808984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/491970535",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-491970535",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 491970535,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTk3MDUzNQ==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-13T20:18:28Z",
    "updated_at": "2019-05-13T20:18:28Z",
    "author_association": "MEMBER",
    "body": "I agree with @veox - this is a niche requirement that can be satisfied with current opcodes. I think it's a bad idea to use up two new opcodes, and add client complexity, for it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/491970535/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/492372949",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-492372949",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 492372949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjM3Mjk0OQ==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-14T19:17:28Z",
    "updated_at": "2019-05-14T19:17:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Arachnid \r\n> this is a niche requirement ...\r\n\r\nEven if it was, I don't think this is a valid argument. \r\n\r\nBut as mentioned in the proposal this is already an issue for meta-transactions and introspection (like #165), two use-cases far from being niche.\r\n\r\nFurthermore, it is apparent that everybody assumes that the behaviour of the current CALL opcodes is to enforce the gas somehow (maybe because forgetting about EIP-150, they wrongly think there would be not enough gas to complete the transaction if the call throw because it did not receive the amount of gas specified)\r\nsee [Gnosis Safe issue](https://github.com/gnosis/safe-contracts/issues/100) for a meta-tx example and [Openzeppelin issue](https://github.com/OpenZeppelin/openzeppelin-solidity/issues/1750) or [EIP-165 example implementation](https://github.com/ethereum/EIPs/pull/881#issuecomment-491677748) for introspection.\r\n\r\n\r\n> ... that can be satisfied with current opcodes\r\n\r\nAs mentioned in the proposal, this is not trivial and it depends on gas pricing.  \r\n\r\nThis is a concern shared by @tschubotz and the rest of GnosisSafe team that decided because of this to not fix the [issue](https://github.com/gnosis/safe-contracts/issues/100) on their smart contract but to do it at the interface level, leaving unaware client on their own and at risk of making their users loose funds.\r\n\r\nBut this also shared by @chriseth in a different context when proposing #90 (which resulted in #150) where he states:\r\n\r\n> At he same time, this mechanism relies on actual gas costs inside the EVM and is very fragile:\r\n>The amount of gas left can be retrieved via the gas instruction - the problem is that some gas is already spent again between this instruction and the actual call, most notably the gas for the call instruction itself (which can even vary depending on its arguments).\r\n> The usual way to cope with this is to subtract a certain constant from the value of the gas instruction (this constant includes the costs for performing this subtraction...).\r\n> This is of course all very fragile and means that if we ever increase the gas costs of the instructions call, gas, sub or of pushing constants, we will break existing contracts.\r\n> Furthermore, sometimes some gas has to be retained by the caller because it cannot efficiently estimate how costly the call opcode itself will be.\r\n\r\nUltimately we should replace the old CALLs opcode with the ones proposed here. If space is lacking we can version smart contracts and remove old opcodes. To allow for limitless gas call (not available in the current draft) we could give the value 0 a special meaning : \"give all gas available\". This would allow to replicate the current use cases, making old opcodes obsolete.\r\n\r\nThe fear of lack of space is not warranted. It is very likely that more and more opcode will become obsolete as we discover better ways to do things. Let's accept it. When we run out of opcode space, we can start versioning smart contract and remove obsolete opcodes.\r\n\r\nFor now though, as we still have some space left, we should not block ourselves from fixing issues affecting valid use cases.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/492372949/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/492404160",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-492404160",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 492404160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjQwNDE2MA==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-14T20:49:04Z",
    "updated_at": "2019-05-14T20:49:04Z",
    "author_association": "MEMBER",
    "body": "> As mentioned in the proposal, this is not trivial and it depends on gas pricing.\r\n\r\nIt's not terribly difficult. Increasing opcode gas costs is never likely to happen, precisely because people already have this kind of dependency on it. See for instance this recent Twitter thread between Vitalik and I: https://twitter.com/VitalikButerin/status/1128076287678013442",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/492404160/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/492523117",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-492523117",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 492523117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjUyMzExNw==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-15T06:33:52Z",
    "updated_at": "2019-05-15T06:33:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Increasing opcode gas costs is never likely to happen, precisely because people already have this kind of dependency on it.\r\n\r\nThis is a possible take on it. But that does not remove the risk completely. That depends on the community.\r\n\r\nIt is worth nothing that the argument also include:\r\n> \"Eth1 is not forever;\"\r\n\r\nIf so, we could argue that the opcode space is not that much a concern. We have still more than 100 opcodes left\r\n\r\nBut regardless, since replacing the old opcode with these new one would be objectively better, I still vote for the proposal. \r\n\r\nLet's improve the evm when we can.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/492523117/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/493798706",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-493798706",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 493798706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5Mzc5ODcwNg==",
    "user": {
      "login": "jochem-brouwer",
      "id": 29359032,
      "node_id": "MDQ6VXNlcjI5MzU5MDMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/29359032?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jochem-brouwer",
      "html_url": "https://github.com/jochem-brouwer",
      "followers_url": "https://api.github.com/users/jochem-brouwer/followers",
      "following_url": "https://api.github.com/users/jochem-brouwer/following{/other_user}",
      "gists_url": "https://api.github.com/users/jochem-brouwer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jochem-brouwer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jochem-brouwer/subscriptions",
      "organizations_url": "https://api.github.com/users/jochem-brouwer/orgs",
      "repos_url": "https://api.github.com/users/jochem-brouwer/repos",
      "events_url": "https://api.github.com/users/jochem-brouwer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jochem-brouwer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-19T22:49:04Z",
    "updated_at": "2019-05-20T16:20:48Z",
    "author_association": "MEMBER",
    "body": "This would require - per the EIP - 3 new opcodes. For some reason `CALLCODE` is not considered (why would this not have the same behavior?).\r\n\r\nAs mentioned by @Arachnid this can be implemented in EVM directly with minimal extra gas costs: (solidity code)\r\n\r\n```\r\nrequire(gasleft() >= MIN_GAS);\r\naddress(target).call.value(x).gas(MIN_GAS)(data);\r\n```\r\n\r\nThe fact that this requires 3 (4?) new opcodes plus the fact that this can already be implemented in EVM are both arguments for me to not implement this as this can be (easily) implemented using EVM already.\r\n\r\n> Increasing opcode gas costs is never likely to happen, precisely because people already have this kind of dependency on it.\r\n\r\n@Arachnid Huh? We have had several times in the past hard forks that opcode gas costs are actually increased, because of possible DoS attacks or simply that execution costs of certain operations rise (e.g. Istanbul proposed [EIP 1884](https://eips.ethereum.org/EIPS/eip-1884) or in the past for example [EIP 150](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-150.md).\r\n\r\nI know that gas costs increases in general are not wanted because there are hardcoded gas limits in some contracts. However, if this leads to DoS attacks (see EIP 150) then to protect the network these costs should be raised anyways. In general, contract developers should be made aware that they cannot rely on gas costs of operations being constant.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/493798706/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/494048106",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-494048106",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 494048106,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDA0ODEwNg==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-20T15:58:25Z",
    "updated_at": "2019-05-20T15:58:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jochem-brouwer \r\n\r\n> This would require - per the EIP - 3 new opcodes. For some reason STATICCALL is not considered (why would this not have the same behavior?).\r\n\r\nSTATIC_CALL is mentioned\r\n\r\n> ```\r\n> require(gasleft() >= MIN_GAS);\r\n> address(target).call.value(x).gas(MIN_GAS)(data);\r\n> ```\r\n\r\nThis naive implementation is not sufficient as explained in the proposal. Please read the proposal and the materials linked (EIP-150 in particular).\r\n\r\nAs @Arachnid say, it is technically possible to do it via assembly and we can imagine solidity adding a parameter or a variant to the various \"calls\" for that but this would be dependent on gas opcode pricing. This is also a waste of gas for something that evm already compute.\r\n\r\n> In general, contract developers should be made aware that they cannot rely on gas costs of operations being constant.\r\n\r\nI agree and the current *CALL opcodes do not allow this if the contract want to ensure the call will get a specific amount of gas.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/494048106/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/494056247",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-494056247",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 494056247,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDA1NjI0Nw==",
    "user": {
      "login": "jochem-brouwer",
      "id": 29359032,
      "node_id": "MDQ6VXNlcjI5MzU5MDMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/29359032?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jochem-brouwer",
      "html_url": "https://github.com/jochem-brouwer",
      "followers_url": "https://api.github.com/users/jochem-brouwer/followers",
      "following_url": "https://api.github.com/users/jochem-brouwer/following{/other_user}",
      "gists_url": "https://api.github.com/users/jochem-brouwer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jochem-brouwer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jochem-brouwer/subscriptions",
      "organizations_url": "https://api.github.com/users/jochem-brouwer/orgs",
      "repos_url": "https://api.github.com/users/jochem-brouwer/repos",
      "events_url": "https://api.github.com/users/jochem-brouwer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jochem-brouwer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-20T16:20:25Z",
    "updated_at": "2019-05-20T16:20:25Z",
    "author_association": "MEMBER",
    "body": "@wighawag Woops - I meant `CALLCODE` instead of `STATICCALL`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/494056247/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/494069776",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-494069776",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 494069776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDA2OTc3Ng==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-20T16:59:34Z",
    "updated_at": "2019-05-20T16:59:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "`CALLCODE` is kind of deprecated as you can achieve the same with `DELEGATECALL` while preserving the caller context. So I don't think we need to keep supporting it.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/494069776/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/495416216",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-495416216",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 495416216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTQxNjIxNg==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-23T23:10:01Z",
    "updated_at": "2019-05-23T23:10:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "By the way, we have this proposal (https://eips.ethereum.org/EIPS/eip-1702) currently considered to add versioning to smart contract so we could remove obsolete opcodes when need arise ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/495416216/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/580151234",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-580151234",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 580151234,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDE1MTIzNA==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-30T09:01:09Z",
    "updated_at": "2020-01-30T09:01:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "I added a variant spec that do not require new opcodes but relies on existing contract not using some specific range of values",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/580151234/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/592762318",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-592762318",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 592762318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5Mjc2MjMxOA==",
    "user": {
      "login": "aliatiia",
      "id": 42751398,
      "node_id": "MDQ6VXNlcjQyNzUxMzk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/42751398?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aliatiia",
      "html_url": "https://github.com/aliatiia",
      "followers_url": "https://api.github.com/users/aliatiia/followers",
      "following_url": "https://api.github.com/users/aliatiia/following{/other_user}",
      "gists_url": "https://api.github.com/users/aliatiia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aliatiia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aliatiia/subscriptions",
      "organizations_url": "https://api.github.com/users/aliatiia/orgs",
      "repos_url": "https://api.github.com/users/aliatiia/repos",
      "events_url": "https://api.github.com/users/aliatiia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aliatiia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-28T22:40:24Z",
    "updated_at": "2020-03-03T18:00:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "For the sake of concision, option a) could be compressed:\r\n\r\nadd new variants of the CALL, DELEGATE_CALL, STATIC_CALL opcodes where the gas specified is enforced so that if the gas left at the point of call is not enough to give the specified gas to the destination, the current call revert\r\n\r\nThe following is not clear, I don't understand it:\r\n\r\n\"Note that solidity for example do not use value like 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF as it is more expensive than passing the gasLeft.\"\r\n\r\n[This new EIP seems related (eip-2542)](https://github.com/ethereum/EIPs/blob/39461da12c50e5efac88bed0c8d3e81233efdb8b/EIPS/eip-2542.md)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/592762318/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/754082654",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-754082654",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 754082654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDA4MjY1NA==",
    "user": {
      "login": "livingrock7",
      "id": 30123988,
      "node_id": "MDQ6VXNlcjMwMTIzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/30123988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/livingrock7",
      "html_url": "https://github.com/livingrock7",
      "followers_url": "https://api.github.com/users/livingrock7/followers",
      "following_url": "https://api.github.com/users/livingrock7/following{/other_user}",
      "gists_url": "https://api.github.com/users/livingrock7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/livingrock7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/livingrock7/subscriptions",
      "organizations_url": "https://api.github.com/users/livingrock7/orgs",
      "repos_url": "https://api.github.com/users/livingrock7/repos",
      "events_url": "https://api.github.com/users/livingrock7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/livingrock7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-04T16:41:29Z",
    "updated_at": "2021-01-04T16:41:29Z",
    "author_association": "NONE",
    "body": "Can anyone guide me with numbers of gas consumed for gasleft() and STATICCALL\r\nAny help is appreciated! Thanks",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/754082654/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/754084958",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-754084958",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 754084958,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDA4NDk1OA==",
    "user": {
      "login": "DGKSK8LIFE",
      "id": 45473363,
      "node_id": "MDQ6VXNlcjQ1NDczMzYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/45473363?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DGKSK8LIFE",
      "html_url": "https://github.com/DGKSK8LIFE",
      "followers_url": "https://api.github.com/users/DGKSK8LIFE/followers",
      "following_url": "https://api.github.com/users/DGKSK8LIFE/following{/other_user}",
      "gists_url": "https://api.github.com/users/DGKSK8LIFE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DGKSK8LIFE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DGKSK8LIFE/subscriptions",
      "organizations_url": "https://api.github.com/users/DGKSK8LIFE/orgs",
      "repos_url": "https://api.github.com/users/DGKSK8LIFE/repos",
      "events_url": "https://api.github.com/users/DGKSK8LIFE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DGKSK8LIFE/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-04T16:45:43Z",
    "updated_at": "2021-01-04T16:45:43Z",
    "author_association": "NONE",
    "body": "@livingrock7 https://ethereum.stackexchange.com/questions/84331/the-gas-cost-of-a-static-call-of-a-pure-function\r\n\r\nhttps://ethereum.stackexchange.com/questions/78458/gascost-of-opcode-staticcall-in-geth-vm-trace maybe look there? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/754084958/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/754086732",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-754086732",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 754086732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDA4NjczMg==",
    "user": {
      "login": "livingrock7",
      "id": 30123988,
      "node_id": "MDQ6VXNlcjMwMTIzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/30123988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/livingrock7",
      "html_url": "https://github.com/livingrock7",
      "followers_url": "https://api.github.com/users/livingrock7/followers",
      "following_url": "https://api.github.com/users/livingrock7/following{/other_user}",
      "gists_url": "https://api.github.com/users/livingrock7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/livingrock7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/livingrock7/subscriptions",
      "organizations_url": "https://api.github.com/users/livingrock7/orgs",
      "repos_url": "https://api.github.com/users/livingrock7/repos",
      "events_url": "https://api.github.com/users/livingrock7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/livingrock7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-04T16:48:46Z",
    "updated_at": "2021-01-04T16:48:46Z",
    "author_association": "NONE",
    "body": "@DGKSK8LIFE Thanks! what about cost of using gasleft() itself and hardhat's console.log? anyone?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/754086732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/754113705",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-754113705",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 754113705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDExMzcwNQ==",
    "user": {
      "login": "DGKSK8LIFE",
      "id": 45473363,
      "node_id": "MDQ6VXNlcjQ1NDczMzYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/45473363?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DGKSK8LIFE",
      "html_url": "https://github.com/DGKSK8LIFE",
      "followers_url": "https://api.github.com/users/DGKSK8LIFE/followers",
      "following_url": "https://api.github.com/users/DGKSK8LIFE/following{/other_user}",
      "gists_url": "https://api.github.com/users/DGKSK8LIFE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DGKSK8LIFE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DGKSK8LIFE/subscriptions",
      "organizations_url": "https://api.github.com/users/DGKSK8LIFE/orgs",
      "repos_url": "https://api.github.com/users/DGKSK8LIFE/repos",
      "events_url": "https://api.github.com/users/DGKSK8LIFE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DGKSK8LIFE/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-04T17:39:29Z",
    "updated_at": "2021-01-04T17:39:29Z",
    "author_association": "NONE",
    "body": "the first link I sent references the gas cost of a static call of a pure function; might be related to gasleft() @livingrock7 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/754113705/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974705443",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-974705443",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 974705443,
    "node_id": "IC_kwDOAq426M46GNMj",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-11-20T20:12:11Z",
    "updated_at": "2021-11-20T20:12:11Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974705443/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974790966",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-974790966",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 974790966,
    "node_id": "IC_kwDOAq426M46GiE2",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-21T10:30:29Z",
    "updated_at": "2021-11-21T10:30:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would like to move this EIP forward, since there is 2 potential spec, I guess I might as well split into 2 proposals. but would like feedback on that:\r\n\r\nDo we add new opcodes or do we handle the new semantic with special gas value (first bit being considered as a flag)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974790966/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974792845",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-974792845",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 974792845,
    "node_id": "IC_kwDOAq426M46GiiN",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-21T10:45:01Z",
    "updated_at": "2021-11-21T10:45:01Z",
    "author_association": "MEMBER",
    "body": "Generally speaking, it is always preferable to have multiple smaller specifications rather than fewer larger specifications.  If it is possible to split this up into multiple smaller specifications then you are strongly encouraged to do so.\r\n\r\nNote about this EIP idea in general: Contracts should *never* have any hard coded values related to gas in them because gas costs can and do change as hardware and technology changes.  While 300,000 gas may work today, it may not work tomorrow and vice versa.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974792845/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974828972",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-974828972",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 974828972,
    "node_id": "IC_kwDOAq426M46GrWs",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-21T14:39:02Z",
    "updated_at": "2021-11-21T14:39:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MicahZoltu ok, thanks for the input, I guess what I would like to see is whether option A or B is the way to go and focus on one. but if it undecided I might as well create 2 spec.\r\n\r\nre gas, this is not important for the rationale mentioned here, the gas can be provided by the user (meta-transaction for example)\r\n\r\nActually the whole point of this EIP is to avoid the use of hard-coded gas value ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/974828972/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1133014060",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-1133014060",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 1133014060,
    "node_id": "IC_kwDOAq426M5DiGws",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-05-20T15:02:49Z",
    "updated_at": "2022-05-20T15:02:49Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1133014060/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1140176215",
    "html_url": "https://github.com/ethereum/EIPs/issues/1930#issuecomment-1140176215",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1930",
    "id": 1140176215,
    "node_id": "IC_kwDOAq426M5D9bVX",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-28T05:12:24Z",
    "updated_at": "2022-05-28T05:12:24Z",
    "author_association": "MEMBER",
    "body": "Closing this for housekeeping purposes. Feel free to continue using this issue for discussion about EIP-1930.\r\n\r\nNote: If 1930 is pulled out of stagnant, the discussions-to link should be moved to a thread on Ethereum Magicians.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1140176215/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
