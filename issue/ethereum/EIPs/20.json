{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/20/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/20/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/20/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/20",
  "id": 117778189,
  "node_id": "MDU6SXNzdWUxMTc3NzgxODk=",
  "number": 20,
  "title": "ERC: Token standard",
  "user": {
    "login": "frozeman",
    "id": 232662,
    "node_id": "MDQ6VXNlcjIzMjY2Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frozeman",
    "html_url": "https://github.com/frozeman",
    "followers_url": "https://api.github.com/users/frozeman/followers",
    "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
    "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
    "organizations_url": "https://api.github.com/users/frozeman/orgs",
    "repos_url": "https://api.github.com/users/frozeman/repos",
    "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frozeman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": true,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 362,
  "created_at": "2015-11-19T09:52:56Z",
  "updated_at": "2022-08-25T16:24:18Z",
  "closed_at": "2017-04-24T13:43:58Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": "resolved",
  "body": "**The final standard can be found here: https://eips.ethereum.org/EIPS/eip-20**\r\n\r\n******\r\n\r\n```\r\nERC: 20\r\nTitle: Token standard\r\nStatus: Draft\r\nType: Informational\r\nCreated: 19-11.2015\r\nResolution: https://github.com/ethereum/wiki/wiki/Standardized_Contract_APIs\r\n```\r\n# Abstract\r\n\r\nThe following describes standard functions a token contract can implement.\r\n# Motivation\r\n\r\nThose will allow dapps and wallets to handle tokens across multiple interfaces/dapps.\r\n\r\nThe most important here are, `transfer`, `balanceOf` and the `Transfer` event.\r\n# Specification\r\n## Token\r\n### Methods\r\n\r\n**NOTE**: An important point is that callers should handle `false` from `returns (bool success)`.  Callers should not assume that `false` is never returned!\r\n\r\n#### totalSupply\r\n\r\n``` js\r\nfunction totalSupply() constant returns (uint256 totalSupply)\r\n```\r\n\r\nGet the total token supply\r\n#### balanceOf\r\n\r\n``` js\r\nfunction balanceOf(address _owner) constant returns (uint256 balance)\r\n```\r\n\r\nGet the account balance of another account with address `_owner`\r\n#### transfer\r\n\r\n``` js\r\nfunction transfer(address _to, uint256 _value) returns (bool success)\r\n```\r\n\r\nSend `_value` amount of tokens to address `_to`\r\n#### transferFrom\r\n\r\n``` js\r\nfunction transferFrom(address _from, address _to, uint256 _value) returns (bool success)\r\n```\r\n\r\nSend `_value` amount of tokens from address `_from` to address `_to`\r\n\r\nThe `transferFrom` method is used for a withdraw workflow, allowing contracts to send tokens on your behalf, for example to \"deposit\" to a contract address and/or to charge fees in sub-currencies; the command should fail unless the `_from` account has deliberately authorized the sender of the message via some mechanism; we propose these standardized APIs for approval:\r\n#### approve\r\n\r\n``` js\r\nfunction approve(address _spender, uint256 _value) returns (bool success)\r\n```\r\n\r\nAllow _spender to withdraw from your account, multiple times, up to the _value amount. If this function is called again it overwrites the current allowance with _value.\r\n#### allowance\r\n\r\n``` js\r\nfunction allowance(address _owner, address _spender) constant returns (uint256 remaining)\r\n```\r\n\r\nReturns the amount which `_spender` is still allowed to withdraw from `_owner`\r\n### Events\r\n#### Transfer\r\n\r\n``` js\r\nevent Transfer(address indexed _from, address indexed _to, uint256 _value)\r\n```\r\n\r\nTriggered when tokens are transferred.\r\n#### Approval\r\n\r\n``` js\r\nevent Approval(address indexed _owner, address indexed _spender, uint256 _value)\r\n```\r\n\r\nTriggered whenever `approve(address _spender, uint256 _value)` is called.",
  "closed_by": {
    "login": "frozeman",
    "id": 232662,
    "node_id": "MDQ6VXNlcjIzMjY2Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frozeman",
    "html_url": "https://github.com/frozeman",
    "followers_url": "https://api.github.com/users/frozeman/followers",
    "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
    "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
    "organizations_url": "https://api.github.com/users/frozeman/orgs",
    "repos_url": "https://api.github.com/users/frozeman/repos",
    "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frozeman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/20/reactions",
    "total_count": 193,
    "+1": 131,
    "-1": 0,
    "laugh": 7,
    "hooray": 23,
    "confused": 0,
    "heart": 32,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/20/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158017280",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158017280",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158017280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAxNzI4MA==",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T10:31:17Z",
    "updated_at": "2015-11-19T10:31:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "recent discussion from https://gist.github.com/frozeman/090ae32041bcfe120824\n\n@vbuterin said:\nYeah, `createCheque` and `cashCheque` as above, plus `transferCheque(address _from, address _to, uint256 _value)` sounds good. In that case, we should probably remove the `_to` argument from `cashCheque`; generally, you can only cash cheques from your own bank account.\n\nWe probably also want `getChequeValue(address _from, address _for)`. We then have a choice of whether we want to keep the value argument in `cashCheque` rather than simply only allowing cashing in 100% of whatever is in there. If we want to fully follow the cheque analogy, this triad seems most intuitive to me:\n\n``` js\nfunction createCheque(address _for, uint256 _maxValue)\nfunction cashCheque(address _from)\nfunction getChequeValue(address _from, address _for)\n```\n\nQuestion: does running createCheque twice add the value of the two cheques together? Are there legitimate use cases for creating a cheque multiple times and then cashing either once or multiple times?\n\n@nmushegian said:\nAll the functions that return uint should `return (uint, bool)` instead. You can easily make up scenarios where a 0 return value is ambiguous and significant. Is there any other simpler pattern for handling this?\n\n@niran said:\nI think the value parameter is useful in `cashCheque`. It absolves callers from having to verify that the amount they needed was provided, and from having to refund amounts greater than what was needed. cashCheque would only succeed if the provided value was remaining in the cheque.\nAlso, I think using `createCheque(2**100)` for the approve use case is going to lead to less clear code. It gets better if you make the magic number a constant, like `createCheque(UNLIMITED_CHEQUE_VALUE)`, but lots of people won't do that. I think it's worth having a createBlankCheque or something for the approve scenario. Most tokens will use the TokenLib to handle all of the cheque logic, so it doesn't really make things worse for token authors.\n\n@caktux \nI also think there is a problem with the terminology of cheques since they imply one-offs. Cheques are also unique, and here cheques wouldn't return unique IDs or anything; those are merely approval methods for transfers using internal bookkeeping. I think the current approve/transfer terminology is accurate and simple enough, instead of ending up with a mix of transfer and cashCheque. Would we change unapprove to `tearCheque`? There's also that ambiguity of cheques adding up, where approvals more clearly override a previous one.\n\nIn the use case described by Vitalik of contracts charging fees in subcurrencies, it could easily cost more to have to call approveOnce each time (if we replace the current approve method with it) than the actual fee in subcurrency. For that reason I think we should keep both `approve` and `approveOnce`, but we could add the `_maxValue` argument to the former, that way subscriptions or fees could be taken in multiple calls but only up to a certain amount. Another reason to keep the approval terminology, as I think it's much simpler to describe approve and approveOnce than some createMultiCheque and createCheque. Regarding `isApprovedFor`, it would have to return the approved amount if we do add `_maxValue`, just as `isApprovedOnceFor` does.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158017280/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158019055",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158019055",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158019055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAxOTA1NQ==",
    "user": {
      "login": "ethers",
      "id": 6937903,
      "node_id": "MDQ6VXNlcjY5Mzc5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6937903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ethers",
      "html_url": "https://github.com/ethers",
      "followers_url": "https://api.github.com/users/ethers/followers",
      "following_url": "https://api.github.com/users/ethers/following{/other_user}",
      "gists_url": "https://api.github.com/users/ethers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ethers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ethers/subscriptions",
      "organizations_url": "https://api.github.com/users/ethers/orgs",
      "repos_url": "https://api.github.com/users/ethers/repos",
      "events_url": "https://api.github.com/users/ethers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ethers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T10:40:54Z",
    "updated_at": "2015-11-19T10:40:54Z",
    "author_association": "MEMBER",
    "body": "`decimals()` doesn't seem needed.  The Token itself represents an indivisible unit.  A higher-level, like SubCurrency, should use Token, SubCurrency is where `decimals()` or other things like `symbol()` could be implemented.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158019055/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158019498",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158019498",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158019498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAxOTQ5OA==",
    "user": {
      "login": "ethers",
      "id": 6937903,
      "node_id": "MDQ6VXNlcjY5Mzc5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6937903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ethers",
      "html_url": "https://github.com/ethers",
      "followers_url": "https://api.github.com/users/ethers/followers",
      "following_url": "https://api.github.com/users/ethers/following{/other_user}",
      "gists_url": "https://api.github.com/users/ethers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ethers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ethers/subscriptions",
      "organizations_url": "https://api.github.com/users/ethers/orgs",
      "repos_url": "https://api.github.com/users/ethers/repos",
      "events_url": "https://api.github.com/users/ethers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ethers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T10:43:19Z",
    "updated_at": "2015-11-19T10:43:19Z",
    "author_association": "MEMBER",
    "body": "In all method descriptions, let's also remove \"coin\", eg \"Get the total coin supply\" -> \"Get the total token supply\"\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158019498/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158019756",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158019756",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158019756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAxOTc1Ng==",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T10:44:43Z",
    "updated_at": "2015-11-19T10:46:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I disagree, as the token is the currency or whatever and to represent it properly in any kind of dapp you need to know what is the proper way to represent that token. Ideally the user has to add only one contract address and the dapp can derive everything from there. Otherwise you make every dapp implement the low level token, plus some high level currency contract API. And not knowing the decimal points can be dangerous, otherwise one user sends 100.00 and another 100 (equals 1.00)\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158019756/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158021707",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158021707",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158021707,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAyMTcwNw==",
    "user": {
      "login": "simondlr",
      "id": 716965,
      "node_id": "MDQ6VXNlcjcxNjk2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/716965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simondlr",
      "html_url": "https://github.com/simondlr",
      "followers_url": "https://api.github.com/users/simondlr/followers",
      "following_url": "https://api.github.com/users/simondlr/following{/other_user}",
      "gists_url": "https://api.github.com/users/simondlr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simondlr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simondlr/subscriptions",
      "organizations_url": "https://api.github.com/users/simondlr/orgs",
      "repos_url": "https://api.github.com/users/simondlr/repos",
      "events_url": "https://api.github.com/users/simondlr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simondlr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T10:53:20Z",
    "updated_at": "2015-11-19T10:55:10Z",
    "author_association": "NONE",
    "body": "I'm neither here not there about the terminology. I think \"approve\" OR \"cheque\" terminology is good enough.\n\nAt the end of the day, it seems we need both blanket approvals & once-offs. Or rather, it seems it would be useful to specify 3 things: 1) Total value that can be withdrawn, 2) How many times they can do that, & 3) How much at a time.\n\nSpitballing another option:\n\nJust one method, called approve (or setCustodian) that takes 2 parameters. How many times they are allowed to withdraw & how much each time?\n\napprove(address _for, uint256 _withdraws, uint256 _max)\n\n?\n\n@frozeman Regarding names & other information. I agree with @ethers here. There will be tokens minted that don't have any requirement for names, symbols or decimals. Like prediction market outcomes or energy meter kwh tokens for example. This should not be at the token layer. All tokens are not automatically a sub-currency or coin (that uses additional information).\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158021707/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158021858",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158021858",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158021858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAyMTg1OA==",
    "user": {
      "login": "ethers",
      "id": 6937903,
      "node_id": "MDQ6VXNlcjY5Mzc5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6937903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ethers",
      "html_url": "https://github.com/ethers",
      "followers_url": "https://api.github.com/users/ethers/followers",
      "following_url": "https://api.github.com/users/ethers/following{/other_user}",
      "gists_url": "https://api.github.com/users/ethers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ethers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ethers/subscriptions",
      "organizations_url": "https://api.github.com/users/ethers/orgs",
      "repos_url": "https://api.github.com/users/ethers/repos",
      "events_url": "https://api.github.com/users/ethers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ethers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T10:54:09Z",
    "updated_at": "2015-11-19T10:54:09Z",
    "author_association": "MEMBER",
    "body": "@frozeman @alexvandesande  I think another EIP is needed for \"TF Registries\" https://github.com/ethereum/wiki/wiki/Standardized_Contract_APIs#tf-registries\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158021858/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158022615",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158022615",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158022615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAyMjYxNQ==",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T10:57:29Z",
    "updated_at": "2015-11-19T10:57:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Created it here https://github.com/ethereum/EIPs/issues/22\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158022615/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158023372",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158023372",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158023372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAyMzM3Mg==",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T11:01:03Z",
    "updated_at": "2015-11-19T11:01:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@simondlr @ethers i think divisibility belongs to the token contract, as even non currency token can need that. Im fine with putting the name and symbol in the registry tho.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158023372/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158023502",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158023502",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158023502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAyMzUwMg==",
    "user": {
      "login": "ethers",
      "id": 6937903,
      "node_id": "MDQ6VXNlcjY5Mzc5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6937903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ethers",
      "html_url": "https://github.com/ethers",
      "followers_url": "https://api.github.com/users/ethers/followers",
      "following_url": "https://api.github.com/users/ethers/following{/other_user}",
      "gists_url": "https://api.github.com/users/ethers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ethers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ethers/subscriptions",
      "organizations_url": "https://api.github.com/users/ethers/orgs",
      "repos_url": "https://api.github.com/users/ethers/repos",
      "events_url": "https://api.github.com/users/ethers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ethers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T11:01:50Z",
    "updated_at": "2015-11-19T11:33:46Z",
    "author_association": "MEMBER",
    "body": "`approve(address _address, uint256 _withdraws, uint256 _max)` seems quite clean (suggested by @simondlr).\nMay tweak it as `approve(address _address, uint256 _withdrawals, uint256 _maxValue)`\n\n(`isApprovedFor` then checks if there's at least 1 withdrawal approved for the amount)\n\nEDIT:  add address\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158023502/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158024845",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158024845",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158024845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAyNDg0NQ==",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T11:08:25Z",
    "updated_at": "2015-11-19T11:08:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "You mean `function approve(address _address, uint256 _withdraws, uint256 _max)`\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158024845/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158025123",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158025123",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158025123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAyNTEyMw==",
    "user": {
      "login": "simondlr",
      "id": 716965,
      "node_id": "MDQ6VXNlcjcxNjk2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/716965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simondlr",
      "html_url": "https://github.com/simondlr",
      "followers_url": "https://api.github.com/users/simondlr/followers",
      "following_url": "https://api.github.com/users/simondlr/following{/other_user}",
      "gists_url": "https://api.github.com/users/simondlr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simondlr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simondlr/subscriptions",
      "organizations_url": "https://api.github.com/users/simondlr/orgs",
      "repos_url": "https://api.github.com/users/simondlr/repos",
      "events_url": "https://api.github.com/users/simondlr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simondlr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T11:10:06Z",
    "updated_at": "2015-11-19T11:10:32Z",
    "author_association": "NONE",
    "body": "@frozeman wrt decimals. Neither really here nor there about it. You can have multiple thresholds as is the case with Ether. The base token is still wei at the end of the day. You can't have decimal wei. You can write the wei in Ether, Finney, Shannon, etc. Each with their own decimal position. Should multiple thresholds be specified? Or only one? If so, is the token name specified to the base unit, or where the decimal point starts? ie Ether or Wei? It's a naming/usability convention, not a specification on how the token actually works.\n\nPersonally, for most new tokens that will be created, it doesn't really make sense to have them anymore. I do however see scenarios where it can be used. Thus, I'm neutral on this point. Don't mind. Perhaps it should be optional.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158025123/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158025858",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158025858",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158025858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAyNTg1OA==",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T11:14:15Z",
    "updated_at": "2015-11-19T11:14:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "I should be optional sure, but for tokens which will be used in the wallet or user facing stuff, its quite necessary, except you don't want them to be divisible.\n\nConcerning multiple steps, i think only one basic step is necessary from there on you can go in `/100`steps as usual, thats not hard to guess.\n\nBut it surely makes a difference if a user accidentally sends 10000 vs 100.00 token units ;)\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158025858/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158032848",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158032848",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158032848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAzMjg0OA==",
    "user": {
      "login": "ethers",
      "id": 6937903,
      "node_id": "MDQ6VXNlcjY5Mzc5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6937903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ethers",
      "html_url": "https://github.com/ethers",
      "followers_url": "https://api.github.com/users/ethers/followers",
      "following_url": "https://api.github.com/users/ethers/following{/other_user}",
      "gists_url": "https://api.github.com/users/ethers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ethers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ethers/subscriptions",
      "organizations_url": "https://api.github.com/users/ethers/orgs",
      "repos_url": "https://api.github.com/users/ethers/repos",
      "events_url": "https://api.github.com/users/ethers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ethers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T11:47:12Z",
    "updated_at": "2015-11-19T11:47:12Z",
    "author_association": "MEMBER",
    "body": "No one wants many informational EIPs, but from a design perspective is it better to consider EIPs as composable and keep them modular and lean?\n\nFor example, an informational EIP for Wallet Tokens could be composed of EIP20, EIP22, EIPX?\n\nLet's not forget https://gist.github.com/frozeman/090ae32041bcfe120824#gistcomment-1623513\nAs there's also been some discussion about the approve functionality, maybe approve APIs should also be its own EIP?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158032848/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158042629",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158042629",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158042629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODA0MjYyOQ==",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T12:21:31Z",
    "updated_at": "2015-11-19T12:21:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think its best, when somebody makes a change proposal he list nicely formatted exactly what he would change. In the same as above in the first comment, then these changes are easier to understand, and later move into the actual proposal. Simply:\n\n```\nfunction myFunc(address _address, ...) returns (bool)\n```\n\netc.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158042629/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158043214",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158043214",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158043214,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODA0MzIxNA==",
    "user": {
      "login": "simondlr",
      "id": 716965,
      "node_id": "MDQ6VXNlcjcxNjk2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/716965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simondlr",
      "html_url": "https://github.com/simondlr",
      "followers_url": "https://api.github.com/users/simondlr/followers",
      "following_url": "https://api.github.com/users/simondlr/following{/other_user}",
      "gists_url": "https://api.github.com/users/simondlr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simondlr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simondlr/subscriptions",
      "organizations_url": "https://api.github.com/users/simondlr/orgs",
      "repos_url": "https://api.github.com/users/simondlr/repos",
      "events_url": "https://api.github.com/users/simondlr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simondlr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T12:24:52Z",
    "updated_at": "2015-11-19T12:24:52Z",
    "author_association": "NONE",
    "body": "Agreed @frozeman. wrt to this method.\n\n```\nfunction approve(address _address, uint256 _withdraws, uint256 _max) returns (bool success)\n```\n\nIt's still slightly clunky as opposed to true or false (as you mentioned previously @niran). ie having to specify 2**100. We could add a helper function that replicates this internally? ie\n\n```\nfunction approveAll(address _address) returns (bool success)\n```\n\nit internally calls `approve(_address, 2**100, 2**100)`\n\nAny other comments from others on this method?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158043214/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158091127",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158091127",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158091127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODA5MTEyNw==",
    "user": {
      "login": "niran",
      "id": 106437,
      "node_id": "MDQ6VXNlcjEwNjQzNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/106437?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/niran",
      "html_url": "https://github.com/niran",
      "followers_url": "https://api.github.com/users/niran/followers",
      "following_url": "https://api.github.com/users/niran/following{/other_user}",
      "gists_url": "https://api.github.com/users/niran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/niran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/niran/subscriptions",
      "organizations_url": "https://api.github.com/users/niran/orgs",
      "repos_url": "https://api.github.com/users/niran/repos",
      "events_url": "https://api.github.com/users/niran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/niran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T15:33:05Z",
    "updated_at": "2015-11-19T15:35:51Z",
    "author_association": "NONE",
    "body": "Is there a use case for specifying the number of withdrawals? If we're sticking with the approval language, I think the function signatures we started with were fine. You're always granting access to a certain amount of funds, and I don't see a case for caring about the increments those funds are withdrawn in.\n\nDisplay information about tokens, like where to put the decimal point when displaying the native integer value, belongs in a registry. Changing a token contract is hard. Changing a registry entry is easy. `decimals` wouldn't change how the token contract works, nor how any calling contract would work. It's not necessary, and the UI problem will still be solved.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158091127/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158110210",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158110210",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158110210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODExMDIxMA==",
    "user": {
      "login": "alexvandesande",
      "id": 112898,
      "node_id": "MDQ6VXNlcjExMjg5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/112898?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexvandesande",
      "html_url": "https://github.com/alexvandesande",
      "followers_url": "https://api.github.com/users/alexvandesande/followers",
      "following_url": "https://api.github.com/users/alexvandesande/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexvandesande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexvandesande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexvandesande/subscriptions",
      "organizations_url": "https://api.github.com/users/alexvandesande/orgs",
      "repos_url": "https://api.github.com/users/alexvandesande/repos",
      "events_url": "https://api.github.com/users/alexvandesande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexvandesande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T16:31:57Z",
    "updated_at": "2015-11-19T16:31:57Z",
    "author_association": "NONE",
    "body": "@ethers  decimals, name and symbol are important for displaying to the end user. If Ether was a token then the name would be \"ether\" with 8 decimal cases, and internally everything would be wei. Just like we do currently.\n\nRegarding the approve/cheque discussion, I feel that we should always use focus on [paving cow paths](http://designingsocialinterfaces.com/patterns/Pave_the_Cowpaths): implement what everyone is on absolute consensus as the basic \"standard\" and then allow real world usage dictate how to better define more advanced use cases.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158110210/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158113345",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158113345",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158113345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODExMzM0NQ==",
    "user": {
      "login": "simondlr",
      "id": 716965,
      "node_id": "MDQ6VXNlcjcxNjk2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/716965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simondlr",
      "html_url": "https://github.com/simondlr",
      "followers_url": "https://api.github.com/users/simondlr/followers",
      "following_url": "https://api.github.com/users/simondlr/following{/other_user}",
      "gists_url": "https://api.github.com/users/simondlr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simondlr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simondlr/subscriptions",
      "organizations_url": "https://api.github.com/users/simondlr/orgs",
      "repos_url": "https://api.github.com/users/simondlr/repos",
      "events_url": "https://api.github.com/users/simondlr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simondlr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T16:41:51Z",
    "updated_at": "2015-11-19T16:41:51Z",
    "author_association": "NONE",
    "body": "@niran true... If you have a subscription, then you someone can anyway withdraw all 12 months in 12 transactions (for example). A future layer could perhaps limit based on timestamps when new withdraws can be made. But let's leave that for later.\n\nI agree with @alexvandesande. Let's keep it simple.\n\nSo we thus we only have 1 approve function?\n\n```\nfunction approve(address _for, uint256 _value) returns (bool success)\n```\n\naddress _for can withdraw any amount up to _value. If approve is called again, it is not reset, it is simply added to that amount.\n\nThe transfer is difficult in this scenario, since it doesn't follow the cheque tango. Would it simple mean transferring ALL outstanding value to another custodian?\n\nPerhaps we should leave that out for now & \"pave the cowpaths\" (love this saying). Find the \"desire paths\". :)\n\n---\n\nI understand why decimals are useful. It just won't matter in a substantial subset of tokens (you won't see them in wallet really). Thus it should be optional.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158113345/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158119352",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158119352",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158119352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODExOTM1Mg==",
    "user": {
      "login": "aakilfernandes",
      "id": 1577353,
      "node_id": "MDQ6VXNlcjE1NzczNTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1577353?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aakilfernandes",
      "html_url": "https://github.com/aakilfernandes",
      "followers_url": "https://api.github.com/users/aakilfernandes/followers",
      "following_url": "https://api.github.com/users/aakilfernandes/following{/other_user}",
      "gists_url": "https://api.github.com/users/aakilfernandes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aakilfernandes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aakilfernandes/subscriptions",
      "organizations_url": "https://api.github.com/users/aakilfernandes/orgs",
      "repos_url": "https://api.github.com/users/aakilfernandes/repos",
      "events_url": "https://api.github.com/users/aakilfernandes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aakilfernandes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T17:02:35Z",
    "updated_at": "2015-11-19T17:03:35Z",
    "author_association": "NONE",
    "body": "Just struck me, it would be great to have some kind of standardized system to pay miners with tokens.\n\nYou could imagine an user who holds a wallet of various coins, but doesn't know what Ether is. Rather than having to purchase Ether to make a transfer, there could be a `_sendToMiner` option in each function which pays the miner a fee in that token.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158119352/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158120561",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158120561",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158120561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODEyMDU2MQ==",
    "user": {
      "login": "nmushegian",
      "id": 924397,
      "node_id": "MDQ6VXNlcjkyNDM5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/924397?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nmushegian",
      "html_url": "https://github.com/nmushegian",
      "followers_url": "https://api.github.com/users/nmushegian/followers",
      "following_url": "https://api.github.com/users/nmushegian/following{/other_user}",
      "gists_url": "https://api.github.com/users/nmushegian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nmushegian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nmushegian/subscriptions",
      "organizations_url": "https://api.github.com/users/nmushegian/orgs",
      "repos_url": "https://api.github.com/users/nmushegian/repos",
      "events_url": "https://api.github.com/users/nmushegian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nmushegian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T17:06:39Z",
    "updated_at": "2015-11-19T17:06:39Z",
    "author_association": "NONE",
    "body": "@simondlr I like this minimal viable approval function and also agree we should see what people build with it before making too broad a standard API\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158120561/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158121560",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158121560",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158121560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODEyMTU2MA==",
    "user": {
      "login": "simondlr",
      "id": 716965,
      "node_id": "MDQ6VXNlcjcxNjk2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/716965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simondlr",
      "html_url": "https://github.com/simondlr",
      "followers_url": "https://api.github.com/users/simondlr/followers",
      "following_url": "https://api.github.com/users/simondlr/following{/other_user}",
      "gists_url": "https://api.github.com/users/simondlr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simondlr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simondlr/subscriptions",
      "organizations_url": "https://api.github.com/users/simondlr/orgs",
      "repos_url": "https://api.github.com/users/simondlr/repos",
      "events_url": "https://api.github.com/users/simondlr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simondlr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T17:09:23Z",
    "updated_at": "2015-11-19T17:09:23Z",
    "author_association": "NONE",
    "body": "I think tokens created from the wallets (like what @frozeman demo-ed at Devcon) can include decimals. Because it will be needed in that context (for example), which \"paves the cowpaths\". :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158121560/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158143687",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158143687",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158143687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODE0MzY4Nw==",
    "user": {
      "login": "ethers",
      "id": 6937903,
      "node_id": "MDQ6VXNlcjY5Mzc5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6937903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ethers",
      "html_url": "https://github.com/ethers",
      "followers_url": "https://api.github.com/users/ethers/followers",
      "following_url": "https://api.github.com/users/ethers/following{/other_user}",
      "gists_url": "https://api.github.com/users/ethers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ethers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ethers/subscriptions",
      "organizations_url": "https://api.github.com/users/ethers/orgs",
      "repos_url": "https://api.github.com/users/ethers/repos",
      "events_url": "https://api.github.com/users/ethers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ethers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T18:16:16Z",
    "updated_at": "2015-11-19T18:16:16Z",
    "author_association": "MEMBER",
    "body": "> decimals, name and symbol are important for displaying to the end user\n\nAgree.  Are we going to add them to EIP20, or leave them in EIP22?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158143687/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158157910",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158157910",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158157910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODE1NzkxMA==",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T19:00:41Z",
    "updated_at": "2015-11-19T19:00:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would add them to 20, but mark as optional\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158157910/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158160081",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158160081",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158160081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODE2MDA4MQ==",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T19:07:34Z",
    "updated_at": "2015-11-19T19:08:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@simondlr i add your suggestion and also changed the order and names for `isApprovedFor` so it matches the function name:\n\n``` js\nfunction isApprovedFor(address _allowed, address _for) constant returns (bool success)\n```\n\ne.g.  `_allowed` isApprovedFor `_for`\n\nAnd this should probably return the still allowed value, e.g. if you already used up a part.\nWe should then probably rename this one too\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158160081/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158185574",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158185574",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158185574,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODE4NTU3NA==",
    "user": {
      "login": "nmushegian",
      "id": 924397,
      "node_id": "MDQ6VXNlcjkyNDM5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/924397?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nmushegian",
      "html_url": "https://github.com/nmushegian",
      "followers_url": "https://api.github.com/users/nmushegian/followers",
      "following_url": "https://api.github.com/users/nmushegian/following{/other_user}",
      "gists_url": "https://api.github.com/users/nmushegian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nmushegian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nmushegian/subscriptions",
      "organizations_url": "https://api.github.com/users/nmushegian/orgs",
      "repos_url": "https://api.github.com/users/nmushegian/repos",
      "events_url": "https://api.github.com/users/nmushegian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nmushegian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T20:19:15Z",
    "updated_at": "2015-11-19T20:19:15Z",
    "author_association": "NONE",
    "body": "^^ it's still ambiguous:\n\n`_allowed` ( has allowed or is an approved holder for ) isApprovedFor `_for`\n\nor \n\n`_allowed` (is allowed or is an approved spender for ) isApprovedFor `_for`\n\nMaybe `holder` and `spender` is more clear: `function isApprovedFor(address _spender, address _holder) constant returns (bool _success)`\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158185574/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158391860",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158391860",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158391860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODM5MTg2MA==",
    "user": {
      "login": "simondlr",
      "id": 716965,
      "node_id": "MDQ6VXNlcjcxNjk2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/716965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simondlr",
      "html_url": "https://github.com/simondlr",
      "followers_url": "https://api.github.com/users/simondlr/followers",
      "following_url": "https://api.github.com/users/simondlr/following{/other_user}",
      "gists_url": "https://api.github.com/users/simondlr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simondlr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simondlr/subscriptions",
      "organizations_url": "https://api.github.com/users/simondlr/orgs",
      "repos_url": "https://api.github.com/users/simondlr/repos",
      "events_url": "https://api.github.com/users/simondlr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simondlr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T12:55:54Z",
    "updated_at": "2015-11-20T12:55:54Z",
    "author_association": "NONE",
    "body": "Yes, I would say isApprovedFor should return uint256 value, not bool anymore. I like @nmushegian's suggestion of holder & spender.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158391860/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158436720",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158436720",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158436720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODQzNjcyMA==",
    "user": {
      "login": "Georgi87",
      "id": 259400,
      "node_id": "MDQ6VXNlcjI1OTQwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/259400?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Georgi87",
      "html_url": "https://github.com/Georgi87",
      "followers_url": "https://api.github.com/users/Georgi87/followers",
      "following_url": "https://api.github.com/users/Georgi87/following{/other_user}",
      "gists_url": "https://api.github.com/users/Georgi87/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Georgi87/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Georgi87/subscriptions",
      "organizations_url": "https://api.github.com/users/Georgi87/orgs",
      "repos_url": "https://api.github.com/users/Georgi87/repos",
      "events_url": "https://api.github.com/users/Georgi87/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Georgi87/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T15:42:44Z",
    "updated_at": "2015-11-20T15:42:44Z",
    "author_association": "NONE",
    "body": "For Gnosis it would make sense to add an optional identifier, to handle multiple tokens within one contract. In our use case each outcome for each event represents one type of token. Without an identifier, one contract has to be created for each outcome. A lot of token contracts replicating the same functionality would be written on chain. We think there are many use cases for contracts controlling multiple tokens. E.g. also Weifund has to create a new contract for each campaign. Knowing that there are many use cases for both, we should define a standard for both. Since Solidity allows method overloading we can still use the same function names:\n\n```\nfunction transfer(address _to, uint256 _value) returns (bool _success)\n\nfunction transfer(address _to, uint256 _value, bytes32 _identifier) returns (bool _success)\n```\n\nWhat do you think?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158436720/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158437795",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158437795",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158437795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODQzNzc5NQ==",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T15:46:34Z",
    "updated_at": "2015-11-20T15:46:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Georgi87 +1 we would need to do the same for `balanceOf`\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158437795/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158438707",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158438707",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158438707,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODQzODcwNw==",
    "user": {
      "login": "simondlr",
      "id": 716965,
      "node_id": "MDQ6VXNlcjcxNjk2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/716965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simondlr",
      "html_url": "https://github.com/simondlr",
      "followers_url": "https://api.github.com/users/simondlr/followers",
      "following_url": "https://api.github.com/users/simondlr/following{/other_user}",
      "gists_url": "https://api.github.com/users/simondlr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simondlr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simondlr/subscriptions",
      "organizations_url": "https://api.github.com/users/simondlr/orgs",
      "repos_url": "https://api.github.com/users/simondlr/repos",
      "events_url": "https://api.github.com/users/simondlr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simondlr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T15:49:57Z",
    "updated_at": "2015-11-20T15:49:57Z",
    "author_association": "NONE",
    "body": "You'll need to add identifiers for each function method. How are we going to work with optional, but useful standards? ie decimals, naming & identifiers? We should emphasise this as separate.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158438707/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158439737",
    "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158439737",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
    "id": 158439737,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODQzOTczNw==",
    "user": {
      "login": "frozeman",
      "id": 232662,
      "node_id": "MDQ6VXNlcjIzMjY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/232662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frozeman",
      "html_url": "https://github.com/frozeman",
      "followers_url": "https://api.github.com/users/frozeman/followers",
      "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
      "organizations_url": "https://api.github.com/users/frozeman/orgs",
      "repos_url": "https://api.github.com/users/frozeman/repos",
      "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frozeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T15:53:42Z",
    "updated_at": "2015-11-20T15:53:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Lets discuss this more.\n\nI changed `isApprovedFor` to `allowance`:\n\n``` js\nfunction allowance(address _address, address _spender) constant returns (uint256 remaining)\n\n// Returns true if `_spender ` is allowed to direct debit from `_address`\n```\n\nAnd renamed every occourance to `_spender` to make all variables consistent.\n\nI also renamed the event, please @all take a look\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158439737/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
