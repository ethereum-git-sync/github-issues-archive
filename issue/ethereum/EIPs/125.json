{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/125",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/125/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/125/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/125/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/125",
  "id": 162611678,
  "node_id": "MDU6SXNzdWUxNjI2MTE2Nzg=",
  "number": 125,
  "title": "Pattern matching through a precompiled contract.",
  "user": {
    "login": "androlo",
    "id": 2809499,
    "node_id": "MDQ6VXNlcjI4MDk0OTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2809499?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/androlo",
    "html_url": "https://github.com/androlo",
    "followers_url": "https://api.github.com/users/androlo/followers",
    "following_url": "https://api.github.com/users/androlo/following{/other_user}",
    "gists_url": "https://api.github.com/users/androlo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/androlo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/androlo/subscriptions",
    "organizations_url": "https://api.github.com/users/androlo/orgs",
    "repos_url": "https://api.github.com/users/androlo/repos",
    "events_url": "https://api.github.com/users/androlo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/androlo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 21,
  "created_at": "2016-06-28T06:27:11Z",
  "updated_at": "2022-01-30T02:24:06Z",
  "closed_at": "2022-01-30T02:24:06Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I would like to propose that pattern matching is added to Ethereum as a precompiled contract. The call would basically take a string and pattern as arguments (both in the form of strings), the pattern would be compiled (if needed), the matching done, and the result would be the return value(s). More specifics would have to be discussed, e.g. should there be additional arguments for max number of matches, index of each match, etc.\n\n**Motivation**\n\nPattern matching are built in features in most programming languages. A precompiled contract would make it possible to do fast and safe input validation. This fits in well with the current focus on security and validation. I've actually been at this for a while, and even done some experimentation in Solidity with NFA etc. but I don't think it is plausible so I dropped it. \n\nPre-compiling expressions would of course not be possible, but this could still be a useful feature.\n\n**Gas**\n\nI don't know how metering would work, but perhaps it could be based on the length of the string, and maybe some sort of quick estimate of the complexity of the pattern. This would require some thought.\n",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/125/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/125/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/228979087",
    "html_url": "https://github.com/ethereum/EIPs/issues/125#issuecomment-228979087",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/125",
    "id": 228979087,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODk3OTA4Nw==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-28T08:00:09Z",
    "updated_at": "2016-06-28T08:00:09Z",
    "author_association": "MEMBER",
    "body": "Regexps are huge attack surfaces. Lua-style regexps less so than Pcre, but still.. Also difficult to gas-meter on native implementation, since input size is almost not relevant as a measure of computational complexity. \n- Regexp attack surface is both from so called ReDoS attacks (regexps that backtrack a lot), see [redos](https://en.wikipedia.org/wiki/ReDoS). \n- Also from whatever regexp library is used. \n\nSome info about [Lua patterns](http://www.lua.org/pil/20.1.html) \n\n> Unlike several other scripting languages, Lua does not use POSIX regular expressions (regexp) for pattern matching. The main reason for this is size: A typical implementation of POSIX regexp takes more than 4,000 lines of code. This is bigger than all Lua standard libraries together. In comparison, the implementation of pattern matching in Lua has less than 500 lines. Of course, the pattern matching in Lua cannot do all that a full POSIX implementation does. Nevertheless, pattern matching in Lua is a powerful tool and includes some features that are difficult to match with standard POSIX implementations.\n\nI don't think PCRE regexp complexity can be calculated beforehand, at least not accurately enough to protect against malicious input explicitly crafted for denial-of-service.  \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/228979087/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/228988447",
    "html_url": "https://github.com/ethereum/EIPs/issues/125#issuecomment-228988447",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/125",
    "id": 228988447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODk4ODQ0Nw==",
    "user": {
      "login": "androlo",
      "id": 2809499,
      "node_id": "MDQ6VXNlcjI4MDk0OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2809499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/androlo",
      "html_url": "https://github.com/androlo",
      "followers_url": "https://api.github.com/users/androlo/followers",
      "following_url": "https://api.github.com/users/androlo/following{/other_user}",
      "gists_url": "https://api.github.com/users/androlo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/androlo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/androlo/subscriptions",
      "organizations_url": "https://api.github.com/users/androlo/orgs",
      "repos_url": "https://api.github.com/users/androlo/repos",
      "events_url": "https://api.github.com/users/androlo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/androlo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-28T08:43:11Z",
    "updated_at": "2016-06-28T08:43:11Z",
    "author_association": "NONE",
    "body": "Thanks.\n\nI should be clear, i don't mean it has to be actual full-on regexp, but some form of pattern matching that can be used to process strings, to avoid having to use string parsing libraries written in Solidity. The cost of doing that is simply too high. If there is no regexp or regexp-like libraries where the time-complexity of compilation and matching can be calculated in a straight-forward way then it must of course use something simpler. I don't think that would be a problem at all.\n\nI edited the description.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/228988447/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/228989650",
    "html_url": "https://github.com/ethereum/EIPs/issues/125#issuecomment-228989650",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/125",
    "id": 228989650,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODk4OTY1MA==",
    "user": {
      "login": "androlo",
      "id": 2809499,
      "node_id": "MDQ6VXNlcjI4MDk0OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2809499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/androlo",
      "html_url": "https://github.com/androlo",
      "followers_url": "https://api.github.com/users/androlo/followers",
      "following_url": "https://api.github.com/users/androlo/following{/other_user}",
      "gists_url": "https://api.github.com/users/androlo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/androlo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/androlo/subscriptions",
      "organizations_url": "https://api.github.com/users/androlo/orgs",
      "repos_url": "https://api.github.com/users/androlo/repos",
      "events_url": "https://api.github.com/users/androlo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/androlo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-28T08:48:25Z",
    "updated_at": "2016-06-28T08:48:25Z",
    "author_association": "NONE",
    "body": "Will look into LUA patterns. That looks like maybe an alternative. Again, thanks!\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/228989650/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/228993452",
    "html_url": "https://github.com/ethereum/EIPs/issues/125#issuecomment-228993452",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/125",
    "id": 228993452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODk5MzQ1Mg==",
    "user": {
      "login": "wanderer",
      "id": 158211,
      "node_id": "MDQ6VXNlcjE1ODIxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/158211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wanderer",
      "html_url": "https://github.com/wanderer",
      "followers_url": "https://api.github.com/users/wanderer/followers",
      "following_url": "https://api.github.com/users/wanderer/following{/other_user}",
      "gists_url": "https://api.github.com/users/wanderer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wanderer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wanderer/subscriptions",
      "organizations_url": "https://api.github.com/users/wanderer/orgs",
      "repos_url": "https://api.github.com/users/wanderer/repos",
      "events_url": "https://api.github.com/users/wanderer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wanderer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-28T09:04:49Z",
    "updated_at": "2016-06-28T09:05:33Z",
    "author_association": "MEMBER",
    "body": "This should be implemented as a library in solidity not as a precompiled. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/228993452/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229002962",
    "html_url": "https://github.com/ethereum/EIPs/issues/125#issuecomment-229002962",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/125",
    "id": 229002962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTAwMjk2Mg==",
    "user": {
      "login": "androlo",
      "id": 2809499,
      "node_id": "MDQ6VXNlcjI4MDk0OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2809499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/androlo",
      "html_url": "https://github.com/androlo",
      "followers_url": "https://api.github.com/users/androlo/followers",
      "following_url": "https://api.github.com/users/androlo/following{/other_user}",
      "gists_url": "https://api.github.com/users/androlo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/androlo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/androlo/subscriptions",
      "organizations_url": "https://api.github.com/users/androlo/orgs",
      "repos_url": "https://api.github.com/users/androlo/repos",
      "events_url": "https://api.github.com/users/androlo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/androlo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-28T09:47:23Z",
    "updated_at": "2016-06-28T09:47:23Z",
    "author_association": "NONE",
    "body": "@wanderer Do you mean as actual Solidity code? I and others have tried, but even basic string ops like simple comparisons costs a lot of gas - several times the cost of the rest of the call in many cases. Anything that requires non trivial string parsing I think would be way over the top.\n\nThanks for pointing out. I will get some existing string processing library code and give some examples.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229002962/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229007815",
    "html_url": "https://github.com/ethereum/EIPs/issues/125#issuecomment-229007815",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/125",
    "id": 229007815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTAwNzgxNQ==",
    "user": {
      "login": "androlo",
      "id": 2809499,
      "node_id": "MDQ6VXNlcjI4MDk0OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2809499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/androlo",
      "html_url": "https://github.com/androlo",
      "followers_url": "https://api.github.com/users/androlo/followers",
      "following_url": "https://api.github.com/users/androlo/following{/other_user}",
      "gists_url": "https://api.github.com/users/androlo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/androlo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/androlo/subscriptions",
      "organizations_url": "https://api.github.com/users/androlo/orgs",
      "repos_url": "https://api.github.com/users/androlo/repos",
      "events_url": "https://api.github.com/users/androlo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/androlo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-28T10:08:53Z",
    "updated_at": "2016-06-28T10:10:50Z",
    "author_association": "NONE",
    "body": "This is a super simple contract, derived from the stringutils library in dapp-bin. It does a simple equals check for each character in a 210 char string. The cost of execution is ~100k gas. For 32 chars it ends up being around 12k (both in latest browser solidity, can be checked). Cost can be lowered by using inline assembly, and in this simple equals check it can of course be optimized to check one word at a time, but if comparisons needs to be run for each char this is the simplest possible check. Also, assembly would of course make formal analysis very hard. With more advanced parsing it would be many times this cost, and even short strings would be very expensive.\n\n```\ncontract StringUtils {\n\n    /// @dev Compares two strings and returns true iff they are equal.\n    function equal(bytes a, bytes b) constant internal returns (bool) {\n        uint length = a.length;\n        if (b.length != a.length) {\n            return false;\n        }\n        for (uint i = 0; i < length; i ++) {\n            if (a[i] != b[i])\n                return false;\n        }\n        return true;\n    }\n\n    function testMultiWordSuccess() constant returns (bool) {\n        return equal(\n            \"abcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghij\",\n            \"abcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghij\"\n        );\n    }\n\n}\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229007815/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229151906",
    "html_url": "https://github.com/ethereum/EIPs/issues/125#issuecomment-229151906",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/125",
    "id": 229151906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTE1MTkwNg==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-28T19:12:18Z",
    "updated_at": "2016-06-28T19:12:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Perhaps the real need is support for more efficient string processing in the EVM.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229151906/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229467829",
    "html_url": "https://github.com/ethereum/EIPs/issues/125#issuecomment-229467829",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/125",
    "id": 229467829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTQ2NzgyOQ==",
    "user": {
      "login": "androlo",
      "id": 2809499,
      "node_id": "MDQ6VXNlcjI4MDk0OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2809499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/androlo",
      "html_url": "https://github.com/androlo",
      "followers_url": "https://api.github.com/users/androlo/followers",
      "following_url": "https://api.github.com/users/androlo/following{/other_user}",
      "gists_url": "https://api.github.com/users/androlo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/androlo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/androlo/subscriptions",
      "organizations_url": "https://api.github.com/users/androlo/orgs",
      "repos_url": "https://api.github.com/users/androlo/repos",
      "events_url": "https://api.github.com/users/androlo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/androlo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-29T19:49:27Z",
    "updated_at": "2016-06-29T19:49:57Z",
    "author_association": "NONE",
    "body": "@gcolvin Perhaps. \n\nThis I wrote in the gitter chat, I feel like it's a good complement to the issue:\n\n_The crux is that string validation is incredibly expensive, which means people resort to their own non-standardized, hand made stuff that specialize on one particular thing, or simply avoid things that would involve pattern matching altogether._\n\n_A non trivial Solidity contract for pattern matching simply is not possible. It is essentially the same thing Vitalik is proposing for general elliptic curve arithmetic, and the argument is the same - technically you can do it in Solidity, but the gas costs are prohibitive, so a precompiled contract with some sort of useful system could be a solution (regardless of what system is actually used)._\n\n_This is not really a theoretical issue, but a purely practical one._\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229467829/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229474937",
    "html_url": "https://github.com/ethereum/EIPs/issues/125#issuecomment-229474937",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/125",
    "id": 229474937,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTQ3NDkzNw==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-29T20:16:29Z",
    "updated_at": "2016-06-29T20:20:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Right @androlo  Do you have an idea, practically, of what EVM bytecodes we would need to make things like this efficient?  Vague memories of the 8086 string operators come to mind.  And the difficulties of byte-processing on word-addressed architectures like the PDP-7 and Alpha.  And more general problem of dealing efficiently with arrays of numbers that are narrower than 256 bits.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229474937/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229477985",
    "html_url": "https://github.com/ethereum/EIPs/issues/125#issuecomment-229477985",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/125",
    "id": 229477985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTQ3Nzk4NQ==",
    "user": {
      "login": "androlo",
      "id": 2809499,
      "node_id": "MDQ6VXNlcjI4MDk0OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2809499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/androlo",
      "html_url": "https://github.com/androlo",
      "followers_url": "https://api.github.com/users/androlo/followers",
      "following_url": "https://api.github.com/users/androlo/following{/other_user}",
      "gists_url": "https://api.github.com/users/androlo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/androlo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/androlo/subscriptions",
      "organizations_url": "https://api.github.com/users/androlo/orgs",
      "repos_url": "https://api.github.com/users/androlo/repos",
      "events_url": "https://api.github.com/users/androlo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/androlo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-29T20:28:04Z",
    "updated_at": "2016-06-29T20:28:04Z",
    "author_association": "NONE",
    "body": "I don't know. I can't comment on the pros and cons of additional EVM components, which is why I put a precompiled as the alternative. I'm basically just a Solidity coder that identified a potential issue, hoping that people who knows better can help get it right.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229477985/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229482474",
    "html_url": "https://github.com/ethereum/EIPs/issues/125#issuecomment-229482474",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/125",
    "id": 229482474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTQ4MjQ3NA==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-29T20:43:40Z",
    "updated_at": "2016-06-29T20:43:40Z",
    "author_association": "MEMBER",
    "body": "I think a better approach might be to point to a few usecases where this would be needed. That way, we could focus on narrower issues:\n\na) Alternative workarounds (off-chain processing)\nb) Isolating minimum required string processing functionality\n\nI think it's easier to discuss a concrete problem, and not just a feature \"because reasons\". \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229482474/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229485561",
    "html_url": "https://github.com/ethereum/EIPs/issues/125#issuecomment-229485561",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/125",
    "id": 229485561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTQ4NTU2MQ==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-29T20:54:32Z",
    "updated_at": "2016-06-29T20:54:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@androlo can you point me at Vitalik's elliptic-curve proposal?  I don't see it in the EIP issues.\n\n@hollman I think the simple string comparison example is an obvious use case.  I'd love to see more.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229485561/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229490193",
    "html_url": "https://github.com/ethereum/EIPs/issues/125#issuecomment-229490193",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/125",
    "id": 229490193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTQ5MDE5Mw==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-29T21:11:36Z",
    "updated_at": "2016-06-29T21:11:36Z",
    "author_association": "MEMBER",
    "body": "Ok, but for string comparison, there's also the possibility to compare the SHA3-hashes. The cost of that also scales with input size, but if it's only comparison for it's own sake, it should fit the bill, no? \n\n```\ncontract StringUtils {\n\n    /// @dev Compares two strings and returns true iff they are equal.\n    function equal(bytes a, bytes b) constant internal returns (bool) {\n        uint length = a.length;\n        if (b.length != a.length) {\n            return false;\n        }\n        for (uint i = 0; i < length; i ++) {\n            if (a[i] != b[i])\n                return false;\n        }\n        return true;\n    }\n\n    function eq2(bytes a, bytes b) constant internal returns(bool){\n        bytes32 sa = sha3(a);\n        bytes32 sb = sha3(b);\n        return sa == sb;\n\n    }\n\n    function testMultiWordSuccess() constant returns (bool) {\n        return equal(\n            \"abcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghij\",\n            \"abcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghij\"\n        );\n    }\n    function testMultiWordSuccessSha() constant returns (bool) {\n        return eq2(\n            \"abcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghij\",\n            \"abcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghij\"\n        );\n    }\n    function testMultiWordFailSha() constant returns (bool) {\n        return eq2(\n            \"abcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghij\",\n            \"abcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghix\"\n        );\n    }\n\n}\n```\n\ntestMultiWordSuccess: execution cost 49703 gas\ntestMultiWordSuccessSha: execution cost 1027 gas\ntestMultiWordFailSha: execution cost 1049 gas\n\nSo I'm wondering about the underlying motives, since I'm guessing it's more than just wanting to check string equality behind this EIP? \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229490193/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229496570",
    "html_url": "https://github.com/ethereum/EIPs/issues/125#issuecomment-229496570",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/125",
    "id": 229496570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTQ5NjU3MA==",
    "user": {
      "login": "androlo",
      "id": 2809499,
      "node_id": "MDQ6VXNlcjI4MDk0OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2809499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/androlo",
      "html_url": "https://github.com/androlo",
      "followers_url": "https://api.github.com/users/androlo/followers",
      "following_url": "https://api.github.com/users/androlo/following{/other_user}",
      "gists_url": "https://api.github.com/users/androlo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/androlo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/androlo/subscriptions",
      "organizations_url": "https://api.github.com/users/androlo/orgs",
      "repos_url": "https://api.github.com/users/androlo/repos",
      "events_url": "https://api.github.com/users/androlo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/androlo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-29T21:36:30Z",
    "updated_at": "2016-06-29T21:49:24Z",
    "author_association": "NONE",
    "body": "Yes you can hash them, but yeah it's about more then comparison.\n\nLet's say for example you have an oracle, expecting input data to be on a specific format. You have your off-chain processing, but that is of course only good if people actually use your dapp rather then transacting to the contract directly, in which case the data could be on any given format. The parser might be vulnurable to certain strings, and you want to check for certain patterns to avoid that. I think this isn't about special cases, just the usual issues. Wanting to check strings is not weird or controversial, is it?\n\nI also know that strings is usually not the best way of doing things; in fact i never use them myself, since one or more `bytes32` is usually better and a lot cheaper. I don't think people will necessarily work that way though, given how things has been up to now.\n\nI'm also not dead set on this, there's probably more important, more immediate things that needs attention, but still.\n\nEdit: TL;DR - I think people gonna do lots of string stuff regardless of what people think, and they will get rekt out there if there are no safeguards.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229496570/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229499229",
    "html_url": "https://github.com/ethereum/EIPs/issues/125#issuecomment-229499229",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/125",
    "id": 229499229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTQ5OTIyOQ==",
    "user": {
      "login": "androlo",
      "id": 2809499,
      "node_id": "MDQ6VXNlcjI4MDk0OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2809499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/androlo",
      "html_url": "https://github.com/androlo",
      "followers_url": "https://api.github.com/users/androlo/followers",
      "following_url": "https://api.github.com/users/androlo/following{/other_user}",
      "gists_url": "https://api.github.com/users/androlo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/androlo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/androlo/subscriptions",
      "organizations_url": "https://api.github.com/users/androlo/orgs",
      "repos_url": "https://api.github.com/users/androlo/repos",
      "events_url": "https://api.github.com/users/androlo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/androlo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-29T21:47:17Z",
    "updated_at": "2016-06-29T21:47:17Z",
    "author_association": "NONE",
    "body": "@gcolvin https://github.com/ethereum/EIPs/issues/102\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229499229/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229500451",
    "html_url": "https://github.com/ethereum/EIPs/issues/125#issuecomment-229500451",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/125",
    "id": 229500451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTUwMDQ1MQ==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-29T21:52:21Z",
    "updated_at": "2016-06-29T21:52:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks Andreas.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229500451/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229806684",
    "html_url": "https://github.com/ethereum/EIPs/issues/125#issuecomment-229806684",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/125",
    "id": 229806684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTgwNjY4NA==",
    "user": {
      "login": "androlo",
      "id": 2809499,
      "node_id": "MDQ6VXNlcjI4MDk0OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2809499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/androlo",
      "html_url": "https://github.com/androlo",
      "followers_url": "https://api.github.com/users/androlo/followers",
      "following_url": "https://api.github.com/users/androlo/following{/other_user}",
      "gists_url": "https://api.github.com/users/androlo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/androlo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/androlo/subscriptions",
      "organizations_url": "https://api.github.com/users/androlo/orgs",
      "repos_url": "https://api.github.com/users/androlo/repos",
      "events_url": "https://api.github.com/users/androlo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/androlo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-30T22:27:52Z",
    "updated_at": "2016-06-30T22:27:52Z",
    "author_association": "NONE",
    "body": "Looks like there are pathological patterns in that LUA script as well, though I haven't found a good reference. Guessing maybe some simple matching with wildcards etc. would be enough in most cases. Something at the level of those search patterns that are used when querying webservers. Perhaps it can even be made to run gas-efficiently in Solidity.\n\nGonna leave the issue open for now.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229806684/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229822694",
    "html_url": "https://github.com/ethereum/EIPs/issues/125#issuecomment-229822694",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/125",
    "id": 229822694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTgyMjY5NA==",
    "user": {
      "login": "subtly",
      "id": 6557250,
      "node_id": "MDQ6VXNlcjY1NTcyNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6557250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/subtly",
      "html_url": "https://github.com/subtly",
      "followers_url": "https://api.github.com/users/subtly/followers",
      "following_url": "https://api.github.com/users/subtly/following{/other_user}",
      "gists_url": "https://api.github.com/users/subtly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/subtly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/subtly/subscriptions",
      "organizations_url": "https://api.github.com/users/subtly/orgs",
      "repos_url": "https://api.github.com/users/subtly/repos",
      "events_url": "https://api.github.com/users/subtly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/subtly/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-01T00:10:59Z",
    "updated_at": "2016-07-01T00:10:59Z",
    "author_association": "MEMBER",
    "body": "Agree with @wanderer \n\nRemember... all the code is on the chain, can be loaded, and then later be \"promoted\" within the solidity ecosystem. One of the best paths forward is to try and build & test these solutions with what we have now, and then figure out how to promote and optimise after the functionality is refined. Think of it like cryptography – ethereum code is only as strong as the weakest link and I think we can build code that is as strong as the cryptography that backs its state.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/229822694/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/314532234",
    "html_url": "https://github.com/ethereum/EIPs/issues/125#issuecomment-314532234",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/125",
    "id": 314532234,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDUzMjIzNA==",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-11T18:29:29Z",
    "updated_at": "2017-07-11T18:29:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Shameless plug: I've implemented a compiler for converting regular expressions into Solidity (https://github.com/gnidan/solregex)\r\n\r\nNot a pre-compiled contract, but hopefully a useful solution for getting on-chain pattern matching.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/314532234/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1013794835",
    "html_url": "https://github.com/ethereum/EIPs/issues/125#issuecomment-1013794835",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/125",
    "id": 1013794835,
    "node_id": "IC_kwDOAq426M48bUgT",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-16T02:06:35Z",
    "updated_at": "2022-01-16T02:06:35Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1013794835/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1025053084",
    "html_url": "https://github.com/ethereum/EIPs/issues/125#issuecomment-1025053084",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/125",
    "id": 1025053084,
    "node_id": "IC_kwDOAq426M49GRGc",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-30T02:24:06Z",
    "updated_at": "2022-01-30T02:24:06Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1025053084/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
