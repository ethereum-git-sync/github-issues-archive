{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/1068",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/1068/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/1068/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/1068/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/1068",
  "id": 321246686,
  "node_id": "MDU6SXNzdWUzMjEyNDY2ODY=",
  "number": 1068,
  "title": "ERC-1068 Loan Standard",
  "user": {
    "login": "ajunge",
    "id": 3538255,
    "node_id": "MDQ6VXNlcjM1MzgyNTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3538255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ajunge",
    "html_url": "https://github.com/ajunge",
    "followers_url": "https://api.github.com/users/ajunge/followers",
    "following_url": "https://api.github.com/users/ajunge/following{/other_user}",
    "gists_url": "https://api.github.com/users/ajunge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ajunge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ajunge/subscriptions",
    "organizations_url": "https://api.github.com/users/ajunge/orgs",
    "repos_url": "https://api.github.com/users/ajunge/repos",
    "events_url": "https://api.github.com/users/ajunge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ajunge/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2018-05-08T15:56:54Z",
  "updated_at": "2021-12-27T23:11:21Z",
  "closed_at": "2021-12-27T23:11:21Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "<pre>\r\nEIP: <to be assigned>\r\nTitle: ERC-1068 Loan Standard\r\nAuthors: \r\n- Andres Junge &ltandres.junge@consensys.net&gt, \r\n- Anibal Catal√°n &ltanibal.catalan@consensys.net&gt\r\n- Jitendra Chittoda &ltjitendra@ethlend.io&gt\r\n- Stani Kulechov &ltstani@ethlend.io&gt\r\nType: Standard\r\nCategory ERC\r\nStatus: Draft\r\nCreated: 2018-05-08\r\n</pre>\r\n\r\n## Simple Summary\r\nA standard interface for loans. Tries to be as flexible as posible to allow different loan scenarios, p2p lending, crowdfunding, reverse dutch auction for interest and other to be came in the future.\r\n\r\n## Abstract\r\nThe following standard allows for the implementation of a standard API for loans within smart contracts. This standard provides basic functionalities to fund loan, accept the raised amount, payback the due, and recover the investment by lenders. as well the loan contract can have diferent features so many of the features are optional, like interest, loan as token, collateral, review borrower behaivor, risk alasysis, etc.\r\n\r\n## Motivation\r\nThis standard interface will allow the development of interoperable lending systems. dApp developers can build their solutions based on already deployed loan contracts. Posible solutions that will benefit of having a loan standard are: credit rating systems, curated loan markets and decentralized hedge funds.\r\n\r\n## Definitions\r\n* `msg.sender`: is always the address where the current (external) function call came from.\r\n* `borrower`: entity that receive ERC-20 Tokens from `lenders` with the intention of giving it back after a period of time.\r\n* `lender`: entity that contribute with ERC-20 Tokens to the `borrower` on condition of return. Can be one or many.\r\n* `capital`: amount lended. The amount is represented as a balance of a ERC-20 Token.\r\n* `payment`: amount repaid. The amount is represented as a balance of a ERC-20 Token.\r\n* `principal`: amount collected. The amount is represented as a balance of a ERC-20 Token.\r\n* `terms`: The terms parameter was choosen to have the type `bytes32`. This in order to make the terms entries as general as possible while maintaining a very simple code base.\r\n\r\n## Specification\r\n\r\n### Basic loan\r\nThe basic loan allows to register the most basic credit operation.\r\n\r\n### Methods\r\n\r\n#### getAmount\r\nReturns the amount of the loan, the amount of ERC20 Tokens that the `borrower` is asking for.\r\n\r\nOPTIONAL - This method can be used to improve usability, but interfaces and other contracts MUST NOT expect these values to be present.\r\n\r\n``` js\r\nfunction getAmount() public view returns(uint256);\r\n```\r\n\r\n#### getTokenAddress\r\nReturns the address of the ERC20 Token used in the loan.\r\n\r\nOPTIONAL - This method can be used to improve usability, but interfaces and other contracts MUST NOT expect these values to be present.\r\n\r\n``` js\r\nfunction getTokenAddress() public view returns(address);\r\n```\r\n\r\n#### getBorrower\r\n\r\nReturns the address of the beneficiary of the loan (`borrower`).\r\n\r\nOPTIONAL - This method can be used to improve usability, but interfaces and other contracts MUST NOT expect these values to be present.\r\n\r\n``` js\r\nfunction getBorrower() public view returns(address);\r\n```\r\n\r\n#### getTerms\r\n\r\nReturns the terms `bytes32` of the loan.\r\n\r\nOPTIONAL - This method can be used to improve usability, but interfaces and other contracts MUST NOT expect these values to be present.\r\n\r\n``` js\r\nfunction getTerms() public view returns(bytes32);\r\n```\r\n\r\n#### fund\r\nthe `msg.sender`, transfers `capital` amount of tokens to the smart contract, The `lender`, should be registered  with the capital added to the fund.\r\n\r\nThe variable `_lender` was added to differentiate between who transfers the tokens, and who can claim the tokens back.\r\n\r\nThe function SHOULD throw if the `msg.sender` account balance does not have enough tokens to spend or if `msg.sender `does not aprove that the smart contract can transfer the `capital`.\r\n\r\nNote fund of 0 `capital` MUST be throw.\r\n\r\n``` js\r\nfunction fund(address _lender, uint256 _capital) public returns (bool success);\r\n```\r\n\r\n##### Triggers Event: Funded\r\n\r\n#### withdraw\r\n`lender`, the `msg.sender`, retire `capital`, tranfer tokens from the loan to the `msg.sender`.\r\n\r\nThe variable `_to` was added to differentiate between who can claim the tokens back, and where the tokens will going.\r\n\r\nSHOULD throw if the `msg.sender` account balance does not have enough tokens to retire. the retire could means the amount payback by the borrower, or in some cases, the lender may regret his investment and retire that amount, only in funding stage.\r\n\r\nNote withdraw of 0 `capital` MUST be throw.\r\n\r\n``` js\r\nfunction withdraw(address _to, uint256 _capital) public returns (bool success);\r\n```\r\n\r\n##### Triggers Event: Withdrawn\r\n\r\n#### cancel\r\nThe `msg.sender`, cancel loan, the state of the loan change to cenceled.\r\n\r\nSHOULD throw if the current stage of the loan is not funding.\r\n\r\nOPTIONAL - This method can be used to improve usability, but interfaces and other contracts MUST NOT expect these values to be present.\r\n\r\n``` js\r\nfunction cancel() public returns (bool success);\r\n```\r\n\r\n##### Triggers Event: Cancelled\r\n\r\n#### accept\r\n`borrower`, the `msg.sender`, collect the `principal` in the loan, the loan change his stage to paying.\r\n\r\nwhen the `borrower` collects the `principal` implicitly accepts the `terms` of the loan.\r\n\r\nNote collect of 0 `principal` MUST be throw.\r\n\r\n``` js\r\nfunction accept() public returns (bool success);\r\n```\r\n##### Triggers Event: Accepted\r\n\r\n#### payback\r\nThe `msg.sender`, transfers `payment` amount of tokens to the smart contract, if the total amount paid by borrower is higher than the total amout to be paid, change the stage to finished.\r\n\r\nThe variable `_from` was added to differentiate between who transfers the tokens and the `borrower`.\r\n\r\nNote payback of 0 `payment` MUST be throw.\r\n\r\n``` js\r\nfunction payback(address _from, uint256 _payment) public returns (bool successs);\r\n```\r\n##### Triggers Event: Paid\r\n\r\n#### stage\r\n\r\nReturns the stage of the loan -e.g. \"2\", the meaning of the number will depend on your implementation.\r\n\r\n``` js\r\nfunction stage() public view returns (uint8)\r\n```\r\n\r\n### Events\r\n\r\n#### Begun\r\n\r\nMUST be triggered when you set all the parameters and the loan is ready to start been fundable.\r\n\r\n``` js\r\nevent Begun(address token, address borrower, uint256 requiredCapital);\r\n```\r\n\r\nOPTIONAL - This method can be used to improve usability, but interfaces and other contracts MUST NOT expect these values to be present.\r\n\r\n#### Funded\r\n\r\nMUST be triggered when `fund` was succesfully called.\r\n\r\n``` js\r\nevent Funded(address indexed from, address indexed lender, uint256 capital);\r\n```\r\n\r\n#### Withdrawn\r\n\r\nMUST be triggered when `withdraw` was succesfully called.\r\n\r\n``` js\r\nevent Withdrawn(address indexed lender, address indexed receiver, uint256 capital);\r\n```\r\n\r\n#### Cancelled\r\n\r\nMUST be triggered when `cancel` was succesfully called.\r\n\r\nOPTIONAL - This method can be used to improve usability, but interfaces and other contracts MUST NOT expect these values to be present.\r\n\r\n``` js\r\nevent Cancelled(address _who);\r\n```\r\n\r\n#### Accepted\r\nMUST be triggered when `collect` was succesfully called.\r\n\r\n``` js\r\nevent Accepted(address borrower, uint256 principal, bytes32 terms);\r\n```\r\n\r\n#### Paid\r\n\r\nMUST be triggered when `payback` was succesfully called.\r\n\r\n``` js\r\nevent Paid(address indexed from, address borrower, uint256 payment);\r\n```\r\n\r\n#### Defaulted\r\nMUST be triggered when the loan time end and the borrower still due tokens.\r\n\r\n``` js\r\nevent Defaulted(address borrower, uint256 debt);\r\n```\r\nOPTIONAL - This method can be used to improve usability, but interfaces and other contracts MUST NOT expect these values to be present.\r\n\r\n#### Finished\r\nMUST be triggered when when the loan time end and it is fully paid.\r\n\r\n``` js\r\nevent Finished(address borrower);\r\n```\r\nOPTIONAL - This method can be used to improve usability, but interfaces and other contracts MUST NOT expect these values to be present.\r\n\r\n## Implementation\r\n\r\n### Interface Implementation\r\n\r\n[Loan](https://github.com/EtherLoan/loan-standard/blob/master/contracts/standard/Loan.sol) just the obligatory functions.\r\n\r\n[LoanBasic](https://github.com/EtherLoan/loan-standard/blob/master/contracts/standard/LoanBasic.sol) add optional functions.\r\n\r\n### Logic Implementations\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/1068/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/1068/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/387856350",
    "html_url": "https://github.com/ethereum/EIPs/issues/1068#issuecomment-387856350",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1068",
    "id": 387856350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Nzg1NjM1MA==",
    "user": {
      "login": "ministras",
      "id": 17068792,
      "node_id": "MDQ6VXNlcjE3MDY4Nzky",
      "avatar_url": "https://avatars.githubusercontent.com/u/17068792?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ministras",
      "html_url": "https://github.com/ministras",
      "followers_url": "https://api.github.com/users/ministras/followers",
      "following_url": "https://api.github.com/users/ministras/following{/other_user}",
      "gists_url": "https://api.github.com/users/ministras/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ministras/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ministras/subscriptions",
      "organizations_url": "https://api.github.com/users/ministras/orgs",
      "repos_url": "https://api.github.com/users/ministras/repos",
      "events_url": "https://api.github.com/users/ministras/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ministras/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-09T19:55:34Z",
    "updated_at": "2018-05-09T19:55:34Z",
    "author_association": "NONE",
    "body": "Why only ERC-20 Tokens? What about other standards? Why not to go with advanced ERC-777?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/387856350/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/388037457",
    "html_url": "https://github.com/ethereum/EIPs/issues/1068#issuecomment-388037457",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1068",
    "id": 388037457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODAzNzQ1Nw==",
    "user": {
      "login": "shogochiai",
      "id": 4891004,
      "node_id": "MDQ6VXNlcjQ4OTEwMDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4891004?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shogochiai",
      "html_url": "https://github.com/shogochiai",
      "followers_url": "https://api.github.com/users/shogochiai/followers",
      "following_url": "https://api.github.com/users/shogochiai/following{/other_user}",
      "gists_url": "https://api.github.com/users/shogochiai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shogochiai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shogochiai/subscriptions",
      "organizations_url": "https://api.github.com/users/shogochiai/orgs",
      "repos_url": "https://api.github.com/users/shogochiai/repos",
      "events_url": "https://api.github.com/users/shogochiai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shogochiai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-10T12:20:32Z",
    "updated_at": "2018-05-10T12:20:32Z",
    "author_association": "NONE",
    "body": "Do you have any idea to put deterrence in order not to happen default?\r\n\r\nMaybe one of feasible measurement is \r\n\r\n```\r\n1. Once borrower has been defaulted, track all addresses who accepted the money being lent\r\n\r\n2. Put some penalties to that addresses\r\n\r\n3. Eventually everyone doesn't want to accept defaulted fund and it is useless\r\n\r\n4. Borrower try to avoid default\r\n```\r\n\r\nThis is just a starting point of discussion, and if you guys have better idea, please kindly share me that.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/388037457/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/389037853",
    "html_url": "https://github.com/ethereum/EIPs/issues/1068#issuecomment-389037853",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1068",
    "id": 389037853,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTAzNzg1Mw==",
    "user": {
      "login": "adklempner",
      "id": 22138672,
      "node_id": "MDQ6VXNlcjIyMTM4Njcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/22138672?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adklempner",
      "html_url": "https://github.com/adklempner",
      "followers_url": "https://api.github.com/users/adklempner/followers",
      "following_url": "https://api.github.com/users/adklempner/following{/other_user}",
      "gists_url": "https://api.github.com/users/adklempner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adklempner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adklempner/subscriptions",
      "organizations_url": "https://api.github.com/users/adklempner/orgs",
      "repos_url": "https://api.github.com/users/adklempner/repos",
      "events_url": "https://api.github.com/users/adklempner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adklempner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T04:18:07Z",
    "updated_at": "2018-05-15T04:18:07Z",
    "author_association": "NONE",
    "body": "Going off of @ministras 's point, why not abstract away the types of/number of assets being used for `capital`, `principal`, and `terms`?\r\n\r\n@shogochiai : I think defining a penalty mechanism is out of scope for this interface. It should be up to the implementer to specify what happens when a loan is defaulted on.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/389037853/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/390482145",
    "html_url": "https://github.com/ethereum/EIPs/issues/1068#issuecomment-390482145",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1068",
    "id": 390482145,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDQ4MjE0NQ==",
    "user": {
      "login": "montyanderson",
      "id": 3048503,
      "node_id": "MDQ6VXNlcjMwNDg1MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3048503?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/montyanderson",
      "html_url": "https://github.com/montyanderson",
      "followers_url": "https://api.github.com/users/montyanderson/followers",
      "following_url": "https://api.github.com/users/montyanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/montyanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/montyanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/montyanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/montyanderson/orgs",
      "repos_url": "https://api.github.com/users/montyanderson/repos",
      "events_url": "https://api.github.com/users/montyanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/montyanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-20T13:08:51Z",
    "updated_at": "2018-05-20T13:08:51Z",
    "author_association": "NONE",
    "body": "@ajunge Why does `getTerms` return a `bytes32` - shouldn't it return a `string`?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/390482145/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/391227350",
    "html_url": "https://github.com/ethereum/EIPs/issues/1068#issuecomment-391227350",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1068",
    "id": 391227350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTIyNzM1MA==",
    "user": {
      "login": "matthewjablack",
      "id": 5362629,
      "node_id": "MDQ6VXNlcjUzNjI2Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5362629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthewjablack",
      "html_url": "https://github.com/matthewjablack",
      "followers_url": "https://api.github.com/users/matthewjablack/followers",
      "following_url": "https://api.github.com/users/matthewjablack/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthewjablack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewjablack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewjablack/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewjablack/orgs",
      "repos_url": "https://api.github.com/users/matthewjablack/repos",
      "events_url": "https://api.github.com/users/matthewjablack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewjablack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-23T05:44:16Z",
    "updated_at": "2018-05-23T05:44:16Z",
    "author_association": "NONE",
    "body": "@ajunge Why does `event Begun` have the argument `requiredCapital`. This assumes that borrowers request a loan before a lender offers. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/391227350/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/493150085",
    "html_url": "https://github.com/ethereum/EIPs/issues/1068#issuecomment-493150085",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1068",
    "id": 493150085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MzE1MDA4NQ==",
    "user": {
      "login": "glgoose",
      "id": 48956933,
      "node_id": "MDQ6VXNlcjQ4OTU2OTMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/48956933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glgoose",
      "html_url": "https://github.com/glgoose",
      "followers_url": "https://api.github.com/users/glgoose/followers",
      "following_url": "https://api.github.com/users/glgoose/following{/other_user}",
      "gists_url": "https://api.github.com/users/glgoose/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glgoose/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glgoose/subscriptions",
      "organizations_url": "https://api.github.com/users/glgoose/orgs",
      "repos_url": "https://api.github.com/users/glgoose/repos",
      "events_url": "https://api.github.com/users/glgoose/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glgoose/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-16T17:00:18Z",
    "updated_at": "2019-05-16T17:00:18Z",
    "author_association": "NONE",
    "body": "There are some typos under the term definitions\r\n\"terms: The **temrs** parameter was **choosen** to have the type bytes32. This in order to make the **temrs** entries as general as possible while maintaining a very simple code base.\"",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/493150085/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986422621",
    "html_url": "https://github.com/ethereum/EIPs/issues/1068#issuecomment-986422621",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1068",
    "id": 986422621,
    "node_id": "IC_kwDOAq426M46y51d",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-06T04:14:55Z",
    "updated_at": "2021-12-06T04:14:55Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986422621/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1001793780",
    "html_url": "https://github.com/ethereum/EIPs/issues/1068#issuecomment-1001793780",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1068",
    "id": 1001793780,
    "node_id": "IC_kwDOAq426M47tij0",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-27T23:11:21Z",
    "updated_at": "2021-12-27T23:11:21Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1001793780/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
