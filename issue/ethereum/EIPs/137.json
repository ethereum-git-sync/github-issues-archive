{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/137/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/137/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/137/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/137",
  "id": 169630417,
  "node_id": "MDU6SXNzdWUxNjk2MzA0MTc=",
  "number": 137,
  "title": "ERC: Ethereum Name Service",
  "user": {
    "login": "Arachnid",
    "id": 17865,
    "node_id": "MDQ6VXNlcjE3ODY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Arachnid",
    "html_url": "https://github.com/Arachnid",
    "followers_url": "https://api.github.com/users/Arachnid/followers",
    "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
    "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
    "organizations_url": "https://api.github.com/users/Arachnid/orgs",
    "repos_url": "https://api.github.com/users/Arachnid/repos",
    "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Arachnid/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 44,
  "created_at": "2016-08-05T15:16:31Z",
  "updated_at": "2021-10-03T18:43:03Z",
  "closed_at": "2017-11-25T09:08:39Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Now at https://github.com/ethereum/EIPs/blob/master/EIPS/eip-137.md",
  "closed_by": {
    "login": "nicksavers",
    "id": 7483198,
    "node_id": "MDQ6VXNlcjc0ODMxOTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7483198?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nicksavers",
    "html_url": "https://github.com/nicksavers",
    "followers_url": "https://api.github.com/users/nicksavers/followers",
    "following_url": "https://api.github.com/users/nicksavers/following{/other_user}",
    "gists_url": "https://api.github.com/users/nicksavers/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nicksavers/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nicksavers/subscriptions",
    "organizations_url": "https://api.github.com/users/nicksavers/orgs",
    "repos_url": "https://api.github.com/users/nicksavers/repos",
    "events_url": "https://api.github.com/users/nicksavers/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nicksavers/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/137/reactions",
    "total_count": 20,
    "+1": 10,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 9,
    "rocket": 1,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/137/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/237965658",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-237965658",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 237965658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzk2NTY1OA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-05T21:03:50Z",
    "updated_at": "2016-08-05T21:03:50Z",
    "author_association": "MEMBER",
    "body": "> function content(bytes32 node) constant returns (bytes32);\n\nIs that intentionally limited to 256 bit hashes (Swarm)?\n\nIPFS hashes can be >256 bits, even the regular SHA256 hash is bigger, because of the `multihash` wrapping. One could removed the Base-58 encoding, but the hash type shouldn't be removed.\n\nAdditionally, if only using a SHA256 of an IPFS resource, there's no way to distinguish it from a Swarm resource.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/237965658/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/237966242",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-237966242",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 237966242,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzk2NjI0Mg==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-05T21:06:31Z",
    "updated_at": "2016-08-05T21:06:31Z",
    "author_association": "MEMBER",
    "body": "Good point. I was merely seeking to replicate the existing namereg's 'content()' method, but this could be a good opportunity to rethink it. Any suggestions?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/237966242/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/237966869",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-237966869",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 237966869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzk2Njg2OQ==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-05T21:09:44Z",
    "updated_at": "2016-08-05T21:09:44Z",
    "author_association": "MEMBER",
    "body": "Just throwing in a couple of ideas taken from BlockchainID to mitigate squatting, which mimic the behaviour of domain names:\n1. To register a name, you need a pay a fee (on top of miner's fee)\n2. The shorter the name, the bigger the fee\n3. Every year, the name needs to be renewed by repaying the fee\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/237966869/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/237975626",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-237975626",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 237975626,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzk3NTYyNg==",
    "user": {
      "login": "jph108",
      "id": 1222784,
      "node_id": "MDQ6VXNlcjEyMjI3ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1222784?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jph108",
      "html_url": "https://github.com/jph108",
      "followers_url": "https://api.github.com/users/jph108/followers",
      "following_url": "https://api.github.com/users/jph108/following{/other_user}",
      "gists_url": "https://api.github.com/users/jph108/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jph108/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jph108/subscriptions",
      "organizations_url": "https://api.github.com/users/jph108/orgs",
      "repos_url": "https://api.github.com/users/jph108/repos",
      "events_url": "https://api.github.com/users/jph108/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jph108/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-05T21:56:45Z",
    "updated_at": "2016-08-05T21:56:45Z",
    "author_association": "NONE",
    "body": "This is a nice idea. It might also be really convenient to have named Ethereum addresses. These names could be anything, but a really simple idea might be to favor an email address format. If I want to send ETH to 'somebody@somewhere.com', I'd much rather type in their email address (which I have anyway), than a big Ethereum address. Of course, some verification protocol would be needed (confirm by sending an email to the actual email address with a confirmation code and getting a response), otherwise people could register each other's email addresses. But with that in place, voila! Paypal-on-Ethereum. A side benefit could be if the name doesn't resolve, the transfer doesn't get made, so you can't send to a bad address. \n\nIt might also be nice to add pathnames in a URL format, so:\n'somebody@somewhere.com/wallet1' and 'somebody@somewhere.com/wallet2'. \n\nAnd why not add parameters? So: \nsomebody@somewhere.com/wallet1/subwallet4?category=food \n\nAnd while we're dreaming, an address book in Mist for all this. :-)\n\nIf the Ethereum Foundation ran this as a service, a named address could cost a little extra gas, which could go to development expenses. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/237975626/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/237980532",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-237980532",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 237980532,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzk4MDUzMg==",
    "user": {
      "login": "rabbit",
      "id": 241264,
      "node_id": "MDQ6VXNlcjI0MTI2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rabbit",
      "html_url": "https://github.com/rabbit",
      "followers_url": "https://api.github.com/users/rabbit/followers",
      "following_url": "https://api.github.com/users/rabbit/following{/other_user}",
      "gists_url": "https://api.github.com/users/rabbit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rabbit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rabbit/subscriptions",
      "organizations_url": "https://api.github.com/users/rabbit/orgs",
      "repos_url": "https://api.github.com/users/rabbit/repos",
      "events_url": "https://api.github.com/users/rabbit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rabbit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-05T22:26:50Z",
    "updated_at": "2016-08-05T22:26:50Z",
    "author_association": "NONE",
    "body": "@jph108 email identifiers with path arguments conflates with HTTP Basic Auth (ie: `https://user@domain.tld/example?q=1`) so it's best to keep identifiers from being clever. Specially since we fail to parse email identifiers as-is. However, you could achieve a similar effect by using Webfinger / LRDD style lookups to transform the email identifier into a url identifier. Could also use that to directly link to the ENS node.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/237980532/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/237983139",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-237983139",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 237983139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzk4MzEzOQ==",
    "user": {
      "login": "akomba",
      "id": 37436,
      "node_id": "MDQ6VXNlcjM3NDM2",
      "avatar_url": "https://avatars.githubusercontent.com/u/37436?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akomba",
      "html_url": "https://github.com/akomba",
      "followers_url": "https://api.github.com/users/akomba/followers",
      "following_url": "https://api.github.com/users/akomba/following{/other_user}",
      "gists_url": "https://api.github.com/users/akomba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akomba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akomba/subscriptions",
      "organizations_url": "https://api.github.com/users/akomba/orgs",
      "repos_url": "https://api.github.com/users/akomba/repos",
      "events_url": "https://api.github.com/users/akomba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akomba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-05T22:44:30Z",
    "updated_at": "2016-08-05T22:44:30Z",
    "author_association": "NONE",
    "body": "Great idea. One of the issues we need to cover is to try to avoid multiple, competing deployments. So we don't end up with situations where I own the domain name in 0xContractA, and you own the same name in 0xContractB.\n\nIn other words, multiple, competing deployments could undermine the usefulness of the system.\n\nObviously, one of the big factors is price. So while I agree with @JustinDrake 's suggestion, the system should avoid requiring to pay an extra fee, because that would ignite a competition based on price. (\"My Registrar Is Cheaper Than Yours!\")\n\nSo the key is either universal or complementary adoption (eg. multiple deployments would still work in the same \"namespace\"). That does indeed leave us with a potential squatting problem, though.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/237983139/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/237991010",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-237991010",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 237991010,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzk5MTAxMA==",
    "user": {
      "login": "jph108",
      "id": 1222784,
      "node_id": "MDQ6VXNlcjEyMjI3ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1222784?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jph108",
      "html_url": "https://github.com/jph108",
      "followers_url": "https://api.github.com/users/jph108/followers",
      "following_url": "https://api.github.com/users/jph108/following{/other_user}",
      "gists_url": "https://api.github.com/users/jph108/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jph108/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jph108/subscriptions",
      "organizations_url": "https://api.github.com/users/jph108/orgs",
      "repos_url": "https://api.github.com/users/jph108/repos",
      "events_url": "https://api.github.com/users/jph108/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jph108/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-05T23:49:07Z",
    "updated_at": "2016-08-06T05:01:54Z",
    "author_association": "NONE",
    "body": "@rabbit - Thanks, food for thought. You sent me to Wikipedia :-)\n\nIt might be worth thinking in terms of having two schemes and not mixing them. The current https scheme for URLs is:\n`https:[//[user:password@]host[:port]][/]path[?query][#fragment]`\n\nIn Ethereum's context, does it make sense to support `[user:password@]`? Maybe `[user@]` only, or nothing. But anyway this is a URL scheme. \n\nMy thought is a different additional scheme to support account & contract addresses only. You wouldn't put this kind of address in a location field in a browser.\n\nBut if you could send ETH to `ethaddr://name[/path][?query]`, that would be neat. `name` could be anything, but certain names in the format `user@host.tld` could be validated through some service. Admittedly, that could get into requiring some kind of trusted system, but maybe there's a way around that. Sending to `name/path` could resolve to a different address than `name` alone. \n\nI would love to be able to send ETH to `myname@gmail.com/poloniex`, and have it show up in my Poloniex account, without having to copy and paste a big long address.\n\n[EDIT] removed the brackets around `name` \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/237991010/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/237992903",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-237992903",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 237992903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzk5MjkwMw==",
    "user": {
      "login": "jpritikin",
      "id": 2002771,
      "node_id": "MDQ6VXNlcjIwMDI3NzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2002771?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jpritikin",
      "html_url": "https://github.com/jpritikin",
      "followers_url": "https://api.github.com/users/jpritikin/followers",
      "following_url": "https://api.github.com/users/jpritikin/following{/other_user}",
      "gists_url": "https://api.github.com/users/jpritikin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jpritikin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jpritikin/subscriptions",
      "organizations_url": "https://api.github.com/users/jpritikin/orgs",
      "repos_url": "https://api.github.com/users/jpritikin/repos",
      "events_url": "https://api.github.com/users/jpritikin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jpritikin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-06T00:08:10Z",
    "updated_at": "2016-08-06T00:08:10Z",
    "author_association": "NONE",
    "body": "@JustinDrake I appreciate the need to mitigate squatting, but it would be nice if there was some namespace in ENS that did not require an annual fee. How about a registrar that requires a small deposit (say 1 ETH or some stable coin) and the owner can hold that name indefinitely. When the name is relinquished then the deposit is returned. The top-level name for such a registrar could be \".develop\" (something a bit less prestigious than \".com\" or \".org\") to preserve demand for higher prestige names and mitigate squatting. \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/237992903/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/238014885",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-238014885",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 238014885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODAxNDg4NQ==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-06T09:30:30Z",
    "updated_at": "2016-08-06T09:30:30Z",
    "author_association": "MEMBER",
    "body": "@jpritikin The annual fee also solves the problem of permanent loss of a name. If I register a name but lose the private key, then the name is gone.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/238014885/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/238017252",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-238017252",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 238017252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODAxNzI1Mg==",
    "user": {
      "login": "Deozaan",
      "id": 227734,
      "node_id": "MDQ6VXNlcjIyNzczNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/227734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Deozaan",
      "html_url": "https://github.com/Deozaan",
      "followers_url": "https://api.github.com/users/Deozaan/followers",
      "following_url": "https://api.github.com/users/Deozaan/following{/other_user}",
      "gists_url": "https://api.github.com/users/Deozaan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Deozaan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Deozaan/subscriptions",
      "organizations_url": "https://api.github.com/users/Deozaan/orgs",
      "repos_url": "https://api.github.com/users/Deozaan/repos",
      "events_url": "https://api.github.com/users/Deozaan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Deozaan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-06T10:36:03Z",
    "updated_at": "2016-08-06T10:36:03Z",
    "author_association": "NONE",
    "body": "@JustinDrake @jpritikin why not a combination of both ideas? The \"fee\" is actually a deposit which is automatically returned after a year, at which point another deposit needs to be made within a grace period or else the domain becomes available for anyone to claim.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/238017252/reactions",
      "total_count": 5,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 5,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/238025382",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-238025382",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 238025382,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODAyNTM4Mg==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-06T14:18:28Z",
    "updated_at": "2016-08-06T14:18:28Z",
    "author_association": "MEMBER",
    "body": "> Just throwing in a couple of ideas taken from BlockchainID to mitigate squatting, which mimic the behaviour of domain names\n\nI'd very much like to discuss governance, but I'm also trying to separate concerns, so I'd like to keep this EIP entirely about the technical implementation. As written, it's governance-independent, so we can solve the problems independently - and, in fact, we can have multiple TLDs or 2LDs that each have different governance rules. Please do join the name-registry channel on Gitter if you'd like to talk about governance. :)\n\nLikewise, URI format for wallet URIs etc is out-of-scope except insofar as it impacts name resolution. Just like DNS, the 'name' part of the URI is handled by ENS and the rest is a layer on top.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/238025382/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/238025521",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-238025521",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 238025521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODAyNTUyMQ==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-06T14:21:20Z",
    "updated_at": "2016-08-06T14:21:20Z",
    "author_association": "MEMBER",
    "body": "I've been thinking about the problem of how to handle resolvers that don't implement all resource types. Presently, Solidity doesn't guarantee the return value of a call to a contract that doesn't implement the function called, which is problematic. My suggestion is:\n- Require resolvers to have a fallback function that calls `throw`\n- Require resolvers to implement a function `hasCapability(bytes32 cap) returns (bool)`; when called with a capability name, returns true if the resolver implements that name.\n\nThis allows the naive case - resolving a name and throwing if it doesn't exist - to proceed without any extra checks or overhead, while still permitting onchain resolvers to handle nonexistent names gracefully if they wish, at a small extra cost in gas. Capability names would be registered in this ERC; users could define 'x-' prefixed names for ad-hoc and pre-standardised extensions.\n\nThoughts?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/238025521/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/238196484",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-238196484",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 238196484,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODE5NjQ4NA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-08T10:16:46Z",
    "updated_at": "2016-08-08T10:16:46Z",
    "author_association": "MEMBER",
    "body": "As we've discussed on Gitter, I'm trying to figure out a way to support both Swarm and IPFS locations with Mango and the very same issue applies to ENS with the `Content hash` record type.\n\nGiven that content addressable networks can use different hashing algorithms (and in many cases the actual content is prefixed with a header, thus the hash isn't solely about the submitted content) it seem reasonable to make the `Content hash` record type a bit more explicit.\n\nOne way is to have specific record types for each network, i.e. two record types: `swarmContent`, `ipfsContent`.\n\nAlternatively the content could be a URL, including `bzz://` and _IPFS's choice of prefix_. See the lengthy discussion about the IPFS prefixes [here](https://github.com/ipfs/go-ipfs/issues/1678) (summary: they would pretty much prefer having `/ipfs/`, but also seems to be OK with `fs:/ipfs/`)\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/238196484/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/238233944",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-238233944",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 238233944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODIzMzk0NA==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-08T13:23:59Z",
    "updated_at": "2016-08-08T13:23:59Z",
    "author_association": "MEMBER",
    "body": "[RFC6920](https://tools.ietf.org/html/rfc6920) might be worth a read, as it provides an RFC-standardized way to encode hash names.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/238233944/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/242756133",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-242756133",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 242756133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mjc1NjEzMw==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-26T14:47:07Z",
    "updated_at": "2016-08-26T14:47:07Z",
    "author_association": "MEMBER",
    "body": "@axic Thinking about this further, I think the best approach is probably to have separate record types for Swarm, IPFS, and any other systems as necessary. With that in mind, it's probably sensible to rename `content` to something more specific - `swarmHash` perhaps?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/242756133/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/242786183",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-242786183",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 242786183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mjc4NjE4Mw==",
    "user": {
      "login": "A2be",
      "id": 19943243,
      "node_id": "MDQ6VXNlcjE5OTQzMjQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/19943243?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/A2be",
      "html_url": "https://github.com/A2be",
      "followers_url": "https://api.github.com/users/A2be/followers",
      "following_url": "https://api.github.com/users/A2be/following{/other_user}",
      "gists_url": "https://api.github.com/users/A2be/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/A2be/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/A2be/subscriptions",
      "organizations_url": "https://api.github.com/users/A2be/orgs",
      "repos_url": "https://api.github.com/users/A2be/repos",
      "events_url": "https://api.github.com/users/A2be/events{/privacy}",
      "received_events_url": "https://api.github.com/users/A2be/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-26T16:39:19Z",
    "updated_at": "2016-08-26T16:39:19Z",
    "author_association": "NONE",
    "body": "I have no insight at present about the best way to implement an Ethereum Name Service (ENS), so am agnostic on the particulars at present.  \n\nI do think it is a very good idea and will benefit the Ethereum ecosphere to have such an ENS in place, and available in such a way as to reduce transaction cost for usage of such names by the broader community, where they might be used in such a way as to reduce systemic inefficiencies.  \n\nIn my view, long-term cybersquatting on unused names while adding no value is economically inefficient to the wider community, so very pleased to see serious thought on how best to implement a decentralized ENS that deals with several of the worst aspects of such squatting.  Please keep up the good work.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/242786183/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/243819308",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-243819308",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 243819308,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzgxOTMwOA==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-31T16:23:24Z",
    "updated_at": "2016-08-31T16:23:24Z",
    "author_association": "MEMBER",
    "body": "I've renamed `setOwner`'s three argument overload to `setSubnodeOwner`; on working on implementations it's become clear that support for overloaded functions in other environments is poor at best, and I'd rather reduce the friction.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/243819308/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/243961420",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-243961420",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 243961420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mzk2MTQyMA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T02:49:19Z",
    "updated_at": "2016-09-01T02:49:19Z",
    "author_association": "MEMBER",
    "body": "@Arachnid: \n\n> With that in mind, it's probably sensible to rename content to something more specific - swarmHash perhaps?\n\nWill it resolve to a single Swarm hash or a hash to a manifest and a path?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/243961420/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/243986162",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-243986162",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 243986162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mzk4NjE2Mg==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T06:16:53Z",
    "updated_at": "2016-09-01T06:17:09Z",
    "author_association": "MEMBER",
    "body": "> Will it resolve to a single Swarm hash or a hash to a manifest and a path?\n\nJust to a single swarm manifest hash; much like DNS, I think links and redirects are out of scope for ENS.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/243986162/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244010392",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-244010392",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 244010392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDAxMDM5Mg==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T08:24:21Z",
    "updated_at": "2016-09-01T08:24:50Z",
    "author_association": "MEMBER",
    "body": "Can it be only a manifest hash or it coulf also return a content hash and it is up to the consumer of ENS to deal with that?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244010392/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244016802",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-244016802",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 244016802,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDAxNjgwMg==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T08:51:14Z",
    "updated_at": "2016-09-01T08:51:14Z",
    "author_association": "MEMBER",
    "body": "Yes, it could be either - in a URL, the protocol will tell the browser how to interpret the hash.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244016802/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244017487",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-244017487",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 244017487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDAxNzQ4Nw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T08:54:07Z",
    "updated_at": "2016-09-01T08:54:07Z",
    "author_association": "MEMBER",
    "body": "Do you mean the ENS protocol or Swarm? If ENS, does that mean having two types (swarmContent and swarmManifest)?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244017487/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244020792",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-244020792",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 244020792,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDAyMDc5Mg==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T09:07:20Z",
    "updated_at": "2016-09-01T09:07:20Z",
    "author_association": "MEMBER",
    "body": "I mean the 'protocol' part of the URL - eg, \"http://\", \"bzz://\", etc - browsers and other tools use this to determine what do do with the name and path components of the URL. Swarm provides two protocol values, one for raw files, and one for manifests.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244020792/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244023035",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-244023035",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 244023035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDAyMzAzNQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T09:16:44Z",
    "updated_at": "2016-09-01T09:16:44Z",
    "author_association": "MEMBER",
    "body": "Oh, so your proposed `swarmHash` returns the `bzz` URL?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244023035/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244026605",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-244026605",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 244026605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDAyNjYwNQ==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T09:30:47Z",
    "updated_at": "2016-09-01T09:30:47Z",
    "author_association": "MEMBER",
    "body": "> Oh, so your proposed swarmHash returns the bzz URL?\n\nNo, it just returns the hash. The user enters \"bzz://name.eth/foo/bar\" or \"bzzd://name.eth/\"; the browser or other program does a `swarmHash` lookup on `name.eth`, and then treats the returned hash appropriately depending on the URI scheme the user supplied.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244026605/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244031778",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-244031778",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 244031778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDAzMTc3OA==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T09:53:11Z",
    "updated_at": "2016-09-01T09:53:11Z",
    "author_association": "MEMBER",
    "body": "Actually, I'm beginning to swing back the other way, in favor of naming it something generic like 'keccak' or 'sha256', because there are many other possible applications for storing a hash in ENS, such as attesting what the hash of your PGP keys is. IPFS support would then be possible either by adding methods for the other hash protocols IPFS supports, or by adding a 'CNAME' type entry that resolves to an address string that IPFS understands.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244031778/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/246139925",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-246139925",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 246139925,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjEzOTkyNQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-10T20:58:28Z",
    "updated_at": "2016-09-10T20:58:28Z",
    "author_association": "MEMBER",
    "body": "To summarise our discussion, perhaps a good idea is to go with `multihash` for the IPFS hashes and as you've mentioned `sha256` and `sha3`/`keccak`.\n\nImportant to note that `sha3` is reserved in Solidity and `keccak` or `keccak256` might become a builtin function, therefore my suggestion is `keccak_256`. Your idea of pre/postfixing with `hash` works also: `keccak256hash`, `sha256hash`, etc.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/246139925/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/247321401",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-247321401",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 247321401,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzMyMTQwMQ==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-15T13:01:44Z",
    "updated_at": "2016-09-15T13:01:44Z",
    "author_association": "MEMBER",
    "body": "Per discussion on Gitter, I've removed the content-hash resource type from the spec, so we can take our time on standardizing it independently of the main ENS spec.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/247321401/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/247321849",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-247321849",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 247321849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzMyMTg0OQ==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-15T13:03:32Z",
    "updated_at": "2016-09-15T13:03:32Z",
    "author_association": "MEMBER",
    "body": "Additional thought: Should we add TTLs to the main registry contract? This would remove the need for individual record types to define them, and wouldn't entail much extra complexity. TTLs could default to 0, meaning no caching is allowed, and meaning there's no storage overhead or extra gas costs unless the user chooses to set a TTL.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/247321849/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/250166695",
    "html_url": "https://github.com/ethereum/EIPs/issues/137#issuecomment-250166695",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/137",
    "id": 250166695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDE2NjY5NQ==",
    "user": {
      "login": "nagydani",
      "id": 374934,
      "node_id": "MDQ6VXNlcjM3NDkzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/374934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nagydani",
      "html_url": "https://github.com/nagydani",
      "followers_url": "https://api.github.com/users/nagydani/followers",
      "following_url": "https://api.github.com/users/nagydani/following{/other_user}",
      "gists_url": "https://api.github.com/users/nagydani/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nagydani/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nagydani/subscriptions",
      "organizations_url": "https://api.github.com/users/nagydani/orgs",
      "repos_url": "https://api.github.com/users/nagydani/repos",
      "events_url": "https://api.github.com/users/nagydani/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nagydani/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-28T13:30:10Z",
    "updated_at": "2016-09-28T13:30:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can resolvers be just entries in lookup tables rather than contracts? The fundamental problem with contracts in this context is that they can return different values to different callers thereby defeating the purpose of a consensus naming system in which the same name resolves to the same set of records to everyone. As a practical problem, external contracts depending on conditions upon the content of certain records associated with certain names are rendered meaningless, if the resolver can return different records to different callers.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/250166695/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
