{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/882",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/882/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/882/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/882/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/882",
  "id": 296742861,
  "node_id": "MDU6SXNzdWUyOTY3NDI4NjE=",
  "number": 882,
  "title": "ERC 882: ENS Custom Protocols",
  "user": {
    "login": "rumkin",
    "id": 609373,
    "node_id": "MDQ6VXNlcjYwOTM3Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/609373?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rumkin",
    "html_url": "https://github.com/rumkin",
    "followers_url": "https://api.github.com/users/rumkin/followers",
    "following_url": "https://api.github.com/users/rumkin/following{/other_user}",
    "gists_url": "https://api.github.com/users/rumkin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rumkin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rumkin/subscriptions",
    "organizations_url": "https://api.github.com/users/rumkin/orgs",
    "repos_url": "https://api.github.com/users/rumkin/repos",
    "events_url": "https://api.github.com/users/rumkin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rumkin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2018-02-13T13:48:10Z",
  "updated_at": "2022-01-01T23:12:02Z",
  "closed_at": "2022-01-01T23:12:02Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "      EIP: 882\r\n      Title: ENS Custom Protocols\r\n      Status: Active\r\n      Type: ERC\r\n      Author: Rumkin <dev@rumk.in>\r\n      Created: 2018-02-13\r\n\r\nENS Layers is DNS replacement with new kind of resolvers which acts like custom protocols and provide any protocol support. For example today email has no it's own resolver and it's using DNS TXT record to provide mail server addresses. Another technology is TLS: we can replace SSL certificate with resolver record with server's RSA public key.\r\n\r\nEach ENS name could be a protocol in the same time to provide extension mechanism. Thus everyone could create it's own protocol to make it controllable with contract, receive payments or make data accessible with another contracts.\r\n\r\nValid URL example:\r\n```\r\nvoice-calls.eth://user@somehost.eth\r\n```\r\n\r\n## Examples\r\n\r\n### Cross protocols example \r\n\r\nWe can add custom resolver for each protocol with it's own smart contract.  How could it work:\r\n\r\n```text\r\nhttp.eth - http protocol resolver\r\nemail.eth - email protocol resolver\r\nmail-client.eth - email web client\r\n```\r\n\r\n```solidity\r\ncontract EmailProtocolResolver {\r\n    mapping(bytes32 => EmailRecord) hosts;\r\n    \r\n    struct EmailRecord {\r\n        uint version;\r\n        bytes4 ip;\r\n    }\r\n    \r\n    function getMailServerIp(bytes32 _host) public constant returns(bytes4)\r\n    {\r\n        return hosts[_host].ip;\r\n    }\r\n    \r\n    function getVersion(bytes32 _host) public constant returns(uint)\r\n    {\r\n        return hosts[_host].version;\r\n    }\r\n}\r\n\r\ncontract HttpProtocolResolver {\r\n    mapping(bytes32 => HttpRecord) hosts;\r\n    \r\n    struct HttpRecord {\r\n        bytes4 ip;\r\n    }\r\n    \r\n    function getHttpServerIp(bytes32 _host) public constant returns(bytes4)\r\n    {\r\n        return hosts[_host].ip;\r\n    }\r\n}\r\n```\r\n\r\nNow if we want to write email to `admin@http.eth` from web client at `mail-client.eth` we need to do:\r\n\r\n1. Get `http.eth` resolver address from ENS.\r\n2. Get `mail-client.eth` HTTP server IP calling `getHttpServerIp(namehash('http.eth'))` of `http.eth` resolver contract.\r\n3. Download `mail-client.eth` HTML-client from server IP (with browser).\r\n4. Write email for `admin@http.eth`.\r\n5. Get `email.eth` resolver from ENS.\r\n6. Get `http.eth` mail server IP calling `getMailServerIp(namehash('http.eth'))` of `email.eth` resolver contract.\r\n\r\nIf we want to open `email.eth` we need to ask `http.eth` does `email.eth` has http server and request HTML page from it.\r\n\r\nExample of current existing protocols provided by ENS Protocols.\r\n\r\n|ENS Name/Protocol|Description|\r\n|:----------------|:----------|\r\n|**http.eth** | Describes HTTP protocol as set of web server IP, port default (80) and protocol version. |\r\n|**mail.eth** | Describes mail protocol as set of mail server IP, port, protocol and public key (to sign messages). |\r\n|**tls.eth**| Describes TLS protocol as list of server encryption public keys (which should be used for each port). |\r\n\r\n![ens custom protocols](https://user-images.githubusercontent.com/609373/37440004-d3953436-280b-11e8-85ce-40717568486e.png)",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/882/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/882/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/373210209",
    "html_url": "https://github.com/ethereum/EIPs/issues/882#issuecomment-373210209",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/882",
    "id": 373210209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzIxMDIwOQ==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-14T23:36:04Z",
    "updated_at": "2018-03-14T23:36:04Z",
    "author_association": "MEMBER",
    "body": "@Arachnid thoughts? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/373210209/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/373458552",
    "html_url": "https://github.com/ethereum/EIPs/issues/882#issuecomment-373458552",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/882",
    "id": 373458552,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzQ1ODU1Mg==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-15T17:27:28Z",
    "updated_at": "2018-03-15T17:27:28Z",
    "author_association": "MEMBER",
    "body": "Sorry, I missed this the first time around.\r\n\r\n> ENS Layers is DNS replacement with new kind of resolvers which acts like custom protocols and provide any protocol support. For example today email has no it's own resolver and it's using DNS TXT record to provide mail server addresses.\r\n\r\nEmail already has a dedicated DNS record type, MX. TXT isn't used for email servers.\r\n\r\n> Another technology is TLS: we can replace SSL certificate with resolver record with server's RSA public key.\r\n\r\nI would definitely like to see a solution using self-signed SSL certificates anchored to ENS to replace the current certificate hierarchy.\r\n\r\n> Each ENS name could be a protocol in the same time to provide extension mechanism. Thus everyone could create it's own protocol to make it controllable with contract, receive payments or make data accessible with another contracts.\r\n\r\nProtocols and resource records are for the most part orthogonal; an 'A' record does not specify what protocol to use to talk to that IP with.\r\n\r\nI think this proposal confuses matters by making protocols into ENS names, and since it appears that each protcol can specify it's own interface, clients would already have to know what interface to expect at the resolver responsible for that interface. Doing this also eliminates the main advantage of the indirection provided by resolvers, namely that they can be improved by any user without any kind of system-wide upgrade.\r\n\r\nIt seems like it would be much simpler and more robust to define these resources as additional resolver profiles rather than inventing a new mechanism.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/373458552/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/374052106",
    "html_url": "https://github.com/ethereum/EIPs/issues/882#issuecomment-374052106",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/882",
    "id": 374052106,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDA1MjEwNg==",
    "user": {
      "login": "rumkin",
      "id": 609373,
      "node_id": "MDQ6VXNlcjYwOTM3Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/609373?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rumkin",
      "html_url": "https://github.com/rumkin",
      "followers_url": "https://api.github.com/users/rumkin/followers",
      "following_url": "https://api.github.com/users/rumkin/following{/other_user}",
      "gists_url": "https://api.github.com/users/rumkin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rumkin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rumkin/subscriptions",
      "organizations_url": "https://api.github.com/users/rumkin/orgs",
      "repos_url": "https://api.github.com/users/rumkin/repos",
      "events_url": "https://api.github.com/users/rumkin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rumkin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-18T21:45:00Z",
    "updated_at": "2018-03-18T21:45:00Z",
    "author_association": "NONE",
    "body": "@Arachnid \r\n\r\n> Email already has a dedicated DNS record type, MX. TXT isn't used for email servers.\r\n\r\nIt uses TXT records for SPF and DKIM for sender authorization and signature purposes.\r\n\r\n> I would definitely like to see a solution using self-signed SSL certificates anchored to ENS to replace the current certificate hierarchy.\r\n\r\nI will show some code at the end of the March. It is the most obvious and useful opportunity of this ERC for today. But I think that ENS could totally describe any host in the Network with any role and all it's configuration. \r\n\r\n> Protocols and resource records are for the most part orthogonal; an 'A' record does not specify what protocol to use to talk to that IP with.\r\n\r\nYes. But this is limitation of DNS itself. It was designed in early 80s in unix paradigm (everything is a text). It's just one of many hostname-based configuration management system and I don't see a reason to reimplement this technology without enhancement. At least we have new Ethereum paradigm (everything is a contract). If ENS became a replacement for DNS we need to make it usable for 20-40 years. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/374052106/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/374053692",
    "html_url": "https://github.com/ethereum/EIPs/issues/882#issuecomment-374053692",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/882",
    "id": 374053692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDA1MzY5Mg==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-18T21:55:55Z",
    "updated_at": "2018-03-18T21:55:55Z",
    "author_association": "MEMBER",
    "body": "> > Protocols and resource records are for the most part orthogonal; an 'A' record does not specify what protocol to use to talk to that IP with.\r\n\r\n> Yes. But this is limitation of DNS itself. It was designed in early 80s in unix paradigm (everything is a text). It's just one of many hostname-based configuration management system and I don't see a reason to reimplement this technology without enhancement. At least we have new Ethereum paradigm (everything is a contract). If ENS became a replacement for DNS we need to make it usable for 20-40 years.\r\n\r\nIt's not a limitation of DNS - protocols existed when DNS was designed, and it was a conscious choice to make name resolution and protocol specifications orthogonal concerns.\r\n\r\nMy main concern, though, is one you haven't addressed - that trying to specify protocols like this reduces each one to a single implementation, removing the whole point of ENS's indirection via the registry. It makes a lot more sense to specify new resolver profiles than a whole new system.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/374053692/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/374687370",
    "html_url": "https://github.com/ethereum/EIPs/issues/882#issuecomment-374687370",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/882",
    "id": 374687370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDY4NzM3MA==",
    "user": {
      "login": "rumkin",
      "id": 609373,
      "node_id": "MDQ6VXNlcjYwOTM3Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/609373?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rumkin",
      "html_url": "https://github.com/rumkin",
      "followers_url": "https://api.github.com/users/rumkin/followers",
      "following_url": "https://api.github.com/users/rumkin/following{/other_user}",
      "gists_url": "https://api.github.com/users/rumkin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rumkin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rumkin/subscriptions",
      "organizations_url": "https://api.github.com/users/rumkin/orgs",
      "repos_url": "https://api.github.com/users/rumkin/repos",
      "events_url": "https://api.github.com/users/rumkin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rumkin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-20T17:31:46Z",
    "updated_at": "2018-03-20T17:31:46Z",
    "author_association": "NONE",
    "body": "> It's not a limitation of DNS - protocols existed when DNS was designed, and it was a conscious choice to make name resolution and protocol specifications orthogonal concerns.\r\n\r\nDNS is a protocol with  hostname-based configuration which resolves names into IPs and nothing more. It was designed to solve exact problem it was not designed as extensible that what I mean as limitation. But today we have much more hostname-based configuration for protocols like SSL and Email. Email has no it's own configuration mechanism and thus it's using DNS as I shown earlier.\r\n\r\nSuch system can provide specified configuration for any protocol that we have today and will have in the future. Main idea is to allow developers to provide new protocols in predictable way and make all protocols equal.\r\n\r\n> It makes a lot more sense to specify new resolver profiles than a whole new system.\r\n\r\nThere is no reason to replace ENS and resolvers are enough. This ERC is about to receive a feedback and to know in which way I should to move on to make it officially supported. Without community support it will be harden to promote and to make browsers use self signed SSL certificates from ENS.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/374687370/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/374689807",
    "html_url": "https://github.com/ethereum/EIPs/issues/882#issuecomment-374689807",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/882",
    "id": 374689807,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDY4OTgwNw==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-20T17:38:42Z",
    "updated_at": "2018-03-20T17:38:42Z",
    "author_association": "MEMBER",
    "body": "> > It's not a limitation of DNS - protocols existed when DNS was designed, and it was a conscious choice to make name resolution and protocol specifications orthogonal concerns.\r\n\r\n> DNS is a protocol with hostname-based configuration which resolves names into IPs and nothing more. It was designed to solve exact problem it was not designed as extensible that what I mean as limitation. But today we have much more hostname-based configuration for protocols like SSL and Email. Email has no it's own configuration mechanism and thus it's using DNS as I shown earlier.\r\n\r\nThat's not the case; right from day 1, DNS has been used for a variety of types of resolution. RFC1035 included MX, in addition to A, CNAME, PTR and TXT.\r\n\r\nFurther, that doesn't address my point - that resolving a name to a resource, and determining how to talk to that resource, are two orthogonal problems, and it's a bad idea to conflate them.\r\n\r\n> There is no reason to replace ENS and resolvers are enough. This ERC is about to receive a feedback and to know in which way I should to move on to make it officially supported. Without community support it will be harden to promote and to make browsers use self signed SSL certificates from ENS.\r\n\r\nThen you need to explain concretely what the advantages are of this approach over simply defining new resolver standards for ENS.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/374689807/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997291796",
    "html_url": "https://github.com/ethereum/EIPs/issues/882#issuecomment-997291796",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/882",
    "id": 997291796,
    "node_id": "IC_kwDOAq426M47cXcU",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-18T22:11:34Z",
    "updated_at": "2021-12-18T22:11:34Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997291796/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003634096",
    "html_url": "https://github.com/ethereum/EIPs/issues/882#issuecomment-1003634096",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/882",
    "id": 1003634096,
    "node_id": "IC_kwDOAq426M470j2w",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-01T23:12:02Z",
    "updated_at": "2022-01-01T23:12:02Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003634096/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
