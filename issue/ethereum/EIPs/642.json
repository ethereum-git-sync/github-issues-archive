{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/642",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/642/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/642/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/642/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/642",
  "id": 232862726,
  "node_id": "MDU6SXNzdWUyMzI4NjI3MjY=",
  "number": 642,
  "title": "ERC: Fairer token crowdsale with proportional token allocation",
  "user": {
    "login": "hiddentao",
    "id": 266594,
    "node_id": "MDQ6VXNlcjI2NjU5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/266594?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hiddentao",
    "html_url": "https://github.com/hiddentao",
    "followers_url": "https://api.github.com/users/hiddentao/followers",
    "following_url": "https://api.github.com/users/hiddentao/following{/other_user}",
    "gists_url": "https://api.github.com/users/hiddentao/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hiddentao/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hiddentao/subscriptions",
    "organizations_url": "https://api.github.com/users/hiddentao/orgs",
    "repos_url": "https://api.github.com/users/hiddentao/repos",
    "events_url": "https://api.github.com/users/hiddentao/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hiddentao/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 20,
  "created_at": "2017-06-01T12:28:18Z",
  "updated_at": "2022-01-16T05:12:09Z",
  "closed_at": "2022-01-16T05:12:09Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Preamble\r\n\r\n```\r\nEIP: <to be assigned>\r\nTitle: Fair Token Crowdsale\r\nAuthors: Ramesh Nair (hiddentao)\r\nType: Informational\r\nCategory: ERC \r\nStatus: Draft\r\nCreated: 2017-06-01\r\nRequires: 20\r\n```\r\n\r\n## Simple Summary\r\n\r\nA contract which allows for a _fairer_ crowdsale through proportional allocation rather than first-come-first-served.\r\n\r\n## Abstract\r\n\r\nThis ERC-20 derived token contract aims to avoid a recurring problem in popular ICO/crowdsales, whereby a small no. of participants can effectively obtain all available tokens via a combination of extremely high transaction fees (unaffordable to most participants) and \"getting there first\". An acute example of this problem is the recent [BAT tokensale](https://www.reddit.com/r/ethtrader/comments/6efchr/bat_crowdsale_over_in_a_single_block_a_handful_of/), where all tokens were allocated within 24 seconds.\r\n\r\nAlthough the ICO holder's goals of raising funding are met in such situations, the fact that the majority of tokens are in the hands of relatively few players is less than ideal when considered from the perspective of decentralisation. The recurring nature of this issue has led to a _race-to-be-the-fastest_, causing massive network congestion due to the large volume of transactions which are created in such a short space of time.\r\n\r\nSome solutions have been proposed, including:\r\n\r\n* Capping no. of tokens per address - The problem with this is that a participant could just create multiple addresses to send from. Similar potential \"solutions\" such as rate-limiting have similar issues associated with them.\r\n\r\n* Using web-based systems to authenticate the participant and their corresponding address separately - this requires more work on the part of the sale organiser. It could introduce more bugs in the process, and will thus require more testing. It also increases the work a contributor must do in order to participate (not to mention tying their identity of some sort to their contribution), which some may argue goes against the \"ethos\" of the system as a whole.\r\n\r\nThis ERC proposes a token contract to solve these issues without limiting how much Ether a participant can contribute. Specifically:\r\n\r\n* **Tokens are proportionally allocated according to amount contributed.** Being early or late to the game has no impact on the no. of tokens a participant receives. Every contributor will recieve some tokens, but larger contributors still get to benefit from having contributed more. Since there is no limit to contributions, any excess ETH (calculated once sale is complete) will be refunded to contributors and only the ETH required to meet the target funding level will be retained.\r\n\r\n* **Price per token is still predictable.** All that has changed is that a given participant may not get exactly as many tokens as they are hoping for since the calculation is now proportional. However, by contributing more ETH each participant can increase the proportion of the total no. of tokens number of tokens they receive, thus still incentivising contributions.\r\n\r\n* **Sale will run the full duration.** Because tokens are only allocated once the sale is complete, the sale will run its full duration, giving plenty of time for contributions to come in. No more network congestion.\r\n\r\n* **Sale organiser and participants can _finalize_ independently of each other.** One the sale is complete, a contributor can at any time call into the contract to either obtain a full refund (if the sale failed to raise the target funding level) or claim their tokens (if the sale did raise at least the target funding level). The sale organizer can call in to ensure the raised funding gets sent to the deposit address. Once the sale is complete, neither party has to wait for the other in order to proceed with these actions.\r\n\r\nDrawbacks of this approach:\r\n\r\n* **The participant must call the contract twice.** Previously, calling the contract during the sale would allocate the tokens. Now the participant must call the contract a second time - after the sale has ended - in order to actually \"claim\" their tokens and any refund due.\r\n\r\n## Example\r\n\r\nTarget ETH to raise = 100 ETH\r\nTotal supply of tokens = 100 tokens\r\n* Thus, price per token should be 1 ETH\r\n\r\n**Scenario 1**\r\n\r\n* User A sends in 90 ETH\r\n* User B sends in 10 ETH\r\n* Thus, total of 100 ETH has been contributed\r\n* User A gets 90 tokens and no ETH refund\r\n* User B gets 10 tokens and no ETH refund\r\n* 100 ETH available to sale organiser\r\n* Price per token = 1 ETH\r\n\r\n**Scenario 2**\r\n\r\n* User A sends in 190 ETH\r\n* User B sends in 10 ETH\r\n* Thus, total of 200 ETH has been contributed\r\n* User A gets 95 tokens and 95 ETH refund\r\n* User B gets 5 tokens and 5 ETH refund\r\n* 100 ETH available to sale organiser\r\n* Price per token = 1 ETH\r\n\r\n## Specification\r\n\r\n### Methods\r\n\r\n* `function contribute() payable` - Contribute ETH to the crowdsale.\r\n* `function finalizeFunding()` - Put funding into deposit address once sale is over.\r\n* `function claimTokensAndRefund()` - Claim tokens and/or get a refund once sale is done.\r\n\r\n### Events\r\n\r\n* `event CreateFairToken(string _name)` - Triggered when contract is deployed in the chain.\r\n* `event Contribute(address _sender, uint256 _value)` - Received a contribution.\r\n* `event FinalizeSale(address _sender)` - Sale finalized, funding send to deposit address.\r\n* `event RefundContribution(address _sender, uint256 _value)` - Contribution refunded.\r\n* `event ClaimTokens(address _sender, uint256 _value)` - Tokens claimed and excess ETH refunded.\r\n\r\n## Example Implementation\r\n\r\nThis uses [StandardContract.sol](https://github.com/brave-intl/basic-attention-token-crowdsale/blob/master/contracts/StandardToken.sol) and [SafeMath.sol](https://github.com/brave-intl/basic-attention-token-crowdsale/blob/master/contracts/SafeMath.sol).\r\n\r\n\r\n```solidity\r\npragma solidity ^0.4.10;\r\n\r\nimport \"./StandardToken.sol\";\r\nimport \"./SafeMath.sol\";\r\n\r\n\r\ncontract FairToken is StandardToken, SafeMath {\r\n\r\n    // metadata\r\n    string public name = 'FairToken';\r\n    string public symbol = 'FAIRTOKEN';\r\n    uint256 public constant decimals = 18;\r\n    string public version = \"1.0\";\r\n\r\n    // important addresses\r\n    address public depositAddress;      // deposit address for ETH for ICO owner\r\n\r\n    // crowdsale params\r\n    bool public isFinalized;            // true when ICO finalized and successful\r\n    uint256 public targetEth;           // target ETH to raise\r\n    uint256 public fundingStartBlock;   // when to start allowing funding\r\n    uint256 public fundingEndBlock;     // when to stop allowing funding\r\n    \r\n    // events\r\n    event CreateFairToken(string _name);\r\n    event Contribute(address _sender, uint256 _value);\r\n    event FinalizeSale(address _sender);\r\n    event RefundContribution(address _sender, uint256 _value);\r\n    event ClaimTokens(address _sender, uint256 _value);\r\n\r\n    // calculated values\r\n    mapping (address => uint256) contributions;    // ETH contributed per address\r\n    uint256 contributed;      // total ETH contributed\r\n\r\n    // constructor\r\n    function FairToken(\r\n        uint256 _totalSupply,\r\n        uint256 _minEth,\r\n        address _depositAddress,\r\n        uint256 _fundingStartBlock,\r\n        uint256 _fundingEndBlock)\r\n    {\r\n        isFinalized = false;\r\n        totalSupply = _totalSupply * 10**decimals;\r\n        targetEth = _minEth;\r\n        depositAddress = _depositAddress;\r\n        fundingStartBlock = _fundingStartBlock;\r\n        fundingEndBlock = _fundingEndBlock;\r\n        // log\r\n        CreateFairToken(name);\r\n    }\r\n\r\n    /// Accepts ETH from a contributor\r\n    function contribute() payable external {\r\n        if (block.number < fundingStartBlock) throw;    // not yet begun?\r\n        if (block.number > fundingEndBlock) throw;      // already ended?\r\n        if (msg.value == 0) throw;                  // no ETH sent in?\r\n\r\n        // Add to contributions\r\n        contributions[msg.sender] += msg.value;\r\n        contributed += msg.value;\r\n        \r\n        // log\r\n        Contribute(msg.sender, msg.value);  // logs contribution\r\n    }\r\n\r\n    /// Finalizes the funding and sends the ETH to deposit address\r\n    function finalizeFunding() external {\r\n        if (isFinalized) throw;                       // already succeeded?\r\n        if (msg.sender != depositAddress) throw;      // wrong sender?\r\n        if (block.number <= fundingEndBlock) throw;   // not yet finished?\r\n        if (contributed < targetEth) throw;             // not enough raised?\r\n        \r\n        isFinalized = true;\r\n\r\n        // send to deposit address\r\n        if (!depositAddress.send(targetEth)) throw;\r\n        \r\n        // log\r\n        FinalizeSale(msg.sender);\r\n    }\r\n    \r\n    /// Allows contributors to claim their tokens and/or a refund. If funding failed then they get back all their Ether, otherwise they get back any excess Ether\r\n    function claimTokensAndRefund() external {\r\n        if (0 == contributions[msg.sender]) throw;    // must have previously contributed\r\n        if (block.number < fundingEndBlock) throw;    // not yet done?\r\n      \r\n        // if not enough funding\r\n        if (contributed < targetEth) {\r\n            // refund my full contribution\r\n            if (!msg.sender.send(contributions[msg.sender])) throw;\r\n            RefundContribution(msg.sender, contributions[msg.sender]);\r\n        } else {\r\n            // calculate how many tokens I get\r\n            balances[msg.sender] = safeMult(totalSupply, contributions[msg.sender]) / contributed;\r\n            // refund excess ETH\r\n            if (!msg.sender.send(contributions[msg.sender] - (safeMult(targetEth, contributions[msg.sender]) / contributed))) throw;\r\n            ClaimTokens(msg.sender, balances[msg.sender]);\r\n      }\r\n      \r\n      contributions[msg.sender] = 0;\r\n    }\r\n}\r\n```\r\n\r\n_Initially I didn't think the price-per-token was going to be the same for every user which is why I didn't store the `tokens per ETH` in the contract but just the target ETH funding level instead. But the contract could be rewritten to store tokens per ETH instead and base the calculations on that._\r\n\r\n## Copyright\r\n\r\nCopyright and related rights waived via CC0.\r\n\r\n_(Credit to [u/pa7x1](https://www.reddit.com/r/ethtrader/comments/6ehxwg/a_different_approach_for_icos/) for the initial idea behind this approach)._\r\n",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/642/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/642/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/305478825",
    "html_url": "https://github.com/ethereum/EIPs/issues/642#issuecomment-305478825",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/642",
    "id": 305478825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTQ3ODgyNQ==",
    "user": {
      "login": "hiddentao",
      "id": 266594,
      "node_id": "MDQ6VXNlcjI2NjU5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266594?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hiddentao",
      "html_url": "https://github.com/hiddentao",
      "followers_url": "https://api.github.com/users/hiddentao/followers",
      "following_url": "https://api.github.com/users/hiddentao/following{/other_user}",
      "gists_url": "https://api.github.com/users/hiddentao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hiddentao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hiddentao/subscriptions",
      "organizations_url": "https://api.github.com/users/hiddentao/orgs",
      "repos_url": "https://api.github.com/users/hiddentao/repos",
      "events_url": "https://api.github.com/users/hiddentao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hiddentao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-01T12:29:34Z",
    "updated_at": "2017-06-01T12:29:34Z",
    "author_association": "NONE",
    "body": "I could do with help on the calculations, particularly the divisions, since I'm not an expert and I know that floating point isn't really supported.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/305478825/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/305569576",
    "html_url": "https://github.com/ethereum/EIPs/issues/642#issuecomment-305569576",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/642",
    "id": 305569576,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTU2OTU3Ng==",
    "user": {
      "login": "joelcan",
      "id": 11576752,
      "node_id": "MDQ6VXNlcjExNTc2NzUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/11576752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joelcan",
      "html_url": "https://github.com/joelcan",
      "followers_url": "https://api.github.com/users/joelcan/followers",
      "following_url": "https://api.github.com/users/joelcan/following{/other_user}",
      "gists_url": "https://api.github.com/users/joelcan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joelcan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joelcan/subscriptions",
      "organizations_url": "https://api.github.com/users/joelcan/orgs",
      "repos_url": "https://api.github.com/users/joelcan/repos",
      "events_url": "https://api.github.com/users/joelcan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joelcan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-01T17:51:30Z",
    "updated_at": "2017-06-01T17:51:30Z",
    "author_association": "NONE",
    "body": "Would it be possible to submit a refund address at the time you make your contribution? Or, would that make things too unwieldy/expensive?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/305569576/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/305580629",
    "html_url": "https://github.com/ethereum/EIPs/issues/642#issuecomment-305580629",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/642",
    "id": 305580629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTU4MDYyOQ==",
    "user": {
      "login": "plutoegg",
      "id": 22115014,
      "node_id": "MDQ6VXNlcjIyMTE1MDE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/22115014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/plutoegg",
      "html_url": "https://github.com/plutoegg",
      "followers_url": "https://api.github.com/users/plutoegg/followers",
      "following_url": "https://api.github.com/users/plutoegg/following{/other_user}",
      "gists_url": "https://api.github.com/users/plutoegg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/plutoegg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/plutoegg/subscriptions",
      "organizations_url": "https://api.github.com/users/plutoegg/orgs",
      "repos_url": "https://api.github.com/users/plutoegg/repos",
      "events_url": "https://api.github.com/users/plutoegg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/plutoegg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-01T18:32:29Z",
    "updated_at": "2017-06-01T18:32:29Z",
    "author_association": "NONE",
    "body": "The other drawback of this approach is that it increases the concentration of funds until the refund is issued, and so increases incentive to attack any vulnerabilities of the contract, but given the typical sizes of these crowdsales the incentive is high already. \r\n\r\nHowever in my view it is essential and no reason for all sales not to use this or something similar once battle tested.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/305580629/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/305602881",
    "html_url": "https://github.com/ethereum/EIPs/issues/642#issuecomment-305602881",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/642",
    "id": 305602881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTYwMjg4MQ==",
    "user": {
      "login": "pmbauer",
      "id": 453580,
      "node_id": "MDQ6VXNlcjQ1MzU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/453580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pmbauer",
      "html_url": "https://github.com/pmbauer",
      "followers_url": "https://api.github.com/users/pmbauer/followers",
      "following_url": "https://api.github.com/users/pmbauer/following{/other_user}",
      "gists_url": "https://api.github.com/users/pmbauer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pmbauer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pmbauer/subscriptions",
      "organizations_url": "https://api.github.com/users/pmbauer/orgs",
      "repos_url": "https://api.github.com/users/pmbauer/repos",
      "events_url": "https://api.github.com/users/pmbauer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pmbauer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-01T19:55:52Z",
    "updated_at": "2017-06-01T19:56:40Z",
    "author_association": "NONE",
    "body": "Instead of refunding 100%, burn a percentage of the returned funds to discourage monopoly-sized bids.  In Scenario 2, A monopolizes the supply, but their risk exposure is capped by the ICO; they put in a big bid, own 95% of tokens with half their bid back.\r\n\r\nBurning a percentage of the refund proportional to their percent ICO ownership would only encourage a large volume of small bids, indicating a fixed burn rate might be apropos?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/305602881/reactions",
      "total_count": 5,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/305604396",
    "html_url": "https://github.com/ethereum/EIPs/issues/642#issuecomment-305604396",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/642",
    "id": 305604396,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTYwNDM5Ng==",
    "user": {
      "login": "taoeffect",
      "id": 138706,
      "node_id": "MDQ6VXNlcjEzODcwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/138706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/taoeffect",
      "html_url": "https://github.com/taoeffect",
      "followers_url": "https://api.github.com/users/taoeffect/followers",
      "following_url": "https://api.github.com/users/taoeffect/following{/other_user}",
      "gists_url": "https://api.github.com/users/taoeffect/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/taoeffect/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/taoeffect/subscriptions",
      "organizations_url": "https://api.github.com/users/taoeffect/orgs",
      "repos_url": "https://api.github.com/users/taoeffect/repos",
      "events_url": "https://api.github.com/users/taoeffect/events{/privacy}",
      "received_events_url": "https://api.github.com/users/taoeffect/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-01T20:02:03Z",
    "updated_at": "2017-06-01T20:05:43Z",
    "author_association": "NONE",
    "body": "> Instead of refunding 100%, burn a percentage of the returned funds to discourage monopoly-sized bids. In Scenario 2, A monopolizes the supply, but their risk exposure is capped by the ICO; they put in a big bid, own 95% of tokens with half their bid back.\r\n> \r\n> Burning a percentage of the refund proportional to their percent ICO ownership would only encourage a large volume of small bids, indicating a fixed burn rate might be apropos?\r\n\r\n+1\r\n\r\nLet's:\r\n\r\n- Bring the community back down to reality so that regulatory bodies can chill easy\r\n- The network does not get congested like crazy\r\n- The fees stay low\r\n- Curb Your Enthusiasm™\r\n- What @pmbauer said\r\n- You don't need a gagillion dollars/btc/eth to do your project, and you're gonna self-sabotage if you think you do. Donate those extra ETH to charity or non-profits instead.\r\n\r\nEDIT to add:\r\n\r\n- We don't have another \"The DAO\" situation\r\n\r\nEDIT again to add:\r\n\r\n- Burning the excess tokens = turning greed into a positive by enriching the entire community",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/305604396/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/305605118",
    "html_url": "https://github.com/ethereum/EIPs/issues/642#issuecomment-305605118",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/642",
    "id": 305605118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTYwNTExOA==",
    "user": {
      "login": "taoeffect",
      "id": 138706,
      "node_id": "MDQ6VXNlcjEzODcwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/138706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/taoeffect",
      "html_url": "https://github.com/taoeffect",
      "followers_url": "https://api.github.com/users/taoeffect/followers",
      "following_url": "https://api.github.com/users/taoeffect/following{/other_user}",
      "gists_url": "https://api.github.com/users/taoeffect/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/taoeffect/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/taoeffect/subscriptions",
      "organizations_url": "https://api.github.com/users/taoeffect/orgs",
      "repos_url": "https://api.github.com/users/taoeffect/repos",
      "events_url": "https://api.github.com/users/taoeffect/events{/privacy}",
      "received_events_url": "https://api.github.com/users/taoeffect/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-01T20:05:10Z",
    "updated_at": "2017-06-01T20:05:10Z",
    "author_association": "NONE",
    "body": "For email-only readers, edited my previous comment to add:\r\n\r\n- We don't have another \"The DAO\" situation\r\n- Burning the excess tokens = turning greed into a positive by enriching the entire community",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/305605118/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/305704466",
    "html_url": "https://github.com/ethereum/EIPs/issues/642#issuecomment-305704466",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/642",
    "id": 305704466,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTcwNDQ2Ng==",
    "user": {
      "login": "hiddentao",
      "id": 266594,
      "node_id": "MDQ6VXNlcjI2NjU5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266594?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hiddentao",
      "html_url": "https://github.com/hiddentao",
      "followers_url": "https://api.github.com/users/hiddentao/followers",
      "following_url": "https://api.github.com/users/hiddentao/following{/other_user}",
      "gists_url": "https://api.github.com/users/hiddentao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hiddentao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hiddentao/subscriptions",
      "organizations_url": "https://api.github.com/users/hiddentao/orgs",
      "repos_url": "https://api.github.com/users/hiddentao/repos",
      "events_url": "https://api.github.com/users/hiddentao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hiddentao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-02T06:47:57Z",
    "updated_at": "2017-06-02T06:47:57Z",
    "author_association": "NONE",
    "body": "@joelcan That could be possible, though what additional advantage does that give?\r\n\r\n@plutoegg Point noted, though additional measures to deal with that will ironically increase code complexity again.\r\n\r\n@pmbauer @taoeffect I like the idea of penalizing excess contributions in some way, though if we opt for burning then even small contributors will lose their ETH, which one may argue unfairly penalizes them. Of course, perhaps a minimum threshold can be set, i.e. only if you contribute over a certain level of ETH will some of your excess get burned.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/305704466/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/305705794",
    "html_url": "https://github.com/ethereum/EIPs/issues/642#issuecomment-305705794",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/642",
    "id": 305705794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTcwNTc5NA==",
    "user": {
      "login": "hiddentao",
      "id": 266594,
      "node_id": "MDQ6VXNlcjI2NjU5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266594?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hiddentao",
      "html_url": "https://github.com/hiddentao",
      "followers_url": "https://api.github.com/users/hiddentao/followers",
      "following_url": "https://api.github.com/users/hiddentao/following{/other_user}",
      "gists_url": "https://api.github.com/users/hiddentao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hiddentao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hiddentao/subscriptions",
      "organizations_url": "https://api.github.com/users/hiddentao/orgs",
      "repos_url": "https://api.github.com/users/hiddentao/repos",
      "events_url": "https://api.github.com/users/hiddentao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hiddentao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-02T06:56:23Z",
    "updated_at": "2017-06-02T07:08:06Z",
    "author_association": "NONE",
    "body": "Another thought I had was to implement logarithmic scaling of contributions. For example:\r\n\r\n1 eth = 1 token, for example.\r\n9 eth = 1 token\r\n10 eth = 1 token\r\n11 eth = (10/10) + 1 = 2 tokens\r\n21 eth = (20/10) + 1 = 3 tokens\r\n99 eth = (90/10) + 1 = 10 tokens\r\n154 eth = (100/100) + (50/10) + 4 = 10 tokens\r\n5234 eth = (5 + 2 + 3 + 1) = 11 tokens\r\n\r\nThe idea would be to lessen the impact of larger contributions.\r\n\r\n* Price per token = 1 ETH\r\n* User A sends in 999999 ETH -> counted as 9 * 6 = 54\r\n* User B sends in 1 ETH -> counted as 1\r\n* Thus, total of 54 + 1 = 55 has been contributed\r\n* User A gets (54 / 55 * 100) = 98.1%, thus 98.1 tokens\r\n* User B gets (1 / 55 * 100) = 1.8%, thus 1.8 tokens\r\n* 100 ETH available to sale organiser\r\n\r\nThe whale still wins big, but the impact has been lessened. In the non-log contract above the whale would get 99.999%, leaving the small buyer with virtually nothing.\r\n\r\n_Edit: one concern is the cost of doing the log-scaling calculations_.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/305705794/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/306690148",
    "html_url": "https://github.com/ethereum/EIPs/issues/642#issuecomment-306690148",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/642",
    "id": 306690148,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjY5MDE0OA==",
    "user": {
      "login": "tawaren",
      "id": 22982658,
      "node_id": "MDQ6VXNlcjIyOTgyNjU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/22982658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tawaren",
      "html_url": "https://github.com/tawaren",
      "followers_url": "https://api.github.com/users/tawaren/followers",
      "following_url": "https://api.github.com/users/tawaren/following{/other_user}",
      "gists_url": "https://api.github.com/users/tawaren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tawaren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tawaren/subscriptions",
      "organizations_url": "https://api.github.com/users/tawaren/orgs",
      "repos_url": "https://api.github.com/users/tawaren/repos",
      "events_url": "https://api.github.com/users/tawaren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tawaren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-07T05:25:18Z",
    "updated_at": "2017-06-07T05:25:18Z",
    "author_association": "NONE",
    "body": "@hiddentao The logarithmic scaling does not work because contributors could again create multiple addresses and contribute a small amount with each and thus get more tokens as if when they would contribute all at once. Same goes for the threshold burning approach (multiple addresses all contributing under threshold)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/306690148/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/306807424",
    "html_url": "https://github.com/ethereum/EIPs/issues/642#issuecomment-306807424",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/642",
    "id": 306807424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjgwNzQyNA==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-07T14:12:43Z",
    "updated_at": "2017-06-07T14:12:43Z",
    "author_association": "MEMBER",
    "body": "Is this EIP material? EIPs are relevant for standardising things that multiple implementations need to interoperate with, which doesn't seem the case here. I'd highly recommend creating a repo for this, with implementation, tests, and discussion there.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/306807424/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/306809476",
    "html_url": "https://github.com/ethereum/EIPs/issues/642#issuecomment-306809476",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/642",
    "id": 306809476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjgwOTQ3Ng==",
    "user": {
      "login": "hiddentao",
      "id": 266594,
      "node_id": "MDQ6VXNlcjI2NjU5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266594?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hiddentao",
      "html_url": "https://github.com/hiddentao",
      "followers_url": "https://api.github.com/users/hiddentao/followers",
      "following_url": "https://api.github.com/users/hiddentao/following{/other_user}",
      "gists_url": "https://api.github.com/users/hiddentao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hiddentao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hiddentao/subscriptions",
      "organizations_url": "https://api.github.com/users/hiddentao/orgs",
      "repos_url": "https://api.github.com/users/hiddentao/repos",
      "events_url": "https://api.github.com/users/hiddentao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hiddentao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-07T14:19:35Z",
    "updated_at": "2017-06-07T14:19:35Z",
    "author_association": "NONE",
    "body": "@tawaren The idea is that it's far more expensive for a contributor to put in large amounts. Without a way of knowing who actually owns a given address it's not possible to have a scheme where each person/entity is restricted to a certain amount of tokens.\r\n\r\n@Arachnid Agreed, I've actually made a start over at https://github.com/hiddentao/ethereum-token-sales.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/306809476/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/308148469",
    "html_url": "https://github.com/ethereum/EIPs/issues/642#issuecomment-308148469",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/642",
    "id": 308148469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODE0ODQ2OQ==",
    "user": {
      "login": "chrisfranko",
      "id": 3543217,
      "node_id": "MDQ6VXNlcjM1NDMyMTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3543217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisfranko",
      "html_url": "https://github.com/chrisfranko",
      "followers_url": "https://api.github.com/users/chrisfranko/followers",
      "following_url": "https://api.github.com/users/chrisfranko/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisfranko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisfranko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisfranko/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisfranko/orgs",
      "repos_url": "https://api.github.com/users/chrisfranko/repos",
      "events_url": "https://api.github.com/users/chrisfranko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisfranko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-13T15:10:52Z",
    "updated_at": "2017-06-13T15:10:52Z",
    "author_association": "NONE",
    "body": "this might be fair but fair isnt what drives the tokensale frenzy",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/308148469/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/323456914",
    "html_url": "https://github.com/ethereum/EIPs/issues/642#issuecomment-323456914",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/642",
    "id": 323456914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzQ1NjkxNA==",
    "user": {
      "login": "JosefJ",
      "id": 10713123,
      "node_id": "MDQ6VXNlcjEwNzEzMTIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/10713123?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JosefJ",
      "html_url": "https://github.com/JosefJ",
      "followers_url": "https://api.github.com/users/JosefJ/followers",
      "following_url": "https://api.github.com/users/JosefJ/following{/other_user}",
      "gists_url": "https://api.github.com/users/JosefJ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JosefJ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JosefJ/subscriptions",
      "organizations_url": "https://api.github.com/users/JosefJ/orgs",
      "repos_url": "https://api.github.com/users/JosefJ/repos",
      "events_url": "https://api.github.com/users/JosefJ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JosefJ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-18T20:46:27Z",
    "updated_at": "2017-08-18T20:46:27Z",
    "author_association": "MEMBER",
    "body": "@hiddentao \r\nI'm currently working on something similar with stretch-goals. The leftover (above certain amount) gets send to charity address (hard coded).\r\n\r\nAd calculations: \r\nI'm currently using this: \r\n```\r\nfunction toPercentage (uint256 total, uint256 part) internal returns (uint256) {\r\n        return (part*100)/total;\r\n    }\r\n\r\n    function fromPercentage(uint256 value, uint256 percentage) internal returns (uint256) {\r\n        return (value*percentage)/100;\r\n    }\r\n```\r\n100 as dividing on full percent seems fair to me, but you could go event further by just adding more zeros to  both functions.\r\n\r\nI'm using two functions instead of just one because I'm recalculating the rate in USD (using Oraclize) instead of ethers as it seems to be easier for participants to read.\r\n \r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/323456914/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/349594624",
    "html_url": "https://github.com/ethereum/EIPs/issues/642#issuecomment-349594624",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/642",
    "id": 349594624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTU5NDYyNA==",
    "user": {
      "login": "gaitchs",
      "id": 22514314,
      "node_id": "MDQ6VXNlcjIyNTE0MzE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/22514314?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gaitchs",
      "html_url": "https://github.com/gaitchs",
      "followers_url": "https://api.github.com/users/gaitchs/followers",
      "following_url": "https://api.github.com/users/gaitchs/following{/other_user}",
      "gists_url": "https://api.github.com/users/gaitchs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gaitchs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gaitchs/subscriptions",
      "organizations_url": "https://api.github.com/users/gaitchs/orgs",
      "repos_url": "https://api.github.com/users/gaitchs/repos",
      "events_url": "https://api.github.com/users/gaitchs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gaitchs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-06T10:13:55Z",
    "updated_at": "2017-12-06T10:13:55Z",
    "author_association": "NONE",
    "body": "can u merge it to one file so i can launch in mist wallet ?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/349594624/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 1,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/354548052",
    "html_url": "https://github.com/ethereum/EIPs/issues/642#issuecomment-354548052",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/642",
    "id": 354548052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDU0ODA1Mg==",
    "user": {
      "login": "hiddentao",
      "id": 266594,
      "node_id": "MDQ6VXNlcjI2NjU5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266594?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hiddentao",
      "html_url": "https://github.com/hiddentao",
      "followers_url": "https://api.github.com/users/hiddentao/followers",
      "following_url": "https://api.github.com/users/hiddentao/following{/other_user}",
      "gists_url": "https://api.github.com/users/hiddentao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hiddentao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hiddentao/subscriptions",
      "organizations_url": "https://api.github.com/users/hiddentao/orgs",
      "repos_url": "https://api.github.com/users/hiddentao/repos",
      "events_url": "https://api.github.com/users/hiddentao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hiddentao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-30T14:08:39Z",
    "updated_at": "2017-12-30T14:08:39Z",
    "author_association": "NONE",
    "body": "@gaitchs That's pretty easy to do, just replace the following lines:\r\n\r\n```\r\nimport \"./StandardToken.sol\";\r\nimport \"./SafeMath.sol\";\r\n```\r\n\r\nWith the actual contents of those files.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/354548052/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/355745297",
    "html_url": "https://github.com/ethereum/EIPs/issues/642#issuecomment-355745297",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/642",
    "id": 355745297,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTc0NTI5Nw==",
    "user": {
      "login": "AnthonyAkentiev",
      "id": 1623033,
      "node_id": "MDQ6VXNlcjE2MjMwMzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1623033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AnthonyAkentiev",
      "html_url": "https://github.com/AnthonyAkentiev",
      "followers_url": "https://api.github.com/users/AnthonyAkentiev/followers",
      "following_url": "https://api.github.com/users/AnthonyAkentiev/following{/other_user}",
      "gists_url": "https://api.github.com/users/AnthonyAkentiev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AnthonyAkentiev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AnthonyAkentiev/subscriptions",
      "organizations_url": "https://api.github.com/users/AnthonyAkentiev/orgs",
      "repos_url": "https://api.github.com/users/AnthonyAkentiev/repos",
      "events_url": "https://api.github.com/users/AnthonyAkentiev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AnthonyAkentiev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-06T12:56:34Z",
    "updated_at": "2018-01-06T12:56:34Z",
    "author_association": "NONE",
    "body": "Is there any known ICO that used/is using this approach?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/355745297/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/355804538",
    "html_url": "https://github.com/ethereum/EIPs/issues/642#issuecomment-355804538",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/642",
    "id": 355804538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTgwNDUzOA==",
    "user": {
      "login": "gaitchs",
      "id": 22514314,
      "node_id": "MDQ6VXNlcjIyNTE0MzE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/22514314?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gaitchs",
      "html_url": "https://github.com/gaitchs",
      "followers_url": "https://api.github.com/users/gaitchs/followers",
      "following_url": "https://api.github.com/users/gaitchs/following{/other_user}",
      "gists_url": "https://api.github.com/users/gaitchs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gaitchs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gaitchs/subscriptions",
      "organizations_url": "https://api.github.com/users/gaitchs/orgs",
      "repos_url": "https://api.github.com/users/gaitchs/repos",
      "events_url": "https://api.github.com/users/gaitchs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gaitchs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-07T07:11:18Z",
    "updated_at": "2018-01-07T07:11:18Z",
    "author_association": "NONE",
    "body": "What do u mean\n\nOn 06-Jan-2018 6:26 PM, \"Anthony Akentiev\" <notifications@github.com> wrote:\n\n> Is there any known ICO that used/is using this approach?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ethereum/EIPs/issues/642#issuecomment-355745297>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AVeKiq2_1UBFsJpwY9QB9ZOUdEHp4-crks5tH22QgaJpZM4Ns6MC>\n> .\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/355804538/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/355818945",
    "html_url": "https://github.com/ethereum/EIPs/issues/642#issuecomment-355818945",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/642",
    "id": 355818945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTgxODk0NQ==",
    "user": {
      "login": "AnthonyAkentiev",
      "id": 1623033,
      "node_id": "MDQ6VXNlcjE2MjMwMzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1623033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AnthonyAkentiev",
      "html_url": "https://github.com/AnthonyAkentiev",
      "followers_url": "https://api.github.com/users/AnthonyAkentiev/followers",
      "following_url": "https://api.github.com/users/AnthonyAkentiev/following{/other_user}",
      "gists_url": "https://api.github.com/users/AnthonyAkentiev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AnthonyAkentiev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AnthonyAkentiev/subscriptions",
      "organizations_url": "https://api.github.com/users/AnthonyAkentiev/orgs",
      "repos_url": "https://api.github.com/users/AnthonyAkentiev/repos",
      "events_url": "https://api.github.com/users/AnthonyAkentiev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AnthonyAkentiev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-07T12:18:10Z",
    "updated_at": "2018-01-07T12:19:15Z",
    "author_association": "NONE",
    "body": "@gaitchs I mean that is there any project already that wants to use this approach (that is of course still \"in development\")? \r\n\r\nI am categorising ICO models in this doc -https://docs.google.com/document/d/1hnMjwaaYUZGch-rprvAtqay9e_ivePCpezBY5ywrrKE/edit?usp=sharing\r\n\r\nI've already added the \"Proportional Refund Model\" to it.\r\n\r\n@hiddentao Do you want me to mention you in my doc?\r\nBtw, you can help me and add your text/comments to the document!\r\nYour feedback will be highly appreciated. Thx\r\n  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/355818945/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003661455",
    "html_url": "https://github.com/ethereum/EIPs/issues/642#issuecomment-1003661455",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/642",
    "id": 1003661455,
    "node_id": "IC_kwDOAq426M470qiP",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-02T04:15:03Z",
    "updated_at": "2022-01-02T04:15:03Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1003661455/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1013812804",
    "html_url": "https://github.com/ethereum/EIPs/issues/642#issuecomment-1013812804",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/642",
    "id": 1013812804,
    "node_id": "IC_kwDOAq426M48bY5E",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-16T05:12:09Z",
    "updated_at": "2022-01-16T05:12:09Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1013812804/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
