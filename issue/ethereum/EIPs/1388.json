{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/1388",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/1388/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/1388/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/1388/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/1388",
  "id": 358270264,
  "node_id": "MDU6SXNzdWUzNTgyNzAyNjQ=",
  "number": 1388,
  "title": "ERC1388- Managing Trusted Smart Contract Identifiers",
  "user": {
    "login": "James-Sangalli",
    "id": 16630514,
    "node_id": "MDQ6VXNlcjE2NjMwNTE0",
    "avatar_url": "https://avatars.githubusercontent.com/u/16630514?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/James-Sangalli",
    "html_url": "https://github.com/James-Sangalli",
    "followers_url": "https://api.github.com/users/James-Sangalli/followers",
    "following_url": "https://api.github.com/users/James-Sangalli/following{/other_user}",
    "gists_url": "https://api.github.com/users/James-Sangalli/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/James-Sangalli/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/James-Sangalli/subscriptions",
    "organizations_url": "https://api.github.com/users/James-Sangalli/orgs",
    "repos_url": "https://api.github.com/users/James-Sangalli/repos",
    "events_url": "https://api.github.com/users/James-Sangalli/events{/privacy}",
    "received_events_url": "https://api.github.com/users/James-Sangalli/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2018-09-08T06:45:20Z",
  "updated_at": "2021-12-18T21:11:50Z",
  "closed_at": "2021-12-18T21:11:50Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Draft ERC - Managing lists for trusted smart contract identifiers  \r\n\r\n### Introduction\r\n\r\nIn smart contracts, we will need methods to handle cryptographic attestations to a users identifier or abilities. Let's say we have a real estate agent, KiwiRealtors, that provides an \"expression of interest\" function though a smart contract and requires the users to provide an attestation that they are a resident of New Zealand or Australia, as a legal requirement. This has actually happened in the New Zealand property market and it is the perfect example of a need to handle such attestations.\r\n\r\nHowever, it is not practical for a smart contract to explicitly trust an attestation issuer. There are multiple issuers who can provide an attestation to a person's residency - a local Justice of the Peace, the land title office, local police, passport authority etc. We envision a model where the effort to manage the list of qualified issuers is practically outsourced to a list.\r\n\r\nAnyone can publish a list of issuers. Only the most trusted and carefully maintained lists gets popular use.\r\n\r\n### Purpose\r\nThis ERC provides a smart contract interface for anyone to manage a list of attestation issuers. A smart contract would explicitly trust a list, and therefore all attestations issued by the issuers on the list.\r\n\r\n### Draft implementation\r\n  ```\r\n    /* The purpose of this contract is to manage the list of attestation\r\n     * issuer contracts and their capacity to fulfil requirements\r\n     */\r\n contract ManagedListERC\r\n    {\r\n      /* a manager is the steward of a list. Only he/she/it can change the\r\n       * list by removing/adding attestation issuers to the list.\r\n\r\n       * An issuer in the list is represented by their contract\r\n       * addresses, not by the attestation signing keys managed by such a\r\n       * contract.\r\n       */\r\n      struct List\r\n      {\r\n\t      string name;\r\n\t      string description; // short description of what the list entails\r\n\t      string capacity; // serves as a filter for the attestation signing keys\r\n\t  /* if a smart contract specifies a list, only attestation issued\r\n\t   * by issuers on that list is accepted. Furthermore, if that\r\n\t   * list has a non-empty capacity, only attestations signed by a\r\n\t   * signing key with that capacity is accepted. */\r\n\r\n\t    address[] issuerContracts; // all these addresses are contracts, no signing capacity\r\n\t    uint expiry; \r\n      }\r\n\r\n      // find which list the sender is managing, then add an issuer to it\r\n      function addIssuer(address issuerContractAddress) public;\r\n\r\n      //return false if the list identified by the sender doesn't have this issuer in the list\r\n      function removeIssuer(address issuerContractAddress, List listToRemoveIssuerFrom) public returns(bool);\r\n\r\n      /* called by services, e.g. Kiwi Properties or James Squire */\r\n      /* loop through all issuer's contract and execute validateKey() on\r\n       * every one of them in the hope of getting a hit, return the\r\n       * contract address of the first hit. Note that there is an attack\r\n       * method for one issuer to claim to own the key of another which\r\n       * is mitigated by later design. */\r\n       //loop through the issuers array, calling validate on the signingKeyOfAttestation\r\n      function getIssuerCorrespondingToAttestationKey(bytes32 list_id, address signingKeyOfAttestation) public returns (address);\r\n\r\n       /* for simplicity we use sender's address as the list ID,\r\n\t * accepting these consequences: a) if one user wish to maintain\r\n\t * several lists with different capacity, he or she must use a\r\n\t * different sender address for each. b) if the user replaced the\r\n\t * sender's key, either because he or she suspects the key is\r\n\t * compromised or that it is lost and reset through special means,\r\n\t * then the list is still identified by the first sender's\r\n\t * address.\r\n      */ \r\n\r\n      function createList(List list) public;\r\n\r\n      /* replace list manager's key with the new key */\r\n      function replaceListIndex(List list, address manager) public returns(bool);\r\n\r\n    }\r\n```\r\n\r\nClick [here](https://github.com/alpha-wallet/blockchain-attestation/blob/master/ethereum/trustlist/ManagedList.sol) to see an example implementation of this ERC\r\n\r\n### Related ERC's\r\n#1387 #1386",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/1388/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/1388/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/495399748",
    "html_url": "https://github.com/ethereum/EIPs/issues/1388#issuecomment-495399748",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1388",
    "id": 495399748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTM5OTc0OA==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-23T21:57:07Z",
    "updated_at": "2019-05-23T21:57:07Z",
    "author_association": "MEMBER",
    "body": "@James-Sangalli this EIP doesn't have a copyright statement. Can you please add one? EIP-1 suggests CC0 - see the `eip-x.md` template.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/495399748/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986093390",
    "html_url": "https://github.com/ethereum/EIPs/issues/1388#issuecomment-986093390",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1388",
    "id": 986093390,
    "node_id": "IC_kwDOAq426M46xpdO",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-04T21:11:10Z",
    "updated_at": "2021-12-04T21:11:10Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986093390/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997285309",
    "html_url": "https://github.com/ethereum/EIPs/issues/1388#issuecomment-997285309",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1388",
    "id": 997285309,
    "node_id": "IC_kwDOAq426M47cV29",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-18T21:11:49Z",
    "updated_at": "2021-12-18T21:11:49Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997285309/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
