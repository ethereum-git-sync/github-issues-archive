{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/127",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/127/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/127/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/127/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/127",
  "id": 163217482,
  "node_id": "MDU6SXNzdWUxNjMyMTc0ODI=",
  "number": 127,
  "title": "RFC: Cross Blockchain Transaction Replay Protection without IAN",
  "user": {
    "login": "konradkonrad",
    "id": 3705643,
    "node_id": "MDQ6VXNlcjM3MDU2NDM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3705643?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/konradkonrad",
    "html_url": "https://github.com/konradkonrad",
    "followers_url": "https://api.github.com/users/konradkonrad/followers",
    "following_url": "https://api.github.com/users/konradkonrad/following{/other_user}",
    "gists_url": "https://api.github.com/users/konradkonrad/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/konradkonrad/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/konradkonrad/subscriptions",
    "organizations_url": "https://api.github.com/users/konradkonrad/orgs",
    "repos_url": "https://api.github.com/users/konradkonrad/repos",
    "events_url": "https://api.github.com/users/konradkonrad/events{/privacy}",
    "received_events_url": "https://api.github.com/users/konradkonrad/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2016-06-30T17:13:36Z",
  "updated_at": "2016-09-02T15:17:17Z",
  "closed_at": "2016-09-02T15:17:17Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\n### Status Quo\n\nIn order to mitigate transaction replays from `testnet` to `mainnet` for dual-use accounts, there is an account nonce offset (\"IAN\" or `\"accountStartNonce\"`) of `2**20` implemented in the [testnet ECS](https://github.com/ethereum/wiki/wiki/Morden#details):\n\n> - Initial Account Nonce (IAN) is 2^20 (instead of 0 in all previous networks).\n>   - All accounts in the state trie have nonce >= IAN.\n>   - Whenever an account is inserted into the state trie it is initialised with nonce = IAN.\n\nThis greatly reduces the risk of applicable signed transactions from the testnet to be reapplied on the mainchain.\n### Proposal\n\nSince the goal is to tie signed transactions to a specific blockchain, using IAN offsets in the ECS is only a partial solution, since account reuse can also happen across other (\"private\") ethereum blockchains.\n\nA cleaner solution would be to use the `genesis_hash` as part of the transaction signature. Instead of signing the transaction hash\n\n```\nsign(sha3(rlp(tx)))\n```\n\nthis would become\n\n```\nsign(sha3(rlp(tx)) + genesis_hash)\n```\n\nSince the `genesis_hash` is known to all parties involved in signing and verifying, this adds no extra cost to blockchain size. \n### Problems Adressed\n#### Inequality of Account Nonces and Transaction Count\n\nIn order to sign transactions locally in an rpc-client, the client needs to learn the correct `nonce` for the transaction. The rpc spec only provides `eth_getTransactionCount(address)`, but does not allow for querying the `\"accountStartNonce\"` from the ECS.\nThis proposal solves this problem, because the `genesis_hash` can be learned by a client within the current rpc spec.\n#### Replay possibility between other chains\n\nEthereum blockchains are not forced to specify `\"accountStartNonce\"`, so replay from other chains than `testnet`/`morden` are still possible.\nThis proposal solves this problem as described above.\n#### Complexity in Ethereumclients\n\nThis also reduces the complexity involved in determining the transaction count for an account and it simplifies the `ECS`.\n",
  "closed_by": {
    "login": "konradkonrad",
    "id": 3705643,
    "node_id": "MDQ6VXNlcjM3MDU2NDM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3705643?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/konradkonrad",
    "html_url": "https://github.com/konradkonrad",
    "followers_url": "https://api.github.com/users/konradkonrad/followers",
    "following_url": "https://api.github.com/users/konradkonrad/following{/other_user}",
    "gists_url": "https://api.github.com/users/konradkonrad/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/konradkonrad/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/konradkonrad/subscriptions",
    "organizations_url": "https://api.github.com/users/konradkonrad/orgs",
    "repos_url": "https://api.github.com/users/konradkonrad/repos",
    "events_url": "https://api.github.com/users/konradkonrad/events{/privacy}",
    "received_events_url": "https://api.github.com/users/konradkonrad/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/127/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/127/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/230086586",
    "html_url": "https://github.com/ethereum/EIPs/issues/127#issuecomment-230086586",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/127",
    "id": 230086586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDA4NjU4Ng==",
    "user": {
      "login": "ebuchman",
      "id": 2300911,
      "node_id": "MDQ6VXNlcjIzMDA5MTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2300911?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ebuchman",
      "html_url": "https://github.com/ebuchman",
      "followers_url": "https://api.github.com/users/ebuchman/followers",
      "following_url": "https://api.github.com/users/ebuchman/following{/other_user}",
      "gists_url": "https://api.github.com/users/ebuchman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ebuchman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ebuchman/subscriptions",
      "organizations_url": "https://api.github.com/users/ebuchman/orgs",
      "repos_url": "https://api.github.com/users/ebuchman/repos",
      "events_url": "https://api.github.com/users/ebuchman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ebuchman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-02T06:21:44Z",
    "updated_at": "2016-07-02T06:21:44Z",
    "author_association": "NONE",
    "body": "this is also quite relevant for the upcoming hard fork! we should ensure something like it gets included. an alternative is to add a network id to the transaction being signed (networkid doesnt need to be propogated or hashed into the tx id, since everyone has it, but should be concatenated to the tx before signing)\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/230086586/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/237590913",
    "html_url": "https://github.com/ethereum/EIPs/issues/127#issuecomment-237590913",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/127",
    "id": 237590913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzU5MDkxMw==",
    "user": {
      "login": "konradkonrad",
      "id": 3705643,
      "node_id": "MDQ6VXNlcjM3MDU2NDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3705643?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/konradkonrad",
      "html_url": "https://github.com/konradkonrad",
      "followers_url": "https://api.github.com/users/konradkonrad/followers",
      "following_url": "https://api.github.com/users/konradkonrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/konradkonrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/konradkonrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/konradkonrad/subscriptions",
      "organizations_url": "https://api.github.com/users/konradkonrad/orgs",
      "repos_url": "https://api.github.com/users/konradkonrad/repos",
      "events_url": "https://api.github.com/users/konradkonrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/konradkonrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-04T15:34:03Z",
    "updated_at": "2016-08-04T15:34:03Z",
    "author_association": "MEMBER",
    "body": "Having learned from the hard fork, I feel like above proposal still doesn't solve what it is trying to solve. So for a more involved approach, I believe a scheme where the signatory can define a block number `n` at will, which block's hash shall be part of the signature, would be desirable:\n\n```\nsign(sha3(rlp(tx)) + block(n).hash)\n```\n\nIn the default case `n` can be `0`, i.e. the genesis block. However in a fork scenario, a signatory may want to chose a certain block number in the past.\n\nBut I see that this may require more changes, because the current transaction layout has no obvious field where `n` could be attached to. Also it would lose many of the nice properties of the original idea, since\n- now there is extra data in transactions necessary (i.e. more data to be stored and sent over network)\n- signature verification will need dynamic access to the blockchain\n\nI'd be happy to hear comments on this!\n\n@ebuchman Regarding the `network_id` I'm unsure. `network_id` in my view should be a factor of the `genesis_hash` -- I don't see the point why two distinct networks that want to start with the same state (== genesis block) will need to start with the same `genesis_hash`, too?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/237590913/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/237593114",
    "html_url": "https://github.com/ethereum/EIPs/issues/127#issuecomment-237593114",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/127",
    "id": 237593114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzU5MzExNA==",
    "user": {
      "login": "konradkonrad",
      "id": 3705643,
      "node_id": "MDQ6VXNlcjM3MDU2NDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3705643?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/konradkonrad",
      "html_url": "https://github.com/konradkonrad",
      "followers_url": "https://api.github.com/users/konradkonrad/followers",
      "following_url": "https://api.github.com/users/konradkonrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/konradkonrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/konradkonrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/konradkonrad/subscriptions",
      "organizations_url": "https://api.github.com/users/konradkonrad/orgs",
      "repos_url": "https://api.github.com/users/konradkonrad/repos",
      "events_url": "https://api.github.com/users/konradkonrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/konradkonrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-04T15:41:00Z",
    "updated_at": "2016-08-04T16:04:05Z",
    "author_association": "MEMBER",
    "body": "One more thought: the signature has a fixed length, so without any protocol changes on transactions themselves it should be possible to attach `n` to the signature, right?\n\n```\nsignature = sign(sha3(rlp(tx)) + block(n).hash) + n\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/237593114/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244404494",
    "html_url": "https://github.com/ethereum/EIPs/issues/127#issuecomment-244404494",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/127",
    "id": 244404494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDQwNDQ5NA==",
    "user": {
      "login": "konradkonrad",
      "id": 3705643,
      "node_id": "MDQ6VXNlcjM3MDU2NDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3705643?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/konradkonrad",
      "html_url": "https://github.com/konradkonrad",
      "followers_url": "https://api.github.com/users/konradkonrad/followers",
      "following_url": "https://api.github.com/users/konradkonrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/konradkonrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/konradkonrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/konradkonrad/subscriptions",
      "organizations_url": "https://api.github.com/users/konradkonrad/orgs",
      "repos_url": "https://api.github.com/users/konradkonrad/repos",
      "events_url": "https://api.github.com/users/konradkonrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/konradkonrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-02T15:17:17Z",
    "updated_at": "2016-09-02T15:17:17Z",
    "author_association": "MEMBER",
    "body": "close in favour of #134 and implications of #86 \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244404494/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
