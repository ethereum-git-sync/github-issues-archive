{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/994",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/994/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/994/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/994/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/994",
  "id": 313764438,
  "node_id": "MDU6SXNzdWUzMTM3NjQ0Mzg=",
  "number": 994,
  "title": "ERC994: Delegated Non-Fungible Token Standard",
  "user": {
    "login": "Physes",
    "id": 29454910,
    "node_id": "MDQ6VXNlcjI5NDU0OTEw",
    "avatar_url": "https://avatars.githubusercontent.com/u/29454910?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Physes",
    "html_url": "https://github.com/Physes",
    "followers_url": "https://api.github.com/users/Physes/followers",
    "following_url": "https://api.github.com/users/Physes/following{/other_user}",
    "gists_url": "https://api.github.com/users/Physes/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Physes/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Physes/subscriptions",
    "organizations_url": "https://api.github.com/users/Physes/orgs",
    "repos_url": "https://api.github.com/users/Physes/repos",
    "events_url": "https://api.github.com/users/Physes/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Physes/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 14,
  "created_at": "2018-04-12T14:57:06Z",
  "updated_at": "2022-01-31T11:07:39Z",
  "closed_at": "2022-01-31T11:07:39Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# Delegated Non-Fungible Token Standard\r\n\r\n```\r\nEIP: <to be assigned>\r\nTitle: Delegated Non-Fungible Token Standard\r\nAuthor: Philip Saunders <philip@nuhanse.network>\r\nType: Standard\r\nCategory: ERC\r\nStatus: Draft\r\nCreated: 2018-03-15\r\n```\r\n## Simple Summary\r\n\r\nDelegated Non-Fungible Tokens (DNFTs) are a proposed extension of the ERC721 standard designed with the use case of Ethereum-based registration of land and physical property in mind. NFTs are arranged in a federated, tree-like format (similar to DNS) where NFTs can delegate and sub-contract NFTs within a certain geospace. \r\n\r\nUnlike digital assets (like CryptoKitties) physical property requires more than just an accurate identification in a database- it also requires legal validity within the context of physical sovereignty. DNFT zones can established by land registry authorities as a root DNFT encompassing a wide area, and can delegate DNFTs as subdivisions of the root zone to existing property holders as a way to upgrade land registries. This is intended to secure the following essential features:\r\n\r\n\r\n* A non-conflicting geospace\r\n\r\n* Legal validity and physical sovereignty\r\n\r\n* Compatibility with financial contracts\r\n\r\n## Abstract \r\nNon-Fugible Tokens were proposed as a way to give identity to external objects on the blockchain. There have been some speculative use cases for digital assets already created, however NFTs have inherent limitations as a standard to apply to physical property. DNFTs add two basic features- writs, which is a fungible representation of geospace that can be delegated. Writ quantities are recorded as an unsigned integer. In addition, there is height variable (also an uint) which represents the level of delegation (1st, 2nd, 3rd, etc.). \r\n\r\n## Motivation\r\nTo implement Non-Fungible Tokens as part of a comprehensive protocol for land and property registry- extending the functionality to allow root ownership by a zone authority, delegation of \"child\" NFTs (representing regular property rights) as a subset of a root NFT, as well as to incorporate a fungible quantity variable to provide a delimiter for delegated tokens.\r\n\r\n## Specification \r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/29454910/38707542-01674bb2-3eb2-11e8-93d5-6da05581b3c0.png\" width=\"320\" height=\"320\"  />\r\n</p>\r\n\r\nA DNFT contains five elements:\r\n\r\n1. A token ID. Every DNFT is identified by a unique unsigned 256-bit integer. \r\n\r\n2. An owner address. This can be either an externally owned account or another smart contract (ordinate).\r\n\r\n3. A metadata field. We specify a schema for deed files called ZML- Zone Markup Language.\r\n\r\n4. A height variable. This represents the level of delegation.\r\n\r\n5. A fungible unit of account (writs) which provide a delimiting factor on delegation.\r\n\r\nA fungible unit of account is necessary so that zone implementors cannot delegate more land than what is under management. \r\n\r\nThe following is a diagram of an example DNFT zone implementation, with a delimiting number of writs and delegated from the root zone to four levels of abstraction.\r\n\r\n![](https://user-images.githubusercontent.com/29454910/38690505-91de58b8-3e7e-11e8-94c8-6db57ea2db3e.png)\r\n\r\n## Ordinates\r\n\r\nDNFTs can be owned by other contracts, allowing for the creation of complex conditional agreements around property. In the Zone Protocol these are called _ordinates_. Ordinates can split ownership of a DNFT among multiple stakeholders using ERC20 tokens, and you can also create ordinates for things like lease agreements, rent contracts, property options and more.\r\n\r\n![image](https://user-images.githubusercontent.com/29454910/38709041-3f9c1b5e-3eb9-11e8-8682-ad1c7dd9acca.png)\r\n\r\n\r\n\r\n## Fungible Quantity Units (Writs)\r\n\r\nDNFTs have a fungible quantity variable, which represents the amount of base geospace assigned to the property right. Writs are a two-dimensional unit of account (i.e. m^2). Alternatively a zone can opt to implement a three-dimensional unit of account (m^3) if desired. This means that a zone of 10000 m^2 containing 10000 writs at the base level could delegate (for example) 10 land leases, each with 1000 writs. It should be noted that writs are not meant to specify the actual boundaries; i.e. they do not have coordinates and are interchangeable. It is the associated deed file that contains all of the boundary info. Writs or cubits are simply a delimiting mechanism that describes the maximum amount of geospace that can be contained within the deed file.\r\n\r\n## Delegate and Revoke\r\n\r\nThere are two basic functional additions to ERC721: the ability to delegate and revoke. \"Revoke\" can be interceded by an ordinate contract which holds ownership of the DNFT between the leaser. This would prevent arbitrary revocations of property rights unless under pre-agreed terms (i.e. at the end of the term of a rent contract). For a freehold a similar ordinate would also be used on a permanent basis.\r\n\r\n## Proposed Interface\r\n\r\n```\r\npragma solidity ^0.4.17;\r\n\r\n/// @title DNFT Delegated Non-Fungible Token Standard\r\n\r\ninterface DNFT is ERC721 {\r\n\r\n\t/// @dev checks if _from is a delegate of _tokenId.\r\n\tfunction origin(uint256 _from, uint256 _tokenId) public view returns (bool);\r\n\t\r\n\t/// @dev gets the abstraction depth of _tokenId. \r\n\tfunction getHeight(uint256 _tokenId) public view returns (uint256);\r\n\t\r\n\t/// @dev returns the balance of fungible geospace.\r\n\tfunction quantity(uint256 _tokenId) public view returns (uint256);\r\n\t\r\n\t/// @dev allows tokenholder to delegate new DNFT.\r\n\tfunction delegate(uint256 _tokenId, \r\n\t\tuint256 _quantity, address _to) public;\r\n\t\r\n\t/// @dev allows owner to revoke a delegate NFT.\r\n\tfunction revoke(uint256 _tokenId, uint256 _delegate) public;\r\n\r\n\t/// @dev emitted whenever a new DNFT subdomain is delegated.\r\n\tevent Delegate(uint256 _from, uint256 _tokenId, address indexed _owner);\r\n\t\r\n\t/// @dev emitted whenever an DNFT subdomain is revoked.\r\n\tevent Revoke(uint256 _tokenId, uint256 _delegate);\r\n}\r\n```\r\n\r\n**origin:**\r\nChecks if the \"from\" tokenId is the child DNFT of tokenId. Returns bool.\r\n\r\n**getHeight:**\r\nReturns the delegation height of tokenId. \r\n\r\n**quantity:**\r\nReturns the number of fungible geospace units left to delegate.\r\n\r\n**delegate:**\r\nAllows the owner of a tokenId to delegate a new DNFT with a certain amount of geospace to a new owner.\r\n\r\n**revoke:**\r\nAllows the owner of a parent DNFT to revoke ownership of a child DNFT. This feature can be overridden by an ordinate contract.\r\n\r\n**Delegate (event):**\r\nEmitted for new token delegations.\r\n\r\n**Revoke (event):**\r\nEmitted on token revocations.\r\n\r\n## Rationale\r\nThe rationale of DNFTs is to provide object identities for physical property within zones.\r\n\r\n## Backwards Compatibility\r\nDNFTs are compatible with ERC721 NFTs.\r\n\r\n## Implementation\r\nCurrent working implementation as part of the Zone Protocol: https://github.com/Physes/DNFT.",
  "closed_by": {
    "login": "MicahZoltu",
    "id": 886059,
    "node_id": "MDQ6VXNlcjg4NjA1OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MicahZoltu",
    "html_url": "https://github.com/MicahZoltu",
    "followers_url": "https://api.github.com/users/MicahZoltu/followers",
    "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
    "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
    "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
    "repos_url": "https://api.github.com/users/MicahZoltu/repos",
    "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/994/reactions",
    "total_count": 8,
    "+1": 8,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/994/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/381019318",
    "html_url": "https://github.com/ethereum/EIPs/issues/994#issuecomment-381019318",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/994",
    "id": 381019318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTAxOTMxOA==",
    "user": {
      "login": "jewishmexicanguy",
      "id": 12216545,
      "node_id": "MDQ6VXNlcjEyMjE2NTQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/12216545?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jewishmexicanguy",
      "html_url": "https://github.com/jewishmexicanguy",
      "followers_url": "https://api.github.com/users/jewishmexicanguy/followers",
      "following_url": "https://api.github.com/users/jewishmexicanguy/following{/other_user}",
      "gists_url": "https://api.github.com/users/jewishmexicanguy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jewishmexicanguy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jewishmexicanguy/subscriptions",
      "organizations_url": "https://api.github.com/users/jewishmexicanguy/orgs",
      "repos_url": "https://api.github.com/users/jewishmexicanguy/repos",
      "events_url": "https://api.github.com/users/jewishmexicanguy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jewishmexicanguy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-13T04:26:57Z",
    "updated_at": "2018-04-13T04:26:57Z",
    "author_association": "NONE",
    "body": "Currently GPS is the most ubiquitously used positioning system. However, more secure systems and more [accurate systems](https://physics.stackexchange.com/questions/1061/why-does-gps-depend-on-relativity) may arise. With this in mind, would [multiple positioning systems](https://en.wikipedia.org/wiki/GLONASS) be supported? Would this be up to the discretion of Multi Signature Root Authorities and the Sovereign entities in which they reside in?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/381019318/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/381178090",
    "html_url": "https://github.com/ethereum/EIPs/issues/994#issuecomment-381178090",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/994",
    "id": 381178090,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTE3ODA5MA==",
    "user": {
      "login": "Physes",
      "id": 29454910,
      "node_id": "MDQ6VXNlcjI5NDU0OTEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/29454910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Physes",
      "html_url": "https://github.com/Physes",
      "followers_url": "https://api.github.com/users/Physes/followers",
      "following_url": "https://api.github.com/users/Physes/following{/other_user}",
      "gists_url": "https://api.github.com/users/Physes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Physes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Physes/subscriptions",
      "organizations_url": "https://api.github.com/users/Physes/orgs",
      "repos_url": "https://api.github.com/users/Physes/repos",
      "events_url": "https://api.github.com/users/Physes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Physes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-13T15:48:14Z",
    "updated_at": "2018-04-13T15:48:14Z",
    "author_association": "NONE",
    "body": "The advantage of using an XML-based schema standard for metadata is that you can specify a \"type\" attribute for geolocation. In this case the type would be \"GPS\", then you could specify all of the relevant points. In the case of mulitiple positioning system you would specify it as \"GLONASS\". The main point is that once you have a large-scale zone, zones can't overlap. But that's a matter for the governance of the zone creation process. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/381178090/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/381190179",
    "html_url": "https://github.com/ethereum/EIPs/issues/994#issuecomment-381190179",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/994",
    "id": 381190179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTE5MDE3OQ==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-13T16:30:09Z",
    "updated_at": "2018-04-13T16:30:09Z",
    "author_association": "NONE",
    "body": "I like this. It might make sense to chat with FOAM about how they're tackling a similar problem.\r\n\r\nre: implementation: I'd recommend extending your DNFT contract from ERC721Token and overriding methods rather than reimplementing it with different storage variable names. Any reason you chose otherwise?\r\n\r\nI'm not super jazzed about the name; the token can be delegated, sure, but it's not the delegation that makes it unique, it's the fact that the NFT represents physical space. Any other naming options?\r\n\r\nI'd also question the need for an XML-based metadata property. First, the contract should confirm to the `ERC721Metadata` interface which means returning json with various properties. You should add a custom type to the JSON Schema like `geo` and have that be the geo-specific metadata. My interface that only knows about name/desc/image should still be able to display your NFT tokens \"correctly\".\r\n\r\nThere's even an example gps type for JSON schema: http://json-schema.org/example/geo.json\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/381190179/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/381223554",
    "html_url": "https://github.com/ethereum/EIPs/issues/994#issuecomment-381223554",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/994",
    "id": 381223554,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTIyMzU1NA==",
    "user": {
      "login": "Physes",
      "id": 29454910,
      "node_id": "MDQ6VXNlcjI5NDU0OTEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/29454910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Physes",
      "html_url": "https://github.com/Physes",
      "followers_url": "https://api.github.com/users/Physes/followers",
      "following_url": "https://api.github.com/users/Physes/following{/other_user}",
      "gists_url": "https://api.github.com/users/Physes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Physes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Physes/subscriptions",
      "organizations_url": "https://api.github.com/users/Physes/orgs",
      "repos_url": "https://api.github.com/users/Physes/repos",
      "events_url": "https://api.github.com/users/Physes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Physes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-13T18:31:12Z",
    "updated_at": "2018-04-13T18:45:11Z",
    "author_association": "NONE",
    "body": "I think FOAM might be dealing with a slightly different problem: namely an alternative coordinate system to GPS. Personally I don't see this as an urgent problem as GPS works pretty well, however I'm certainly open to collaboration. Where something like FOAM could be useful with the Zone Protocol is as the source of coordinates in the deed file- however it would work just as well to use GPS in my opinion.\r\n\r\nI agree with extending ERC721, I'd like to take that approach. Basically what DNFTs would do is add extra mappings for the height, quantity and \"parent DNFT\" aspects while retaining the same lookup process for owner and metadata. I don't see a problem with that.\r\n\r\nZML could be done in JSON, however the reason why I chose that was inspired by Google's KML (Keyhole Markup Language) approach. Also having a \"type\" attribute for elements allows you to specify the protocols that you're using for things like identity and boundaries. For example:\r\n\r\n```\r\n<boundaries protocol=\"GPS\">\r\n    <point>\r\n        <latitude>XYZ</latitude>\r\n        <longitude>XYZ</longitude>\r\n    </point>\r\n    <point>\r\n     ...\r\n    </point>\r\n     ...\r\n</boundaries>\r\n```\r\n\r\nAnd for the identity component, i.e. `<titleholder protocol=\"PGP\"> XYZ</titleholder>`. (with flexibility to allow for varying identity protocols/indicators that might be used within this element).\r\n\r\nHowever it would be good to explore an implementation of ZML in a JSON schema also.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/381223554/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/381422303",
    "html_url": "https://github.com/ethereum/EIPs/issues/994#issuecomment-381422303",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/994",
    "id": 381422303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTQyMjMwMw==",
    "user": {
      "login": "AFDudley",
      "id": 660650,
      "node_id": "MDQ6VXNlcjY2MDY1MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/660650?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AFDudley",
      "html_url": "https://github.com/AFDudley",
      "followers_url": "https://api.github.com/users/AFDudley/followers",
      "following_url": "https://api.github.com/users/AFDudley/following{/other_user}",
      "gists_url": "https://api.github.com/users/AFDudley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AFDudley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AFDudley/subscriptions",
      "organizations_url": "https://api.github.com/users/AFDudley/orgs",
      "repos_url": "https://api.github.com/users/AFDudley/repos",
      "events_url": "https://api.github.com/users/AFDudley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AFDudley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-15T17:14:49Z",
    "updated_at": "2018-04-15T17:14:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Mirroring what @Shrugs said, I strongly recommend using https://tools.ietf.org/html/rfc7946 instead of inventing your own standard for encoding geographic data structures. I also strongly recommend leveraging OSM and the existing infrastructure around that. Hopefully, @kejace or @awright can chime in with some feedback.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/381422303/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/381423397",
    "html_url": "https://github.com/ethereum/EIPs/issues/994#issuecomment-381423397",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/994",
    "id": 381423397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTQyMzM5Nw==",
    "user": {
      "login": "Physes",
      "id": 29454910,
      "node_id": "MDQ6VXNlcjI5NDU0OTEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/29454910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Physes",
      "html_url": "https://github.com/Physes",
      "followers_url": "https://api.github.com/users/Physes/followers",
      "following_url": "https://api.github.com/users/Physes/following{/other_user}",
      "gists_url": "https://api.github.com/users/Physes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Physes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Physes/subscriptions",
      "organizations_url": "https://api.github.com/users/Physes/orgs",
      "repos_url": "https://api.github.com/users/Physes/repos",
      "events_url": "https://api.github.com/users/Physes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Physes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-15T17:30:47Z",
    "updated_at": "2018-04-15T17:30:47Z",
    "author_association": "NONE",
    "body": "@AFDudley I'll definitely consider that. Deed files are both for the purpose of geographic data structures and identity as well as other relevant factors. I've considered a few OGC (Open Geospatial Consortium) standards also both in XML and JSON but none seemed to have all the necessary requirements. I also considered just using a KML file. But this is a good question that will need further thought.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/381423397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/381457749",
    "html_url": "https://github.com/ethereum/EIPs/issues/994#issuecomment-381457749",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/994",
    "id": 381457749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTQ1Nzc0OQ==",
    "user": {
      "login": "mryellow",
      "id": 213575,
      "node_id": "MDQ6VXNlcjIxMzU3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/213575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mryellow",
      "html_url": "https://github.com/mryellow",
      "followers_url": "https://api.github.com/users/mryellow/followers",
      "following_url": "https://api.github.com/users/mryellow/following{/other_user}",
      "gists_url": "https://api.github.com/users/mryellow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mryellow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mryellow/subscriptions",
      "organizations_url": "https://api.github.com/users/mryellow/orgs",
      "repos_url": "https://api.github.com/users/mryellow/repos",
      "events_url": "https://api.github.com/users/mryellow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mryellow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-16T01:48:06Z",
    "updated_at": "2018-04-16T01:58:19Z",
    "author_association": "NONE",
    "body": "> First, the contract should confirm to the ERC721Metadata interface which means returning json with various properties. You should add a custom type to the JSON Schema like geo and have that be the geo-specific metadata\r\n\r\nAgree that JSON and following `ERC721Metadata` is the obvious choice. XML overhead made it unsuitable for the task and it really has lost the war.\r\n\r\nWhen dealing with geospatial geometry and coordinate systems another option is GeoJSON:\r\n\r\n```\r\n{\r\n  \"type\": \"Feature\",\r\n  \"geometry\": {\r\n    \"type\": \"Point\",\r\n    \"coordinates\": [125.6, 10.1]\r\n  },\r\n  \"properties\": {\r\n    \"name\": \"Dinagat Islands\"\r\n  }\r\n}\r\n```\r\n\r\nhttp://geojson.org/  \r\nhttps://tools.ietf.org/html/rfc7946\r\n\r\nedit: Of course all this doesn't matter as you're only putting a uri hash to lookup on IPFS or something. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/381457749/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/382022005",
    "html_url": "https://github.com/ethereum/EIPs/issues/994#issuecomment-382022005",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/994",
    "id": 382022005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjAyMjAwNQ==",
    "user": {
      "login": "Physes",
      "id": 29454910,
      "node_id": "MDQ6VXNlcjI5NDU0OTEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/29454910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Physes",
      "html_url": "https://github.com/Physes",
      "followers_url": "https://api.github.com/users/Physes/followers",
      "following_url": "https://api.github.com/users/Physes/following{/other_user}",
      "gists_url": "https://api.github.com/users/Physes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Physes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Physes/subscriptions",
      "organizations_url": "https://api.github.com/users/Physes/orgs",
      "repos_url": "https://api.github.com/users/Physes/repos",
      "events_url": "https://api.github.com/users/Physes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Physes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-17T14:52:37Z",
    "updated_at": "2018-04-17T15:09:12Z",
    "author_association": "NONE",
    "body": "I just wanted to delve into more detail on the \"parent/child\" arrangement of DNFTs in the implementation. I'm not sure this is the best way to do it but it seems to make the most sense.\r\n\r\nBasically, instead of the parent keeping track of its delegates (children), each DNFT keeps a record of its parent via the `parent` mapping, which maps the tokenId of the child to the tokenId of the parent:\r\n\r\n```\r\n // maps child delegate token to parent ID\r\n  mapping(uint256 => uint256) private parent;\r\n```\r\nIn the standard interface this is accessed via a public view method `isParent`:\r\n``` \r\nfunction isParent(uint256 _child, uint256 _parent)\r\n      public\r\n      view\r\n      returns (bool)\r\n    {\r\n      require(parent[_child] == _parent);\r\n      return true;\r\n    }\r\n```\r\nI'm not sure whether there should be something mapping in the other direction. The reason I wanted to do that was that normally tokens would be delegated via an intermediate ordinate contract which would manage it on behalf of both the parent and the child externally, laying out various conditions or limitations (such as blocking `revoke` for a period of time).\r\n\r\nEDIT: Another reason for not needing to keep track of all children is that this information is going to be cached in each Zone's Deed File System (DFS). The plan for the DFS is that deed files (metadata documents in ZML) would be cached in a hosted git repository, so it would be fairly easy to track the chain of ownership up through the tree without having to implement it in the contract. However `isParent` is necessary to enforce security requirements for the `revoke` function.\r\n\r\nThe full range of mappings (which includes regular NFT and extends with three extra mappings):\r\n```\r\n  // maps token id to owning address\r\n  mapping(uint256 => address) private owner;\r\n\r\n  // maps token id to string metadata uri\r\n  mapping(uint256 => string) private metadata;\r\n\r\n  // maps token id to fungible quantity units.\r\n  mapping(uint256 => uint256) private quantities;\r\n\r\n  // maps child delegate token to parent ID\r\n  mapping(uint256 => uint256) private parent;\r\n\r\n  // maps token id to height index\r\n  mapping(uint256 => uint256) private height;\r\n\r\n  // maps token id to approved address\r\n  mapping(uint256 => address) private approvals;\r\n\r\n  // maps token id to list of owned tokens\r\n  mapping(address => uint256[]) private inventory;\r\n\r\n  // maps token id to the index of owned tokens\r\n  mapping(uint256 => uint256) private index;\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/382022005/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/382711854",
    "html_url": "https://github.com/ethereum/EIPs/issues/994#issuecomment-382711854",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/994",
    "id": 382711854,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjcxMTg1NA==",
    "user": {
      "login": "Physes",
      "id": 29454910,
      "node_id": "MDQ6VXNlcjI5NDU0OTEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/29454910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Physes",
      "html_url": "https://github.com/Physes",
      "followers_url": "https://api.github.com/users/Physes/followers",
      "following_url": "https://api.github.com/users/Physes/following{/other_user}",
      "gists_url": "https://api.github.com/users/Physes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Physes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Physes/subscriptions",
      "organizations_url": "https://api.github.com/users/Physes/orgs",
      "repos_url": "https://api.github.com/users/Physes/repos",
      "events_url": "https://api.github.com/users/Physes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Physes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-19T12:15:20Z",
    "updated_at": "2018-06-06T18:22:59Z",
    "author_association": "NONE",
    "body": "Hey everyone, so the white paper for The Zone Protocol has been published, explaining the background of DNFTs:\r\n\r\nhttps://papers.ssrn.com/sol3/papers.cfm?abstract_id=3180835",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/382711854/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/397682623",
    "html_url": "https://github.com/ethereum/EIPs/issues/994#issuecomment-397682623",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/994",
    "id": 397682623,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzY4MjYyMw==",
    "user": {
      "login": "klivin",
      "id": 200045,
      "node_id": "MDQ6VXNlcjIwMDA0NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/200045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/klivin",
      "html_url": "https://github.com/klivin",
      "followers_url": "https://api.github.com/users/klivin/followers",
      "following_url": "https://api.github.com/users/klivin/following{/other_user}",
      "gists_url": "https://api.github.com/users/klivin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/klivin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/klivin/subscriptions",
      "organizations_url": "https://api.github.com/users/klivin/orgs",
      "repos_url": "https://api.github.com/users/klivin/repos",
      "events_url": "https://api.github.com/users/klivin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/klivin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-15T16:59:11Z",
    "updated_at": "2018-06-15T16:59:47Z",
    "author_association": "NONE",
    "body": "Hi @Physes I'm working on the LayerOne project (mapping real world space on the blockchain), and we've done a lot of thought in this space as well!  Check out our open source repo: https://github.com/OpenLayerOne/LayerOne-Contracts\r\n\r\nWe should work together on this!  We are linking 721's to binary quad keys (another open standard that is in the same family of QuadHashes).  Binary quad keys have the advantage of easy storage and processing on chain as they are 64-bit integers.  We looked into FOAM's crypto spatial coordinates and it did not offer the same flexibility.\r\n\r\nWe created the concept of a QuadToken that is a binary quadkey + 192 bits for things like a secondary quad key, altitude, timestamp, or address.  It's a generic and compact implementation, and we've already written the QuadKey library to add solidity support.  Hope you find it useful, and let me know if I can help think through your particular use cases!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/397682623/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/892363531",
    "html_url": "https://github.com/ethereum/EIPs/issues/994#issuecomment-892363531",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/994",
    "id": 892363531,
    "node_id": "IC_kwDOAq426M41MGML",
    "user": {
      "login": "ShaguftasayaniEY",
      "id": 38990060,
      "node_id": "MDQ6VXNlcjM4OTkwMDYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/38990060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ShaguftasayaniEY",
      "html_url": "https://github.com/ShaguftasayaniEY",
      "followers_url": "https://api.github.com/users/ShaguftasayaniEY/followers",
      "following_url": "https://api.github.com/users/ShaguftasayaniEY/following{/other_user}",
      "gists_url": "https://api.github.com/users/ShaguftasayaniEY/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ShaguftasayaniEY/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ShaguftasayaniEY/subscriptions",
      "organizations_url": "https://api.github.com/users/ShaguftasayaniEY/orgs",
      "repos_url": "https://api.github.com/users/ShaguftasayaniEY/repos",
      "events_url": "https://api.github.com/users/ShaguftasayaniEY/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ShaguftasayaniEY/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-04T04:59:39Z",
    "updated_at": "2021-08-04T04:59:39Z",
    "author_association": "NONE",
    "body": "The link mentioned in the Implementation section isn't working, has the repository been moved?\r\n\"Current working implementation as part of the Zone Protocol: https://github.com/Physes/DNFT\"",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/892363531/reactions",
      "total_count": 4,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 2,
      "heart": 0,
      "rocket": 0,
      "eyes": 2
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1025385996",
    "html_url": "https://github.com/ethereum/EIPs/issues/994#issuecomment-1025385996",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/994",
    "id": 1025385996,
    "node_id": "IC_kwDOAq426M49HiYM",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-31T05:09:45Z",
    "updated_at": "2022-01-31T05:09:45Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1025385996/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1025399393",
    "html_url": "https://github.com/ethereum/EIPs/issues/994#issuecomment-1025399393",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/994",
    "id": 1025399393,
    "node_id": "IC_kwDOAq426M49Hlph",
    "user": {
      "login": "mryellow",
      "id": 213575,
      "node_id": "MDQ6VXNlcjIxMzU3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/213575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mryellow",
      "html_url": "https://github.com/mryellow",
      "followers_url": "https://api.github.com/users/mryellow/followers",
      "following_url": "https://api.github.com/users/mryellow/following{/other_user}",
      "gists_url": "https://api.github.com/users/mryellow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mryellow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mryellow/subscriptions",
      "organizations_url": "https://api.github.com/users/mryellow/orgs",
      "repos_url": "https://api.github.com/users/mryellow/repos",
      "events_url": "https://api.github.com/users/mryellow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mryellow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-31T05:40:59Z",
    "updated_at": "2022-01-31T05:40:59Z",
    "author_association": "NONE",
    "body": "Shush @github-actions!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1025399393/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1025622125",
    "html_url": "https://github.com/ethereum/EIPs/issues/994#issuecomment-1025622125",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/994",
    "id": 1025622125,
    "node_id": "IC_kwDOAq426M49IcBt",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-31T11:07:38Z",
    "updated_at": "2022-01-31T11:07:38Z",
    "author_association": "MEMBER",
    "body": "@mryellow If you want to push this for Ard toward an EIP you are welcome to create a pull request that does so.\r\n\r\nIf people want to continue discussing this EIP, please continue over at Ethereum Magicians.  We no longer are using the EIPs issues section for discussions about standardization ideas.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1025622125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
