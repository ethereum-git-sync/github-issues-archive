{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/1201",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/1201/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/1201/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/1201/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/1201",
  "id": 338870883,
  "node_id": "MDU6SXNzdWUzMzg4NzA4ODM=",
  "number": 1201,
  "title": "ERC-1201 Two Tiered Token Structure for Non-fungible Asset Ownership and Rental Rights",
  "user": {
    "login": "zemingyu",
    "id": 20302618,
    "node_id": "MDQ6VXNlcjIwMzAyNjE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/20302618?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zemingyu",
    "html_url": "https://github.com/zemingyu",
    "followers_url": "https://api.github.com/users/zemingyu/followers",
    "following_url": "https://api.github.com/users/zemingyu/following{/other_user}",
    "gists_url": "https://api.github.com/users/zemingyu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zemingyu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zemingyu/subscriptions",
    "organizations_url": "https://api.github.com/users/zemingyu/orgs",
    "repos_url": "https://api.github.com/users/zemingyu/repos",
    "events_url": "https://api.github.com/users/zemingyu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zemingyu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2018-07-06T09:32:48Z",
  "updated_at": "2022-01-07T20:12:34Z",
  "closed_at": "2022-01-07T20:12:34Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": ">ERC:\r\n>Title: Token standard\r\n>Author: Zeming Yu\r\n>Status: Draft\r\n>Type: ERC-1201\r\n>Created: 6 July 2018\r\n>Recommended implementation (WIP): https://github.com/vincentshangjin/uhoodchain/blob/erc1201/contracts/uhood.sol\r\n\r\n# Summary\r\n---\r\nA two tiered token standard for non-fungible assets which tokenises both ownership rights and rival rental rights.\r\n\r\n# Purpose\r\n---\r\nThis is inspired by the [ERC-809 standard](https://github.com/ethereum/EIPs/issues/809) (Renting Standard for Rival, Non-Fungible Tokens), which is an extension for the ERC-721 non-fungible token standard.\r\n\r\nWhile the ERC-809 standard caters for rental rights, it does not tokenise them. This standard aims to tokenise such rental rights and thus allow the rental rights to be easily exchanged between different parties.\r\n\r\n# Specification\r\n---\r\n\r\n## Tier 1 Ownership Token - ERC-721 compatible\r\n\r\n### balanceOf\r\n\r\n    function balanceOf(address owner) external view returns (uint256);\r\n\r\n### ownerOf\r\n\r\n    function ownerOf(uint256 tokenId) external view returns (address);\r\n\r\n### safeTransferFrom\r\n\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes data) external payable;\r\n\r\n### safeTransferFrom\r\n\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) external payable;\r\n\r\n### transferFrom\r\n\r\n    function transferFrom(address from, address to, uint256 tokenId) external payable;\r\n\r\n### approve\r\n\r\n    function approve(address approved, uint256 tokenId) external payable;\r\n\r\n### setApprovalForAll\r\n\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n### getApproved\r\n\r\n    function getApproved(uint256 tokenId) external view returns (address);\r\n\r\n### isApprovedForAll\r\n\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n\r\n## Tier 2 Rental Token\r\n\r\n### mintRental\r\n\r\n    function mintRental(uint256 tokenId, uint256 start, uint256 end, address renter) external\r\n\r\nThe owner of the token `tokenId` mints rental tokens and assigns them to `renter`. The start and end time is divided by `minRentTime` to work out the `startIndex` and `endIndex`. The number of tokens minted is equal to `endIndex - startIndex + 1`.\r\n\r\nThe rental tokens are stored in a double mapping such as this:\r\n\r\n    mapping(uint256 -> mapping(uint256 -> address)) rentals\r\n\r\nThe first uint256 stores the `tokenId`. The second uint256 represents the time slot index. Each time slot can be any duration set by the smart contract constructor. For example, it can be an hour for a bike rental contract and a day for a property rental contract.\r\n\r\n`startIndex` and `endIndex` refers to the second uint256 above.\r\n\r\n### setRentalRights\r\n\r\n    function setRenterRights(uint256 tokenId, address renter, bool canBurn, bool canTransferToAll, bool canTransferToPreapproved, bool canCopyAcrossRights) public\r\n\r\nSets the rights for the rental token owner, including the following:\r\n\r\n- canBurn: whether or not the renter can burn the token, effecively cancelling the rental agreement\r\n- canTransferToAll: whether or not the renter can transfer the rental token to anyone else\r\n- canTransferToPreapproved: whether or not the renter can transfer the rental token to anyone within a list of preapproved renters\r\n- canCopyAcrrossRights: whether or not the renter can copy across the same rights to the person receiving the rental tokens (as opposed to requiring the owner to manually set the rights for the new rental token owner)\r\n\r\n### addPreapprovedRenters\r\n\r\n    function addPreapprovedRenters(uint tokenId, address[] preapprovedList) public\r\n\r\nOwner adds new addresses to the preapproved renters list.\r\n\r\nThe `preApprovedRenters` can be stored inside a double mapping from the tokenId to the preapproved renter to a bool such as this:\r\n\r\n     mapping (uint => mapping (address => bool)) public preapprovedRenters;\r\n\r\n### removePreapprovedRenters\r\n\r\n    function addPreapprovedRenters(uint tokenId, address[] preapprovedList) public\r\n\r\nOwner removes a list of addresses from the preapproved renters list.\r\n\r\n### approveRentalTransfer\r\n\r\n    function approveRentalTransfer(address approved, uint256 tokenId, uint256 start, uint256 end) public\r\n\r\nRental token holder approves `approved` (can be a market place smart contract) to transfer rental tokens within the time range `start` and `end` to a third party.\r\n\r\n### transferRentalFrom\r\n    function rentalTransferFrom(address from, address to, uint256 tokenId, uint256 start, uint256 end) public\r\n\r\nTransfers rental tokens to a third party based on the rental token holder's current rights as set by `setRentalRights`.\r\n\r\nThe transfer can be done by the current rental token owner, or a market place smart contract which is approved by `approveRentalTransfer`. This function allows a secondary market to be built to trade the rental rights.\r\n\r\n### cancelRental\r\n    function cancelRental(address owner, uint256 tokenId, uint256 start, uint256 stop) public returns (bool success)\r\n\r\nWith the owner's approval (by setting `canBurn` to `true` for the renter), the rental token holder can cancel the rental agreement. This is a wrapper function for `transferRentalFrom`.\r\n\r\n### rentalExists\r\n    function exists(uint256 tokenId, uint256 timeIndex) public view returns (bool)\r\n\r\nCheck if a rental token exists at `timeIndex` for token `tokenId`.\r\n\r\n### ownerOfRental\r\n    function ownerOfRental(uint256 tokenId, uint256 time) public view returns (address)\r\n\r\nReturns the owner of the rental token at `time` for token `tokenId`.\r\n\r\n### balanceOfRental\r\n    function balanceOfRental(address owner, uint256 tokenId, uint256 start, uint256 end) public view returns (uint256)\r\n\r\nReturns the number of rental tokens owned by `owner` between the time `start` and `end`.\r\n\r\n### balanceOfRentalApproval\r\n    function balanceOfRentalApproval(address approved, uint256 tokenId, uint256 start, uint256 end) public view returns (uint256)\r\n\r\nReturns the number of rental tokens that `approved` is approved to transfer between the time `start` and `end`.\r\n",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/1201/reactions",
    "total_count": 8,
    "+1": 6,
    "-1": 0,
    "laugh": 0,
    "hooray": 1,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/1201/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/403263803",
    "html_url": "https://github.com/ethereum/EIPs/issues/1201#issuecomment-403263803",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1201",
    "id": 403263803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzI2MzgwMw==",
    "user": {
      "login": "markspereira",
      "id": 17998913,
      "node_id": "MDQ6VXNlcjE3OTk4OTEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/17998913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markspereira",
      "html_url": "https://github.com/markspereira",
      "followers_url": "https://api.github.com/users/markspereira/followers",
      "following_url": "https://api.github.com/users/markspereira/following{/other_user}",
      "gists_url": "https://api.github.com/users/markspereira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markspereira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markspereira/subscriptions",
      "organizations_url": "https://api.github.com/users/markspereira/orgs",
      "repos_url": "https://api.github.com/users/markspereira/repos",
      "events_url": "https://api.github.com/users/markspereira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markspereira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-08T05:32:30Z",
    "updated_at": "2018-07-08T05:32:30Z",
    "author_association": "NONE",
    "body": "Awesome concept, awesome utility. Really great evolution of ERC721 and ERC809 concepts!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/403263803/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/404844268",
    "html_url": "https://github.com/ethereum/EIPs/issues/1201#issuecomment-404844268",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1201",
    "id": 404844268,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDg0NDI2OA==",
    "user": {
      "login": "xinbenlv",
      "id": 640325,
      "node_id": "MDQ6VXNlcjY0MDMyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/640325?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xinbenlv",
      "html_url": "https://github.com/xinbenlv",
      "followers_url": "https://api.github.com/users/xinbenlv/followers",
      "following_url": "https://api.github.com/users/xinbenlv/following{/other_user}",
      "gists_url": "https://api.github.com/users/xinbenlv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xinbenlv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xinbenlv/subscriptions",
      "organizations_url": "https://api.github.com/users/xinbenlv/orgs",
      "repos_url": "https://api.github.com/users/xinbenlv/repos",
      "events_url": "https://api.github.com/users/xinbenlv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xinbenlv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T14:08:42Z",
    "updated_at": "2018-07-13T14:08:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Great idea. Having a rental support is greatly useful.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/404844268/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/405107303",
    "html_url": "https://github.com/ethereum/EIPs/issues/1201#issuecomment-405107303",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1201",
    "id": 405107303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTEwNzMwMw==",
    "user": {
      "login": "corbinpage",
      "id": 1858017,
      "node_id": "MDQ6VXNlcjE4NTgwMTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1858017?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/corbinpage",
      "html_url": "https://github.com/corbinpage",
      "followers_url": "https://api.github.com/users/corbinpage/followers",
      "following_url": "https://api.github.com/users/corbinpage/following{/other_user}",
      "gists_url": "https://api.github.com/users/corbinpage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/corbinpage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/corbinpage/subscriptions",
      "organizations_url": "https://api.github.com/users/corbinpage/orgs",
      "repos_url": "https://api.github.com/users/corbinpage/repos",
      "events_url": "https://api.github.com/users/corbinpage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/corbinpage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-15T17:58:31Z",
    "updated_at": "2018-07-15T17:58:31Z",
    "author_association": "NONE",
    "body": "This is interesting @zemingyu but costly to implement given that each time unit is stored individually. I think a start date / end date design might be more practical. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/405107303/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/406866744",
    "html_url": "https://github.com/ethereum/EIPs/issues/1201#issuecomment-406866744",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1201",
    "id": 406866744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjg2Njc0NA==",
    "user": {
      "login": "zemingyu",
      "id": 20302618,
      "node_id": "MDQ6VXNlcjIwMzAyNjE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/20302618?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zemingyu",
      "html_url": "https://github.com/zemingyu",
      "followers_url": "https://api.github.com/users/zemingyu/followers",
      "following_url": "https://api.github.com/users/zemingyu/following{/other_user}",
      "gists_url": "https://api.github.com/users/zemingyu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zemingyu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zemingyu/subscriptions",
      "organizations_url": "https://api.github.com/users/zemingyu/orgs",
      "repos_url": "https://api.github.com/users/zemingyu/repos",
      "events_url": "https://api.github.com/users/zemingyu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zemingyu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-22T13:29:46Z",
    "updated_at": "2018-07-22T13:29:46Z",
    "author_association": "NONE",
    "body": "Thanks @corbinpage Yes, I have considered the alternative of a start / end date design. The issue is how to search for overlapping time periods efficiently. One solution provided by @saurfang is a Red Black Tree implemented here: https://github.com/saurfang/solidity-treemap This is quite complex and hasn't been audited. My intention is to start with something very simple, get it working first, and over time migrate to a more efficient solution such as the Red Black Tree.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/406866744/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/411550431",
    "html_url": "https://github.com/ethereum/EIPs/issues/1201#issuecomment-411550431",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1201",
    "id": 411550431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTU1MDQzMQ==",
    "user": {
      "login": "corbinpage",
      "id": 1858017,
      "node_id": "MDQ6VXNlcjE4NTgwMTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1858017?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/corbinpage",
      "html_url": "https://github.com/corbinpage",
      "followers_url": "https://api.github.com/users/corbinpage/followers",
      "following_url": "https://api.github.com/users/corbinpage/following{/other_user}",
      "gists_url": "https://api.github.com/users/corbinpage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/corbinpage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/corbinpage/subscriptions",
      "organizations_url": "https://api.github.com/users/corbinpage/orgs",
      "repos_url": "https://api.github.com/users/corbinpage/repos",
      "events_url": "https://api.github.com/users/corbinpage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/corbinpage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-08T20:59:30Z",
    "updated_at": "2018-08-08T20:59:30Z",
    "author_association": "NONE",
    "body": "Thanks for the link @zemingyu, this is very interesting. We're going to investigate further. Let me know if you do a deep dive, and we'd love to discuss on a call.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/411550431/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/430138242",
    "html_url": "https://github.com/ethereum/EIPs/issues/1201#issuecomment-430138242",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1201",
    "id": 430138242,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDEzODI0Mg==",
    "user": {
      "login": "yamarkz",
      "id": 12509392,
      "node_id": "MDQ6VXNlcjEyNTA5Mzky",
      "avatar_url": "https://avatars.githubusercontent.com/u/12509392?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yamarkz",
      "html_url": "https://github.com/yamarkz",
      "followers_url": "https://api.github.com/users/yamarkz/followers",
      "following_url": "https://api.github.com/users/yamarkz/following{/other_user}",
      "gists_url": "https://api.github.com/users/yamarkz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yamarkz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yamarkz/subscriptions",
      "organizations_url": "https://api.github.com/users/yamarkz/orgs",
      "repos_url": "https://api.github.com/users/yamarkz/repos",
      "events_url": "https://api.github.com/users/yamarkz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yamarkz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T07:55:00Z",
    "updated_at": "2018-10-16T07:55:00Z",
    "author_association": "NONE",
    "body": "very cool!! This proposal has great potential for NFT.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/430138242/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/869212313",
    "html_url": "https://github.com/ethereum/EIPs/issues/1201#issuecomment-869212313",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1201",
    "id": 869212313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2OTIxMjMxMw==",
    "user": {
      "login": "ymyke",
      "id": 8012482,
      "node_id": "MDQ6VXNlcjgwMTI0ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8012482?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ymyke",
      "html_url": "https://github.com/ymyke",
      "followers_url": "https://api.github.com/users/ymyke/followers",
      "following_url": "https://api.github.com/users/ymyke/following{/other_user}",
      "gists_url": "https://api.github.com/users/ymyke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ymyke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ymyke/subscriptions",
      "organizations_url": "https://api.github.com/users/ymyke/orgs",
      "repos_url": "https://api.github.com/users/ymyke/repos",
      "events_url": "https://api.github.com/users/ymyke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ymyke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-27T19:19:53Z",
    "updated_at": "2021-06-27T19:19:53Z",
    "author_association": "NONE",
    "body": "Great proposal! Do I understand correctly that this doesn't say anything about payment? So you'd delegate that to the marketplace/app that supports this standard, correct? The owner would approve the marketplace as an approved renter and the marketplace would then do the escrow between owner and renter?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/869212313/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1000925150",
    "html_url": "https://github.com/ethereum/EIPs/issues/1201#issuecomment-1000925150",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1201",
    "id": 1000925150,
    "node_id": "IC_kwDOAq426M47qOfe",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-24T20:11:55Z",
    "updated_at": "2021-12-24T20:11:55Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1000925150/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1007706697",
    "html_url": "https://github.com/ethereum/EIPs/issues/1201#issuecomment-1007706697",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1201",
    "id": 1007706697,
    "node_id": "IC_kwDOAq426M48EGJJ",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-07T20:12:32Z",
    "updated_at": "2022-01-07T20:12:32Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1007706697/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
