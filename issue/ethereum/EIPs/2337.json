{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/2337",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2337/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2337/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2337/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/2337",
  "id": 515260586,
  "node_id": "MDU6SXNzdWU1MTUyNjA1ODY=",
  "number": 2337,
  "title": "Draft EIP: BLS12-381 Key Generation",
  "user": {
    "login": "CarlBeek",
    "id": 12530043,
    "node_id": "MDQ6VXNlcjEyNTMwMDQz",
    "avatar_url": "https://avatars.githubusercontent.com/u/12530043?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/CarlBeek",
    "html_url": "https://github.com/CarlBeek",
    "followers_url": "https://api.github.com/users/CarlBeek/followers",
    "following_url": "https://api.github.com/users/CarlBeek/following{/other_user}",
    "gists_url": "https://api.github.com/users/CarlBeek/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/CarlBeek/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/CarlBeek/subscriptions",
    "organizations_url": "https://api.github.com/users/CarlBeek/orgs",
    "repos_url": "https://api.github.com/users/CarlBeek/repos",
    "events_url": "https://api.github.com/users/CarlBeek/events{/privacy}",
    "received_events_url": "https://api.github.com/users/CarlBeek/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 19,
  "created_at": "2019-10-31T08:47:20Z",
  "updated_at": "2022-10-23T13:44:59Z",
  "closed_at": "2022-06-10T08:34:51Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Discussion for Draft EIP-XXXX: BLS12-381 Key Generation #2333 .\r\n\r\nThis is the proposed standard for BLS12-381 Key Generation for use within Eth2 as well as by the larger blockchain industry. Please be considerate of the implications of this standard in both the Eth2 and wider contexts.",
  "closed_by": {
    "login": "MicahZoltu",
    "id": 886059,
    "node_id": "MDQ6VXNlcjg4NjA1OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MicahZoltu",
    "html_url": "https://github.com/MicahZoltu",
    "followers_url": "https://api.github.com/users/MicahZoltu/followers",
    "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
    "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
    "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
    "repos_url": "https://api.github.com/users/MicahZoltu/repos",
    "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/2337/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/2337/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/548323483",
    "html_url": "https://github.com/ethereum/EIPs/issues/2337#issuecomment-548323483",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2337",
    "id": 548323483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODMyMzQ4Mw==",
    "user": {
      "login": "MrChico",
      "id": 8930559,
      "node_id": "MDQ6VXNlcjg5MzA1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8930559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrChico",
      "html_url": "https://github.com/MrChico",
      "followers_url": "https://api.github.com/users/MrChico/followers",
      "following_url": "https://api.github.com/users/MrChico/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrChico/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrChico/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrChico/subscriptions",
      "organizations_url": "https://api.github.com/users/MrChico/orgs",
      "repos_url": "https://api.github.com/users/MrChico/repos",
      "events_url": "https://api.github.com/users/MrChico/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrChico/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-31T11:19:49Z",
    "updated_at": "2019-10-31T11:19:49Z",
    "author_association": "MEMBER",
    "body": "Is there a rationale for having such wide trees, with `2^256` possible children? The BIP32 tree has a mere width of 2^32.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/548323483/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/548381387",
    "html_url": "https://github.com/ethereum/EIPs/issues/2337#issuecomment-548381387",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2337",
    "id": 548381387,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODM4MTM4Nw==",
    "user": {
      "login": "CarlBeek",
      "id": 12530043,
      "node_id": "MDQ6VXNlcjEyNTMwMDQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12530043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CarlBeek",
      "html_url": "https://github.com/CarlBeek",
      "followers_url": "https://api.github.com/users/CarlBeek/followers",
      "following_url": "https://api.github.com/users/CarlBeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/CarlBeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CarlBeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CarlBeek/subscriptions",
      "organizations_url": "https://api.github.com/users/CarlBeek/orgs",
      "repos_url": "https://api.github.com/users/CarlBeek/repos",
      "events_url": "https://api.github.com/users/CarlBeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CarlBeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-31T13:43:29Z",
    "updated_at": "2019-10-31T13:43:29Z",
    "author_association": "MEMBER",
    "body": "Thanks for the review. \r\n\r\nThe primary reason for the tree width is my brain seems to think in terms of Eth2 uints now. :/ I guess it is more of a why not scenario. `salt` in HKDF accepts 32 bytes due to the underlying SHA256 hash function and therefore using less just seems to be a waste (it will be padded with zeros up to 32 bytes anyway).\r\n\r\nThe main reason I can think of for BIP32 use of narrow trees is that the index is encoded in extended public and private keys and therefore large indices would waste space. These key types are of no use in this standard as a parent's private key and child index is necessary and sufficient to calculate a child key.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/548381387/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/549307236",
    "html_url": "https://github.com/ethereum/EIPs/issues/2337#issuecomment-549307236",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2337",
    "id": 549307236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTMwNzIzNg==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-04T11:07:33Z",
    "updated_at": "2019-11-04T11:07:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Using 256-bit values does start to cause issues in and around the ecosystem.  Attempting to pass around large integers in JSON, for example, will cause problems.  RFC 7159 states:\r\n\r\n> Since software that implements IEEE 754-2008 binary64 (double precision) numbers [IEEE754] is generally available and widely used, good interoperability can be achieved by implementations that expect no more precision or range than these provide, in the sense that implementations will approximate JSON numbers within the expected precision.\r\n\r\nGiven this, and with the lack of any real use case beyond 2^32 individual accounts per seed, I'd be inclined to dial index back to be a 32-bit unsigned integer.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/549307236/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/549781567",
    "html_url": "https://github.com/ethereum/EIPs/issues/2337#issuecomment-549781567",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2337",
    "id": 549781567,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTc4MTU2Nw==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-05T11:22:29Z",
    "updated_at": "2019-11-05T11:22:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Should `seed` have a constraint on its size, specifically should be > 0 bytes?  Although an empty seed is valid it may well point to upstream issues in supplying the value, so making it invalid here would protect users against fault software elsewhere.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/549781567/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/550215270",
    "html_url": "https://github.com/ethereum/EIPs/issues/2337#issuecomment-550215270",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2337",
    "id": 550215270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDIxNTI3MA==",
    "user": {
      "login": "CarlBeek",
      "id": 12530043,
      "node_id": "MDQ6VXNlcjEyNTMwMDQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12530043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CarlBeek",
      "html_url": "https://github.com/CarlBeek",
      "followers_url": "https://api.github.com/users/CarlBeek/followers",
      "following_url": "https://api.github.com/users/CarlBeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/CarlBeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CarlBeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CarlBeek/subscriptions",
      "organizations_url": "https://api.github.com/users/CarlBeek/orgs",
      "repos_url": "https://api.github.com/users/CarlBeek/repos",
      "events_url": "https://api.github.com/users/CarlBeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CarlBeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-06T09:07:08Z",
    "updated_at": "2019-11-06T09:07:08Z",
    "author_association": "MEMBER",
    "body": "Tree indices are now `uint32`s to guarantee compatibility with languages with limited support for larger numbers natively.\r\n\r\n> Should seed have a constraint on its size, specifically should be > 0 bytes?\r\n\r\nI think a better limitation on `seed` is > 128 bits as anything smaller seems unsafe and it may catch implementation bugs whereby the `seed` is prematurely truncated. If the source of the `seed` is less than 128 bits, it can be extended via a PRF such as HKDF.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/550215270/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/550218091",
    "html_url": "https://github.com/ethereum/EIPs/issues/2337#issuecomment-550218091",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2337",
    "id": 550218091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDIxODA5MQ==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-06T09:14:28Z",
    "updated_at": "2019-11-06T09:38:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think a better limitation on seed is > 128 bits\r\n\r\nThat works.  My rationale for what was basically \"not null\" was to avoid bad implementations; this does it better so thumbs up from me.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/550218091/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/550310700",
    "html_url": "https://github.com/ethereum/EIPs/issues/2337#issuecomment-550310700",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2337",
    "id": 550310700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDMxMDcwMA==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-06T13:34:26Z",
    "updated_at": "2019-11-06T13:34:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Tree indices are now uint32s to guarantee compatibility with languages with limited support for larger numbers natively.\r\n\r\nJust looked at the EIP and it seems the commit changed the index to a maximum of 2^64 not 2^32...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/550310700/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/624384934",
    "html_url": "https://github.com/ethereum/EIPs/issues/2337#issuecomment-624384934",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2337",
    "id": 624384934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNDM4NDkzNA==",
    "user": {
      "login": "kirk-baird",
      "id": 27878213,
      "node_id": "MDQ6VXNlcjI3ODc4MjEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/27878213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kirk-baird",
      "html_url": "https://github.com/kirk-baird",
      "followers_url": "https://api.github.com/users/kirk-baird/followers",
      "following_url": "https://api.github.com/users/kirk-baird/following{/other_user}",
      "gists_url": "https://api.github.com/users/kirk-baird/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kirk-baird/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kirk-baird/subscriptions",
      "organizations_url": "https://api.github.com/users/kirk-baird/orgs",
      "repos_url": "https://api.github.com/users/kirk-baird/repos",
      "events_url": "https://api.github.com/users/kirk-baird/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kirk-baird/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-06T00:55:07Z",
    "updated_at": "2020-05-06T00:55:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Should we update to match `bls-signatures-02`?\r\n\r\nCurrently `hkdf_mod_r()` matches [bls-signatures-00](https://tools.ietf.org/html/draft-irtf-cfrg-bls-signature-00#section-2.3) as\r\n```\r\n1. PRK = HKDF-Extract(\"BLS-SIG-KEYGEN-SALT-\", IKM)\r\n2. OKM = HKDF-Expand(PRK, \"\", L)\r\n3. SK = OS2IP(OKM) mod r\r\n4. return SK\r\n```\r\n\r\nHowever, there has been updates in [bls-signatures-02](https://tools.ietf.org/html/draft-irtf-cfrg-bls-signature-02#section-2.3) to \r\n```\r\n1. PRK = HKDF-Extract(\"BLS-SIG-KEYGEN-SALT-\", IKM || I2OSP(0, 1))\r\n2. OKM = HKDF-Expand(PRK, key_info || I2OSP(L, 2), L)\r\n3. SK = OS2IP(OKM) mod r\r\n4. return SK\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/624384934/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/637521421",
    "html_url": "https://github.com/ethereum/EIPs/issues/2337#issuecomment-637521421",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2337",
    "id": 637521421,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzUyMTQyMQ==",
    "user": {
      "login": "mratsim",
      "id": 22738317,
      "node_id": "MDQ6VXNlcjIyNzM4MzE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/22738317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mratsim",
      "html_url": "https://github.com/mratsim",
      "followers_url": "https://api.github.com/users/mratsim/followers",
      "following_url": "https://api.github.com/users/mratsim/following{/other_user}",
      "gists_url": "https://api.github.com/users/mratsim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mratsim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mratsim/subscriptions",
      "organizations_url": "https://api.github.com/users/mratsim/orgs",
      "repos_url": "https://api.github.com/users/mratsim/repos",
      "events_url": "https://api.github.com/users/mratsim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mratsim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-02T12:51:17Z",
    "updated_at": "2020-06-02T12:51:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "One thing that is unclear is the inclusive vs exclusive for-loop.\r\n\r\nFor example we have\r\n```\r\n* `L = K * 255` is the HKDF output size (in octets)\r\n```\r\nAssuming indexing from 0, we would iterate through slot 0 to 254 (inclusive)\r\n\r\nHowever below we have\r\n```\r\n6. for i = 0 to 255\r\n       lamport_PK = lamport_PK | SHA256(lamport_0[i])\r\n7. for i = 0 to 255\r\n       lamport_PK = lamport_PK | SHA256(lamport_1[i])\r\n```\r\nSo I assume it's 255 exclusive\r\n\r\nLooking into the IETF specs, the HKDF spec uses inclusive range with non explicit for loop\r\nhttps://tools.ietf.org/html/rfc5869\r\n```\r\n   The output OKM is calculated as follows:\r\n\r\n   N = ceil(L/HashLen)\r\n   T = T(1) | T(2) | T(3) | ... | T(N)\r\n   OKM = first L octets of T\r\n```\r\n\r\nAnd the BLS signature spec uses for `1, ..., N` inclusive, https://tools.ietf.org/html/draft-irtf-cfrg-bls-signature-02\r\n```\r\n   5.  for i in 1, ..., n:\r\n   6.      If KeyValidate(PK_i) is INVALID, return INVALID\r\n   7.      xP = pubkey_to_point(PK_i)\r\n   8.      Q = hash_to_point(message_i)\r\n   9.      C1 = C1 * pairing(Q, xP)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/637521421/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/637548497",
    "html_url": "https://github.com/ethereum/EIPs/issues/2337#issuecomment-637548497",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2337",
    "id": 637548497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzU0ODQ5Nw==",
    "user": {
      "login": "mratsim",
      "id": 22738317,
      "node_id": "MDQ6VXNlcjIyNzM4MzE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/22738317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mratsim",
      "html_url": "https://github.com/mratsim",
      "followers_url": "https://api.github.com/users/mratsim/followers",
      "following_url": "https://api.github.com/users/mratsim/following{/other_user}",
      "gists_url": "https://api.github.com/users/mratsim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mratsim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mratsim/subscriptions",
      "organizations_url": "https://api.github.com/users/mratsim/orgs",
      "repos_url": "https://api.github.com/users/mratsim/repos",
      "events_url": "https://api.github.com/users/mratsim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mratsim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-02T13:38:34Z",
    "updated_at": "2020-06-02T13:38:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another thing that caught my eye is the master key generation from a seed:\r\n![image](https://user-images.githubusercontent.com/22738317/83526173-53961700-a4e6-11ea-9ac8-3b25262df5fd.png)\r\nThis is 128-bit is 16 bytes of entropy\r\n\r\nThe BLS spec requires 32 bytes: https://tools.ietf.org/html/draft-irtf-cfrg-bls-signature-02#section-2.3\r\n![image](https://user-images.githubusercontent.com/22738317/83526396-aec80980-a4e6-11ea-8691-9937b9e2e93f.png)\r\n\r\nNow the usage is different since the master key is not supposed to be used as-is be re-expanded and 16 bytes may be enough (cryptographer input needed) but in that case, a line that acknowledges that this was considered would be nice.\r\n\r\nAlternatively we can just use 32 bytes like the BLS spec.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/637548497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/646637100",
    "html_url": "https://github.com/ethereum/EIPs/issues/2337#issuecomment-646637100",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2337",
    "id": 646637100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NjYzNzEwMA==",
    "user": {
      "login": "CarlBeek",
      "id": 12530043,
      "node_id": "MDQ6VXNlcjEyNTMwMDQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12530043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CarlBeek",
      "html_url": "https://github.com/CarlBeek",
      "followers_url": "https://api.github.com/users/CarlBeek/followers",
      "following_url": "https://api.github.com/users/CarlBeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/CarlBeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CarlBeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CarlBeek/subscriptions",
      "organizations_url": "https://api.github.com/users/CarlBeek/orgs",
      "repos_url": "https://api.github.com/users/CarlBeek/repos",
      "events_url": "https://api.github.com/users/CarlBeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CarlBeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-19T13:30:57Z",
    "updated_at": "2020-06-19T13:30:57Z",
    "author_association": "MEMBER",
    "body": "@mratsim, thanks for raising these issues. I've clarified the indexing  in the docs. The idea is that the arrays of octet-strings are flattened into a combined octet-string by concatenation.\r\n\r\nOn the topic of seed length, I made that decision based because BLS12-381 has 128 bit security. In this case it is safe to use that amount of input entropy as the seed is passed through (several) SHA256 hashes. The security only goes birthday on the other side of the hash. That said, the design principle of reusing the KeyGen from the BLS specs still holds, so I have updated the requirements to >=256 bit.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/646637100/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/646646620",
    "html_url": "https://github.com/ethereum/EIPs/issues/2337#issuecomment-646646620",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2337",
    "id": 646646620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NjY0NjYyMA==",
    "user": {
      "login": "CarlBeek",
      "id": 12530043,
      "node_id": "MDQ6VXNlcjEyNTMwMDQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12530043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CarlBeek",
      "html_url": "https://github.com/CarlBeek",
      "followers_url": "https://api.github.com/users/CarlBeek/followers",
      "following_url": "https://api.github.com/users/CarlBeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/CarlBeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CarlBeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CarlBeek/subscriptions",
      "organizations_url": "https://api.github.com/users/CarlBeek/orgs",
      "repos_url": "https://api.github.com/users/CarlBeek/repos",
      "events_url": "https://api.github.com/users/CarlBeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CarlBeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-19T13:48:07Z",
    "updated_at": "2020-06-19T13:48:07Z",
    "author_association": "MEMBER",
    "body": "**Breaking Change:**\r\n\r\n`HKDF_mod_r` now reflects the new definition of `KeyGen` from the BLS v02 specs.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/646646620/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/691049148",
    "html_url": "https://github.com/ethereum/EIPs/issues/2337#issuecomment-691049148",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2337",
    "id": 691049148,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTA0OTE0OA==",
    "user": {
      "login": "kristieguo",
      "id": 20232539,
      "node_id": "MDQ6VXNlcjIwMjMyNTM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/20232539?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kristieguo",
      "html_url": "https://github.com/kristieguo",
      "followers_url": "https://api.github.com/users/kristieguo/followers",
      "following_url": "https://api.github.com/users/kristieguo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kristieguo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kristieguo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kristieguo/subscriptions",
      "organizations_url": "https://api.github.com/users/kristieguo/orgs",
      "repos_url": "https://api.github.com/users/kristieguo/repos",
      "events_url": "https://api.github.com/users/kristieguo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kristieguo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-11T11:54:23Z",
    "updated_at": "2020-09-14T02:42:41Z",
    "author_association": "NONE",
    "body": "@CarlBeek @mcdee @mratsim @MrChico @kirk-baird \r\nHello,\r\n\r\nI'm doing some research and preparing to support ETH2 staking in our custody product. However, I read the EIP proposals and have questions about BLS key derivation implementation.\r\n\r\nThe EIP2333 proposal states:\r\n\r\n\"Based on the order of the private key subgroup of BLS12-381 and the size of the entropy utilised, more than 54% of keys generated by BIP32 would be invalid.\"\r\n\r\nI did some tests and the result matches the statement. However, currently our custody system is using BIP44 to derive keys and we want to keep it that way. By reading the entire proposal, we understand that a new key derivation method involving intermediate Lamport algorithm is recommended but we could not find a Javascript SDK for the entire derivation process. We don't want to take the risk of writing the derivation by ourselves and leads to possible token assets loss. So I was wondering what exact reason is leading to the percentage of 54% invalid key generation and how we could solve this problem without abandoning BIP. By referring to the BLS Javascript SDK as in https://github.com/herumi/bls-eth-wasm, I came up with the solution and demo code as below:\r\n\r\n1. derive from seed by BIP\r\n2. set derived key in step1 to little endian, make it as the BLS private key\r\n3. get BLS public key by the private key\r\n\r\n<img width=\"883\" alt=\"demo-code\" src=\"https://user-images.githubusercontent.com/20232539/93038224-fb3eeb80-f676-11ea-88ca-c51274644737.png\">\r\n\r\nAlthough I see at least one problem in this solution. Keys generated in step 2 may be the same after being set to little endian even if the original keys generated in step 1 are different. Despite this problem, Could this solution 100% solve the BIP key generation problem mentioned in the EIP proposal? Or does anyone have better solutions for us to continue to use BIP44 for key generation without implementing another derivation algorithm?\r\n\r\nI really appreciate it if anyone could help us. Thank you.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/691049148/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/691170153",
    "html_url": "https://github.com/ethereum/EIPs/issues/2337#issuecomment-691170153",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2337",
    "id": 691170153,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTE3MDE1Mw==",
    "user": {
      "login": "mratsim",
      "id": 22738317,
      "node_id": "MDQ6VXNlcjIyNzM4MzE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/22738317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mratsim",
      "html_url": "https://github.com/mratsim",
      "followers_url": "https://api.github.com/users/mratsim/followers",
      "following_url": "https://api.github.com/users/mratsim/following{/other_user}",
      "gists_url": "https://api.github.com/users/mratsim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mratsim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mratsim/subscriptions",
      "organizations_url": "https://api.github.com/users/mratsim/orgs",
      "repos_url": "https://api.github.com/users/mratsim/repos",
      "events_url": "https://api.github.com/users/mratsim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mratsim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-11T15:41:59Z",
    "updated_at": "2020-09-11T15:41:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "> By reading the entire proposal, we understand that a new key derivation method involving intermediate Lamport algorithm is recommended but we could not find a Javascript SDK for the entire derivation process. We don't want to take the risk of writing the derivation by ourselves and leads to possible token assets loss.\r\n\r\nI expect the Lodestar team will have an implementation that is Javascript-focused and that will undergo security audit at one point.\r\n\r\nI can't comment on BIP44, note that there is no demo code in attachment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/691170153/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1152117551",
    "html_url": "https://github.com/ethereum/EIPs/issues/2337#issuecomment-1152117551",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2337",
    "id": 1152117551,
    "node_id": "IC_kwDOAq426M5Eq-sv",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-10T08:34:51Z",
    "updated_at": "2022-06-10T08:34:51Z",
    "author_association": "MEMBER",
    "body": "Since this EIP has become stagnant, we are closing this discussion issue for housekeeping purposes.  You may continue discussion here on the closed issue (it won't be locked), but if you want to revive the EIP (bring it back to Draft or Review status), you will need to create a thread over at https://ethereum-magicians.org/ and update the discussions-to link in the EIP to point there instead (that is where all discussions happen now).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1152117551/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1276598803",
    "html_url": "https://github.com/ethereum/EIPs/issues/2337#issuecomment-1276598803",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2337",
    "id": 1276598803,
    "node_id": "IC_kwDOAq426M5MF1oT",
    "user": {
      "login": "xinbenlv",
      "id": 640325,
      "node_id": "MDQ6VXNlcjY0MDMyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/640325?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xinbenlv",
      "html_url": "https://github.com/xinbenlv",
      "followers_url": "https://api.github.com/users/xinbenlv/followers",
      "following_url": "https://api.github.com/users/xinbenlv/following{/other_user}",
      "gists_url": "https://api.github.com/users/xinbenlv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xinbenlv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xinbenlv/subscriptions",
      "organizations_url": "https://api.github.com/users/xinbenlv/orgs",
      "repos_url": "https://api.github.com/users/xinbenlv/repos",
      "events_url": "https://api.github.com/users/xinbenlv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xinbenlv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-12T18:52:56Z",
    "updated_at": "2022-10-12T18:52:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@CarlBeek, hi from 2022. this is an important EIP. Thank you for your contribution for drafting this EIP.\r\n\r\nAre you still pursuing finalizing it? I encourage that you continue to pursuing finalizing it, or invite someone to finalize it if you don't have capacity.\r\n ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1276598803/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1277480974",
    "html_url": "https://github.com/ethereum/EIPs/issues/2337#issuecomment-1277480974",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2337",
    "id": 1277480974,
    "node_id": "IC_kwDOAq426M5MJNAO",
    "user": {
      "login": "Pandapip1",
      "id": 45835846,
      "node_id": "MDQ6VXNlcjQ1ODM1ODQ2",
      "avatar_url": "https://avatars.githubusercontent.com/u/45835846?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Pandapip1",
      "html_url": "https://github.com/Pandapip1",
      "followers_url": "https://api.github.com/users/Pandapip1/followers",
      "following_url": "https://api.github.com/users/Pandapip1/following{/other_user}",
      "gists_url": "https://api.github.com/users/Pandapip1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Pandapip1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Pandapip1/subscriptions",
      "organizations_url": "https://api.github.com/users/Pandapip1/orgs",
      "repos_url": "https://api.github.com/users/Pandapip1/repos",
      "events_url": "https://api.github.com/users/Pandapip1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Pandapip1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-13T11:45:24Z",
    "updated_at": "2022-10-13T11:45:24Z",
    "author_association": "MEMBER",
    "body": "Considering this EIP is stagnant, the answer is no. However, since the EIP has been stagnant for a while, you can feel free to add yourself as an author and move it into Draft or Review, and if @CarlBeek doesn't respond for a while we'll manually merge it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1277480974/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1287856948",
    "html_url": "https://github.com/ethereum/EIPs/issues/2337#issuecomment-1287856948",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2337",
    "id": 1287856948,
    "node_id": "IC_kwDOAq426M5MwyM0",
    "user": {
      "login": "mratsim",
      "id": 22738317,
      "node_id": "MDQ6VXNlcjIyNzM4MzE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/22738317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mratsim",
      "html_url": "https://github.com/mratsim",
      "followers_url": "https://api.github.com/users/mratsim/followers",
      "following_url": "https://api.github.com/users/mratsim/following{/other_user}",
      "gists_url": "https://api.github.com/users/mratsim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mratsim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mratsim/subscriptions",
      "organizations_url": "https://api.github.com/users/mratsim/orgs",
      "repos_url": "https://api.github.com/users/mratsim/repos",
      "events_url": "https://api.github.com/users/mratsim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mratsim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-22T17:05:55Z",
    "updated_at": "2022-10-22T17:05:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Isn't it already finalized? It's necessary for all validators to use a library that implements this EIP.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1287856948/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1288116615",
    "html_url": "https://github.com/ethereum/EIPs/issues/2337#issuecomment-1288116615",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/2337",
    "id": 1288116615,
    "node_id": "IC_kwDOAq426M5MxxmH",
    "user": {
      "login": "Pandapip1",
      "id": 45835846,
      "node_id": "MDQ6VXNlcjQ1ODM1ODQ2",
      "avatar_url": "https://avatars.githubusercontent.com/u/45835846?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Pandapip1",
      "html_url": "https://github.com/Pandapip1",
      "followers_url": "https://api.github.com/users/Pandapip1/followers",
      "following_url": "https://api.github.com/users/Pandapip1/following{/other_user}",
      "gists_url": "https://api.github.com/users/Pandapip1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Pandapip1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Pandapip1/subscriptions",
      "organizations_url": "https://api.github.com/users/Pandapip1/orgs",
      "repos_url": "https://api.github.com/users/Pandapip1/repos",
      "events_url": "https://api.github.com/users/Pandapip1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Pandapip1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-23T13:44:58Z",
    "updated_at": "2022-10-23T13:44:58Z",
    "author_association": "MEMBER",
    "body": "This is not finalized. Feel free to move it back into draft.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1288116615/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
