{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/144",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/144/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/144/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/144/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/144",
  "id": 174269305,
  "node_id": "MDU6SXNzdWUxNzQyNjkzMDU=",
  "number": 144,
  "title": "Off-chain evaluation of Solidity snippets",
  "user": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 18,
  "created_at": "2016-08-31T13:11:51Z",
  "updated_at": "2022-01-26T09:16:29Z",
  "closed_at": "2022-01-26T09:16:29Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Motivation\n\nSome functions of a contract are often too expensive to be run on-chain (because they have expensive loops). Furthermore, for debugging and other purposes, it might be interesting to inspect the state of a contract with functions that are not provided by the deployed contract. Currently, all functions executed in the context of a contract have to be part of their deployed bytecode even if they are never run on chain, but only via `eth_call`.\n## Abstract\n\nThis proposal provides a way to execute snippets of Solidity code (or raw EVM bytecode) from the front-end part of a dapp in the context of a deployed smart contract and thus allows querying internals of the contract (computing a sum, etc) with a single call to the backend node and without having to pay gas for it.\n\nExample js snippet (web3 and solidity compiler need to be present):\n\n```\n// usual contract object creation that also provides the full source code\nvar contract = ...;\ncontract.eval(\n   \"proposals[$1].votes\",\n   2,\n   function(numberOfVotes) { ... }\n);\n// The 'eval' function substitutes '$1' by '2', compiles the snippet\n// in the context of the contract (i.e. the state variable array\n// 'proposals' is visible), calls the backend node via a special\n// RPC endpoint and returns the result to the given callback\n// function.\n```\n\nThis can also be used to evaluate more complex expressions:\n\n```\ncontract.eval(\n  \"uint voteSum = 0;\" +\n  \"for(uint i = 0; i < proposals.length; ++i)\" +\n  \"  voteSum += proposals[i].votes;\" +\n  \"return voteSum;\",\n  function(voteSum) { ... }\n);\n```\n\nThe general idea is that it becomes trivial to retrieve the values of state variables even if they do\nnot have the `public` modifier (note that all internals of a smart contract are visible to the\noutside world anyway, even if they are marked `private`). Furthermore, you do not have to\npay for the gas costs of deploying this \"dead code\".\n## Implementation\n\nChanges required in RPC:\n\nProvide an alternate implementation of the `eth_call` interface where the code to be executed\ncan be specified (similar to the delegatecall setting).\n\nChanges required in web3.js / solidity-js:\n\nCompile a snippet of solidity code providing access to state variables.\n## Discussion\n\nThe disadvantage here is that contract authors might write their code in a way that essential\ncomponents of a contract are not accessible to other contracts anymore, only to the off-chain world.\n",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/144/reactions",
    "total_count": 18,
    "+1": 18,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/144/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/243809812",
    "html_url": "https://github.com/ethereum/EIPs/issues/144#issuecomment-243809812",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/144",
    "id": 243809812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzgwOTgxMg==",
    "user": {
      "login": "mchlmicy",
      "id": 1360928,
      "node_id": "MDQ6VXNlcjEzNjA5Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1360928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mchlmicy",
      "html_url": "https://github.com/mchlmicy",
      "followers_url": "https://api.github.com/users/mchlmicy/followers",
      "following_url": "https://api.github.com/users/mchlmicy/following{/other_user}",
      "gists_url": "https://api.github.com/users/mchlmicy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mchlmicy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mchlmicy/subscriptions",
      "organizations_url": "https://api.github.com/users/mchlmicy/orgs",
      "repos_url": "https://api.github.com/users/mchlmicy/repos",
      "events_url": "https://api.github.com/users/mchlmicy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mchlmicy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-31T15:53:11Z",
    "updated_at": "2016-08-31T15:53:11Z",
    "author_association": "NONE",
    "body": "Instead of rewriting the functionality of the RPC, Solidity, and web3 couldn't you modify the approach to simply return the state of the contract and then perform any calculations you want off chain? If these actions aren't going to be performed on the blockchain, then what is the benefit of encoding your logic in Solidity / Serpent? This also has the benefit that the user can choose which variables can and can't be returned off chain (wouldn't change the functionality of private). Instead you could simply have another identifier (between public and private) that denotes that data to be retrieved.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/243809812/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/243817488",
    "html_url": "https://github.com/ethereum/EIPs/issues/144#issuecomment-243817488",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/144",
    "id": 243817488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzgxNzQ4OA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-31T16:17:44Z",
    "updated_at": "2016-08-31T16:17:44Z",
    "author_association": "MEMBER",
    "body": "@mchlmicy you are right, there is a tradeoff, but I think transferring the full storage content via RPC and running a js implementation of the VM in the frontend is worse than adding a tiny feature to `eth_call`. With the same argument, we could also just remove `eth_call`.\n\nThe benefit of using Solidity directly is that you do not have to switch the language. Think of a database: You use the same language for updating and for querying your entries.\n\nI don't fully understand your reasoning behind \"the user can choose which variables can and can't be returned off chain\" - they all can be returned off chain, the functionality of \"private\" is not changed at all with this proposal.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/243817488/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/243820309",
    "html_url": "https://github.com/ethereum/EIPs/issues/144#issuecomment-243820309",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/144",
    "id": 243820309,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzgyMDMwOQ==",
    "user": {
      "login": "mchlmicy",
      "id": 1360928,
      "node_id": "MDQ6VXNlcjEzNjA5Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1360928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mchlmicy",
      "html_url": "https://github.com/mchlmicy",
      "followers_url": "https://api.github.com/users/mchlmicy/followers",
      "following_url": "https://api.github.com/users/mchlmicy/following{/other_user}",
      "gists_url": "https://api.github.com/users/mchlmicy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mchlmicy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mchlmicy/subscriptions",
      "organizations_url": "https://api.github.com/users/mchlmicy/orgs",
      "repos_url": "https://api.github.com/users/mchlmicy/repos",
      "events_url": "https://api.github.com/users/mchlmicy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mchlmicy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-31T16:26:30Z",
    "updated_at": "2016-08-31T16:26:30Z",
    "author_association": "NONE",
    "body": "You definitely have a point about \"private\", which I somehow managed to miss. I guess my only response would be that I wouldn't use SQL (if we're going to use the databases metaphor) for anything more complex than basic summation - which is a low gas cost - and my understanding is that you're trying to offload gas-intensive non-state changing calculations (such as hashing). \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/243820309/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/243921047",
    "html_url": "https://github.com/ethereum/EIPs/issues/144#issuecomment-243921047",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/144",
    "id": 243921047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzkyMTA0Nw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-31T22:22:54Z",
    "updated_at": "2016-08-31T22:22:54Z",
    "author_association": "MEMBER",
    "body": "This is not about offloading gas-intensive calculations. It is about \n1) offloading code-intensive calculations that will not be used on chain anyway\n2) extending the flexibility of how to query a contract even after it has been deployed.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/243921047/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/247268788",
    "html_url": "https://github.com/ethereum/EIPs/issues/144#issuecomment-247268788",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/144",
    "id": 247268788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzI2ODc4OA==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-15T08:32:19Z",
    "updated_at": "2016-09-15T08:32:19Z",
    "author_association": "MEMBER",
    "body": "I fully support this. Also, in a light client context, you may want the solidity snippet to be sent to a full node, executed on the full node, and then the answer sent back to the light client along with a Merkle proof so the light client can repeat and verify the computation itself.\n\nOne oossible concern is that I feel like we are duplicating functionality. Namely, there would now be two ways of querying a contract using solidity in web3: (1) calling a const function, (2) this. In some cases, you want the EVM code to be on the chain so that other contracts can query it, but in other cases you do not. Perhaps having two ways to do the same thing isn't too bad if they have different properties, but it might hint at the fact that there's some even better abstraction lurking in the shadows that we haven't found yet....\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/247268788/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/247455137",
    "html_url": "https://github.com/ethereum/EIPs/issues/144#issuecomment-247455137",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/144",
    "id": 247455137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzQ1NTEzNw==",
    "user": {
      "login": "danfinlay",
      "id": 542863,
      "node_id": "MDQ6VXNlcjU0Mjg2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/542863?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danfinlay",
      "html_url": "https://github.com/danfinlay",
      "followers_url": "https://api.github.com/users/danfinlay/followers",
      "following_url": "https://api.github.com/users/danfinlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/danfinlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danfinlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danfinlay/subscriptions",
      "organizations_url": "https://api.github.com/users/danfinlay/orgs",
      "repos_url": "https://api.github.com/users/danfinlay/repos",
      "events_url": "https://api.github.com/users/danfinlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danfinlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-15T21:04:25Z",
    "updated_at": "2016-09-15T21:04:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am a big fan of this concept.  Allowing the client to specify sub-queries in solidity could allow sophisticated, client-side filtering that is performed on the server, allowing a much more efficient relationship between UI and the web3 provider than is currently possible.\n\nThis solves an important issue where right now clients often load entire contract states, which increasingly resemble databases, just to filter the results on the UI, creating very sluggish experiences.\n\nConsider the case of a decentralized twitter:  One person might want to filter by followers, another person might filter by tag, but neither wants to load all of the records just to do the filtering on the client side.  By allowing custom snippets, the filtering logic itself can be part of a decentralized UI, while the main relationships and rules of the contract are kept on-chain.\n\nAdding merkle proofs would be a good extra benefit, as this request could then be made to an untrusted peer.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/247455137/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/258642665",
    "html_url": "https://github.com/ethereum/EIPs/issues/144#issuecomment-258642665",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/144",
    "id": 258642665,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODY0MjY2NQ==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-05T21:43:14Z",
    "updated_at": "2016-11-05T21:43:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am in favor of this too.\nIt turns out that many contracts require getter functions and all of these add to the contract bytecode size increasing the gas cost to deploy the contract.\nFor my own use case, removing the getter functions reduced the contract deployment gas cost by more than 30% (Probably a lot more if I considered the original contract version which has far more getter functions)\n\nIf we could get this getter functions out of the blockchain we could reduce the deployment gas cost of many contracts\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/258642665/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/275906084",
    "html_url": "https://github.com/ethereum/EIPs/issues/144#issuecomment-275906084",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/144",
    "id": 275906084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTkwNjA4NA==",
    "user": {
      "login": "gavofyork",
      "id": 138296,
      "node_id": "MDQ6VXNlcjEzODI5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/138296?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavofyork",
      "html_url": "https://github.com/gavofyork",
      "followers_url": "https://api.github.com/users/gavofyork/followers",
      "following_url": "https://api.github.com/users/gavofyork/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavofyork/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavofyork/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavofyork/subscriptions",
      "organizations_url": "https://api.github.com/users/gavofyork/orgs",
      "repos_url": "https://api.github.com/users/gavofyork/repos",
      "events_url": "https://api.github.com/users/gavofyork/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavofyork/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-29T10:43:27Z",
    "updated_at": "2017-01-29T10:43:27Z",
    "author_association": "MEMBER",
    "body": "Think it's better to pass EVM code rather than anything higher level. It would also be sensible to consider a delivery mechanism for these off-chain calls and how they can be integrated into the existing contract workflow. Could be as simple as ABIs providing an extra item type (`localfunction` or some such) which contain compiled code of any function tagged with the `offchain` modifier.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/275906084/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/276054257",
    "html_url": "https://github.com/ethereum/EIPs/issues/144#issuecomment-276054257",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/144",
    "id": 276054257,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjA1NDI1Nw==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-30T12:46:59Z",
    "updated_at": "2017-01-30T12:46:59Z",
    "author_association": "MEMBER",
    "body": "@gavofyork passing EVM code was of course the intention. By the way, the corresponding RPC endpoint is currently being implemented and tested here: https://github.com/ethereum/go-ethereum/pull/3612",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/276054257/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/276133714",
    "html_url": "https://github.com/ethereum/EIPs/issues/144#issuecomment-276133714",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/144",
    "id": 276133714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjEzMzcxNA==",
    "user": {
      "login": "kumavis",
      "id": 1474978,
      "node_id": "MDQ6VXNlcjE0NzQ5Nzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1474978?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kumavis",
      "html_url": "https://github.com/kumavis",
      "followers_url": "https://api.github.com/users/kumavis/followers",
      "following_url": "https://api.github.com/users/kumavis/following{/other_user}",
      "gists_url": "https://api.github.com/users/kumavis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kumavis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kumavis/subscriptions",
      "organizations_url": "https://api.github.com/users/kumavis/orgs",
      "repos_url": "https://api.github.com/users/kumavis/repos",
      "events_url": "https://api.github.com/users/kumavis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kumavis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-30T17:46:51Z",
    "updated_at": "2017-01-30T17:46:51Z",
    "author_association": "MEMBER",
    "body": "@chriseth could you add spec for the rpc request, perhaps in the format of https://github.com/ethereum/wiki/wiki/JSON-RPC",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/276133714/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/276134636",
    "html_url": "https://github.com/ethereum/EIPs/issues/144#issuecomment-276134636",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/144",
    "id": 276134636,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjEzNDYzNg==",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-30T17:49:14Z",
    "updated_at": "2017-01-30T17:49:14Z",
    "author_association": "MEMBER",
    "body": "We are currently [implementing](https://github.com/obscuren/go-ethereum/commit/2cb9af303f1f7d9f542e6a53dd1782a1625b257c) this as `eth_injectCall`. EIP will follow. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/276134636/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/276175183",
    "html_url": "https://github.com/ethereum/EIPs/issues/144#issuecomment-276175183",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/144",
    "id": 276175183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjE3NTE4Mw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-30T20:07:40Z",
    "updated_at": "2017-01-30T20:07:40Z",
    "author_association": "MEMBER",
    "body": "I've just opened up [EIP199](https://github.com/ethereum/EIPs/issues/199) which tries to fill in the *other* side of this functionality from the perspective of contracts.  This EIP nicely gives the ability for external entities to read arbitrary contract data.  The goal of EIP199 would be to enable that same functionality for contracts.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/276175183/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/284400389",
    "html_url": "https://github.com/ethereum/EIPs/issues/144#issuecomment-284400389",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/144",
    "id": 284400389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDQwMDM4OQ==",
    "user": {
      "login": "Georgi87",
      "id": 259400,
      "node_id": "MDQ6VXNlcjI1OTQwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/259400?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Georgi87",
      "html_url": "https://github.com/Georgi87",
      "followers_url": "https://api.github.com/users/Georgi87/followers",
      "following_url": "https://api.github.com/users/Georgi87/following{/other_user}",
      "gists_url": "https://api.github.com/users/Georgi87/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Georgi87/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Georgi87/subscriptions",
      "organizations_url": "https://api.github.com/users/Georgi87/orgs",
      "repos_url": "https://api.github.com/users/Georgi87/repos",
      "events_url": "https://api.github.com/users/Georgi87/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Georgi87/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-06T13:50:11Z",
    "updated_at": "2017-03-06T13:50:11Z",
    "author_association": "NONE",
    "body": "This is a great fature, which can reduce complexity of smart contracts significantly. In my opinion one of the   most important new additions to the RPC interface. @gavofyork Are you planning to integrate it into parity too? Just checked, but couldn't find the call in parity.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/284400389/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/519532229",
    "html_url": "https://github.com/ethereum/EIPs/issues/144#issuecomment-519532229",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/144",
    "id": 519532229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTUzMjIyOQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-08T14:04:19Z",
    "updated_at": "2019-08-08T14:04:19Z",
    "author_association": "MEMBER",
    "body": "The master branch of geth now has an extension of `eth_call` that can be used for this: https://github.com/ethereum/go-ethereum/issues/19836",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/519532229/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/520491570",
    "html_url": "https://github.com/ethereum/EIPs/issues/144#issuecomment-520491570",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/144",
    "id": 520491570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDQ5MTU3MA==",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-12T16:13:18Z",
    "updated_at": "2019-08-12T16:13:18Z",
    "author_association": "MEMBER",
    "body": "Here are the docs for the API https://geth.ethereum.org/rpc/eth_call",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/520491570/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/607946704",
    "html_url": "https://github.com/ethereum/EIPs/issues/144#issuecomment-607946704",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/144",
    "id": 607946704,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzk0NjcwNA==",
    "user": {
      "login": "rmeissner",
      "id": 2896048,
      "node_id": "MDQ6VXNlcjI4OTYwNDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2896048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmeissner",
      "html_url": "https://github.com/rmeissner",
      "followers_url": "https://api.github.com/users/rmeissner/followers",
      "following_url": "https://api.github.com/users/rmeissner/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmeissner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmeissner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmeissner/subscriptions",
      "organizations_url": "https://api.github.com/users/rmeissner/orgs",
      "repos_url": "https://api.github.com/users/rmeissner/repos",
      "events_url": "https://api.github.com/users/rmeissner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmeissner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-02T16:19:22Z",
    "updated_at": "2020-04-02T16:19:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "the geth docs for this can now be found at https://geth.ethereum.org/docs/rpc/ns-eth (just if someone is looking for it ;) )",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/607946704/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1010816939",
    "html_url": "https://github.com/ethereum/EIPs/issues/144#issuecomment-1010816939",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/144",
    "id": 1010816939,
    "node_id": "IC_kwDOAq426M48P9er",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-12T09:11:42Z",
    "updated_at": "2022-01-12T09:11:42Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1010816939/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1022007917",
    "html_url": "https://github.com/ethereum/EIPs/issues/144#issuecomment-1022007917",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/144",
    "id": 1022007917,
    "node_id": "IC_kwDOAq426M486ppt",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-26T09:16:28Z",
    "updated_at": "2022-01-26T09:16:28Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1022007917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
