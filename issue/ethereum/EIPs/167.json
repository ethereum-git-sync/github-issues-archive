{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/167",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/167/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/167/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/167/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/167",
  "id": 186052920,
  "node_id": "MDU6SXNzdWUxODYwNTI5MjA=",
  "number": 167,
  "title": "Scratch space",
  "user": {
    "login": "vbuterin",
    "id": 2230894,
    "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vbuterin",
    "html_url": "https://github.com/vbuterin",
    "followers_url": "https://api.github.com/users/vbuterin/followers",
    "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
    "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
    "organizations_url": "https://api.github.com/users/vbuterin/orgs",
    "repos_url": "https://api.github.com/users/vbuterin/repos",
    "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vbuterin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2016-10-29T01:53:54Z",
  "updated_at": "2022-01-19T04:13:31Z",
  "closed_at": "2022-01-19T04:13:31Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Specification\n\nIf `block.number >= FORK_BLKNUM`, add two precompile contracts at addresses 0x0e and 0x0f. Both contracts shard 1 gas per byte of calldata plus 20 base gas cost. The contracts work as follows:\n- `0x0e`: All bytes of the calldata except for the first 32 are saved in a new key/value map using `sha3(sender) xor sha3(target)` as a key where `target` is the address in the first 32 bytes and `sender` is the sender of the call.\n- `0x0f`: Immediately return the calldata saved in the key/value map using `sha3(sender) xor sha3(target)` as a key where `target` is the address in the first 32 bytes of calldata as a key and `sender` is the sender of the call.\n\nThe key/value map is reset at the end of processing every transaction.\n### Rationale\n\nThis allows for certain kinds of applications to be built more cheaply, safely and efficiently. For example, consider the use case of sending ERC20 tokens along with a call. The current workflow is:\n1. Sender authorizes token to withdraw funds\n2. Sender calls contract\n3. Contract calls token to withdraw funds, and checks the response to make sure that the withdrawal succeeded. If it did then it continues executing.\n\nHowever, this is ugly, requiring ERC20 tokens to have a complex withdrawal feature, and is gas-inefficient, requiring four SSTOREs: (i) creating the withdrawal authorization, (ii) decreasing sender's ERC20 token balance, (iii) increasing the contract's ERC20 token balance, (iv) removing the withdrawal authorization. Also, it requires a call to the token contract as the first operation of the contract's code, before other state changes; if the token is untrusted this may lead to re-entrancy vulnerabilities.\n\nUsing scratch space, we can change the mechanism to the following:\n1. Sender calls token to send funds to the contract. Token saves in the recipient's scratch space that this was the last transaction that took place.\n2. Sender calls contract\n3. Contract checks scratch space and makes sure that the last transaction of the token sent the correct number of coins, from the sender, to their account. If the check passed, the contract empties the scratch space and continues executing.\n\nThis now only requires two SSTOREs, to do the actual balance change, and so has a gas cost that is proportional to the actual cost of what took place. Re-entrancy is no longer an issue.\n\nAnother use case is mutex locks - a contract may put a mutex flag into some scratch space, using a random address as a target, thereby avoiding the 10000 gas cost of having a mutex feature. A third is as a general call-deferral technique to avoid re-entrancy issues, where instead of making a call immediately, the contract saves a record in scratch space and then allows the sender to later call the contract and \"consume\" the record. A final important use case is for keeping track of intermediate variables for purposes of gas payment in the context of EIP #86.\n",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/167/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/167/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/262361382",
    "html_url": "https://github.com/ethereum/EIPs/issues/167#issuecomment-262361382",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/167",
    "id": 262361382,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjM2MTM4Mg==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-22T20:49:05Z",
    "updated_at": "2016-11-22T20:49:05Z",
    "author_association": "MEMBER",
    "body": "Wouldn't this make more sense as an EVM feature?\r\n\r\nAlternately, could the gas model be adjusted so that nearly all the cost of an SSTORE is refunded at the end of the call if it resulted in no committable changes to state?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/262361382/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/283361656",
    "html_url": "https://github.com/ethereum/EIPs/issues/167#issuecomment-283361656",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/167",
    "id": 283361656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzM2MTY1Ng==",
    "user": {
      "login": "tawaren",
      "id": 22982658,
      "node_id": "MDQ6VXNlcjIyOTgyNjU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/22982658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tawaren",
      "html_url": "https://github.com/tawaren",
      "followers_url": "https://api.github.com/users/tawaren/followers",
      "following_url": "https://api.github.com/users/tawaren/following{/other_user}",
      "gists_url": "https://api.github.com/users/tawaren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tawaren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tawaren/subscriptions",
      "organizations_url": "https://api.github.com/users/tawaren/orgs",
      "repos_url": "https://api.github.com/users/tawaren/repos",
      "events_url": "https://api.github.com/users/tawaren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tawaren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-01T14:54:44Z",
    "updated_at": "2017-03-01T14:54:44Z",
    "author_association": "NONE",
    "body": "I would like to present another use-case, where this can be of great use.\r\nIt could be used to pass & return values for a delegate call, because the sender would stay the same even in the delegate, the delegate would have access to the scratch space of the calling contract. At the moment this either has to be done by storing it in the storage, which is expensive or over the calldata/return, which has the limitation of being linear (and fixed size/upper bounded in case of return), where the scratch space would be key value based and not size limited. From a solidity view (or generally a HLL perspective), this would allow to create temporary dynamic sized arrays or mappings and pass them to library calls and especially return them from library calls (witch would otherwise be impossible because the return size must be known in advance). Big applications, that consist of one central contract storing all the data and a lot of libraries providing the functionality could profit from this as well. For such application it would allow to have per transaction state that can be accessed from each library without the need of passing it along with each call.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/283361656/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1005345720",
    "html_url": "https://github.com/ethereum/EIPs/issues/167#issuecomment-1005345720",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/167",
    "id": 1005345720,
    "node_id": "IC_kwDOAq426M477Fu4",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-05T03:12:50Z",
    "updated_at": "2022-01-05T03:12:50Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1005345720/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1016064151",
    "html_url": "https://github.com/ethereum/EIPs/issues/167#issuecomment-1016064151",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/167",
    "id": 1016064151,
    "node_id": "IC_kwDOAq426M48j-iX",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-01-19T04:13:30Z",
    "updated_at": "2022-01-19T04:13:30Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1016064151/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
