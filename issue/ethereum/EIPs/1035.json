{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/1035",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/1035/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/1035/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/1035/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/1035",
  "id": 317490164,
  "node_id": "MDU6SXNzdWUzMTc0OTAxNjQ=",
  "number": 1035,
  "title": "EIP1035: Transaction execution batching and delegation",
  "user": {
    "login": "k06a",
    "id": 702124,
    "node_id": "MDQ6VXNlcjcwMjEyNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/k06a",
    "html_url": "https://github.com/k06a",
    "followers_url": "https://api.github.com/users/k06a/followers",
    "following_url": "https://api.github.com/users/k06a/following{/other_user}",
    "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
    "organizations_url": "https://api.github.com/users/k06a/orgs",
    "repos_url": "https://api.github.com/users/k06a/repos",
    "events_url": "https://api.github.com/users/k06a/events{/privacy}",
    "received_events_url": "https://api.github.com/users/k06a/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 15,
  "created_at": "2018-04-25T06:09:54Z",
  "updated_at": "2021-12-21T21:09:52Z",
  "closed_at": "2021-12-21T21:09:52Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "---\r\neip: EIP1035\r\ntitle: Transaction execution batching and delegation\r\nauthor: Anton Bukov (@k06a) <k06aaa@gmail.com>\r\ndiscussions-to: k06aaa@gmail.com\r\nstatus: Draft\r\ntype: Core\r\ncategory: Core\r\ncreated: 2018-04-25\r\nupdated: 2018-04-26\r\nrelates: https://github.com/ethereum/EIPs/issues/901\r\n---\r\n\r\n## Simple Summary\r\n<!--\"If you can't explain it simply, you don't understand it well enough.\" Provide a simplified and layman-accessible explanation of the EIP.-->\r\nIt will be great to allow trustless delegated execution of the transactions inside EVM. I mean some account can sign `target`, call `data`, account `nonce`, network `chain_id` and pass them to any other, who will be able to perform this call and pay Ethereum fees like this: \r\n```\r\ntarget.authorizedcall(data, account , nonce, chain_id, signature)\r\n```\r\nThis also will allow batching/chaining account transactions and many other features. One more use case: sender of any ERC20 tokens can signed necessary call and pass it to receiver, and receiver (exchange?) will be able to pay fees for this transaction.\r\n\r\n## Abstract\r\n<!--A short (~200 word) description of the technical issue being addressed.-->\r\nAbstract implementation of `target.authorizedcall(data, account, nonce, chain_id, signature)` method should perform:\r\n1. Check `nonce` of the `account` to be valid\r\n2. Check `chain_id` to be valid for this network\r\n3. Check `signature` of `target|data|nonce|chain_id` and extract `signer`\r\n4. Check `signer` is the same as `account`\r\n5. Perform `data` call on `target` with `msg.sender == account`\r\n6. Increment account nonce\r\n\r\n## Motivation\r\n1. Ethereum fees is a real problem for some new users, who had some (bounty?) tokens and can't even spend this tokens without buying some ether.\r\n2. Look at https://github.com/ethereum/EIPs/issues/827, https://github.com/ethereum/EIPs/issues/1003 â€“ these protocols are trying to solve the problem of batching/chaining user transactions.\r\n\r\n## Specification\r\n<!--The technical specification should describe the syntax and semantics of any new feature. The specification should be detailed enough to allow competing, interoperable implementations for any of the current Ethereum platforms (go-ethereum, parity, cpp-ethereum, ethereumj, ethereumjs, and [others](https://github.com/ethereum/wiki/wiki/Clients)).-->\r\nFrom solidity side this should looks like function on every smart contract:\r\n```\r\nfunction authorizedcall(bytes data, address account, uint256 nonce, uint256 chain_id, bytes signature);\r\n```\r\n\r\n## Test Cases\r\n<!--Test cases for an implementation are mandatory for EIPs that are affecting consensus changes. Other EIPs can choose to include links to test cases if applicable.-->\r\nTest cases for an implementation are mandatory for EIPs that are affecting consensus changes. Other EIPs can choose to include links to test cases if applicable.\r\n\r\n## Implementation\r\n<!--The implementations must be completed before any EIP is given status \"Final\", but it need not be completed before the EIP is accepted. While there is merit to the approach of reaching consensus on the specification and rationale before writing code, the principle of \"rough consensus and running code\" is still useful when it comes to resolving many discussions of API details.-->\r\nThis is working example: https://github.com/bitclave/Feeless\r\n\r\nComplete code:\r\n```\r\nimport { ECRecovery } from \"zeppelin-solidity/contracts/ECRecovery.sol\";\r\n\r\n\r\ncontract Feeless {\r\n    \r\n    address internal msgSender;\r\n    mapping(address => uint256) public nonces;\r\n    \r\n    modifier feeless {\r\n        if (msgSender == address(0)) {\r\n            msgSender = msg.sender;\r\n            _;\r\n            msgSender = address(0);\r\n        } else {\r\n            _;\r\n        }\r\n    }\r\n\r\n    function performFeelessTransaction(address sender, bytes data, uint256 nonce, bytes sig) public payable {\r\n        bytes memory prefix = \"\\x19Ethereum Signed Message:\\n32\";\r\n        bytes32 hash = keccak256(prefix, keccak256(data, nonce));\r\n        msgSender = ECRecovery.recover(hash, sig);\r\n        require(msgSender == sender);\r\n\r\n        require(nonces[msgSender]++ == nonce);\r\n        require(address(this).call.value(msg.value)(data));\r\n        msgSender = address(0);\r\n    }\r\n    \r\n}\r\n```\r\n\r\nUsage:\r\n```\r\ncontract MyToken is StandardToken, Feeless {\r\n\r\n    string public constant symbol = \"XXX\";\r\n    string public constant name = \"MyToken\";\r\n    uint8 public constant decimals = 18;\r\n    string public constant version = \"1.0\";\r\n\r\n    function transfer(address _to, uint256 _value) public feeless returns (bool) {\r\n        balances[msgSender] = balances[msgSender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        Transfer(msgSender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n}\r\n```\r\n\r\nSigning call data:\r\n```\r\nconst target = myToken.options.address;\r\nconst nonce = await myToken.methods.nonces(wallet1).call();\r\nconst data = await myToken.methods.transfer(wallet2, 5 * 10**18).encodeABI();\r\nconst hash = web3.utils.sha3(target + data.substr(2) + web3.utils.toBN(nonce).toString(16,64));\r\nconst sig = await web3.eth.accounts.sign(hash, wallet1PrivateKey);\r\n```\r\n\r\nDelegated execution by any other account:\r\n```\r\nawait myToken.performFeelessTransaction(wallet1, target, data, nonce, sig).send({ from: wallet2 });\r\n```",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/1035/reactions",
    "total_count": 6,
    "+1": 6,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/1035/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/384228581",
    "html_url": "https://github.com/ethereum/EIPs/issues/1035#issuecomment-384228581",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1035",
    "id": 384228581,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDIyODU4MQ==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-25T09:46:28Z",
    "updated_at": "2018-04-25T09:46:28Z",
    "author_association": "MEMBER",
    "body": "I would personally prefer this to be an EVM layer change, rather than contract layer.  It feels silly that the person authorizing the transaction has to be the same person paying fees for the transaction.  Miners care whether they get fees, they don't care about who they get fees from.  Users care about other people not being able to use/spend assets under the control of their private keys, they don't care about how the transaction ends up in a block.\r\n\r\nI would like to see transactions be two layers, the outer layer is signed by the fee payer and contains `feePayerNonce`, `gasPrice`, `gasLimit`, `feePayerSignature`, `transactorNonce`, `to`, `value`, `data`, `transactorSignature`.  It would be even cooler if `transactorNonce`, `to`, `value`, `data`, `transactorSignature` was actually an array, for batching.\r\n\r\nThe above scheme would allow users to pay for \"transaction submission services\" off-chain via other mechanisms (e.g., monthly subscription, pre-paid, paid with fiat, add-on benefit to other services, etc.).  It would also indirectly enable gas payments in non-eth if batching was supported, as the `transactor` executing the transaction could provide two signed transactions to the `feePayer`, one that transfers them some tokens and another that does the thing desired, with the nonce of the token transfer being one more than the nonce of the desired action.  The `feePayer` can batch these two transactions together to effectively be paid in tokens, while miners are still paid in ETH.  Alternatively, if the `transactor` is willing to enter into a trusted relationship with the `feePayer` then they could pre-pay for submissions via something like DAI.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/384228581/reactions",
      "total_count": 5,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/384614880",
    "html_url": "https://github.com/ethereum/EIPs/issues/1035#issuecomment-384614880",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1035",
    "id": 384614880,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDYxNDg4MA==",
    "user": {
      "login": "k06a",
      "id": 702124,
      "node_id": "MDQ6VXNlcjcwMjEyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k06a",
      "html_url": "https://github.com/k06a",
      "followers_url": "https://api.github.com/users/k06a/followers",
      "following_url": "https://api.github.com/users/k06a/following{/other_user}",
      "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
      "organizations_url": "https://api.github.com/users/k06a/orgs",
      "repos_url": "https://api.github.com/users/k06a/repos",
      "events_url": "https://api.github.com/users/k06a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k06a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T11:58:55Z",
    "updated_at": "2018-04-26T11:58:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MicahZoltu the more I think about this proposal the more I see this is the solution for tx **batching**  to replace ERC827 (and ERC1003). Ethereum also can provide default smart contract (0x05?) for batching transactions with the methods like this:\r\n```\r\nfunction batchWithRequire(\r\n    address account,\r\n    address[] targets,\r\n    bytes[] datas,\r\n    uint256 firstNonce,\r\n    uint256 chain_id,\r\n    bytes[] sigs) public\r\n{\r\n    for (uint i = 0; i < targets.length; i++) {\r\n        require(targets[i].authorizedcall(datas[i], account, firstNonce + i, chain_id, sigs[i]));\r\n    }\r\n}   \r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/384614880/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/399782558",
    "html_url": "https://github.com/ethereum/EIPs/issues/1035#issuecomment-399782558",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1035",
    "id": 399782558,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTc4MjU1OA==",
    "user": {
      "login": "k06a",
      "id": 702124,
      "node_id": "MDQ6VXNlcjcwMjEyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k06a",
      "html_url": "https://github.com/k06a",
      "followers_url": "https://api.github.com/users/k06a/followers",
      "following_url": "https://api.github.com/users/k06a/following{/other_user}",
      "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
      "organizations_url": "https://api.github.com/users/k06a/orgs",
      "repos_url": "https://api.github.com/users/k06a/repos",
      "events_url": "https://api.github.com/users/k06a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k06a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-24T19:48:38Z",
    "updated_at": "2018-06-24T19:48:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "This EIP will help a lot in inter-chain development.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/399782558/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/400028428",
    "html_url": "https://github.com/ethereum/EIPs/issues/1035#issuecomment-400028428",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1035",
    "id": 400028428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDAyODQyOA==",
    "user": {
      "login": "ukstv",
      "id": 193527,
      "node_id": "MDQ6VXNlcjE5MzUyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/193527?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ukstv",
      "html_url": "https://github.com/ukstv",
      "followers_url": "https://api.github.com/users/ukstv/followers",
      "following_url": "https://api.github.com/users/ukstv/following{/other_user}",
      "gists_url": "https://api.github.com/users/ukstv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ukstv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ukstv/subscriptions",
      "organizations_url": "https://api.github.com/users/ukstv/orgs",
      "repos_url": "https://api.github.com/users/ukstv/repos",
      "events_url": "https://api.github.com/users/ukstv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ukstv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-25T17:17:34Z",
    "updated_at": "2018-06-25T17:17:34Z",
    "author_association": "NONE",
    "body": "Yay! That would greatly help with off-chain scaling schemes like state channels.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/400028428/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/401824727",
    "html_url": "https://github.com/ethereum/EIPs/issues/1035#issuecomment-401824727",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1035",
    "id": 401824727,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTgyNDcyNw==",
    "user": {
      "login": "PhABC",
      "id": 9306422,
      "node_id": "MDQ6VXNlcjkzMDY0MjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9306422?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PhABC",
      "html_url": "https://github.com/PhABC",
      "followers_url": "https://api.github.com/users/PhABC/followers",
      "following_url": "https://api.github.com/users/PhABC/following{/other_user}",
      "gists_url": "https://api.github.com/users/PhABC/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PhABC/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PhABC/subscriptions",
      "organizations_url": "https://api.github.com/users/PhABC/orgs",
      "repos_url": "https://api.github.com/users/PhABC/repos",
      "events_url": "https://api.github.com/users/PhABC/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PhABC/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-02T14:30:05Z",
    "updated_at": "2018-07-02T14:30:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Strongly related to #1077 by @alexvandesande. Have you considered collaborating on this one @k06a?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/401824727/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/401896653",
    "html_url": "https://github.com/ethereum/EIPs/issues/1035#issuecomment-401896653",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1035",
    "id": 401896653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTg5NjY1Mw==",
    "user": {
      "login": "k06a",
      "id": 702124,
      "node_id": "MDQ6VXNlcjcwMjEyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k06a",
      "html_url": "https://github.com/k06a",
      "followers_url": "https://api.github.com/users/k06a/followers",
      "following_url": "https://api.github.com/users/k06a/following{/other_user}",
      "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
      "organizations_url": "https://api.github.com/users/k06a/orgs",
      "repos_url": "https://api.github.com/users/k06a/repos",
      "events_url": "https://api.github.com/users/k06a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k06a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-02T18:41:05Z",
    "updated_at": "2018-07-02T18:41:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@PhABC thanks, I'll dig into it!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/401896653/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/417856866",
    "html_url": "https://github.com/ethereum/EIPs/issues/1035#issuecomment-417856866",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1035",
    "id": 417856866,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzg1Njg2Ng==",
    "user": {
      "login": "MohamedLEGH",
      "id": 15138914,
      "node_id": "MDQ6VXNlcjE1MTM4OTE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/15138914?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MohamedLEGH",
      "html_url": "https://github.com/MohamedLEGH",
      "followers_url": "https://api.github.com/users/MohamedLEGH/followers",
      "following_url": "https://api.github.com/users/MohamedLEGH/following{/other_user}",
      "gists_url": "https://api.github.com/users/MohamedLEGH/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MohamedLEGH/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MohamedLEGH/subscriptions",
      "organizations_url": "https://api.github.com/users/MohamedLEGH/orgs",
      "repos_url": "https://api.github.com/users/MohamedLEGH/repos",
      "events_url": "https://api.github.com/users/MohamedLEGH/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MohamedLEGH/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-01T12:37:38Z",
    "updated_at": "2018-09-01T12:37:38Z",
    "author_association": "NONE",
    "body": "I agree with @MicahZoltu , I think we should allow any Ethereum transaction to have gas payment delegated, with no need of in contract function. I think this proposal is related to #1228 and #865  .",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/417856866/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/417893810",
    "html_url": "https://github.com/ethereum/EIPs/issues/1035#issuecomment-417893810",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1035",
    "id": 417893810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzg5MzgxMA==",
    "user": {
      "login": "rstormsf",
      "id": 9360827,
      "node_id": "MDQ6VXNlcjkzNjA4Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9360827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rstormsf",
      "html_url": "https://github.com/rstormsf",
      "followers_url": "https://api.github.com/users/rstormsf/followers",
      "following_url": "https://api.github.com/users/rstormsf/following{/other_user}",
      "gists_url": "https://api.github.com/users/rstormsf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rstormsf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rstormsf/subscriptions",
      "organizations_url": "https://api.github.com/users/rstormsf/orgs",
      "repos_url": "https://api.github.com/users/rstormsf/repos",
      "events_url": "https://api.github.com/users/rstormsf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rstormsf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-01T23:17:30Z",
    "updated_at": "2019-10-29T08:14:34Z",
    "author_association": "NONE",
    "body": "If someone is looking for ETH, ERC20 batch sender - feel free to use:\r\nhttps://multisender.app",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/417893810/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/500872839",
    "html_url": "https://github.com/ethereum/EIPs/issues/1035#issuecomment-500872839",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1035",
    "id": 500872839,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDg3MjgzOQ==",
    "user": {
      "login": "csajedi",
      "id": 1924167,
      "node_id": "MDQ6VXNlcjE5MjQxNjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1924167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/csajedi",
      "html_url": "https://github.com/csajedi",
      "followers_url": "https://api.github.com/users/csajedi/followers",
      "following_url": "https://api.github.com/users/csajedi/following{/other_user}",
      "gists_url": "https://api.github.com/users/csajedi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/csajedi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/csajedi/subscriptions",
      "organizations_url": "https://api.github.com/users/csajedi/orgs",
      "repos_url": "https://api.github.com/users/csajedi/repos",
      "events_url": "https://api.github.com/users/csajedi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/csajedi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-11T14:41:09Z",
    "updated_at": "2019-06-11T14:41:09Z",
    "author_association": "NONE",
    "body": "> I would personally prefer this to be an EVM layer change, rather than contract layer. It feels silly that the person authorizing the transaction has to be the same person paying fees for the transaction. Miners care whether they get fees, they don't care about who they get fees from. Users care about other people not being able to use/spend assets under the control of their private keys, they don't care about how the transaction ends up in a block.\r\n> \r\n> I would like to see transactions be two layers, the outer layer is signed by the fee payer and contains `feePayerNonce`, `gasPrice`, `gasLimit`, `feePayerSignature`, `transactorNonce`, `to`, `value`, `data`, `transactorSignature`. It would be even cooler if `transactorNonce`, `to`, `value`, `data`, `transactorSignature` was actually an array, for batching.\r\n> \r\n> The above scheme would allow users to pay for \"transaction submission services\" off-chain via other mechanisms (e.g., monthly subscription, pre-paid, paid with fiat, add-on benefit to other services, etc.). It would also indirectly enable gas payments in non-eth if batching was supported, as the `transactor` executing the transaction could provide two signed transactions to the `feePayer`, one that transfers them some tokens and another that does the thing desired, with the nonce of the token transfer being one more than the nonce of the desired action. The `feePayer` can batch these two transactions together to effectively be paid in tokens, while miners are still paid in ETH. Alternatively, if the `transactor` is willing to enter into a trusted relationship with the `feePayer` then they could pre-pay for submissions via something like DAI.\r\n\r\nIs this EIP continuing? I am especially interested in details pertaining to the EVM change described above. It would simplify the creation of a retroactive metatransactions upgrade to all existing tokens and contracts. relevant to EIPs: 1776, 965, 985. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/500872839/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/501244469",
    "html_url": "https://github.com/ethereum/EIPs/issues/1035#issuecomment-501244469",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1035",
    "id": 501244469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTI0NDQ2OQ==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-12T12:08:08Z",
    "updated_at": "2019-06-12T12:08:08Z",
    "author_association": "MEMBER",
    "body": "@AlexeyAkhunov has been pushing recently for changing the transaction protocol so it can evolve over time.  It may be worth considering https://github.com/ethereum/EIPs/issues/1035#issuecomment-384228581 in that design.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/501244469/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/502465639",
    "html_url": "https://github.com/ethereum/EIPs/issues/1035#issuecomment-502465639",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1035",
    "id": 502465639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjQ2NTYzOQ==",
    "user": {
      "login": "csajedi",
      "id": 1924167,
      "node_id": "MDQ6VXNlcjE5MjQxNjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1924167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/csajedi",
      "html_url": "https://github.com/csajedi",
      "followers_url": "https://api.github.com/users/csajedi/followers",
      "following_url": "https://api.github.com/users/csajedi/following{/other_user}",
      "gists_url": "https://api.github.com/users/csajedi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/csajedi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/csajedi/subscriptions",
      "organizations_url": "https://api.github.com/users/csajedi/orgs",
      "repos_url": "https://api.github.com/users/csajedi/repos",
      "events_url": "https://api.github.com/users/csajedi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/csajedi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-16T16:17:04Z",
    "updated_at": "2019-06-16T16:17:04Z",
    "author_association": "NONE",
    "body": "@MicahZoltu I stumbled upon this EIP while having similar discussions regarding enabling meta transactions on the Zilliqa blockchain. My overall goal is driving towards subscription-based recurring payments that would drastically benefit from transaction batching. I've linked your [comment ](https://github.com/ethereum/EIPs/issues/1035#issuecomment-384228581) to justify work breaking out the messaging standard like so. In that regard, I'd like to stay in the loop and contribute as I can to the Ethereum effort. Kudos to you ETH guys for discussing and innovating in the open... Zilliqa really needs an EIP repository. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/502465639/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/517167642",
    "html_url": "https://github.com/ethereum/EIPs/issues/1035#issuecomment-517167642",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1035",
    "id": 517167642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzE2NzY0Mg==",
    "user": {
      "login": "longduer",
      "id": 37360547,
      "node_id": "MDQ6VXNlcjM3MzYwNTQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/37360547?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/longduer",
      "html_url": "https://github.com/longduer",
      "followers_url": "https://api.github.com/users/longduer/followers",
      "following_url": "https://api.github.com/users/longduer/following{/other_user}",
      "gists_url": "https://api.github.com/users/longduer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/longduer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/longduer/subscriptions",
      "organizations_url": "https://api.github.com/users/longduer/orgs",
      "repos_url": "https://api.github.com/users/longduer/repos",
      "events_url": "https://api.github.com/users/longduer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/longduer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-01T07:53:18Z",
    "updated_at": "2019-08-01T07:53:18Z",
    "author_association": "NONE",
    "body": "what if the ERC20 token already existed,Could implement the feeless contract? if can ,how",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/517167642/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/629545528",
    "html_url": "https://github.com/ethereum/EIPs/issues/1035#issuecomment-629545528",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1035",
    "id": 629545528,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTU0NTUyOA==",
    "user": {
      "login": "ARJUN-R34",
      "id": 23917863,
      "node_id": "MDQ6VXNlcjIzOTE3ODYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/23917863?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ARJUN-R34",
      "html_url": "https://github.com/ARJUN-R34",
      "followers_url": "https://api.github.com/users/ARJUN-R34/followers",
      "following_url": "https://api.github.com/users/ARJUN-R34/following{/other_user}",
      "gists_url": "https://api.github.com/users/ARJUN-R34/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ARJUN-R34/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ARJUN-R34/subscriptions",
      "organizations_url": "https://api.github.com/users/ARJUN-R34/orgs",
      "repos_url": "https://api.github.com/users/ARJUN-R34/repos",
      "events_url": "https://api.github.com/users/ARJUN-R34/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ARJUN-R34/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-15T23:20:20Z",
    "updated_at": "2020-05-15T23:20:20Z",
    "author_association": "NONE",
    "body": "> import { ECRecovery } from \"zeppelin-solidity/contracts/ECRecovery.sol\";\r\n> \r\n> \r\n> contract Feeless {\r\n>     \r\n>     address internal msgSender;\r\n>     mapping(address => uint256) public nonces;\r\n>     \r\n>     modifier feeless {\r\n>         if (msgSender == address(0)) {\r\n>             msgSender = msg.sender;\r\n>             _;\r\n>             msgSender = address(0);\r\n>         } else {\r\n>             _;\r\n>         }\r\n>     }\r\n> \r\n>     function performFeelessTransaction(address sender, bytes data, uint256 nonce, bytes sig) public payable {\r\n>         bytes memory prefix = \"\\x19Ethereum Signed Message:\\n32\";\r\n>         bytes32 hash = keccak256(prefix, keccak256(data, nonce));\r\n>         msgSender = ECRecovery.recover(hash, sig);\r\n>         require(msgSender == sender);\r\n> \r\n>         require(nonces[msgSender]++ == nonce);\r\n>         require(address(this).call.value(msg.value)(data));\r\n>         msgSender = address(0);\r\n>     }\r\n>     \r\n> }\r\n> ```\r\n> \r\n> Usage:\r\n> \r\n> ```\r\n> contract MyToken is StandardToken, Feeless {\r\n> \r\n>     string public constant symbol = \"XXX\";\r\n>     string public constant name = \"MyToken\";\r\n>     uint8 public constant decimals = 18;\r\n>     string public constant version = \"1.0\";\r\n> \r\n>     function transfer(address _to, uint256 _value) public feeless returns (bool) {\r\n>         balances[msgSender] = balances[msgSender].sub(_value);\r\n>         balances[_to] = balances[_to].add(_value);\r\n>         Transfer(msgSender, _to, _value);\r\n>         return true;\r\n>     }\r\n> \r\n> }\r\n> ```\r\n> \r\n> Signing call data:\r\n> \r\n> ```\r\n> const target = myToken.options.address;\r\n> const nonce = await myToken.methods.nonces(wallet1).call();\r\n> const data = await myToken.methods.transfer(wallet2, 5 * 10**18).encodeABI();\r\n> const hash = web3.utils.sha3(target + data.substr(2) + web3.utils.toBN(nonce).toString(16,64));\r\n> const sig = await web3.eth.accounts.sign(hash, wallet1PrivateKey);\r\n> ```\r\n> \r\n> Delegated execution by any other account:\r\n> \r\n> ```\r\n> await myToken.performFeelessTransaction(wallet1, target, data, nonce, sig).send({ from: wallet2 });\r\n> ```\r\n\r\nIf all it takes is just one public address to delegate the transaction, how is the security maintained ?\r\nWhat is stopping someone from delegating the transaction to random accounts ? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/629545528/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/988232822",
    "html_url": "https://github.com/ethereum/EIPs/issues/1035#issuecomment-988232822",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1035",
    "id": 988232822,
    "node_id": "IC_kwDOAq426M465zx2",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-07T20:12:44Z",
    "updated_at": "2021-12-07T20:12:44Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/988232822/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/999096184",
    "html_url": "https://github.com/ethereum/EIPs/issues/1035#issuecomment-999096184",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1035",
    "id": 999096184,
    "node_id": "IC_kwDOAq426M47jP94",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-21T21:09:51Z",
    "updated_at": "2021-12-21T21:09:51Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/999096184/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
