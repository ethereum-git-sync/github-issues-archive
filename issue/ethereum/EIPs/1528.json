{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/1528",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/1528/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/1528/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/1528/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/1528",
  "id": 372985223,
  "node_id": "MDU6SXNzdWUzNzI5ODUyMjM=",
  "number": 1528,
  "title": "Refungible ERC721 Asset with Fungible ERC20",
  "user": {
    "login": "tlxsam",
    "id": 41119736,
    "node_id": "MDQ6VXNlcjQxMTE5NzM2",
    "avatar_url": "https://avatars.githubusercontent.com/u/41119736?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tlxsam",
    "html_url": "https://github.com/tlxsam",
    "followers_url": "https://api.github.com/users/tlxsam/followers",
    "following_url": "https://api.github.com/users/tlxsam/following{/other_user}",
    "gists_url": "https://api.github.com/users/tlxsam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tlxsam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tlxsam/subscriptions",
    "organizations_url": "https://api.github.com/users/tlxsam/orgs",
    "repos_url": "https://api.github.com/users/tlxsam/repos",
    "events_url": "https://api.github.com/users/tlxsam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tlxsam/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2018-10-23T12:55:22Z",
  "updated_at": "2021-12-18T21:11:15Z",
  "closed_at": "2021-12-18T21:11:15Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "---\r\neip: 1513\r\ntitle: Refungible ERC721 Asset with Fungible ERC20\r\nauthor: Tallyx Inc(@tallyxinc)\r\ndiscussions-to: https://github.com/ethereum/EIPs/issues/1513\r\ntype: Standards Track\r\ncategory: ERC\r\nstatus: Draft\r\ncreated: 2018-10-19\r\nrequires: 721, 20\r\n---\r\n\r\n## Simple Summary\r\n\r\nA standard interface for ReFungible Token definition, ERC721 Non-Fungible Asset token backed by ERC-20 Fungible tokens representing the transferable ownership of the Asset.\r\n\r\n## Abstract\r\n\r\nThis is a standard for ReFungible Token definition, with the ERC721 representing the Non-Fungible Tokenized Assets such as the the assets in Global Trade(Payment Obligation, Invoice, Draft, Buyer Payment, Payment Finance, etc.), Insurance, Investment banking etc., backed by ERC-20 Fungible tokens representing the transferable ownership of the Asset. The ownership can be fully owned by one owner or split across multiple owners and the ownership can be transferred fully or partially to other owners. The transferred ownership could be further transferred fully or split across multiple tiers. The ERC20 token registry manages the ownership distribution and tracks the deep tier ownership transfer. The Asset(such as Buyer Payment or Payment Finance) has a time limit on the validity/maturity period, and a maturity event managed by a smart contract.\r\n\r\nExisting standards such as ERC721 and ERC998 does not address the ownership management requirements.\r\n\r\n## Motivation\r\n\r\nThe article on [ReFungible Token](https://medium.com/@billyrennekamp/re-fungible-token-rft-297003592769) is the concept this standard is based on, positioning for Global Trade and also extended it for  Marketplace needs etc.\r\n\r\nThis EIP aims to provide a ReFungible token standard that allows multi-owner ownership of an Asset. The design permits the freedom of functional extending, for example using this standard as a storage for e-commerce items, auction or marketplace. Even storing of derivatives can be built on the top of this standard, removing the government approvals for such actions, you can store all accounting on the side-chain encapsulating private data and transfer to public chain only fact of the presence of one or another asset. \r\n\r\nThe requirement was to have a representation of a non-fungible asset with limited lifetime/maturity and the ownership split across multiple owners with the ability to transfer ownership fully or partially. The ERC998 provides a composability option but it does not suit this requirement.\r\n\r\nSupport for the brandable token by Corporates and Banks with custom searchable attributes, marketplace management for listing and processing tokens and visualization will be part of the standard. This will be built for B2B, B2C or Corporate Wallet integration and provide Smart Contract capability to initiate settlement upon Maturity for all the split ownership. The secure marketplace support with restricted scoping and visibility will be addressed. \r\n\r\nThe [Tallyx Whitepapers](https://github.com/tallyxinc/top-rft/tree/master/whitepapers) provide additional information. \r\n\r\n## Specification\r\n\r\nThis standard outlines a smart contract interface which represents a set of Non-Fungible Assets and Fungible and for each in a separate contracts fungibility through the ERC20. Existing standards such as ERC721 cannot provide enough features and functionality for this. The Refungible standard allows to create an ERC20 Fungible Token with predefined token supply, that is the value of the associated Non-Fungible token.\r\n\r\nThe entry point to the pipeline is creating the Non-Fungible Token, whose value is represented by Fungible tokens with ERC-20, starts from the ‘createFT’ function. Under the hood ‘createFT’ creates a Fungible token with specified owner and supply and then establish Non-Fungible one, both tokens are linked between each other. By granting binding between NFT and FT we gain an opportunity to create a set of NFT’s, with different owners, the balance of Fungible Token for each holder in relative to NFT determines the measure of his ownership to the Non-Fungible asset. \r\n\r\nFungible token requires to have name, symbol, decimals, total supply, the address of ReFungible base contract, the address of the owner and Token ID of NFT. The fungible token has ERC20 compatible interface, that means we could create a mapping from the public to private net smart contract, keep private data encapsulated from public access on the side-chain, having confirmation that such smart contract exists and its value and transfer operation could be monitored on main Ethereum blockchain. Fungible tokens could be distributed over some addresses during one action with the use of ‘batchTransfer’ function, allowing the token owner to share his stake in a more elegant way. Inside Fungible Token there is a registry of token holders when you first receive tokens to your balance, you became token holder and as such gain ownership in proportion, on the stake of NFT. \r\n\r\n**NFT Token Standard**\r\n\r\n\tbalanceOf(address _owner)\r\n\r\n\t\tReturns NFT Token balance of selected address(_owner), which means, \r\n\t\thow many NFT tokens owner of address has on his balance.\r\n\t\t_owner - address\r\n\t\r\n\townerOf(uint256 _tokenId)\r\n\t\r\n\t\tReturns owner address of selected NFT token (_tokenId).\r\n\t\t_tokenId - unique identifier of NFT\r\n\t\r\n\tapprove(address _to, uint256 _tokenId)\r\n\t\r\n\t\tApproves to transfer selected NFT (_tokenId) by specific address (_to).\r\n\t\t_to - receiver address of transfer approve for selected NFT\r\n\t\t_tokenId - unique identifier of NFT\r\n\t\r\n\tgetApproved(uint256 _tokenId)\r\n\t\r\n\t\tReturns address of approved for transfer address for selected NFT(_tokenId). \r\n\t\t_tokenId - unique idenfier of NFT\r\n\t\r\n\tsetApprovalForAll(address _to,bool _approved)\r\n\t\r\n\t\tApprove/Disapprove(depends on _approved value) transfering of all caller's NFTs by \r\n\t\tspecific address (_to).\r\n\t\t_to - receiver of approvals for all NFT's owned by caller address\r\n\t\r\n\tisApprovedForAll(address _owner, address _operator)\r\n\t\r\n\t\tChecks if all NFT's of certain address(_owner) is approved to transfer by another address(_operator)\r\n\t\t_owner - address of NFT's owner\r\n\t\t_operator - receipient address of transfer rights\r\n\t\r\n\ttransferFrom(address _from, address _to, uint256 _tokenId)\r\n\t\r\n\t\tTransfer selected NFT (_tokenId) from owner (_from) to new owner(_to)\r\n\t\t_from - address of NFT's owner \r\n\t\t_to - address of NFT receiver\r\n\t\t_tokenId - unique identifier of NFT\r\n\t\r\n\tsafeTransferFrom(address _from, address _to, uint256 _tokenId)\r\n\t\r\n\t\tSafe implementation of transferFrom function, which additionally checks that NFT receiver \r\n\t\taddress is NFT compatible by calling method of Receipient contract address \r\n\t\tand supplying sender address, previous owner of NFT, NFT id.\r\n\t\r\n\ttokenOfOwnerByIndex(address _owner, uint256 _index)\r\n\t\r\n\t\tReturns NFT id owned by the supplied address and index in the owner's NFT array.\r\n\t\tIndex could be from 0 to n, where n is owner's balance of NFT's\r\n\t\t_owner - address of NFT's owner\r\n\t\t_index - index inside array of owner's NFT\r\n\t\r\n\ttotalSupply()\r\n\t\r\n\t\tReturns total amount of NFT's presented in this NFT contract\r\n\t\r\n\ttokenByIndex(uint256 _index)\r\n\t\r\n\t\tReturns NFT id from all NFT's array by using its index.\r\n\t\t_index - index inside array of all NFT\r\n\t\r\n\ttokenURI(uint256 _tokenId)\r\n\t\r\n\t\tGet Uniform Resource Identifier of selected NFT \r\n\t\t_tokenId - unique identifier of NFT\r\n\t\t\r\n**FT Token Standard**\r\n\r\n\tfunction balanceOf(address _address)\r\n\t\r\n\t\tReturns fungible token balance of specific address\r\n\t\r\n\ttotalSupply()\r\n\t\r\n\t\tReturns all supply of tokens that was initially created\r\n\t\r\n\ttransfer(address _to, uint256 _amount)\r\n\t\r\n\t\tTransfer specified amount of tokens from token holder to receipient, \r\n\t\tcould throw in case function caller has not enough tokens\r\n\t\towner - holder of FT\r\n\t\t_to - new holder of FT\r\n\t\t_amount - amount of FT to be transfered\r\n\t\r\n\tapprove(address _operator,uint256 _amount)\r\n\t\r\n\t\tAllow _operator to withdraw from your account, multiple times, up to the _amount. \r\n\t\tIf this function is called again it overwrites the current allowance with _value.\r\n\t\r\n\ttransferFrom(address _from,address _to,uint256 _amount)\r\n\t\r\n\t\tTransfer specified amount of tokens from token holder to receipient, \r\n\t\tfunction caller address is approved address  \r\n\t\t_from - holder of FT's to transfer from\r\n\t\t_to - new holder of FT's to transfer to\r\n\t\t_amount - amount of FT's to be transfered\r\n\t\r\n\tincreaseAllowance(address _operator,uint256 _addedAmount)\r\n\t\r\n\t\tIncrease amount of tokens allowed to be transfered for approved address from \r\n\t\tbalance of owner\r\n\t\towner - caller address\r\n\t\t_operator - approved address\r\n\t\t_addedAmount - amount to be added to approved address allowance balance\r\n\t\r\n\tdecreaseAllowance(address _operator,uint256 _substractedAmount)\r\n\t\r\n\t\tDecrease amount of tokens allowed to be transfered for approved address \r\n\t\tfrom balance of owner\r\n\t\towner - caller address\r\n\t\t_operator - approved address\r\n\t\t_substractedAmount - amount to be substracted from approved address allowance balance\r\n\t\r\n\tallowance(address _owner,address _operator)\r\n\t\r\n\t\tReturns amount of tokens allowed to be transfered for approved address from \r\n\t\tbalance of owner\r\n\t\t_owner - holder of FT's\r\n\t\t_operator - approved address\r\n\t\r\n\tbatchTransfer(address[] _receivers,uint256[] _values)\r\n\t\r\n\t\tTransfer specified token amounts from token holder to receipients\r\n\t\t_receivers - array of FT's receivers addresses\r\n\t\t_values - array of FT's amount\r\n\t\r\n\tbatchTransferFrom(address _from,address[] _receivers,uint256[] _values)\r\n\t\r\n\t\tTransfer specified token amounts from token holder to receipients\r\n\t\t_from - holder of NFT's\r\n\t\t_receivers - array of FT's receivers addresses\r\n\t\t_values - array of FT's amount\r\n\t\r\n\tholdersCount()\r\n\t\r\n\t\tReturns count of token holders\r\n\t\r\n\tholderByIndex(uint256 _index)\r\n\t\r\n\t\tReturns address of token holder by index inside array of token holders\r\n\t\t_index - index inside array of token holders\r\n\t\r\n\tholders(uint256 _from, uint256 _to)\r\n\t\r\n\t\tReturns token holders addresses and their balances in some range\r\n\t\t_from - start index inside array of token holders\r\n\t\t_to - end index inside array of token holders\r\n\t\r\n\tgetNFT()\r\n\t\r\n\t\tReturns address of NFT contract and NFT id that was generated for FT\r\n\r\n**Management Functions (functions applicable for NFT and FT Token Standards)**\r\n\r\n\tburn(address _owner, uint256 _tokenId)\r\n\t\r\n\t\tBurn NFT and delete FT data\r\n\t\t_owner - owner address of NFT to burn\r\n\t\t_tokenId - unique identifier of NFT\r\n\t\r\n\tmint(string _name,string _symbol,uint256 _decimals,address _tokenOwner,\r\n\tuint256 _fungibleTokenSupply)\r\n\t\r\n\t\tMint NFT token and create FT accordingly\r\n\t\r\n\tcreateFT(string _name,string _symbol,uint256 _decimals,address _tokenOwner,\r\n\tuint256 _fungibleTokenSupply,uint256 _tokenId)\r\n\t\r\n\t\tCreates FT with specified parameters\r\n\t\r\n\tnftValue(uint256 _tokenId)\r\n\t\r\n\t\tReturns value of selected NFT\r\n\t\t_tokenId - unique identifier of NFT\r\n\t\r\n\tftHolderBalance(uint256 _tokenId,address _holder)\r\n\t\r\n\t\tReturns FT token balance of specified NFT\r\n\t\t_tokenId - unique identifier of NFT\r\n\t\t_holder - holder address\r\n\t\r\n\tftHoldersBalances(uint256 _tokenId)\r\n\t\r\n\t\tReturns all FT token holders and their balances of specified NFT\r\n\t\t_tokenId - unique identifier of NFT\r\n\t\r\n\tftHoldersCount(uint256 _tokenId)\r\n\t\r\n\t\tReturns FT token holders count of specified NFT\r\n\t\t_tokenId - unique identifier of NFT\r\n\t\r\n\tftAddress(uint256 _tokenId)\r\n\t\r\n\t\tReturns FT smart contract address of specified NFT\r\n\t\t_tokenId - unique identifier of NFT\r\n\r\n## Implementation\r\n\r\nThe initial implementation of the standard is available in [RFT Implementation](https://github.com/tallyxinc/top-rft).\r\n\r\n## Copyright\r\n\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).\r\n",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/1528/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/1528/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/443512548",
    "html_url": "https://github.com/ethereum/EIPs/issues/1528#issuecomment-443512548",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1528",
    "id": 443512548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzUxMjU0OA==",
    "user": {
      "login": "okwme",
      "id": 964052,
      "node_id": "MDQ6VXNlcjk2NDA1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/964052?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/okwme",
      "html_url": "https://github.com/okwme",
      "followers_url": "https://api.github.com/users/okwme/followers",
      "following_url": "https://api.github.com/users/okwme/following{/other_user}",
      "gists_url": "https://api.github.com/users/okwme/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/okwme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/okwme/subscriptions",
      "organizations_url": "https://api.github.com/users/okwme/orgs",
      "repos_url": "https://api.github.com/users/okwme/repos",
      "events_url": "https://api.github.com/users/okwme/events{/privacy}",
      "received_events_url": "https://api.github.com/users/okwme/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-02T14:39:53Z",
    "updated_at": "2018-12-02T14:39:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi all,\r\nJust opened a request for comment on [EIP 1633, Re-Fungible Token](https://github.com/ethereum/EIPs/issues/1634).\r\nWould love your thoughts and feedback.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/443512548/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/799701338",
    "html_url": "https://github.com/ethereum/EIPs/issues/1528#issuecomment-799701338",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1528",
    "id": 799701338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5OTcwMTMzOA==",
    "user": {
      "login": "3scava1i3r",
      "id": 52003051,
      "node_id": "MDQ6VXNlcjUyMDAzMDUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/52003051?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3scava1i3r",
      "html_url": "https://github.com/3scava1i3r",
      "followers_url": "https://api.github.com/users/3scava1i3r/followers",
      "following_url": "https://api.github.com/users/3scava1i3r/following{/other_user}",
      "gists_url": "https://api.github.com/users/3scava1i3r/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3scava1i3r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3scava1i3r/subscriptions",
      "organizations_url": "https://api.github.com/users/3scava1i3r/orgs",
      "repos_url": "https://api.github.com/users/3scava1i3r/repos",
      "events_url": "https://api.github.com/users/3scava1i3r/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3scava1i3r/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-15T19:42:23Z",
    "updated_at": "2021-03-15T19:42:23Z",
    "author_association": "NONE",
    "body": "How can i get to know more about this and get your feedback on some modifications that i have been working on @tlxsam ?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/799701338/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986093219",
    "html_url": "https://github.com/ethereum/EIPs/issues/1528#issuecomment-986093219",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1528",
    "id": 986093219,
    "node_id": "IC_kwDOAq426M46xpaj",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-04T21:10:06Z",
    "updated_at": "2021-12-04T21:10:06Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986093219/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997285232",
    "html_url": "https://github.com/ethereum/EIPs/issues/1528#issuecomment-997285232",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1528",
    "id": 997285232,
    "node_id": "IC_kwDOAq426M47cV1w",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-18T21:11:14Z",
    "updated_at": "2021-12-18T21:11:14Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997285232/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
