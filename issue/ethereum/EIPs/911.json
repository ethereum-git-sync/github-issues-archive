{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/911/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/911/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/911/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/911",
  "id": 302040907,
  "node_id": "MDU6SXNzdWUzMDIwNDA5MDc=",
  "number": 911,
  "title": "EIP 911 - Zero redundancy/overhead bytecode deployments (Discussion/Draft)",
  "user": {
    "login": "ivica7",
    "id": 17837189,
    "node_id": "MDQ6VXNlcjE3ODM3MTg5",
    "avatar_url": "https://avatars.githubusercontent.com/u/17837189?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ivica7",
    "html_url": "https://github.com/ivica7",
    "followers_url": "https://api.github.com/users/ivica7/followers",
    "following_url": "https://api.github.com/users/ivica7/following{/other_user}",
    "gists_url": "https://api.github.com/users/ivica7/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ivica7/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ivica7/subscriptions",
    "organizations_url": "https://api.github.com/users/ivica7/orgs",
    "repos_url": "https://api.github.com/users/ivica7/repos",
    "events_url": "https://api.github.com/users/ivica7/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ivica7/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 24,
  "created_at": "2018-03-03T23:16:20Z",
  "updated_at": "2022-04-05T18:02:58Z",
  "closed_at": "2022-04-05T18:02:58Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Preamble\r\n```\r\nEIP: 911\r\nTitle: Zero-redundancy and overhead-free bytecode deployments\r\nAuthor: Ivica Aracic <aracic@gmail.com>\r\nCategory: EVM\r\nCreated: 2018-03-04\r\nUpdated: 2018-03-04\r\n```\r\n## Short Description\r\n\r\nThe user should not have to pay gas for deploying the code, which already exists in the DB, because the node has no extra work in this case except of setting the correct codeHash in the account, which is covered by the CREATE fee.\r\n\r\n## Motivation\r\n\r\nAt the time of the mainnet block number 5200035, there are 5,212,554 active contract instances referring to 64,561 unique bytecodes. 10,552 (16.34%) of these unique bytecodes have been deployed more than once, resulting in a redundancy of  2,934,072,376 bytes. This is 93.05% of the total byte size of all deployed contracts. \r\n\r\nIf we only consider the price of 200 gas / byte, which is calculated for storing the bytecode to the database, these redundancies have in sum a cost of 586,814,475,200 gas. This is ~7.45% of all gas ever spent in Ethereum. Moreover, this number looks even worse, if we consider the costs for tx input data size and historical instantiations of contracts, which do not exist anymore at the analysed block.\r\n\r\n*Stats are generated with https://github.com/ivica7/eth-chain-stats-collector*\r\n```\r\n              EOAs: 24332129\r\nContract Instances: 5212554\r\n\r\n  Unique Bytecodes\r\n   with duplicates: 10552 / 64561 -> 16.344232586236274 %\r\n      Bytes Wasted: 2934072376 / 3153359448 -> 93.04592211525136 %\r\n        Gas Wasted: 586,814,475,200\r\n```\r\n\r\nCurrently two patterns exist for partially solving this problem: (1) delegatecalls, and (2) extcodecopy/size. \r\n\r\ndelegatecalls allow us to deploy the code once, but again they introduce a code redundancy on its own  for the forwarder contracts. Further, they have an additional run-time overhead of ~1000 gas / call.\r\n\r\nExtcodecopy/size will reduce transaction input size, but the deployment cost of 200 gas / byte still applies even if it is copied from an existing instance.\r\n\r\nBoth patterns are helpful, however, they fail in providing an overhead-free solution for the code redundancy problem. When we consider the fact that Ethereum is targeting x100+ in transaction output (e.g. through PoS and Sharding), we have to be careful with this problem, because it will grow proportionally.\r\n\r\nFor this reason, I am opening this EIP proposal to discuss how to tackle this problem. Below, I provide one possible solution by defining CREATEFROMADDR opcode.\r\n\r\n\r\n## Possible Solution 1\r\n**Specification**\r\n\r\nAdd new opcode CREATEFROMADDR(v, p, s)\r\n* v - value in wei sent to the new contract address\r\n* p - init bytecode memory address\r\n* s - size of the init bytecode\r\n\r\nCEATEFROMADDR behaves like CREATE, but it interprets the return data from the init code as a contract address and sets the codeHash of this address as the codeHash of the new contract. Since there is no insert of the code to node's database required, the additional gas costs for the code Insert can be omitted. The sender pays only a flat fee of 1400 gas instead of len(code)*200.\r\n\r\n*TODO*: for Constantinople also specify CRATEFROMADDR2(v, n, p, s) analogous to CREATE2.\r\n\r\n**Implementation (related to geth)**\r\n\r\n* add a flag to evm:Create to signal which modus is used for the return data.\r\n* Old create-opcodes will set the flag to false\r\n* New create opcodes will set it to true\r\n* If the flag is true, evm:Create will lookup the code hash of the address returned by init code and it will set it as codeHash of the new contract. size*200 gas fee will be replaced by a flat fee of 1400 gas.\r\n\r\n## Possible Solution 2\r\n\r\nChange CREATE2 specification to support the cloning of the codeHashExtend as described above. This opcode is not productive yet and we would not have to introduce new opcodes.\r\n\r\n???",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/911/reactions",
    "total_count": 4,
    "+1": 4,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/911/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370213359",
    "html_url": "https://github.com/ethereum/EIPs/issues/911#issuecomment-370213359",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
    "id": 370213359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDIxMzM1OQ==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-04T09:06:29Z",
    "updated_at": "2018-03-04T09:06:29Z",
    "author_association": "MEMBER",
    "body": "How do you determine if the bytecode already exists? You cannot simply check the db, as results will differ if the contract that created it has self destructed, and the node was fast synced or uses pruning.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370213359/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370223962",
    "html_url": "https://github.com/ethereum/EIPs/issues/911#issuecomment-370223962",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
    "id": 370223962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDIyMzk2Mg==",
    "user": {
      "login": "ivica7",
      "id": 17837189,
      "node_id": "MDQ6VXNlcjE3ODM3MTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/17837189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivica7",
      "html_url": "https://github.com/ivica7",
      "followers_url": "https://api.github.com/users/ivica7/followers",
      "following_url": "https://api.github.com/users/ivica7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivica7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivica7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivica7/subscriptions",
      "organizations_url": "https://api.github.com/users/ivica7/orgs",
      "repos_url": "https://api.github.com/users/ivica7/repos",
      "events_url": "https://api.github.com/users/ivica7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivica7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-04T12:07:40Z",
    "updated_at": "2018-03-04T12:10:30Z",
    "author_association": "NONE",
    "body": "> How do you determine if the bytecode already exists? You cannot simply check the db, as results will differ if the contract that created it has self destructed, and the node was fast synced or uses pruning.\r\n\r\nYes, you're right. I was thinking about limiting it to the state existing at the current block, but this will not be easy to implement too. I was hoping that with this simple change, we could avoid adding/changing an opcode. But it seems the most straight forward implementation would be to add a parameter to CREATE telling if the data is a contract whose code is to be copied or new bytecode.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370223962/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370272261",
    "html_url": "https://github.com/ethereum/EIPs/issues/911#issuecomment-370272261",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
    "id": 370272261,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDI3MjI2MQ==",
    "user": {
      "login": "ivica7",
      "id": 17837189,
      "node_id": "MDQ6VXNlcjE3ODM3MTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/17837189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivica7",
      "html_url": "https://github.com/ivica7",
      "followers_url": "https://api.github.com/users/ivica7/followers",
      "following_url": "https://api.github.com/users/ivica7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivica7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivica7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivica7/subscriptions",
      "organizations_url": "https://api.github.com/users/ivica7/orgs",
      "repos_url": "https://api.github.com/users/ivica7/repos",
      "events_url": "https://api.github.com/users/ivica7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivica7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-04T22:56:12Z",
    "updated_at": "2018-03-05T05:51:43Z",
    "author_association": "NONE",
    "body": "@Arachnid what do you think about this alternative:\r\n\r\nAdd following new OpCodes:\r\n\r\n* createFromAddress(v, p, s) - behaves like CREATE, but it interprets the return data from the init code as a contract address. The codeHash of this address is set for the new contract -> flat gas fee for runtime code deployment.\r\n* createFromAddress2(v, n, p, s) -> the Constantinopel-ready version\r\n\r\nImplementation (geth):\r\n\r\n* add a flag to evm:Create to signal which modus is used for the return data.\r\n* Old create-opcodes will set the flag to false\r\n* New create opcodes will set it to true\r\n* If the flag is true, evm:Create will lookup the code hash of the address returned by init code and it will set it as codeHash of the new contract. size*200 gas fee will be replaced by a flat fee (e.g. 1400 (700+700) analogous to EXTCODESIZE/COPY)\r\n\r\nThis would be a minimal change in the implementation.\r\nThe ugly thing is that we're adding new opcodes. :-/\r\n\r\nBtw. I am working on a script collecting stats from the trie about code duplication. With this script we can estimate how much gas we could have saved with this feature.\r\n\r\n**EDIT**: moved this to the main comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370272261/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370368396",
    "html_url": "https://github.com/ethereum/EIPs/issues/911#issuecomment-370368396",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
    "id": 370368396,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDM2ODM5Ng==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-05T10:00:54Z",
    "updated_at": "2018-03-05T10:00:54Z",
    "author_association": "MEMBER",
    "body": "That approach is definitely more technically feasible.\r\n\r\nI'm not totally convinced this is necessary given how Byzantium enables cheap delegate contracts as an alternative, though.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370368396/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370377675",
    "html_url": "https://github.com/ethereum/EIPs/issues/911#issuecomment-370377675",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
    "id": 370377675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDM3NzY3NQ==",
    "user": {
      "login": "ivica7",
      "id": 17837189,
      "node_id": "MDQ6VXNlcjE3ODM3MTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/17837189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivica7",
      "html_url": "https://github.com/ivica7",
      "followers_url": "https://api.github.com/users/ivica7/followers",
      "following_url": "https://api.github.com/users/ivica7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivica7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivica7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivica7/subscriptions",
      "organizations_url": "https://api.github.com/users/ivica7/orgs",
      "repos_url": "https://api.github.com/users/ivica7/repos",
      "events_url": "https://api.github.com/users/ivica7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivica7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-05T10:34:53Z",
    "updated_at": "2018-03-05T12:56:23Z",
    "author_association": "NONE",
    "body": "@Arachnid yes, delegatecall helps to reduce code duplication, however, it adds infrastructure code, which also has it's own deployment costs and redundancies, and it also adds to runtime costs because of the indirection.\r\n\r\nFinally, to be able to decide if it's worth doing, we need conrete statistics about code instantiation in mainnet. As I said, I am trying to calculate some based on the current state of the blockchain. Will report on it as soon as I have the data.\r\n\r\n> Byzantium enables cheap delegate contracts\r\n\r\nWhat did Byzantium add to make delegate contracts cheaper? Do you mean reducing transaction input size with EXTCODESIZE/COPY or am I missing something?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370377675/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370396552",
    "html_url": "https://github.com/ethereum/EIPs/issues/911#issuecomment-370396552",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
    "id": 370396552,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDM5NjU1Mg==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-05T11:54:26Z",
    "updated_at": "2018-03-05T11:54:26Z",
    "author_association": "MEMBER",
    "body": "@ivica7 Byzantium introduced `RETURNDATASIZE` and `RETURNDATACOPY`; before that, it wasn't possible to write a generic delegate contract because return data size could not be determined ahead of time.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370396552/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370441448",
    "html_url": "https://github.com/ethereum/EIPs/issues/911#issuecomment-370441448",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
    "id": 370441448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDQ0MTQ0OA==",
    "user": {
      "login": "nateawelch",
      "id": 706153,
      "node_id": "MDQ6VXNlcjcwNjE1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/706153?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nateawelch",
      "html_url": "https://github.com/nateawelch",
      "followers_url": "https://api.github.com/users/nateawelch/followers",
      "following_url": "https://api.github.com/users/nateawelch/following{/other_user}",
      "gists_url": "https://api.github.com/users/nateawelch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nateawelch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nateawelch/subscriptions",
      "organizations_url": "https://api.github.com/users/nateawelch/orgs",
      "repos_url": "https://api.github.com/users/nateawelch/repos",
      "events_url": "https://api.github.com/users/nateawelch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nateawelch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-05T14:45:58Z",
    "updated_at": "2018-03-05T14:45:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ivica7 Check this project: https://github.com/yarrumretep/clone-factory\r\n\r\nIt's a delegatecall proxy contract and deployer where the proxy contracts are 58-62 bytes. I had written up a EIP similar to this before I had helped write clone-factory, but quickly realized that these proxy contracts were only 12k gas worth of deployed bytecode. In my opinion, that doesn't really make it worth introducing a new opcode for cloning a contracts code.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370441448/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370470814",
    "html_url": "https://github.com/ethereum/EIPs/issues/911#issuecomment-370470814",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
    "id": 370470814,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDQ3MDgxNA==",
    "user": {
      "login": "ivica7",
      "id": 17837189,
      "node_id": "MDQ6VXNlcjE3ODM3MTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/17837189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivica7",
      "html_url": "https://github.com/ivica7",
      "followers_url": "https://api.github.com/users/ivica7/followers",
      "following_url": "https://api.github.com/users/ivica7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivica7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivica7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivica7/subscriptions",
      "organizations_url": "https://api.github.com/users/ivica7/orgs",
      "repos_url": "https://api.github.com/users/ivica7/repos",
      "events_url": "https://api.github.com/users/ivica7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivica7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-05T16:11:17Z",
    "updated_at": "2018-03-05T16:36:50Z",
    "author_association": "NONE",
    "body": "@flygoing thank you for commenting. I appreciate it very much.\r\n\r\nThe clone-factory is an excellent work considering the circumstances. The code size of the proxy is small, but it's still a redundancy. Moreover, there are also runtime costs due to the overhead for DELEGATECALL + mem handling - ~ 1000 gas for every call. \r\n\r\nAt first glance it looks neglectable, but if we think large scale, and Ethereum is on it's way to it (sharding, pos, more tx/s, etc.), every little bit will count! Just like every single cycle counts in a cpu.\r\n\r\nLet us do this naive estimate \r\n* all contracts are deployed via clone-factory\r\n* every transaction is having only one delegatecall in average \r\n\r\nThis would already mean that we're wasting around 1,000,000,000 gas / day, which is currently $2568/day, which is ~$1.000.000/year. I believe, the wasting right now is even worse than that and if you think about that Ethereum's future should be > x100 tx/s, the wasting will scale proportionally to Ethereum's tx throughput.\r\n\r\nAs I said: I am extracting stats from the mainnet right now in order to get better numbers on this. Only with these numbers a concrete decision can be made if it's worth doing it or not.\r\n\r\nCould you please send me your EIP Link on this topic. I would like to read what the discussion was.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370470814/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370501907",
    "html_url": "https://github.com/ethereum/EIPs/issues/911#issuecomment-370501907",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
    "id": 370501907,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDUwMTkwNw==",
    "user": {
      "login": "tjayrush",
      "id": 5417918,
      "node_id": "MDQ6VXNlcjU0MTc5MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5417918?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjayrush",
      "html_url": "https://github.com/tjayrush",
      "followers_url": "https://api.github.com/users/tjayrush/followers",
      "following_url": "https://api.github.com/users/tjayrush/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjayrush/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjayrush/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjayrush/subscriptions",
      "organizations_url": "https://api.github.com/users/tjayrush/orgs",
      "repos_url": "https://api.github.com/users/tjayrush/repos",
      "events_url": "https://api.github.com/users/tjayrush/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjayrush/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-05T17:43:41Z",
    "updated_at": "2018-03-05T17:43:41Z",
    "author_association": "NONE",
    "body": "@ivica7 Is there any chance that you post the code you're using to 'extract stats from the mainnet'? I'd be very interested in what that looks like. Understand if you'd prefer not to.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370501907/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370670517",
    "html_url": "https://github.com/ethereum/EIPs/issues/911#issuecomment-370670517",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
    "id": 370670517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDY3MDUxNw==",
    "user": {
      "login": "ivica7",
      "id": 17837189,
      "node_id": "MDQ6VXNlcjE3ODM3MTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/17837189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivica7",
      "html_url": "https://github.com/ivica7",
      "followers_url": "https://api.github.com/users/ivica7/followers",
      "following_url": "https://api.github.com/users/ivica7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivica7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivica7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivica7/subscriptions",
      "organizations_url": "https://api.github.com/users/ivica7/orgs",
      "repos_url": "https://api.github.com/users/ivica7/repos",
      "events_url": "https://api.github.com/users/ivica7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivica7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T05:44:10Z",
    "updated_at": "2018-03-06T05:44:10Z",
    "author_association": "NONE",
    "body": "@tjayrush the code is published at https://github.com/ivica7/eth-chain-stats-collector\r\nMore to come...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/370670517/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371528968",
    "html_url": "https://github.com/ethereum/EIPs/issues/911#issuecomment-371528968",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
    "id": 371528968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTUyODk2OA==",
    "user": {
      "login": "nateawelch",
      "id": 706153,
      "node_id": "MDQ6VXNlcjcwNjE1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/706153?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nateawelch",
      "html_url": "https://github.com/nateawelch",
      "followers_url": "https://api.github.com/users/nateawelch/followers",
      "following_url": "https://api.github.com/users/nateawelch/following{/other_user}",
      "gists_url": "https://api.github.com/users/nateawelch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nateawelch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nateawelch/subscriptions",
      "organizations_url": "https://api.github.com/users/nateawelch/orgs",
      "repos_url": "https://api.github.com/users/nateawelch/repos",
      "events_url": "https://api.github.com/users/nateawelch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nateawelch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T15:51:30Z",
    "updated_at": "2018-03-08T15:51:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ivica seeing as the average tx gas is around 50k, the 1.2k (~2%) added for clone calls. Obviously the delegatecall isn't necessary for all contracts, just for ones that are duplicate contracts. So you're looking at maybe 1%.\r\n\r\nThere are issues with creation with cheap code copy in that if a contract is SELFDESTRUCTED, they don't actually deserve the refund because the contract code can't actually be removed. So it's not a gas savings, it's just a shift of the expensiveness of the system from creating duplicated bytecode to everything else. Remember that you don't pay for transactions in gas, you pay for transactions in ETH. If you make transactions cheaper in gas but don't make the execution behind the scenes cheaper, then gas will just get slightly more expensive.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371528968/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371602162",
    "html_url": "https://github.com/ethereum/EIPs/issues/911#issuecomment-371602162",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
    "id": 371602162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTYwMjE2Mg==",
    "user": {
      "login": "ivica7",
      "id": 17837189,
      "node_id": "MDQ6VXNlcjE3ODM3MTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/17837189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivica7",
      "html_url": "https://github.com/ivica7",
      "followers_url": "https://api.github.com/users/ivica7/followers",
      "following_url": "https://api.github.com/users/ivica7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivica7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivica7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivica7/subscriptions",
      "organizations_url": "https://api.github.com/users/ivica7/orgs",
      "repos_url": "https://api.github.com/users/ivica7/repos",
      "events_url": "https://api.github.com/users/ivica7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivica7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T19:46:49Z",
    "updated_at": "2018-03-08T20:03:59Z",
    "author_association": "NONE",
    "body": "@flygoing the refund on SELFDESTRUCT is mainly deserved because the storage for the contract can be removed. Deleting/adding bytecode to the DB is a single insert/delete of a key/value-pair. Already now it's stored redundancy-free as codeHash->bytecode key/value-pair. I think this is not of significance in this case. \r\n\r\nCounted at block number 5 200 035, there are 5 212 554 contract instances (see Stats from the Motivation-Section). \r\n5 158 545 contract instances have their code more than once deployed.\r\nGas wasted since genesis -> 586 814 475 200\r\n\r\nOk, we can do it better nowadays, we have delegatecall and extcodecopy/size and libraries like  https://github.com/yarrumretep/clone-factory. \r\n\r\nLet's calculate what would have happened, if people would have applied clone-factory from the beginning on. Based on the assumption it is only used for contracts that are deployed more than once (5 158 545 at block 5 200 035). Let's further assume, each contract has received in average 3 TXs during it's lifetime, hence 3x overhead for the delegatecall.\r\n\r\nOverhead per contract instance -> (21000 + 32000 + 12000) *for the forwarder creation* + (3 x 1000) *for 3  delegatecall* = 68 000 gas\r\n\r\nWasted Gas with the clone-factory: 5 158 545 *contract instances* x 68 000 *overhead for the clone-factory* => 350 781 060 000 gas wasted. only ~40% less than without this pattern.\r\n\r\nWith EIP-911 -> 0 gas wasted.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371602162/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371660272",
    "html_url": "https://github.com/ethereum/EIPs/issues/911#issuecomment-371660272",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
    "id": 371660272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTY2MDI3Mg==",
    "user": {
      "login": "nateawelch",
      "id": 706153,
      "node_id": "MDQ6VXNlcjcwNjE1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/706153?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nateawelch",
      "html_url": "https://github.com/nateawelch",
      "followers_url": "https://api.github.com/users/nateawelch/followers",
      "following_url": "https://api.github.com/users/nateawelch/following{/other_user}",
      "gists_url": "https://api.github.com/users/nateawelch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nateawelch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nateawelch/subscriptions",
      "organizations_url": "https://api.github.com/users/nateawelch/orgs",
      "repos_url": "https://api.github.com/users/nateawelch/repos",
      "events_url": "https://api.github.com/users/nateawelch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nateawelch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T23:26:30Z",
    "updated_at": "2018-03-08T23:26:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ivica AFAIK the refund on SELFDESTRUCT isn't because the storage trie of a contract can be deleted, it's because the reference of nonce+balance+codeHash+storageRoot can be deleted. Seeing as the storage can be zeroed out before SELFDESTRUCT, you can get the refund from SELFDESTRUCT even if you don't have any storage.\r\n\r\nAlso, SELFDESTRUCT doesn't mean any of that stuff can actually be deleted since it may be used in other locations, it just means the collection that creates the contracts root can be deleted (like I said above). If the code that hashes to contractHash of a SELFDESTRUCT'd contract exists in another contract (which it more than likely would be with your EIP), then it can't be deleted from the state trie and the SELFDESTRUCT refund becomes pointless to an extent since the codeHash->code in the db is largest part of a contract ignoring the storage trie. \r\n\r\nIn the end, since you're not *actually* saving any computation/storage for the nodes, you're not really saving any cost. You're just shifting the cost around to disincentivize SELFDESTRUCT, which realistically means a *higher* cost to the node operators and *higher* gas prices.\r\n\r\n> Wasted Gas with the clone-factory: 5 158 545 contract instances x 68 000 overhead for the clone-factory => 350 781 060 000 gas wasted. only ~40% less than without this pattern.\r\n\r\nThe clone factory is, of course, only really useful when (forwarderDeploymentCost+avereageCallsPerForwarder*gasCostPerForward) < fullContractDeploymentCost. There are a ton of contracts that benefit greatly from this, so there is actually a net benefit from these since there is less work on the nodes to store less bytecode.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371660272/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371665387",
    "html_url": "https://github.com/ethereum/EIPs/issues/911#issuecomment-371665387",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
    "id": 371665387,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTY2NTM4Nw==",
    "user": {
      "login": "nateawelch",
      "id": 706153,
      "node_id": "MDQ6VXNlcjcwNjE1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/706153?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nateawelch",
      "html_url": "https://github.com/nateawelch",
      "followers_url": "https://api.github.com/users/nateawelch/followers",
      "following_url": "https://api.github.com/users/nateawelch/following{/other_user}",
      "gists_url": "https://api.github.com/users/nateawelch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nateawelch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nateawelch/subscriptions",
      "organizations_url": "https://api.github.com/users/nateawelch/orgs",
      "repos_url": "https://api.github.com/users/nateawelch/repos",
      "events_url": "https://api.github.com/users/nateawelch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nateawelch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T23:51:17Z",
    "updated_at": "2018-03-08T23:51:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ivica7 Also, on top of that, the cost of the clone-factory vs your opcode isn't actually 68k vs 0. The cost of the clone-factory is mainly the 21k for tx and 32k for contract creation, which are both costs that would still exist for your opcode. The actual cost difference would be more around ~15k (only 12k for the actual bytecode)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371665387/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371705557",
    "html_url": "https://github.com/ethereum/EIPs/issues/911#issuecomment-371705557",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
    "id": 371705557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTcwNTU1Nw==",
    "user": {
      "login": "nootropicat",
      "id": 34722633,
      "node_id": "MDQ6VXNlcjM0NzIyNjMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/34722633?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nootropicat",
      "html_url": "https://github.com/nootropicat",
      "followers_url": "https://api.github.com/users/nootropicat/followers",
      "following_url": "https://api.github.com/users/nootropicat/following{/other_user}",
      "gists_url": "https://api.github.com/users/nootropicat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nootropicat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nootropicat/subscriptions",
      "organizations_url": "https://api.github.com/users/nootropicat/orgs",
      "repos_url": "https://api.github.com/users/nootropicat/repos",
      "events_url": "https://api.github.com/users/nootropicat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nootropicat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T03:51:17Z",
    "updated_at": "2018-03-09T03:56:02Z",
    "author_association": "NONE",
    "body": "Imo it's only really an issue with gas costs being wrong. Deduplication can already happen on the database side, but there's no incentive to create identical contracts. In some cases a delegatecall proxy can be gas cheaper, but more expensive on the node side (with deduplication). As the [GasToken](https://gastoken.io/) project shows there's an urgent need for separate storage fees.\r\nNot sure how to encourage code reuse while refunds exist.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371705557/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371713682",
    "html_url": "https://github.com/ethereum/EIPs/issues/911#issuecomment-371713682",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
    "id": 371713682,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTcxMzY4Mg==",
    "user": {
      "login": "ivica7",
      "id": 17837189,
      "node_id": "MDQ6VXNlcjE3ODM3MTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/17837189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivica7",
      "html_url": "https://github.com/ivica7",
      "followers_url": "https://api.github.com/users/ivica7/followers",
      "following_url": "https://api.github.com/users/ivica7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivica7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivica7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivica7/subscriptions",
      "organizations_url": "https://api.github.com/users/ivica7/orgs",
      "repos_url": "https://api.github.com/users/ivica7/repos",
      "events_url": "https://api.github.com/users/ivica7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivica7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T04:57:47Z",
    "updated_at": "2018-03-09T04:57:47Z",
    "author_association": "NONE",
    "body": "@flygoing about the refund: yes you're right, removing the account from the state trie is of significance too. \r\n\r\n> SELFDESTRUCT refund becomes pointless to an extent since the codeHash->code in the db is largest part of a contract\r\n\r\nI don't agree on this. It is a large part in terms of bytes (max ~23Kb), but it's a neglectable part in terms of the data structure complexity (a single key/value entry in the database).\r\n\r\nAbout the overhead calculation for the factory: yes, you're right. My fault! I counted first the costs for the instantiation of the factory, but this is neglectable, since it's only instantiated once per unique bytecode.\r\n\r\nOverhead for deploying the factories: 350000 gas\r\nOverhead per contract instance -> 15000 gas + (3 delegatecalls in average x 1000 gas) = 18 000 gas\r\n\r\nWasted Gas with the clone-factory: 350000 gas * 10 552 (repeating bytecodes) + 5 158 545 contract instances x 18 000 overhead for the clone-factory => 96 547 010 000 gas wasted. **~80% less than without this pattern**\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371713682/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371770858",
    "html_url": "https://github.com/ethereum/EIPs/issues/911#issuecomment-371770858",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
    "id": 371770858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTc3MDg1OA==",
    "user": {
      "login": "nateawelch",
      "id": 706153,
      "node_id": "MDQ6VXNlcjcwNjE1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/706153?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nateawelch",
      "html_url": "https://github.com/nateawelch",
      "followers_url": "https://api.github.com/users/nateawelch/followers",
      "following_url": "https://api.github.com/users/nateawelch/following{/other_user}",
      "gists_url": "https://api.github.com/users/nateawelch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nateawelch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nateawelch/subscriptions",
      "organizations_url": "https://api.github.com/users/nateawelch/orgs",
      "repos_url": "https://api.github.com/users/nateawelch/repos",
      "events_url": "https://api.github.com/users/nateawelch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nateawelch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T10:12:01Z",
    "updated_at": "2018-03-09T10:12:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ivica7 There is no data complexity if a contract has no storage, in which case you still get the SELFDESTRUCT refund. If the SELFDESTRUCT was mainly due to the deletion of storage, then the refund would be proportional to how much storage is being deleted.\r\n\r\nAgain, at the end of the day, you're not making anything cheaper for the node, so you're just shifting the cost of transactions from contract creation and distributing it to everything else. I'm of the opinion that it's better to keep the costs on contract creation and not on transactions themselves.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371770858/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371785578",
    "html_url": "https://github.com/ethereum/EIPs/issues/911#issuecomment-371785578",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
    "id": 371785578,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTc4NTU3OA==",
    "user": {
      "login": "ivica7",
      "id": 17837189,
      "node_id": "MDQ6VXNlcjE3ODM3MTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/17837189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivica7",
      "html_url": "https://github.com/ivica7",
      "followers_url": "https://api.github.com/users/ivica7/followers",
      "following_url": "https://api.github.com/users/ivica7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivica7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivica7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivica7/subscriptions",
      "organizations_url": "https://api.github.com/users/ivica7/orgs",
      "repos_url": "https://api.github.com/users/ivica7/repos",
      "events_url": "https://api.github.com/users/ivica7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivica7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T11:17:35Z",
    "updated_at": "2018-03-09T11:20:38Z",
    "author_association": "NONE",
    "body": "@flygoing there is no difference to the current situation! Right now, as-is, on SELFDESTRUCT, a node will only delete the entry for codeHash->bytecode if there are no other contract instances having the same codeHash. For EIP-911 there is no need for another behavior. There is also no computational overhead for the node, because if he's copying the codeHash from a living contract, he will know that there is already a bytecodeHash->bytecode entry in his DB, otherwise the source contract wouldn't work. There is no need to look it up, no need to make an insert for it, and no need to charge the user the gas for storing this code. \r\n\r\nThat's the whole point of this EIP: the user should not have to pay gas for deploying the code, which already exists in the DB, because the node has no extra work in this case except of setting the correct codeHash in the account, which is covered by the CREATE fee.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/371785578/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/390238361",
    "html_url": "https://github.com/ethereum/EIPs/issues/911#issuecomment-390238361",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
    "id": 390238361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDIzODM2MQ==",
    "user": {
      "login": "adamskrodzki",
      "id": 10146412,
      "node_id": "MDQ6VXNlcjEwMTQ2NDEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/10146412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamskrodzki",
      "html_url": "https://github.com/adamskrodzki",
      "followers_url": "https://api.github.com/users/adamskrodzki/followers",
      "following_url": "https://api.github.com/users/adamskrodzki/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamskrodzki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamskrodzki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamskrodzki/subscriptions",
      "organizations_url": "https://api.github.com/users/adamskrodzki/orgs",
      "repos_url": "https://api.github.com/users/adamskrodzki/repos",
      "events_url": "https://api.github.com/users/adamskrodzki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamskrodzki/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-18T15:11:30Z",
    "updated_at": "2018-05-18T15:11:30Z",
    "author_association": "NONE",
    "body": "Any updates on that issue?\r\nI see it is still open. Does it mean it is still under consideration? \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/390238361/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/390457982",
    "html_url": "https://github.com/ethereum/EIPs/issues/911#issuecomment-390457982",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
    "id": 390457982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDQ1Nzk4Mg==",
    "user": {
      "login": "ivica7",
      "id": 17837189,
      "node_id": "MDQ6VXNlcjE3ODM3MTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/17837189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivica7",
      "html_url": "https://github.com/ivica7",
      "followers_url": "https://api.github.com/users/ivica7/followers",
      "following_url": "https://api.github.com/users/ivica7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivica7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivica7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivica7/subscriptions",
      "organizations_url": "https://api.github.com/users/ivica7/orgs",
      "repos_url": "https://api.github.com/users/ivica7/repos",
      "events_url": "https://api.github.com/users/ivica7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivica7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-20T04:59:28Z",
    "updated_at": "2018-05-20T04:59:28Z",
    "author_association": "NONE",
    "body": "@adamskrodzki I didn't close it yet, because I still believe it's a good idea, however, AFAIK there are no active plans to consider adding this feature soon.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/390457982/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/747660209",
    "html_url": "https://github.com/ethereum/EIPs/issues/911#issuecomment-747660209",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
    "id": 747660209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NzY2MDIwOQ==",
    "user": {
      "login": "luziusmeisser",
      "id": 3128389,
      "node_id": "MDQ6VXNlcjMxMjgzODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3128389?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luziusmeisser",
      "html_url": "https://github.com/luziusmeisser",
      "followers_url": "https://api.github.com/users/luziusmeisser/followers",
      "following_url": "https://api.github.com/users/luziusmeisser/following{/other_user}",
      "gists_url": "https://api.github.com/users/luziusmeisser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luziusmeisser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luziusmeisser/subscriptions",
      "organizations_url": "https://api.github.com/users/luziusmeisser/orgs",
      "repos_url": "https://api.github.com/users/luziusmeisser/repos",
      "events_url": "https://api.github.com/users/luziusmeisser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luziusmeisser/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-17T19:45:53Z",
    "updated_at": "2020-12-17T19:48:57Z",
    "author_association": "NONE",
    "body": "I would love to see this implemented. The proposed solution is vastly superior over the widespread “proxy” pattern from a software-engineering perspective:\r\n\r\n1. For programmers coming from object-oriented languages, it is very surprising to have to bear the cost of bytecode loading every time an object is instantiated. Once a class is loaded, using the “new” keyword is expected to have costs in the same range as other function calls.\r\n2. Proxy contracts add a layer of indirection,  thereby obfuscating the true functionality of a contract.\r\n3. Proxy contracts encourage upgradability. Instead, immutability should be encouraged if we really want Ethereum to be a “trust machine”, as the Economist calls it. Immutable contracts can be relied upon. Updatable contracts not so much.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/747660209/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/925939813",
    "html_url": "https://github.com/ethereum/EIPs/issues/911#issuecomment-925939813",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
    "id": 925939813,
    "node_id": "IC_kwDOAq426M43MLhl",
    "user": {
      "login": "luziusmeisser",
      "id": 3128389,
      "node_id": "MDQ6VXNlcjMxMjgzODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3128389?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luziusmeisser",
      "html_url": "https://github.com/luziusmeisser",
      "followers_url": "https://api.github.com/users/luziusmeisser/followers",
      "following_url": "https://api.github.com/users/luziusmeisser/following{/other_user}",
      "gists_url": "https://api.github.com/users/luziusmeisser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luziusmeisser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luziusmeisser/subscriptions",
      "organizations_url": "https://api.github.com/users/luziusmeisser/orgs",
      "repos_url": "https://api.github.com/users/luziusmeisser/repos",
      "events_url": "https://api.github.com/users/luziusmeisser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luziusmeisser/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-23T15:50:58Z",
    "updated_at": "2021-09-23T15:50:58Z",
    "author_association": "NONE",
    "body": "Potentially related (this is about changing the bytecode storage layout on chain, but if we do a hard-fork for that, we could also think about deduplication):\r\nhttps://ethereum-magicians.org/t/eip-2926-chunk-based-code-merkleization/4555/17",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/925939813/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1075402858",
    "html_url": "https://github.com/ethereum/EIPs/issues/911#issuecomment-1075402858",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
    "id": 1075402858,
    "node_id": "IC_kwDOAq426M5AGVhq",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-03-22T17:07:35Z",
    "updated_at": "2022-03-22T17:07:35Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1075402858/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1089127897",
    "html_url": "https://github.com/ethereum/EIPs/issues/911#issuecomment-1089127897",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/911",
    "id": 1089127897,
    "node_id": "IC_kwDOAq426M5A6sXZ",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-04-05T18:02:57Z",
    "updated_at": "2022-04-05T18:02:57Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/1089127897/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
