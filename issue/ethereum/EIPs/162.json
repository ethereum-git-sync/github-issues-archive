{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/162/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/162/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/162/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/162",
  "id": 185080365,
  "node_id": "MDU6SXNzdWUxODUwODAzNjU=",
  "number": 162,
  "title": "Initial ENS Registrar Specification",
  "user": {
    "login": "maurelian",
    "id": 23033765,
    "node_id": "MDQ6VXNlcjIzMDMzNzY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/maurelian",
    "html_url": "https://github.com/maurelian",
    "followers_url": "https://api.github.com/users/maurelian/followers",
    "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
    "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
    "organizations_url": "https://api.github.com/users/maurelian/orgs",
    "repos_url": "https://api.github.com/users/maurelian/repos",
    "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
    "received_events_url": "https://api.github.com/users/maurelian/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 36,
  "created_at": "2016-10-25T10:41:02Z",
  "updated_at": "2022-01-07T18:06:44Z",
  "closed_at": "2022-01-07T18:06:44Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**Some of the parameters and mechanisms in this document are outdated with respect to the version deployed on the main net. The following version was last updated 2017-03-13, and mostly describe the first version of the regirstrar deployed to the main net on 2017-03-14. It is kept here for posterity. An updated version can be seen [here](https://github.com/maurelian/EIPs/blob/e784c0f050f574327eeea28e918c9426c1b3c5d2/EIPS/eip-ens-initial-registrar.md). Please also refer to [ReadTheDocs](http://docs.ens.domains/en/latest/userguide.html?highlight=auction#registering-a-name-with-the-auction-registrar) or natspec comments in the [deployed code](https://github.com/ethereum/ens/blob/mainnet/contracts/HashRegistrarSimplified.sol).**\r\n\r\n```\r\nEIP: Draft \r\nTitle: Initial ENS Hash Registrar\r\nAuthor: J. Maurelian and Nick Johnson\r\nStatus: Draft\r\nType: Informational\r\nCreated: 2016-10-25\r\n```\r\n## Contents\r\n- Abstract\r\n- Motivations\r\n- Specification\r\n  - Initial restrictions\r\n  - Name format for hash registration\r\n  - Auctioning names\r\n  - Deeds\r\n  - Deployment and Upgrade process\r\n  - Registrar Interface\r\n- Rationale\r\n  - Not committing to a permanent registrar at the outset\r\n  - Valid names >= 7 characters\r\n  - Restricting TLD to `.eth`\r\n  - Holding ether as collateral\r\n- Prior work\r\n\r\n<!-- /MarkdownTOC -->\r\n## Abstract\r\n\r\nThis ERC describes the implementation of a registrar contract to govern the allocation of names in the Ethereum Name Service (ENS). For background, refer to [EIP 137](https://github.com/ethereum/EIPs/issues/137). \r\n\r\n> Registrars are responsible for allocating domain names to users of the system, and are the only entities capable of updating the ENS; the owner of a node in the ENS registry is its registrar. Registrars may be contracts or externally owned accounts, though it is expected that the root and top-level registrars, at a minimum, will be implemented as contracts. \r\n> \r\n> \\- EIP 137\r\n\r\nA well designed and governed registrar is essential to the success of the ENS described in EIP 137, but is described separately in this document as it is external to the core ENS protocol. \r\n\r\nIn order to maximize utility and adoption of a new namespace, the registrar should mitigate speculation and \"name squatting\", however the best approach for mitigation is unclear. Thus an \"initial\" registrar is proposed, which implements a simple approach to name allocation. During the initial period, the available namespace will be significantly restricted to the `.eth` top level domain, and subdomain shorter than 7 characters in length disallowed. This specification largely describes @alexvandesande's [hash registrar implementation](https://github.com/Arachnid/ens/blob/master/HashRegistrarSimplified.sol) in order to facilitate discussion. His [design mockups](https://projects.invisionapp.com/share/FE93G2K3Y#/screens/200024092) are also very helpful for understanding the flow\r\n\r\nThis Initial Registrar contract will be replaced with a permanent registrar contract. The Permanent Registrar will increase the available namespace, and incorporate lessons learned from the performance of the Initial Registrar. This upgrade is expected to take place within approximately 2 years of initial deployment.\r\n## Motivations\r\n\r\nThe following factors should be considered in order to optimize for adoption of the ENS, and good governance of the Initial Registrar's namespace.\r\n\r\n**Upgradability:** The Initial Registrar should be safely upgradeable, so that knowledge gained during its deployment can be used to replace it with an improved and permanent registrar. \r\n\r\n**Effective allocation:** Newly released namespaces often create a land grab situation, resulting in many potentially valuable names being purchased but unused, with the hope of re-selling at a profit. This reduces the availability of the most useful names, in turn decreasing the utility of the name service to end users. \r\n\r\nAchieving an effective allocation may or may not require human intervention for dispute resolution and other forms of curation. The Initial Registrar should not aim to create to most effective possible allocation, but instead limit the cost of misallocation in the long term.\r\n\r\n**Security:** The registrar will hold a balance of ether without an explicit limit. It must be designed securely.\r\n\r\n**Simplicity:** The ENS specification itself emphasizes a separation of concerns, allowing the most essential element, the registry to be as simple as possible. The interim registrar in turn should be as simple as possible while still meeting its other design goals.\r\n\r\n**Adoption:** Successful standards become more successful due to network effects. The registrar should consider what strategies will encourage the adoption of the ENS in general, and the namespace it controls in particular.\r\n## Specification\r\n### Initial restrictions\r\n\r\nThe Initial Registrar is expected to be in service for approximately two years, prior to upgrading. This should be sufficient time to learn, observe, and design an updated system.\r\n\r\nDuring the initial two year period, the available name space will be restricted to the `.eth` TLD.\r\n\r\nThis restriction is not implemented by the registrar, but rather by the owner of the ENS root node who should not assign any nodes other than `.eth` to the Initial Registrar. The ENS's root node should be controlled by multiple parties using a multisig contract.\r\n\r\nThe Initial Registrar will also prohibit registration of names shorter than the `minNameLength` parameter. The value of `minNameLength` will be 7 initially. This value will be reducible by a call from owner of the ENS's root node. \r\n### Name format for hash registration\r\n\r\nNames submitted to the initial registrar must be hashed using Ethereum's sha3 function. Note that the hashes submitted to the registrar are the hash of the subdomain label being registered, not the namehash as defined in EIP 137.\r\n\r\nFor example, in order to register `abcdefg.eth`, one should submit `sha3('abcdefg')`, not `sha3('abcdefg', sha3('eth', 0))`. \r\n### Auctioning names\r\n\r\nThe registrar will allocate the available names through a Vickrey auction:\r\n\r\n> A Vickrey auction is a type of sealed-bid auction. Bidders submit written bids without knowing the bid of the other people in the auction. The highest bidder wins but the price paid is the second-highest bid. This type of auction... gives bidders an incentive to bid their true value.\r\n> \r\n> \\- [Vickrey Auction, Wikipedia](https://en.wikipedia.org/wiki/Vickrey_auction)\r\n\r\nThe timeline of the auction will be implemented as follows:\r\n1. The hash of the desired name is submitted to the Initial Registrar, and bidding is opened on the hash.\r\n2. The auction will last 5 days, except for auctions started during the first 3 weeks after deployment of the Initial Registrar, which will last until the end of the 4th week. \r\n3. Bidders submit a payment of ether, along with sealed bids as a hash of `sha3(bytes32 hash, address owner, uint value, bytes32 salt)`. The transaction can obfuscate the true bid value by sending a greater amount of ether. \r\n4. All bids must be received before the start of the final 48 hours of the auction, which is the reveal period. During this time, bidders must submit the true parameters of their sealed bid. As bids are revealed, ether payments are returned according to the schedule of \"refund ratios\" outlined in the table below.\r\n5. After the 48 hour reveal period has finished, the Initial Registrar's `finalizeAuction` function can be called, which then calls the ENS's `setSubnodeOwner` function, recording the winning bidder's address as the owner of the hash of the name.\r\n\r\n### Deeds\r\n\r\nThe Initial Registrar contract does not hold a balance itself. All ether sent to the Registrar will be held in separate deed contracts. Deeds are initially associated with a bidder and their sealed bid. After an auction is completed and a hash is registered, the deed for the winning bid is held in exchange for ownership of the hash. \r\n\r\nAfter 1 year of registration, the owner of a hash may choose to relinquish ownership and have the value of the deed returned to them. A deed for an owned hash may also be transferred to another account by its owner. \r\n\r\nDeeds for non-winning bid can be closed by various methods, at which time any ether held will either be returned to the bidder, burnt, or sent to someone else as a reward for actions which help the registrar.\r\n\r\nThe following table outlines what portion of the balance held in a deed contract will be returned upon closure, and to whom. The remaining balance will be burnt.\r\n\r\n| Reason for Deed closure | Refund Recipient | Refund Percentage |\r\n| --- | --- | --- |\r\n| A valid non-winning bid is unsealed. | Bidder | 99.9% |\r\n| An invalid bid is unsealed. | Bidder | 1% |\r\n| A sealed bid is cancelled. <sup>1</sup> | Canceler | 0.5% |\r\n| An registered hash is reported as invalid. <sup>2</sup> | Reporter | 10% |\r\n##### Notes:\r\n1. Bids which remain sealed for at least 12 weeks may be cancelled by anyone to collect a small reward.\r\n2. Since names are hashed before auctioning and registration, the Initial Registrar is unable to enforce character length restrictions independently. A reward is therefore provided for reporting invalid names. \r\n### Deployment and Upgrade process\r\n\r\nThe Initial Registrar requires the ENS's address as a contructor, and should be deployed after the ENS. The multisig account owning the root node in the ENS should then set the Initial Registrar's address as owner of the `eth` node.\r\n\r\nThe Initial Registrar is expected to be replaced by a Permanent Registrar approximately 2 years after deployment. The following process should be used for the upgrade:\r\n1. The Permanent Registrar contract will be deployed.\r\n2. The multisig account owning the root node in the ENS will assign ownership of the `.eth` node to the Permanent Registrar.\r\n3. Owners of hashes in the Initial Registrar will be responsible for registering their deeds to the Permanent Registrar. A couple options are considered here: \r\n   1. Require owners to transfer their ownership prior to a cutoff date in order to maintain ownership and/or continue name resolution services.\r\n   2. Have the Permanent Registrar query the Initial Registrar for ownership if it is lacking an entry. \r\n\r\n### Planned deactivation\r\n\r\nIn order to limit dependence on the Initial Registrar, new auctions will stop after 4 years, and all ether held in deeds after 8 years will become unreachable. \r\n\r\n### Registrar Interface\r\n\r\n`function startAuction(bytes32 _hash);`\r\n- Starts an auction for an available hash. If the hash is already allocated, or there is an ongoing auction,  `startAuction` will throw. \r\n\r\n`function startAuctions(bytes32[] _hashes);`\r\n- Starts multiple auctions on an array of hashes. This enables someone to open up an auction for a number of dummy hashes when they are only really interested in bidding for one. This will increase the cost for an attacker to simply bid blindly on all new auctions. Dummy auctions that are open but not bid on are closed after a week. \r\n\r\n`function shaBid(bytes32 hash, address owner, uint value, bytes32 salt) constant returns (bytes32 sealedBid);`\r\n- Takes the parameters of a bid, and returns the sealedBid hash value required to participate in the bidding for an auction. This obfuscates the parameters in order to mimic the mechanics of placing a bid in an envelope. \r\n\r\n`function newBid(bytes32 sealedBid);`\r\n- Bids are sent by sending a message to the main contract with a sealedBid hash and an amount of ether. The hash contains information about the bid, including the bidded name hash, the bid value, and a random salt. Bids are not tied to any one auction until they are revealed. The value of the bid itself can be masqueraded by sending more than the value of your actual bid. This is followed by a 48h reveal period. Bids revealed after this period will be burned and the ether unrecoverable. Since this is an auction, it is expected that most public hashes, like known domains and common dictionary  words, will have multiple bidders pushing the price up. \r\n\r\n`function unsealBid(bytes32 _hash, address _owner, uint _value, bytes32 _salt);`\r\n- Once the bidding period is completed, there is a reveal period during with the properties of a bid are submitted to reveal them. The registrar hashes these properties using the `shaBid()` function above to verify that they match a pre-existing sealed bid. If the unsealedBid is the new best bid, the old best bid is returned to its bidder. \r\n\r\n`function cancelBid(bytes32 seal);`\r\n- Cancels an unrevealed bid, forfeiting <!-- X% of--> the funds.\r\n\r\n`function finalizeAuction(bytes32 _hash);`\r\n\r\nAfter the registration date has passed, this function can be called to finalize the auction, which then calls the ENS function `setSubnodeOwner()`  updating the ENS record to set the winning bidder as owner of the node. \r\n\r\n`function transfer(bytes32 _hash, address newOwner);`\r\n- Update the owner of the ENS node corresponding to the submitted hash to a new owner. This function must be callable only by the current owner. \r\n\r\n`function releaseDeed(bytes32 _hash);`\r\n- After some time, the owner can release the property and get their ether back. \r\n\r\n`function invalidateName(string unhashedName);`\r\n- Since registration is done on the hash of a name, the registrar itself cannot validate names. This function can be used to report a name which is 6 characters long or less. If it has been registered, the submitter will earn 10% of the deed value. We are purposefully handicapping the simplified registrar as a way to force it into being restructured in a few years.\r\n\r\n`function transferRegistrars(bytes32 _hash) onlyOwner(_hash);`\r\n- Used during the upgrade process to a permanent registrar. If this registrar is no longer the owner of the its root node in the ENS, this function will transfers the deed to the current owner, which should be a new registrar. This function throws if this registrar still owns its root node. \r\n## Rationale\r\n### Starting with a temporary registrar\r\n\r\nAnticipating and designing for all the potential issues of name allocation names is unlikely to succeed. This approach chooses not to be concerned with getting it perfect, but allows us to observe and learn with training wheels on, and implement improvements before expanding the available namespace to shorter names or another TLD.\r\n### Valid names >= 7 characters\r\n\r\nPreserving the shortest, and often most valuable, domain names for the upgraded registrar provides the opportunity to implement processes for dispute resolution (assuming they are found to be necessary).\r\n### Restricting TLD to `.eth`\r\n\r\nChoosing a single TLD helps to maximize network effects by focusing on one namespace.\r\n\r\nA three letter TLD is a pattern made familiar by it's common usage in internet domain names. This familiarity significantly increases the potential of the ENS to be integrated into pre-existing DNS systems, and reserved as a [special-use domain name](http://www.iana.org/assignments/special-use-domain-names/special-use-domain-names.xhtml#special-use-domain).  A recent precedent for this is the [reservation of the `.onion` domain](https://tools.ietf.org/html/rfc7686).\r\n### Holding ether as collateral\r\n\r\nThis approach is simpler than the familiar model of requiring owners to make recurring payments to retain ownership of a domain name. It also makes the initial registrar a revenue neutral service, and creates a new business model on Ethereum, by enabling owners to rent names as a service. \r\n## Prior work\r\n\r\nThis document borrows heavily from several sources:\r\n- [EIP 137](https://github.com/ethereum/EIPs/issues/137) outlines the initial implementation of the Registry Contract (ENS.sol) and associated Resolver contracts. \r\n- [ERC 26](https://github.com/ethereum/EIPs/issues/26) was the first ERC to propose a name service at the contract layer\r\n- @alexvandesande's current implementation of the [HashRegistrar](https://github.com/Arachnid/ens/blob/master/HashRegistrarSimplified.sol)\r\n### Edits:\r\n- 2016-10-26 Added link Alex's design in abstract\r\n- 2016-11-01 change 'Planned deactivation' to h3'\r\n- 2017-03-13 Update timelines for bidding and reveal periods",
  "closed_by": {
    "login": "maurelian",
    "id": 23033765,
    "node_id": "MDQ6VXNlcjIzMDMzNzY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/maurelian",
    "html_url": "https://github.com/maurelian",
    "followers_url": "https://api.github.com/users/maurelian/followers",
    "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
    "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
    "organizations_url": "https://api.github.com/users/maurelian/orgs",
    "repos_url": "https://api.github.com/users/maurelian/repos",
    "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
    "received_events_url": "https://api.github.com/users/maurelian/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/162/reactions",
    "total_count": 5,
    "+1": 4,
    "-1": 0,
    "laugh": 0,
    "hooray": 1,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/162/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/256094923",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-256094923",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 256094923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjA5NDkyMw==",
    "user": {
      "login": "alexvandesande",
      "id": 112898,
      "node_id": "MDQ6VXNlcjExMjg5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/112898?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexvandesande",
      "html_url": "https://github.com/alexvandesande",
      "followers_url": "https://api.github.com/users/alexvandesande/followers",
      "following_url": "https://api.github.com/users/alexvandesande/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexvandesande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexvandesande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexvandesande/subscriptions",
      "organizations_url": "https://api.github.com/users/alexvandesande/orgs",
      "repos_url": "https://api.github.com/users/alexvandesande/repos",
      "events_url": "https://api.github.com/users/alexvandesande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexvandesande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T16:57:23Z",
    "updated_at": "2016-10-25T18:21:55Z",
    "author_association": "NONE",
    "body": "Thanks for writing this up @maurelian!\n\nAnother important thing that I would like to stress out:\n\n**Auctioning should not be considered as buying a perpetual right to the domain**, and a big part of the reason we want it to be temporary is so that the community can come up with a **fair process for the renewal for the name**.  The main rationale behind this decision is that names are a limited resource with unknown future usefulnnes and we want to reduce, as much as possible, the incentives for a one time land grab. There are some interesting options being considered for exactly how to do that, but the main idea is that once you own a name there should be a rational incentive for users to release them back to the open market, specially if they are not doing any useful work with it. I won't go into details as it would derail the purpose of this particular EIP.\n\nAlso, notice that **there's no party benefiting in any way from this auctions**. The purpose of auctioning  isn't a scheme to raise funds to anyone, but to create opportunity costs of holding names.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/256094923/reactions",
      "total_count": 3,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 1,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/256096570",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-256096570",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 256096570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjA5NjU3MA==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T17:03:22Z",
    "updated_at": "2016-10-25T17:03:22Z",
    "author_association": "MEMBER",
    "body": "Good points. We should also emphasise that it's expected that any permanent registrar would provide a migration path for the vast majority of domain holders, but that there's no ironclad guarantee that every single domain bought on the temporary registrar will be able to migrate - one possible example being blatant phishing domains. There's also no guarantees that the pricing scheme of the eventual registrar will relate to the interim registrar's pricing.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/256096570/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/256207834",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-256207834",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 256207834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjIwNzgzNA==",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T23:23:47Z",
    "updated_at": "2016-10-25T23:23:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "I know it's not a short read, so questions are very welcome in the gitter chat room: https://gitter.im/ethereum/go-ethereum/name-registry\n\nI also just put up a simple Truffle project to make it easy to deploy and interact with the registrar locally: https://github.com/maurelian/ens-registry-truffle\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/256207834/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/256276870",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-256276870",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 256276870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjI3Njg3MA==",
    "user": {
      "login": "rabbit",
      "id": 241264,
      "node_id": "MDQ6VXNlcjI0MTI2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rabbit",
      "html_url": "https://github.com/rabbit",
      "followers_url": "https://api.github.com/users/rabbit/followers",
      "following_url": "https://api.github.com/users/rabbit/following{/other_user}",
      "gists_url": "https://api.github.com/users/rabbit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rabbit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rabbit/subscriptions",
      "organizations_url": "https://api.github.com/users/rabbit/orgs",
      "repos_url": "https://api.github.com/users/rabbit/repos",
      "events_url": "https://api.github.com/users/rabbit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rabbit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-26T08:01:53Z",
    "updated_at": "2016-10-26T08:01:53Z",
    "author_association": "NONE",
    "body": "Excellent work. Are there any concerns around invalid name reporters? I'm not entirely clear on how that works.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/256276870/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/256306047",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-256306047",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 256306047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjMwNjA0Nw==",
    "user": {
      "login": "simenfd",
      "id": 11774591,
      "node_id": "MDQ6VXNlcjExNzc0NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/11774591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simenfd",
      "html_url": "https://github.com/simenfd",
      "followers_url": "https://api.github.com/users/simenfd/followers",
      "following_url": "https://api.github.com/users/simenfd/following{/other_user}",
      "gists_url": "https://api.github.com/users/simenfd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simenfd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simenfd/subscriptions",
      "organizations_url": "https://api.github.com/users/simenfd/orgs",
      "repos_url": "https://api.github.com/users/simenfd/repos",
      "events_url": "https://api.github.com/users/simenfd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simenfd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-26T10:14:45Z",
    "updated_at": "2016-10-26T10:14:45Z",
    "author_association": "NONE",
    "body": "Are full unicode character set allowed for this?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/256306047/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/256306327",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-256306327",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 256306327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjMwNjMyNw==",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-26T10:16:07Z",
    "updated_at": "2016-10-26T10:16:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@rabbit Thanks for the question. By concern, do you mean that people might submit a false report? \n\nThe `invalidateName()` function code is [here](https://github.com/Arachnid/ens/blob/master/HashRegistrarSimplified.sol#L397). To report a name invalid, it is submitted unhashed so that its length can be verified first. Then the name is hashed, and if it is registered it will be invalidated. Does that answer your question?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/256306327/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/256306803",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-256306803",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 256306803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjMwNjgwMw==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-26T10:18:28Z",
    "updated_at": "2016-10-26T10:18:33Z",
    "author_association": "MEMBER",
    "body": "@simenfd Yes, though if the name isn't a valid output of [Nameprep](https://en.wikipedia.org/wiki/Nameprep), chances are nothing will resolve it correctly. It's up to people registering domains to check that's the case; if you want to register <photo of my cat>.eth, you can do that.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/256306803/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/256366335",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-256366335",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 256366335,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjM2NjMzNQ==",
    "user": {
      "login": "Smithgift",
      "id": 10504499,
      "node_id": "MDQ6VXNlcjEwNTA0NDk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/10504499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Smithgift",
      "html_url": "https://github.com/Smithgift",
      "followers_url": "https://api.github.com/users/Smithgift/followers",
      "following_url": "https://api.github.com/users/Smithgift/following{/other_user}",
      "gists_url": "https://api.github.com/users/Smithgift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Smithgift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Smithgift/subscriptions",
      "organizations_url": "https://api.github.com/users/Smithgift/orgs",
      "repos_url": "https://api.github.com/users/Smithgift/repos",
      "events_url": "https://api.github.com/users/Smithgift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Smithgift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-26T14:34:24Z",
    "updated_at": "2016-10-26T14:34:24Z",
    "author_association": "NONE",
    "body": "In, re: unicode, wouldn't international characters make the seven-character minimum irrelevant? I can't find an example system for name-prep, but it appears that it will produce a much longer ASCII form of what may be only two Chinese characters. (Or even one?)\n\nOn that matter, I'm not sure what limiting system _could_ be used such that it will make sense to users seeking to register international names.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/256366335/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/256378414",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-256378414",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 256378414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjM3ODQxNA==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-26T15:13:28Z",
    "updated_at": "2016-10-26T15:13:28Z",
    "author_association": "MEMBER",
    "body": "> In, re: unicode, wouldn't international characters make the seven-character minimum irrelevant? I can't find an example system for name-prep, but it appears that it will produce a much longer ASCII form of what may be only two Chinese characters. (Or even one?)\n\nIt sounds like you're thinking of punycode. The name service doesn't use punycode; international domain names are represented directly as unicode, so a 2 character Chinese name will only be 2 characters long.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/256378414/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/258643390",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-258643390",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 258643390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODY0MzM5MA==",
    "user": {
      "login": "JohnDorien1",
      "id": 4385935,
      "node_id": "MDQ6VXNlcjQzODU5MzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4385935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JohnDorien1",
      "html_url": "https://github.com/JohnDorien1",
      "followers_url": "https://api.github.com/users/JohnDorien1/followers",
      "following_url": "https://api.github.com/users/JohnDorien1/following{/other_user}",
      "gists_url": "https://api.github.com/users/JohnDorien1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JohnDorien1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JohnDorien1/subscriptions",
      "organizations_url": "https://api.github.com/users/JohnDorien1/orgs",
      "repos_url": "https://api.github.com/users/JohnDorien1/repos",
      "events_url": "https://api.github.com/users/JohnDorien1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JohnDorien1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-05T21:53:27Z",
    "updated_at": "2016-11-05T21:54:21Z",
    "author_association": "NONE",
    "body": "This reads like a remake of #26 , just ignoring all comments made on it. Very disappointing!\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/258643390/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/262248389",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-262248389",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 262248389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjI0ODM4OQ==",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-22T14:04:34Z",
    "updated_at": "2016-11-22T14:04:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@JohnDorien1 I've only just seen your comment. I think that on the contrary, this spec is informed by the lack of agreement on #26, thus the iterative approach. It leaves room for improvement based on actual observation.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/262248389/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/262970889",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-262970889",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 262970889,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Mjk3MDg4OQ==",
    "user": {
      "login": "clowestab",
      "id": 4473177,
      "node_id": "MDQ6VXNlcjQ0NzMxNzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4473177?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/clowestab",
      "html_url": "https://github.com/clowestab",
      "followers_url": "https://api.github.com/users/clowestab/followers",
      "following_url": "https://api.github.com/users/clowestab/following{/other_user}",
      "gists_url": "https://api.github.com/users/clowestab/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/clowestab/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/clowestab/subscriptions",
      "organizations_url": "https://api.github.com/users/clowestab/orgs",
      "repos_url": "https://api.github.com/users/clowestab/repos",
      "events_url": "https://api.github.com/users/clowestab/events{/privacy}",
      "received_events_url": "https://api.github.com/users/clowestab/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-25T14:48:38Z",
    "updated_at": "2016-11-25T14:48:38Z",
    "author_association": "NONE",
    "body": "I mentioned this on Gitter, but it may also be of interest to anyone reading this.\r\n\r\nMy company builds out web based applications on good domain names. As an economist, and a software engineer I wrote the following as an interest piece.\r\n\r\nIt may provide some useful context re allocation. \r\n\r\n[The economics of domain names](http://economics.co.uk/the-economics-of-domain-names/). ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/262970889/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/271131264",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-271131264",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 271131264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTEzMTI2NA==",
    "user": {
      "login": "0xc1c4da",
      "id": 2714786,
      "node_id": "MDQ6VXNlcjI3MTQ3ODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2714786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc1c4da",
      "html_url": "https://github.com/0xc1c4da",
      "followers_url": "https://api.github.com/users/0xc1c4da/followers",
      "following_url": "https://api.github.com/users/0xc1c4da/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc1c4da/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc1c4da/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc1c4da/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc1c4da/orgs",
      "repos_url": "https://api.github.com/users/0xc1c4da/repos",
      "events_url": "https://api.github.com/users/0xc1c4da/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc1c4da/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-08T05:33:02Z",
    "updated_at": "2017-01-08T05:33:02Z",
    "author_association": "NONE",
    "body": "@rabbit raised a very good point in status-im/status-react#669 about dangerous unicode patterns in domain names, could the spec advise on how to deal with this? \r\n\r\n> situation is [worse than I thought](https://cs.chromium.org/chromium/src/components/url_formatter/url_formatter.cc?rcl=0&l=389) seems to be a series of contextual rules? not great...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/271131264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/271131940",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-271131940",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 271131940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTEzMTk0MA==",
    "user": {
      "login": "rabbit",
      "id": 241264,
      "node_id": "MDQ6VXNlcjI0MTI2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rabbit",
      "html_url": "https://github.com/rabbit",
      "followers_url": "https://api.github.com/users/rabbit/followers",
      "following_url": "https://api.github.com/users/rabbit/following{/other_user}",
      "gists_url": "https://api.github.com/users/rabbit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rabbit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rabbit/subscriptions",
      "organizations_url": "https://api.github.com/users/rabbit/orgs",
      "repos_url": "https://api.github.com/users/rabbit/repos",
      "events_url": "https://api.github.com/users/rabbit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rabbit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-08T05:53:50Z",
    "updated_at": "2017-01-08T06:05:15Z",
    "author_association": "NONE",
    "body": "unfortunately from the ENS side, due to hashing, there wouldn't be a way to avoid that. limitations on all sides, apparently browser behaviors differ too. TIL.\r\n\r\nfor reference: https://en.wikipedia.org/wiki/Nameprep\r\nthere are IDN conversions that would lead to \"xn--google.com\" for example. so following nameprep is the correct way to go. tricky issue.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/271131940/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/271139346",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-271139346",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 271139346,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTEzOTM0Ng==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-08T09:07:43Z",
    "updated_at": "2017-01-08T09:07:43Z",
    "author_association": "MEMBER",
    "body": "RE unicode vs punycode, resolvers should _not_ do unicode encoding (which leads to names like xn--foobar.com, for instance), but rather look up the unicode name directly.\r\n\r\nUse of nameprep is discussed in #137. We don't go into browser prohibitions on names there, but should doubtlessly write up a guide; my suggestion is to suggest resolves adopt the same system as [mozilla](https://wiki.mozilla.org/IDN_Display_Algorithm).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/271139346/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/271583433",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-271583433",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 271583433,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTU4MzQzMw==",
    "user": {
      "login": "alexvandesande",
      "id": 112898,
      "node_id": "MDQ6VXNlcjExMjg5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/112898?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexvandesande",
      "html_url": "https://github.com/alexvandesande",
      "followers_url": "https://api.github.com/users/alexvandesande/followers",
      "following_url": "https://api.github.com/users/alexvandesande/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexvandesande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexvandesande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexvandesande/subscriptions",
      "organizations_url": "https://api.github.com/users/alexvandesande/orgs",
      "repos_url": "https://api.github.com/users/alexvandesande/repos",
      "events_url": "https://api.github.com/users/alexvandesande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexvandesande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-10T14:06:11Z",
    "updated_at": "2017-01-10T14:06:11Z",
    "author_association": "NONE",
    "body": "@rabbit @jarradh  My opinion is that the ENS should be as flexible as possible in registering names *but* which names are accepted and how they are displayed should be left up to each client. So you could register `💩.eth`, but that doesn't mean that Mist will accept emojis as valid domain names. Same for other clients.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/271583433/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/271584613",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-271584613",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 271584613,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTU4NDYxMw==",
    "user": {
      "login": "alexvandesande",
      "id": 112898,
      "node_id": "MDQ6VXNlcjExMjg5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/112898?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexvandesande",
      "html_url": "https://github.com/alexvandesande",
      "followers_url": "https://api.github.com/users/alexvandesande/followers",
      "following_url": "https://api.github.com/users/alexvandesande/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexvandesande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexvandesande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexvandesande/subscriptions",
      "organizations_url": "https://api.github.com/users/alexvandesande/orgs",
      "repos_url": "https://api.github.com/users/alexvandesande/repos",
      "events_url": "https://api.github.com/users/alexvandesande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexvandesande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-10T14:11:10Z",
    "updated_at": "2017-01-10T14:11:10Z",
    "author_association": "NONE",
    "body": "Contextual clues that firefox uses are actually a smart solution: I can see mist only accepting Unicode characters *and* characters from the user's system: i.e., only accept chinese characters if the user is using Mist in chinese, (or has visited that site before). The client can be smarter than the ENS contract",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/271584613/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/271584700",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-271584700",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 271584700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTU4NDcwMA==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-10T14:11:33Z",
    "updated_at": "2017-01-10T14:11:33Z",
    "author_association": "MEMBER",
    "body": "That's more or less the case, but while you can vary about which names you outright reject, everyone has to agree on how names are normalised; otherwise, the same name typed into different user-agents may result in different hashes being looked up.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/271584700/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/271616598",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-271616598",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 271616598,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTYxNjU5OA==",
    "user": {
      "login": "0xc1c4da",
      "id": 2714786,
      "node_id": "MDQ6VXNlcjI3MTQ3ODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2714786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc1c4da",
      "html_url": "https://github.com/0xc1c4da",
      "followers_url": "https://api.github.com/users/0xc1c4da/followers",
      "following_url": "https://api.github.com/users/0xc1c4da/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc1c4da/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc1c4da/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc1c4da/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc1c4da/orgs",
      "repos_url": "https://api.github.com/users/0xc1c4da/repos",
      "events_url": "https://api.github.com/users/0xc1c4da/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc1c4da/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-10T16:05:51Z",
    "updated_at": "2017-01-10T16:05:51Z",
    "author_association": "NONE",
    "body": "I agree, we need to come to an agreement on how to normalise, unicode characters like U+202E (right to left override) seem especially problematic. While other browsers have tackled this problem, they can rely on rendering punycode, where it doesn't seem so fitting in our case. The more I look at this problem the stickier it seems to get.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/271616598/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/271626291",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-271626291",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 271626291,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTYyNjI5MQ==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-10T16:38:11Z",
    "updated_at": "2017-01-10T16:38:11Z",
    "author_association": "MEMBER",
    "body": "No, punycode is an entirely separate step from normalisation; normalisation is accomplished using nameprep. Nameprep is specified in #137 as the canonical way to normalise names on ENS.\r\n\r\nIn addition, user agents should prohibit names containing code points <0x80 other than `[a-z0-9.-]`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/271626291/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/272190520",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-272190520",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 272190520,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjE5MDUyMA==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-12T15:20:33Z",
    "updated_at": "2017-01-12T15:20:33Z",
    "author_association": "MEMBER",
    "body": "[RFC5891 section 4](https://tools.ietf.org/html/rfc5891#section-4) describes the steps a registrar should take to ensure validity of a name. I'm working through it and will update this EIP and 137.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/272190520/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/272198028",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-272198028",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 272198028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjE5ODAyOA==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-12T15:46:57Z",
    "updated_at": "2017-01-12T15:55:03Z",
    "author_association": "MEMBER",
    "body": "Update: The official and most recent standard to follow is [UTS #46](http://unicode.org/reports/tr46/), which specifies normalisation rules and prohibited characters. Implementations should use UTS 46 with `transitional=false` and `useStd3ASCIIRules=true`. For JS, this module provides the necessary functionality: https://www.npmjs.com/package/idna-uts46\r\n\r\nI've updated #137's section on names accordingly.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/272198028/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/285769063",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-285769063",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 285769063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTc2OTA2Mw==",
    "user": {
      "login": "emansipater",
      "id": 4242428,
      "node_id": "MDQ6VXNlcjQyNDI0Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4242428?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emansipater",
      "html_url": "https://github.com/emansipater",
      "followers_url": "https://api.github.com/users/emansipater/followers",
      "following_url": "https://api.github.com/users/emansipater/following{/other_user}",
      "gists_url": "https://api.github.com/users/emansipater/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emansipater/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emansipater/subscriptions",
      "organizations_url": "https://api.github.com/users/emansipater/orgs",
      "repos_url": "https://api.github.com/users/emansipater/repos",
      "events_url": "https://api.github.com/users/emansipater/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emansipater/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-10T19:56:49Z",
    "updated_at": "2017-03-10T19:56:49Z",
    "author_association": "NONE",
    "body": "Realise it's too late for this round, but thoughts for a later round of ENS auctions:  as a compliment to being able to hide the upper bound of a bid through sending more than the bid value, one should be able to hide the lower bound of a bid through revealing multiple submissions to have contained the same \"bid ID\" and owner address, thus co-funding a single bid in blinded parts.  Example:  I want to bid 100 ETH so I make ten submissions with 10 ETH attached to each, but with all having the same blinded ID, owner address, and bid value (of 100 ETH), just different salts.  When all 3 are revealed the attached amounts are counted as co-funding the single 100 ETH bid whose ID, owner address, and value they share.  IDs which are insufficiently funded by the end of an auction, or where amounts and owners do not match across all submissions of the same ID, are invalid.  This would, of course, require adding an ID field to the sealed bid format and significantly reworking the contracts that implement the auction.  Note that we can't just use the owner address as the ID because owner addresses are sometimes public and this would permit scattershot invalidation of any bids made by that owner.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/285769063/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/286051701",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-286051701",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 286051701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjA1MTcwMQ==",
    "user": {
      "login": "LefterisJP",
      "id": 1658405,
      "node_id": "MDQ6VXNlcjE2NTg0MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1658405?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LefterisJP",
      "html_url": "https://github.com/LefterisJP",
      "followers_url": "https://api.github.com/users/LefterisJP/followers",
      "following_url": "https://api.github.com/users/LefterisJP/following{/other_user}",
      "gists_url": "https://api.github.com/users/LefterisJP/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LefterisJP/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LefterisJP/subscriptions",
      "organizations_url": "https://api.github.com/users/LefterisJP/orgs",
      "repos_url": "https://api.github.com/users/LefterisJP/repos",
      "events_url": "https://api.github.com/users/LefterisJP/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LefterisJP/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-13T09:12:30Z",
    "updated_at": "2017-03-13T09:12:30Z",
    "author_association": "MEMBER",
    "body": "@maurelian With the ENS registrar deployment imminent in the mainnet the following may be misleading:\r\n\r\n> The auction will last 7 days, except for auctions started during the first 3 weeks after deployment of the Initial Registrar, which will last until the end of the 4th week.\r\n\r\nI was informed that on mainnet the auction/reveal phases will last 5 days and 48 hours.\r\n\r\nCan you edit the EIP?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/286051701/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/298106933",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-298106933",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 298106933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODEwNjkzMw==",
    "user": {
      "login": "chejazi",
      "id": 2603535,
      "node_id": "MDQ6VXNlcjI2MDM1MzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2603535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chejazi",
      "html_url": "https://github.com/chejazi",
      "followers_url": "https://api.github.com/users/chejazi/followers",
      "following_url": "https://api.github.com/users/chejazi/following{/other_user}",
      "gists_url": "https://api.github.com/users/chejazi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chejazi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chejazi/subscriptions",
      "organizations_url": "https://api.github.com/users/chejazi/orgs",
      "repos_url": "https://api.github.com/users/chejazi/repos",
      "events_url": "https://api.github.com/users/chejazi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chejazi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-28T21:07:14Z",
    "updated_at": "2017-04-28T21:07:14Z",
    "author_association": "NONE",
    "body": "Is there proper handling of case sensitivity? `Ethereum.eth` and `ethereum.eth` will have different hash values, but effectively represent the same domain.\r\n\r\nAlso, performing the SHA3 of just the name doesn't seem sufficient to guard the secrecy. Assuming 7char are the most desired, I only need to generate ~8 Billion strings to know which 7 char [a-z] domains are being bid on. The best approach would be to include a salt when calculating the hash. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/298106933/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/298110985",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-298110985",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 298110985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODExMDk4NQ==",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-28T21:28:46Z",
    "updated_at": "2017-04-28T21:30:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@chejazi the case senitivity issue is addressed in Nick's Jan 12 comments above.\r\n\r\nThere is a salt in the bid hashes: https://github.com/ethereum/ens/blob/master/contracts/HashRegistrarSimplified.sol#L320\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/298110985/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/298111498",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-298111498",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 298111498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODExMTQ5OA==",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-28T21:31:28Z",
    "updated_at": "2017-04-28T21:31:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Realizing this spec needs an update to catch up with Registrar changes. I'd hope to do so early next week. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/298111498/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/298163077",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-298163077",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 298163077,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODE2MzA3Nw==",
    "user": {
      "login": "veox",
      "id": 3036030,
      "node_id": "MDQ6VXNlcjMwMzYwMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3036030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veox",
      "html_url": "https://github.com/veox",
      "followers_url": "https://api.github.com/users/veox/followers",
      "following_url": "https://api.github.com/users/veox/following{/other_user}",
      "gists_url": "https://api.github.com/users/veox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/veox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/veox/subscriptions",
      "organizations_url": "https://api.github.com/users/veox/orgs",
      "repos_url": "https://api.github.com/users/veox/repos",
      "events_url": "https://api.github.com/users/veox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/veox/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-29T11:22:03Z",
    "updated_at": "2017-04-29T11:22:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Minor clarification needed (highlighted), both here and in [EIP137](https://github.com/ethereum/EIPs/issues/137):\r\n\r\n> the owner of a node in the ENS registry is **its** registrar.\r\n\r\nProposed:\r\n\r\n> the owner of a node in the ENS registry is **that node's** registrar.\r\n\r\n-----\r\n\r\nEDIT: Oh, I see the `editor-needs-review` tag now.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/298163077/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/298163321",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-298163321",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 298163321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODE2MzMyMQ==",
    "user": {
      "login": "veox",
      "id": 3036030,
      "node_id": "MDQ6VXNlcjMwMzYwMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3036030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veox",
      "html_url": "https://github.com/veox",
      "followers_url": "https://api.github.com/users/veox/followers",
      "following_url": "https://api.github.com/users/veox/following{/other_user}",
      "gists_url": "https://api.github.com/users/veox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/veox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/veox/subscriptions",
      "organizations_url": "https://api.github.com/users/veox/orgs",
      "repos_url": "https://api.github.com/users/veox/repos",
      "events_url": "https://api.github.com/users/veox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/veox/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-29T11:27:19Z",
    "updated_at": "2017-04-29T11:27:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also, @alexvandesande's [design mockups](https://projects.invisionapp.com/share/FE93G2K3Y#/screens/200024092), hosted on Invision, are inaccessible due to the service being over quota.\r\n\r\nCould they be provided on a different service? Perhaps on IPFS also?..",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/298163321/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/300582699",
    "html_url": "https://github.com/ethereum/EIPs/issues/162#issuecomment-300582699",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/162",
    "id": 300582699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDU4MjY5OQ==",
    "user": {
      "login": "GriffGreen",
      "id": 14945613,
      "node_id": "MDQ6VXNlcjE0OTQ1NjEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/14945613?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GriffGreen",
      "html_url": "https://github.com/GriffGreen",
      "followers_url": "https://api.github.com/users/GriffGreen/followers",
      "following_url": "https://api.github.com/users/GriffGreen/following{/other_user}",
      "gists_url": "https://api.github.com/users/GriffGreen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GriffGreen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GriffGreen/subscriptions",
      "organizations_url": "https://api.github.com/users/GriffGreen/orgs",
      "repos_url": "https://api.github.com/users/GriffGreen/repos",
      "events_url": "https://api.github.com/users/GriffGreen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GriffGreen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-10T19:06:46Z",
    "updated_at": "2017-05-10T19:06:46Z",
    "author_association": "NONE",
    "body": "@Arachnid I was reading this and thought the current burn rate was 0.1% but it seems to be .5%??",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/300582699/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
