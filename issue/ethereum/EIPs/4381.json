{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/4381",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/4381/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/4381/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/4381/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/4381",
  "id": 1030147952,
  "node_id": "I_kwDOAq426M49Zs9w",
  "number": 4381,
  "title": "[EIP-4381] General metadata container contract",
  "user": {
    "login": "3rdstage",
    "id": 2508220,
    "node_id": "MDQ6VXNlcjI1MDgyMjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2508220?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/3rdstage",
    "html_url": "https://github.com/3rdstage",
    "followers_url": "https://api.github.com/users/3rdstage/followers",
    "following_url": "https://api.github.com/users/3rdstage/following{/other_user}",
    "gists_url": "https://api.github.com/users/3rdstage/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/3rdstage/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/3rdstage/subscriptions",
    "organizations_url": "https://api.github.com/users/3rdstage/orgs",
    "repos_url": "https://api.github.com/users/3rdstage/repos",
    "events_url": "https://api.github.com/users/3rdstage/events{/privacy}",
    "received_events_url": "https://api.github.com/users/3rdstage/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2021-10-19T10:43:43Z",
  "updated_at": "2022-07-18T19:19:00Z",
  "closed_at": "2021-12-15T15:02:20Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Motivation\r\n----\r\nAs more data come into on-chain, the need for data describing the data (metadata) is increasing more.\r\nThe existing approaches seem to be too simple or too complex.  Storing just a link to off-chain location is too simple to assure the sufficiency of the metadata or trace the change of metadata.  Using schema language and storing a single entire  metadata in JSON string into a property doesn't seem to be efficient to access metadata selectively.\r\n\r\nOne of the best references for such general meta-data container structure is [HTTP header fields](https://en.wikipedia.org/wiki/List_of_HTTP_header_fields). HTTP header fields can support any type of meta-data because they don't require type definition. HTTP header fields also support multi-value field effectively.\r\n\r\nI want to suggest general meta-data container base contract named `IAttributeRegistry` following the behavior of HTTP header fields operations.\r\n\r\nSpecification\r\n----\r\nThe `IAttributeRegistry` contract is a general meta-data container contract expected to be base contract for more concrete usage.\r\n\r\nA meta-data is modeled to be name(key)-value pair and has no type concept currently. Both `name` and `value` are treated as string. Multiple values can be paired to a single `name`.\r\n\r\nThe interface for `IAttributeRegistry` contract would be like the following.\r\n\r\n~~~~solidity\r\n\r\nstruct Attribute{\r\n    string name;\r\n    string value;\r\n}\r\n\r\ninterface IAttributeRegistry is IERC165{\r\n\r\n    event AttributeAdded(uint indexed id, string indexed name, string value, uint no);\r\n    event AttributeRemoved(uint indexed id, string indexed name, string value);    \r\n    event AttributesRemoved(uint indexed id, string indexed name);\r\n\r\n    function getAttributeNames(uint id) external view returns (string[] memory);\r\n    \r\n    function getAttribute(uint id, string memory name) external view returns (string memory);\r\n\r\n    function getAttributes(uint id, string memory name) external view returns (string[] memory);\r\n\r\n    function getAttributesCount(uint id, string memory name) external view returns (uint);\r\n\r\n    function setAttribute(uint id, string memory name, string memory value) external;\r\n    \r\n    function addAttribute(uint id, string memory name, string memory value) external;\r\n\r\n    function removeAttribute(uint id, string memory name, string memory value) external;\r\n\r\n    function removeAttributes(uint id, string memory name) external;\r\n}\r\n~~~~\r\n\r\nTypically a single `IIAttributeRegistry` contract paired with a single `ERC721` contract.  The `id` in `IAttributeRegistry` can be `tokenId` in `ERC721` contract.\r\n\r\n\r\n\r\n",
  "closed_by": {
    "login": "MicahZoltu",
    "id": 886059,
    "node_id": "MDQ6VXNlcjg4NjA1OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MicahZoltu",
    "html_url": "https://github.com/MicahZoltu",
    "followers_url": "https://api.github.com/users/MicahZoltu/followers",
    "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
    "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
    "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
    "repos_url": "https://api.github.com/users/MicahZoltu/repos",
    "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/4381/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/4381/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/991978593",
    "html_url": "https://github.com/ethereum/EIPs/issues/4381#issuecomment-991978593",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/4381",
    "id": 991978593,
    "node_id": "IC_kwDOAq426M47IGRh",
    "user": {
      "login": "akiszka",
      "id": 30828906,
      "node_id": "MDQ6VXNlcjMwODI4OTA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/30828906?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akiszka",
      "html_url": "https://github.com/akiszka",
      "followers_url": "https://api.github.com/users/akiszka/followers",
      "following_url": "https://api.github.com/users/akiszka/following{/other_user}",
      "gists_url": "https://api.github.com/users/akiszka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akiszka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akiszka/subscriptions",
      "organizations_url": "https://api.github.com/users/akiszka/orgs",
      "repos_url": "https://api.github.com/users/akiszka/repos",
      "events_url": "https://api.github.com/users/akiszka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akiszka/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-12T22:02:59Z",
    "updated_at": "2021-12-12T22:02:59Z",
    "author_association": "NONE",
    "body": "Hello!\r\n\r\nIf you are interested in cooperating in making this an official EIP, please let me know. I would love to help in creating something like this.\r\n\r\nJust a note: if you haven't done that yet, I think it would be a great idea to post on Ethereum Magicians to find out if there is demand for this EIP.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/991978593/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/994877373",
    "html_url": "https://github.com/ethereum/EIPs/issues/4381#issuecomment-994877373",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/4381",
    "id": 994877373,
    "node_id": "IC_kwDOAq426M47TJ-9",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-15T15:02:20Z",
    "updated_at": "2021-12-15T15:02:20Z",
    "author_association": "MEMBER",
    "body": "Please move this to Ethereum Magicians to discuss the idea, or create a pull request to create an EIP if you would prefer that.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/994877373/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
