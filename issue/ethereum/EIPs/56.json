{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/56",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/56/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/56/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/56/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/56",
  "id": 126698497,
  "node_id": "MDU6SXNzdWUxMjY2OTg0OTc=",
  "number": 56,
  "title": "Ethereum VM C interface",
  "user": {
    "login": "chfast",
    "id": 573380,
    "node_id": "MDQ6VXNlcjU3MzM4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/573380?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chfast",
    "html_url": "https://github.com/chfast",
    "followers_url": "https://api.github.com/users/chfast/followers",
    "following_url": "https://api.github.com/users/chfast/following{/other_user}",
    "gists_url": "https://api.github.com/users/chfast/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chfast/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chfast/subscriptions",
    "organizations_url": "https://api.github.com/users/chfast/orgs",
    "repos_url": "https://api.github.com/users/chfast/repos",
    "events_url": "https://api.github.com/users/chfast/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chfast/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 19,
  "created_at": "2016-01-14T16:58:21Z",
  "updated_at": "2018-09-04T19:55:00Z",
  "closed_at": "2018-09-04T19:55:00Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "# Motivation\n\nBased on work done in EVM JIT project https://github.com/ethereum/evmjit I would like to propose C-like interface specification for Ethereum VM ABI that could be used to create high performance VM implementations.\n# Specification\n## Types\n- `uint256be` - unsigned 256-bit big endian integer (32 bytes)\n- `uint256` - unsigned 256-bit host endian integer (32 bytes)\n- `uint64` - unsigned 64-bit host endian integer (8 bytes)\n- `int64` - signed 64-bit host endian integer (8 bytes)\n- `address` - Ethereum address (20 bytes)\n- `byte` - a byte\n- `ptr` - a pointer to byte array\n## Inputs\n\n| Name | Type | Was | Comment |\n| --- | --- | --- | --- |\n| gas | **uint256** | int64 | Execution with more than 2<sup>63</sup> gas is very theoretic. |\n| gas price | uint256 | int64 |  |\n| input_data | ptr |  | Data must be available to VM until execution is finished. |\n| input_data_size | uint64 |  |  |\n| address | address |  |  |\n| caller | address |  |  |\n| origin | address |  |  |\n| transfer_value | uint256 |  |  |\n| apparent_value | uint256 |  | Added in Homestead. |\n| coinbase | address |  |  |\n| difficulty | uint256 |  |  |\n| gas limit | uint256 |  |  |\n| block number | uint64 |  |  |\n| timestamp | int64 |  |  |\n| code_hash | uint256be |  | The hash of the code to be executed. |\n| ~~code~~ |  | ptr | The code is requested with `get_code` query. |\n| ~~code_size~~ |  | uint64 |  |\n## Outputs\n- status/result (ok, oog)\n- output data\n- storage modification list\n- suicide list\n- other state changes? \n## Queries (aka Callbacks)\n\nVM uses this query functions to get additional information from a Ethereum node.\n\n| Declaration | Description |\n| --- | --- |\n| `uint256be keccak(ptr data, uint64 size)` | Ask VM to compute Keccak hash of the given data. This should be replaced with internal implementation of Keccak. |\n| `uint256 balance(address)` | Query the balance of the given address. See `BALANCE` instruction. |\n| `uint256be blockhash(uint256 number)` | Get hash of a block with given number. See `BLOCKHASH` instruction. |\n| `(ptr, uint64) extcode(address)` | Get the code of the given account. This should be used to get the code of the current execution request. In case the code has been compiled and cached the query is not needed. |\n| `void log(ptr data, uint64 size, uint256be topic1, uint256be topic2, uint256be topic3, uint256be topic4)` | Send logs. This should not be needed. Logs should be aggregates by the VM and provided to Ethereum node with other output. |\n| `uint256be sload(uint256be key)` | Load a word from the storage. |\n| `void sstore(uint256be key, uint256be value)` | Store a word in the storage. To count gas for that the VM needs to check the previous value with `sload`. |\n| `bool call(...)` | Call other contract. |\n| `void create(...)` | Create new contract. |\n",
  "closed_by": {
    "login": "chfast",
    "id": 573380,
    "node_id": "MDQ6VXNlcjU3MzM4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/573380?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chfast",
    "html_url": "https://github.com/chfast",
    "followers_url": "https://api.github.com/users/chfast/followers",
    "following_url": "https://api.github.com/users/chfast/following{/other_user}",
    "gists_url": "https://api.github.com/users/chfast/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chfast/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chfast/subscriptions",
    "organizations_url": "https://api.github.com/users/chfast/orgs",
    "repos_url": "https://api.github.com/users/chfast/repos",
    "events_url": "https://api.github.com/users/chfast/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chfast/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/56/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/56/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/196802984",
    "html_url": "https://github.com/ethereum/EIPs/issues/56#issuecomment-196802984",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/56",
    "id": 196802984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjgwMjk4NA==",
    "user": {
      "login": "debris",
      "id": 2613714,
      "node_id": "MDQ6VXNlcjI2MTM3MTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2613714?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/debris",
      "html_url": "https://github.com/debris",
      "followers_url": "https://api.github.com/users/debris/followers",
      "following_url": "https://api.github.com/users/debris/following{/other_user}",
      "gists_url": "https://api.github.com/users/debris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/debris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/debris/subscriptions",
      "organizations_url": "https://api.github.com/users/debris/orgs",
      "repos_url": "https://api.github.com/users/debris/repos",
      "events_url": "https://api.github.com/users/debris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/debris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-15T12:44:54Z",
    "updated_at": "2016-03-15T12:44:54Z",
    "author_association": "NONE",
    "body": "there should be `transferValue` and `apparentValue` instead of `value` (Homestead change).\n\np. 9, yellowpaper\n\nhttps://github.com/ethereum/libethereum/blob/develop/evmjit/include/evmjit/JIT-c.h#L35\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/196802984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/196803380",
    "html_url": "https://github.com/ethereum/EIPs/issues/56#issuecomment-196803380",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/56",
    "id": 196803380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjgwMzM4MA==",
    "user": {
      "login": "debris",
      "id": 2613714,
      "node_id": "MDQ6VXNlcjI2MTM3MTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2613714?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/debris",
      "html_url": "https://github.com/debris",
      "followers_url": "https://api.github.com/users/debris/followers",
      "following_url": "https://api.github.com/users/debris/following{/other_user}",
      "gists_url": "https://api.github.com/users/debris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/debris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/debris/subscriptions",
      "organizations_url": "https://api.github.com/users/debris/orgs",
      "repos_url": "https://api.github.com/users/debris/repos",
      "events_url": "https://api.github.com/users/debris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/debris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-15T12:46:54Z",
    "updated_at": "2016-03-15T12:46:54Z",
    "author_association": "NONE",
    "body": "also `gas` and `gasPrice` should be uint256\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/196803380/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/196803797",
    "html_url": "https://github.com/ethereum/EIPs/issues/56#issuecomment-196803797",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/56",
    "id": 196803797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjgwMzc5Nw==",
    "user": {
      "login": "debris",
      "id": 2613714,
      "node_id": "MDQ6VXNlcjI2MTM3MTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2613714?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/debris",
      "html_url": "https://github.com/debris",
      "followers_url": "https://api.github.com/users/debris/followers",
      "following_url": "https://api.github.com/users/debris/following{/other_user}",
      "gists_url": "https://api.github.com/users/debris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/debris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/debris/subscriptions",
      "organizations_url": "https://api.github.com/users/debris/orgs",
      "repos_url": "https://api.github.com/users/debris/repos",
      "events_url": "https://api.github.com/users/debris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/debris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-15T12:48:17Z",
    "updated_at": "2016-03-15T12:48:17Z",
    "author_association": "NONE",
    "body": "apart from that, LGTM :+1: \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/196803797/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/197226514",
    "html_url": "https://github.com/ethereum/EIPs/issues/56#issuecomment-197226514",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/56",
    "id": 197226514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzIyNjUxNA==",
    "user": {
      "login": "chfast",
      "id": 573380,
      "node_id": "MDQ6VXNlcjU3MzM4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chfast",
      "html_url": "https://github.com/chfast",
      "followers_url": "https://api.github.com/users/chfast/followers",
      "following_url": "https://api.github.com/users/chfast/following{/other_user}",
      "gists_url": "https://api.github.com/users/chfast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chfast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chfast/subscriptions",
      "organizations_url": "https://api.github.com/users/chfast/orgs",
      "repos_url": "https://api.github.com/users/chfast/repos",
      "events_url": "https://api.github.com/users/chfast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chfast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-16T09:30:06Z",
    "updated_at": "2016-03-16T09:30:06Z",
    "author_association": "MEMBER",
    "body": "I always tried to avoid `gas` as 256-bit integer as that will never happen in live network. But I think I will need to move that optimization inside VM.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/197226514/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/198714059",
    "html_url": "https://github.com/ethereum/EIPs/issues/56#issuecomment-198714059",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/56",
    "id": 198714059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODcxNDA1OQ==",
    "user": {
      "login": "chfast",
      "id": 573380,
      "node_id": "MDQ6VXNlcjU3MzM4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chfast",
      "html_url": "https://github.com/chfast",
      "followers_url": "https://api.github.com/users/chfast/followers",
      "following_url": "https://api.github.com/users/chfast/following{/other_user}",
      "gists_url": "https://api.github.com/users/chfast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chfast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chfast/subscriptions",
      "organizations_url": "https://api.github.com/users/chfast/orgs",
      "repos_url": "https://api.github.com/users/chfast/repos",
      "events_url": "https://api.github.com/users/chfast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chfast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-19T14:39:34Z",
    "updated_at": "2016-03-19T14:39:34Z",
    "author_association": "MEMBER",
    "body": "@debris, any issues with _input data_ being passed by pointer? It needs to be available on the Rust side all the time execution is in progress.\n\nMoreover, is it ok to _timestamp_ being `int64` and _block number_ being `uint64`?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/198714059/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/198754530",
    "html_url": "https://github.com/ethereum/EIPs/issues/56#issuecomment-198754530",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/56",
    "id": 198754530,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODc1NDUzMA==",
    "user": {
      "login": "debris",
      "id": 2613714,
      "node_id": "MDQ6VXNlcjI2MTM3MTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2613714?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/debris",
      "html_url": "https://github.com/debris",
      "followers_url": "https://api.github.com/users/debris/followers",
      "following_url": "https://api.github.com/users/debris/following{/other_user}",
      "gists_url": "https://api.github.com/users/debris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/debris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/debris/subscriptions",
      "organizations_url": "https://api.github.com/users/debris/orgs",
      "repos_url": "https://api.github.com/users/debris/repos",
      "events_url": "https://api.github.com/users/debris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/debris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-19T17:34:39Z",
    "updated_at": "2016-03-19T17:34:39Z",
    "author_association": "NONE",
    "body": "> @debris, any issues with input data being passed by pointer? It needs to be available on the Rust side all the time execution is in progress.\n\nNo\n\n> Moreover, is it ok to timestamp being int64 and block number being uint64?\n\nYes :+1: \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/198754530/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/209127153",
    "html_url": "https://github.com/ethereum/EIPs/issues/56#issuecomment-209127153",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/56",
    "id": 209127153,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTEyNzE1Mw==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-12T22:21:53Z",
    "updated_at": "2016-04-12T22:21:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@chfast  At least in the interpreter gas and memory must be less than 2^63.  There is no way on earth to use that much.  If sometime in the future there is, this code will be long gone anyway.  And otherwise gas and memory calculations become very slow, and gas calculations are almost pure overhead already.  In the JIT perhaps the 256-bit operations can be optimized to 64-bit? \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/209127153/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/209133645",
    "html_url": "https://github.com/ethereum/EIPs/issues/56#issuecomment-209133645",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/56",
    "id": 209133645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTEzMzY0NQ==",
    "user": {
      "login": "chfast",
      "id": 573380,
      "node_id": "MDQ6VXNlcjU3MzM4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chfast",
      "html_url": "https://github.com/chfast",
      "followers_url": "https://api.github.com/users/chfast/followers",
      "following_url": "https://api.github.com/users/chfast/following{/other_user}",
      "gists_url": "https://api.github.com/users/chfast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chfast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chfast/subscriptions",
      "organizations_url": "https://api.github.com/users/chfast/orgs",
      "repos_url": "https://api.github.com/users/chfast/repos",
      "events_url": "https://api.github.com/users/chfast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chfast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-12T22:42:16Z",
    "updated_at": "2016-04-12T22:42:16Z",
    "author_association": "MEMBER",
    "body": "I 100% agree. The problem is the spec allow the gas value to be very high and there are some tests in the test repo that exploits that. I agree that it makes no sense but users of evmjit usually complain that it does not pass all tests.\n\nHaving gas limit of 2^63 make it fit in a regular CPU register and allows easy overflow detection.\n\nWhat I plan to do is to check the gas value in the first place and if it is less than 2^63 run the code in \"fast\" mode. Otherwise run in \"compatibility\" mode.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/209133645/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/209157326",
    "html_url": "https://github.com/ethereum/EIPs/issues/56#issuecomment-209157326",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/56",
    "id": 209157326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTE1NzMyNg==",
    "user": {
      "login": "gcolvin",
      "id": 16827129,
      "node_id": "MDQ6VXNlcjE2ODI3MTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16827129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gcolvin",
      "html_url": "https://github.com/gcolvin",
      "followers_url": "https://api.github.com/users/gcolvin/followers",
      "following_url": "https://api.github.com/users/gcolvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gcolvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gcolvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gcolvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gcolvin/orgs",
      "repos_url": "https://api.github.com/users/gcolvin/repos",
      "events_url": "https://api.github.com/users/gcolvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gcolvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-13T00:05:28Z",
    "updated_at": "2016-04-13T03:00:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "The spec and the tests need to be fixed.  Running in a separate mode just to pass tests means we have to write two interpreters and not test the one we actually run.  Similar thing with memory.  Conceptually it's infinite, but nobody can afford even a gigabyte, and it's not like you could allocate even 2^63 anyway.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/209157326/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/209347310",
    "html_url": "https://github.com/ethereum/EIPs/issues/56#issuecomment-209347310",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/56",
    "id": 209347310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTM0NzMxMA==",
    "user": {
      "login": "chfast",
      "id": 573380,
      "node_id": "MDQ6VXNlcjU3MzM4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chfast",
      "html_url": "https://github.com/chfast",
      "followers_url": "https://api.github.com/users/chfast/followers",
      "following_url": "https://api.github.com/users/chfast/following{/other_user}",
      "gists_url": "https://api.github.com/users/chfast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chfast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chfast/subscriptions",
      "organizations_url": "https://api.github.com/users/chfast/orgs",
      "repos_url": "https://api.github.com/users/chfast/repos",
      "events_url": "https://api.github.com/users/chfast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chfast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-13T09:56:40Z",
    "updated_at": "2016-04-13T09:56:40Z",
    "author_association": "MEMBER",
    "body": "Let's propose lowering the maximum gas per transaction: https://github.com/ethereum/EIPs/issues/92.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/209347310/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/220018117",
    "html_url": "https://github.com/ethereum/EIPs/issues/56#issuecomment-220018117",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/56",
    "id": 220018117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDAxODExNw==",
    "user": {
      "login": "chfast",
      "id": 573380,
      "node_id": "MDQ6VXNlcjU3MzM4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chfast",
      "html_url": "https://github.com/chfast",
      "followers_url": "https://api.github.com/users/chfast/followers",
      "following_url": "https://api.github.com/users/chfast/following{/other_user}",
      "gists_url": "https://api.github.com/users/chfast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chfast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chfast/subscriptions",
      "organizations_url": "https://api.github.com/users/chfast/orgs",
      "repos_url": "https://api.github.com/users/chfast/repos",
      "events_url": "https://api.github.com/users/chfast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chfast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T12:59:21Z",
    "updated_at": "2016-05-18T12:59:21Z",
    "author_association": "MEMBER",
    "body": "I try to design C interface for EVMJIT. Can you review https://github.com/ethereum/evmjit/pull/55?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/220018117/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/241257411",
    "html_url": "https://github.com/ethereum/EIPs/issues/56#issuecomment-241257411",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/56",
    "id": 241257411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTI1NzQxMQ==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-21T13:30:23Z",
    "updated_at": "2016-08-21T13:30:23Z",
    "author_association": "MEMBER",
    "body": "@chfast these suggestions are based on latest interface as defined by `evm.h`: https://github.com/ethereum/evmjit/blob/develop/include/evm.h\n- `evm_get_info` should return NULL if the key is not found.\n- `evm_execute` should have a field for specifying bytecode type. As you have proposed, that could be part of `evm_mode`, but it seems that EVM1 and EVM2 bytecode will coexist on the same blockchain.\n- `evm_result` should have an _execution outcome_ enum (`SUCCESS`, `OOG`, `INVALID_INSTRUCTION`, `EXCEPTION`, etc.) and a string for the detailed reason (can be NULL if not present)\n\nAlso the `evmjit_*` definitions should be removed from evm.h or renamed appropriately.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/241257411/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/241259392",
    "html_url": "https://github.com/ethereum/EIPs/issues/56#issuecomment-241259392",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/56",
    "id": 241259392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTI1OTM5Mg==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-21T14:02:03Z",
    "updated_at": "2016-08-21T14:02:03Z",
    "author_association": "MEMBER",
    "body": "For those interested, there's now an [eWASM](https://github.com/ethereum/evm2.0-design) implementation using this C API: https://github.com/ewasm/hera\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/241259392/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/241268039",
    "html_url": "https://github.com/ethereum/EIPs/issues/56#issuecomment-241268039",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/56",
    "id": 241268039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTI2ODAzOQ==",
    "user": {
      "login": "chfast",
      "id": 573380,
      "node_id": "MDQ6VXNlcjU3MzM4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chfast",
      "html_url": "https://github.com/chfast",
      "followers_url": "https://api.github.com/users/chfast/followers",
      "following_url": "https://api.github.com/users/chfast/following{/other_user}",
      "gists_url": "https://api.github.com/users/chfast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chfast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chfast/subscriptions",
      "organizations_url": "https://api.github.com/users/chfast/orgs",
      "repos_url": "https://api.github.com/users/chfast/repos",
      "events_url": "https://api.github.com/users/chfast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chfast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-21T16:44:59Z",
    "updated_at": "2016-08-21T16:44:59Z",
    "author_association": "MEMBER",
    "body": "@axic:\nI prefer EVM-C to be more pragmatic than beautiful.\n- For bytecode version I propose to use `evm_mode`. For your case can the values be e.g. `EVM_FUTUREETHEREUM_EVM1` and `EVM_FUTUREETHEREUM_EVM2`. We have at least 32 bits in the value of `evm_mode` to be used.\n- I don't like the name `evm_mode` but `evm_compatibility_mode` feels a bit to long. Any suggestions for better name? `evm_bytecode_version`?\n- The execution result is just success of failure by design because compliant VM implementation is not required to provide details about the reason of the failure. I exploit this in evmjit. However, we can discuss that if this information is needed.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/241268039/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/241273743",
    "html_url": "https://github.com/ethereum/EIPs/issues/56#issuecomment-241273743",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/56",
    "id": 241273743,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTI3Mzc0Mw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-21T18:36:31Z",
    "updated_at": "2016-08-21T18:36:31Z",
    "author_association": "MEMBER",
    "body": "> For bytecode version I propose to use evm_mode. \n\nI'm not sure at this stage yet, whether that will be a viable solution. \n\n> The execution result is just success of failure by design because compliant VM implementation is not required to provide details about the reason of the failure.\n\nThey are not required, but why should they be disallowed doing so? Some VMs do provide the result with greater detail (ethereumjs, Parity).\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/241273743/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/241287598",
    "html_url": "https://github.com/ethereum/EIPs/issues/56#issuecomment-241287598",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/56",
    "id": 241287598,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTI4NzU5OA==",
    "user": {
      "login": "chfast",
      "id": 573380,
      "node_id": "MDQ6VXNlcjU3MzM4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chfast",
      "html_url": "https://github.com/chfast",
      "followers_url": "https://api.github.com/users/chfast/followers",
      "following_url": "https://api.github.com/users/chfast/following{/other_user}",
      "gists_url": "https://api.github.com/users/chfast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chfast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chfast/subscriptions",
      "organizations_url": "https://api.github.com/users/chfast/orgs",
      "repos_url": "https://api.github.com/users/chfast/repos",
      "events_url": "https://api.github.com/users/chfast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chfast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-21T22:56:15Z",
    "updated_at": "2016-08-21T22:56:15Z",
    "author_association": "MEMBER",
    "body": "The generated docs are now auto-updated: http://ethereum.github.io/evmjit/docs/group__EVMC.html\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/241287598/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/283985195",
    "html_url": "https://github.com/ethereum/EIPs/issues/56#issuecomment-283985195",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/56",
    "id": 283985195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mzk4NTE5NQ==",
    "user": {
      "login": "chfast",
      "id": 573380,
      "node_id": "MDQ6VXNlcjU3MzM4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chfast",
      "html_url": "https://github.com/chfast",
      "followers_url": "https://api.github.com/users/chfast/followers",
      "following_url": "https://api.github.com/users/chfast/following{/other_user}",
      "gists_url": "https://api.github.com/users/chfast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chfast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chfast/subscriptions",
      "organizations_url": "https://api.github.com/users/chfast/orgs",
      "repos_url": "https://api.github.com/users/chfast/repos",
      "events_url": "https://api.github.com/users/chfast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chfast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-03T15:33:40Z",
    "updated_at": "2017-03-03T15:33:40Z",
    "author_association": "MEMBER",
    "body": "This is work in progress. I will update soon.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/283985195/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/292042976",
    "html_url": "https://github.com/ethereum/EIPs/issues/56#issuecomment-292042976",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/56",
    "id": 292042976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjA0Mjk3Ng==",
    "user": {
      "login": "Souptacular",
      "id": 3460120,
      "node_id": "MDQ6VXNlcjM0NjAxMjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3460120?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Souptacular",
      "html_url": "https://github.com/Souptacular",
      "followers_url": "https://api.github.com/users/Souptacular/followers",
      "following_url": "https://api.github.com/users/Souptacular/following{/other_user}",
      "gists_url": "https://api.github.com/users/Souptacular/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Souptacular/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Souptacular/subscriptions",
      "organizations_url": "https://api.github.com/users/Souptacular/orgs",
      "repos_url": "https://api.github.com/users/Souptacular/repos",
      "events_url": "https://api.github.com/users/Souptacular/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Souptacular/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T01:26:22Z",
    "updated_at": "2017-04-06T01:26:22Z",
    "author_association": "MEMBER",
    "body": "Pinged @chfast to check into this. If it is still a WIP no problem, just want to get an update :)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/292042976/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/418491772",
    "html_url": "https://github.com/ethereum/EIPs/issues/56#issuecomment-418491772",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/56",
    "id": 418491772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODQ5MTc3Mg==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-04T19:37:20Z",
    "updated_at": "2018-09-04T19:37:20Z",
    "author_association": "MEMBER",
    "body": "The live specification is maintained at https://github.com/ethereum/evmc.\r\n\r\n@chfast any point to keep this issue open? Should we create an ERC56 which has a copy of `evmc.h` with ABI v5 and create a new ERC with every new ABI version deprecating the old one?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/418491772/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
