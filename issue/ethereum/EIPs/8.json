{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/8/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/8/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/8/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/8",
  "id": 117130125,
  "node_id": "MDU6SXNzdWUxMTcxMzAxMjU=",
  "number": 8,
  "title": "EIP 5: Gas costs for return values",
  "user": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 31,
  "created_at": "2015-11-16T14:01:58Z",
  "updated_at": "2018-09-18T22:48:47Z",
  "closed_at": "2018-09-18T22:48:47Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Proposal\n\nChange memory gas costs for return values of a call to be applied depending on the size of the written memory area, not the reserved memory area.\n## Current Situation\n\nIn a call, the caller has to provide an area where the returned data from a call is written to. Only reserving it already changes gas costs for memory.\n## Advantage\n\nThis makes it possible to read a return value whose size is not known to the caller prior to the call: The caller just reserves a huge amount of memory.\n## Possible Extension\n\nThe `CALL` opcode (and its friends) may even return the actual size of memory written to, so that the data can be used (e.g. forwarded) even if nothing is known about its structure.\n## Implementation\n\nThe implementation might be a bit tricky: The `CALL` opcode has to be charged some gas upfront, then the call is performed without allocating memory for the return value. At the point, the return value is available, gas costs are computed and if some gas is still available, memory is allocated and written to.\n",
  "closed_by": {
    "login": "Souptacular",
    "id": 3460120,
    "node_id": "MDQ6VXNlcjM0NjAxMjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3460120?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Souptacular",
    "html_url": "https://github.com/Souptacular",
    "followers_url": "https://api.github.com/users/Souptacular/followers",
    "following_url": "https://api.github.com/users/Souptacular/following{/other_user}",
    "gists_url": "https://api.github.com/users/Souptacular/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Souptacular/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Souptacular/subscriptions",
    "organizations_url": "https://api.github.com/users/Souptacular/orgs",
    "repos_url": "https://api.github.com/users/Souptacular/repos",
    "events_url": "https://api.github.com/users/Souptacular/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Souptacular/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/8/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/8/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/157041778",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-157041778",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 157041778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzA0MTc3OA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-16T14:13:40Z",
    "updated_at": "2015-11-16T14:13:40Z",
    "author_association": "MEMBER",
    "body": "This would be quite useful from a contract/library author's perspective.  It currently requires some major _hoop jumping_ to get bytes from another contract.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/157041778/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/157377754",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-157377754",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 157377754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzM3Nzc1NA==",
    "user": {
      "login": "Nashatyrev",
      "id": 8173857,
      "node_id": "MDQ6VXNlcjgxNzM4NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8173857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nashatyrev",
      "html_url": "https://github.com/Nashatyrev",
      "followers_url": "https://api.github.com/users/Nashatyrev/followers",
      "following_url": "https://api.github.com/users/Nashatyrev/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nashatyrev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nashatyrev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nashatyrev/subscriptions",
      "organizations_url": "https://api.github.com/users/Nashatyrev/orgs",
      "repos_url": "https://api.github.com/users/Nashatyrev/repos",
      "events_url": "https://api.github.com/users/Nashatyrev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nashatyrev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-17T14:03:13Z",
    "updated_at": "2015-11-17T14:03:13Z",
    "author_association": "MEMBER",
    "body": "Voting for this proposal. IMHO this will be a huge jump to multi-contract apps.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/157377754/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/157428113",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-157428113",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 157428113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzQyODExMw==",
    "user": {
      "login": "wanderer",
      "id": 158211,
      "node_id": "MDQ6VXNlcjE1ODIxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/158211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wanderer",
      "html_url": "https://github.com/wanderer",
      "followers_url": "https://api.github.com/users/wanderer/followers",
      "following_url": "https://api.github.com/users/wanderer/following{/other_user}",
      "gists_url": "https://api.github.com/users/wanderer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wanderer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wanderer/subscriptions",
      "organizations_url": "https://api.github.com/users/wanderer/orgs",
      "repos_url": "https://api.github.com/users/wanderer/repos",
      "events_url": "https://api.github.com/users/wanderer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wanderer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-17T16:48:52Z",
    "updated_at": "2015-11-18T00:40:38Z",
    "author_association": "MEMBER",
    "body": "> applied depending on the size of the written memory area, not the reserved memory area.   \n\nSo would there be a max allocation size the the callee would specify? \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/157428113/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158375100",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-158375100",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 158375100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODM3NTEwMA==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T11:58:05Z",
    "updated_at": "2015-11-20T11:59:19Z",
    "author_association": "MEMBER",
    "body": "I have thought about this a bit more in the last day and tried to implement some generic call forwarding stuff in serpent, and have really come to appreciate the wisdom of this change and how much easier it would make it to do a lot of things.\n\n> So would there be a max allocation size the the callee would specify? \n\nYes. However, if you trust the callee absolutely, you can just set it to 2**100; but this isn't as scary as it seems as contracts trust the callee with all of their gas by default already.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158375100/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158375488",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-158375488",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 158375488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODM3NTQ4OA==",
    "user": {
      "login": "obscuren",
      "id": 6264126,
      "node_id": "MDQ6VXNlcjYyNjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6264126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obscuren",
      "html_url": "https://github.com/obscuren",
      "followers_url": "https://api.github.com/users/obscuren/followers",
      "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
      "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
      "organizations_url": "https://api.github.com/users/obscuren/orgs",
      "repos_url": "https://api.github.com/users/obscuren/repos",
      "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obscuren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T12:00:16Z",
    "updated_at": "2015-11-20T12:00:16Z",
    "author_association": "MEMBER",
    "body": ":+1: \n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158375488/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158376263",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-158376263",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 158376263,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODM3NjI2Mw==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T12:02:23Z",
    "updated_at": "2015-11-20T12:04:02Z",
    "author_association": "MEMBER",
    "body": "Here is my proposed implementation in python:\n\nThe way it currently works: http://vitalik.ca/files/old.py\nAfter the proposed change: http://vitalik.ca/files/new.py\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158376263/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158383053",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-158383053",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 158383053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODM4MzA1Mw==",
    "user": {
      "login": "wanderer",
      "id": 158211,
      "node_id": "MDQ6VXNlcjE1ODIxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/158211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wanderer",
      "html_url": "https://github.com/wanderer",
      "followers_url": "https://api.github.com/users/wanderer/followers",
      "following_url": "https://api.github.com/users/wanderer/following{/other_user}",
      "gists_url": "https://api.github.com/users/wanderer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wanderer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wanderer/subscriptions",
      "organizations_url": "https://api.github.com/users/wanderer/orgs",
      "repos_url": "https://api.github.com/users/wanderer/repos",
      "events_url": "https://api.github.com/users/wanderer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wanderer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T12:27:00Z",
    "updated_at": "2015-11-20T12:27:00Z",
    "author_association": "MEMBER",
    "body": "lgtm\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158383053/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158415884",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-158415884",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 158415884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODQxNTg4NA==",
    "user": {
      "login": "janx",
      "id": 5958,
      "node_id": "MDQ6VXNlcjU5NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5958?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janx",
      "html_url": "https://github.com/janx",
      "followers_url": "https://api.github.com/users/janx/followers",
      "following_url": "https://api.github.com/users/janx/following{/other_user}",
      "gists_url": "https://api.github.com/users/janx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janx/subscriptions",
      "organizations_url": "https://api.github.com/users/janx/orgs",
      "repos_url": "https://api.github.com/users/janx/repos",
      "events_url": "https://api.github.com/users/janx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T14:30:38Z",
    "updated_at": "2015-11-20T14:30:38Z",
    "author_association": "MEMBER",
    "body": "+1\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158415884/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158479550",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-158479550",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 158479550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODQ3OTU1MA==",
    "user": {
      "login": "nmushegian",
      "id": 924397,
      "node_id": "MDQ6VXNlcjkyNDM5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/924397?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nmushegian",
      "html_url": "https://github.com/nmushegian",
      "followers_url": "https://api.github.com/users/nmushegian/followers",
      "following_url": "https://api.github.com/users/nmushegian/following{/other_user}",
      "gists_url": "https://api.github.com/users/nmushegian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nmushegian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nmushegian/subscriptions",
      "organizations_url": "https://api.github.com/users/nmushegian/orgs",
      "repos_url": "https://api.github.com/users/nmushegian/repos",
      "events_url": "https://api.github.com/users/nmushegian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nmushegian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T18:15:21Z",
    "updated_at": "2015-11-20T18:15:21Z",
    "author_association": "NONE",
    "body": "+1! This unlocks the full potential of \"dynamic\" contracts. Without this, you can't use Solidity to write a contract that could be updated to implement an arbitrary Solidity ABI.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158479550/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/208528624",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-208528624",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 208528624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODUyODYyNA==",
    "user": {
      "login": "PeterBorah",
      "id": 2374327,
      "node_id": "MDQ6VXNlcjIzNzQzMjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2374327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PeterBorah",
      "html_url": "https://github.com/PeterBorah",
      "followers_url": "https://api.github.com/users/PeterBorah/followers",
      "following_url": "https://api.github.com/users/PeterBorah/following{/other_user}",
      "gists_url": "https://api.github.com/users/PeterBorah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PeterBorah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PeterBorah/subscriptions",
      "organizations_url": "https://api.github.com/users/PeterBorah/orgs",
      "repos_url": "https://api.github.com/users/PeterBorah/repos",
      "events_url": "https://api.github.com/users/PeterBorah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PeterBorah/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-11T19:52:59Z",
    "updated_at": "2016-04-11T19:52:59Z",
    "author_association": "NONE",
    "body": "What is the status of this proposal? I'm currently running into this issue. :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/208528624/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214467400",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-214467400",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 214467400,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDQ2NzQwMA==",
    "user": {
      "login": "PeterBorah",
      "id": 2374327,
      "node_id": "MDQ6VXNlcjIzNzQzMjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2374327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PeterBorah",
      "html_url": "https://github.com/PeterBorah",
      "followers_url": "https://api.github.com/users/PeterBorah/followers",
      "following_url": "https://api.github.com/users/PeterBorah/following{/other_user}",
      "gists_url": "https://api.github.com/users/PeterBorah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PeterBorah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PeterBorah/subscriptions",
      "organizations_url": "https://api.github.com/users/PeterBorah/orgs",
      "repos_url": "https://api.github.com/users/PeterBorah/repos",
      "events_url": "https://api.github.com/users/PeterBorah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PeterBorah/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-25T18:14:27Z",
    "updated_at": "2016-04-25T18:14:27Z",
    "author_association": "NONE",
    "body": "@kumavis suggested that I expand on my usecase for this. Basically, this would allow generic middleware and generic call-forwarding in a way that you can't really do right now. \n\nThis is particularly useful for \"identity\" in various forms. I want to write a contract that serves as the canonical address for an entity (a person, dapp, DAO, token, etc.), but that is capable of forwarding incoming or outgoing calls to other contracts. Right now, this is only possible if this middle contract has special knowledge about the interior workings of the destination contract, and I would like to be able to do it generically.\n\nFor an example of how it currently has to be done, check out the experiments I'm doing here:\n\nhttps://github.com/PeterBorah/ether-router/blob/master/contracts/EtherRouter.sol\n\nIn line 11, I have to explicitly look up the expected return size in a separately-maintained database, so that I can allocate enough memory to pass back the return value.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214467400/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214471676",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-214471676",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 214471676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDQ3MTY3Ng==",
    "user": {
      "login": "PeterBorah",
      "id": 2374327,
      "node_id": "MDQ6VXNlcjIzNzQzMjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2374327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PeterBorah",
      "html_url": "https://github.com/PeterBorah",
      "followers_url": "https://api.github.com/users/PeterBorah/followers",
      "following_url": "https://api.github.com/users/PeterBorah/following{/other_user}",
      "gists_url": "https://api.github.com/users/PeterBorah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PeterBorah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PeterBorah/subscriptions",
      "organizations_url": "https://api.github.com/users/PeterBorah/orgs",
      "repos_url": "https://api.github.com/users/PeterBorah/repos",
      "events_url": "https://api.github.com/users/PeterBorah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PeterBorah/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-25T18:30:05Z",
    "updated_at": "2016-04-25T18:30:05Z",
    "author_association": "NONE",
    "body": "There's also a simpler usecase, which is that Solidity is currently unable to call a function that returns a dynamically-sized array, because it needs to know the size of the array before it makes the call.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/214471676/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/217397474",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-217397474",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 217397474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzM5NzQ3NA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-06T09:35:12Z",
    "updated_at": "2016-05-06T09:35:12Z",
    "author_association": "MEMBER",
    "body": "In the meantime, another possible solution to the problem was proposed:\n\nCharge the gas to the callee instead of the caller.\n\nAdvantages:\n- `CALL` opcode cannot fail (assuming we leave enough gas with the caller to pay for the slightly dynamic costs of the call itself)\n\nDisadvantages:\n- callee pays for memory extension of caller and has to retain some gas for this (but the amount is unknown as it depends on the position in caller's memory and not only the size)\n\nIn comparison, the **original proposal** of paying from caller's gas after returning the gas left in the callee's context:\n\nAdvantages:\n- backwards compatible (gas costs for `CALL` will be distributed to pre- and post-gas, but sum will be at most as large and might be smaller)\n\nDisadvantages:\n- actual gas costs depend on value returned (but that effect only appears because we reduce the original gas costs by a dynamic amount)\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/217397474/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/219672625",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-219672625",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 219672625,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTY3MjYyNQ==",
    "user": {
      "login": "elenadimitrova",
      "id": 703848,
      "node_id": "MDQ6VXNlcjcwMzg0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/703848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elenadimitrova",
      "html_url": "https://github.com/elenadimitrova",
      "followers_url": "https://api.github.com/users/elenadimitrova/followers",
      "following_url": "https://api.github.com/users/elenadimitrova/following{/other_user}",
      "gists_url": "https://api.github.com/users/elenadimitrova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elenadimitrova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elenadimitrova/subscriptions",
      "organizations_url": "https://api.github.com/users/elenadimitrova/orgs",
      "repos_url": "https://api.github.com/users/elenadimitrova/repos",
      "events_url": "https://api.github.com/users/elenadimitrova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elenadimitrova/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-17T09:57:49Z",
    "updated_at": "2016-05-17T09:57:49Z",
    "author_association": "NONE",
    "body": "+1\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/219672625/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/226471924",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-226471924",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 226471924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjQ3MTkyNA==",
    "user": {
      "login": "gavofyork",
      "id": 138296,
      "node_id": "MDQ6VXNlcjEzODI5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/138296?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavofyork",
      "html_url": "https://github.com/gavofyork",
      "followers_url": "https://api.github.com/users/gavofyork/followers",
      "following_url": "https://api.github.com/users/gavofyork/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavofyork/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavofyork/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavofyork/subscriptions",
      "organizations_url": "https://api.github.com/users/gavofyork/orgs",
      "repos_url": "https://api.github.com/users/gavofyork/repos",
      "events_url": "https://api.github.com/users/gavofyork/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavofyork/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-16T12:34:28Z",
    "updated_at": "2016-06-16T12:35:46Z",
    "author_association": "MEMBER",
    "body": "Disadvantage of **original proposal**:\n- `CALL` breaks the rule that no opcode can run OOG once the execution of the op-code has started.\n\nTo be clear, until now the formal spec for the EVM dispatch sequence is:\n1. Decode instruction.\n2. Check gas requirements (bail with OOG exception if not met).\n3. Deduct gas.\n4. Execute instruction.\n5. Refund unused gas.\n\nThis would fundamentally alter to:\n1. Decode instruction.\n2. Check gas requirements (bail with OOG exception if not met).\n3. Deduct gas.\n4. Execute instruction.\n5. Check additional gas requirements (bail with OOG exception if not met).\n6. Deduct/refund additional/unused gas.\n\nThis would add a base layer of additional complexity and reduce our ability to reason about edge circumstances particularly regarding possible attack scenarios due to gas usage.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/226471924/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/226647122",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-226647122",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 226647122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjY0NzEyMg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-16T23:58:29Z",
    "updated_at": "2016-06-17T00:02:56Z",
    "author_association": "MEMBER",
    "body": "While indeed, this adds another step for call-like opcodes, you are hiding a lot of complexity that is already present, especially with regards to call-like opcodes:\n1. decode instruction\n2. check stack requirements (throw OOG if not met)\n3. calculate and check gas requirements (throw OOG if out of gas)\n4. enlarge memory if necessary\n5. check that the call depth is not too large (push 0 to stack otherwise)\n6. check that we have enough ether to send along with the call (push 0 to stack otherwise)\n7. if checks succeeded: perform the call (passing on memory pointers for to a new stack frame)\n8. copy output into memory (that step might be done as the last one of the inner stack frame)\n9. refund gas\n\nAnd perhaps some other steps I have missed here. With this Proposal, this turns into:\n1. decode instruction\n2. check stack requirements (throw OOG if not met)\n3. calculate and check gas requirements (throw OOG if out of gas)\n4. enlarge memory if necessary\n5. check that the call depth is not too large (push 0 to stack otherwise)\n6. check that we have enough ether to send along with the call (push 0 to stack otherwise)\n7. if checks succeeded: perform the call (passing on memory pointers for to a new stack frame)\n8. calculate and check gas requirements for writing output into memory (throw OOG if out of gas)\n9. enlarge memory if necessary\n10. copy output into memory\n11. refund gas\n\nOr, to make that even simpler: Every opcode and step that accesses memory grows memory and this growing of memory has to be paid with gas. Before this proposal, the call semantics were:\n1. access memory both at input and output area to grow it artificially\n2. perform the call, passing pointers into input and output area\n3. have the data magically appear in the output area unknowing how much has been written\n\nWith this proposal:\n1. access memory at input\n2. perform the call, passing input data via a pointer\n3. copy output into output area\n\nI am sorry, but I think it is just ridiculous that this has been open for over half a year now although we have general acceptance inside the community and among most of the client developers and a gigantic need for this feature.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/226647122/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244332537",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-244332537",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 244332537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDMzMjUzNw==",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-02T09:49:11Z",
    "updated_at": "2016-09-02T09:49:26Z",
    "author_association": "MEMBER",
    "body": "@chriseth @gavofyork: An alternative solution is to charge the gas to the caller for the reserved memory area and refund (include in the refund counter) the difference of reserved and actually written bytes.\n\nThe disadvantage is that a much higher gas limit is needed as the refund counter is only processed after the transaction has finished.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244332537/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244364376",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-244364376",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 244364376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDM2NDM3Ng==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-02T12:42:58Z",
    "updated_at": "2016-09-02T12:42:58Z",
    "author_association": "MEMBER",
    "body": "@axic unfortunately, that will not solve the problem, because the calling contract does not know how much to reserve.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244364376/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244367029",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-244367029",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 244367029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDM2NzAyOQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-02T12:55:22Z",
    "updated_at": "2016-09-02T12:55:22Z",
    "author_association": "MEMBER",
    "body": "I would like to give a simple summary of the two proposals again:\n\nThe designated output area is not taken into account for enlarging memory before the call. At the point where the call returns, if the return value is shorter than the output area, the output area effectively shrinks to the size of the return value. Memory is enlarged if necessary.\n\nProposal A: remaining gas from the call is refunded to the caller; caller pays for enlarging memory for output, throws OOG if not enough gas. Otherwise, return value is written to memory.\n\nProposal B: memory is enlarged and paid for from the remaining gas of the call. If that is not enough, the call fails (returns zero). Otherwise, return value is written to memory and remaining gas is refunded to the caller.\n\nProposal B is backwards incompatible, but this case is not used by the solidity compiler except if you manually specify gas.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244367029/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244401932",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-244401932",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 244401932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDQwMTkzMg==",
    "user": {
      "login": "arkpar",
      "id": 9008569,
      "node_id": "MDQ6VXNlcjkwMDg1Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9008569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arkpar",
      "html_url": "https://github.com/arkpar",
      "followers_url": "https://api.github.com/users/arkpar/followers",
      "following_url": "https://api.github.com/users/arkpar/following{/other_user}",
      "gists_url": "https://api.github.com/users/arkpar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arkpar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arkpar/subscriptions",
      "organizations_url": "https://api.github.com/users/arkpar/orgs",
      "repos_url": "https://api.github.com/users/arkpar/repos",
      "events_url": "https://api.github.com/users/arkpar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arkpar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-02T15:08:14Z",
    "updated_at": "2016-09-02T15:10:30Z",
    "author_association": "NONE",
    "body": "Proposal B also plays nicely with #90\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244401932/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244412515",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-244412515",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 244412515,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDQxMjUxNQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-02T15:46:39Z",
    "updated_at": "2016-09-02T15:46:39Z",
    "author_association": "MEMBER",
    "body": "Can you elaborate why it would play nicer than A, or is that not what you are saying?\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/244412515/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/275187608",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-275187608",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 275187608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTE4NzYwOA==",
    "user": {
      "login": "chfast",
      "id": 573380,
      "node_id": "MDQ6VXNlcjU3MzM4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chfast",
      "html_url": "https://github.com/chfast",
      "followers_url": "https://api.github.com/users/chfast/followers",
      "following_url": "https://api.github.com/users/chfast/following{/other_user}",
      "gists_url": "https://api.github.com/users/chfast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chfast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chfast/subscriptions",
      "organizations_url": "https://api.github.com/users/chfast/orgs",
      "repos_url": "https://api.github.com/users/chfast/repos",
      "events_url": "https://api.github.com/users/chfast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chfast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-25T18:14:59Z",
    "updated_at": "2017-01-25T18:14:59Z",
    "author_association": "MEMBER",
    "body": "My general opinion is that it is much easier (and better) to add a new opcode, instead of reusing existing one and creating complex combos from single propose opcodes. So in this case I would add `CALL_OUTPUT_SIZE` opcode instead of tweaking `MSIZE`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/275187608/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/277649770",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-277649770",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 277649770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzY0OTc3MA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T10:59:40Z",
    "updated_at": "2017-02-06T10:59:40Z",
    "author_association": "MEMBER",
    "body": "Proposal B is problematic with regards to existing code: Calls to e.g. the identity precompile might be more expensive than before (meaning the call will consume more gas, not the call opcode itself), but there are existing contracts that always supply a very specific amount of gas for the identity precompile.\r\n\r\nIn order to not break these contracts, we can alter the proposal so that the new rules only take effect if the specified size of the output area is `MAX = 2**256 - 1` (alternative: `MAX = 2**63-1`). In summary:\r\n\r\nIf the size of the output area is different from `MAX`, the semantics of the EVM do not change, meaning that the memory is resized to accommodate both the input and the output area and the gas costs for that are paid as part of the costs for the CALL opcode.\r\n\r\nIf the size of the output area is equal to `MAX`, memory is resized to accommodate the input area only, the CALL opcode pays as before. At the point where the call returns, memory is resized again to fit the size of the actually returned data. The procedure is paid from the remaining gas of the call. If there is not enough gas, the call fails, memory is not resized and the return data is not written to memory (this is verify similar to the code deposit for a creation).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/277649770/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/277653452",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-277653452",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 277653452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzY1MzQ1Mg==",
    "user": {
      "login": "holiman",
      "id": 142290,
      "node_id": "MDQ6VXNlcjE0MjI5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holiman",
      "html_url": "https://github.com/holiman",
      "followers_url": "https://api.github.com/users/holiman/followers",
      "following_url": "https://api.github.com/users/holiman/following{/other_user}",
      "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
      "organizations_url": "https://api.github.com/users/holiman/orgs",
      "repos_url": "https://api.github.com/users/holiman/repos",
      "events_url": "https://api.github.com/users/holiman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holiman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T11:17:49Z",
    "updated_at": "2017-02-06T11:21:18Z",
    "author_association": "MEMBER",
    "body": "To follow up on that ^\r\n\r\nSpecifying output  `MAX` means removing the notion of \"max allocation size the the callee would specify\", discussed above. \r\nAnd also, with this proposal, the following is necessary to determine the size of the returned data:\r\n\r\n> At the point where the call returns, memory is resized again to fit the size of the actually returned data. \r\n\r\nThat means only resizing to increase, not decrease the memory area, right ? \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/277653452/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/277662450",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-277662450",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 277662450,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzY2MjQ1MA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T12:03:41Z",
    "updated_at": "2017-02-06T12:03:41Z",
    "author_association": "MEMBER",
    "body": "There currently is no way to reduce the allocation of memory, and with resize I actually meant \"enlarge if needed\". I don't think that it is worth the hassle to provide such a means. If you reduce the size, would that mean that you get a gas refund? Also, I don't think we should include this complication into this EIP.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/277662450/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/279119893",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-279119893",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 279119893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTExOTg5Mw==",
    "user": {
      "login": "VoR0220",
      "id": 7756785,
      "node_id": "MDQ6VXNlcjc3NTY3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7756785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoR0220",
      "html_url": "https://github.com/VoR0220",
      "followers_url": "https://api.github.com/users/VoR0220/followers",
      "following_url": "https://api.github.com/users/VoR0220/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoR0220/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoR0220/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoR0220/subscriptions",
      "organizations_url": "https://api.github.com/users/VoR0220/orgs",
      "repos_url": "https://api.github.com/users/VoR0220/repos",
      "events_url": "https://api.github.com/users/VoR0220/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoR0220/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-11T04:17:04Z",
    "updated_at": "2017-02-11T04:17:04Z",
    "author_association": "MEMBER",
    "body": "so...what's the final decision? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/279119893/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/279150594",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-279150594",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 279150594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTE1MDU5NA==",
    "user": {
      "login": "nmushegian",
      "id": 924397,
      "node_id": "MDQ6VXNlcjkyNDM5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/924397?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nmushegian",
      "html_url": "https://github.com/nmushegian",
      "followers_url": "https://api.github.com/users/nmushegian/followers",
      "following_url": "https://api.github.com/users/nmushegian/following{/other_user}",
      "gists_url": "https://api.github.com/users/nmushegian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nmushegian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nmushegian/subscriptions",
      "organizations_url": "https://api.github.com/users/nmushegian/orgs",
      "repos_url": "https://api.github.com/users/nmushegian/repos",
      "events_url": "https://api.github.com/users/nmushegian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nmushegian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-11T15:10:31Z",
    "updated_at": "2017-02-11T15:11:01Z",
    "author_association": "NONE",
    "body": "@chriseth \r\n> If there is not enough gas, the call fails, memory is not resized and the return data is not written to memory (this is verify similar to the code deposit for a creation).\r\n\r\nPlease clarify that this means it also puts a 0 on the stack, so default caller behavior will be to re-throw (hopefully via REVERT) - in other words, it still fails by \"running out of gas\"",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/279150594/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/279424808",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-279424808",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 279424808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTQyNDgwOA==",
    "user": {
      "login": "Arachnid",
      "id": 17865,
      "node_id": "MDQ6VXNlcjE3ODY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arachnid",
      "html_url": "https://github.com/Arachnid",
      "followers_url": "https://api.github.com/users/Arachnid/followers",
      "following_url": "https://api.github.com/users/Arachnid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arachnid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arachnid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arachnid/subscriptions",
      "organizations_url": "https://api.github.com/users/Arachnid/orgs",
      "repos_url": "https://api.github.com/users/Arachnid/repos",
      "events_url": "https://api.github.com/users/Arachnid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arachnid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-13T15:30:35Z",
    "updated_at": "2017-02-13T15:30:35Z",
    "author_association": "MEMBER",
    "body": "See #211.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/279424808/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/335106940",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-335106940",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 335106940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTEwNjk0MA==",
    "user": {
      "login": "aayarushin",
      "id": 7649161,
      "node_id": "MDQ6VXNlcjc2NDkxNjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7649161?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aayarushin",
      "html_url": "https://github.com/aayarushin",
      "followers_url": "https://api.github.com/users/aayarushin/followers",
      "following_url": "https://api.github.com/users/aayarushin/following{/other_user}",
      "gists_url": "https://api.github.com/users/aayarushin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aayarushin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aayarushin/subscriptions",
      "organizations_url": "https://api.github.com/users/aayarushin/orgs",
      "repos_url": "https://api.github.com/users/aayarushin/repos",
      "events_url": "https://api.github.com/users/aayarushin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aayarushin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-09T09:29:29Z",
    "updated_at": "2017-10-09T09:29:29Z",
    "author_association": "NONE",
    "body": "+1",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/335106940/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/335117405",
    "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-335117405",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
    "id": 335117405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTExNzQwNQ==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-09T10:18:29Z",
    "updated_at": "2017-10-09T10:18:29Z",
    "author_association": "MEMBER",
    "body": "I guess this can be closed now. @Souptacular what is the process here?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/335117405/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
