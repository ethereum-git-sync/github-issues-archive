{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/900/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/900/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/900/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/900",
  "id": 299766994,
  "node_id": "MDU6SXNzdWUyOTk3NjY5OTQ=",
  "number": 900,
  "title": "ERC900: Simple Staking Interface",
  "user": {
    "login": "decanus",
    "id": 7621705,
    "node_id": "MDQ6VXNlcjc2MjE3MDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7621705?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/decanus",
    "html_url": "https://github.com/decanus",
    "followers_url": "https://api.github.com/users/decanus/followers",
    "following_url": "https://api.github.com/users/decanus/following{/other_user}",
    "gists_url": "https://api.github.com/users/decanus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/decanus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/decanus/subscriptions",
    "organizations_url": "https://api.github.com/users/decanus/orgs",
    "repos_url": "https://api.github.com/users/decanus/repos",
    "events_url": "https://api.github.com/users/decanus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/decanus/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 38,
  "created_at": "2018-02-23T16:20:35Z",
  "updated_at": "2022-01-01T23:11:54Z",
  "closed_at": "2022-01-01T23:11:54Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Preamble\r\n\r\n    EIP: 900\r\n    Title: Simple Staking Interface\r\n    Author: Dean Eigenmann <dean@tokenate.io>, Jorge Izquierdo <jorge@aragon.one>\r\n    Type: Standard Track\r\n    Category: ERC\r\n    Status: Draft\r\n    Created: 2018-02-22\r\n    \r\n## Abstract\r\n\r\nThe following standard describes a common staking interface allowing for easy to use staking systems. The interface is kept simple allowing for various use cases to be implemented. This standard describes the common functionality for staking as well as providing information on stakes.\r\n\r\n## Motivation\r\n\r\nAs we move to more token models, having a common staking interface which is familiar to users can be useful. The common interface can be used by a variety of applications, this common interface could be beneficial especially to things like Token curated registries which have recently gained popularity.\r\n\r\n## Specification\r\n\r\n```solidity\r\ninterface Staking {\r\n\r\n    event Staked(address indexed user, uint256 amount, uint256 total, bytes data);\r\n    event Unstaked(address indexed user, uint256 amount, uint256 total, bytes data);\r\n\r\n    function stake(uint256 amount, bytes data) public;\r\n    function stakeFor(address user, uint256 amount, bytes data) public;\r\n    function unstake(uint256 amount, bytes data) public;\r\n    function totalStakedFor(address addr) public view returns (uint256);\r\n    function totalStaked() public view returns (uint256);\r\n    function token() public view returns (address);\r\n    function supportsHistory() public pure returns (bool);\r\n\r\n    // optional\r\n    function lastStakedFor(address addr) public view returns (uint256);\r\n    function totalStakedForAt(address addr, uint256 blockNumber) public view returns (uint256);\r\n    function totalStakedAt(uint256 blockNumber) public view returns (uint256);\r\n}\r\n```\r\n\r\n### stake\r\n\r\nStakes a certain amount of tokens, this MUST transfer the given amount from the user.\r\n\r\n*The data field can be used to add signalling information in more complex staking applications*\r\n\r\nMUST trigger ```Staked``` event.\r\n\r\n### stakeFor\r\n\r\nStakes a certain amount of tokens, this MUST transfer the given amount from the caller.\r\n\r\n*The data field can be used to add signalling information in more complex staking applications*\r\n\r\nMUST trigger ```Staked``` event.\r\n\r\n### unstake\r\n\r\nUnstakes a certain amount of tokens, this SHOULD return the given amount of tokens to the user, if unstaking is currently not possible the function MUST revert.\r\n\r\n*The data field can be used to remove signalling information in more complex staking applications*\r\n\r\nMUST trigger ```Unstaked``` event.\r\n\r\n### totalStakedFor\r\n\r\nReturns the current total of tokens staked for an address.\r\n\r\n### totalStaked\r\n\r\nReturns the current total of tokens staked.\r\n\r\n### token\r\n\r\nAddress of the token being used by the staking interface.\r\n\r\n### supportsHistory\r\n\r\nMUST return true if the optional history functions are implemented, otherwise false. \r\n\r\n### lastStakedFor\r\n\r\n***OPTIONAL:** As not all staking systems require a complete history, this function is optional.*\r\n\r\nReturns last block address staked at.\r\n\r\n### totalStakedForAt\r\n\r\n***OPTIONAL:** As not all staking systems require a complete history, this function is optional.*\r\n\r\nReturns total amount of tokens staked at block for address.\r\n\r\n### totalStakedAt\r\n\r\n***OPTIONAL:** As not all staking systems require a complete history, this function is optional.*\r\n\r\nReturns the total tokens staked at block.\r\n\r\n## Implementation\r\n\r\n- [Stakebank](https://github.com/HarbourProject/stakebank)\r\n- [Aragon](https://github.com/aragon/aragon-apps/pull/101)\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/900/reactions",
    "total_count": 32,
    "+1": 22,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 10,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/900/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368108039",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-368108039",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 368108039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODEwODAzOQ==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T19:06:01Z",
    "updated_at": "2018-02-23T19:06:01Z",
    "author_association": "NONE",
    "body": "Do we want a `totalStaked()`? I see we have `totalStakedAt(blockNumber)` already.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368108039/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368108758",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-368108758",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 368108758,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODEwODc1OA==",
    "user": {
      "login": "decanus",
      "id": 7621705,
      "node_id": "MDQ6VXNlcjc2MjE3MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7621705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/decanus",
      "html_url": "https://github.com/decanus",
      "followers_url": "https://api.github.com/users/decanus/followers",
      "following_url": "https://api.github.com/users/decanus/following{/other_user}",
      "gists_url": "https://api.github.com/users/decanus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/decanus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/decanus/subscriptions",
      "organizations_url": "https://api.github.com/users/decanus/orgs",
      "repos_url": "https://api.github.com/users/decanus/repos",
      "events_url": "https://api.github.com/users/decanus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/decanus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T19:08:32Z",
    "updated_at": "2018-02-23T19:08:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Shrugs good point, seems like it could be important. I’ll add it",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368108758/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368109493",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-368109493",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 368109493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODEwOTQ5Mw==",
    "user": {
      "login": "izqui",
      "id": 447328,
      "node_id": "MDQ6VXNlcjQ0NzMyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/447328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/izqui",
      "html_url": "https://github.com/izqui",
      "followers_url": "https://api.github.com/users/izqui/followers",
      "following_url": "https://api.github.com/users/izqui/following{/other_user}",
      "gists_url": "https://api.github.com/users/izqui/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/izqui/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/izqui/subscriptions",
      "organizations_url": "https://api.github.com/users/izqui/orgs",
      "repos_url": "https://api.github.com/users/izqui/repos",
      "events_url": "https://api.github.com/users/izqui/events{/privacy}",
      "received_events_url": "https://api.github.com/users/izqui/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T19:11:09Z",
    "updated_at": "2018-02-23T19:11:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "It would just be `token.balanceOf(this)` in most cases, right? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368109493/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368110987",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-368110987",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 368110987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODExMDk4Nw==",
    "user": {
      "login": "decanus",
      "id": 7621705,
      "node_id": "MDQ6VXNlcjc2MjE3MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7621705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/decanus",
      "html_url": "https://github.com/decanus",
      "followers_url": "https://api.github.com/users/decanus/followers",
      "following_url": "https://api.github.com/users/decanus/following{/other_user}",
      "gists_url": "https://api.github.com/users/decanus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/decanus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/decanus/subscriptions",
      "organizations_url": "https://api.github.com/users/decanus/orgs",
      "repos_url": "https://api.github.com/users/decanus/repos",
      "events_url": "https://api.github.com/users/decanus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/decanus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T19:16:24Z",
    "updated_at": "2018-02-23T19:16:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@izqui good point, but maybe for consistency sake it makes sense",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368110987/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368115466",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-368115466",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 368115466,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODExNTQ2Ng==",
    "user": {
      "login": "decanus",
      "id": 7621705,
      "node_id": "MDQ6VXNlcjc2MjE3MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7621705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/decanus",
      "html_url": "https://github.com/decanus",
      "followers_url": "https://api.github.com/users/decanus/followers",
      "following_url": "https://api.github.com/users/decanus/following{/other_user}",
      "gists_url": "https://api.github.com/users/decanus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/decanus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/decanus/subscriptions",
      "organizations_url": "https://api.github.com/users/decanus/orgs",
      "repos_url": "https://api.github.com/users/decanus/repos",
      "events_url": "https://api.github.com/users/decanus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/decanus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T19:32:04Z",
    "updated_at": "2018-02-23T19:32:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Shrugs @izqui I updated",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368115466/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368117753",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-368117753",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 368117753,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODExNzc1Mw==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T19:41:06Z",
    "updated_at": "2018-02-23T19:41:06Z",
    "author_association": "NONE",
    "body": "Is it worth using Interface Detection instead of `supportsHistory`?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368117753/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368121817",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-368121817",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 368121817,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODEyMTgxNw==",
    "user": {
      "login": "decanus",
      "id": 7621705,
      "node_id": "MDQ6VXNlcjc2MjE3MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7621705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/decanus",
      "html_url": "https://github.com/decanus",
      "followers_url": "https://api.github.com/users/decanus/followers",
      "following_url": "https://api.github.com/users/decanus/following{/other_user}",
      "gists_url": "https://api.github.com/users/decanus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/decanus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/decanus/subscriptions",
      "organizations_url": "https://api.github.com/users/decanus/orgs",
      "repos_url": "https://api.github.com/users/decanus/repos",
      "events_url": "https://api.github.com/users/decanus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/decanus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T19:56:23Z",
    "updated_at": "2018-02-23T19:56:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "I feel like in this scenario a simple boolean function is more readable, than an interface detection function. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368121817/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368132068",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-368132068",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 368132068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODEzMjA2OA==",
    "user": {
      "login": "AtLeastSignificant",
      "id": 20522326,
      "node_id": "MDQ6VXNlcjIwNTIyMzI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/20522326?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AtLeastSignificant",
      "html_url": "https://github.com/AtLeastSignificant",
      "followers_url": "https://api.github.com/users/AtLeastSignificant/followers",
      "following_url": "https://api.github.com/users/AtLeastSignificant/following{/other_user}",
      "gists_url": "https://api.github.com/users/AtLeastSignificant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AtLeastSignificant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AtLeastSignificant/subscriptions",
      "organizations_url": "https://api.github.com/users/AtLeastSignificant/orgs",
      "repos_url": "https://api.github.com/users/AtLeastSignificant/repos",
      "events_url": "https://api.github.com/users/AtLeastSignificant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AtLeastSignificant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T20:39:02Z",
    "updated_at": "2018-02-23T20:39:02Z",
    "author_association": "NONE",
    "body": "Is there a staking protocol you can link to that is in a state where all the variables and rules are completely fleshed out?  I just want to make sure this interface covers all the bases / actually applies to where it may be used. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368132068/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368136327",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-368136327",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 368136327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODEzNjMyNw==",
    "user": {
      "login": "decanus",
      "id": 7621705,
      "node_id": "MDQ6VXNlcjc2MjE3MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7621705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/decanus",
      "html_url": "https://github.com/decanus",
      "followers_url": "https://api.github.com/users/decanus/followers",
      "following_url": "https://api.github.com/users/decanus/following{/other_user}",
      "gists_url": "https://api.github.com/users/decanus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/decanus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/decanus/subscriptions",
      "organizations_url": "https://api.github.com/users/decanus/orgs",
      "repos_url": "https://api.github.com/users/decanus/repos",
      "events_url": "https://api.github.com/users/decanus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/decanus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T20:57:17Z",
    "updated_at": "2018-02-23T20:57:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@AtLeastSignificant This standard grew out of something built for both Harbour and Aragon, we've tried to build it as generically as possible. The previous implementation from aragon has been reworked to fit to this standard.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368136327/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368140977",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-368140977",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 368140977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODE0MDk3Nw==",
    "user": {
      "login": "AtLeastSignificant",
      "id": 20522326,
      "node_id": "MDQ6VXNlcjIwNTIyMzI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/20522326?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AtLeastSignificant",
      "html_url": "https://github.com/AtLeastSignificant",
      "followers_url": "https://api.github.com/users/AtLeastSignificant/followers",
      "following_url": "https://api.github.com/users/AtLeastSignificant/following{/other_user}",
      "gists_url": "https://api.github.com/users/AtLeastSignificant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AtLeastSignificant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AtLeastSignificant/subscriptions",
      "organizations_url": "https://api.github.com/users/AtLeastSignificant/orgs",
      "repos_url": "https://api.github.com/users/AtLeastSignificant/repos",
      "events_url": "https://api.github.com/users/AtLeastSignificant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AtLeastSignificant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T21:17:00Z",
    "updated_at": "2018-02-23T21:17:00Z",
    "author_association": "NONE",
    "body": "@decanus Gotcha. Unfortunately, I'm not familiar enough with this to have very valuable input on your interface without a more concrete protocol to reference.\r\n\r\nOne thing I noticed though - the ```unstake``` function requires that tokens be returned to the user, but it's my understanding that this is not possible in staking systems where unstaking is a process that happens over a period of time (STEEM power as an example).  Is the period of time where the return happens assumed to be instant, or is the wording to imply that it can happen instantly or over time?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368140977/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368141680",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-368141680",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 368141680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODE0MTY4MA==",
    "user": {
      "login": "decanus",
      "id": 7621705,
      "node_id": "MDQ6VXNlcjc2MjE3MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7621705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/decanus",
      "html_url": "https://github.com/decanus",
      "followers_url": "https://api.github.com/users/decanus/followers",
      "following_url": "https://api.github.com/users/decanus/following{/other_user}",
      "gists_url": "https://api.github.com/users/decanus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/decanus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/decanus/subscriptions",
      "organizations_url": "https://api.github.com/users/decanus/orgs",
      "repos_url": "https://api.github.com/users/decanus/repos",
      "events_url": "https://api.github.com/users/decanus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/decanus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T21:20:16Z",
    "updated_at": "2018-02-23T21:21:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "@AtLeastSignificant the wording I used in the ```unstake``` function is probably a little wrong. Tokens must be returned if an unstake is successful, however if you aren't at a time yet where you can unstake this function can of course trigger a revert.\r\n\r\nUpdated the text a bit",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368141680/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368142382",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-368142382",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 368142382,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODE0MjM4Mg==",
    "user": {
      "login": "AtLeastSignificant",
      "id": 20522326,
      "node_id": "MDQ6VXNlcjIwNTIyMzI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/20522326?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AtLeastSignificant",
      "html_url": "https://github.com/AtLeastSignificant",
      "followers_url": "https://api.github.com/users/AtLeastSignificant/followers",
      "following_url": "https://api.github.com/users/AtLeastSignificant/following{/other_user}",
      "gists_url": "https://api.github.com/users/AtLeastSignificant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AtLeastSignificant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AtLeastSignificant/subscriptions",
      "organizations_url": "https://api.github.com/users/AtLeastSignificant/orgs",
      "repos_url": "https://api.github.com/users/AtLeastSignificant/repos",
      "events_url": "https://api.github.com/users/AtLeastSignificant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AtLeastSignificant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T21:23:15Z",
    "updated_at": "2018-02-23T21:23:15Z",
    "author_association": "NONE",
    "body": "@decanus hmm, then perhaps an ```initUnstake()``` function is more appropriate. In systems where unstaking is instant, a successful execution would return the tokens, but in systems where unstaking is something you do over time, a successful return would be confirmation that the status of the account has changed from staked to unstaked/unstaking.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368142382/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368142772",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-368142772",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 368142772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODE0Mjc3Mg==",
    "user": {
      "login": "decanus",
      "id": 7621705,
      "node_id": "MDQ6VXNlcjc2MjE3MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7621705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/decanus",
      "html_url": "https://github.com/decanus",
      "followers_url": "https://api.github.com/users/decanus/followers",
      "following_url": "https://api.github.com/users/decanus/following{/other_user}",
      "gists_url": "https://api.github.com/users/decanus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/decanus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/decanus/subscriptions",
      "organizations_url": "https://api.github.com/users/decanus/orgs",
      "repos_url": "https://api.github.com/users/decanus/repos",
      "events_url": "https://api.github.com/users/decanus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/decanus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T21:25:00Z",
    "updated_at": "2018-02-23T21:25:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well a user would still need to call unstake, splitting ```initUnstake``` and ```unstake``` into 2 separate functions seems to be a bit of an over complexity.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368142772/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368143872",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-368143872",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 368143872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODE0Mzg3Mg==",
    "user": {
      "login": "AtLeastSignificant",
      "id": 20522326,
      "node_id": "MDQ6VXNlcjIwNTIyMzI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/20522326?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AtLeastSignificant",
      "html_url": "https://github.com/AtLeastSignificant",
      "followers_url": "https://api.github.com/users/AtLeastSignificant/followers",
      "following_url": "https://api.github.com/users/AtLeastSignificant/following{/other_user}",
      "gists_url": "https://api.github.com/users/AtLeastSignificant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AtLeastSignificant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AtLeastSignificant/subscriptions",
      "organizations_url": "https://api.github.com/users/AtLeastSignificant/orgs",
      "repos_url": "https://api.github.com/users/AtLeastSignificant/repos",
      "events_url": "https://api.github.com/users/AtLeastSignificant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AtLeastSignificant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T21:29:54Z",
    "updated_at": "2018-02-23T21:29:54Z",
    "author_association": "NONE",
    "body": "I was more suggesting that ```initUnstake``` would replace ```unstake```.  That, or ```unstake``` should be worded to more generally reflect that unstaking could be a single instant process or multiple processes over time.  \r\n\r\nIt could just be that ```unstake``` is used and the protocol knows whether or not it's time to allow tokens to be returned, but that means checking both the current staked balance and other requirements like the time since last unstake and amount eligible to be unstaked right now.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368143872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368144815",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-368144815",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 368144815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODE0NDgxNQ==",
    "user": {
      "login": "decanus",
      "id": 7621705,
      "node_id": "MDQ6VXNlcjc2MjE3MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7621705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/decanus",
      "html_url": "https://github.com/decanus",
      "followers_url": "https://api.github.com/users/decanus/followers",
      "following_url": "https://api.github.com/users/decanus/following{/other_user}",
      "gists_url": "https://api.github.com/users/decanus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/decanus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/decanus/subscriptions",
      "organizations_url": "https://api.github.com/users/decanus/orgs",
      "repos_url": "https://api.github.com/users/decanus/repos",
      "events_url": "https://api.github.com/users/decanus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/decanus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T21:34:07Z",
    "updated_at": "2018-02-23T21:34:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "I wouldn't call it ```initUnstake``` as that usually means initialize, which definately then shouldn't run the unstake process. I think that unstake here is probably a better name which is generic enough. Also I would expect that an application knows some of the rules for unstaking, if they need to they could implement a function called ```canUnstake``` which they can use. However this being part of the standard seems a little off.\r\n\r\nWould like to hear @izqui's opinion on this.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368144815/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368172397",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-368172397",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 368172397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODE3MjM5Nw==",
    "user": {
      "login": "christoph2806",
      "id": 431015,
      "node_id": "MDQ6VXNlcjQzMTAxNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/431015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/christoph2806",
      "html_url": "https://github.com/christoph2806",
      "followers_url": "https://api.github.com/users/christoph2806/followers",
      "following_url": "https://api.github.com/users/christoph2806/following{/other_user}",
      "gists_url": "https://api.github.com/users/christoph2806/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/christoph2806/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/christoph2806/subscriptions",
      "organizations_url": "https://api.github.com/users/christoph2806/orgs",
      "repos_url": "https://api.github.com/users/christoph2806/repos",
      "events_url": "https://api.github.com/users/christoph2806/events{/privacy}",
      "received_events_url": "https://api.github.com/users/christoph2806/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T23:49:38Z",
    "updated_at": "2018-02-23T23:49:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "We have a very similar staking contract; see here for reference. \r\nhttps://github.com/etherisc/tokensale/blob/develop/contracts/protocol/TokenStake.sol",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368172397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368194336",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-368194336",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 368194336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODE5NDMzNg==",
    "user": {
      "login": "cbruguera",
      "id": 2256202,
      "node_id": "MDQ6VXNlcjIyNTYyMDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2256202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbruguera",
      "html_url": "https://github.com/cbruguera",
      "followers_url": "https://api.github.com/users/cbruguera/followers",
      "following_url": "https://api.github.com/users/cbruguera/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbruguera/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbruguera/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbruguera/subscriptions",
      "organizations_url": "https://api.github.com/users/cbruguera/orgs",
      "repos_url": "https://api.github.com/users/cbruguera/repos",
      "events_url": "https://api.github.com/users/cbruguera/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbruguera/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-24T03:12:51Z",
    "updated_at": "2018-02-24T03:12:51Z",
    "author_association": "NONE",
    "body": "Cool initiative. I'm just thinking that for the `stake` function to actually transfer user tokens to the contract (assuming these are ERC20 tokens), first there should be an `approve` call made on the token contract. This should most probably be manually invoked by the user first, correct? Or is there a way to perform these two steps programmatically? Would a delegatecall be able to approve token transfers on behalf of the sender?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368194336/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368216116",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-368216116",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 368216116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODIxNjExNg==",
    "user": {
      "login": "decanus",
      "id": 7621705,
      "node_id": "MDQ6VXNlcjc2MjE3MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7621705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/decanus",
      "html_url": "https://github.com/decanus",
      "followers_url": "https://api.github.com/users/decanus/followers",
      "following_url": "https://api.github.com/users/decanus/following{/other_user}",
      "gists_url": "https://api.github.com/users/decanus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/decanus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/decanus/subscriptions",
      "organizations_url": "https://api.github.com/users/decanus/orgs",
      "repos_url": "https://api.github.com/users/decanus/repos",
      "events_url": "https://api.github.com/users/decanus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/decanus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-24T09:48:32Z",
    "updated_at": "2018-02-24T09:48:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cbruguera No that's not possible, a user needs to execute that manually.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368216116/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368216191",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-368216191",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 368216191,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODIxNjE5MQ==",
    "user": {
      "login": "decanus",
      "id": 7621705,
      "node_id": "MDQ6VXNlcjc2MjE3MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7621705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/decanus",
      "html_url": "https://github.com/decanus",
      "followers_url": "https://api.github.com/users/decanus/followers",
      "following_url": "https://api.github.com/users/decanus/following{/other_user}",
      "gists_url": "https://api.github.com/users/decanus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/decanus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/decanus/subscriptions",
      "organizations_url": "https://api.github.com/users/decanus/orgs",
      "repos_url": "https://api.github.com/users/decanus/repos",
      "events_url": "https://api.github.com/users/decanus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/decanus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-24T09:49:32Z",
    "updated_at": "2018-02-24T09:49:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@christoph2806 Looks interesting, looks like a lot of your *code* work with the interface we have defined. \r\n\r\nI've seen a bunch of contracts that have this awfully similar interface.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368216191/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368260199",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-368260199",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 368260199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODI2MDE5OQ==",
    "user": {
      "login": "ngrinkevich",
      "id": 4235815,
      "node_id": "MDQ6VXNlcjQyMzU4MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4235815?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ngrinkevich",
      "html_url": "https://github.com/ngrinkevich",
      "followers_url": "https://api.github.com/users/ngrinkevich/followers",
      "following_url": "https://api.github.com/users/ngrinkevich/following{/other_user}",
      "gists_url": "https://api.github.com/users/ngrinkevich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ngrinkevich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ngrinkevich/subscriptions",
      "organizations_url": "https://api.github.com/users/ngrinkevich/orgs",
      "repos_url": "https://api.github.com/users/ngrinkevich/repos",
      "events_url": "https://api.github.com/users/ngrinkevich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ngrinkevich/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-24T21:05:25Z",
    "updated_at": "2018-02-24T21:05:25Z",
    "author_association": "NONE",
    "body": ">first there should be an approve call made on the token contract. This should most probably be manually invoked by the user first, correct? \r\n\r\n@cbruguera a solution that might help, there's so called `approveAndCall` pattern. Example can be found here [https://www.ethereum.org/token](https://www.ethereum.org/token) \r\n\r\nStaker just calls this function on the token contract providing the address of the staking contract as `_spender`, it approves the amount and calls `receiveApproval()` on the staking contract. Based on [zeppelin Standard token](https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/token/ERC20/StandardToken.sol) it can be combined into something like this:\r\n\r\n**StandardToken contract**\r\n```\r\n// Interface of recipient contract for approveAndCall pattern.\r\ninterface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) public; }\r\n\r\nfunction approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool success) {\r\n     tokenRecipient spender = tokenRecipient(_spender);\r\n     if (approve(_spender, _value)) {\r\n         spender.receiveApproval(msg.sender, _value, this, _extraData);\r\n         return true;\r\n     }\r\n}\r\n```\r\n\r\n**Staking contract**\r\n```\r\n// Staking contract constructor, we must know what token it will accept for staking\r\nfunction TokenStaking(address _tokenAddress) {\r\n    require(_tokenAddress != address(0x0));\r\n    token = StandardToken(_tokenAddress);\r\n}\r\n\r\nfunction receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) {\r\n     ...\r\n     // Make sure provided token contract is the same one linked to this contract.\r\n     require(StandardToken(_token) == token);\r\n     // at this point amount is approved and we can do transfers, i.e.\r\n     token.transferFrom(_from, this, _value);\r\n     ...\r\n}\r\n```\r\nWe're using this pattern at [Keep network](https://keep.network) and it works nicely 😀 Let me know if you need any further info, happy to help\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368260199/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368428090",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-368428090",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 368428090,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODQyODA5MA==",
    "user": {
      "login": "izqui",
      "id": 447328,
      "node_id": "MDQ6VXNlcjQ0NzMyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/447328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/izqui",
      "html_url": "https://github.com/izqui",
      "followers_url": "https://api.github.com/users/izqui/followers",
      "following_url": "https://api.github.com/users/izqui/following{/other_user}",
      "gists_url": "https://api.github.com/users/izqui/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/izqui/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/izqui/subscriptions",
      "organizations_url": "https://api.github.com/users/izqui/orgs",
      "repos_url": "https://api.github.com/users/izqui/repos",
      "events_url": "https://api.github.com/users/izqui/events{/privacy}",
      "received_events_url": "https://api.github.com/users/izqui/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-26T08:43:53Z",
    "updated_at": "2018-02-26T08:43:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@AtLeastSignificant @decanus I really like the idea of having asynchronous `unstake()`, however I think the function that initiates the action should still be called `unstake()` and maybe a subprotocol or a extension of this one with some optional methods, can be written to support the notion that a unstake action might take some time (some methods to get these timespans would be great too). Then the user can be expected to call to `finalizeUnstake()` to finally get their tokens.\r\n\r\n@ngrinkevich The problem with `approveAndCall` is that a [broken implementation](https://github.com/ConsenSys/Tokens/pull/45) was spread around too much and many tokens have a broken `approveAndCall` which is fine since no one uses the pattern in a generalized way (you can make sure the particular token you are using works well) but you cannot assume every token with the function will work properly.\r\n\r\nI would be however happy to extend this standard in a way that allows you to stake by doing a [ERC777](https://github.com/ethereum/EIPs/issues/777) or `send()` or a similar standard.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/368428090/reactions",
      "total_count": 5,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/379560098",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-379560098",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 379560098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTU2MDA5OA==",
    "user": {
      "login": "mhluongo",
      "id": 427505,
      "node_id": "MDQ6VXNlcjQyNzUwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/427505?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mhluongo",
      "html_url": "https://github.com/mhluongo",
      "followers_url": "https://api.github.com/users/mhluongo/followers",
      "following_url": "https://api.github.com/users/mhluongo/following{/other_user}",
      "gists_url": "https://api.github.com/users/mhluongo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mhluongo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mhluongo/subscriptions",
      "organizations_url": "https://api.github.com/users/mhluongo/orgs",
      "repos_url": "https://api.github.com/users/mhluongo/repos",
      "events_url": "https://api.github.com/users/mhluongo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mhluongo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-08T15:46:30Z",
    "updated_at": "2018-04-08T15:46:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "How do you expect this to work in systems that have eg minimum staking periods? I'd expect something like `startUnstake` and `withdraw`.\r\n\r\nMany staking schemes I've seen need to be able to extend how long funds are at risk after certain staker behavior. If we build infrastructure around this I'm not sure how tools would cope without another standard.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/379560098/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/379574727",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-379574727",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 379574727,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTU3NDcyNw==",
    "user": {
      "login": "decanus",
      "id": 7621705,
      "node_id": "MDQ6VXNlcjc2MjE3MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7621705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/decanus",
      "html_url": "https://github.com/decanus",
      "followers_url": "https://api.github.com/users/decanus/followers",
      "following_url": "https://api.github.com/users/decanus/following{/other_user}",
      "gists_url": "https://api.github.com/users/decanus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/decanus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/decanus/subscriptions",
      "organizations_url": "https://api.github.com/users/decanus/orgs",
      "repos_url": "https://api.github.com/users/decanus/repos",
      "events_url": "https://api.github.com/users/decanus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/decanus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-08T19:14:16Z",
    "updated_at": "2018-04-08T19:14:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mhluongo I might be missunderstanding but unstake could just revert if you haven’t staked for a minimum amount of time.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/379574727/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/379575116",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-379575116",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 379575116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTU3NTExNg==",
    "user": {
      "login": "mhluongo",
      "id": 427505,
      "node_id": "MDQ6VXNlcjQyNzUwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/427505?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mhluongo",
      "html_url": "https://github.com/mhluongo",
      "followers_url": "https://api.github.com/users/mhluongo/followers",
      "following_url": "https://api.github.com/users/mhluongo/following{/other_user}",
      "gists_url": "https://api.github.com/users/mhluongo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mhluongo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mhluongo/subscriptions",
      "organizations_url": "https://api.github.com/users/mhluongo/orgs",
      "repos_url": "https://api.github.com/users/mhluongo/repos",
      "events_url": "https://api.github.com/users/mhluongo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mhluongo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-08T19:19:44Z",
    "updated_at": "2018-04-08T19:19:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not doing a great job explaining 😊\r\n\r\nOur unstake process has a delay. Once you've claimed you want to unstake, you can't fully withdraw from the staking contract for 2 weeks. It's to prevent certain attacks where triggering slashing conditions are delayed- if stakers can quickly unstake, they can avoid getting slashed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/379575116/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/392335108",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-392335108",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 392335108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjMzNTEwOA==",
    "user": {
      "login": "johnhforrest",
      "id": 402949,
      "node_id": "MDQ6VXNlcjQwMjk0OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/402949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johnhforrest",
      "html_url": "https://github.com/johnhforrest",
      "followers_url": "https://api.github.com/users/johnhforrest/followers",
      "following_url": "https://api.github.com/users/johnhforrest/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnhforrest/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johnhforrest/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnhforrest/subscriptions",
      "organizations_url": "https://api.github.com/users/johnhforrest/orgs",
      "repos_url": "https://api.github.com/users/johnhforrest/repos",
      "events_url": "https://api.github.com/users/johnhforrest/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johnhforrest/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-27T14:30:07Z",
    "updated_at": "2018-05-27T14:30:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is it intentional that `stakeFor` essentially transfers your tokens to another party? I know the standard calls out SHOULD, but both the Stakebank and Aragon implementations do this. If I stake on behalf of someone else or on behalf of another application there's no way for me to get those tokens back.\r\n\r\nMaybe something like `unstakeFrom` is needed where users can dictate which stake they are trying to withdraw if they have staked for an address other than their own?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/392335108/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/392338734",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-392338734",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 392338734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjMzODczNA==",
    "user": {
      "login": "decanus",
      "id": 7621705,
      "node_id": "MDQ6VXNlcjc2MjE3MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7621705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/decanus",
      "html_url": "https://github.com/decanus",
      "followers_url": "https://api.github.com/users/decanus/followers",
      "following_url": "https://api.github.com/users/decanus/following{/other_user}",
      "gists_url": "https://api.github.com/users/decanus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/decanus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/decanus/subscriptions",
      "organizations_url": "https://api.github.com/users/decanus/orgs",
      "repos_url": "https://api.github.com/users/decanus/repos",
      "events_url": "https://api.github.com/users/decanus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/decanus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-27T15:17:53Z",
    "updated_at": "2018-05-27T22:56:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@johnhforrest Our definition is currently that method, I find it dangerous if you can stake for someone but then also unstake those tokens you have staked. Could lead to some weird issues, I think. Of course if you need it differently you could do so in your own contract. Additionally you could limit ```stakeFor``` to only allow the ```user == msg.sender```. There is a Stakebank implementation that currently enforces this, see: https://github.com/HarbourProject/stakebank/pull/6",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/392338734/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/392342915",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-392342915",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 392342915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjM0MjkxNQ==",
    "user": {
      "login": "johnhforrest",
      "id": 402949,
      "node_id": "MDQ6VXNlcjQwMjk0OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/402949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johnhforrest",
      "html_url": "https://github.com/johnhforrest",
      "followers_url": "https://api.github.com/users/johnhforrest/followers",
      "following_url": "https://api.github.com/users/johnhforrest/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnhforrest/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johnhforrest/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnhforrest/subscriptions",
      "organizations_url": "https://api.github.com/users/johnhforrest/orgs",
      "repos_url": "https://api.github.com/users/johnhforrest/repos",
      "events_url": "https://api.github.com/users/johnhforrest/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johnhforrest/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-27T16:01:26Z",
    "updated_at": "2018-05-27T16:01:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think having an `unstakeFrom` implies you could stake the same tokens for multiple accounts—once you've staked tokens they are transferred to the staking contract.\r\n\r\nThat being said, I do agree that something didn't feel quite right in the implementation I was writing where users could stake multiple times. I've added some logic now that each address staking tokens can only have a single stake. This stake can be for themselves, or for another address. `unstake` then becomes a withdrawal against that stake (i.e., their own tokens) as opposed to withdrawing against the total staked tokens for that address, so `unstakeFrom` isn't necessary.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/392342915/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/392383116",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-392383116",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 392383116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjM4MzExNg==",
    "user": {
      "login": "decanus",
      "id": 7621705,
      "node_id": "MDQ6VXNlcjc2MjE3MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7621705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/decanus",
      "html_url": "https://github.com/decanus",
      "followers_url": "https://api.github.com/users/decanus/followers",
      "following_url": "https://api.github.com/users/decanus/following{/other_user}",
      "gists_url": "https://api.github.com/users/decanus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/decanus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/decanus/subscriptions",
      "organizations_url": "https://api.github.com/users/decanus/orgs",
      "repos_url": "https://api.github.com/users/decanus/repos",
      "events_url": "https://api.github.com/users/decanus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/decanus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-27T22:56:23Z",
    "updated_at": "2018-05-27T22:56:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry, there was an error in my response. I meant unstake.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/392383116/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395578116",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-395578116",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 395578116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTU3ODExNg==",
    "user": {
      "login": "johnhforrest",
      "id": 402949,
      "node_id": "MDQ6VXNlcjQwMjk0OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/402949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johnhforrest",
      "html_url": "https://github.com/johnhforrest",
      "followers_url": "https://api.github.com/users/johnhforrest/followers",
      "following_url": "https://api.github.com/users/johnhforrest/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnhforrest/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johnhforrest/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnhforrest/subscriptions",
      "organizations_url": "https://api.github.com/users/johnhforrest/orgs",
      "repos_url": "https://api.github.com/users/johnhforrest/repos",
      "events_url": "https://api.github.com/users/johnhforrest/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johnhforrest/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T21:55:40Z",
    "updated_at": "2018-06-07T21:55:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@decanus Just finished my interpretation of the standard here: https://github.com/codex-protocol/contract.codex-registry/blob/master/contracts/ERC900/ERC900BasicStakeContainer.sol\r\n\r\nWith a battery of tests here: https://github.com/codex-protocol/contract.codex-registry/blob/master/test/core/CodexStakeContainer.test.js\r\n\r\nWould love to get your feedback & potentially include it in the implementations section if it's worth sharing. We took a different approach where staked tokens (even if staked for another address) always belong to the originator. Users can create multiple stakes, and can receive annualized interest on the perceived value of their stakes by pinging the contract after sufficient time has passed. The intent is that these would be long-term stakes that provide benefits to the user based on the amount of perceived tokens staked.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/395578116/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/397285743",
    "html_url": "https://github.com/ethereum/EIPs/issues/900#issuecomment-397285743",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/900",
    "id": 397285743,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzI4NTc0Mw==",
    "user": {
      "login": "decanus",
      "id": 7621705,
      "node_id": "MDQ6VXNlcjc2MjE3MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7621705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/decanus",
      "html_url": "https://github.com/decanus",
      "followers_url": "https://api.github.com/users/decanus/followers",
      "following_url": "https://api.github.com/users/decanus/following{/other_user}",
      "gists_url": "https://api.github.com/users/decanus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/decanus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/decanus/subscriptions",
      "organizations_url": "https://api.github.com/users/decanus/orgs",
      "repos_url": "https://api.github.com/users/decanus/repos",
      "events_url": "https://api.github.com/users/decanus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/decanus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T12:57:13Z",
    "updated_at": "2018-06-14T12:57:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@johnhforrest This sounds interesting, I will need to have a full look a little later. Feel free to add your implementation to the EIP, as it is merged you can add a PR.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/397285743/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
