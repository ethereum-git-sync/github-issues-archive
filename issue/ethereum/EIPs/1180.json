{
  "url": "https://api.github.com/repos/ethereum/EIPs/issues/1180",
  "repository_url": "https://api.github.com/repos/ethereum/EIPs",
  "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/1180/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/1180/comments",
  "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/1180/events",
  "html_url": "https://github.com/ethereum/EIPs/issues/1180",
  "id": 335153253,
  "node_id": "MDU6SXNzdWUzMzUxNTMyNTM=",
  "number": 1180,
  "title": "Non-Fungible Token State Verification (for exchanges)",
  "user": {
    "login": "mg6maciej",
    "id": 1316369,
    "node_id": "MDQ6VXNlcjEzMTYzNjk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1316369?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mg6maciej",
    "html_url": "https://github.com/mg6maciej",
    "followers_url": "https://api.github.com/users/mg6maciej/followers",
    "following_url": "https://api.github.com/users/mg6maciej/following{/other_user}",
    "gists_url": "https://api.github.com/users/mg6maciej/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mg6maciej/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mg6maciej/subscriptions",
    "organizations_url": "https://api.github.com/users/mg6maciej/orgs",
    "repos_url": "https://api.github.com/users/mg6maciej/repos",
    "events_url": "https://api.github.com/users/mg6maciej/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mg6maciej/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2328627851,
      "node_id": "MDU6TGFiZWwyMzI4NjI3ODUx",
      "url": "https://api.github.com/repos/ethereum/EIPs/labels/stale",
      "name": "stale",
      "color": "000000",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2018-06-24T05:47:35Z",
  "updated_at": "2021-12-19T06:13:20Z",
  "closed_at": "2021-12-19T06:13:20Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Motivation\r\n======\r\n\r\nThis is to start a discussion on **secure** exchange of NFTs, as there are potential problems with front running, where seller can change state of token (and lower its value) before buy transaction is added to blockchain.\r\n\r\nDetails & Implementation\r\n======\r\n\r\nWhile what we really own is a unique number known as tokenId in a namespace of certain contract, often it's something else that makes us want to own that number. Many tokens have state we look at when buying them, be it a number of won/lost battles by a bot, how many children a token currently has or if a kitty owns some awesome hats or balloons.\r\n\r\nSuch state can easily change between order fill transaction is sent to miners and mined, so for the benefit of users buying these numbers, it would be good to allow them to specify state they care about and fail order fill tx if their desired state is changed. This is particularly useful for protocols that do not escrow tokens like 0x or wyvern.\r\n\r\nAs this state can often live outside of the original NFT contract, I propose the following interface:\r\n\r\n```solidity\r\ninterface StateHashHolder {\r\n\r\n    function getStateHash(address nftContractAddr, uint tokenId) external view returns (bytes32);\r\n}\r\n```\r\n\r\nThe composed hash that is checked against would be a XOR of all hashes:\r\n\r\n```solidity\r\ncontract StateHashVerifier {\r\n\r\n    function calculateStateHash(address nftContractAddr, uint tokenId, StateHashHolder[] holder) public view returns (bytes32 hash) {\r\n        for (uint i = 0; i < holder.length; i++) {\r\n            hash ^= holder[i].getStateHash(nftContractAddr, tokenId);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThis is compatible with currently deployed NFTs, as they could implement `StateHashHolder` via separate contract.\r\n\r\nHere is how it could be implemented for CryptoKitties \"virginity\":\r\n\r\n```solidity\r\ninterface CryptoKitties {\r\n    \r\n    function getKitty(uint256 _id) external view returns (\r\n        bool isGestating,\r\n        bool isReady,\r\n        uint256 cooldownIndex,\r\n        uint256 nextActionAt,\r\n        uint256 siringWithId,\r\n        uint256 birthTime,\r\n        uint256 matronId,\r\n        uint256 sireId,\r\n        uint256 generation,\r\n        uint256 genes\r\n    );\r\n}\r\n\r\ncontract CryptoKittiesStateHash is StateHashHolder {\r\n    \r\n    function getStateHash(address nftContractAddr, uint tokenId) external view returns (bytes32) {\r\n        if (nftContractAddr != 0x06012c8cf97BEaD5deAe237070F9587f8E7A266d) {\r\n            return 0;\r\n        }\r\n        CryptoKitties cryptoKitties = CryptoKitties(nftContractAddr);\r\n        (,,, uint nextActionAt,,,,,,) = cryptoKitties.getKitty(tokenId);\r\n        // nextActionAt (aka cooldownEndBlock) changes every time you breed a pair of kitties\r\n        return keccak256(abi.encodePacked(nextActionAt));\r\n    }\r\n}\r\n```\r\n\r\nDo you see any other use-cases apart from when exchanging NFTs?\r\n",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/1180/reactions",
    "total_count": 9,
    "+1": 9,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/EIPs/issues/1180/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/400205301",
    "html_url": "https://github.com/ethereum/EIPs/issues/1180#issuecomment-400205301",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1180",
    "id": 400205301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDIwNTMwMQ==",
    "user": {
      "login": "OrdonTeam",
      "id": 4918734,
      "node_id": "MDQ6VXNlcjQ5MTg3MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4918734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OrdonTeam",
      "html_url": "https://github.com/OrdonTeam",
      "followers_url": "https://api.github.com/users/OrdonTeam/followers",
      "following_url": "https://api.github.com/users/OrdonTeam/following{/other_user}",
      "gists_url": "https://api.github.com/users/OrdonTeam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OrdonTeam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OrdonTeam/subscriptions",
      "organizations_url": "https://api.github.com/users/OrdonTeam/orgs",
      "repos_url": "https://api.github.com/users/OrdonTeam/repos",
      "events_url": "https://api.github.com/users/OrdonTeam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OrdonTeam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-26T07:17:35Z",
    "updated_at": "2018-06-26T07:17:35Z",
    "author_association": "NONE",
    "body": "Why do we need array of StateHashHolder? Wouldn't one be enough? Extending hash functionality can be achieved by creating new StateHashHolder which uses previous one.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/400205301/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/400264777",
    "html_url": "https://github.com/ethereum/EIPs/issues/1180#issuecomment-400264777",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1180",
    "id": 400264777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDI2NDc3Nw==",
    "user": {
      "login": "mg6maciej",
      "id": 1316369,
      "node_id": "MDQ6VXNlcjEzMTYzNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1316369?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mg6maciej",
      "html_url": "https://github.com/mg6maciej",
      "followers_url": "https://api.github.com/users/mg6maciej/followers",
      "following_url": "https://api.github.com/users/mg6maciej/following{/other_user}",
      "gists_url": "https://api.github.com/users/mg6maciej/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mg6maciej/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mg6maciej/subscriptions",
      "organizations_url": "https://api.github.com/users/mg6maciej/orgs",
      "repos_url": "https://api.github.com/users/mg6maciej/repos",
      "events_url": "https://api.github.com/users/mg6maciej/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mg6maciej/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-26T10:48:22Z",
    "updated_at": "2018-06-26T10:48:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@OrdonTeam There are many unrelated contracts that might keep state of a single token.\r\n\r\nLet's take CryptoKitties as an example: as a user when buying a kitty, you may be interested in any combination of:\r\n1) how many children the one you decided to buy has,\r\n2) if it has a hat on kittyhats.co,\r\n3) never took part in a race (or never lost one) on kittyrace.com\r\n\r\nEach of these states is kept in separate contracts and hashes of their state will likely be calculated inside such contracts in future (or can be done by deploying separate contract as shown above), so there is a need for exchange platforms to uniformly verify for all contracts users care about if state matches.\r\nThis could be done if user provides a list of contracts implementing `StateHashHolder` and list of expected hashes from each contract, but that would use more gas than if user provided list of `StateHashHolder` and a single hash, hence a need for `StateHashVerifier`, which could be deployed once using method described in #820 or every exchange platform could copy the simple loop code that XORs hashes inside their own contracts.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/400264777/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/400312822",
    "html_url": "https://github.com/ethereum/EIPs/issues/1180#issuecomment-400312822",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1180",
    "id": 400312822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDMxMjgyMg==",
    "user": {
      "login": "OrdonTeam",
      "id": 4918734,
      "node_id": "MDQ6VXNlcjQ5MTg3MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4918734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OrdonTeam",
      "html_url": "https://github.com/OrdonTeam",
      "followers_url": "https://api.github.com/users/OrdonTeam/followers",
      "following_url": "https://api.github.com/users/OrdonTeam/following{/other_user}",
      "gists_url": "https://api.github.com/users/OrdonTeam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OrdonTeam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OrdonTeam/subscriptions",
      "organizations_url": "https://api.github.com/users/OrdonTeam/orgs",
      "repos_url": "https://api.github.com/users/OrdonTeam/repos",
      "events_url": "https://api.github.com/users/OrdonTeam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OrdonTeam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-26T13:41:33Z",
    "updated_at": "2018-06-26T13:49:43Z",
    "author_association": "NONE",
    "body": ":+1: I didn't get that as a buyer I'm choosing in which `StateHashHolder` I'm interested in. Now it makes\r\n perfect sense.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/400312822/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/400446298",
    "html_url": "https://github.com/ethereum/EIPs/issues/1180#issuecomment-400446298",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1180",
    "id": 400446298,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDQ0NjI5OA==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-26T20:13:15Z",
    "updated_at": "2018-06-26T20:13:15Z",
    "author_association": "NONE",
    "body": "Neat! Defining state holders & the oracles around them will be an interesting problem, but I like this approach for condensing that information into an on-chain-checkable value.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/400446298/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/400549846",
    "html_url": "https://github.com/ethereum/EIPs/issues/1180#issuecomment-400549846",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1180",
    "id": 400549846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDU0OTg0Ng==",
    "user": {
      "login": "mg6maciej",
      "id": 1316369,
      "node_id": "MDQ6VXNlcjEzMTYzNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1316369?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mg6maciej",
      "html_url": "https://github.com/mg6maciej",
      "followers_url": "https://api.github.com/users/mg6maciej/followers",
      "following_url": "https://api.github.com/users/mg6maciej/following{/other_user}",
      "gists_url": "https://api.github.com/users/mg6maciej/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mg6maciej/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mg6maciej/subscriptions",
      "organizations_url": "https://api.github.com/users/mg6maciej/orgs",
      "repos_url": "https://api.github.com/users/mg6maciej/repos",
      "events_url": "https://api.github.com/users/mg6maciej/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mg6maciej/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-27T05:45:26Z",
    "updated_at": "2018-06-27T05:47:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wyvern already has something similar built-in (search for `STATICCALL`), also for seller side:\r\n\r\nhttps://github.com/ProjectWyvern/wyvern-protocol/blob/master/build/whitepaper.pdf\r\n\r\nhttps://github.com/ProjectWyvern/wyvern-ethereum/blob/master/contracts/exchange/ExchangeCore.sol\r\n\r\nWould like to see examples using this.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/400549846/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/401573458",
    "html_url": "https://github.com/ethereum/EIPs/issues/1180#issuecomment-401573458",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1180",
    "id": 401573458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTU3MzQ1OA==",
    "user": {
      "login": "mattlockyer",
      "id": 321340,
      "node_id": "MDQ6VXNlcjMyMTM0MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/321340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattlockyer",
      "html_url": "https://github.com/mattlockyer",
      "followers_url": "https://api.github.com/users/mattlockyer/followers",
      "following_url": "https://api.github.com/users/mattlockyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattlockyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattlockyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattlockyer/subscriptions",
      "organizations_url": "https://api.github.com/users/mattlockyer/orgs",
      "repos_url": "https://api.github.com/users/mattlockyer/repos",
      "events_url": "https://api.github.com/users/mattlockyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattlockyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-30T23:51:08Z",
    "updated_at": "2018-06-30T23:51:08Z",
    "author_association": "NONE",
    "body": "@mg6maciej love this idea. I just had a conversation with @mudgen and this topic came up!\r\n\r\nWe definitely need exchanges, wallet and dapps to be able to treat common token types as equals, provided their on-chain representations meet a certain level of criteria.\r\n\r\nThanks for posting and starting the conversation! 😃 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/401573458/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/413447978",
    "html_url": "https://github.com/ethereum/EIPs/issues/1180#issuecomment-413447978",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1180",
    "id": 413447978,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzQ0Nzk3OA==",
    "user": {
      "login": "mudgen",
      "id": 49092,
      "node_id": "MDQ6VXNlcjQ5MDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/49092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mudgen",
      "html_url": "https://github.com/mudgen",
      "followers_url": "https://api.github.com/users/mudgen/followers",
      "following_url": "https://api.github.com/users/mudgen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mudgen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mudgen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mudgen/subscriptions",
      "organizations_url": "https://api.github.com/users/mudgen/orgs",
      "repos_url": "https://api.github.com/users/mudgen/repos",
      "events_url": "https://api.github.com/users/mudgen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mudgen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T07:08:34Z",
    "updated_at": "2018-08-16T07:08:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this standard is important functionality and I like what @mg6maciej has suggested here.\r\n\r\nI implemented the ` getStateHash(uint256 _tokenId)` function directly in the [Mokens contract](https://etherscan.io/address/0x8e332fe4df2876cce3b9e6cab160c61ef4c31f77#code) as a way to verify that no child NFTs of a moken have been removed or added when transferring a moken.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/413447978/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986173599",
    "html_url": "https://github.com/ethereum/EIPs/issues/1180#issuecomment-986173599",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1180",
    "id": 986173599,
    "node_id": "IC_kwDOAq426M46x9Cf",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-05T06:13:18Z",
    "updated_at": "2021-12-05T06:13:18Z",
    "author_association": "NONE",
    "body": "There has been no activity on this issue for two months. It will be closed in a week if no further activity occurs. If you would like to move this EIP forward, please respond to any outstanding feedback or add a comment indicating that you have addressed all required feedback and are ready for a review.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/986173599/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997336263",
    "html_url": "https://github.com/ethereum/EIPs/issues/1180#issuecomment-997336263",
    "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/1180",
    "id": 997336263,
    "node_id": "IC_kwDOAq426M47ciTH",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-12-19T06:13:19Z",
    "updated_at": "2021-12-19T06:13:19Z",
    "author_association": "NONE",
    "body": "This issue was closed due to inactivity. If you are still pursuing it, feel free to reopen it and respond to any feedback or request a review in a comment.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/997336263/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
