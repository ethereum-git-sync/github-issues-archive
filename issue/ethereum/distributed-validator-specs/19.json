{
  "url": "https://api.github.com/repos/ethereum/distributed-validator-specs/issues/19",
  "repository_url": "https://api.github.com/repos/ethereum/distributed-validator-specs",
  "labels_url": "https://api.github.com/repos/ethereum/distributed-validator-specs/issues/19/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/distributed-validator-specs/issues/19/comments",
  "events_url": "https://api.github.com/repos/ethereum/distributed-validator-specs/issues/19/events",
  "html_url": "https://github.com/ethereum/distributed-validator-specs/issues/19",
  "id": 1086446567,
  "node_id": "I_kwDOGSVrRM5Awdvn",
  "number": 19,
  "title": "Simplify the consensus module: Move the calls to the BN out of the consensus module",
  "user": {
    "login": "saltiniroberto",
    "id": 38655434,
    "node_id": "MDQ6VXNlcjM4NjU1NDM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/38655434?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/saltiniroberto",
    "html_url": "https://github.com/saltiniroberto",
    "followers_url": "https://api.github.com/users/saltiniroberto/followers",
    "following_url": "https://api.github.com/users/saltiniroberto/following{/other_user}",
    "gists_url": "https://api.github.com/users/saltiniroberto/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/saltiniroberto/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/saltiniroberto/subscriptions",
    "organizations_url": "https://api.github.com/users/saltiniroberto/orgs",
    "repos_url": "https://api.github.com/users/saltiniroberto/repos",
    "events_url": "https://api.github.com/users/saltiniroberto/events{/privacy}",
    "received_events_url": "https://api.github.com/users/saltiniroberto/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-12-22T04:46:59Z",
  "updated_at": "2022-01-12T00:58:39Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "Currently, the consensus module of a node is expected to communicate with the BN to retrieve the data to propose when the node becomes the leader of the current consensus instance. This creates a dependency between the consensus engine and the BN.\r\n\r\nThis issue proposes to remove such a dependency by moving the call to the BN asking for the data to propose out of the consensus engine.\r\n\r\nIn this case, the distributed consensus module would\r\n- be parametrised by a validity function `valid`\r\n- take as input a value `vi` by each of the nodes participating in the protocol\r\n- ensure that any agreed upon value `vo` is such that:\r\n   - `valid(vo) = True`\r\n   - if all the nodes are honest, then `vo` corresponds to one of the values `vi` provided in input to one of the nodes participating in the protocol.\r\n   \r\n### Pros\r\n- Reduced complexity of the consensus module which imply\r\n  - Reduced complexity in developing pluggable consensus protocols that can be used by the DVC\r\n  \r\n### Cons\r\n- Increased number of API calls to the BNs when using leader based consensus protocols. This is because the DVC will need to communicate with the BN to retrieve the data that the node will need to propose if they become the leader as opposed to communicating with the BN only when the node is actually the leader.\r\n   ",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/distributed-validator-specs/issues/19/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/distributed-validator-specs/issues/19/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/distributed-validator-specs/issues/comments/999334581",
    "html_url": "https://github.com/ethereum/distributed-validator-specs/issues/19#issuecomment-999334581",
    "issue_url": "https://api.github.com/repos/ethereum/distributed-validator-specs/issues/19",
    "id": 999334581,
    "node_id": "IC_kwDOGSVrRM47kKK1",
    "user": {
      "login": "saltiniroberto",
      "id": 38655434,
      "node_id": "MDQ6VXNlcjM4NjU1NDM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/38655434?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saltiniroberto",
      "html_url": "https://github.com/saltiniroberto",
      "followers_url": "https://api.github.com/users/saltiniroberto/followers",
      "following_url": "https://api.github.com/users/saltiniroberto/following{/other_user}",
      "gists_url": "https://api.github.com/users/saltiniroberto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saltiniroberto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saltiniroberto/subscriptions",
      "organizations_url": "https://api.github.com/users/saltiniroberto/orgs",
      "repos_url": "https://api.github.com/users/saltiniroberto/repos",
      "events_url": "https://api.github.com/users/saltiniroberto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saltiniroberto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-22T07:03:27Z",
    "updated_at": "2021-12-22T07:03:27Z",
    "author_association": "COLLABORATOR",
    "body": "Another \r\n### Pros \r\nis\r\n- Increased decoupling of the software components",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/distributed-validator-specs/issues/comments/999334581/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/distributed-validator-specs/issues/comments/1004909340",
    "html_url": "https://github.com/ethereum/distributed-validator-specs/issues/19#issuecomment-1004909340",
    "issue_url": "https://api.github.com/repos/ethereum/distributed-validator-specs/issues/19",
    "id": 1004909340,
    "node_id": "IC_kwDOGSVrRM475bMc",
    "user": {
      "login": "OisinKyne",
      "id": 4981644,
      "node_id": "MDQ6VXNlcjQ5ODE2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4981644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OisinKyne",
      "html_url": "https://github.com/OisinKyne",
      "followers_url": "https://api.github.com/users/OisinKyne/followers",
      "following_url": "https://api.github.com/users/OisinKyne/following{/other_user}",
      "gists_url": "https://api.github.com/users/OisinKyne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OisinKyne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OisinKyne/subscriptions",
      "organizations_url": "https://api.github.com/users/OisinKyne/orgs",
      "repos_url": "https://api.github.com/users/OisinKyne/repos",
      "events_url": "https://api.github.com/users/OisinKyne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OisinKyne/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-04T15:31:34Z",
    "updated_at": "2022-01-04T15:31:34Z",
    "author_association": "NONE",
    "body": "I agree that coming to consensus on a duty separate to a BN is much cleaner, however I think Aditya has gone down the route proposed due to sometimes needing a BN to be able to decide on what *should* be the consensus block, hinted at [here](https://github.com/ethereum/distributed-validator-specs/blob/dev/README.md?plain=1#L57). \r\n\r\nThe implication is, in a simple BFT game, whatever the leader proposes that gets the required number of approvals from others should be the consensus/correct pick, however, it might not objectively be the correct pick in real life, it's just what the leader proposed and most people agreed to, the actual 'correct' choice for a duty would involve applying LMD-GHOST to the candidate duty, and rejecting the proposal if the candidate is not the fork with the heaviest weight. (However this has latency issues so it's not included in scope as mentioned in the above link)\r\n\r\nIf we didn't cross check candidate duties against a BN to see if it follows the fork choice rule correctly, we could unwittingly enable a balancing attack on the main network, because our DVs could be convinced to vote on things that are *valid*, but not the most correct as per LMD-GHOST, potentially enabling a sophisticated attacker to pull off short re-orgs with our support due to DVs not being able to include LMD-GHOST into our consensus algorithm. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/distributed-validator-specs/issues/comments/1004909340/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/distributed-validator-specs/issues/comments/1010521855",
    "html_url": "https://github.com/ethereum/distributed-validator-specs/issues/19#issuecomment-1010521855",
    "issue_url": "https://api.github.com/repos/ethereum/distributed-validator-specs/issues/19",
    "id": 1010521855,
    "node_id": "IC_kwDOGSVrRM48O1b_",
    "user": {
      "login": "saltiniroberto",
      "id": 38655434,
      "node_id": "MDQ6VXNlcjM4NjU1NDM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/38655434?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saltiniroberto",
      "html_url": "https://github.com/saltiniroberto",
      "followers_url": "https://api.github.com/users/saltiniroberto/followers",
      "following_url": "https://api.github.com/users/saltiniroberto/following{/other_user}",
      "gists_url": "https://api.github.com/users/saltiniroberto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saltiniroberto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saltiniroberto/subscriptions",
      "organizations_url": "https://api.github.com/users/saltiniroberto/orgs",
      "repos_url": "https://api.github.com/users/saltiniroberto/repos",
      "events_url": "https://api.github.com/users/saltiniroberto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saltiniroberto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-12T00:58:39Z",
    "updated_at": "2022-01-12T00:58:39Z",
    "author_association": "COLLABORATOR",
    "body": "Thanks @OisinKyne for raising this point.\r\nIn my original proposal, I (wrongly) assumed that the validity check could have been performed without requiring communication between the DVC and the BN.\r\n\r\nIn [this document](https://docs.google.com/document/d/14scGE-pT2dmZbHbGUHa2mTxK9ZJx6Ka0GHsl4ct2fbE), I have started exploring some of the possible design solutions for checking that the block proposed is on the correct fork.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/distributed-validator-specs/issues/comments/1010521855/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
