{
  "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/349",
  "repository_url": "https://api.github.com/repos/ethereum/execution-spec-tests",
  "labels_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/349/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/349/comments",
  "events_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/349/events",
  "html_url": "https://github.com/ethereum/execution-spec-tests/issues/349",
  "id": 2014971906,
  "node_id": "I_kwDOIQGLK854GggC",
  "number": 349,
  "title": "Verkle Mega Issue: Goodbye Merkle",
  "user": {
    "login": "spencer-tb",
    "id": 60348173,
    "node_id": "MDQ6VXNlcjYwMzQ4MTcz",
    "avatar_url": "https://avatars.githubusercontent.com/u/60348173?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/spencer-tb",
    "html_url": "https://github.com/spencer-tb",
    "followers_url": "https://api.github.com/users/spencer-tb/followers",
    "following_url": "https://api.github.com/users/spencer-tb/following{/other_user}",
    "gists_url": "https://api.github.com/users/spencer-tb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/spencer-tb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/spencer-tb/subscriptions",
    "organizations_url": "https://api.github.com/users/spencer-tb/orgs",
    "repos_url": "https://api.github.com/users/spencer-tb/repos",
    "events_url": "https://api.github.com/users/spencer-tb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/spencer-tb/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 6008515308,
      "node_id": "LA_kwDOIQGLK88AAAABZiKq7A",
      "url": "https://api.github.com/repos/ethereum/execution-spec-tests/labels/scope:evm",
      "name": "scope:evm",
      "color": "3D41B2",
      "default": false,
      "description": "Scope: evm_transition_tool package"
    },
    {
      "id": 6008521943,
      "node_id": "LA_kwDOIQGLK88AAAABZiLE1w",
      "url": "https://api.github.com/repos/ethereum/execution-spec-tests/labels/scope:tests",
      "name": "scope:tests",
      "color": "A5D897",
      "default": false,
      "description": "Scope: Test cases"
    },
    {
      "id": 6008548046,
      "node_id": "LA_kwDOIQGLK88AAAABZiMqzg",
      "url": "https://api.github.com/repos/ethereum/execution-spec-tests/labels/type:test",
      "name": "type:test",
      "color": "7080CE",
      "default": false,
      "description": "Type: Test"
    },
    {
      "id": 6008623232,
      "node_id": "LA_kwDOIQGLK88AAAABZiRQgA",
      "url": "https://api.github.com/repos/ethereum/execution-spec-tests/labels/type:feat",
      "name": "type:feat",
      "color": "0e8a16",
      "default": false,
      "description": "type: Feature"
    },
    {
      "id": 6008698715,
      "node_id": "LA_kwDOIQGLK88AAAABZiV3Ww",
      "url": "https://api.github.com/repos/ethereum/execution-spec-tests/labels/scope:fw",
      "name": "scope:fw",
      "color": "30EAF1",
      "default": false,
      "description": "Scope: Framework (evm|tools|forks|pytest)"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-11-28T17:41:26Z",
  "updated_at": "2023-11-28T17:41:26Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Execution Layer EIPs for inclusion\r\n- [**EIP-6800:**](https://eips.ethereum.org/EIPS/eip-6800) Ethereum state using a unified Verkle tree, \r\n  - Introduces a new Verkle state tree alongside the existing hexary Patricia tree.\r\n- [**EIP-7545:**](https://eips.ethereum.org/EIPS/eip-7545) Verkle proof verification precompile,\r\n  - The addition of a precompiled contract to provide up-to-date state proof verification capabilities for smart contracts.\r\n - [**EIP-4762:**](https://eips.ethereum.org/EIPS/eip-4762) Statelessness gas cost changes:\r\n   - Introduces changes in the gas schedule to reflect the costs of creating a witness.\r\n   \r\n ## Testing Strategy\r\n\r\nAssuming each client still keeps track of the entire state and returns an alloc from t8n:\r\n- After each block is processed by t8n, we ask for a witness from the client using another command `evm getwitness` or we require t8n to return it within the `result.json` if possible.\r\n- If we can also generate a witness from the alloc.json we get back from t8n we can verify that ours matches with the witness from the client, returning an error otherwise.\r\n- We can then add the witness as a field within the block section of the fixture - maybe `blockWitness`.\r\n- This would be great for engine/rpc tests, i.e before we execute a block with engine_newPayload we assert that the value received from`get_VerkleWitness` matches the value within the fixtures, somewhat leading a path for stateless client tests.\r\n\r\n### External Requirements\r\n\r\n- [ ] A t8n tool capable of filling tests marked with 6800, i.e Shanghai+6800\r\n- [ ] A seperate command or value returned from t8n, for the block witness\r\n\r\n### Client Verkle Branches\r\n\r\n- Go Ethereum: \r\n- Nethermind:\r\n- Ethereumjs: \r\n- Besu: WIP üèóÔ∏è\r\n- Erigon: WIP üèóÔ∏è\r\n\r\n### Current Todos\r\n- [ ] Update geth t8n to fill existing tests with verkle",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/349/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/349/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
