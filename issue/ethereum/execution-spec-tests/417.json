{
  "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/417",
  "repository_url": "https://api.github.com/repos/ethereum/execution-spec-tests",
  "labels_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/417/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/417/comments",
  "events_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/417/events",
  "html_url": "https://github.com/ethereum/execution-spec-tests/issues/417",
  "id": 2107874301,
  "node_id": "I_kwDOIQGLK859o5v9",
  "number": 417,
  "title": "invalid block json description",
  "user": {
    "login": "winsvega",
    "id": 4492341,
    "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/winsvega",
    "html_url": "https://github.com/winsvega",
    "followers_url": "https://api.github.com/users/winsvega/followers",
    "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
    "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
    "organizations_url": "https://api.github.com/users/winsvega/orgs",
    "repos_url": "https://api.github.com/users/winsvega/repos",
    "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
    "received_events_url": "https://api.github.com/users/winsvega/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2024-01-30T13:31:23Z",
  "updated_at": "2024-01-30T17:15:13Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "\r\n`(cancun/eip4844_blobs/tests/tmp/tmptest_e63dbf6c_a8b3_42b0_92dd_7f524cd5686f/test_excess_blob_gas_fork_transition.py::test_invalid_post_fork_block_without_blob_fields[fork_ShanghaiToCancunAtTime15k-blockchain_test-excess_blob_gas_missing_False-blob_gas_used_missing_True], step: BlockchainTest)`\r\n\r\n```\r\nError: BlockchainTestInFilled convertion error: BlockchainTestBlock convertion error: BlockHeader4844 parse error: Expected field 'blobGasUsed' not found in config: BlockHeader4844 blockHeader\r\n\"blockHeader\" : {\r\n    \"baseFeePerGas\" : \"0x07\",\r\n    \"bloom\" : \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\r\n    \"coinbase\" : \"0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba\",\r\n    \"difficulty\" : \"0x00\",\r\n    \"excessBlobGas\" : \"0x00\",\r\n    \"extraData\" : \"0x\",\r\n    \"gasLimit\" : \"0x016345785d8a0000\",\r\n    \"gasUsed\" : \"0x00\",\r\n    \"hash\" : \"0x5155c84b69a8af6ee6f06d7414f1e434d01dbd8a5eab1ac429b246525e319e16\",\r\n    \"mixHash\" : \"0x0000000000000000000000000000000000000000000000000000000000000000\",\r\n    \"nonce\" : \"0x0000000000000000\",\r\n    \"number\" : \"0x10\",\r\n    \"parentBeaconBlockRoot\" : \"0x0000000000000000000000000000000000000000000000000000000000000000\",\r\n    \"parentHash\" : \"0x64177ba1942c915cc9c4d95a69b27befb29a3e0c2a56882fba4fb8c5bf367fea\",\r\n    \"receiptTrie\" : \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\r\n    \"stateRoot\" : \"0x28415a6a7e08c2fb01beaa4d4e8397ed3c51f8c7400d3619803652afedf658c1\",\r\n    \"timestamp\" : \"0x3a98\",\r\n    \"transactionsTrie\" : \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\r\n    \"uncleHash\" : \"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\",\r\n    \"withdrawalsRoot\" : \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\"\r\n}\r\n```\r\n\r\nthe json is not a plain transcript of rlp. \r\nit is a static structure. because rlp does not have meaning (keys) of its elements. if we add or substruct one element from the rlp we can't just do the same in json. (substraction in this case) because some clients are trying to construct a block from this jsons (instead of rlps) and because it violates the validity of rlp structure making it an invalid rlp structure test. \r\n\r\nin blockchain tests we assume that the rlp are all of a valid structure. (no wrong rlp length bytes, no wrong rlp bytes, correct ethereum structures (field count and field type) ) \r\n\r\nall the cases when rlp is invalid is another type of a test. so we can provide such vectors there (tx with missing or extra fields, invalid rlp encoding, invalid rlp field types, over 256 bit values) \r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/417/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/417/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/comments/1917276893",
    "html_url": "https://github.com/ethereum/execution-spec-tests/issues/417#issuecomment-1917276893",
    "issue_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/417",
    "id": 1917276893,
    "node_id": "IC_kwDOIQGLK85yR1Ld",
    "user": {
      "login": "spencer-tb",
      "id": 60348173,
      "node_id": "MDQ6VXNlcjYwMzQ4MTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/60348173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/spencer-tb",
      "html_url": "https://github.com/spencer-tb",
      "followers_url": "https://api.github.com/users/spencer-tb/followers",
      "following_url": "https://api.github.com/users/spencer-tb/following{/other_user}",
      "gists_url": "https://api.github.com/users/spencer-tb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/spencer-tb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/spencer-tb/subscriptions",
      "organizations_url": "https://api.github.com/users/spencer-tb/orgs",
      "repos_url": "https://api.github.com/users/spencer-tb/repos",
      "events_url": "https://api.github.com/users/spencer-tb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/spencer-tb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-30T15:42:09Z",
    "updated_at": "2024-01-30T15:42:09Z",
    "author_association": "MEMBER",
    "body": "This should potentially be a hive only test. Where we get the appropriate error response from the engine API.\r\n\r\nUsing geth `evm blocktest` we get:\r\n```\r\nBlock decoding failed  index=15 err=\"rlp: input string too long for uint64, decoding into (types.Block)(types.extblock).Header.BlobGasUsed\"\r\n```\r\nWhich is technically not the correct invalidity. And like you mention I don't think there is a way to deterministically get the appropriate error response solely from the rlp",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/comments/1917276893/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/comments/1917520115",
    "html_url": "https://github.com/ethereum/execution-spec-tests/issues/417#issuecomment-1917520115",
    "issue_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/417",
    "id": 1917520115,
    "node_id": "IC_kwDOIQGLK85ySwjz",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-30T17:15:12Z",
    "updated_at": "2024-01-30T17:15:12Z",
    "author_association": "MEMBER",
    "body": "The invalid rlps or block import of invalid structure rlps should be in a separate class of tests. Thats why I added rlp decoded field, because otherwise it's impossoble to decode an invalid rlp",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/comments/1917520115/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
