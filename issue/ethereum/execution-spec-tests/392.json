{
  "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/392",
  "repository_url": "https://api.github.com/repos/ethereum/execution-spec-tests",
  "labels_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/392/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/392/comments",
  "events_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/392/events",
  "html_url": "https://github.com/ethereum/execution-spec-tests/issues/392",
  "id": 2090710583,
  "node_id": "I_kwDOIQGLK858nbY3",
  "number": 392,
  "title": "IDEA: add debug functions",
  "user": {
    "login": "winsvega",
    "id": 4492341,
    "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/winsvega",
    "html_url": "https://github.com/winsvega",
    "followers_url": "https://api.github.com/users/winsvega/followers",
    "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
    "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
    "organizations_url": "https://api.github.com/users/winsvega/orgs",
    "repos_url": "https://api.github.com/users/winsvega/repos",
    "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
    "received_events_url": "https://api.github.com/users/winsvega/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2024-01-19T14:45:16Z",
  "updated_at": "2024-01-19T14:46:17Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Python produces ton of output\r\nis there a way to disable it and control the output.  to have only what we want to read\r\n\r\nsince there  test vector names are so huge I have this suggestion. \r\n\r\nwhen designing post state in test\r\n\r\n```\r\nif create2_dest_already_in_state:\r\n        # The create2 collision causes all the code to go out of gas and return 0x00\r\n        post[address_to] = Account(\r\n            storage={code_worked: 0x01, first_create2_result: 0x00, second_create2_result: 0x00}\r\n        )\r\n        post[address_create2_storage] = Account(storage={create2_constructor_worked: 0x00})\r\n\r\n        if call_create2_contract_in_between:\r\n```\r\n\r\nmake a debug function \r\n\r\n```\r\nif create2_dest_already_in_state:\r\n     POSTSTATE()\r\n```\r\n\r\nif such function called in the test. it will tell to disable all python log. and print only the post state  of produced test vector.\r\nby\r\n\r\n```\r\nstate_test(pre,txs...)\r\n```\r\n\r\nafter it printed poststate, all the rest, following `state_test(pre,txs...) `  calls are ignored\r\n\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/392/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/392/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
