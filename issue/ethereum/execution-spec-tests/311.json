{
  "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/311",
  "repository_url": "https://api.github.com/repos/ethereum/execution-spec-tests",
  "labels_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/311/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/311/comments",
  "events_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/311/events",
  "html_url": "https://github.com/ethereum/execution-spec-tests/issues/311",
  "id": 1911332776,
  "node_id": "I_kwDOIQGLK85x7J-o",
  "number": 311,
  "title": "feat(evm): support unknown t8n tools",
  "user": {
    "login": "winsvega",
    "id": 4492341,
    "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/winsvega",
    "html_url": "https://github.com/winsvega",
    "followers_url": "https://api.github.com/users/winsvega/followers",
    "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
    "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
    "organizations_url": "https://api.github.com/users/winsvega/orgs",
    "repos_url": "https://api.github.com/users/winsvega/repos",
    "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
    "received_events_url": "https://api.github.com/users/winsvega/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 6008515308,
      "node_id": "LA_kwDOIQGLK88AAAABZiKq7A",
      "url": "https://api.github.com/repos/ethereum/execution-spec-tests/labels/scope:evm",
      "name": "scope:evm",
      "color": "3D41B2",
      "default": false,
      "description": "Scope: evm_transition_tool package"
    },
    {
      "id": 6008623232,
      "node_id": "LA_kwDOIQGLK88AAAABZiRQgA",
      "url": "https://api.github.com/repos/ethereum/execution-spec-tests/labels/type:feat",
      "name": "type:feat",
      "color": "0e8a16",
      "default": false,
      "description": "type: Feature"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-09-25T12:01:17Z",
  "updated_at": "2023-11-01T13:41:17Z",
  "closed_at": "2023-11-01T13:20:07Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "this is really a stopper. please treat any unknown t8n as default (geth) interface t8n.\r\n\r\n```\r\nINTERNALERROR> evm_transition_tool.transition_tool.UnknownTransitionTool: Unknown transition tool binary: /home/wins/.retesteth/pyt8n/start.sh\r\n```\r\n\r\n",
  "closed_by": {
    "login": "danceratopz",
    "id": 91727015,
    "node_id": "U_kgDOBXekpw",
    "avatar_url": "https://avatars.githubusercontent.com/u/91727015?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/danceratopz",
    "html_url": "https://github.com/danceratopz",
    "followers_url": "https://api.github.com/users/danceratopz/followers",
    "following_url": "https://api.github.com/users/danceratopz/following{/other_user}",
    "gists_url": "https://api.github.com/users/danceratopz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/danceratopz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/danceratopz/subscriptions",
    "organizations_url": "https://api.github.com/users/danceratopz/orgs",
    "repos_url": "https://api.github.com/users/danceratopz/repos",
    "events_url": "https://api.github.com/users/danceratopz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/danceratopz/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/311/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/311/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/comments/1772455468",
    "html_url": "https://github.com/ethereum/execution-spec-tests/issues/311#issuecomment-1772455468",
    "issue_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/311",
    "id": 1772455468,
    "node_id": "IC_kwDOIQGLK85ppYYs",
    "user": {
      "login": "danceratopz",
      "id": 91727015,
      "node_id": "U_kgDOBXekpw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91727015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danceratopz",
      "html_url": "https://github.com/danceratopz",
      "followers_url": "https://api.github.com/users/danceratopz/followers",
      "following_url": "https://api.github.com/users/danceratopz/following{/other_user}",
      "gists_url": "https://api.github.com/users/danceratopz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danceratopz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danceratopz/subscriptions",
      "organizations_url": "https://api.github.com/users/danceratopz/orgs",
      "repos_url": "https://api.github.com/users/danceratopz/repos",
      "events_url": "https://api.github.com/users/danceratopz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danceratopz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-20T10:12:42Z",
    "updated_at": "2023-10-20T10:12:42Z",
    "author_association": "MEMBER",
    "body": "From  #328:\r\n> I think it's a great idea to add the \"file system\" implementation of evaluate() from evmone into TransitionTool so that other tools can use it.\r\n> \r\n> However, I would prefer to not have Geth as a default and instead insist that all t8n tools that should be used provide an interface. I don't think this is unreasonable, as the interface module is < 40 lines (see the evmone interface, in this, PR for example).\r\n> \r\n> So while I'd like to keep _evaluate_stream() and _evaluate_filesystem(), I would prefer to add a separate interface for your custom t8n which must provide either a -v or --version flag which contains its name to make it identifiable.\r\n> \r\n> The reason being, is that I'd like to avoid ambiguity about which features a t8n tools supports and which not, like tracing, for example. I'd prefer to have this explicit in the implementation and not stumble over bugs/inconsistencies because the tools are consistent.\r\n> \r\n> Further reasoning, is that we still need to signal to GethTransitionTool which version of the evaluate function to use. Currently, in this implementation, it defaults to \"filesystem\" which changes the current behavior, which should stay as \"stream\", imo. To be entirely flexible with a \"default\" fallback tool, we'd have to add a command-line flag which defines whether to use \"stream\" or \"filesystem\", this clutters the interface; again, I'd prefer to keep it consistent.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/comments/1772455468/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/comments/1774002420",
    "html_url": "https://github.com/ethereum/execution-spec-tests/issues/311#issuecomment-1774002420",
    "issue_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/311",
    "id": 1774002420,
    "node_id": "IC_kwDOIQGLK85pvSD0",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-22T05:47:24Z",
    "updated_at": "2023-10-22T05:48:50Z",
    "author_association": "MEMBER",
    "body": "But this way new teams/clients will have to stop untill pyspec adds the integration. \n\nActually there was supposed to be a protocol, not 10 different versions of t8n that need a support.\n\nA strict protocol that once implemented can be used to generate and run the tests with testing tools.\n\nhttps://github.com/ethereum/tests/issues/1165",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/comments/1774002420/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/comments/1788943676",
    "html_url": "https://github.com/ethereum/execution-spec-tests/issues/311#issuecomment-1788943676",
    "issue_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/311",
    "id": 1788943676,
    "node_id": "IC_kwDOIQGLK85qoR08",
    "user": {
      "login": "danceratopz",
      "id": 91727015,
      "node_id": "U_kgDOBXekpw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91727015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danceratopz",
      "html_url": "https://github.com/danceratopz",
      "followers_url": "https://api.github.com/users/danceratopz/followers",
      "following_url": "https://api.github.com/users/danceratopz/following{/other_user}",
      "gists_url": "https://api.github.com/users/danceratopz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danceratopz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danceratopz/subscriptions",
      "organizations_url": "https://api.github.com/users/danceratopz/orgs",
      "repos_url": "https://api.github.com/users/danceratopz/repos",
      "events_url": "https://api.github.com/users/danceratopz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danceratopz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-01T13:20:07Z",
    "updated_at": "2023-11-01T13:20:07Z",
    "author_association": "MEMBER",
    "body": "Hi @winsvega, as we discussed (in the discussion from #328 and offline). We would prefer to keep the interfaces to t8n tools explicit in order to more quickly catch bugs.\r\n\r\nThere are a few other factors here to consider with regards to this decision:\r\n1. An interface for a new tool can be added extremely quickly. The closer it is to the geth interface, the faster it is to add.\r\n2. As far as I can tell, there is small and limited number of t8n tools to be added. This does not block lots of teams.\r\n3. The `TransitionTool` class is growing beyond the scope of just being an interface to evm `t8n` tools, it now also interfaces to geth's `evm blocktest` command, which is certainly not offered by other clients in this form, see next point.\r\n4. Whilst pursuing the standardization of evm commands, flags and input/outputs is extremely worthwhile, the fact is that their commands aren't and can't all be squeezed into exactly the same format. The largest example being the fact that we execute besu's t8n capability through it's `t8n-server` via REST instead of calling a standalone executable.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/comments/1788943676/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/comments/1788977321",
    "html_url": "https://github.com/ethereum/execution-spec-tests/issues/311#issuecomment-1788977321",
    "issue_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/311",
    "id": 1788977321,
    "node_id": "IC_kwDOIQGLK85qoaCp",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-01T13:41:17Z",
    "updated_at": "2023-11-01T13:41:17Z",
    "author_association": "MEMBER",
    "body": "Besu also has t8n which is not server.\n\nIm just warned you that new teams will not be able to use pyspec if not aware of this fact. Yes it's extremely rare, but many stays in shadow and never contact us.\n\nI try to keep the pyspec support for existing tools.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/comments/1788977321/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
