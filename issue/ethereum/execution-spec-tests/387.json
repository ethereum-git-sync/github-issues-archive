{
  "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/387",
  "repository_url": "https://api.github.com/repos/ethereum/execution-spec-tests",
  "labels_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/387/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/387/comments",
  "events_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/387/events",
  "html_url": "https://github.com/ethereum/execution-spec-tests/issues/387",
  "id": 2088648329,
  "node_id": "I_kwDOIQGLK858fj6J",
  "number": 387,
  "title": "chore: Automatically handle Address types on Opcode calls (`PUSH20`)",
  "user": {
    "login": "marioevz",
    "id": 11726710,
    "node_id": "MDQ6VXNlcjExNzI2NzEw",
    "avatar_url": "https://avatars.githubusercontent.com/u/11726710?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/marioevz",
    "html_url": "https://github.com/marioevz",
    "followers_url": "https://api.github.com/users/marioevz/followers",
    "following_url": "https://api.github.com/users/marioevz/following{/other_user}",
    "gists_url": "https://api.github.com/users/marioevz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/marioevz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/marioevz/subscriptions",
    "organizations_url": "https://api.github.com/users/marioevz/orgs",
    "repos_url": "https://api.github.com/users/marioevz/repos",
    "events_url": "https://api.github.com/users/marioevz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/marioevz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2024-01-18T16:28:53Z",
  "updated_at": "2024-01-18T16:28:53Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "We currently have to use `PUSH20` in order to properly push an address into the stack when using an address into an opcode.\r\n\r\nE.g.\r\n```python\r\nsome_address = to_address(0x600)\r\n...\r\ncode = Op.CALL(Op.GAS(), Op.PUSH20(some_address), 0, 0, 0, 0, 0)\r\n```\r\n\r\nThe `Op.PUSH20` seems confusing, because if we do:\r\n\r\n```python\r\nsome_address = 0x600\r\n...\r\ncode = Op.CALL(Op.GAS(), some_address, 0, 0, 0, 0, 0)\r\n```\r\n\r\nthen it's unnecessary, because integers are treated differently when put into the stack, but `to_address` returns a string.\r\n\r\nSo we either:\r\n- Change `to_address` to return an `Address` type, and then handle `Address` types as another special case when it's received as a parameter of an `Op` call\r\n- Don't ever use `to_address` or `Address` in tests and always treat them as integers\r\n\r\nFirst approach seems better for me, because it's nice to have the a clearly defined type for something as special as addresses.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/387/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/387/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
