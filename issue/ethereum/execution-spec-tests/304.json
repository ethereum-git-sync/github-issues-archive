{
  "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/304",
  "repository_url": "https://api.github.com/repos/ethereum/execution-spec-tests",
  "labels_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/304/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/304/comments",
  "events_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/304/events",
  "html_url": "https://github.com/ethereum/execution-spec-tests/issues/304",
  "id": 1904766828,
  "node_id": "I_kwDOIQGLK85xiG9s",
  "number": 304,
  "title": "nimbus totally fails",
  "user": {
    "login": "winsvega",
    "id": 4492341,
    "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/winsvega",
    "html_url": "https://github.com/winsvega",
    "followers_url": "https://api.github.com/users/winsvega/followers",
    "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
    "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
    "organizations_url": "https://api.github.com/users/winsvega/orgs",
    "repos_url": "https://api.github.com/users/winsvega/repos",
    "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
    "received_events_url": "https://api.github.com/users/winsvega/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-09-20T11:16:21Z",
  "updated_at": "2023-09-21T12:45:45Z",
  "closed_at": "2023-09-21T12:45:45Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "nimbus can run generated tests but when I use it to generate tests with pyspecs I get huge logs of evaluation errors.\r\nIs there way of a shorter error log to clearly see what has happened? \r\n\r\n```\r\nretesteth -t EIPTests/Pyspecs/cancun/eip5656_mcopy -- --singletest test_mcopy --filltests --clients nimbus --verbosity PYSPEC \r\nRunning 1 test case...\r\nGenerate Python test: /home/wins/.retesteth/pyspecsStart.sh /home/wins/Ethereum/tests/src/EIPTestsFiller/Pyspecs/cancun/eip5656_mcopy/test_mcopy.py test_mcopy null /home/wins/Ethereum/tests/EIPTests/Pyspecs/cancun/eip5656_mcopy /home/wins/.retesteth/nimbus/start.sh null --stderr Frontier Cancun\r\nmkdir: cannot create directory ‘./tests/tmp’: File exists\r\nfill -v ./tests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py --output ./tests/tmp/out_42c6049a_1128_4464_a891_bd136897dce9  --evm-bin /home/wins/.retesteth/nimbus/start.sh --flat-output --disable-hive --from=Frontier --until=Cancun\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.10.9, pytest-7.3.2, pluggy-1.2.0 -- /home/wins/Ethereum/execution-spec-tests/venv/bin/python3.10\r\n\u001B[1mExecuting tests for: Frontier, Homestead, Byzantium, Constantinople, ConstantinopleFix, Istanbul, Berlin, London, Merge, Shanghai, Cancun \u001B[39;49m\r\nNimbus-t8n 0.2.2, solc version 0.8.20+commit.a1b79de6.Linux.gpp\r\ncachedir: .pytest_cache\r\nrootdir: /home/wins/Ethereum/execution-spec-tests\r\nconfigfile: pytest.ini\r\nplugins: xdist-3.3.1, cov-4.1.0\r\ncollecting ... collected 29 items\r\n\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_valid_mcopy_operations[fork=Cancun-zero_inputs] FAILED [ 1/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_valid_mcopy_operations[fork=Cancun-zero_length_out_of_bounds_destination] FAILED [ 2/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_valid_mcopy_operations[fork=Cancun-single_byte_rewrite] FAILED [ 3/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_valid_mcopy_operations[fork=Cancun-full_word_rewrite] FAILED [ 4/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_valid_mcopy_operations[fork=Cancun-single_byte_forward_overwrite] FAILED [ 5/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_valid_mcopy_operations[fork=Cancun-full_word_forward_overwrite] FAILED [ 6/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_valid_mcopy_operations[fork=Cancun-mid_word_single_byte_rewrite] FAILED [ 7/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_valid_mcopy_operations[fork=Cancun-mid_word_single_word_rewrite] FAILED [ 8/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_valid_mcopy_operations[fork=Cancun-mid_word_multi_word_rewrite] FAILED [ 9/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_valid_mcopy_operations[fork=Cancun-two_words_forward_overwrite] FAILED [10/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_valid_mcopy_operations[fork=Cancun-two_words_backward_overwrite] FAILED [11/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_valid_mcopy_operations[fork=Cancun-two_words_backward_overwrite_single_byte_offset] FAILED [12/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_valid_mcopy_operations[fork=Cancun-single_byte_memory_extension] FAILED [13/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_valid_mcopy_operations[fork=Cancun-single_word_memory_extension] FAILED [14/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_valid_mcopy_operations[fork=Cancun-single_word_minus_one_byte_memory_extension] FAILED [15/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_valid_mcopy_operations[fork=Cancun-single_word_plus_one_byte_memory_extension] FAILED [16/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_valid_mcopy_operations[fork=Cancun-full_memory_rewrite] FAILED [17/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_valid_mcopy_operations[fork=Cancun-full_memory_copy] FAILED [18/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_valid_mcopy_operations[fork=Cancun-full_memory_copy_offset] FAILED [19/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_valid_mcopy_operations[fork=Cancun-full_memory_clean] FAILED [20/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_valid_mcopy_operations[fork=Cancun-out_of_bounds_memory_extension] FAILED [21/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_mcopy_on_empty_memory[fork=Cancun-empty_memory-length=0-src=0-dest=0] FAILED [22/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_mcopy_on_empty_memory[fork=Cancun-empty_memory-length=0-src=0-dest=32] FAILED [23/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_mcopy_on_empty_memory[fork=Cancun-empty_memory-length=0-src=32-dest=0] FAILED [24/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_mcopy_on_empty_memory[fork=Cancun-empty_memory-length=0-src=32-dest=32] FAILED [25/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_mcopy_on_empty_memory[fork=Cancun-empty_memory-length=1-src=0-dest=0] FAILED [26/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_mcopy_on_empty_memory[fork=Cancun-empty_memory-length=1-src=0-dest=32] FAILED [27/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_mcopy_on_empty_memory[fork=Cancun-empty_memory-length=1-src=32-dest=0] FAILED [28/29]\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py::test_mcopy_on_empty_memory[fork=Cancun-empty_memory-length=1-src=32-dest=32] FAILED [29/29]\r\n\r\n=================================== FAILURES ===================================\r\n_____________ test_valid_mcopy_operations[fork=Cancun-zero_inputs] _____________\r\n\r\nstate_test = <class 'pytest_plugins.test_filler.test_filler.state_test.<locals>.StateTestWrapper'>\r\npre = {'0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b': Account(nonce=None, balance=10000000000000000000000000000000000000000, ...x00UY`\\x00 `\\x01U`\\x00Q`\\x02U` Q`\\x03U`@Q`\\x04U``Q`\\x05U`\\x80Q`\\x06U`\\xa0Q`\\x07U`\\xc0Q`\\x08U`\\xe0Q`\\tU', storage=None)}\r\npost = {256: Account(nonce=None, balance=None, code=None, storage=<ethereum_test_tools.common.types.Storage object at 0x7f5572450160>)}\r\ntx = Transaction(ty=0, chain_id=1, nonce=0, gas_price=10, max_priority_fee_per_gas=None, max_fee_per_gas=None, gas_limit=10...nder=None, secret_key='0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8', protected=True, error=None)\r\n\r\n    @pytest.mark.parametrize(\r\n        \"dest,src,length\",\r\n        [\r\n            (0x00, 0x00, 0x00),\r\n            (2**256 - 1, 0x00, 0x00),\r\n            (0x00, 0x00, 0x01),\r\n            (0x00, 0x00, 0x20),\r\n            (0x01, 0x00, 0x01),\r\n            (0x01, 0x00, 0x20),\r\n            (0x11, 0x11, 0x01),\r\n            (0x11, 0x11, 0x20),\r\n            (0x11, 0x11, 0x40),\r\n            (0x10, 0x00, 0x40),\r\n            (0x00, 0x10, 0x40),\r\n            (0x0F, 0x10, 0x40),\r\n            (0x100, 0x01, 0x01),\r\n            (0x100, 0x01, 0x20),\r\n            (0x100, 0x01, 0x1F),\r\n            (0x100, 0x01, 0x21),\r\n            (0x00, 0x00, 0x100),\r\n            (0x100, 0x00, 0x100),\r\n            (0x200, 0x00, 0x100),\r\n            (0x00, 0x100, 0x100),\r\n            (0x100, 0x100, 0x01),\r\n        ],\r\n        ids=[\r\n            \"zero_inputs\",\r\n            \"zero_length_out_of_bounds_destination\",\r\n            \"single_byte_rewrite\",\r\n            \"full_word_rewrite\",\r\n            \"single_byte_forward_overwrite\",\r\n            \"full_word_forward_overwrite\",\r\n            \"mid_word_single_byte_rewrite\",\r\n            \"mid_word_single_word_rewrite\",\r\n            \"mid_word_multi_word_rewrite\",\r\n            \"two_words_forward_overwrite\",\r\n            \"two_words_backward_overwrite\",\r\n            \"two_words_backward_overwrite_single_byte_offset\",\r\n            \"single_byte_memory_extension\",\r\n            \"single_word_memory_extension\",\r\n            \"single_word_minus_one_byte_memory_extension\",\r\n            \"single_word_plus_one_byte_memory_extension\",\r\n            \"full_memory_rewrite\",\r\n            \"full_memory_copy\",\r\n            \"full_memory_copy_offset\",\r\n            \"full_memory_clean\",\r\n            \"out_of_bounds_memory_extension\",\r\n        ],\r\n    )\r\n    @pytest.mark.valid_from(\"Cancun\")\r\n    def test_valid_mcopy_operations(\r\n        state_test: StateTestFiller,\r\n        pre: Mapping[str, Account],\r\n        post: Mapping[str, Account],\r\n        tx: Transaction,\r\n    ):\r\n        \"\"\"\r\n        Perform MCOPY operations using different offsets and lengths:\r\n          - Zero inputs\r\n          - Memory rewrites (copy from and to the same location)\r\n          - Memory overwrites (copy from and to different locations)\r\n          - Memory extensions (copy to a location that is out of bounds)\r\n          - Memory clear (copy from a location that is out of bounds)\r\n        \"\"\"\r\n>       state_test(\r\n            env=Environment(),\r\n            pre=pre,\r\n            post=post,\r\n            txs=[tx],\r\n        )\r\n\r\ntests/tmp/tmptest_42c6049a_1128_4464_a891_bd136897dce9/test_mcopy.py:196: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nsrc/pytest_plugins/test_filler/test_filler.py:386: in __init__\r\n    fill_test(\r\nsrc/ethereum_test_tools/filling/fill.py:27: in fill_test\r\n    pre, genesis_rlp, genesis = test_spec.make_genesis(t8n, fork)\r\nsrc/ethereum_test_tools/spec/state_test.py:82: in make_genesis\r\n    new_alloc, state_root = t8n.calc_state_root(\r\nsrc/evm_transition_tool/transition_tool.py:406: in calc_state_root\r\n    new_alloc, result = self.evaluate(\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <evm_transition_tool.nimbus.NimbusTransitionTool object at 0x7f55724930d0>\r\n\r\n    def evaluate(\r\n        self,\r\n        *,\r\n        alloc: Any,\r\n        txs: Any,\r\n        env: Any,\r\n        fork_name: str,\r\n        chain_id: int = 1,\r\n        reward: int = 0,\r\n        eips: Optional[List[int]] = None,\r\n        debug_output_path: str = \"\",\r\n    ) -> Tuple[Dict[str, Any], Dict[str, Any]]:\r\n        \"\"\"\r\n        Executes `evm t8n` with the specified arguments.\r\n    \r\n        If a client's `t8n` tool varies from the default behavior, this method\r\n        should be overridden.\r\n        \"\"\"\r\n        if eips is not None:\r\n            fork_name = \"+\".join([fork_name] + [str(eip) for eip in eips])\r\n    \r\n        if int(env[\"currentNumber\"], 0) == 0:\r\n            reward = -1\r\n    \r\n        command: list[str] = [str(self.binary)]\r\n        if self.t8n_subcommand:\r\n            command.append(self.t8n_subcommand)\r\n    \r\n        args = command + [\r\n            \"--input.alloc=stdin\",\r\n            \"--input.txs=stdin\",\r\n            \"--input.env=stdin\",\r\n            \"--output.result=stdout\",\r\n            \"--output.alloc=stdout\",\r\n            \"--output.body=stdout\",\r\n            f\"--state.fork={fork_name}\",\r\n            f\"--state.chainid={chain_id}\",\r\n            f\"--state.reward={reward}\",\r\n        ]\r\n    \r\n        if self.trace:\r\n            if str(self.default_binary) == \"ethereum-spec-evm\":\r\n                raise Exception(\r\n                    \"`ethereum-spec-evm` tracing is not currently implemented in \"\r\n                    \"execution-spec-tests, see \"\r\n                    \"https://github.com/ethereum/execution-spec-tests/issues/267.\"\r\n                )\r\n            temp_dir = tempfile.TemporaryDirectory()\r\n            args.append(\"--trace\")\r\n            args.append(f\"--output.basedir={temp_dir.name}\")\r\n    \r\n        stdin = {\r\n            \"alloc\": alloc,\r\n            \"txs\": txs,\r\n            \"env\": env,\r\n        }\r\n    \r\n        encoded_input = str.encode(json.dumps(stdin))\r\n        result = subprocess.run(\r\n            args,\r\n            input=encoded_input,\r\n            stdout=subprocess.PIPE,\r\n            stderr=subprocess.PIPE,\r\n        )\r\n    \r\n        if debug_output_path:\r\n            t8n_call = \" \".join(args)\r\n            t8n_output_base_dir = os.path.join(debug_output_path, \"t8n.sh.out\")\r\n            if self.trace:\r\n                t8n_call = t8n_call.replace(temp_dir.name, t8n_output_base_dir)\r\n            t8n_script = textwrap.dedent(\r\n                f\"\"\"\\\r\n                #!/bin/bash\r\n                rm -rf {debug_output_path}/t8n.sh.out  # hard-coded to avoid surprises\r\n                mkdir {debug_output_path}/t8n.sh.out  # unused if tracing is not enabled\r\n                {t8n_call} < {debug_output_path}/stdin.txt\r\n                \"\"\"\r\n            )\r\n            dump_files_to_directory(\r\n                debug_output_path,\r\n                {\r\n                    \"args.py\": args,\r\n                    \"input/alloc.json\": stdin[\"alloc\"],\r\n                    \"input/env.json\": stdin[\"env\"],\r\n                    \"input/txs.json\": stdin[\"txs\"],\r\n                    \"returncode.txt\": result.returncode,\r\n                    \"stdin.txt\": stdin,\r\n                    \"stdout.txt\": result.stdout.decode(),\r\n                    \"stderr.txt\": result.stderr.decode(),\r\n                    \"t8n.sh+x\": t8n_script,\r\n                },\r\n            )\r\n    \r\n        if result.returncode != 0:\r\n>           raise Exception(\"failed to evaluate: \" + result.stderr.decode())\r\nE           Exception: failed to evaluate:\r\n\r\nsrc/evm_transition_tool/transition_tool.py:352: Exception\r\n_ test_valid_mcopy_operations[fork=Cancun-zero_length_out_of_bounds_destination] _\r\n\r\n============================= 29 failed in 0.79s ==============================\r\ncp: cannot stat './tests/tmp/out_42c6049a_1128_4464_a891_bd136897dce9/*': No such file or directory\r\n\r\n\u001B[1;32;49m*** No errors detected\r\n\u001B[0;39;49m*** Total Tests Run: 30\r\n```",
  "closed_by": {
    "login": "winsvega",
    "id": 4492341,
    "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/winsvega",
    "html_url": "https://github.com/winsvega",
    "followers_url": "https://api.github.com/users/winsvega/followers",
    "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
    "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
    "organizations_url": "https://api.github.com/users/winsvega/orgs",
    "repos_url": "https://api.github.com/users/winsvega/repos",
    "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
    "received_events_url": "https://api.github.com/users/winsvega/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/304/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/304/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/comments/1727532552",
    "html_url": "https://github.com/ethereum/execution-spec-tests/issues/304#issuecomment-1727532552",
    "issue_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/304",
    "id": 1727532552,
    "node_id": "IC_kwDOIQGLK85m-A4I",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-20T11:24:31Z",
    "updated_at": "2023-09-20T11:24:31Z",
    "author_association": "MEMBER",
    "body": "can be my issue though with the cmd params. \r\n\r\ndoes pyspec runs nimbus with t8n arg or not? becuase I pass it as --evm-bin arg. \r\n\r\nalso I get the debug like this: \r\n```\r\nstate_test = <class 'pytest_plugins.test_filler.test_filler.state_test.<locals>.StateTestWrapper'>\r\npre = {'0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b': Account(nonce=None, balance=10000000000000000000000000000000000000000, ...01U`\\x00Q`\\x02U` Q`\\x03U`@Q`\\x04U``Q`\\x05U`\\x80Q`\\x06U`\\xa0Q`\\x07U`\\xc0Q`\\x08U`\\xe0Q`\\tUa\\x01\\xe0Q`\\nU', storage=None)}\r\npost = {256: Account(nonce=None, balance=None, code=None, storage=<ethereum_test_tools.common.types.Storage object at 0x7fc827486140>)}\r\ntx = Transaction(ty=0, chain_id=1, nonce=0, gas_price=10, max_priority_fee_per_gas=None, max_fee_per_gas=None, gas_limit=10...nder=None, secret_key='0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8', protected=True, error=None)\r\n```\r\n\r\nbut there is no env file debug. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/comments/1727532552/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/comments/1727803912",
    "html_url": "https://github.com/ethereum/execution-spec-tests/issues/304#issuecomment-1727803912",
    "issue_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/304",
    "id": 1727803912,
    "node_id": "IC_kwDOIQGLK85m_DII",
    "user": {
      "login": "danceratopz",
      "id": 91727015,
      "node_id": "U_kgDOBXekpw",
      "avatar_url": "https://avatars.githubusercontent.com/u/91727015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danceratopz",
      "html_url": "https://github.com/danceratopz",
      "followers_url": "https://api.github.com/users/danceratopz/followers",
      "following_url": "https://api.github.com/users/danceratopz/following{/other_user}",
      "gists_url": "https://api.github.com/users/danceratopz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danceratopz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danceratopz/subscriptions",
      "organizations_url": "https://api.github.com/users/danceratopz/orgs",
      "repos_url": "https://api.github.com/users/danceratopz/repos",
      "events_url": "https://api.github.com/users/danceratopz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danceratopz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-20T14:04:58Z",
    "updated_at": "2023-09-20T14:04:58Z",
    "author_association": "MEMBER",
    "body": "> does pyspec runs nimbus with t8n arg or not? becuase I pass it as --evm-bin arg.\r\n\r\nI just ran locally as:\r\n```\r\nrm -rf /tmp/nimbus; fill --evm-bin=~/code/github/status-im/nimbus-eth1/tools/t8n/t8n --t8n-dump-dir=/tmp/nimbus --traces -k \"Shanghai and large\"\r\n```\r\nwhich executes transition tool as:\r\n```\r\n/home/dtopz/code/github/status-im/nimbus-eth1/tools/t8n/t8n --input.alloc=stdin --input.txs=stdin --input.env=stdin --output.result=stdout --output.alloc=stdout --output.body=stdout --state.fork=Shanghai --state.chainid=1 --state.reward=0 --trace --output.basedir=/tmp/nimbus/test_large_amount_fork_Shanghai/1/t8n.sh.out < /tmp/nimbus/test_large_amount_fork_Shanghai/1/stdin.txt\r\n```\r\nThe t8n command line call can be found in `/tmp/nimbus/test_large_amount_fork_Shanghai/1/t8n.sh` (written by `fill` as the `--t8n-dump-dir` is specified).\r\n\r\nMy nimbus t8n is out of date, but I don't think that should matter.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/comments/1727803912/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/comments/1729481338",
    "html_url": "https://github.com/ethereum/execution-spec-tests/issues/304#issuecomment-1729481338",
    "issue_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/304",
    "id": 1729481338,
    "node_id": "IC_kwDOIQGLK85nFcp6",
    "user": {
      "login": "winsvega",
      "id": 4492341,
      "node_id": "MDQ6VXNlcjQ0OTIzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4492341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winsvega",
      "html_url": "https://github.com/winsvega",
      "followers_url": "https://api.github.com/users/winsvega/followers",
      "following_url": "https://api.github.com/users/winsvega/following{/other_user}",
      "gists_url": "https://api.github.com/users/winsvega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winsvega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winsvega/subscriptions",
      "organizations_url": "https://api.github.com/users/winsvega/orgs",
      "repos_url": "https://api.github.com/users/winsvega/repos",
      "events_url": "https://api.github.com/users/winsvega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winsvega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-21T12:36:28Z",
    "updated_at": "2023-09-21T12:44:37Z",
    "author_association": "MEMBER",
    "body": "have you run cancun test generation with it? \r\nyes looks like nimbus does not support currentBlobGasUsed",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/comments/1729481338/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
