{
  "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/236",
  "repository_url": "https://api.github.com/repos/ethereum/execution-spec-tests",
  "labels_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/236/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/236/comments",
  "events_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/236/events",
  "html_url": "https://github.com/ethereum/execution-spec-tests/issues/236",
  "id": 1830859344,
  "node_id": "I_kwDOIQGLK85tILJQ",
  "number": 236,
  "title": "Remaining Beacon Block Root Tests EIP-4788",
  "user": {
    "login": "spencer-tb",
    "id": 60348173,
    "node_id": "MDQ6VXNlcjYwMzQ4MTcz",
    "avatar_url": "https://avatars.githubusercontent.com/u/60348173?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/spencer-tb",
    "html_url": "https://github.com/spencer-tb",
    "followers_url": "https://api.github.com/users/spencer-tb/followers",
    "following_url": "https://api.github.com/users/spencer-tb/following{/other_user}",
    "gists_url": "https://api.github.com/users/spencer-tb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/spencer-tb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/spencer-tb/subscriptions",
    "organizations_url": "https://api.github.com/users/spencer-tb/orgs",
    "repos_url": "https://api.github.com/users/spencer-tb/repos",
    "events_url": "https://api.github.com/users/spencer-tb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/spencer-tb/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "spencer-tb",
    "id": 60348173,
    "node_id": "MDQ6VXNlcjYwMzQ4MTcz",
    "avatar_url": "https://avatars.githubusercontent.com/u/60348173?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/spencer-tb",
    "html_url": "https://github.com/spencer-tb",
    "followers_url": "https://api.github.com/users/spencer-tb/followers",
    "following_url": "https://api.github.com/users/spencer-tb/following{/other_user}",
    "gists_url": "https://api.github.com/users/spencer-tb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/spencer-tb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/spencer-tb/subscriptions",
    "organizations_url": "https://api.github.com/users/spencer-tb/orgs",
    "repos_url": "https://api.github.com/users/spencer-tb/repos",
    "events_url": "https://api.github.com/users/spencer-tb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/spencer-tb/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "spencer-tb",
      "id": 60348173,
      "node_id": "MDQ6VXNlcjYwMzQ4MTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/60348173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/spencer-tb",
      "html_url": "https://github.com/spencer-tb",
      "followers_url": "https://api.github.com/users/spencer-tb/followers",
      "following_url": "https://api.github.com/users/spencer-tb/following{/other_user}",
      "gists_url": "https://api.github.com/users/spencer-tb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/spencer-tb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/spencer-tb/subscriptions",
      "organizations_url": "https://api.github.com/users/spencer-tb/orgs",
      "repos_url": "https://api.github.com/users/spencer-tb/repos",
      "events_url": "https://api.github.com/users/spencer-tb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/spencer-tb/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-08-01T09:35:37Z",
  "updated_at": "2023-08-01T10:51:31Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "## :test_tube: **Remaining Test Cases**\r\n```[tasklist]\r\n- [ ] `test_beacon_root_precompile_gas`: call the pre-compile across various contexts, using valid and invalid call gas, assert the correct gas calculation.\r\n- [ ] `test_invalid_pre_fork_block_with_beacon_root`: test block rejection when the `parent_beacon_block_root` field is present on a pre-fork block (Shanghai).\r\n- [ ] `test_invalid_post_fork_block_without_beacon_root`:  test block rejection when the `parent_beacon_block_root` field is not present on a post-fork block (Cancun).\r\n- [ ] `test_beacon_root_precompile_fork_transition`: call the pre-compile after a fork transition from Shanghai to Cancun.\r\n- [ ] `test_beacon_root_ring_buffer_overflow`: overflow the ring buffer by calling the pre-compile across > `HISTORICAL_ROOTS_MODULUS` blocks, checking that the previous stored values are overwritten. Iterates by increasing the timestamp by 12 (8092 blocks).\r\n- [ ] `test_beacon_root_precompile_self_destruct`: Self-destruct to the pre-compile address, then call the pre-compile. Checks the beacon root pc in unaltered and returns the correct value.\r\n- [ ] `test_beacon_root_precompile_calls_with_balance`: Call the pre-compile where the origin tx contains some wei which is used within the call.\r\n- [ ] `test_beacon_root_precompile_withdrawal`: Perform a withdrawal to the pre-compile address.\r\n- [ ] `test_beacon_root_precompile_with_blobs`: Perform multiple precompile calls with blob txs.\r\n- [ ] `test_beacon_root_precompile_ring_buffer_overwrites`: Call the pre-compile where in block 1, `Block1.timestamp = n`, and in block2, `Block2.timestamp = n + HISTORICAL_ROOTS_MODULUS - 1`. Also have the case where we overwrite it in block2, `Block2.timestamp = n + HISTORICAL_ROOTS_MODULUS`.\r\n- [ ] Update & refactor tests using a `spec.py` file following: #203\r\n- [x] Rename `call_address` to `caller_address` & add `tx_to` address for the case where we  we want to test sending a transaction directly to the pre-compile.\r\n- [x] Add pre-existing balance to the pre-compile account.\r\n```\r\n\r\nAdd blockchain test where we:\r\n\r\n    Overwrite the timestamp/beacon root: Block2.timestamp == Block1.Timestamp + HISTORICAL_ROOTS_MODULUS\r\n    Almost overwrite the timestamp/beacon root: Block2.timestamp == Block1.Timestamp + HISTORICAL_ROOTS_MODULUS + 1 and Block2.timestamp == Block1.Timestamp + HISTORICAL_ROOTS_MODULUS - 1\r\n    Set the zero key storage: Block.timestamp % HISTORICAL_ROOTS_MODULUS == 0\r\n    Overwrite the zero key storage: Block2.timestamp == Block1.Timestamp + HISTORICAL_ROOTS_MODULUS && Block1.timestamp % HISTORICAL_ROOTS_MODULUS == 0\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/236/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/execution-spec-tests/issues/236/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
