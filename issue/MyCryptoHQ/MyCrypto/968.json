{
  "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/968",
  "repository_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto",
  "labels_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/968/labels{/name}",
  "comments_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/968/comments",
  "events_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/968/events",
  "html_url": "https://github.com/MyCryptoHQ/MyCrypto/issues/968",
  "id": 292945466,
  "node_id": "MDU6SXNzdWUyOTI5NDU0NjY=",
  "number": 968,
  "title": "Prefilled transaction is broken",
  "user": {
    "login": "wbobeirne",
    "id": 649992,
    "node_id": "MDQ6VXNlcjY0OTk5Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/649992?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wbobeirne",
    "html_url": "https://github.com/wbobeirne",
    "followers_url": "https://api.github.com/users/wbobeirne/followers",
    "following_url": "https://api.github.com/users/wbobeirne/following{/other_user}",
    "gists_url": "https://api.github.com/users/wbobeirne/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wbobeirne/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wbobeirne/subscriptions",
    "organizations_url": "https://api.github.com/users/wbobeirne/orgs",
    "repos_url": "https://api.github.com/users/wbobeirne/repos",
    "events_url": "https://api.github.com/users/wbobeirne/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wbobeirne/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "aitrean",
    "id": 2967924,
    "node_id": "MDQ6VXNlcjI5Njc5MjQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2967924?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aitrean",
    "html_url": "https://github.com/aitrean",
    "followers_url": "https://api.github.com/users/aitrean/followers",
    "following_url": "https://api.github.com/users/aitrean/following{/other_user}",
    "gists_url": "https://api.github.com/users/aitrean/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aitrean/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aitrean/subscriptions",
    "organizations_url": "https://api.github.com/users/aitrean/orgs",
    "repos_url": "https://api.github.com/users/aitrean/repos",
    "events_url": "https://api.github.com/users/aitrean/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aitrean/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "aitrean",
      "id": 2967924,
      "node_id": "MDQ6VXNlcjI5Njc5MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2967924?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aitrean",
      "html_url": "https://github.com/aitrean",
      "followers_url": "https://api.github.com/users/aitrean/followers",
      "following_url": "https://api.github.com/users/aitrean/following{/other_user}",
      "gists_url": "https://api.github.com/users/aitrean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aitrean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aitrean/subscriptions",
      "organizations_url": "https://api.github.com/users/aitrean/orgs",
      "repos_url": "https://api.github.com/users/aitrean/repos",
      "events_url": "https://api.github.com/users/aitrean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aitrean/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/milestones/9",
    "html_url": "https://github.com/MyCryptoHQ/MyCrypto/milestone/9",
    "labels_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/milestones/9/labels",
    "id": 3075798,
    "node_id": "MDk6TWlsZXN0b25lMzA3NTc5OA==",
    "number": 9,
    "title": "Sprint 9",
    "description": "",
    "creator": {
      "login": "dternyak",
      "id": 7861465,
      "node_id": "MDQ6VXNlcjc4NjE0NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7861465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dternyak",
      "html_url": "https://github.com/dternyak",
      "followers_url": "https://api.github.com/users/dternyak/followers",
      "following_url": "https://api.github.com/users/dternyak/following{/other_user}",
      "gists_url": "https://api.github.com/users/dternyak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dternyak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dternyak/subscriptions",
      "organizations_url": "https://api.github.com/users/dternyak/orgs",
      "repos_url": "https://api.github.com/users/dternyak/repos",
      "events_url": "https://api.github.com/users/dternyak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dternyak/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 24,
    "state": "closed",
    "created_at": "2018-01-30T18:43:56Z",
    "updated_at": "2018-02-17T17:41:24Z",
    "due_on": "2018-02-15T08:00:00Z",
    "closed_at": "2018-02-17T17:41:24Z"
  },
  "comments": 4,
  "created_at": "2018-01-30T21:34:27Z",
  "updated_at": "2018-02-09T04:02:56Z",
  "closed_at": "2018-02-09T04:02:56Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Since the change from `/send-transaction` to `/account/send`, we lose the query parameters upon navigation. We'll need to find a way to carry over the data from the query.",
  "closed_by": {
    "login": "dternyak",
    "id": 7861465,
    "node_id": "MDQ6VXNlcjc4NjE0NjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7861465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dternyak",
    "html_url": "https://github.com/dternyak",
    "followers_url": "https://api.github.com/users/dternyak/followers",
    "following_url": "https://api.github.com/users/dternyak/following{/other_user}",
    "gists_url": "https://api.github.com/users/dternyak/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dternyak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dternyak/subscriptions",
    "organizations_url": "https://api.github.com/users/dternyak/orgs",
    "repos_url": "https://api.github.com/users/dternyak/repos",
    "events_url": "https://api.github.com/users/dternyak/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dternyak/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/968/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/968/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/361742933",
    "html_url": "https://github.com/MyCryptoHQ/MyCrypto/issues/968#issuecomment-361742933",
    "issue_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/968",
    "id": 361742933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc0MjkzMw==",
    "user": {
      "login": "wbobeirne",
      "id": 649992,
      "node_id": "MDQ6VXNlcjY0OTk5Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wbobeirne",
      "html_url": "https://github.com/wbobeirne",
      "followers_url": "https://api.github.com/users/wbobeirne/followers",
      "following_url": "https://api.github.com/users/wbobeirne/following{/other_user}",
      "gists_url": "https://api.github.com/users/wbobeirne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wbobeirne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wbobeirne/subscriptions",
      "organizations_url": "https://api.github.com/users/wbobeirne/orgs",
      "repos_url": "https://api.github.com/users/wbobeirne/repos",
      "events_url": "https://api.github.com/users/wbobeirne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wbobeirne/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T21:38:20Z",
    "updated_at": "2018-01-30T21:38:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "This will also be difficult to maintain with the large number of `reset` actions we've sprinkled in our components, that will likely lose this state. My proposal for how we do this is:\r\n\r\n1. Add something to redux that tracks query parameters on initial load.\r\n2. Add an action to transaction, something like `setFieldsFromQuery`.\r\n3. Fire this action when we load the send transaction fields.\r\n4. In the saga, make sure this action only actually sets the field(s) once. Subsequent views of the transaction fields shouldn't force the query parameters in again.\r\n\r\ncc @HenryNguyen5, if you have ideas on implementation I think you've probably got an idea for how to do this cleanest.",
    "reactions": {
      "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/361742933/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/361750225",
    "html_url": "https://github.com/MyCryptoHQ/MyCrypto/issues/968#issuecomment-361750225",
    "issue_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/968",
    "id": 361750225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc1MDIyNQ==",
    "user": {
      "login": "HenryNguyen5",
      "id": 6404866,
      "node_id": "MDQ6VXNlcjY0MDQ4NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6404866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HenryNguyen5",
      "html_url": "https://github.com/HenryNguyen5",
      "followers_url": "https://api.github.com/users/HenryNguyen5/followers",
      "following_url": "https://api.github.com/users/HenryNguyen5/following{/other_user}",
      "gists_url": "https://api.github.com/users/HenryNguyen5/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HenryNguyen5/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HenryNguyen5/subscriptions",
      "organizations_url": "https://api.github.com/users/HenryNguyen5/orgs",
      "repos_url": "https://api.github.com/users/HenryNguyen5/repos",
      "events_url": "https://api.github.com/users/HenryNguyen5/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HenryNguyen5/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T22:05:08Z",
    "updated_at": "2018-01-30T22:05:08Z",
    "author_association": "NONE",
    "body": "Yeah this makes sense.\r\n1. Get rid of the `Query` component\r\n2. On load / URL change we can have a property in redux store that loads in parsed query payload (Going to need validation on it though, but the existing validators can be used pretty easily).\r\n3. Have an action for loading the query state into transaction state and validate it (again, can re-use actions like `setCurrentValue` `setCurrentTo` that will automatically validate the data being passed in\r\n\r\nOn a side note: It would be nice to centralise reset hooks for the sagas in one place so its easy to keep track of whats going to reset slices of state.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/361750225/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/362992493",
    "html_url": "https://github.com/MyCryptoHQ/MyCrypto/issues/968#issuecomment-362992493",
    "issue_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/968",
    "id": 362992493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mjk5MjQ5Mw==",
    "user": {
      "login": "aitrean",
      "id": 2967924,
      "node_id": "MDQ6VXNlcjI5Njc5MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2967924?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aitrean",
      "html_url": "https://github.com/aitrean",
      "followers_url": "https://api.github.com/users/aitrean/followers",
      "following_url": "https://api.github.com/users/aitrean/following{/other_user}",
      "gists_url": "https://api.github.com/users/aitrean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aitrean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aitrean/subscriptions",
      "organizations_url": "https://api.github.com/users/aitrean/orgs",
      "repos_url": "https://api.github.com/users/aitrean/repos",
      "events_url": "https://api.github.com/users/aitrean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aitrean/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-05T06:23:21Z",
    "updated_at": "2018-02-05T14:18:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "So, I definitely tried this solution. However, I don't believe it would be the best solution for four reasons. \r\n\r\n1. We need to maintain the queries in the router, otherwise the query will disappear from the URL, which will make the user think we ignored the query.\r\n\r\n2. If we're going to pass the query data to account/send through the router components, then it becomes redundant to keep a Redux property for the query data. The query data still loads as the default 'to' and 'value' items under the transaction tree. There are no sagas that explicitly use a \"query\" property in the store. And, on the UI side, the behaviour seems to function exactly as intended. \r\n\r\n3. There are reset hooks which will reset the prefilled transactions. But these resets only trigger when we're clearing the transaction fields anyway. For example, subtab navigation would clear a manually-entered transaction, so in my mind it makes sense that it would also clear pre-filled transaction fields.\r\n\r\n4. Without the overhead from managing a special query property, the solution for this issue really only boils down to a few lines of code (see PR). Of course, I still like the idea of replacing the Query HOC with a utility function to set, and load, the pre-filled state. But that would be better addressed as a separate issue.\r\n\r\nAny different takes on this?",
    "reactions": {
      "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/362992493/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/363194337",
    "html_url": "https://github.com/MyCryptoHQ/MyCrypto/issues/968#issuecomment-363194337",
    "issue_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/968",
    "id": 363194337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzE5NDMzNw==",
    "user": {
      "login": "wbobeirne",
      "id": 649992,
      "node_id": "MDQ6VXNlcjY0OTk5Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wbobeirne",
      "html_url": "https://github.com/wbobeirne",
      "followers_url": "https://api.github.com/users/wbobeirne/followers",
      "following_url": "https://api.github.com/users/wbobeirne/following{/other_user}",
      "gists_url": "https://api.github.com/users/wbobeirne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wbobeirne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wbobeirne/subscriptions",
      "organizations_url": "https://api.github.com/users/wbobeirne/orgs",
      "repos_url": "https://api.github.com/users/wbobeirne/repos",
      "events_url": "https://api.github.com/users/wbobeirne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wbobeirne/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-05T19:28:19Z",
    "updated_at": "2018-02-05T19:28:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the simplest solution is usually the best, so that's fine by me. I'm also in favor of removing the Query component for query util functions.\r\n\r\nMy only concern is the maintainability. Currently we have no testing around the query params in the codebase, and having them be ad-hoc util calls won't make that any easier to test whether or not they're working. But I'm worried about overzealous resetting or other saga side effects blowing out the prefilled state, and not having that be caught by tests.\r\n\r\nI think I'm over-engineering though, what's most important is that this functionality is restored pre-launch, so do whichever works best!",
    "reactions": {
      "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/363194337/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
