{
  "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/2951",
  "repository_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto",
  "labels_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/2951/labels{/name}",
  "comments_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/2951/comments",
  "events_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/2951/events",
  "html_url": "https://github.com/MyCryptoHQ/MyCrypto/issues/2951",
  "id": 547199259,
  "node_id": "MDU6SXNzdWU1NDcxOTkyNTk=",
  "number": 2951,
  "title": "Adding custom token is broken? in \"desktop app\"",
  "user": {
    "login": "sammy007",
    "id": 7374093,
    "node_id": "MDQ6VXNlcjczNzQwOTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7374093?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sammy007",
    "html_url": "https://github.com/sammy007",
    "followers_url": "https://api.github.com/users/sammy007/followers",
    "following_url": "https://api.github.com/users/sammy007/following{/other_user}",
    "gists_url": "https://api.github.com/users/sammy007/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sammy007/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sammy007/subscriptions",
    "organizations_url": "https://api.github.com/users/sammy007/orgs",
    "repos_url": "https://api.github.com/users/sammy007/repos",
    "events_url": "https://api.github.com/users/sammy007/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sammy007/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2020-01-09T01:41:58Z",
  "updated_at": "2020-06-10T18:53:56Z",
  "closed_at": "2020-06-10T18:53:56Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Private `dev` parity network.\r\n\r\nAdding just deployed erc20 boilerplate. It pulls metadata file from chain, but never adds it:\r\n\r\n<img width=\"527\" alt=\"Screenshot 2020-01-09 at 06 38 49\" src=\"https://user-images.githubusercontent.com/7374093/72030461-d35ae500-32aa-11ea-9e31-3f6b44af5d5d.png\">\r\n\r\n\r\n<img width=\"310\" alt=\"Screenshot 2020-01-09 at 06 40 12\" src=\"https://user-images.githubusercontent.com/7374093/72030485-e79ee200-32aa-11ea-918f-9f17d3f9edce.png\">\r\n\r\nOSX \"desktop app\", Version 1.7.4 (1.7.4)",
  "closed_by": {
    "login": "wtzb",
    "id": 11412480,
    "node_id": "MDQ6VXNlcjExNDEyNDgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/11412480?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wtzb",
    "html_url": "https://github.com/wtzb",
    "followers_url": "https://api.github.com/users/wtzb/followers",
    "following_url": "https://api.github.com/users/wtzb/following{/other_user}",
    "gists_url": "https://api.github.com/users/wtzb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wtzb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wtzb/subscriptions",
    "organizations_url": "https://api.github.com/users/wtzb/orgs",
    "repos_url": "https://api.github.com/users/wtzb/repos",
    "events_url": "https://api.github.com/users/wtzb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wtzb/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/2951/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/2951/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/576172347",
    "html_url": "https://github.com/MyCryptoHQ/MyCrypto/issues/2951#issuecomment-576172347",
    "issue_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/2951",
    "id": 576172347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NjE3MjM0Nw==",
    "user": {
      "login": "wtzb",
      "id": 11412480,
      "node_id": "MDQ6VXNlcjExNDEyNDgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11412480?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wtzb",
      "html_url": "https://github.com/wtzb",
      "followers_url": "https://api.github.com/users/wtzb/followers",
      "following_url": "https://api.github.com/users/wtzb/following{/other_user}",
      "gists_url": "https://api.github.com/users/wtzb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wtzb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wtzb/subscriptions",
      "organizations_url": "https://api.github.com/users/wtzb/orgs",
      "repos_url": "https://api.github.com/users/wtzb/repos",
      "events_url": "https://api.github.com/users/wtzb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wtzb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-20T08:55:17Z",
    "updated_at": "2020-01-20T08:55:17Z",
    "author_association": "COLLABORATOR",
    "body": "Could you provide a token contract address so we could try and reproduce this issue? Thanks :)",
    "reactions": {
      "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/576172347/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/576421896",
    "html_url": "https://github.com/MyCryptoHQ/MyCrypto/issues/2951#issuecomment-576421896",
    "issue_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/2951",
    "id": 576421896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NjQyMTg5Ng==",
    "user": {
      "login": "sammy007",
      "id": 7374093,
      "node_id": "MDQ6VXNlcjczNzQwOTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7374093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sammy007",
      "html_url": "https://github.com/sammy007",
      "followers_url": "https://api.github.com/users/sammy007/followers",
      "following_url": "https://api.github.com/users/sammy007/following{/other_user}",
      "gists_url": "https://api.github.com/users/sammy007/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sammy007/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sammy007/subscriptions",
      "organizations_url": "https://api.github.com/users/sammy007/orgs",
      "repos_url": "https://api.github.com/users/sammy007/repos",
      "events_url": "https://api.github.com/users/sammy007/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sammy007/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-20T20:32:10Z",
    "updated_at": "2020-01-20T20:32:10Z",
    "author_association": "NONE",
    "body": "```solidity\r\npragma solidity ^0.4.16;\r\ncontract Token {\r\n\r\n    /// @return total amount of tokens\r\n    function totalSupply() constant returns (uint256 supply) {}\r\n\r\n    /// @param _owner The address from which the balance will be retrieved\r\n    /// @return The balance\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {}\r\n\r\n    /// @notice send `_value` token to `_to` from `msg.sender`\r\n    /// @param _to The address of the recipient\r\n    /// @param _value The amount of token to be transferred\r\n    /// @return Whether the transfer was successful or not\r\n    function transfer(address _to, uint256 _value) returns (bool success) {}\r\n\r\n    /// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\r\n    /// @param _from The address of the sender\r\n    /// @param _to The address of the recipient\r\n    /// @param _value The amount of token to be transferred\r\n    /// @return Whether the transfer was successful or not\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}\r\n\r\n    /// @notice `msg.sender` approves `_addr` to spend `_value` tokens\r\n    /// @param _spender The address of the account able to transfer the tokens\r\n    /// @param _value The amount of wei to be approved for transfer\r\n    /// @return Whether the approval was successful or not\r\n    function approve(address _spender, uint256 _value) returns (bool success) {}\r\n\r\n    /// @param _owner The address of the account owning tokens\r\n    /// @param _spender The address of the account able to transfer the tokens\r\n    /// @return Amount of remaining tokens allowed to spent\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    \r\n}\r\n\r\n\r\n\r\ncontract StandardToken is Token {\r\n\r\n    function transfer(address _to, uint256 _value) returns (bool success) {\r\n        //Default assumes totalSupply can't be over max (2^256 - 1).\r\n        //If your token leaves out totalSupply and can issue more tokens as time goes on, you need to check if it doesn't wrap.\r\n        //Replace the if with this one instead.\r\n        //if (balances[msg.sender] >= _value && balances[_to] + _value > balances[_to]) {\r\n        if (balances[msg.sender] >= _value && _value > 0) {\r\n            balances[msg.sender] -= _value;\r\n            balances[_to] += _value;\r\n            Transfer(msg.sender, _to, _value);\r\n            return true;\r\n        } else { return false; }\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n        //same as above. Replace this line with the following if you want to protect against wrapping uints.\r\n        //if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value > balances[_to]) {\r\n        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\r\n            balances[_to] += _value;\r\n            balances[_from] -= _value;\r\n            allowed[_from][msg.sender] -= _value;\r\n            Transfer(_from, _to, _value);\r\n            return true;\r\n        } else { return false; }\r\n    }\r\n\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n      return allowed[_owner][_spender];\r\n    }\r\n\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n    uint256 public totalSupply;\r\n}\r\n\r\n\r\n//name this contract whatever you'd like\r\ncontract ERC20Token is StandardToken {\r\n\r\n    function () {\r\n        //if ether is sent to this address, send it back.\r\n        throw;\r\n    }\r\n\r\n    /* Public variables of the token */\r\n\r\n    /*\r\n    NOTE:\r\n    The following variables are OPTIONAL vanities. One does not have to include them.\r\n    They allow one to customise the token contract & in no way influences the core functionality.\r\n    Some wallets/interfaces might not even bother to look at this information.\r\n    */\r\n    string public name;                   //fancy name: eg Simon Bucks\r\n    uint8 public decimals;                //How many decimals to show. ie. There could 1000 base units with 3 decimals. Meaning 0.980 SBX = 980 base units. It's like comparing 1 wei to 1 ether.\r\n    string public symbol;                 //An identifier: eg SBX\r\n    string public version = 'H1.0';       //human 0.1 standard. Just an arbitrary versioning scheme.\r\n\r\n//\r\n// CHANGE THESE VALUES FOR YOUR TOKEN\r\n//\r\n\r\n//make sure this function name matches the contract name above. So if you're token is called TutorialToken, make sure the //contract name above is also TutorialToken instead of ERC20Token\r\n\r\n    function ERC20Token(\r\n        ) {\r\n        balances[msg.sender] = 1000000000000000;\r\n        totalSupply = 100000000000000000;\r\n        name = \"JUNK\";\r\n        decimals = 8;\r\n        symbol = \"SCAM\";\r\n    }\r\n\r\n    /* Approves and then calls the receiving contract */\r\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n\r\n        //call the receiveApproval function on the contract you want to be notified. This crafts the function signature manually so one doesn't have to include a contract in here just for this.\r\n        //receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _extraData)\r\n        //it is assumed that when does this that the call *should* succeed, otherwise one would use vanilla approve instead.\r\n        if(!_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)) { throw; }\r\n        return true;\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/576421896/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/576617976",
    "html_url": "https://github.com/MyCryptoHQ/MyCrypto/issues/2951#issuecomment-576617976",
    "issue_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/2951",
    "id": 576617976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NjYxNzk3Ng==",
    "user": {
      "login": "wtzb",
      "id": 11412480,
      "node_id": "MDQ6VXNlcjExNDEyNDgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11412480?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wtzb",
      "html_url": "https://github.com/wtzb",
      "followers_url": "https://api.github.com/users/wtzb/followers",
      "following_url": "https://api.github.com/users/wtzb/following{/other_user}",
      "gists_url": "https://api.github.com/users/wtzb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wtzb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wtzb/subscriptions",
      "organizations_url": "https://api.github.com/users/wtzb/orgs",
      "repos_url": "https://api.github.com/users/wtzb/repos",
      "events_url": "https://api.github.com/users/wtzb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wtzb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-21T10:28:57Z",
    "updated_at": "2020-01-21T10:28:57Z",
    "author_association": "COLLABORATOR",
    "body": "I can't seem to reproduce this using the desktop app, private Parity chain, and adding a token after deploying it on the local chain using Remix.\r\n\r\n![image](https://user-images.githubusercontent.com/11412480/72797100-dc24c100-3c83-11ea-8134-3760d7bb8f0b.png)\r\n\r\nCould you tell me the exact steps which made you run into this issue? Perhaps that would help me reproduce it :+1: ",
    "reactions": {
      "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/576617976/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/642194916",
    "html_url": "https://github.com/MyCryptoHQ/MyCrypto/issues/2951#issuecomment-642194916",
    "issue_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/2951",
    "id": 642194916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjE5NDkxNg==",
    "user": {
      "login": "wtzb",
      "id": 11412480,
      "node_id": "MDQ6VXNlcjExNDEyNDgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11412480?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wtzb",
      "html_url": "https://github.com/wtzb",
      "followers_url": "https://api.github.com/users/wtzb/followers",
      "following_url": "https://api.github.com/users/wtzb/following{/other_user}",
      "gists_url": "https://api.github.com/users/wtzb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wtzb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wtzb/subscriptions",
      "organizations_url": "https://api.github.com/users/wtzb/orgs",
      "repos_url": "https://api.github.com/users/wtzb/repos",
      "events_url": "https://api.github.com/users/wtzb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wtzb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-10T18:53:56Z",
    "updated_at": "2020-06-10T18:53:56Z",
    "author_association": "COLLABORATOR",
    "body": "Hi there! As I haven't received a reply since my previous response, I will be closing this issue here. However, please know that you are always free to [reach out directly](https://support.mycrypto.com/contact-us), may you have any additional questions or concerns. Thank you so much!",
    "reactions": {
      "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/642194916/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
