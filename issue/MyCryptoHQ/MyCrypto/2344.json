{
  "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/2344",
  "repository_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto",
  "labels_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/2344/labels{/name}",
  "comments_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/2344/comments",
  "events_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/2344/events",
  "html_url": "https://github.com/MyCryptoHQ/MyCrypto/issues/2344",
  "id": 397386273,
  "node_id": "MDU6SXNzdWUzOTczODYyNzM=",
  "number": 2344,
  "title": "Msg.sender causes incorrect boolean value",
  "user": {
    "login": "ETeissonniere",
    "id": 10683430,
    "node_id": "MDQ6VXNlcjEwNjgzNDMw",
    "avatar_url": "https://avatars.githubusercontent.com/u/10683430?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ETeissonniere",
    "html_url": "https://github.com/ETeissonniere",
    "followers_url": "https://api.github.com/users/ETeissonniere/followers",
    "following_url": "https://api.github.com/users/ETeissonniere/following{/other_user}",
    "gists_url": "https://api.github.com/users/ETeissonniere/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ETeissonniere/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ETeissonniere/subscriptions",
    "organizations_url": "https://api.github.com/users/ETeissonniere/orgs",
    "repos_url": "https://api.github.com/users/ETeissonniere/repos",
    "events_url": "https://api.github.com/users/ETeissonniere/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ETeissonniere/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2019-01-09T14:06:12Z",
  "updated_at": "2019-01-09T17:28:24Z",
  "closed_at": "2019-01-09T17:28:23Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Description of the Issue\r\n\r\nIn **some cases**, calling a contract's Boolean function returns the **inverse** of the return value.\r\n\r\n### Steps to Reproduce\r\n\r\nI deploy the `Ownable`contract from open zeppelin on **ropsten** at [0xe013189aE8F2019FBA93a5d02A2272bDcaF3cdc9](https://ropsten.etherscan.io/address/0xe013189ae8f2019fba93a5d02a2272bdcaf3cdc9).\r\n\r\nSource code is as follows:\r\n```\r\npragma solidity ^0.4.24;\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address private _owner;\r\n\r\n  event OwnershipTransferred(\r\n    address indexed previousOwner,\r\n    address indexed newOwner\r\n  );\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  constructor() public {\r\n    _owner = msg.sender;\r\n    emit OwnershipTransferred(address(0), _owner);\r\n  }\r\n\r\n  /**\r\n   * @return the address of the owner.\r\n   */\r\n  function owner() public view returns(address) {\r\n    return _owner;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(isOwner());\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @return true if `msg.sender` is the owner of the contract.\r\n   */\r\n  function isOwner() public view returns(bool) {\r\n    return msg.sender == _owner;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to relinquish control of the contract.\r\n   * @notice Renouncing to ownership will leave the contract without an owner.\r\n   * It will not be possible to call the functions with the `onlyOwner`\r\n   * modifier anymore.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipTransferred(_owner, address(0));\r\n    _owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    _transferOwnership(newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function _transferOwnership(address newOwner) internal {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(_owner, newOwner);\r\n    _owner = newOwner;\r\n  }\r\n}\r\n```\r\n\r\nABI is as follows:\r\n```\r\n[\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"renounceOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"name\": \"previousOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"OwnershipTransferred\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"isOwner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"owner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n]\r\n```\r\n\r\nCalling `isOwner` returns false:\r\n<img width=\"1201\" alt=\"capture d ecran 2019-01-09 a 15 02 25\" src=\"https://user-images.githubusercontent.com/10683430/50904048-9520b080-141f-11e9-8c4e-acf3700595df.png\">\r\n\r\nBut `owner` returns the right address (account is ok, checked multiple times):\r\n<img width=\"1201\" alt=\"capture d ecran 2019-01-09 a 15 02 53\" src=\"https://user-images.githubusercontent.com/10683430/50904075-a669bd00-141f-11e9-94c7-b341c5bc9a14.png\">\r\n\r\nFirst thought it was an issue with the contract, then Metamask but other wallets displays the value correctly.\r\n\r\nWhat's strange is that it doesn't happen with a trivial contract like that (no changes with `pure` or `view` modifiers update):\r\n```\r\npragma solidity >=0.4.22 <0.6.0;\r\n\r\ncontract Tester {\r\n    function isTrue() pure public returns (bool) {\r\n        return true;\r\n    }\r\n    \r\n    function isFalse() pure public returns (bool) {\r\n        return false;\r\n    }\r\n}\r\n```\r\n\r\n### Description of Your Machine\r\n\r\nMac OS, Chrome (latest), Metamask.\r\n\r\n### Console Logs / Screenshots\r\n\r\nNothing of interests in the console (appart from a very nice ascii art ðŸ˜„)",
  "closed_by": {
    "login": "ETeissonniere",
    "id": 10683430,
    "node_id": "MDQ6VXNlcjEwNjgzNDMw",
    "avatar_url": "https://avatars.githubusercontent.com/u/10683430?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ETeissonniere",
    "html_url": "https://github.com/ETeissonniere",
    "followers_url": "https://api.github.com/users/ETeissonniere/followers",
    "following_url": "https://api.github.com/users/ETeissonniere/following{/other_user}",
    "gists_url": "https://api.github.com/users/ETeissonniere/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ETeissonniere/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ETeissonniere/subscriptions",
    "organizations_url": "https://api.github.com/users/ETeissonniere/orgs",
    "repos_url": "https://api.github.com/users/ETeissonniere/repos",
    "events_url": "https://api.github.com/users/ETeissonniere/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ETeissonniere/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/2344/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/2344/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/452711690",
    "html_url": "https://github.com/MyCryptoHQ/MyCrypto/issues/2344#issuecomment-452711690",
    "issue_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/2344",
    "id": 452711690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjcxMTY5MA==",
    "user": {
      "login": "ETeissonniere",
      "id": 10683430,
      "node_id": "MDQ6VXNlcjEwNjgzNDMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/10683430?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ETeissonniere",
      "html_url": "https://github.com/ETeissonniere",
      "followers_url": "https://api.github.com/users/ETeissonniere/followers",
      "following_url": "https://api.github.com/users/ETeissonniere/following{/other_user}",
      "gists_url": "https://api.github.com/users/ETeissonniere/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ETeissonniere/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ETeissonniere/subscriptions",
      "organizations_url": "https://api.github.com/users/ETeissonniere/orgs",
      "repos_url": "https://api.github.com/users/ETeissonniere/repos",
      "events_url": "https://api.github.com/users/ETeissonniere/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ETeissonniere/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-09T14:18:21Z",
    "updated_at": "2019-01-09T14:18:21Z",
    "author_association": "NONE",
    "body": "Seems like the `msg.sender` would cause this problem, here is a simpler test contract:\r\n```\r\npragma solidity ^0.4.24;\r\n\r\ncontract Test {\r\n  address private test;\r\n  \r\n  constructor() public {\r\n      test = msg.sender;\r\n  }\r\n  \r\n  function is0() public view returns (bool) {\r\n      return test == 0x0;\r\n  }\r\n  \r\n  function isNot1() public view returns (bool) {\r\n      return test != 0x0;\r\n  }\r\n  \r\n  function isMe() public view returns (bool) {\r\n      return msg.sender == test;\r\n  }\r\n  \r\n  function change(address newTest) public {\r\n      require(msg.sender == test);\r\n      \r\n      test = newTest;\r\n  }\r\n}\r\n```\r\n\r\n```\r\n[\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"is0\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"isMe\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"newTest\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"change\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"isNot1\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t}\r\n]\r\n```\r\n\r\nAvailable at https://ropsten.etherscan.io/tx/0x40456b2b3ea30a82dfb0048c1b66fe322fed7246245b7a76489fe7ca4ee13ed0.\r\n\r\n#### Wrong value on `isMe()` (other functions ok):\r\n<img width=\"1201\" alt=\"capture d ecran 2019-01-09 a 15 14 42\" src=\"https://user-images.githubusercontent.com/10683430/50904704-4bd16080-1421-11e9-87a1-297f824a4acf.png\">",
    "reactions": {
      "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/452711690/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/452757562",
    "html_url": "https://github.com/MyCryptoHQ/MyCrypto/issues/2344#issuecomment-452757562",
    "issue_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/2344",
    "id": 452757562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mjc1NzU2Mg==",
    "user": {
      "login": "blurpesec",
      "id": 29407814,
      "node_id": "MDQ6VXNlcjI5NDA3ODE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/29407814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blurpesec",
      "html_url": "https://github.com/blurpesec",
      "followers_url": "https://api.github.com/users/blurpesec/followers",
      "following_url": "https://api.github.com/users/blurpesec/following{/other_user}",
      "gists_url": "https://api.github.com/users/blurpesec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blurpesec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blurpesec/subscriptions",
      "organizations_url": "https://api.github.com/users/blurpesec/orgs",
      "repos_url": "https://api.github.com/users/blurpesec/repos",
      "events_url": "https://api.github.com/users/blurpesec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blurpesec/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-09T16:21:48Z",
    "updated_at": "2019-01-09T16:21:48Z",
    "author_association": "COLLABORATOR",
    "body": "Heya ETeissonniere. So the reason this is showing incorrectly is because the `isOwner()` and `isMe()` functions in this instance require `msg.sender`. When we query a contract to read it, we're not actually sending a transaction (`msg.sender` being the address that sent the transaction), so the `msg.sender` cant be the same as the owner and, therefore, it will always return false.",
    "reactions": {
      "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/452757562/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/452780788",
    "html_url": "https://github.com/MyCryptoHQ/MyCrypto/issues/2344#issuecomment-452780788",
    "issue_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/2344",
    "id": 452780788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mjc4MDc4OA==",
    "user": {
      "login": "ETeissonniere",
      "id": 10683430,
      "node_id": "MDQ6VXNlcjEwNjgzNDMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/10683430?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ETeissonniere",
      "html_url": "https://github.com/ETeissonniere",
      "followers_url": "https://api.github.com/users/ETeissonniere/followers",
      "following_url": "https://api.github.com/users/ETeissonniere/following{/other_user}",
      "gists_url": "https://api.github.com/users/ETeissonniere/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ETeissonniere/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ETeissonniere/subscriptions",
      "organizations_url": "https://api.github.com/users/ETeissonniere/orgs",
      "repos_url": "https://api.github.com/users/ETeissonniere/repos",
      "events_url": "https://api.github.com/users/ETeissonniere/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ETeissonniere/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-09T17:28:23Z",
    "updated_at": "2019-01-09T17:28:23Z",
    "author_association": "NONE",
    "body": "Thanks @blurpesec, I will be sure to note this for next times.\r\nClosing as I guess it is a \"won't fix\" (ain't even sure it could be fixed).",
    "reactions": {
      "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/452780788/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
