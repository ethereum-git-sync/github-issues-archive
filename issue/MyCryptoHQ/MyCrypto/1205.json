{
  "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/1205",
  "repository_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto",
  "labels_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/1205/labels{/name}",
  "comments_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/1205/comments",
  "events_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/1205/events",
  "html_url": "https://github.com/MyCryptoHQ/MyCrypto/issues/1205",
  "id": 301220256,
  "node_id": "MDU6SXNzdWUzMDEyMjAyNTY=",
  "number": 1205,
  "title": "Improve redux state storage & hydration",
  "user": {
    "login": "wbobeirne",
    "id": 649992,
    "node_id": "MDQ6VXNlcjY0OTk5Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/649992?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wbobeirne",
    "html_url": "https://github.com/wbobeirne",
    "followers_url": "https://api.github.com/users/wbobeirne/followers",
    "following_url": "https://api.github.com/users/wbobeirne/following{/other_user}",
    "gists_url": "https://api.github.com/users/wbobeirne/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wbobeirne/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wbobeirne/subscriptions",
    "organizations_url": "https://api.github.com/users/wbobeirne/orgs",
    "repos_url": "https://api.github.com/users/wbobeirne/repos",
    "events_url": "https://api.github.com/users/wbobeirne/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wbobeirne/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 800886079,
      "node_id": "MDU6TGFiZWw4MDA4ODYwNzk=",
      "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/labels/type:%20discussion",
      "name": "type: discussion",
      "color": "004080",
      "default": false,
      "description": "Items that are primarily a discussion around a feature or issue. May evolve to be actionable."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-02-28T23:13:22Z",
  "updated_at": "2018-08-28T22:15:03Z",
  "closed_at": "2018-08-28T22:15:03Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Right now our code for saving and restoring redux state in local storage is tenuous at best. It's all in store.ts in a very ad-hoc way, there's a good amount of repetition between the saving and loading portions, and there's no good way to alter redux state without blowing away local storage, which will no longer be an option once we hit production. Here's are my proposals, which are largely inspired by most databases that have the same kinds of persistence issues:\r\n\r\n#### 1) Have a manifest object & type for saving & loading state\r\n\r\nIf you want to save a key, you should just mark it off in one manifest. That manifest should be typed, so that we're sure that if something's supposed to be in it, it's there. I'm not sure how this should look though, so feedback is welcome.\r\n\r\n#### 2) Provide \"hooks\" for custom behavior\r\n\r\nSwap doesn't reload state unless you're on step 3. Transactions need to re-BN gas price. There should be a pre-load step that allows us to do these checks, and manipulate the stored state.\r\n\r\n#### 3) Version state, run through \"upgrade\" functions\r\n\r\nAn additional key should be saved in `REDUX_STATE` called `VERSION`, which maps to a constant in code. This should be an integer that's incremented by one every time there's a breaking change. Upon loading a store, we should check if the version number is below the current one, and if so, increment it by one and run the relevant update function on the store. Repeat until they're up to the current version, and save that to local storage again.\r\n\r\ncc @dternyak @HenryNguyen5 @skubakdj @james-prado @aitrean for discussion.",
  "closed_by": {
    "login": "ConnorBryan",
    "id": 10479826,
    "node_id": "MDQ6VXNlcjEwNDc5ODI2",
    "avatar_url": "https://avatars.githubusercontent.com/u/10479826?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ConnorBryan",
    "html_url": "https://github.com/ConnorBryan",
    "followers_url": "https://api.github.com/users/ConnorBryan/followers",
    "following_url": "https://api.github.com/users/ConnorBryan/following{/other_user}",
    "gists_url": "https://api.github.com/users/ConnorBryan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ConnorBryan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ConnorBryan/subscriptions",
    "organizations_url": "https://api.github.com/users/ConnorBryan/orgs",
    "repos_url": "https://api.github.com/users/ConnorBryan/repos",
    "events_url": "https://api.github.com/users/ConnorBryan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ConnorBryan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/1205/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/1205/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/369445915",
    "html_url": "https://github.com/MyCryptoHQ/MyCrypto/issues/1205#issuecomment-369445915",
    "issue_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/1205",
    "id": 369445915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTQ0NTkxNQ==",
    "user": {
      "login": "HenryNguyen5",
      "id": 6404866,
      "node_id": "MDQ6VXNlcjY0MDQ4NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6404866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HenryNguyen5",
      "html_url": "https://github.com/HenryNguyen5",
      "followers_url": "https://api.github.com/users/HenryNguyen5/followers",
      "following_url": "https://api.github.com/users/HenryNguyen5/following{/other_user}",
      "gists_url": "https://api.github.com/users/HenryNguyen5/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HenryNguyen5/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HenryNguyen5/subscriptions",
      "organizations_url": "https://api.github.com/users/HenryNguyen5/orgs",
      "repos_url": "https://api.github.com/users/HenryNguyen5/repos",
      "events_url": "https://api.github.com/users/HenryNguyen5/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HenryNguyen5/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-01T01:42:22Z",
    "updated_at": "2018-03-01T01:42:22Z",
    "author_association": "NONE",
    "body": "I ran into the same issue before during the `nodes-networks-redux` refactor, and while thinking of a future solution, 3) seemed most natural. During some research after, something like `redux-persist` package would really help here as we can have per-reducer state hydration, including sub-reducers. This would definitely increase maintainability as we would only have to worry about rehydrating small slices of state per file, just like how reducers are coded in. The package also provides migration hooks to move between versions of state.",
    "reactions": {
      "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/369445915/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/412983859",
    "html_url": "https://github.com/MyCryptoHQ/MyCrypto/issues/1205#issuecomment-412983859",
    "issue_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/1205",
    "id": 412983859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjk4Mzg1OQ==",
    "user": {
      "login": "SharonManrique",
      "id": 25834495,
      "node_id": "MDQ6VXNlcjI1ODM0NDk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/25834495?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SharonManrique",
      "html_url": "https://github.com/SharonManrique",
      "followers_url": "https://api.github.com/users/SharonManrique/followers",
      "following_url": "https://api.github.com/users/SharonManrique/following{/other_user}",
      "gists_url": "https://api.github.com/users/SharonManrique/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SharonManrique/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SharonManrique/subscriptions",
      "organizations_url": "https://api.github.com/users/SharonManrique/orgs",
      "repos_url": "https://api.github.com/users/SharonManrique/repos",
      "events_url": "https://api.github.com/users/SharonManrique/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SharonManrique/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-14T19:12:37Z",
    "updated_at": "2018-08-14T19:12:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "[Added to Asana](https://app.asana.com/0/763966770926912/779983315837105)",
    "reactions": {
      "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/412983859/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
