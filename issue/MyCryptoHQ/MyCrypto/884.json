{
  "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/884",
  "repository_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto",
  "labels_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/884/labels{/name}",
  "comments_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/884/comments",
  "events_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/884/events",
  "html_url": "https://github.com/MyCryptoHQ/MyCrypto/issues/884",
  "id": 290651871,
  "node_id": "MDU6SXNzdWUyOTA2NTE4NzE=",
  "number": 884,
  "title": "Use reselect for computed selectors",
  "user": {
    "login": "wbobeirne",
    "id": 649992,
    "node_id": "MDQ6VXNlcjY0OTk5Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/649992?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wbobeirne",
    "html_url": "https://github.com/wbobeirne",
    "followers_url": "https://api.github.com/users/wbobeirne/followers",
    "following_url": "https://api.github.com/users/wbobeirne/following{/other_user}",
    "gists_url": "https://api.github.com/users/wbobeirne/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wbobeirne/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wbobeirne/subscriptions",
    "organizations_url": "https://api.github.com/users/wbobeirne/orgs",
    "repos_url": "https://api.github.com/users/wbobeirne/repos",
    "events_url": "https://api.github.com/users/wbobeirne/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wbobeirne/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 654893566,
      "node_id": "MDU6TGFiZWw2NTQ4OTM1NjY=",
      "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/labels/type:%20enhancement",
      "name": "type: enhancement",
      "color": "008080",
      "default": false,
      "description": "Items that improve overall user experience and/or expand on existing features."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "wbobeirne",
    "id": 649992,
    "node_id": "MDQ6VXNlcjY0OTk5Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/649992?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wbobeirne",
    "html_url": "https://github.com/wbobeirne",
    "followers_url": "https://api.github.com/users/wbobeirne/followers",
    "following_url": "https://api.github.com/users/wbobeirne/following{/other_user}",
    "gists_url": "https://api.github.com/users/wbobeirne/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wbobeirne/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wbobeirne/subscriptions",
    "organizations_url": "https://api.github.com/users/wbobeirne/orgs",
    "repos_url": "https://api.github.com/users/wbobeirne/repos",
    "events_url": "https://api.github.com/users/wbobeirne/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wbobeirne/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "wbobeirne",
      "id": 649992,
      "node_id": "MDQ6VXNlcjY0OTk5Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wbobeirne",
      "html_url": "https://github.com/wbobeirne",
      "followers_url": "https://api.github.com/users/wbobeirne/followers",
      "following_url": "https://api.github.com/users/wbobeirne/following{/other_user}",
      "gists_url": "https://api.github.com/users/wbobeirne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wbobeirne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wbobeirne/subscriptions",
      "organizations_url": "https://api.github.com/users/wbobeirne/orgs",
      "repos_url": "https://api.github.com/users/wbobeirne/repos",
      "events_url": "https://api.github.com/users/wbobeirne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wbobeirne/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-01-22T23:16:56Z",
  "updated_at": "2018-08-28T22:02:04Z",
  "closed_at": "2018-08-28T22:02:04Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "The [`reselect`](https://github.com/reactjs/reselect) library was made to give computed selectors a cache, so that they'll be shallowly comparable between renders. This is really important for some of our selectors, like `getTokens` or `getTokenBalances` that return the results of `.map`s and `.reduce`s. There's three things I'd like to see out of this getting tackled:\r\n\r\n* [ ] All selectors should be shallowly equal if called with equivalent state\r\n* [ ] Selectors that use `reselect` should have a unit test that confirms that it's shallowly equal when called with the same state twice (Make a util function for this)\r\n* [ ] Code that was written to circumvent the rerender issue should be removed\r\n    * The one instance I can think of is EquivalentValues keeps a cache of fetched rates instead of checking props equivalency due to an inifinite loop of bad equivalency checks.",
  "closed_by": {
    "login": "ConnorBryan",
    "id": 10479826,
    "node_id": "MDQ6VXNlcjEwNDc5ODI2",
    "avatar_url": "https://avatars.githubusercontent.com/u/10479826?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ConnorBryan",
    "html_url": "https://github.com/ConnorBryan",
    "followers_url": "https://api.github.com/users/ConnorBryan/followers",
    "following_url": "https://api.github.com/users/ConnorBryan/following{/other_user}",
    "gists_url": "https://api.github.com/users/ConnorBryan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ConnorBryan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ConnorBryan/subscriptions",
    "organizations_url": "https://api.github.com/users/ConnorBryan/orgs",
    "repos_url": "https://api.github.com/users/ConnorBryan/repos",
    "events_url": "https://api.github.com/users/ConnorBryan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ConnorBryan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/884/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/884/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/368134780",
    "html_url": "https://github.com/MyCryptoHQ/MyCrypto/issues/884#issuecomment-368134780",
    "issue_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/884",
    "id": 368134780,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODEzNDc4MA==",
    "user": {
      "login": "wbobeirne",
      "id": 649992,
      "node_id": "MDQ6VXNlcjY0OTk5Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wbobeirne",
      "html_url": "https://github.com/wbobeirne",
      "followers_url": "https://api.github.com/users/wbobeirne/followers",
      "following_url": "https://api.github.com/users/wbobeirne/following{/other_user}",
      "gists_url": "https://api.github.com/users/wbobeirne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wbobeirne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wbobeirne/subscriptions",
      "organizations_url": "https://api.github.com/users/wbobeirne/orgs",
      "repos_url": "https://api.github.com/users/wbobeirne/repos",
      "events_url": "https://api.github.com/users/wbobeirne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wbobeirne/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T20:50:59Z",
    "updated_at": "2018-02-23T20:50:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've pushed all of my work on this so far to a [`reselect`](https://github.com/MyCryptoHQ/MyCrypto/tree/reselect) branch, but unfortunately I've hit a wall on this one. Reselect does not work when selectors have circular dependencies, and unfortunately we have those in spades with our selectors, some of these dependency chains going 15+ files deep. This leaves us with a few options.\r\n\r\n1. Fix all circular dependencies. This will probably result in massive file bloat, potentially most simply solved by one selector per file, and just importing all selectors by a single `index.ts` in `common/selectors` except for in selector files, where you'd import the specific selector you needed (e.g. `import getNetworkTokens from 'selectors/config/networks/getNetworkTokens'`)\r\n2. Move all selectors into one massive file, and just order that based on dependencies. Pretty unappealing, to say the least.\r\n\r\nNeither of these are very fun solutions to implement, but I think it's better than the alternative of these unneeded re-renders. Would appreciate some feedback on what people think is the way to go cc @dternyak @HenryNguyen5.",
    "reactions": {
      "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/368134780/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
