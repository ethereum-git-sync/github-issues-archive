{
  "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/1084",
  "repository_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto",
  "labels_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/1084/labels{/name}",
  "comments_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/1084/comments",
  "events_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/1084/events",
  "html_url": "https://github.com/MyCryptoHQ/MyCrypto/issues/1084",
  "id": 296852187,
  "node_id": "MDU6SXNzdWUyOTY4NTIxODc=",
  "number": 1084,
  "title": "Refactor Bad Browser Check",
  "user": {
    "login": "skubakdj",
    "id": 8206446,
    "node_id": "MDQ6VXNlcjgyMDY0NDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8206446?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/skubakdj",
    "html_url": "https://github.com/skubakdj",
    "followers_url": "https://api.github.com/users/skubakdj/followers",
    "following_url": "https://api.github.com/users/skubakdj/following{/other_user}",
    "gists_url": "https://api.github.com/users/skubakdj/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/skubakdj/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/skubakdj/subscriptions",
    "organizations_url": "https://api.github.com/users/skubakdj/orgs",
    "repos_url": "https://api.github.com/users/skubakdj/repos",
    "events_url": "https://api.github.com/users/skubakdj/events{/privacy}",
    "received_events_url": "https://api.github.com/users/skubakdj/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-02-13T19:10:57Z",
  "updated_at": "2018-07-02T21:39:26Z",
  "closed_at": "2018-07-02T21:39:26Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "There are several changes we can make to our bad browser check that will allow us to harden app-wide security: \r\n\r\n 1. Move the check out of `index.html` to its own individual file. This will allow us to restrict the execution of inline JavaScript.\r\n 2. Remove calls to `eval`. Allows us to restrict the page from having access to `eval` entirely. \r\n ",
  "closed_by": {
    "login": "dternyak",
    "id": 7861465,
    "node_id": "MDQ6VXNlcjc4NjE0NjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7861465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dternyak",
    "html_url": "https://github.com/dternyak",
    "followers_url": "https://api.github.com/users/dternyak/followers",
    "following_url": "https://api.github.com/users/dternyak/following{/other_user}",
    "gists_url": "https://api.github.com/users/dternyak/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dternyak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dternyak/subscriptions",
    "organizations_url": "https://api.github.com/users/dternyak/orgs",
    "repos_url": "https://api.github.com/users/dternyak/repos",
    "events_url": "https://api.github.com/users/dternyak/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dternyak/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/1084/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/1084/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/365468636",
    "html_url": "https://github.com/MyCryptoHQ/MyCrypto/issues/1084#issuecomment-365468636",
    "issue_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/1084",
    "id": 365468636,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTQ2ODYzNg==",
    "user": {
      "login": "wbobeirne",
      "id": 649992,
      "node_id": "MDQ6VXNlcjY0OTk5Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wbobeirne",
      "html_url": "https://github.com/wbobeirne",
      "followers_url": "https://api.github.com/users/wbobeirne/followers",
      "following_url": "https://api.github.com/users/wbobeirne/following{/other_user}",
      "gists_url": "https://api.github.com/users/wbobeirne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wbobeirne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wbobeirne/subscriptions",
      "organizations_url": "https://api.github.com/users/wbobeirne/orgs",
      "repos_url": "https://api.github.com/users/wbobeirne/repos",
      "events_url": "https://api.github.com/users/wbobeirne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wbobeirne/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-14T01:46:13Z",
    "updated_at": "2018-02-14T01:46:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "This definitely wasn't my ideal solution for the bad browser check, but I'll definitely say this is a tricky one to fulfill all of the requirements of and have it still work for a few issues:\r\n\r\n* The JS is in index.html because it can't be a part of the main bundle. Any language feature used that the user's browser doesn't handle results in the bundle not loading, and a white screen.\r\n* `eval` is the only bullet-proof way to check for certain language features, like `let` and `const`. Anything else is a heuristic, not an actual check.\r\n* I don't think you can outright disable eval in a traditional browser? But I belive this is possible on Electron, though that's already sandbox'd and only runs local JS as-is.\r\n\r\nThere are a few possible ways to get around these issues\r\n\r\n* Make the bad browser checker its own Webpack bundle. This would separate it from errors of the other bundles, but also means that if any of the generated Webpack code isn't kosher, then it still fails. Pretty unlikely though.\r\n* Make the bad browser check a thing to be _not_ triggered, rather than actively triggered. We could possibly check to see if the page hasn't loaded X seconds after all assets have been downloaded, and if so, let the user know something went wrong. This could result in some false positives though.\r\n\r\nAnyway, just some thoughts on the problem. It's a doozy.",
    "reactions": {
      "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/365468636/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
