{
  "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/136",
  "repository_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto",
  "labels_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/136/labels{/name}",
  "comments_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/136/comments",
  "events_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/136/events",
  "html_url": "https://github.com/MyCryptoHQ/MyCrypto/issues/136",
  "id": 253183397,
  "node_id": "MDU6SXNzdWUyNTMxODMzOTc=",
  "number": 136,
  "title": "Audit Error Handling for All Existing Network Requests",
  "user": {
    "login": "dternyak",
    "id": 7861465,
    "node_id": "MDQ6VXNlcjc4NjE0NjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7861465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dternyak",
    "html_url": "https://github.com/dternyak",
    "followers_url": "https://api.github.com/users/dternyak/followers",
    "following_url": "https://api.github.com/users/dternyak/following{/other_user}",
    "gists_url": "https://api.github.com/users/dternyak/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dternyak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dternyak/subscriptions",
    "organizations_url": "https://api.github.com/users/dternyak/orgs",
    "repos_url": "https://api.github.com/users/dternyak/repos",
    "events_url": "https://api.github.com/users/dternyak/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dternyak/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2017-08-27T19:18:31Z",
  "updated_at": "2018-01-30T19:47:22Z",
  "closed_at": "2017-09-17T04:05:18Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "All network requests should be handled via Saga Middleware, but so far there has not been a focus on ensuring that there is a \"graceful failure\" in the case where a network request is unsuccessful.\r\n\r\nFor example, in the `rates` saga, there is no error handling:\r\n\r\n```\r\nconst symbols = ['USD', 'EUR', 'GBP', 'BTC', 'CHF', 'REP'];\r\n\r\nfunction fetchRates(symbols) {\r\n  return fetch(\r\n    `https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=${symbols.join(\r\n      ','\r\n    )}`\r\n  ).then(r => r.json());\r\n}\r\n\r\nexport default function* ratesSaga(): Generator<Effect, void, any> {\r\n  const rates = yield call(fetchRates, symbols);\r\n  yield put(setRates(rates));\r\n}\r\n```",
  "closed_by": {
    "login": "dternyak",
    "id": 7861465,
    "node_id": "MDQ6VXNlcjc4NjE0NjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7861465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dternyak",
    "html_url": "https://github.com/dternyak",
    "followers_url": "https://api.github.com/users/dternyak/followers",
    "following_url": "https://api.github.com/users/dternyak/following{/other_user}",
    "gists_url": "https://api.github.com/users/dternyak/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dternyak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dternyak/subscriptions",
    "organizations_url": "https://api.github.com/users/dternyak/orgs",
    "repos_url": "https://api.github.com/users/dternyak/repos",
    "events_url": "https://api.github.com/users/dternyak/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dternyak/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/136/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/136/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/325387752",
    "html_url": "https://github.com/MyCryptoHQ/MyCrypto/issues/136#issuecomment-325387752",
    "issue_url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/136",
    "id": 325387752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTM4Nzc1Mg==",
    "user": {
      "login": "bfillmer",
      "id": 33235,
      "node_id": "MDQ6VXNlcjMzMjM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/33235?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfillmer",
      "html_url": "https://github.com/bfillmer",
      "followers_url": "https://api.github.com/users/bfillmer/followers",
      "following_url": "https://api.github.com/users/bfillmer/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfillmer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfillmer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfillmer/subscriptions",
      "organizations_url": "https://api.github.com/users/bfillmer/orgs",
      "repos_url": "https://api.github.com/users/bfillmer/repos",
      "events_url": "https://api.github.com/users/bfillmer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfillmer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-28T15:32:08Z",
    "updated_at": "2017-08-28T15:32:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Example of handling:\r\n\r\n```javascript\r\nconst fetchRates = (symbols) => fetch(\r\n  `https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=${symbols.join(',')}`\r\n).then(response => {\r\n  if (response.ok) {\r\n    return response.json();\r\n  }\r\n  throw new Error('Could not fetch rate data.');\r\n});\r\n\r\nexport default function* ratesSaga(): Generator<Effect, void, any> {\r\n  try {\r\n    const rates = yield call(fetchRates, symbols);\r\n    yield put(setRates(rates));\r\n  } catch (error) {\r\n    const action = yield showNotification('danger', error);\r\n    yield put(action);\r\n  }\r\n}\r\n```\r\n\r\nThis gets a message displayed for the user so they at least know something went wrong, though the user is still stuck not knowing whether to refresh or what. Decent for a first pass, but would be nice to handle 'next steps' for the user in the event of an API failure.",
    "reactions": {
      "url": "https://api.github.com/repos/MyCryptoHQ/MyCrypto/issues/comments/325387752/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
