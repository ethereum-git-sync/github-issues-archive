{
  "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/8882",
  "repository_url": "https://api.github.com/repos/ledgerwatch/erigon",
  "labels_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/8882/labels{/name}",
  "comments_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/8882/comments",
  "events_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/8882/events",
  "html_url": "https://github.com/ledgerwatch/erigon/issues/8882",
  "id": 2021473495,
  "node_id": "I_kwDOC0FsAM54fTzX",
  "number": 8882,
  "title": " Implement `blocksByRange` and `blockByRoots` P2P RPC Methods",
  "user": {
    "login": "Giulio2002",
    "id": 29233688,
    "node_id": "MDQ6VXNlcjI5MjMzNjg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/29233688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Giulio2002",
    "html_url": "https://github.com/Giulio2002",
    "followers_url": "https://api.github.com/users/Giulio2002/followers",
    "following_url": "https://api.github.com/users/Giulio2002/following{/other_user}",
    "gists_url": "https://api.github.com/users/Giulio2002/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Giulio2002/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Giulio2002/subscriptions",
    "organizations_url": "https://api.github.com/users/Giulio2002/orgs",
    "repos_url": "https://api.github.com/users/Giulio2002/repos",
    "events_url": "https://api.github.com/users/Giulio2002/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Giulio2002/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "bayram98",
    "id": 30230748,
    "node_id": "MDQ6VXNlcjMwMjMwNzQ4",
    "avatar_url": "https://avatars.githubusercontent.com/u/30230748?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bayram98",
    "html_url": "https://github.com/bayram98",
    "followers_url": "https://api.github.com/users/bayram98/followers",
    "following_url": "https://api.github.com/users/bayram98/following{/other_user}",
    "gists_url": "https://api.github.com/users/bayram98/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bayram98/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bayram98/subscriptions",
    "organizations_url": "https://api.github.com/users/bayram98/orgs",
    "repos_url": "https://api.github.com/users/bayram98/repos",
    "events_url": "https://api.github.com/users/bayram98/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bayram98/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "bayram98",
      "id": 30230748,
      "node_id": "MDQ6VXNlcjMwMjMwNzQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/30230748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bayram98",
      "html_url": "https://github.com/bayram98",
      "followers_url": "https://api.github.com/users/bayram98/followers",
      "following_url": "https://api.github.com/users/bayram98/following{/other_user}",
      "gists_url": "https://api.github.com/users/bayram98/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bayram98/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bayram98/subscriptions",
      "organizations_url": "https://api.github.com/users/bayram98/orgs",
      "repos_url": "https://api.github.com/users/bayram98/repos",
      "events_url": "https://api.github.com/users/bayram98/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bayram98/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-12-01T19:37:59Z",
  "updated_at": "2023-12-23T13:32:01Z",
  "closed_at": "2023-12-23T13:32:01Z",
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "# Implement `blocksByRange` and `blockByRoots` P2P RPC Methods\r\n\r\n## Overview\r\nThis ticket aims to implement two critical P2P RPC methods: `blocksByRange` and `blockByRoots`. These methods are essential for efficient and reliable block retrieval in our blockchain protocol.\r\n\r\n## Goals\r\n- **`blocksByRange` Method**: This method should enable peers to request a range of blocks by specifying a start slot and a count. It will be instrumental in syncing blockchain data and ensuring data integrity.\r\n- **`blockByRoots` Method**: This method should allow peers to request blocks by their root hashes. This is crucial for verifying block information and retrieving specific blocks efficiently.\r\n\r\n## Requirements\r\n- Implement the `blocksByRange` method according to the protocol specification.\r\n  - The method must handle requests for block ranges efficiently.\r\n  - Include error handling for invalid or out-of-range requests.\r\n- Implement the `blockByRoots` method as per the protocol specification.\r\n  - The method should efficiently fetch blocks based on their root hashes.\r\n  - Proper error handling for unknown or missing block roots is necessary.\r\n- Ensure compatibility with the existing P2P layer and data structures.\r\n- Document the implementation, focusing on usage, limitations, and potential improvements.\r\n\r\n## Resources\r\n- Protocol Specification: https://github.com/ethereum/consensus-specs/blob/dev/specs/altair/p2p-interface.md#beaconblocksbyrange-v2, https://github.com/ethereum/consensus-specs/blob/dev/specs/altair/p2p-interface.md#beaconblocksbyroot-v2\r\n\r\n## References\r\n\r\nConsensusHandler have a database objects to read blocks if you have the slot and the hash. hashes and slots are indexed in an external database engine which is not currently passed `kv.RoDB`, once you pass it through sentinel you can use the `beacon_indicies` package to find hash by slot and vice-versa. to write the beacon blocks in the stream request you can use the `ssz_snappy.EncodeAndWrite(...)`, limit each request to a maximum of 96 blocks. for each block requested increase the rate limiter count by 1.\r\n\r\n\r\n",
  "closed_by": {
    "login": "Giulio2002",
    "id": 29233688,
    "node_id": "MDQ6VXNlcjI5MjMzNjg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/29233688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Giulio2002",
    "html_url": "https://github.com/Giulio2002",
    "followers_url": "https://api.github.com/users/Giulio2002/followers",
    "following_url": "https://api.github.com/users/Giulio2002/following{/other_user}",
    "gists_url": "https://api.github.com/users/Giulio2002/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Giulio2002/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Giulio2002/subscriptions",
    "organizations_url": "https://api.github.com/users/Giulio2002/orgs",
    "repos_url": "https://api.github.com/users/Giulio2002/repos",
    "events_url": "https://api.github.com/users/Giulio2002/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Giulio2002/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/8882/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/8882/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[

]
