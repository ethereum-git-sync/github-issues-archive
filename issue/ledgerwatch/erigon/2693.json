{
  "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/2693",
  "repository_url": "https://api.github.com/repos/ledgerwatch/erigon",
  "labels_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/2693/labels{/name}",
  "comments_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/2693/comments",
  "events_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/2693/events",
  "html_url": "https://github.com/ledgerwatch/erigon/issues/2693",
  "id": 997885441,
  "node_id": "I_kwDOC0FsAM47eoYB",
  "number": 2693,
  "title": "Stuck with p2p GoodPeers log messages, failing to reach synced block height",
  "user": {
    "login": "mfw78",
    "id": 53399572,
    "node_id": "MDQ6VXNlcjUzMzk5NTcy",
    "avatar_url": "https://avatars.githubusercontent.com/u/53399572?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mfw78",
    "html_url": "https://github.com/mfw78",
    "followers_url": "https://api.github.com/users/mfw78/followers",
    "following_url": "https://api.github.com/users/mfw78/following{/other_user}",
    "gists_url": "https://api.github.com/users/mfw78/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mfw78/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mfw78/subscriptions",
    "organizations_url": "https://api.github.com/users/mfw78/orgs",
    "repos_url": "https://api.github.com/users/mfw78/repos",
    "events_url": "https://api.github.com/users/mfw78/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mfw78/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-09-16T07:38:48Z",
  "updated_at": "2021-10-05T05:16:19Z",
  "closed_at": "2021-10-05T05:16:18Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nErigon version: erigon version 2021.09.3-alpha\r\nOS & Version: Linux node 5.12.7-arch1-1 #1 SMP PREEMPT Wed, 26 May 2021 22:03:57 +0000 x86_64 GNU/Linux\r\nCommit hash : ec14cba6113f1779d270be7a443bdc7438d17474\r\n\r\n#### Expected behaviour\r\n\r\nNode progresses towards block current chain block height (Ethereum mainnet).\r\n\r\n#### Actual behaviour\r\n\r\nAfter completion of a cycle (may or may not happen on the first sync cycle), erigon appears displays only P2P information and does not commence a new cycle:\r\n\r\n```\r\nINFO[09-15|18:33:35.453] [16/18 TxLookup] ETL [2/2] Loading       into=BlockTransactionLookup current key=f5887c61... alloc=\"1.5 GiB\" sys=\"11.6 GiB\"\r\nINFO[09-15|18:34:05.453] [16/18 TxLookup] ETL [2/2] Loading       into=BlockTransactionLookup current key=fe4fd156... alloc=\"2.0 GiB\" sys=\"11.6 GiB\"\r\nINFO[09-15|18:34:14.644] [16/18 TxLookup] etl: temp files removed total size=\"1.2 GB\"\r\nINFO[09-15|18:34:25.781] [16/18 TxLookup] DONE                    in=34m14.47698785s\r\nINFO[09-15|18:35:16.270] [p2p] GoodPeers                          eth66=97 eth65=33\r\nINFO[09-15|18:37:16.270] [p2p] GoodPeers                          eth66=97 eth65=33\r\nINFO[09-15|18:39:16.270] [p2p] GoodPeers                          eth66=97 eth65=33\r\nINFO[09-15|18:41:16.269] [p2p] GoodPeers                          eth66=96 eth65=33\r\nINFO[09-15|18:43:16.269] [p2p] GoodPeers                          eth66=97 eth65=33\r\nINFO[09-15|18:45:16.269] [p2p] GoodPeers                          eth66=97 eth65=33\r\nINFO[09-15|18:47:16.269] [p2p] GoodPeers                          eth66=97 eth65=33\r\nINFO[09-15|18:49:16.269] [p2p] GoodPeers                          eth66=97 eth65=33\r\nINFO[09-15|18:51:16.270] [p2p] GoodPeers                          eth66=97 eth65=33\r\nINFO[09-15|18:53:04.359] Regenerated local transaction journal    transactions=0 accounts=0\r\nINFO[09-15|18:53:16.270] [p2p] GoodPeers                          eth66=96 eth65=33\r\nINFO[09-15|18:55:16.269] [p2p] GoodPeers                          eth66=96 eth65=33\r\nINFO[09-15|18:57:16.269] [p2p] GoodPeers                          eth66=96 eth65=33\r\nINFO[09-15|18:59:16.269] [p2p] GoodPeers                          eth66=96 eth65=33\r\n```\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\nUnable to determine steps to reproduce.\r\n\r\n#### Backtrace\r\n\r\n**WARNING: THE FOLLOWING BACKTRACE IS COMPLETE DUE TO BUFFER LIMITATIONS ON `screen`**\r\n\r\n````\r\ngoroutine 5394403 [select, 1 minutes]:\r\ngithub.com/ledgerwatch/erigon/p2p.(*Peer).pingLoop(0xc111cad260)\r\n        github.com/ledgerwatch/erigon/p2p/peer.go:281 +0x13b\r\ncreated by github.com/ledgerwatch/erigon/p2p.(*Peer).run\r\n        github.com/ledgerwatch/erigon/p2p/peer.go:234 +0x125\r\n\r\ngoroutine 4628078 [select]:\r\ngithub.com/ledgerwatch/erigon/p2p.(*Peer).pingLoop(0xc0ce161860)\r\n        github.com/ledgerwatch/erigon/p2p/peer.go:281 +0x13b\r\ncreated by github.com/ledgerwatch/erigon/p2p.(*Peer).run\r\n        github.com/ledgerwatch/erigon/p2p/peer.go:234 +0x125\r\n\r\ngoroutine 8742082 [select]:\r\ngithub.com/ledgerwatch/erigon/p2p.(*Peer).run(0xc03ac0a600, 0x13a1520, 0xc09ec9e200, 0x0)\r\n        github.com/ledgerwatch/erigon/p2p/peer.go:243 +0x265\r\ngithub.com/ledgerwatch/erigon/p2p.(*Server).runPeer(0xc0001402c0, 0xc03ac0a600)\r\n        github.com/ledgerwatch/erigon/p2p/server.go:1074 +0x205\r\ncreated by github.com/ledgerwatch/erigon/p2p.(*Server).launchPeer\r\n        github.com/ledgerwatch/erigon/p2p/server.go:1056 +0xc5\r\n\r\ngoroutine 9188245 [select, 1 minutes]:\r\ngithub.com/ledgerwatch/erigon/p2p.(*Peer).pingLoop(0xc05d90c9c0)\r\n        github.com/ledgerwatch/erigon/p2p/peer.go:281 +0x13b\r\ncreated by github.com/ledgerwatch/erigon/p2p.(*Peer).run\r\n        github.com/ledgerwatch/erigon/p2p/peer.go:234 +0x125\r\n\r\ngoroutine 9745587 [select, 42 minutes]:\r\ngithub.com/ledgerwatch/erigon/p2p.(*protoRW).ReadMsg(0xc04e8660a0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, ...)\r\n        github.com/ledgerwatch/erigon/p2p/peer.go:456 +0xcf\r\ngithub.com/ledgerwatch/erigon/cmd/sentry/download.runPeer(0x2095d38, 0xc000239140, 0xc0bdbada80, 0x40, 0x42, 0x2088ff0, 0xc04e8660a0, 0xc1090e3200, 0xc0040f3e70, 0xc0040f3e60, ...)\r\n        github.com/ledgerwatch/erigon/cmd/sentry/download/sentry.go:285 +0x1f3\r\ngithub.com/ledgerwatch/erigon/cmd/sentry/download.NewSentryServer.func1(0xc1090e30e0, 0x2088ff0, 0xc04e8660a0, 0x0, 0x0)\r\n        github.com/ledgerwatch/erigon/cmd/sentry/download/sentry.go:492 +0x79d\r\ngithub.com/ledgerwatch/erigon/p2p.(*Peer).startProtocols.func1(0xc1090e30e0, 0xc04e8660a0, 0x2088ff0, 0xc04e8660a0)\r\n        github.com/ledgerwatch/erigon/p2p/peer.go:399 +0xb4\r\ncreated by github.com/ledgerwatch/erigon/p2p.(*Peer).startProtocols\r\n        github.com/ledgerwatch/erigon/p2p/peer.go:396 +0x205\r\n\r\ngoroutine 7842104 [IO wait]:\r\ninternal/poll.runtime_pollWait(0x7d5330b2d158, 0x72, 0xffffffffffffffff)\r\n        runtime/netpoll.go:222 +0x55\r\ninternal/poll.(*pollDesc).wait(0xc0f8f06418, 0x72, 0x18000, 0x18000, 0xffffffffffffffff)\r\n        internal/poll/fd_poll_runtime.go:87 +0x45\r\ninternal/poll.(*pollDesc).waitRead(...)\r\n        internal/poll/fd_poll_runtime.go:92\r\ninternal/poll.(*FD).Read(0xc0f8f06400, 0xc037814000, 0x18000, 0x18000, 0x0, 0x0, 0x0)\r\n        internal/poll/fd_unix.go:166 +0x1d5\r\nnet.(*netFD).Read(0xc0f8f06400, 0xc037814000, 0x18000, 0x18000, 0xc09a936280, 0xc01588eb70, 0x20)\r\n        net/fd_posix.go:55 +0x4f\r\nnet.(*conn).Read(0xc08c4441b0, 0xc037814000, 0x18000, 0x18000, 0x0, 0x0, 0x0)\r\n        net/net.go:183 +0x91\r\ngithub.com/ledgerwatch/erigon/p2p.(*meteredConn).Read(0xc069d52220, 0xc037814000, 0x18000, 0x18000, 0xc09a936280, 0xc01bcccb70, 0xa18baa)\r\n        github.com/ledgerwatch/erigon/p2p/metrics.go:63 +0x51\r\nio.ReadAtLeast(0x7d53637bf0b8, 0xc069d52220, 0xc037814000, 0x18000, 0x18000, 0x20, 0x1436fa0, 0x7d5330b2d238, 0xda9e)   \r\n        io/io.go:328 +0x87\r\ngithub.com/ledgerwatch/erigon/p2p/rlpx.(*readBuffer).read(0xc09aa08240, 0x7d53637bf0b8, 0xc069d52220, 0x20, 0x45079f, 0xc000032000, 0x1470a80, 0x1540560, 0x7d53637bf0b8)\r\n        github.com/ledgerwatch/erigon/p2p/rlpx/buffer.go:64 +0x12e\r\ngithub.com/ledgerwatch/erigon/p2p/rlpx.(*sessionState).readFrame(0xc09aa08140, 0x7d53637bf0b8, 0xc069d52220, 0x7d53637bf0b8, 0xc069d52220, 0x2accc00, 0x72, 0x0)\r\n        github.com/ledgerwatch/erigon/p2p/rlpx/rlpx.go:166 +0x105\r\ngithub.com/ledgerwatch/erigon/p2p/rlpx.(*Conn).Read(0xc066fef3b0, 0xc048d8f2250cab53, 0x2625d720b5e2, 0x2accc00, 0x0, 0x0, 0x2accc00, 0x0)\r\n        github.com/ledgerwatch/erigon/p2p/rlpx/rlpx.go:136 +0x98\r\ngithub.com/ledgerwatch/erigon/p2p.(*rlpxTransport).ReadMsg(0xc07aada9c0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, ...)\r\n        github.com/ledgerwatch/erigon/p2p/transport.go:67 +0x154\r\ngithub.com/ledgerwatch/erigon/p2p.(*Peer).readLoop(0xc12fab6ae0, 0xc12fab6ba0)\r\n        github.com/ledgerwatch/erigon/p2p/peer.go:298 +0xd1\r\ncreated by github.com/ledgerwatch/erigon/p2p.(*Peer).run\r\n        github.com/ledgerwatch/erigon/p2p/peer.go:233 +0xfb\r\n\r\ngoroutine 5155207 [select]:\r\ngithub.com/ledgerwatch/erigon/p2p.(*protoRW).ReadMsg(0xc007e72140, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, ...)\r\n        github.com/ledgerwatch/erigon/p2p/peer.go:456 +0xcf\r\ngithub.com/ledgerwatch/erigon/cmd/sentry/download.runPeer(0x2095d38, 0xc000239140, 0xc08d95fe80, 0x40, 0x42, 0x2088ff0, 0xc007e72140, 0xc0a86d8180, 0xc009ba9e70, 0xc009ba9e60, ...)\r\n        github.com/ledgerwatch/erigon/cmd/sentry/download/sentry.go:285 +0x1f3\r\ngithub.com/ledgerwatch/erigon/cmd/sentry/download.NewSentryServer.func1(0xc0a86d8060, 0x2088ff0, 0xc007e72140, 0x0, 0x0)\r\n        github.com/ledgerwatch/erigon/cmd/sentry/download/sentry.go:492 +0x79d\r\ngithub.com/ledgerwatch/erigon/p2p.(*Peer).startProtocols.func1(0xc0a86d8060, 0xc007e72140, 0x2088ff0, 0xc007e72140)\r\n        github.com/ledgerwatch/erigon/p2p/peer.go:399 +0xb4\r\ncreated by github.com/ledgerwatch/erigon/p2p.(*Peer).startProtocols\r\n        github.com/ledgerwatch/erigon/p2p/peer.go:396 +0x205\r\n\r\ngoroutine 8333534 [select, 1 minutes]:\r\ngithub.com/ledgerwatch/erigon/p2p.(*protoRW).ReadMsg(0xc06d790320, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, ...)\r\n        github.com/ledgerwatch/erigon/p2p/peer.go:456 +0xcf\r\ngithub.com/ledgerwatch/erigon/cmd/sentry/download.runPeer(0x2095d38, 0xc000239140, 0xc0c51eda40, 0x40, 0x42, 0x2088ff0, 0xc06d790320, 0xc0c619a960, 0xc01d117e70, 0xc01d117e60, ...)\r\n        github.com/ledgerwatch/erigon/cmd/sentry/download/sentry.go:285 +0x1f3\r\ngithub.com/ledgerwatch/erigon/cmd/sentry/download.NewSentryServer.func1(0xc0e53be840, 0x2088ff0, 0xc06d790320, 0x0, 0x0)\r\n        github.com/ledgerwatch/erigon/cmd/sentry/download/sentry.go:492 +0x79d\r\ngithub.com/ledgerwatch/erigon/p2p.(*Peer).startProtocols.func1(0xc0e53be840, 0xc06d790320, 0x2088ff0, 0xc06d790320)\r\n        github.com/ledgerwatch/erigon/p2p/peer.go:399 +0xb4\r\ncreated by github.com/ledgerwatch/erigon/p2p.(*Peer).startProtocols\r\n        github.com/ledgerwatch/erigon/p2p/peer.go:396 +0x205\r\n\r\n\r\ngoroutine 9174291 [IO wait]:\r\ninternal/poll.runtime_pollWait(0x7d53611c8618, 0x72, 0xffffffffffffffff)\r\n        runtime/netpoll.go:222 +0x55\r\ninternal/poll.(*pollDesc).wait(0xc0541c5118, 0x72, 0x1a000, 0x1a000, 0xffffffffffffffff)\r\n        internal/poll/fd_poll_runtime.go:87 +0x45\r\ninternal/poll.(*pollDesc).waitRead(...)\r\n        internal/poll/fd_poll_runtime.go:92\r\ninternal/poll.(*FD).Read(0xc0541c5100, 0xc056318000, 0x1a000, 0x1a000, 0x0, 0x0, 0x0)\r\n        internal/poll/fd_unix.go:166 +0x1d5\r\nnet.(*netFD).Read(0xc0541c5100, 0xc056318000, 0x1a000, 0x1a000, 0xc096be0840, 0xc01c542ef0, 0x20)\r\n        net/fd_posix.go:55 +0x4f\r\nnet.(*conn).Read(0xc0ac038770, 0xc056318000, 0x1a000, 0x1a000, 0x0, 0x0, 0x0)\r\n        net/net.go:183 +0x91\r\ngithub.com/ledgerwatch/erigon/p2p.(*meteredConn).Read(0xc0ed3a0a80, 0xc056318000, 0x1a000, 0x1a000, 0x49124c, 0xc06b230a78, 0xc049dac7f0)\r\n        github.com/ledgerwatch/erigon/p2p/metrics.go:63 +0x51\r\nio.ReadAtLeast(0x7d53637bf0b8, 0xc0ed3a0a80, 0xc056318000, 0x1a000, 0x1a000, 0x20, 0x1436fa0, 0x7d53611c86f8, 0x9a45a)\r\n        io/io.go:328 +0x87\r\ngithub.com/ledgerwatch/erigon/p2p/rlpx.(*readBuffer).read(0xc10084df00, 0x7d53637bf0b8, 0xc0ed3a0a80, 0x20, 0x45079f, 0xc000032000, 0x1470a80, 0x1540560, 0x7d53637bf0b8)\r\n        github.com/ledgerwatch/erigon/p2p/rlpx/buffer.go:64 +0x12e\r\ngithub.com/ledgerwatch/erigon/p2p/rlpx.(*sessionState).readFrame(0xc10084de00, 0x7d53637bf0b8, 0xc0ed3a0a80, 0x7d53637bf0b8, 0xc0ed3a0a80, 0x2accc00, 0x72, 0x0)\r\n        github.com/ledgerwatch/erigon/p2p/rlpx/rlpx.go:166 +0x105\r\ngithub.com/ledgerwatch/erigon/p2p/rlpx.(*Conn).Read(0xc0546a52c0, 0xc048d8f2ab1e2530, 0x26265467c3b0, 0x2accc00, 0x0, 0x0, 0x2accc00, 0x0)\r\n        github.com/ledgerwatch/erigon/p2p/rlpx/rlpx.go:136 +0x98\r\ngithub.com/ledgerwatch/erigon/p2p.(*rlpxTransport).ReadMsg(0xc0546cc300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, ...)\r\n        github.com/ledgerwatch/erigon/p2p/transport.go:67 +0x154\r\ngithub.com/ledgerwatch/erigon/p2p.(*Peer).readLoop(0xc06c73a9c0, 0xc06c73aa80)\r\n        github.com/ledgerwatch/erigon/p2p/peer.go:298 +0xd1\r\ncreated by github.com/ledgerwatch/erigon/p2p.(*Peer).run\r\n        github.com/ledgerwatch/erigon/p2p/peer.go:233 +0xfb\r\n\r\n\r\ngoroutine 8249715 [IO wait]:\r\ninternal/poll.runtime_pollWait(0x7d5333181a00, 0x72, 0xffffffffffffffff)\r\n        runtime/netpoll.go:222 +0x55\r\ninternal/poll.(*pollDesc).wait(0xc09a0fa298, 0x72, 0x1a000, 0x1a000, 0xffffffffffffffff)\r\n        internal/poll/fd_poll_runtime.go:87 +0x45\r\ninternal/poll.(*pollDesc).waitRead(...)\r\n        internal/poll/fd_poll_runtime.go:92\r\ninternal/poll.(*FD).Read(0xc09a0fa280, 0xc09b382000, 0x1a000, 0x1a000, 0x0, 0x0, 0x0)\r\n        internal/poll/fd_unix.go:166 +0x1d5\r\nnet.(*netFD).Read(0xc09a0fa280, 0xc09b382000, 0x1a000, 0x1a000, 0xc0744c2540, 0xc01c3eb270, 0x20)\r\n        net/fd_posix.go:55 +0x4f\r\nnet.(*conn).Read(0xc094a1b860, 0xc09b382000, 0x1a000, 0x1a000, 0x0, 0x0, 0x0)\r\n        net/net.go:183 +0x91\r\ngithub.com/ledgerwatch/erigon/p2p.(*meteredConn).Read(0xc078c43f70, 0xc09b382000, 0x1a000, 0x1a000, 0x49124c, 0xc08d955678, 0xc092617ff0)\r\n        github.com/ledgerwatch/erigon/p2p/metrics.go:63 +0x51\r\nio.ReadAtLeast(0x7d53637bf0b8, 0xc078c43f70, 0xc09b382000, 0x1a000, 0x1a000, 0x20, 0x1436fa0, 0x7d5333181ae0, 0xdad0)\r\n        io/io.go:328 +0x87\r\ngithub.com/ledgerwatch/erigon/p2p/rlpx.(*readBuffer).read(0xc0e0c73780, 0x7d53637bf0b8, 0xc078c43f70, 0x20, 0x45079f, 0xc000032000, 0x1470a80, 0x1540560, 0x7d53637bf0b8)\r\n        github.com/ledgerwatch/erigon/p2p/rlpx/buffer.go:64 +0x12e\r\ngithub.com/ledgerwatch/erigon/p2p/rlpx.(*sessionState).readFrame(0xc0e0c73680, 0x7d53637bf0b8, 0xc078c43f70, 0x7d53637bf0b8, 0xc078c43f70, 0x2accc00, 0x72, 0x0)\r\n        github.com/ledgerwatch/erigon/p2p/rlpx/rlpx.go:166 +0x105\r\ngithub.com/ledgerwatch/erigon/p2p/rlpx.(*Conn).Read(0xc09a0f5f90, 0xc048d8f2b250b227, 0x26265b9a50de, 0x2accc00, 0x0, 0x0, 0x2accc00, 0x0)\r\n        github.com/ledgerwatch/erigon/p2p/rlpx/rlpx.go:136 +0x98\r\ngithub.com/ledgerwatch/erigon/p2p.(*rlpxTransport).ReadMsg(0xc09a0f3640, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, ...)\r\n        github.com/ledgerwatch/erigon/p2p/transport.go:67 +0x154\r\ngithub.com/ledgerwatch/erigon/p2p.(*Peer).readLoop(0xc0821d5d40, 0xc0821d5e60)\r\n        github.com/ledgerwatch/erigon/p2p/peer.go:298 +0xd1\r\ncreated by github.com/ledgerwatch/erigon/p2p.(*Peer).run\r\n        github.com/ledgerwatch/erigon/p2p/peer.go:233 +0xfb\r\n````\r\n",
  "closed_by": {
    "login": "AskAlexSharov",
    "id": 46885206,
    "node_id": "MDQ6VXNlcjQ2ODg1MjA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/46885206?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AskAlexSharov",
    "html_url": "https://github.com/AskAlexSharov",
    "followers_url": "https://api.github.com/users/AskAlexSharov/followers",
    "following_url": "https://api.github.com/users/AskAlexSharov/following{/other_user}",
    "gists_url": "https://api.github.com/users/AskAlexSharov/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AskAlexSharov/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AskAlexSharov/subscriptions",
    "organizations_url": "https://api.github.com/users/AskAlexSharov/orgs",
    "repos_url": "https://api.github.com/users/AskAlexSharov/repos",
    "events_url": "https://api.github.com/users/AskAlexSharov/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AskAlexSharov/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/2693/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/2693/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/934072458",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/2693#issuecomment-934072458",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/2693",
    "id": 934072458,
    "node_id": "IC_kwDOC0FsAM43rNCK",
    "user": {
      "login": "AskAlexSharov",
      "id": 46885206,
      "node_id": "MDQ6VXNlcjQ2ODg1MjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46885206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AskAlexSharov",
      "html_url": "https://github.com/AskAlexSharov",
      "followers_url": "https://api.github.com/users/AskAlexSharov/followers",
      "following_url": "https://api.github.com/users/AskAlexSharov/following{/other_user}",
      "gists_url": "https://api.github.com/users/AskAlexSharov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AskAlexSharov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AskAlexSharov/subscriptions",
      "organizations_url": "https://api.github.com/users/AskAlexSharov/orgs",
      "repos_url": "https://api.github.com/users/AskAlexSharov/repos",
      "events_url": "https://api.github.com/users/AskAlexSharov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AskAlexSharov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-05T05:16:18Z",
    "updated_at": "2021-10-05T05:16:18Z",
    "author_association": "COLLABORATOR",
    "body": "closing - because can't reproduce now. if have more info - feel free to reopen or create new issue",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/934072458/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
