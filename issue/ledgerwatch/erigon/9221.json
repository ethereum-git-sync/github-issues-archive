{
  "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/9221",
  "repository_url": "https://api.github.com/repos/ledgerwatch/erigon",
  "labels_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/9221/labels{/name}",
  "comments_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/9221/comments",
  "events_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/9221/events",
  "html_url": "https://github.com/ledgerwatch/erigon/issues/9221",
  "id": 2078925921,
  "node_id": "I_kwDOC0FsAM576eRh",
  "number": 9221,
  "title": "Blob Storage",
  "user": {
    "login": "Giulio2002",
    "id": 29233688,
    "node_id": "MDQ6VXNlcjI5MjMzNjg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/29233688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Giulio2002",
    "html_url": "https://github.com/Giulio2002",
    "followers_url": "https://api.github.com/users/Giulio2002/followers",
    "following_url": "https://api.github.com/users/Giulio2002/following{/other_user}",
    "gists_url": "https://api.github.com/users/Giulio2002/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Giulio2002/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Giulio2002/subscriptions",
    "organizations_url": "https://api.github.com/users/Giulio2002/orgs",
    "repos_url": "https://api.github.com/users/Giulio2002/repos",
    "events_url": "https://api.github.com/users/Giulio2002/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Giulio2002/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "bayram98",
    "id": 30230748,
    "node_id": "MDQ6VXNlcjMwMjMwNzQ4",
    "avatar_url": "https://avatars.githubusercontent.com/u/30230748?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bayram98",
    "html_url": "https://github.com/bayram98",
    "followers_url": "https://api.github.com/users/bayram98/followers",
    "following_url": "https://api.github.com/users/bayram98/following{/other_user}",
    "gists_url": "https://api.github.com/users/bayram98/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bayram98/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bayram98/subscriptions",
    "organizations_url": "https://api.github.com/users/bayram98/orgs",
    "repos_url": "https://api.github.com/users/bayram98/repos",
    "events_url": "https://api.github.com/users/bayram98/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bayram98/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "bayram98",
      "id": 30230748,
      "node_id": "MDQ6VXNlcjMwMjMwNzQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/30230748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bayram98",
      "html_url": "https://github.com/bayram98",
      "followers_url": "https://api.github.com/users/bayram98/followers",
      "following_url": "https://api.github.com/users/bayram98/following{/other_user}",
      "gists_url": "https://api.github.com/users/bayram98/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bayram98/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bayram98/subscriptions",
      "organizations_url": "https://api.github.com/users/bayram98/orgs",
      "repos_url": "https://api.github.com/users/bayram98/repos",
      "events_url": "https://api.github.com/users/bayram98/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bayram98/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2024-01-12T14:09:16Z",
  "updated_at": "2024-01-12T14:09:24Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "\r\n# Implement Blob Storage for EIP4844 in Ethereum 2.0\r\n\r\n## Description\r\n\r\n### Objective\r\n- Implement a Blob Storage system for EIP4844 as part of the Ethereum 2.0 consensus mechanism.\r\n- Ensure compatibility and efficiency in storing and handling blob sidecars.\r\n\r\n### Key Features\r\n1. **Blob Storage Implementation**:\r\n   - Use [afero](https://github.com/spf13/afero) for flexible file system abstraction.\r\n   - Implement pruning mechanism to remove blobs from disk and internal indexing based on `MIN_EPOCHS_FOR_BLOB_SIDECARS_REQUESTS` constant (referenced from the p2p specs).\r\n\r\n2. **BlobSidecar Data Structure**:\r\n   - Design and implement the `BlobSidecar` data structure.\r\n   - Ensure the structure is optimized for Ethereum 2.0's requirements.\r\n\r\n3. **SSZ (Simple Serialize) Marshaling/Unmarshaling**:\r\n   - Implement marshaling and unmarshaling of the `BlobSidecar` using SSZ.\r\n   - Ensure data integrity and compatibility with Ethereum 2.0's serialization requirements.\r\n   - You can see an example of ssz marshalling implementation here: https://github.com/ledgerwatch/erigon/blob/a191296f05647bb5597bf618a6707cd1f1738164/cl/cltypes/bls_to_execution_change.go#L27\r\n   - For the `Vector[Bytes32, KZG_COMMITMENT_INCLUSION_PROOF_DEPTH]` you need to use `solid.HashVector`\r\n   - For Blob, it is a `ByteVector[BYTES_PER_FIELD_ELEMENT * FIELD_ELEMENTS_PER_BLOB]` which needs to be implemented accordingly to the ssz spec. you can see what a Blob is at: https://github.com/ethereum/consensus-specs/blob/dev/specs/deneb/polynomial-commitments.md#custom-types\r\n\r\n### Validation\r\n- Implement validation checks before dumping blobs on disk: https://github.com/ethereum/consensus-specs/blob/dev/specs/deneb/p2p-interface.md#blob-subnets\r\n- Also check inclusion proof: https://github.com/ethereum/consensus-specs/blob/dev/specs/deneb/p2p-interface.md#verify_blob_sidecar_inclusion_proof\r\n\r\n### Pruning Mechanism\r\n- Develop a system to prune (remove) blobs from disk and internal indexing.\r\n- Base the pruning on `MIN_EPOCHS_FOR_BLOB_SIDECARS_REQUESTS`.\r\n- Ensure that the pruning process does not affect the network's stability and performance.\r\n\r\n### Testing\r\n- Basic unit testing\r\n- Testing the BlobSideCar Data structure (SSZ) marshalling: add the ssz data structure to the consensus spec tests, like so: https://github.com/ledgerwatch/erigon/blob/a191296f05647bb5597bf618a6707cd1f1738164/cl/spectest/consensus_tests/appendix.go#L83\r\n- To test the actual blob storage, apply the changes to https://github.com/ethereum/consensus-specs/blob/dev/specs/deneb/fork-choice.md and implement retrieve_blobs_and_proofs with the storage (it is a sort of database call), the blobs are now provided as part of the consensus spec tests so you need to modify it, so that it also inserts the blobs.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/9221/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/9221/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
