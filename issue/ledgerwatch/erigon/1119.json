{
  "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/1119",
  "repository_url": "https://api.github.com/repos/ledgerwatch/erigon",
  "labels_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/1119/labels{/name}",
  "comments_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/1119/comments",
  "events_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/1119/events",
  "html_url": "https://github.com/ledgerwatch/erigon/issues/1119",
  "id": 702748115,
  "node_id": "MDU6SXNzdWU3MDI3NDgxMTU=",
  "number": 1119,
  "title": "Add trace_ methods to JSON RPC",
  "user": {
    "login": "AlexeyAkhunov",
    "id": 13686139,
    "node_id": "MDQ6VXNlcjEzNjg2MTM5",
    "avatar_url": "https://avatars.githubusercontent.com/u/13686139?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AlexeyAkhunov",
    "html_url": "https://github.com/AlexeyAkhunov",
    "followers_url": "https://api.github.com/users/AlexeyAkhunov/followers",
    "following_url": "https://api.github.com/users/AlexeyAkhunov/following{/other_user}",
    "gists_url": "https://api.github.com/users/AlexeyAkhunov/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AlexeyAkhunov/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AlexeyAkhunov/subscriptions",
    "organizations_url": "https://api.github.com/users/AlexeyAkhunov/orgs",
    "repos_url": "https://api.github.com/users/AlexeyAkhunov/repos",
    "events_url": "https://api.github.com/users/AlexeyAkhunov/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AlexeyAkhunov/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2020-09-16T13:04:37Z",
  "updated_at": "2021-06-09T06:44:55Z",
  "closed_at": "2021-06-09T06:44:55Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "https://openethereum.github.io/wiki/JSONRPC-trace-module#trace_call\r\n\r\nhttps://openethereum.github.io/wiki/JSONRPC-trace-module#trace_callmany\r\n",
  "closed_by": {
    "login": "AlexeyAkhunov",
    "id": 13686139,
    "node_id": "MDQ6VXNlcjEzNjg2MTM5",
    "avatar_url": "https://avatars.githubusercontent.com/u/13686139?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AlexeyAkhunov",
    "html_url": "https://github.com/AlexeyAkhunov",
    "followers_url": "https://api.github.com/users/AlexeyAkhunov/followers",
    "following_url": "https://api.github.com/users/AlexeyAkhunov/following{/other_user}",
    "gists_url": "https://api.github.com/users/AlexeyAkhunov/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AlexeyAkhunov/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AlexeyAkhunov/subscriptions",
    "organizations_url": "https://api.github.com/users/AlexeyAkhunov/orgs",
    "repos_url": "https://api.github.com/users/AlexeyAkhunov/repos",
    "events_url": "https://api.github.com/users/AlexeyAkhunov/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AlexeyAkhunov/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/1119/reactions",
    "total_count": 5,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 2,
    "confused": 0,
    "heart": 0,
    "rocket": 1,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/1119/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/693695266",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/1119#issuecomment-693695266",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/1119",
    "id": 693695266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzY5NTI2Ng==",
    "user": {
      "login": "tjayrush",
      "id": 5417918,
      "node_id": "MDQ6VXNlcjU0MTc5MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5417918?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjayrush",
      "html_url": "https://github.com/tjayrush",
      "followers_url": "https://api.github.com/users/tjayrush/followers",
      "following_url": "https://api.github.com/users/tjayrush/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjayrush/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjayrush/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjayrush/subscriptions",
      "organizations_url": "https://api.github.com/users/tjayrush/orgs",
      "repos_url": "https://api.github.com/users/tjayrush/repos",
      "events_url": "https://api.github.com/users/tjayrush/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjayrush/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-16T22:18:07Z",
    "updated_at": "2020-09-26T19:11:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "A list of all OpenEthereum trace-related routines:\r\n\r\n### Transaction-Trace Filtering (focusing on these first)\r\n- [ ] [trace_block](https://openethereum.github.io/wiki/JSONRPC-trace-module#trace_block)\r\n   - implemented, not fully tested\r\n- [ ] [trace_filter](https://openethereum.github.io/wiki/JSONRPC-trace-module#trace_filter)\r\n   - implemented, known issues, not fully tested\r\n- [ ] [trace_get](https://openethereum.github.io/wiki/JSONRPC-trace-module#trace_get)\r\n   - implemented, not fully tested\r\n- [ ] [trace_transaction](https://openethereum.github.io/wiki/JSONRPC-trace-module#trace_transaction)\r\n   - implemented, not fully tested\r\n\r\n### Ad-hoc Tracing\r\n- [ ] [trace_call](https://openethereum.github.io/wiki/JSONRPC-trace-module#trace_call)\r\n- [ ] [trace_callMany](https://openethereum.github.io/wiki/JSONRPC-trace-module#trace_callmany)\r\n- [ ] [trace_rawTransaction](https://openethereum.github.io/wiki/JSONRPC-trace-module#trace_rawtransaction)\r\n- [ ] [trace_replayBlockTransactions](https://openethereum.github.io/wiki/JSONRPC-trace-module#trace_replayblocktransactions)\r\n- [ ] [trace_replayTransaction](https://openethereum.github.io/wiki/JSONRPC-trace-module#trace_replaytransaction)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/693695266/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/693722124",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/1119#issuecomment-693722124",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/1119",
    "id": 693722124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzcyMjEyNA==",
    "user": {
      "login": "tjayrush",
      "id": 5417918,
      "node_id": "MDQ6VXNlcjU0MTc5MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5417918?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjayrush",
      "html_url": "https://github.com/tjayrush",
      "followers_url": "https://api.github.com/users/tjayrush/followers",
      "following_url": "https://api.github.com/users/tjayrush/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjayrush/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjayrush/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjayrush/subscriptions",
      "organizations_url": "https://api.github.com/users/tjayrush/orgs",
      "repos_url": "https://api.github.com/users/tjayrush/repos",
      "events_url": "https://api.github.com/users/tjayrush/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjayrush/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-16T23:38:01Z",
    "updated_at": "2020-09-16T23:38:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just a note for anyone listening. I'm going to try to reproduce Parity's traces. One immediate thing I see is that TurboGeth's traces do not include the `0th` trace of Parity. Parity's `0th` trace is identical to the transaction itself other than the 'gasUsed' is different if there is more than one trace. When there is more than one trace, Parity's `0th` trace's gasUsed is the sum of all the other traces subtracted from the initial transaction. (So, the sum of all traces including the `0th` trace is the gasUsed in the receipt). [Take what I just wrote with a small grain of salt, I'm working from memory here.]\r\n\r\nI'll make other notes here as I move forward.",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/693722124/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 2,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/693906751",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/1119#issuecomment-693906751",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/1119",
    "id": 693906751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzkwNjc1MQ==",
    "user": {
      "login": "AskAlexSharov",
      "id": 46885206,
      "node_id": "MDQ6VXNlcjQ2ODg1MjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46885206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AskAlexSharov",
      "html_url": "https://github.com/AskAlexSharov",
      "followers_url": "https://api.github.com/users/AskAlexSharov/followers",
      "following_url": "https://api.github.com/users/AskAlexSharov/following{/other_user}",
      "gists_url": "https://api.github.com/users/AskAlexSharov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AskAlexSharov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AskAlexSharov/subscriptions",
      "organizations_url": "https://api.github.com/users/AskAlexSharov/orgs",
      "repos_url": "https://api.github.com/users/AskAlexSharov/repos",
      "events_url": "https://api.github.com/users/AskAlexSharov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AskAlexSharov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-17T05:39:38Z",
    "updated_at": "2020-09-17T05:39:38Z",
    "author_association": "COLLABORATOR",
    "body": "Somebody listening ;-)",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/693906751/reactions",
      "total_count": 5,
      "+1": 0,
      "-1": 0,
      "laugh": 5,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/694331170",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/1119#issuecomment-694331170",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/1119",
    "id": 694331170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDMzMTE3MA==",
    "user": {
      "login": "koen84",
      "id": 8461454,
      "node_id": "MDQ6VXNlcjg0NjE0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8461454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/koen84",
      "html_url": "https://github.com/koen84",
      "followers_url": "https://api.github.com/users/koen84/followers",
      "following_url": "https://api.github.com/users/koen84/following{/other_user}",
      "gists_url": "https://api.github.com/users/koen84/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/koen84/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/koen84/subscriptions",
      "organizations_url": "https://api.github.com/users/koen84/orgs",
      "repos_url": "https://api.github.com/users/koen84/repos",
      "events_url": "https://api.github.com/users/koen84/events{/privacy}",
      "received_events_url": "https://api.github.com/users/koen84/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-17T15:59:06Z",
    "updated_at": "2020-09-17T15:59:06Z",
    "author_association": "NONE",
    "body": "This i've found in my logs.  Seems most of the time it goes well, but occasionally it borks :\r\n\r\n```\r\nWARN Trying again after trace_filter RPC call failed (attempt #10) with result Err(Decoder(\"Error(\\\"unknown variant `CALL`, expected one\r\nof `call`, `create`, `suicide`, `reward`\\\", line: 0, column: 0)\")), subgraph_id: QmZ6noN8Ek4dPpyvmSv4AdAtefVWtUsopBc8hFKFiWo1Uw, component: SubgraphInstanceManager > BlockStream\r\n```\r\n\r\nI first thought it might be a capitalisation issue (request side), but plenty potentially similar requests get processed well.",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/694331170/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/694338708",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/1119#issuecomment-694338708",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/1119",
    "id": 694338708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDMzODcwOA==",
    "user": {
      "login": "koen84",
      "id": 8461454,
      "node_id": "MDQ6VXNlcjg0NjE0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8461454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/koen84",
      "html_url": "https://github.com/koen84",
      "followers_url": "https://api.github.com/users/koen84/followers",
      "following_url": "https://api.github.com/users/koen84/following{/other_user}",
      "gists_url": "https://api.github.com/users/koen84/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/koen84/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/koen84/subscriptions",
      "organizations_url": "https://api.github.com/users/koen84/orgs",
      "repos_url": "https://api.github.com/users/koen84/repos",
      "events_url": "https://api.github.com/users/koen84/events{/privacy}",
      "received_events_url": "https://api.github.com/users/koen84/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-17T16:12:27Z",
    "updated_at": "2020-09-17T16:12:27Z",
    "author_association": "NONE",
    "body": "As well as these in debug : \r\n\r\n```\r\n2020-09-17T18:02:37+02:00 DBG Request: {\"jsonrpc\":\"2.0\",\"method\":\"trace_filter\",\"params\":[{\"fromBlock\":\"0xa606a3\",\"toBlock\":\"0xa606a3\"}],\"id\":3464005}\r\n2020-09-17T18:02:37+02:00 DBG Forwarding requests: [{\"id\":3464005,\"jsonrpc\":\"2.0\",\"method\":\"trace_filter\",\"params\":[{\"fromBlock\":\"0xa606a3\",\"toBlock\":\"0xa606a3\"}]}] reqs=1 url=http://127.0.0.1:8545/\r\n2020-09-17T18:02:37+02:00 DBG Received response: [{\"jsonrpc\":\"2.0\",\"id\":3464005,\"error\":{\"code\":-32000,\"message\":\"too many traces found\"}}]\r\n status=\"200 OK\" url=http://127.0.0.1:8545/\r\n```\r\n\r\nand series of :\r\n```\r\n2020-09-17T18:06:56+02:00 DBG Request: {\"jsonrpc\":\"2.0\",\"method\":\"trace_filter\",\"params\":[{\"fromBlock\":\"0xa606ba\",\"toBlock\":\"0xa606ba\"}],\"id\":3469877}\r\n2020-09-17T18:06:56+02:00 DBG Forwarding requests: [{\"id\":3469877,\"jsonrpc\":\"2.0\",\"method\":\"trace_filter\",\"params\":[{\"fromBlock\":\"0xa606ba\",\"toBlock\":\"0xa606ba\"}]}] reqs=1 url=http://127.0.0.1:8545/\r\n2020-09-17T18:06:56+02:00 DBG Received response: [{\"jsonrpc\":\"2.0\",\"id\":3469877,\"error\":{\"code\":-32000,\"message\":\"method handler crashed\"}}]\r\n status=\"200 OK\" url=http://127.0.0.1:8545/\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/694338708/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/695143628",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/1119#issuecomment-695143628",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/1119",
    "id": 695143628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTE0MzYyOA==",
    "user": {
      "login": "tjayrush",
      "id": 5417918,
      "node_id": "MDQ6VXNlcjU0MTc5MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5417918?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjayrush",
      "html_url": "https://github.com/tjayrush",
      "followers_url": "https://api.github.com/users/tjayrush/followers",
      "following_url": "https://api.github.com/users/tjayrush/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjayrush/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjayrush/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjayrush/subscriptions",
      "organizations_url": "https://api.github.com/users/tjayrush/orgs",
      "repos_url": "https://api.github.com/users/tjayrush/repos",
      "events_url": "https://api.github.com/users/tjayrush/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjayrush/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-19T01:14:16Z",
    "updated_at": "2020-09-19T01:14:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "The message above seem to say that there's `too many traces`. There's an option when starting the rpcdaemon called `--trace.maxtraces` I'm not sure that will help, but you can try it.",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/695143628/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/699028019",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/1119#issuecomment-699028019",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/1119",
    "id": 699028019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTAyODAxOQ==",
    "user": {
      "login": "tjayrush",
      "id": 5417918,
      "node_id": "MDQ6VXNlcjU0MTc5MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5417918?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjayrush",
      "html_url": "https://github.com/tjayrush",
      "followers_url": "https://api.github.com/users/tjayrush/followers",
      "following_url": "https://api.github.com/users/tjayrush/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjayrush/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjayrush/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjayrush/subscriptions",
      "organizations_url": "https://api.github.com/users/tjayrush/orgs",
      "repos_url": "https://api.github.com/users/tjayrush/repos",
      "events_url": "https://api.github.com/users/tjayrush/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjayrush/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-25T16:31:29Z",
    "updated_at": "2020-09-28T11:52:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "A very large list of remaining open issues with TurboGeth tracing. There are some of the **current known issues** with TurboGeth tracing. As each issue is more clearly understood and closed, we will create a separate issues and strike it from this list.\r\n\r\n### General Comments:\r\n\r\n- The goal of TurboGeth tracing is to emulate Parity's trace structure exactly (with possible backwards-compatible enhancements where needed).\r\n- Parity returns a 'flat' array of traces presenting the call structure of the transaction in a field called `traceAddress`. Geth presents a single trace per transaction representing the same call structure. I prefer the flat format of Parity, as it makes treating the data as a one-dimensional array much easier. We use Parity's flat structure.\r\n- Parity's traces provide enough data to do a full 18-decimal-place-accurate accounting on any address history (we've shown this using TrueBlocks). Geth's existing traces do not provide this same information (~~for example, balance transfers on self-destructs~~). We will try to produce any data we need to do 18-decimal place accurate accounting.\r\n- We may add a command line flag to the RPC daemon thus:\r\n  - \\-\\-tracing:geth return already existing Geth traces\r\n  - \\-\\-tracing:parity return duplicates of parity traces\r\n  - \\-\\-tracing:enhanced return improved traces that add things parity doesn't provide but should. For example, block reward traces when address is present in eth_filter (to allow miners to recover their own rewards)\r\n\r\n### Comments about the existing tracing code (random order):\r\n\r\n- In the callTraces.js code, DELEGATECALL does not return balance, but Parity does, For STATICCALL callTraces.js does not return a balance, but Parity does (I think).\r\n- When I run 'go generate' (which I need to do sometimes when I change the file callTracer.js), many other files are generated. - Is there a way to generate code for a single file? - Should we try to figure out why other files are being generated (that is, are they out of data and should they be generated)?\r\n- The need for --trace.maxtraces on the command line (for eth_filter routine) reveals the fact that we accumulate the results of an RPC call before delivering it. Might not a better way be to generate the value into a stream so we don't build a big memory usage? If it works this way already, then why the need for --trace.maxtraces?\r\n- The file `cmd/utils/flags.go` is an example of getting global data from the command line flags (I think). Do we prefer using this type of global data or passing this data into the constructor of the API?\r\n- It is not at all clear to me when to use `uint256.Int` vs. `bit.Int` vs. `hexutil.Big`. My preference would be to use the native Go types, but not sure.\r\n\r\n### Specific issues:\r\n\r\n- For some calls to `eth_filter`, Parity returns traces showing block (and uncle) rewards(if there is no `toAddress` or `fromAddress` field in the filter). In other cases, Parity does not return traces showing block rewards (when an `address` option is not present). This seems odd. In some future `--traces.enhanced` mode, perhaps this is included.\r\n- The `after` and `count` options of `trace_filter` are very poorly tested.\r\n- Testing in general is all but non-existent for the RPC.\r\n- There are `nolint` comments in the rpcdaemon code. Remove them.\r\n- ~~If a single transaction creates a contract and then, in that same transaction, calls self-destruct--and--if the contract has a non-zero balance at the time of destruction, we need to return that balance (from callTracer.js) in the self-destruct trace. If not there, we only have balances at the start of the previous block. Is there a call I can make somewhere in the callTracer.js to get balance of the destructed account at time of destruction?~~ [Geth recently added this code to the tracer.]\r\n- `trace_call` uses types.Transaction in its interface which requires more fields than the RPC command requires.\r\n- Need to revisit every tracing interface (every RPC interface for that matter) for optional fields, etc. I was sloppy when adding new interfaces\r\n- If a function exists against an API, the end user can call that function even if it's not in the interface definition. This is probably not what we want. To see this, comment out one of the interface routines and the notice the endpoint is still available.\r\n\r\n### Very large hack -- please note:\r\n\r\n- callTracer.js has [this comment](https://github.com/ledgerwatch/turbo-geth/blob/master/eth/tracers/internal/tracers/call_tracer.js#L115). In order return the data I needed to match Parity, I currently send `0xdeadbeef` as the amount of `gasUsed`. (YES -- this is a stunning hack!!) In the calling code, I then look for `gasUsed == '0xdeadbeef` which for some unknown reason makes the returned value of `gasUsed` as the difference between that value and `0xdeadbeef`. This **DOES NOT** work in every case -- which is why Peter wrote [this comment](https://github.com/ledgerwatch/turbo-geth/blob/master/eth/tracers/internal/tracers/call_tracer.js#L115). The data we need is there somewhere, but I do not know how to get it in `callTracer.js`. This data is required in order to do full 18-decimal-place accurate accounting.\r\n\r\n### Differences between the JSON data from Parity and TurboGeth:\r\n\r\n- If `result` is empty (for example, in block reward traces):\r\n  - TG......... { ... `result`: `{}` ...}\r\n  - Parity..... { ... `result`: `null` ...}\r\n- if `traceAddress` is empty (for example, if the trace has no subtraces):\r\n  - TG......... { ... `traceAddress`: `null` ...}\r\n  - Parity..... { ... `traceAddress`: `[]` ...}\r\n- if `transactionHash` is empty (for example, block reward traces):\r\n  - TG......... { ... `transactionHash`: `\"0x0000...0000\"` ...}\r\n  - Parity..... { ... `transactionHash`: `null` ...}\r\n- if `transactionPosition` is empty (for example, block reward traces):\r\n  - TG......... { ... `transactionPosition`: `0` ...}\r\n  - Parity..... { ... `transactionPosition`: `null` ...}\r\n- if the traces are for a self-destruct trace:\r\n  - TG......... { ... `type`: `selfdestruct` ...}\r\n  - Parity..... { ... `type`: `suicide` ...}\r\n- if `value` or `gasUsed` is zero:\r\n  - TG......... { ... `xxx`: `0x0` ...}\r\n  - Parity..... field not included\r\n\r\n### Different error messages from Parity and TurboGeth:\r\n\r\n- - TG......... invalid argument 1: json: cannot unmarshal hex string \"0x\" into Go value of type hexutil.Uint64\r\n  - Parity..... Invalid params: Invalid index: cannot parse integer from empty string.\r\n- - TG......... invalid argument 1: json: cannot unmarshal number into Go value of type []hexutil.Uint64\r\n  - Parity..... Invalid params: invalid type: integer `0`, expected a sequence.\r\n- - TG......... missing value for required argument 1\r\n  - Parity..... Invalid params: invalid length 1, expected a tuple of size 2.\r\n- - TG......... invalid argument 1: json: cannot unmarshal string into Go value of type []hexutil.Uint64\r\n  - Parity..... Invalid params: invalid type: string \"0x0\", expected a sequence.\r\n- - TG......... invalid argument 0: hex number > 64 bits\r\n  - Parity..... Invalid params: Invalid block number: number too large to fit in target type.\r\n- - TG......... the method xxx does not exist/is not available\r\n  - Parity..... Method not found\r\n- - Error messages for `trace_call`, `trace_callMany`, `trace_replay\\*` are different\r\n\r\n### Incorrect behaviour from TurboGeth:\r\n\r\n- For `eth_getTransactionReceipt` [the documentation](xxx) says it returns:\r\n  - root : DATA 32 bytes of post-transaction stateroot (pre Byzantium)\r\n  - status: QUANTITY either 1 (success) or 0 (failure)\r\n- TG returns `status` for every block - it does not return `root`\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/699028019/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 2
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/699869926",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/1119#issuecomment-699869926",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/1119",
    "id": 699869926,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTg2OTkyNg==",
    "user": {
      "login": "d-xo",
      "id": 6689924,
      "node_id": "MDQ6VXNlcjY2ODk5MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6689924?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/d-xo",
      "html_url": "https://github.com/d-xo",
      "followers_url": "https://api.github.com/users/d-xo/followers",
      "following_url": "https://api.github.com/users/d-xo/following{/other_user}",
      "gists_url": "https://api.github.com/users/d-xo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/d-xo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/d-xo/subscriptions",
      "organizations_url": "https://api.github.com/users/d-xo/orgs",
      "repos_url": "https://api.github.com/users/d-xo/repos",
      "events_url": "https://api.github.com/users/d-xo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/d-xo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-28T08:45:12Z",
    "updated_at": "2020-09-28T08:45:12Z",
    "author_association": "NONE",
    "body": ">  Geth's existing traces do not provide this same information (for example, balance transfers on selfdestructs). \r\n\r\nJust as a note, `geth` added support for self destruct in their tracer in the new release today: https://github.com/ethereum/go-ethereum/releases/tag/v1.9.22",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/699869926/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/699956732",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/1119#issuecomment-699956732",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/1119",
    "id": 699956732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTk1NjczMg==",
    "user": {
      "login": "tjayrush",
      "id": 5417918,
      "node_id": "MDQ6VXNlcjU0MTc5MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5417918?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjayrush",
      "html_url": "https://github.com/tjayrush",
      "followers_url": "https://api.github.com/users/tjayrush/followers",
      "following_url": "https://api.github.com/users/tjayrush/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjayrush/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjayrush/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjayrush/subscriptions",
      "organizations_url": "https://api.github.com/users/tjayrush/orgs",
      "repos_url": "https://api.github.com/users/tjayrush/repos",
      "events_url": "https://api.github.com/users/tjayrush/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjayrush/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-28T11:46:48Z",
    "updated_at": "2020-09-28T14:25:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@xwvvvvwx Thank you so much. That solves the missing balance test case and a few others. Saved me huge amount of time figuring it out.\r\n\r\n[Edit]: I incorporated that change into TG branch `1119-tracing-3`. Thanks again.",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/699956732/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
