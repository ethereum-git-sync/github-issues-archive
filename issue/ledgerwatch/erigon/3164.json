{
  "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3164",
  "repository_url": "https://api.github.com/repos/ledgerwatch/erigon",
  "labels_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3164/labels{/name}",
  "comments_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3164/comments",
  "events_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3164/events",
  "html_url": "https://github.com/ledgerwatch/erigon/issues/3164",
  "id": 1088226771,
  "node_id": "I_kwDOC0FsAM5A3QXT",
  "number": 3164,
  "title": "rpcdaemon segfaults on eth_getLog",
  "user": {
    "login": "mfw78",
    "id": 53399572,
    "node_id": "MDQ6VXNlcjUzMzk5NTcy",
    "avatar_url": "https://avatars.githubusercontent.com/u/53399572?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mfw78",
    "html_url": "https://github.com/mfw78",
    "followers_url": "https://api.github.com/users/mfw78/followers",
    "following_url": "https://api.github.com/users/mfw78/following{/other_user}",
    "gists_url": "https://api.github.com/users/mfw78/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mfw78/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mfw78/subscriptions",
    "organizations_url": "https://api.github.com/users/mfw78/orgs",
    "repos_url": "https://api.github.com/users/mfw78/repos",
    "events_url": "https://api.github.com/users/mfw78/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mfw78/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-12-24T08:07:08Z",
  "updated_at": "2022-01-22T10:31:44Z",
  "closed_at": "2022-01-22T10:31:44Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nErigon version: `thorax/erigon:v2021.12.03` (docker)\r\nOS & Version: `Linux node 5.14.16-arch1-1 #1 SMP PREEMPT Tue, 02 Nov 2021 22:22:59 +0000 x86_64 GNU/Linux`\r\n\r\nCommit hash : N/A\r\n\r\n`erigon` docker container command line: `erigon --metrics --metrics.addr=0.0.0.0 --metrics.port=6060 --private.api.addr=0.0.0.0:9090 --pprof --pprof.addr=0.0.0.0 --pprof.port=6061`\r\n\r\n`rpcdaemon` docker container command line: `rpcdaemon --datadir=/home/erigon/.local/share/erigon --private.api.addr=erigon:9090 --http.addr=0.0.0.0 --http.vhosts=* --http.corsdomain=* --http.api=eth,debug,net,trace,web3,erigon --ws --metrics --metrics.addr=0.0.0.0 --metrics.port=6060 --txpool.api.addr=erigon:9090`\r\n\r\n#### Expected behaviour\r\n\r\n1. Submit RPC request to `rpcdaemon`:\r\n```raw\r\n{'jsonrpc': '2.0', 'method': 'eth_getLogs', 'params': [{'address': '0x2a0c0DBEcC7E4D658f48E01e3fA353F44050c208', 'fromBlock': 9650000, 'toBlock': 9700000, 'topics': ['0xdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7']}], 'id': 1}\r\n```\r\n2. `rpcdaemon` to respond with logs.\r\n\r\n#### Actual behaviour\r\n\r\n1. Submit aforementioned RPC request.\r\n2. `rpcdaemon` segfaults.\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\n1. Send aforementioned RPC request to `rpcdaemon`.\r\n\r\n#### Backtrace\r\n\r\n````\r\nfatal error: unexpected signal during runtime execution\r\n[signal SIGBUS: bus error code=0x2 addr=0x7d3d3b538010 pc=0x43f967]\r\n\r\nruntime stack:\r\nruntime.throw({0x104eda5, 0x43e4bd})\r\n\truntime/panic.go:1198 +0x71\r\nruntime.sigpanic()\r\n\truntime/signal_unix.go:719 +0x396\r\n\r\ngoroutine 424 [syscall]:\r\nruntime.cgocall(0xcc9680, 0xc000520fc0)\r\n\truntime/cgocall.go:156 +0x5c fp=0xc000520f98 sp=0xc000520f60 pc=0x44b6dc\r\ngithub.com/torquem-ch/mdbx-go/mdbx._Cfunc_mdbxgo_cursor_get1(0x7f9992ed36f0, 0xc00058beb8, 0x8, 0xc000c1fa90, 0xc000c1faa0, 0x11)\r\n\t_cgo_gotypes.go:960 +0x4c fp=0xc000520fc0 sp=0xc000520f98 pc=0x8f006c\r\ngithub.com/torquem-ch/mdbx-go/mdbx.(*Cursor).getVal1.func1(0x459814, {0xc00058beb8, 0x8, 0x2a00000058}, 0x11)\r\n\tgithub.com/torquem-ch/mdbx-go@v0.22.2/mdbx/cursor.go:196 +0xdd fp=0xc000521020 sp=0xc000520fc0 pc=0x8f1efd\r\ngithub.com/torquem-ch/mdbx-go/mdbx.(*Cursor).getVal1(0xc000713020, {0xc00058beb8, 0xe, 0xc0005210c8}, 0x0)\r\n\tgithub.com/torquem-ch/mdbx-go@v0.22.2/mdbx/cursor.go:196 +0x25 fp=0xc000521068 sp=0xc000521020 pc=0x8f1ce5\r\ngithub.com/torquem-ch/mdbx-go/mdbx.(*Cursor).Get(0xc000c1fb40, {0xc00058beb8, 0x8, 0x8}, {0x0, 0xc000712fc0, 0x102f113}, 0x11)\r\n\tgithub.com/torquem-ch/mdbx-go@v0.22.2/mdbx/cursor.go:142 +0x54 fp=0xc0005210d8 sp=0xc000521068 pc=0x8f17b4\r\ngithub.com/ledgerwatch/erigon-lib/kv/mdbx.(*MdbxCursor).setRange(...)\r\n\tgithub.com/ledgerwatch/erigon-lib@v0.0.0-20211217093552-7d82c6ac76e6/kv/mdbx/kv_mdbx.go:1040\r\ngithub.com/ledgerwatch/erigon-lib/kv/mdbx.(*MdbxCursor).Seek(0xc00070fb00, {0xc00058beb8, 0x8, 0x8})\r\n\tgithub.com/ledgerwatch/erigon-lib@v0.0.0-20211217093552-7d82c6ac76e6/kv/mdbx/kv_mdbx.go:1095 +0x99 fp=0xc000521168 sp=0xc0005210d8 pc=0x900cb9\r\ngithub.com/ledgerwatch/erigon-lib/kv/mdbx.(*MdbxTx).ForPrefix(0xc0007130e0, {0x102f113, 0x102fe7c}, {0xc00058beb8, 0x8, 0x8}, 0xc00070faa0)\r\n\tgithub.com/ledgerwatch/erigon-lib@v0.0.0-20211217093552-7d82c6ac76e6/kv/mdbx/kv_mdbx.go:457 +0x11f fp=0xc000521230 sp=0xc000521168 pc=0x8fd07f\r\ngithub.com/ledgerwatch/erigon/cmd/rpcdaemon/commands.(*APIImpl).GetLogs(0xc0002004b0, {0x119d238, 0xc0004e1700}, {0x0, 0xc00062cc00, 0xc00062cc20, {0xc00026ffb0, 0x1, 0x1}, {0xc0006286f0, ...}})\r\n\tgithub.com/ledgerwatch/erigon/cmd/rpcdaemon/commands/eth_receipts.go:163 +0xa9e fp=0xc000521438 sp=0xc000521230 pc=0xca857e\r\nruntime.call128(0xc0002c0000, 0xc00011c4d0, 0xc000285720, 0x48, 0x48, 0x60, 0xc0005219d8)\r\n\truntime/asm_amd64.s:628 +0x6b fp=0xc0005214c8 sp=0xc000521438 pc=0x4af34b\r\nruntime.reflectcall(0xfb4660, 0xc000285680, 0x4, 0x10339c8, 0x0, 0x12, 0xfb4660)\r\n\t<autogenerated>:1 +0x3c fp=0xc000521508 sp=0xc0005214c8 pc=0x4b34fc\r\nreflect.Value.call({0xc000128a80, 0xc00011c4d0, 0x7f9992e68a68}, {0x10253e1, 0x4}, {0xc0002856d0, 0x3, 0xc000131a40})\r\n\treflect/value.go:543 +0x814 fp=0xc000521af8 sp=0xc000521508 pc=0x513c14\r\nreflect.Value.Call({0xc000128a80, 0xc00011c4d0, 0xc000285680}, {0xc0002856d0, 0x3, 0x3})\r\n\treflect/value.go:339 +0xc5 fp=0xc000521b70 sp=0xc000521af8 pc=0x5131c5\r\ngithub.com/ledgerwatch/erigon/rpc.(*callback).call(0xc0004d5740, {0x119d238, 0xc0004e1700}, {0xc00058b840, 0xb}, {0xc0006286a8, 0x1, 0xc000131a40}, 0xc00070f7a0)\r\n\tgithub.com/ledgerwatch/erigon/rpc/service.go:226 +0x58a fp=0xc000521cc8 sp=0xc000521b70 pc=0x99278a\r\ngithub.com/ledgerwatch/erigon/rpc.(*handler).runMethod(0xc00051ed00, {0x119d238, 0xc0004e1700}, 0xc00047ca80, 0x45f96d, {0xc0006286a8, 0x4, 0x0}, 0x8)\r\n\tgithub.com/ledgerwatch/erigon/rpc/handler.go:484 +0x25b fp=0xc000521d60 sp=0xc000521cc8 pc=0x98c6bb\r\ngithub.com/ledgerwatch/erigon/rpc.(*handler).handleCall(0xc00063b040, 0xc000712ed0, 0xc00047ca80, 0x7f996b454b20)\r\n\tgithub.com/ledgerwatch/erigon/rpc/handler.go:389 +0x2c9 fp=0xc000521e10 sp=0xc000521d60 pc=0x98bc09\r\ngithub.com/ledgerwatch/erigon/rpc.(*handler).handleCallMsg(0xc00063b040, 0x7f996b454a10, 0xc00047ca80, 0x28)\r\n\tgithub.com/ledgerwatch/erigon/rpc/handler.go:343 +0xd6 fp=0xc000521ef0 sp=0xc000521e10 pc=0x98af76\r\ngithub.com/ledgerwatch/erigon/rpc.(*handler).handleMsg.func1(0xc000712ed0)\r\n\tgithub.com/ledgerwatch/erigon/rpc/handler.go:181 +0x111 fp=0xc000521f78 sp=0xc000521ef0 pc=0x989951\r\ngithub.com/ledgerwatch/erigon/rpc.(*handler).startCallProc.func1()\r\n\tgithub.com/ledgerwatch/erigon/rpc/handler.go:271 +0xc8 fp=0xc000521fe0 sp=0xc000521f78 pc=0x98a5c8\r\nruntime.goexit()\r\n\truntime/asm_amd64.s:1581 +0x1 fp=0xc000521fe8 sp=0xc000521fe0 pc=0x4b0e21\r\ncreated by github.com/ledgerwatch/erigon/rpc.(*handler).startCallProc\r\n\tgithub.com/ledgerwatch/erigon/rpc/handler.go:267 +0x92\r\n\r\ngoroutine 1 [chan receive, 1 minutes]:\r\ngithub.com/ledgerwatch/erigon/cmd/rpcdaemon/cli.StartRpcServer({_, _}, {{0x7ffea68d8e97, 0xb}, 0x1, {0x7ffea68d8e63, 0x20}, {0xc0001200f0, 0x2a}, {0x7ffea68d8eaf, ...}, ...}, ...)\r\n\tgithub.com/ledgerwatch/erigon/cmd/rpcdaemon/cli/config.go:383 +0xafc\r\nmain.main.func1(0x1828ee0, {0x10258a5, 0xc, 0xc})\r\n\tgithub.com/ledgerwatch/erigon/cmd/rpcdaemon/main.go:33 +0x411\r\ngithub.com/spf13/cobra.(*Command).execute(0x1828ee0, {0xc0000321b0, 0xc, 0xc})\r\n\tgithub.com/spf13/cobra@v1.2.1/command.go:856 +0x60e\r\ngithub.com/spf13/cobra.(*Command).ExecuteC(0x1828ee0)\r\n\tgithub.com/spf13/cobra@v1.2.1/command.go:974 +0x3bc\r\ngithub.com/spf13/cobra.(*Command).Execute(...)\r\n\tgithub.com/spf13/cobra@v1.2.1/command.go:902\r\ngithub.com/spf13/cobra.(*Command).ExecuteContext(...)\r\n\tgithub.com/spf13/cobra@v1.2.1/command.go:895\r\nmain.main()\r\n\tgithub.com/ledgerwatch/erigon/cmd/rpcdaemon/main.go:40 +0x108\r\n\r\ngoroutine 6 [sleep, 1 minutes]:\r\ntime.Sleep(0x22ecb25c00)\r\n\truntime/time.go:193 +0x12e\r\ngithub.com/VictoriaMetrics/metrics.summariesSwapCron(0x45d964b800)\r\n\tgithub.com/VictoriaMetrics/metrics@v1.18.1/summary.go:237 +0x36\r\ncreated by github.com/VictoriaMetrics/metrics.registerSummaryLocked\r\n\tgithub.com/VictoriaMetrics/metrics@v1.18.1/summary.go:211 +0x127\r\n\r\ngoroutine 18 [sync.Cond.Wait, 1 minutes]:\r\nsync.runtime_notifyListWait(0xc0004483a8, 0x0)\r\n\truntime/sema.go:513 +0x13d\r\nsync.(*Cond).Wait(0xc0004d4360)\r\n\tsync/cond.go:56 +0x8c\r\ngithub.com/anacrolix/stm.(*Tx).wait(0xc000448360)\r\n\tgithub.com/anacrolix/stm@v0.2.1-0.20201002073511-c35a2c748c6a/tx.go:71 +0xb8\r\ngithub.com/anacrolix/stm.Atomically(0xc072764667b36e27)\r\n\tgithub.com/anacrolix/stm@v0.2.1-0.20201002073511-c35a2c748c6a/funcs.go:80 +0x14f\r\ngithub.com/anacrolix/stm/rate.(*Limiter).tokenGenerator(0xc0004639c0, 0x2625a00)\r\n\tgithub.com/anacrolix/stm@v0.2.1-0.20201002073511-c35a2c748c6a/rate/ratelimit.go:59 +0x170\r\ncreated by github.com/anacrolix/stm/rate.NewLimiter\r\n\tgithub.com/anacrolix/stm@v0.2.1-0.20201002073511-c35a2c748c6a/rate/ratelimit.go:45 +0x229\r\n\r\ngoroutine 19 [chan receive, 1 minutes]:\r\ngithub.com/anacrolix/dht/v2.dnsResolverRefresher()\r\n\tgithub.com/anacrolix/dht/v2@v2.8.0/dht.go:103 +0x70\r\ncreated by github.com/anacrolix/dht/v2.init.0\r\n\tgithub.com/anacrolix/dht/v2@v2.8.0/dht.go:109 +0x25\r\n\r\ngoroutine 22 [select, 1 minutes]:\r\ngithub.com/ledgerwatch/erigon/cmd/utils.RootContext.func1()\r\n\tgithub.com/ledgerwatch/erigon/cmd/utils/cmd.go:88 +0x1ae\r\ncreated by github.com/ledgerwatch/erigon/cmd/utils.RootContext\r\n\tgithub.com/ledgerwatch/erigon/cmd/utils/cmd.go:79 +0xa7\r\n\r\ngoroutine 39 [syscall, 1 minutes]:\r\nos/signal.signal_recv()\r\n\truntime/sigqueue.go:169 +0x98\r\nos/signal.loop()\r\n\tos/signal/signal_unix.go:24 +0x19\r\ncreated by os/signal.Notify.func1.1\r\n\tos/signal/signal.go:151 +0x2c\r\n\r\ngoroutine 9 [select, 1 minutes]:\r\ngithub.com/ledgerwatch/erigon/internal/debug.ListenSignals({0x0, 0x0})\r\n\tgithub.com/ledgerwatch/erigon/internal/debug/signal.go:26 +0x1e5\r\ncreated by github.com/ledgerwatch/erigon/internal/debug.SetupCobra\r\n\tgithub.com/ledgerwatch/erigon/internal/debug/flags.go:173 +0x1ee\r\n\r\ngoroutine 10 [IO wait, 1 minutes]:\r\ninternal/poll.runtime_pollWait(0x7f996c05e8d8, 0x72)\r\n\truntime/netpoll.go:234 +0x89\r\ninternal/poll.(*pollDesc).wait(0xc000630080, 0x203000, 0x0)\r\n\tinternal/poll/fd_poll_runtime.go:84 +0x32\r\ninternal/poll.(*pollDesc).waitRead(...)\r\n\tinternal/poll/fd_poll_runtime.go:89\r\ninternal/poll.(*FD).Accept(0xc000630080)\r\n\tinternal/poll/fd_unix.go:402 +0x22c\r\nnet.(*netFD).accept(0xc000630080)\r\n\tnet/fd_unix.go:173 +0x35\r\nnet.(*TCPListener).accept(0xc000502048)\r\n\tnet/tcpsock_posix.go:140 +0x28\r\nnet.(*TCPListener).Accept(0xc000502048)\r\n\tnet/tcpsock.go:262 +0x3d\r\nnet/http.(*Server).Serve(0xc0004be1c0, {0x11952a8, 0xc000502048})\r\n\tnet/http/server.go:3002 +0x394\r\nnet/http.(*Server).ListenAndServe(0xc0004be1c0)\r\n\tnet/http/server.go:2931 +0x7d\r\nnet/http.ListenAndServe(...)\r\n\tnet/http/server.go:3185\r\ngithub.com/ledgerwatch/erigon/metrics/exp.Setup.func2()\r\n\tgithub.com/ledgerwatch/erigon/metrics/exp/exp.go:57 +0x69\r\ncreated by github.com/ledgerwatch/erigon/metrics/exp.Setup\r\n\tgithub.com/ledgerwatch/erigon/metrics/exp/exp.go:56 +0x147\r\n\r\ngoroutine 11 [select, 1 minutes]:\r\ngoogle.golang.org/grpc.(*ccBalancerWrapper).watcher(0xc000200190)\r\n\tgoogle.golang.org/grpc@v1.42.0/balancer_conn_wrappers.go:77 +0xa7\r\ncreated by google.golang.org/grpc.newCCBalancerWrapper\r\n\tgoogle.golang.org/grpc@v1.42.0/balancer_conn_wrappers.go:67 +0x246\r\n\r\ngoroutine 71 [select, 1 minutes]:\r\ngoogle.golang.org/grpc.newClientStreamWithParams.func4()\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:333 +0x98\r\ncreated by google.golang.org/grpc.newClientStreamWithParams\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:332 +0xb45\r\n\r\ngoroutine 13 [select]:\r\ngoogle.golang.org/grpc/internal/transport.(*recvBufferReader).readClient(0xc00008c3c0, {0xc000628118, 0x5, 0x5})\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/transport.go:190 +0xaa\r\ngoogle.golang.org/grpc/internal/transport.(*recvBufferReader).Read(0xc00008c3c0, {0xc000628118, 0xc000622108, 0xc00065f9d0})\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/transport.go:170 +0x147\r\ngoogle.golang.org/grpc/internal/transport.(*transportReader).Read(0xc0001ece40, {0xc000628118, 0xc00065fa48, 0x82bae7})\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/transport.go:484 +0x32\r\nio.ReadAtLeast({0x1183fc0, 0xc0001ece40}, {0xc000628118, 0x5, 0x5}, 0x5)\r\n\tio/io.go:328 +0x9a\r\nio.ReadFull(...)\r\n\tio/io.go:347\r\ngoogle.golang.org/grpc/internal/transport.(*Stream).Read(0xc00029e120, {0xc000628118, 0x5, 0x5})\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/transport.go:468 +0xa5\r\ngoogle.golang.org/grpc.(*parser).recvMsg(0xc000628108, 0xc800000)\r\n\tgoogle.golang.org/grpc@v1.42.0/rpc_util.go:559 +0x47\r\ngoogle.golang.org/grpc.recvAndDecompress(0x18eac50, 0xc00029e120, {0x0, 0x0}, 0xc800000, 0x0, {0x0, 0x0})\r\n\tgoogle.golang.org/grpc@v1.42.0/rpc_util.go:690 +0x66\r\ngoogle.golang.org/grpc.recv(0x7f996c536fff, {0x7f996b4dd008, 0x18eac50}, 0xc00065fca0, {0x0, 0x0}, {0xfa6260, 0xc00008cdc0}, 0x2, 0x0, ...)\r\n\tgoogle.golang.org/grpc@v1.42.0/rpc_util.go:758 +0x6e\r\ngoogle.golang.org/grpc.(*csAttempt).recvMsg(0xc000156000, {0xfa6260, 0xc00008cdc0}, 0xc0002102e8)\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:975 +0x2b0\r\ngoogle.golang.org/grpc.(*clientStream).RecvMsg.func1(0x203000)\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:826 +0x25\r\ngoogle.golang.org/grpc.(*clientStream).withRetry(0xc000158000, 0xc00065fe38, 0xc00065fe08)\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:680 +0x2f6\r\ngoogle.golang.org/grpc.(*clientStream).RecvMsg(0xc000158000, {0xfa6260, 0xc00008cdc0})\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:825 +0x11f\r\ngithub.com/ledgerwatch/erigon-lib/gointerfaces/remote.(*kVStateChangesClient).Recv(0xc00020c350)\r\n\tgithub.com/ledgerwatch/erigon-lib@v0.0.0-20211217093552-7d82c6ac76e6/gointerfaces/remote/kv_grpc.pb.go:108 +0x4c\r\ngithub.com/ledgerwatch/erigon/cmd/rpcdaemon/cli.subscribeToStateChanges({0x119d238, 0xc000125a80}, {0x7f996b374d98, 0xc0004fefc0}, {0x11943d8, 0x18eac50})\r\n\tgithub.com/ledgerwatch/erigon/cmd/rpcdaemon/cli/config.go:178 +0x1b2\r\ngithub.com/ledgerwatch/erigon/cmd/rpcdaemon/cli.subscribeToStateChangesLoop.func1()\r\n\tgithub.com/ledgerwatch/erigon/cmd/rpcdaemon/cli/config.go:153 +0xab\r\ncreated by github.com/ledgerwatch/erigon/cmd/rpcdaemon/cli.subscribeToStateChangesLoop\r\n\tgithub.com/ledgerwatch/erigon/cmd/rpcdaemon/cli/config.go:146 +0xe6\r\n\r\ngoroutine 14 [select, 1 minutes]:\r\ngoogle.golang.org/grpc.(*ccBalancerWrapper).watcher(0xc000200370)\r\n\tgoogle.golang.org/grpc@v1.42.0/balancer_conn_wrappers.go:77 +0xa7\r\ncreated by google.golang.org/grpc.newCCBalancerWrapper\r\n\tgoogle.golang.org/grpc@v1.42.0/balancer_conn_wrappers.go:67 +0x246\r\n\r\ngoroutine 86 [select, 1 minutes]:\r\ngoogle.golang.org/grpc.newClientStreamWithParams.func4()\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:333 +0x98\r\ncreated by google.golang.org/grpc.newClientStreamWithParams\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:332 +0xb45\r\n\r\ngoroutine 98 [IO wait]:\r\ninternal/poll.runtime_pollWait(0x7f996c05e538, 0x72)\r\n\truntime/netpoll.go:234 +0x89\r\ninternal/poll.(*pollDesc).wait(0xc00044a380, 0xc000445000, 0x0)\r\n\tinternal/poll/fd_poll_runtime.go:84 +0x32\r\ninternal/poll.(*pollDesc).waitRead(...)\r\n\tinternal/poll/fd_poll_runtime.go:89\r\ninternal/poll.(*FD).Read(0xc00044a380, {0xc000445000, 0x1000, 0x1000})\r\n\tinternal/poll/fd_unix.go:167 +0x25a\r\nnet.(*netFD).Read(0xc00044a380, {0xc000445000, 0x10378eb, 0x16})\r\n\tnet/fd_posix.go:56 +0x29\r\nnet.(*conn).Read(0xc00048c078, {0xc000445000, 0x7, 0xc000012e78})\r\n\tnet/net.go:183 +0x45\r\nnet/http.(*connReader).Read(0xc000012e70, {0xc000445000, 0x1000, 0x1000})\r\n\tnet/http/server.go:780 +0x16d\r\nbufio.(*Reader).fill(0xc000280600)\r\n\tbufio/bufio.go:101 +0x103\r\nbufio.(*Reader).ReadSlice(0xc000280600, 0x0)\r\n\tbufio/bufio.go:360 +0x2f\r\nbufio.(*Reader).ReadLine(0xc000280600)\r\n\tbufio/bufio.go:389 +0x27\r\nnet/textproto.(*Reader).readLineSlice(0xc0008840f0)\r\n\tnet/textproto/reader.go:57 +0x99\r\nnet/textproto.(*Reader).ReadLine(...)\r\n\tnet/textproto/reader.go:38\r\nnet/http.readRequest(0xc00048c078)\r\n\tnet/http/request.go:1029 +0x79\r\nnet/http.(*conn).readRequest(0xc0008040a0, {0x119d238, 0xc000282540})\r\n\tnet/http/server.go:966 +0x225\r\nnet/http.(*conn).serve(0xc0008040a0, {0x119d2e0, 0xc000206300})\r\n\tnet/http/server.go:1856 +0x865\r\ncreated by net/http.(*Server).Serve\r\n\tnet/http/server.go:3034 +0x4e8\r\n\r\ngoroutine 66 [select]:\r\ngoogle.golang.org/grpc/internal/transport.(*recvBufferReader).readClient(0xc000200960, {0xc000127450, 0x5, 0x5})\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/transport.go:190 +0xaa\r\ngoogle.golang.org/grpc/internal/transport.(*recvBufferReader).Read(0xc000200960, {0xc000127450, 0xc00058e4c8, 0xc0005259d0})\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/transport.go:170 +0x147\r\ngoogle.golang.org/grpc/internal/transport.(*transportReader).Read(0xc0002c0450, {0xc000127450, 0xc000525a48, 0x82bae7})\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/transport.go:484 +0x32\r\nio.ReadAtLeast({0x1183fc0, 0xc0002c0450}, {0xc000127450, 0x5, 0x5}, 0x5)\r\n\tio/io.go:328 +0x9a\r\nio.ReadFull(...)\r\n\tio/io.go:347\r\ngoogle.golang.org/grpc/internal/transport.(*Stream).Read(0xc000164b40, {0xc000127450, 0x5, 0x5})\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/transport.go:468 +0xa5\r\ngoogle.golang.org/grpc.(*parser).recvMsg(0xc000127440, 0xc800000)\r\n\tgoogle.golang.org/grpc@v1.42.0/rpc_util.go:559 +0x47\r\ngoogle.golang.org/grpc.recvAndDecompress(0x0, 0xc000164b40, {0x0, 0x0}, 0xc800000, 0x0, {0x0, 0x0})\r\n\tgoogle.golang.org/grpc@v1.42.0/rpc_util.go:690 +0x66\r\ngoogle.golang.org/grpc.recv(0xc000135680, {0x7f996b4dd008, 0x18eac50}, 0x1181920, {0x0, 0x0}, {0xf94280, 0xc0006f0c80}, 0x181b720, 0x0, ...)\r\n\tgoogle.golang.org/grpc@v1.42.0/rpc_util.go:758 +0x6e\r\ngoogle.golang.org/grpc.(*csAttempt).recvMsg(0xc0000c96b0, {0xf94280, 0xc0006f0c80}, 0x1181920)\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:975 +0x2b0\r\ngoogle.golang.org/grpc.(*clientStream).RecvMsg.func1(0x203000)\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:826 +0x25\r\ngoogle.golang.org/grpc.(*clientStream).withRetry(0xc000624300, 0xc000525e38, 0xc000525e08)\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:680 +0x2f6\r\ngoogle.golang.org/grpc.(*clientStream).RecvMsg(0xc000624300, {0xf94280, 0xc0006f0c80})\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:825 +0x11f\r\ngithub.com/ledgerwatch/erigon-lib/gointerfaces/remote.(*eTHBACKENDSubscribeClient).Recv(0xc0002ba510)\r\n\tgithub.com/ledgerwatch/erigon-lib@v0.0.0-20211217093552-7d82c6ac76e6/gointerfaces/remote/ethbackend_grpc.pb.go:125 +0x4c\r\ngithub.com/ledgerwatch/erigon/cmd/rpcdaemon/services.(*RemoteBackend).Subscribe(0xc0004dd890, {0x119d238, 0xc000125a80}, 0xc000710010)\r\n\tgithub.com/ledgerwatch/erigon/cmd/rpcdaemon/services/eth_backend.go:134 +0x1db\r\ngithub.com/ledgerwatch/erigon/cmd/rpcdaemon/filters.New.func1()\r\n\tgithub.com/ledgerwatch/erigon/cmd/rpcdaemon/filters/filters.go:65 +0xe2\r\ncreated by github.com/ledgerwatch/erigon/cmd/rpcdaemon/filters.New\r\n\tgithub.com/ledgerwatch/erigon/cmd/rpcdaemon/filters/filters.go:54 +0x1de\r\n\r\ngoroutine 67 [runnable]:\r\ngoogle.golang.org/grpc/internal/transport.(*recvBufferReader).readClient(0xc00012e550, {0xc000502160, 0x5, 0x5})\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/transport.go:190 +0xaa\r\ngoogle.golang.org/grpc/internal/transport.(*recvBufferReader).Read(0xc00012e550, {0xc000502160, 0xc0000380c0, 0xc00006a9e8})\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/transport.go:170 +0x147\r\ngoogle.golang.org/grpc/internal/transport.(*transportReader).Read(0xc000206b10, {0xc000502160, 0xc00006aa60, 0x82bae7})\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/transport.go:484 +0x32\r\nio.ReadAtLeast({0x1183fc0, 0xc000206b10}, {0xc000502160, 0x5, 0x5}, 0x5)\r\n\tio/io.go:328 +0x9a\r\nio.ReadFull(...)\r\n\tio/io.go:347\r\ngoogle.golang.org/grpc/internal/transport.(*Stream).Read(0xc0000b8480, {0xc000502160, 0x5, 0x5})\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/transport.go:468 +0xa5\r\ngoogle.golang.org/grpc.(*parser).recvMsg(0xc000502150, 0xc800000)\r\n\tgoogle.golang.org/grpc@v1.42.0/rpc_util.go:559 +0x47\r\ngoogle.golang.org/grpc.recvAndDecompress(0xc00006abf8, 0xc0000b8480, {0x0, 0x0}, 0xc800000, 0x0, {0x0, 0x0})\r\n\tgoogle.golang.org/grpc@v1.42.0/rpc_util.go:690 +0x66\r\ngoogle.golang.org/grpc.recv(0xc0001d3699, {0x7f996b4dd008, 0x18eac50}, 0xc00006ad08, {0x0, 0x0}, {0xf6b600, 0xc000723d00}, 0x7f996bff3978, 0x0, ...)\r\n\tgoogle.golang.org/grpc@v1.42.0/rpc_util.go:758 +0x6e\r\ngoogle.golang.org/grpc.(*csAttempt).recvMsg(0xc00069e000, {0xf6b600, 0xc000723d00}, 0x6e)\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:975 +0x2b0\r\ngoogle.golang.org/grpc.(*clientStream).RecvMsg.func1(0x203000)\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:826 +0x25\r\ngoogle.golang.org/grpc.(*clientStream).withRetry(0xc00069c000, 0xc00006ae50, 0xc00006ae20)\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:680 +0x2f6\r\ngoogle.golang.org/grpc.(*clientStream).RecvMsg(0xc00069c000, {0xf6b600, 0xc000723d00})\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:825 +0x11f\r\ngithub.com/ledgerwatch/erigon-lib/gointerfaces/txpool.(*txpoolOnAddClient).Recv(0xc000620370)\r\n\tgithub.com/ledgerwatch/erigon-lib@v0.0.0-20211217093552-7d82c6ac76e6/gointerfaces/txpool/txpool_grpc.pb.go:121 +0x4c\r\ngithub.com/ledgerwatch/erigon/cmd/rpcdaemon/filters.(*Filters).subscribeToPendingTransactions(0x0, {0x119d238, 0xc000125a80}, {0x11aba38, 0xc0004dda70})\r\n\tgithub.com/ledgerwatch/erigon/cmd/rpcdaemon/filters/filters.go:184 +0x138\r\ngithub.com/ledgerwatch/erigon/cmd/rpcdaemon/filters.New.func2()\r\n\tgithub.com/ledgerwatch/erigon/cmd/rpcdaemon/filters/filters.go:94 +0x95\r\ncreated by github.com/ledgerwatch/erigon/cmd/rpcdaemon/filters.New\r\n\tgithub.com/ledgerwatch/erigon/cmd/rpcdaemon/filters/filters.go:87 +0x28f\r\n\r\ngoroutine 68 [select, 1 minutes]:\r\ngoogle.golang.org/grpc/internal/transport.(*Stream).waitOnHeader(0xc00052c120)\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/transport.go:323 +0x85\r\ngoogle.golang.org/grpc/internal/transport.(*Stream).RecvCompress(...)\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/transport.go:338\r\ngoogle.golang.org/grpc.(*csAttempt).recvMsg(0xc0001560b0, {0xf6b780, 0xc0002a4600}, 0xc000523d40)\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:961 +0xbb\r\ngoogle.golang.org/grpc.(*clientStream).RecvMsg.func1(0x203000)\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:826 +0x25\r\ngoogle.golang.org/grpc.(*clientStream).withRetry(0xc000158200, 0xc000523e48, 0xc000523e18)\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:684 +0xd3\r\ngoogle.golang.org/grpc.(*clientStream).RecvMsg(0xc000158200, {0xf6b780, 0xc0002a4600})\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:825 +0x11f\r\ngithub.com/ledgerwatch/erigon-lib/gointerfaces/txpool.(*miningOnPendingBlockClient).Recv(0xc000710140)\r\n\tgithub.com/ledgerwatch/erigon-lib@v0.0.0-20211217093552-7d82c6ac76e6/gointerfaces/txpool/mining_grpc.pb.go:99 +0x4c\r\ngithub.com/ledgerwatch/erigon/cmd/rpcdaemon/filters.(*Filters).subscribeToPendingBlocks(0x0, {0x119d238, 0xc000125a80}, {0x11abe70, 0xc0004dda40})\r\n\tgithub.com/ledgerwatch/erigon/cmd/rpcdaemon/filters/filters.go:210 +0x162\r\ngithub.com/ledgerwatch/erigon/cmd/rpcdaemon/filters.New.func3()\r\n\tgithub.com/ledgerwatch/erigon/cmd/rpcdaemon/filters/filters.go:121 +0x95\r\ncreated by github.com/ledgerwatch/erigon/cmd/rpcdaemon/filters.New\r\n\tgithub.com/ledgerwatch/erigon/cmd/rpcdaemon/filters/filters.go:114 +0x446\r\n\r\ngoroutine 69 [select, 1 minutes]:\r\ngoogle.golang.org/grpc/internal/transport.(*Stream).waitOnHeader(0xc000164fc0)\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/transport.go:323 +0x85\r\ngoogle.golang.org/grpc/internal/transport.(*Stream).RecvCompress(...)\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/transport.go:338\r\ngoogle.golang.org/grpc.(*csAttempt).recvMsg(0xc000156160, {0xf6b840, 0xc000125580}, 0xc0007cfd40)\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:961 +0xbb\r\ngoogle.golang.org/grpc.(*clientStream).RecvMsg.func1(0x203000)\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:826 +0x25\r\ngoogle.golang.org/grpc.(*clientStream).withRetry(0xc000158300, 0xc0007cfe48, 0xc0007cfe18)\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:684 +0xd3\r\ngoogle.golang.org/grpc.(*clientStream).RecvMsg(0xc000158300, {0xf6b840, 0xc000125580})\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:825 +0x11f\r\ngithub.com/ledgerwatch/erigon-lib/gointerfaces/txpool.(*miningOnPendingLogsClient).Recv(0xc0002ba950)\r\n\tgithub.com/ledgerwatch/erigon-lib@v0.0.0-20211217093552-7d82c6ac76e6/gointerfaces/txpool/mining_grpc.pb.go:163 +0x4c\r\ngithub.com/ledgerwatch/erigon/cmd/rpcdaemon/filters.(*Filters).subscribeToPendingLogs(0x0, {0x119d238, 0xc000125a80}, {0x11abe70, 0xc0004dda40})\r\n\tgithub.com/ledgerwatch/erigon/cmd/rpcdaemon/filters/filters.go:254 +0x162\r\ngithub.com/ledgerwatch/erigon/cmd/rpcdaemon/filters.New.func4()\r\n\tgithub.com/ledgerwatch/erigon/cmd/rpcdaemon/filters/filters.go:147 +0x95\r\ncreated by github.com/ledgerwatch/erigon/cmd/rpcdaemon/filters.New\r\n\tgithub.com/ledgerwatch/erigon/cmd/rpcdaemon/filters/filters.go:140 +0x4e5\r\n\r\ngoroutine 83 [select]:\r\ngoogle.golang.org/grpc/internal/transport.(*http2Client).keepalive(0xc00067e000)\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/http2_client.go:1572 +0x169\r\ncreated by google.golang.org/grpc/internal/transport.newHTTP2Client\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/http2_client.go:358 +0x18e5\r\n\r\ngoroutine 84 [IO wait]:\r\ninternal/poll.runtime_pollWait(0x7f996c05e620, 0x72)\r\n\truntime/netpoll.go:234 +0x89\r\ninternal/poll.(*pollDesc).wait(0xc000630280, 0xc000666000, 0x0)\r\n\tinternal/poll/fd_poll_runtime.go:84 +0x32\r\ninternal/poll.(*pollDesc).waitRead(...)\r\n\tinternal/poll/fd_poll_runtime.go:89\r\ninternal/poll.(*FD).Read(0xc000630280, {0xc000666000, 0x8000, 0x8000})\r\n\tinternal/poll/fd_unix.go:167 +0x25a\r\nnet.(*netFD).Read(0xc000630280, {0xc000666000, 0x3, 0xc0000a2000})\r\n\tnet/fd_posix.go:56 +0x29\r\nnet.(*conn).Read(0xc000202048, {0xc000666000, 0x44db20, 0xc00063c7e0})\r\n\tnet/net.go:183 +0x45\r\nbufio.(*Reader).Read(0xc00063c660, {0xc0004be2e0, 0x9, 0x100000001})\r\n\tbufio/bufio.go:227 +0x1b4\r\nio.ReadAtLeast({0x1181860, 0xc00063c660}, {0xc0004be2e0, 0x9, 0x9}, 0x9)\r\n\tio/io.go:328 +0x9a\r\nio.ReadFull(...)\r\n\tio/io.go:347\r\ngolang.org/x/net/http2.readFrameHeader({0xc0004be2e0, 0x9, 0xc000206870}, {0x1181860, 0xc00063c660})\r\n\tgolang.org/x/net@v0.0.0-20211112202133-69e39bad7dc2/http2/frame.go:237 +0x6e\r\ngolang.org/x/net/http2.(*Framer).ReadFrame(0xc0004be2a0)\r\n\tgolang.org/x/net@v0.0.0-20211112202133-69e39bad7dc2/http2/frame.go:498 +0x95\r\ngoogle.golang.org/grpc/internal/transport.(*http2Client).reader(0xc00067e000)\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/http2_client.go:1498 +0x41f\r\ncreated by google.golang.org/grpc/internal/transport.newHTTP2Client\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/http2_client.go:363 +0x192f\r\n\r\ngoroutine 23 [select]:\r\ngoogle.golang.org/grpc/internal/transport.(*http2Client).keepalive(0xc00000c1e0)\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/http2_client.go:1572 +0x169\r\ncreated by google.golang.org/grpc/internal/transport.newHTTP2Client\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/http2_client.go:358 +0x18e5\r\n\r\ngoroutine 70 [IO wait]:\r\ninternal/poll.runtime_pollWait(0x7f996c05e7f0, 0x72)\r\n\truntime/netpoll.go:234 +0x89\r\ninternal/poll.(*pollDesc).wait(0xc0002bc300, 0xc000043000, 0x0)\r\n\tinternal/poll/fd_poll_runtime.go:84 +0x32\r\ninternal/poll.(*pollDesc).waitRead(...)\r\n\tinternal/poll/fd_poll_runtime.go:89\r\ninternal/poll.(*FD).Accept(0xc0002bc300)\r\n\tinternal/poll/fd_unix.go:402 +0x22c\r\nnet.(*netFD).accept(0xc0002bc300)\r\n\tnet/fd_unix.go:173 +0x35\r\nnet.(*TCPListener).accept(0xc000127368)\r\n\tnet/tcpsock_posix.go:140 +0x28\r\nnet.(*TCPListener).Accept(0xc000127368)\r\n\tnet/tcpsock.go:262 +0x3d\r\nnet/http.(*Server).Serve(0xc0002b20e0, {0x11952a8, 0xc000127368})\r\n\tnet/http/server.go:3002 +0x394\r\ncreated by github.com/ledgerwatch/erigon/node.StartHTTPEndpoint\r\n\tgithub.com/ledgerwatch/erigon/node/endpoints.go:47 +0x14f\r\n\r\ngoroutine 24 [IO wait]:\r\ninternal/poll.runtime_pollWait(0x7f996c05e708, 0x72)\r\n\truntime/netpoll.go:234 +0x89\r\ninternal/poll.(*pollDesc).wait(0xc0001d2400, 0xc0007d6000, 0x0)\r\n\tinternal/poll/fd_poll_runtime.go:84 +0x32\r\ninternal/poll.(*pollDesc).waitRead(...)\r\n\tinternal/poll/fd_poll_runtime.go:89\r\ninternal/poll.(*FD).Read(0xc0001d2400, {0xc0007d6000, 0x8000, 0x8000})\r\n\tinternal/poll/fd_unix.go:167 +0x25a\r\nnet.(*netFD).Read(0xc0001d2400, {0xc0007d6000, 0x1060100000000, 0x8})\r\n\tnet/fd_posix.go:56 +0x29\r\nnet.(*conn).Read(0xc0007d4000, {0xc0007d6000, 0x44db20, 0xc0002b8de0})\r\n\tnet/net.go:183 +0x45\r\nbufio.(*Reader).Read(0xc000082660, {0xc0007ee040, 0x9, 0x18})\r\n\tbufio/bufio.go:227 +0x1b4\r\nio.ReadAtLeast({0x1181860, 0xc000082660}, {0xc0007ee040, 0x9, 0x9}, 0x9)\r\n\tio/io.go:328 +0x9a\r\nio.ReadFull(...)\r\n\tio/io.go:347\r\ngolang.org/x/net/http2.readFrameHeader({0xc0007ee040, 0x9, 0x12813dfb04}, {0x1181860, 0xc000082660})\r\n\tgolang.org/x/net@v0.0.0-20211112202133-69e39bad7dc2/http2/frame.go:237 +0x6e\r\ngolang.org/x/net/http2.(*Framer).ReadFrame(0xc0007ee000)\r\n\tgolang.org/x/net@v0.0.0-20211112202133-69e39bad7dc2/http2/frame.go:498 +0x95\r\ngoogle.golang.org/grpc/internal/transport.(*http2Client).reader(0xc00000c1e0)\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/http2_client.go:1498 +0x41f\r\ncreated by google.golang.org/grpc/internal/transport.newHTTP2Client\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/http2_client.go:363 +0x192f\r\n\r\ngoroutine 25 [select]:\r\ngoogle.golang.org/grpc/internal/transport.(*controlBuffer).get(0xc0007c60a0, 0x1)\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/controlbuf.go:407 +0x11b\r\ngoogle.golang.org/grpc/internal/transport.(*loopyWriter).run(0xc0000826c0)\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/controlbuf.go:534 +0x85\r\ngoogle.golang.org/grpc/internal/transport.newHTTP2Client.func3()\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/http2_client.go:413 +0x65\r\ncreated by google.golang.org/grpc/internal/transport.newHTTP2Client\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/http2_client.go:411 +0x1f85\r\n\r\ngoroutine 85 [runnable]:\r\ngoogle.golang.org/grpc/internal/transport.(*controlBuffer).get(0xc00012e4b0, 0x1)\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/controlbuf.go:407 +0x11b\r\ngoogle.golang.org/grpc/internal/transport.(*loopyWriter).run(0xc00063c6c0)\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/controlbuf.go:534 +0x85\r\ngoogle.golang.org/grpc/internal/transport.newHTTP2Client.func3()\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/http2_client.go:413 +0x65\r\ncreated by google.golang.org/grpc/internal/transport.newHTTP2Client\r\n\tgoogle.golang.org/grpc@v1.42.0/internal/transport/http2_client.go:411 +0x1f85\r\n\r\ngoroutine 55 [select, 1 minutes]:\r\ngoogle.golang.org/grpc.newClientStreamWithParams.func4()\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:333 +0x98\r\ncreated by google.golang.org/grpc.newClientStreamWithParams\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:332 +0xb45\r\n\r\ngoroutine 72 [select, 1 minutes]:\r\ngoogle.golang.org/grpc.newClientStreamWithParams.func4()\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:333 +0x98\r\ncreated by google.golang.org/grpc.newClientStreamWithParams\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:332 +0xb45\r\n\r\ngoroutine 40 [select, 1 minutes]:\r\ngoogle.golang.org/grpc.newClientStreamWithParams.func4()\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:333 +0x98\r\ncreated by google.golang.org/grpc.newClientStreamWithParams\r\n\tgoogle.golang.org/grpc@v1.42.0/stream.go:332 +0xb45\r\n\r\ngoroutine 423 [IO wait]:\r\ninternal/poll.runtime_pollWait(0x7f996c05e198, 0x72)\r\n\truntime/netpoll.go:234 +0x89\r\ninternal/poll.(*pollDesc).wait(0xc0002bd200, 0xc000712c11, 0x0)\r\n\tinternal/poll/fd_poll_runtime.go:84 +0x32\r\ninternal/poll.(*pollDesc).waitRead(...)\r\n\tinternal/poll/fd_poll_runtime.go:89\r\ninternal/poll.(*FD).Read(0xc0002bd200, {0xc000712c11, 0x1, 0x1})\r\n\tinternal/poll/fd_unix.go:167 +0x25a\r\nnet.(*netFD).Read(0xc0002bd200, {0xc000712c11, 0xf1b4a0, 0xc00050ef48})\r\n\tnet/fd_posix.go:56 +0x29\r\nnet.(*conn).Read(0xc000506360, {0xc000712c11, 0xc0004e12d0, 0xc000285590})\r\n\tnet/net.go:183 +0x45\r\nnet/http.(*connReader).backgroundRead(0xc000712c00)\r\n\tnet/http/server.go:672 +0x3f\r\ncreated by net/http.(*connReader).startBackgroundRead\r\n\tnet/http/server.go:668 +0xcf\r\n\r\ngoroutine 422 [semacquire]:\r\nsync.runtime_Semacquire(0x0)\r\n\truntime/sema.go:56 +0x25\r\nsync.(*WaitGroup).Wait(0xc00063b040)\r\n\tsync/waitgroup.go:130 +0x71\r\ngithub.com/ledgerwatch/erigon/rpc.(*handler).close(0xc00063b040, {0x1181c20, 0xc00006c100}, 0xc000628660)\r\n\tgithub.com/ledgerwatch/erigon/rpc/handler.go:199 +0x38\r\ngithub.com/ledgerwatch/erigon/rpc.(*Server).serveSingleRequest(0xc000124580, {0x119d2e0, 0xc000712d50}, {0x11a3a58, 0xc000285630})\r\n\tgithub.com/ledgerwatch/erigon/rpc/server.go:124 +0x229\r\ngithub.com/ledgerwatch/erigon/rpc.(*Server).ServeHTTP(0xc0002c2000, {0x11954b8, 0xc0007ee7e0}, 0xc000159300)\r\n\tgithub.com/ledgerwatch/erigon/rpc/http.go:254 +0x3e5\r\ngithub.com/rs/cors.(*Cors).Handler.func1({0x11954b8, 0xc0007ee7e0}, 0xc000159300)\r\n\tgithub.com/rs/cors@v1.8.0/cors.go:219 +0x1bd\r\nnet/http.HandlerFunc.ServeHTTP(0xc00058b7c0, {0x11954b8, 0xc0007ee7e0}, 0xf9a400)\r\n\tnet/http/server.go:2047 +0x2f\r\ngithub.com/ledgerwatch/erigon/node.(*virtualHostHandler).ServeHTTP(0xc000127308, {0x11954b8, 0xc0007ee7e0}, 0xc000159300)\r\n\tgithub.com/ledgerwatch/erigon/node/rpcstack.go:425 +0x173\r\ngithub.com/ledgerwatch/erigon/node.newGzipHandler.func1({0x11954b8, 0xc0007ee7e0}, 0xc000159300)\r\n\tgithub.com/ledgerwatch/erigon/node/rpcstack.go:465 +0x2ec\r\nnet/http.HandlerFunc.ServeHTTP(0x11954b8, {0x11954b8, 0xc0007ee7e0}, 0xc000138000)\r\n\tnet/http/server.go:2047 +0x2f\r\ngithub.com/ledgerwatch/erigon/cmd/rpcdaemon/cli.StartRpcServer.func1({0x11954b8, 0xc0007ee7e0}, 0xc000159300)\r\n\tgithub.com/ledgerwatch/erigon/cmd/rpcdaemon/cli/config.go:336 +0xd6\r\nnet/http.HandlerFunc.ServeHTTP(0x0, {0x11954b8, 0xc0007ee7e0}, 0x6e0b20)\r\n\tnet/http/server.go:2047 +0x2f\r\nnet/http.serverHandler.ServeHTTP({0x1193268}, {0x11954b8, 0xc0007ee7e0}, 0xc000159300)\r\n\tnet/http/server.go:2879 +0x43b\r\nnet/http.(*conn).serve(0xc00063afa0, {0x119d2e0, 0xc0002c0330})\r\n\tnet/http/server.go:1930 +0xb08\r\ncreated by net/http.(*Server).Serve\r\n\tnet/http/server.go:3034 +0x4e8\r\n````\r\n",
  "closed_by": {
    "login": "mfw78",
    "id": 53399572,
    "node_id": "MDQ6VXNlcjUzMzk5NTcy",
    "avatar_url": "https://avatars.githubusercontent.com/u/53399572?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mfw78",
    "html_url": "https://github.com/mfw78",
    "followers_url": "https://api.github.com/users/mfw78/followers",
    "following_url": "https://api.github.com/users/mfw78/following{/other_user}",
    "gists_url": "https://api.github.com/users/mfw78/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mfw78/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mfw78/subscriptions",
    "organizations_url": "https://api.github.com/users/mfw78/orgs",
    "repos_url": "https://api.github.com/users/mfw78/repos",
    "events_url": "https://api.github.com/users/mfw78/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mfw78/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3164/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3164/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1019167255",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/3164#issuecomment-1019167255",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3164",
    "id": 1019167255,
    "node_id": "IC_kwDOC0FsAM48v0IX",
    "user": {
      "login": "mfw78",
      "id": 53399572,
      "node_id": "MDQ6VXNlcjUzMzk5NTcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/53399572?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mfw78",
      "html_url": "https://github.com/mfw78",
      "followers_url": "https://api.github.com/users/mfw78/followers",
      "following_url": "https://api.github.com/users/mfw78/following{/other_user}",
      "gists_url": "https://api.github.com/users/mfw78/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mfw78/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mfw78/subscriptions",
      "organizations_url": "https://api.github.com/users/mfw78/orgs",
      "repos_url": "https://api.github.com/users/mfw78/repos",
      "events_url": "https://api.github.com/users/mfw78/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mfw78/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-22T10:31:44Z",
    "updated_at": "2022-01-22T10:31:44Z",
    "author_association": "NONE",
    "body": "After comprehensive checking of logs, this was traced down to a disk fault.",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1019167255/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
