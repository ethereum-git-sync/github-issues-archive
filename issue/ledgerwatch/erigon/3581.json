{
  "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3581",
  "repository_url": "https://api.github.com/repos/ledgerwatch/erigon",
  "labels_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3581/labels{/name}",
  "comments_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3581/comments",
  "events_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3581/events",
  "html_url": "https://github.com/ledgerwatch/erigon/issues/3581",
  "id": 1147540376,
  "node_id": "I_kwDOC0FsAM5EZhOY",
  "number": 3581,
  "title": "Re-visit how well Erigon can restore values from 'p2p/enode/nodedb.go' after restart ",
  "user": {
    "login": "AskAlexSharov",
    "id": 46885206,
    "node_id": "MDQ6VXNlcjQ2ODg1MjA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/46885206?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AskAlexSharov",
    "html_url": "https://github.com/AskAlexSharov",
    "followers_url": "https://api.github.com/users/AskAlexSharov/followers",
    "following_url": "https://api.github.com/users/AskAlexSharov/following{/other_user}",
    "gists_url": "https://api.github.com/users/AskAlexSharov/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AskAlexSharov/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AskAlexSharov/subscriptions",
    "organizations_url": "https://api.github.com/users/AskAlexSharov/orgs",
    "repos_url": "https://api.github.com/users/AskAlexSharov/repos",
    "events_url": "https://api.github.com/users/AskAlexSharov/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AskAlexSharov/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "battlmonstr",
    "id": 11477595,
    "node_id": "MDQ6VXNlcjExNDc3NTk1",
    "avatar_url": "https://avatars.githubusercontent.com/u/11477595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/battlmonstr",
    "html_url": "https://github.com/battlmonstr",
    "followers_url": "https://api.github.com/users/battlmonstr/followers",
    "following_url": "https://api.github.com/users/battlmonstr/following{/other_user}",
    "gists_url": "https://api.github.com/users/battlmonstr/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/battlmonstr/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/battlmonstr/subscriptions",
    "organizations_url": "https://api.github.com/users/battlmonstr/orgs",
    "repos_url": "https://api.github.com/users/battlmonstr/repos",
    "events_url": "https://api.github.com/users/battlmonstr/events{/privacy}",
    "received_events_url": "https://api.github.com/users/battlmonstr/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "battlmonstr",
      "id": 11477595,
      "node_id": "MDQ6VXNlcjExNDc3NTk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/11477595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/battlmonstr",
      "html_url": "https://github.com/battlmonstr",
      "followers_url": "https://api.github.com/users/battlmonstr/followers",
      "following_url": "https://api.github.com/users/battlmonstr/following{/other_user}",
      "gists_url": "https://api.github.com/users/battlmonstr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/battlmonstr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/battlmonstr/subscriptions",
      "organizations_url": "https://api.github.com/users/battlmonstr/orgs",
      "repos_url": "https://api.github.com/users/battlmonstr/repos",
      "events_url": "https://api.github.com/users/battlmonstr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/battlmonstr/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-02-23T01:34:07Z",
  "updated_at": "2022-04-25T14:42:38Z",
  "closed_at": "2022-04-25T14:42:38Z",
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "Problem: after restart Erigon loosing Good peers and very slow gathering them back\r\nI see next message after node start (and sometime on shutdown also):\r\n```\r\nSuccessfully update p2p node database    updated=0 deleted=8206\r\n```\r\n\r\nNeed re-check how well Erigon can restore values from 'p2p/enode/nodedb.go' after restart\r\n\r\nNeed check:\r\n- can it re-use most of values?\r\n- if can re-use - how fast such peers can become \"good peers\"?\r\n- if Erigon has records in nodedb, can it start with empty Bootnodes list?\r\n\r\n",
  "closed_by": {
    "login": "battlmonstr",
    "id": 11477595,
    "node_id": "MDQ6VXNlcjExNDc3NTk1",
    "avatar_url": "https://avatars.githubusercontent.com/u/11477595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/battlmonstr",
    "html_url": "https://github.com/battlmonstr",
    "followers_url": "https://api.github.com/users/battlmonstr/followers",
    "following_url": "https://api.github.com/users/battlmonstr/following{/other_user}",
    "gists_url": "https://api.github.com/users/battlmonstr/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/battlmonstr/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/battlmonstr/subscriptions",
    "organizations_url": "https://api.github.com/users/battlmonstr/orgs",
    "repos_url": "https://api.github.com/users/battlmonstr/repos",
    "events_url": "https://api.github.com/users/battlmonstr/events{/privacy}",
    "received_events_url": "https://api.github.com/users/battlmonstr/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3581/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3581/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1060820917",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/3581#issuecomment-1060820917",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3581",
    "id": 1060820917,
    "node_id": "IC_kwDOC0FsAM4_Ote1",
    "user": {
      "login": "battlmonstr",
      "id": 11477595,
      "node_id": "MDQ6VXNlcjExNDc3NTk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/11477595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/battlmonstr",
      "html_url": "https://github.com/battlmonstr",
      "followers_url": "https://api.github.com/users/battlmonstr/followers",
      "following_url": "https://api.github.com/users/battlmonstr/following{/other_user}",
      "gists_url": "https://api.github.com/users/battlmonstr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/battlmonstr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/battlmonstr/subscriptions",
      "organizations_url": "https://api.github.com/users/battlmonstr/orgs",
      "repos_url": "https://api.github.com/users/battlmonstr/repos",
      "events_url": "https://api.github.com/users/battlmonstr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/battlmonstr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-07T15:37:12Z",
    "updated_at": "2022-03-07T15:43:01Z",
    "author_association": "COLLABORATOR",
    "body": "@AskAlexSharov \r\n\r\nI think that primarily it is a regression after [introducing a nodedb cache](https://github.com/ledgerwatch/erigon/commit/65a9a265c2049b22f9fe78f0f93715ed00a33014).\r\n\r\nThere are multiple issues that cause this behaviour.\r\n\r\nThe cache is flushed to DB in 2 cases:\r\n1. When reaching ~3-4K new peers [due to this check](https://github.com/ledgerwatch/erigon/blob/dd47dfd/p2p/enode/nodedb.go#L247). In practice this rarely happens, because getting to thousands of discovered peers is gonna take quite a while.\r\n2. Upon a [graceful shutdown](https://github.com/ledgerwatch/erigon/blob/dd47dfd/p2p/enode/nodedb.go#L776). If the server is killed without a graceful shutdown, nothing will be persisted.\r\n\r\n### Answering to your questions:\r\n\r\n> updated=0 deleted=8206\r\n\r\nThis log message is misleading [due to a typo](https://github.com/ledgerwatch/erigon/blob/dd47dfd/p2p/enode/nodedb.go#L748) - entriesUpdated/entriesDeleted variables should be reversed there for logging. The message happens normally upon shutdown and says that 8206 database cache entries were flushed to DB (corresponding to about 2K peers, because each peer has 4-5 related entries).\r\n\r\n> can it re-use most of values?\r\n\r\nYes, but there are caveats:\r\n\r\n* The nodes are [saved to DB only after seedMinTableTime=5 minutes of staying in the routing table](https://github.com/ledgerwatch/erigon/blob/dd47dfdf0910515dc9703ca0236c837cb4f495c7/p2p/discover/table.go#L393). If you run erigon for less than 5 minutes the seed nodes are empty. It's possible to check if there are some nodes coming from DB after restart by [setting a breakpoint here](https://github.com/ledgerwatch/erigon/blob/dd47dfdf0910515dc9703ca0236c837cb4f495c7/p2p/discover/table.go#L308) and watch `seeds`.\r\n\r\n* QuerySeeds will poke 150 random entries in the whole node DB and [ignore hitting \"field\" entries](https://github.com/ledgerwatch/erigon/blob/dd47dfdf0910515dc9703ca0236c837cb4f495c7/p2p/enode/nodedb.go#L692). In a long-running scenario each \"node record\" entry has 3-4 \"field\" entries (`lastping`, `lastpong`, `findfail`, `seq`), so making 150 attempts hopefully find about 30 \"node record\" entries. In a bootstrap scenario this fails, because initially it produces hundreds of pings, and the table has very few \"node record\" entries, so 150 random attempts are not enough. After running for 15 minutes I've got `totalEntryCount=1508 nodeRecordCount=114` entries meaning that there's a 1/16 chance of hitting a \"node record\" entry, and it means finding just about 10 nodes of 114 total on average from 150 attempts.\r\n\r\n> how fast such peers can become \"good peers\"?\r\n\r\nThere's no prioritization of good peers (the ones that were just connected with Eth66 before shutdown) versus peers that replied to a Ping during the last 5 days (seedMaxAge). QuerySeeds happily returns 30 random peers to put into the table, and then it will start a [random lookup](https://github.com/ledgerwatch/erigon/blob/dd47dfdf0910515dc9703ca0236c837cb4f495c7/p2p/server.go#L615). The first phase of that lookup will [return 16 of them back from the table](https://github.com/ledgerwatch/erigon/blob/dd47dfdf0910515dc9703ca0236c837cb4f495c7/p2p/discover/lookup.go#L107). After restarting it is likely to try to connect to a totally different set of peers.\r\n\r\n> can it start with empty Bootnodes list?\r\n\r\nYes, it can. I tried - it worked.\r\n\r\n\r\n### Possible solutions:\r\n\r\n* Revert the nodedb cache optimization.\r\n* Implement a different solution for reducing the number of commits to the nodedb. I feel that most commits are caused by `lastping/lastpong` updates. If we keep a transaction object for those (using BeginRw instead of Update), we can delay the commits on it. The commits could be done based on a timer, e.g. every 5 sec. This needs a bit of testing to confirm that writing to the other entries is rare.\r\n* Split \"node record\" entries to a separate table such that QuerySeeds doesn't do idle cycle hits. Or find a different way to fix QuerySeeds, e.g. iterate over all the entries.\r\n\r\nThis solves the regression. When it comes to prioritizing good peers, this feels like a separate \"feature\" task that we could discuss and design separately.\r\n\r\nCC @AlexeyAkhunov ",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1060820917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1060886624",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/3581#issuecomment-1060886624",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3581",
    "id": 1060886624,
    "node_id": "IC_kwDOC0FsAM4_O9hg",
    "user": {
      "login": "battlmonstr",
      "id": 11477595,
      "node_id": "MDQ6VXNlcjExNDc3NTk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/11477595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/battlmonstr",
      "html_url": "https://github.com/battlmonstr",
      "followers_url": "https://api.github.com/users/battlmonstr/followers",
      "following_url": "https://api.github.com/users/battlmonstr/following{/other_user}",
      "gists_url": "https://api.github.com/users/battlmonstr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/battlmonstr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/battlmonstr/subscriptions",
      "organizations_url": "https://api.github.com/users/battlmonstr/orgs",
      "repos_url": "https://api.github.com/users/battlmonstr/repos",
      "events_url": "https://api.github.com/users/battlmonstr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/battlmonstr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-07T16:34:45Z",
    "updated_at": "2022-03-07T16:34:45Z",
    "author_association": "COLLABORATOR",
    "body": "Yeah, so it is mostly updating lastping/lastpong/findfail:\r\n```\r\n  53 UpdateFindFails\r\n  68 UpdateLastPingReceived\r\n  77 UpdateLastPongReceived\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1060886624/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1061316455",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/3581#issuecomment-1061316455",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3581",
    "id": 1061316455,
    "node_id": "IC_kwDOC0FsAM4_Qmdn",
    "user": {
      "login": "AskAlexSharov",
      "id": 46885206,
      "node_id": "MDQ6VXNlcjQ2ODg1MjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46885206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AskAlexSharov",
      "html_url": "https://github.com/AskAlexSharov",
      "followers_url": "https://api.github.com/users/AskAlexSharov/followers",
      "following_url": "https://api.github.com/users/AskAlexSharov/following{/other_user}",
      "gists_url": "https://api.github.com/users/AskAlexSharov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AskAlexSharov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AskAlexSharov/subscriptions",
      "organizations_url": "https://api.github.com/users/AskAlexSharov/orgs",
      "repos_url": "https://api.github.com/users/AskAlexSharov/repos",
      "events_url": "https://api.github.com/users/AskAlexSharov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AskAlexSharov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-08T01:36:24Z",
    "updated_at": "2022-03-08T01:38:09Z",
    "author_association": "COLLABORATOR",
    "body": "“Holding db tx object” - main problem here is - rwtx object can’t be moved between threads (means can’t “just hide it behind mutex and use from multiple goroutines”). And cache object introduced mostly to handle concurrent writes. There is some known design pattern to handle much parallel writes per second with lmdb, see .Batch method of bbolt https://github.com/etcd-io/bbolt#batch-read-write-transactions (if you like - can implement such in mdbx-go bindings, or kv_mdbx wrapper). \r\nAlso readTx will not see any updates until rwtx commit (i don’t know if it’s important here). \r\n\r\n“ this feels like a separate \"feature\" task” - feel free to break it to smaller PR’s as you like. \r\n\r\nI think we don’t need “peers prioritization”, but need just re-view that no obvious bugs that make us loose list of peers or too slow restore them. ",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1061316455/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1064091703",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/3581#issuecomment-1064091703",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3581",
    "id": 1064091703,
    "node_id": "IC_kwDOC0FsAM4_bMA3",
    "user": {
      "login": "battlmonstr",
      "id": 11477595,
      "node_id": "MDQ6VXNlcjExNDc3NTk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/11477595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/battlmonstr",
      "html_url": "https://github.com/battlmonstr",
      "followers_url": "https://api.github.com/users/battlmonstr/followers",
      "following_url": "https://api.github.com/users/battlmonstr/following{/other_user}",
      "gists_url": "https://api.github.com/users/battlmonstr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/battlmonstr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/battlmonstr/subscriptions",
      "organizations_url": "https://api.github.com/users/battlmonstr/orgs",
      "repos_url": "https://api.github.com/users/battlmonstr/repos",
      "events_url": "https://api.github.com/users/battlmonstr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/battlmonstr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-10T13:58:05Z",
    "updated_at": "2022-03-10T13:58:14Z",
    "author_association": "COLLABORATOR",
    "body": "Mostly done for Erigon2 at https://github.com/ledgerwatch/erigon/commit/04f07a0f0850aef70b36d102203eeb9fae310fea .\r\n\r\nI've made a tentative revert PR https://github.com/ledgerwatch/erigon/pull/3675 for stable. Do we want to backport all the fixes to stable?",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1064091703/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1064775530",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/3581#issuecomment-1064775530",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3581",
    "id": 1064775530,
    "node_id": "IC_kwDOC0FsAM4_dy9q",
    "user": {
      "login": "AskAlexSharov",
      "id": 46885206,
      "node_id": "MDQ6VXNlcjQ2ODg1MjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46885206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AskAlexSharov",
      "html_url": "https://github.com/AskAlexSharov",
      "followers_url": "https://api.github.com/users/AskAlexSharov/followers",
      "following_url": "https://api.github.com/users/AskAlexSharov/following{/other_user}",
      "gists_url": "https://api.github.com/users/AskAlexSharov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AskAlexSharov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AskAlexSharov/subscriptions",
      "organizations_url": "https://api.github.com/users/AskAlexSharov/orgs",
      "repos_url": "https://api.github.com/users/AskAlexSharov/repos",
      "events_url": "https://api.github.com/users/AskAlexSharov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AskAlexSharov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-11T05:04:07Z",
    "updated_at": "2022-03-11T05:04:07Z",
    "author_association": "COLLABORATOR",
    "body": "@battlmonstr \"Do we want to backport all the fixes to stable?\" - no, only if it fixing some problem. \"slow discovery\"/\"too much commits of enodedb\" - is likely a problem. ",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1064775530/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
