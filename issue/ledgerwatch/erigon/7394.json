{
  "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/7394",
  "repository_url": "https://api.github.com/repos/ledgerwatch/erigon",
  "labels_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/7394/labels{/name}",
  "comments_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/7394/comments",
  "events_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/7394/events",
  "html_url": "https://github.com/ledgerwatch/erigon/issues/7394",
  "id": 1685707650,
  "node_id": "I_kwDOC0FsAM5keduC",
  "number": 7394,
  "title": "Consensus Spec tests for Forkchoice.",
  "user": {
    "login": "Giulio2002",
    "id": 29233688,
    "node_id": "MDQ6VXNlcjI5MjMzNjg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/29233688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Giulio2002",
    "html_url": "https://github.com/Giulio2002",
    "followers_url": "https://api.github.com/users/Giulio2002/followers",
    "following_url": "https://api.github.com/users/Giulio2002/following{/other_user}",
    "gists_url": "https://api.github.com/users/Giulio2002/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Giulio2002/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Giulio2002/subscriptions",
    "organizations_url": "https://api.github.com/users/Giulio2002/orgs",
    "repos_url": "https://api.github.com/users/Giulio2002/repos",
    "events_url": "https://api.github.com/users/Giulio2002/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Giulio2002/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-04-26T20:52:13Z",
  "updated_at": "2023-05-01T15:39:29Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "# Rationale\r\n\r\nRight now there are no consensus tests being ran for Caplin forkchoice. so we need them.\r\n\r\n# Implementation\r\n\r\nSo implementation of the conensus-spec-tests code is at cmd/ef-tests-cl, there you can find the run code. So each test is divided in YAML files and we need to execute the order in which the yaml instruction come. For example:\r\n\r\n````\r\n- checks:\r\n    head: {slot: 0, root: '0xde0946ce3fd98b8322335d33d9e66210043121806d6158dbdc61d1f349669ba4'}\r\n- {tick: 12}\r\n- checks:\r\n    time: 12\r\n    head: {slot: 0, root: '0xde0946ce3fd98b8322335d33d9e66210043121806d6158dbdc61d1f349669ba4'}\r\n    justified_checkpoint: {epoch: 0, root: '0xde0946ce3fd98b8322335d33d9e66210043121806d6158dbdc61d1f349669ba4'}\r\n    finalized_checkpoint: {epoch: 0, root: '0xde0946ce3fd98b8322335d33d9e66210043121806d6158dbdc61d1f349669ba4'}\r\n    proposer_boost_root: '0x0000000000000000000000000000000000000000000000000000000000000000'\r\n- {block: block_0xc72c3eee9c32f184be5b703bdd9b9932d5d8a104d1153eb2420bc8a9c73375a9}\r\n- checks:\r\n    time: 12\r\n    head: {slot: 1, root: '0x52e0ef631d09872e3cc1011c53aef6749277664d541fc22b556610e4c1bfd2e0'}\r\n    justified_checkpoint: {epoch: 0, root: '0xde0946ce3fd98b8322335d33d9e66210043121806d6158dbdc61d1f349669ba4'}\r\n    finalized_checkpoint: {epoch: 0, root: '0xde0946ce3fd98b8322335d33d9e66210043121806d6158dbdc61d1f349669ba4'}\r\n    proposer_boost_root: '0x52e0ef631d09872e3cc1011c53aef6749277664d541fc22b556610e4c1bfd2e0'\r\n- {tick: 24}\r\n- checks:\r\n    time: 24\r\n    head: {slot: 1, root: '0x52e0ef631d09872e3cc1011c53aef6749277664d541fc22b556610e4c1bfd2e0'}\r\n    justified_checkpoint: {epoch: 0, root: '0xde0946ce3fd98b8322335d33d9e66210043121806d6158dbdc61d1f349669ba4'}\r\n    finalized_checkpoint: {epoch: 0, root: '0xde0946ce3fd98b8322335d33d9e66210043121806d6158dbdc61d1f349669ba4'}\r\n    proposer_boost_root: '0x0000000000000000000000000000000000000000000000000000000000000000'\r\n- {block: block_0x3dc785563392956715b2947aeab815cbef0486624ccbce8021955bad4a08a65d}\r\n- checks:\r\n    time: 24\r\n    head: {slot: 2, root: '0x770d058877053214862779fc86dfa100306ff0c4e4842f1d9089da016b1d57a7'}\r\n    justified_checkpoint: {epoch: 0, root: '0xde0946ce3fd98b8322335d33d9e66210043121806d6158dbdc61d1f349669ba4'}\r\n    finalized_checkpoint: {epoch: 0, root: '0xde0946ce3fd98b8322335d33d9e66210043121806d6158dbdc61d1f349669ba4'}\r\n    proposer_boost_root: '0x770d058877053214862779fc86dfa100306ff0c4e4842f1d9089da016b1d57a7'\r\n- checks:\r\n    head: {slot: 2, root: '0x770d058877053214862779fc86dfa100306ff0c4e4842f1d9089da016b1d57a7'}\r\n````\r\n\r\nwhen there is a check we want to check that the values match. when there is tick we need to call onTick, when there is block we need call onBlock, and so on for onAttestation and onAttesterSlashing. You can see the reference implementation at: https://github.com/ledgerwatch/erigon/blob/82971007bb69a421b62a49aa0fdafdc55cbd8b3f/cmd/erigon-cl/forkchoice/on_attestation.go#L11 . consensus specs for the forkchoice algo is at https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/fork-choice.md .",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/7394/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/7394/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1529843224",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/7394#issuecomment-1529843224",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/7394",
    "id": 1529843224,
    "node_id": "IC_kwDOC0FsAM5bL44Y",
    "user": {
      "login": "Giulio2002",
      "id": 29233688,
      "node_id": "MDQ6VXNlcjI5MjMzNjg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/29233688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Giulio2002",
      "html_url": "https://github.com/Giulio2002",
      "followers_url": "https://api.github.com/users/Giulio2002/followers",
      "following_url": "https://api.github.com/users/Giulio2002/following{/other_user}",
      "gists_url": "https://api.github.com/users/Giulio2002/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Giulio2002/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Giulio2002/subscriptions",
      "organizations_url": "https://api.github.com/users/Giulio2002/orgs",
      "repos_url": "https://api.github.com/users/Giulio2002/repos",
      "events_url": "https://api.github.com/users/Giulio2002/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Giulio2002/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-01T15:34:50Z",
    "updated_at": "2023-05-01T15:34:50Z",
    "author_association": "COLLABORATOR",
    "body": "first thing move to `cmd/ef-test-cl` and run `sh setup.sh`. note you need `git lfs` installed. then you can run `sh build.sh` to build the tests and then run them with `./eftests`. you can add the `--case=<pattern>` for pattern matching. for example in your case that may look like `--case=fork_choice` to execute only fork_choice tests. In order to add a new test, you just need to add them to https://github.com/ledgerwatch/erigon/blob/d475bab15f01030d18d6545596424a84ae82c841/cmd/ef-tests-cl/consensus_tests/handlers.go#L86, and use as a key `fork_choice/ex_ante`, `fork_choice/get_head`, `fork_choice/on_block` (it is based on the path to the test in the consensus spec repo from Ethereum foundation).",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1529843224/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1529845856",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/7394#issuecomment-1529845856",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/7394",
    "id": 1529845856,
    "node_id": "IC_kwDOC0FsAM5bL5hg",
    "user": {
      "login": "Giulio2002",
      "id": 29233688,
      "node_id": "MDQ6VXNlcjI5MjMzNjg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/29233688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Giulio2002",
      "html_url": "https://github.com/Giulio2002",
      "followers_url": "https://api.github.com/users/Giulio2002/followers",
      "following_url": "https://api.github.com/users/Giulio2002/following{/other_user}",
      "gists_url": "https://api.github.com/users/Giulio2002/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Giulio2002/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Giulio2002/subscriptions",
      "organizations_url": "https://api.github.com/users/Giulio2002/orgs",
      "repos_url": "https://api.github.com/users/Giulio2002/repos",
      "events_url": "https://api.github.com/users/Giulio2002/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Giulio2002/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-01T15:37:50Z",
    "updated_at": "2023-05-01T15:37:50Z",
    "author_association": "COLLABORATOR",
    "body": "the handler func has a \r\n```go\r\ntype testContext struct {\r\n\ttestName string\r\n\tcaseName string\r\n\tversion  clparams.StateVersion\r\n}\r\n``` \r\nwhich includes metadata about the tests such as testName, caseNAme and importantly the current fork the tests are testing. (e.g Capella, Altair, Bellatrix). the testfunc runs within the test directory so you can read file by assuming that you are in the file's directory. Last thing, you can avoid writting tests for `Phase0` as I am not planning on supporting the chain tip sync of that phase, but rather only replay of that fork",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1529845856/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1529847151",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/7394#issuecomment-1529847151",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/7394",
    "id": 1529847151,
    "node_id": "IC_kwDOC0FsAM5bL51v",
    "user": {
      "login": "Giulio2002",
      "id": 29233688,
      "node_id": "MDQ6VXNlcjI5MjMzNjg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/29233688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Giulio2002",
      "html_url": "https://github.com/Giulio2002",
      "followers_url": "https://api.github.com/users/Giulio2002/followers",
      "following_url": "https://api.github.com/users/Giulio2002/following{/other_user}",
      "gists_url": "https://api.github.com/users/Giulio2002/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Giulio2002/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Giulio2002/subscriptions",
      "organizations_url": "https://api.github.com/users/Giulio2002/orgs",
      "repos_url": "https://api.github.com/users/Giulio2002/repos",
      "events_url": "https://api.github.com/users/Giulio2002/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Giulio2002/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-01T15:39:29Z",
    "updated_at": "2023-05-01T15:39:29Z",
    "author_association": "COLLABORATOR",
    "body": "testing format: https://github.com/ethereum/consensus-specs/blob/dev/tests/formats/fork_choice/README.md",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1529847151/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
