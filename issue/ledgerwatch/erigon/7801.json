{
  "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/7801",
  "repository_url": "https://api.github.com/repos/ledgerwatch/erigon",
  "labels_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/7801/labels{/name}",
  "comments_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/7801/comments",
  "events_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/7801/events",
  "html_url": "https://github.com/ledgerwatch/erigon/issues/7801",
  "id": 1774317179,
  "node_id": "I_kwDOC0FsAM5pwe57",
  "number": 7801,
  "title": "Similar to the issue mentioned in #6569: insufficient funds for gas * price + value: address ...",
  "user": {
    "login": "MobillsInMobild",
    "id": 59819834,
    "node_id": "MDQ6VXNlcjU5ODE5ODM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/59819834?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MobillsInMobild",
    "html_url": "https://github.com/MobillsInMobild",
    "followers_url": "https://api.github.com/users/MobillsInMobild/followers",
    "following_url": "https://api.github.com/users/MobillsInMobild/following{/other_user}",
    "gists_url": "https://api.github.com/users/MobillsInMobild/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MobillsInMobild/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MobillsInMobild/subscriptions",
    "organizations_url": "https://api.github.com/users/MobillsInMobild/orgs",
    "repos_url": "https://api.github.com/users/MobillsInMobild/repos",
    "events_url": "https://api.github.com/users/MobillsInMobild/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MobillsInMobild/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-06-26T09:16:42Z",
  "updated_at": "2023-06-26T09:16:42Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nErigon version: \r\n\r\n- build from [origin/devel] Remove the Rinkeby testnet (#7677 ) \r\n\r\nOS & Version:\r\n\r\n- Ubuntu 22.04.2 LTS\r\n\r\nCommit hash: \r\n\r\n- fa0cfcbec7d5aecd44f4254b6b2dc9b03486f2f5\r\n\r\nConcensus Layer: \r\n\r\n- just Erigon used as an Execution Layer for Consensus Layer clients with default configuration\r\n\r\nChain/Network: \r\n\r\n- ETH main\r\n\r\n#### Expected behaviour\r\n\r\n- I would like to use `eth_callMany` to simulate a trade. Obviously [0x380d096daec90a2d255574df70a89f65efc773a627adc924fba5f5869570e642](https://etherscan.io/tx/0x380d096daec90a2d255574df70a89f65efc773a627adc924fba5f5869570e642) on ethereum is a successfully executed transaction and its position in the block is 10. So when I build the correct raw transaction and use `eth_callMany` at any position in block, I should be able to call this transaction successfully.\r\n\r\n#### Actual behaviour\r\n\r\n- In fact, when I use `eth_callMany` at any position greater than 10, it occurs this:\r\n```\r\ninsufficient funds for gas * price + value: address ...\r\n```\r\n\r\n- Any position less than or equal to 10 can be executed normally, which means that the original transaction at position 10 was not executed normally. \r\n- To be able to execute `eth_callMany`, I had to set `gasBailout` in `core.ApplyMessage` to **True** in `erigon/cmd/rpcdaemon/commands/eth_callMany.go`\r\n- Noticing that the transaction at position 9 has the same `tx.from` as the transaction at position 10, it leads me to believe that this issue is related to #6569 . @ArielTM\r\n\r\n\r\n\r\n#### Steps to reproduce the behaviour\r\n\r\n``` python\r\nfrom web3 import Web3, HTTPProvider\r\nfrom config import *\r\n\r\nimport requests\r\n\r\n\r\nw3 = Web3(HTTPProvider(Erigon_path))\r\ns = requests.session()\r\n\r\n\r\ndef get_amount_from_raw_tx(raw_tx, height, index):\r\n    for k in raw_tx:\r\n        if isinstance(raw_tx[k], int):\r\n            raw_tx[k] = hex(raw_tx[k])\r\n    raw_tx = dict(\r\n        [\r\n            (k, raw_tx[k])\r\n            for k in raw_tx\r\n            if k in [\"to\", \"gas\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"data\"]\r\n        ]\r\n    )\r\n\r\n    params = [\r\n        [{\"transactions\": [raw_tx]}],\r\n        {\"blockNumber\": hex(height), \"transactionIndex\": index},\r\n    ]\r\n    print(\r\n        s.post(\r\n            erigon_path,\r\n            json={\r\n                \"jsonrpc\": \"2.0\",\r\n                \"method\": \"eth_callMany\",\r\n                \"params\": params,\r\n                \"id\": 67,\r\n            },\r\n        ).json()\r\n    )\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    raw_tx = {\r\n        \"value\": 0,\r\n        \"chainId\": 1,\r\n        \"gas\": 2000000,\r\n        \"maxFeePerGas\": 1029546770420,\r\n        \"maxPriorityFeePerGas\": 1192368570,\r\n        \"to\": \"0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6\",\r\n        \"data\": \"0xf7729d43000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200000000000000000000000000000000000000000000000000000000000001f4000000000000000000000000000000000000000000000000000000012a05f2000000000000000000000000000000000000000000000000000000000000000000\",\r\n    }\r\n    height = 16957059\r\n    index = 11\r\n    get_amount_from_raw_tx(raw_tx, height, index)\r\n\r\n```\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/7801/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/7801/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
