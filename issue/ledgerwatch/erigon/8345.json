{
  "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/8345",
  "repository_url": "https://api.github.com/repos/ledgerwatch/erigon",
  "labels_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/8345/labels{/name}",
  "comments_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/8345/comments",
  "events_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/8345/events",
  "html_url": "https://github.com/ledgerwatch/erigon/issues/8345",
  "id": 1922693129,
  "node_id": "I_kwDOC0FsAM5ymfgJ",
  "number": 8345,
  "title": "eth_call stateDiff incompatible with geth and other clients.",
  "user": {
    "login": "ape-dev-cs",
    "id": 83542848,
    "node_id": "MDQ6VXNlcjgzNTQyODQ4",
    "avatar_url": "https://avatars.githubusercontent.com/u/83542848?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ape-dev-cs",
    "html_url": "https://github.com/ape-dev-cs",
    "followers_url": "https://api.github.com/users/ape-dev-cs/followers",
    "following_url": "https://api.github.com/users/ape-dev-cs/following{/other_user}",
    "gists_url": "https://api.github.com/users/ape-dev-cs/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ape-dev-cs/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ape-dev-cs/subscriptions",
    "organizations_url": "https://api.github.com/users/ape-dev-cs/orgs",
    "repos_url": "https://api.github.com/users/ape-dev-cs/repos",
    "events_url": "https://api.github.com/users/ape-dev-cs/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ape-dev-cs/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-10-02T20:53:45Z",
  "updated_at": "2023-10-02T23:00:57Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "When calling eth_call with a 3rd parameter / stateDiff, Erigon errors out with a format that geth accepts, and geth errors when you give it a format that Erigon accepts. I've only reproduced this as a consumer of Erigon over various 3rd party APIs, however I've reproduced it on mainnet and gnosis chain, across several providers which offer Erigon as an option.\r\n\r\nGeth expects padded hex, but Erigon wants unpadded hex.\r\n\r\nThe following stateDiff format will work for Geth, but if you change the URL to an Erigon endpoint, you'll get `invalid argument 2: hex number with leading zero digits`\r\n\r\n```bash\r\ncurl --location '<geth rpc url>' \\\r\n--header 'Content-Type: application/json' \\\r\n--data '{\"method\":\"eth_call\",\"params\":[\r\n  {\r\n    \"to\": \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\r\n    \"data\": \"0x70a08231000000000000000000000000cee284f754e854890e311e3280b767f80797180d\"\r\n  },\r\n  \"latest\",\r\n  {\r\n    \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\": {\r\n      \"stateDiff\": {\r\n        \"0xe662039a65ca5042e7bf9cd555c85673904cb7f77f060e9932ce299a47545319\": \"0x000000000000000000000000000000000000000000000000000000003b9aca00\"\r\n      }\r\n    }\r\n  }\r\n],\"id\":50,\"jsonrpc\":\"2.0\"}'\r\n```\r\n\r\nConversely, if you hit Erigon with the following (identical but with statediff value zero pading removed), you'll get a correct response:\r\n```bash\r\ncurl --location '<erigon rpc url>' \\\r\n--header 'Content-Type: application/json' \\\r\n--data '{\"method\":\"eth_call\",\"params\":[\r\n  {\r\n    \"to\": \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\r\n    \"data\": \"0x70a08231000000000000000000000000cee284f754e854890e311e3280b767f80797180d\"\r\n  },\r\n  \"latest\",\r\n  {\r\n    \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\": {\r\n      \"stateDiff\": {\r\n        \"0xe662039a65ca5042e7bf9cd555c85673904cb7f77f060e9932ce299a47545319\": \"0x3b9aca00\"\r\n      }\r\n    }\r\n  }\r\n],\"id\":50,\"jsonrpc\":\"2.0\"}'\r\n```\r\n\r\nBut if you fire this request at Geth, you get `invalid argument 2: hex string has length 8, want 64 for common.Hash`\r\n\r\nRoot cause of this seems to be `Account.State` and `Account.StateDiff` in [api.go](https://github.com/ledgerwatch/erigon/blob/devel/turbo/adapter/ethapi/api.go#L171) being implemented as map of Hash -> uint64, rather than in geth's implementation [where it's a map of Hash -> Hash](https://github.com/ethereum/go-ethereum/blob/master/internal/ethapi/api.go#L947).\r\n\r\nI'm guessing this could be fixed with either more permissive marshalling/unmarshalling, or changing the underlying type, but I don't want to submit a PR until I've had some guidance from someone more experienced with the codebase.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/8345/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/8345/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
