{
  "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/2803",
  "repository_url": "https://api.github.com/repos/ledgerwatch/erigon",
  "labels_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/2803/labels{/name}",
  "comments_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/2803/comments",
  "events_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/2803/events",
  "html_url": "https://github.com/ledgerwatch/erigon/issues/2803",
  "id": 1021549885,
  "node_id": "I_kwDOC0FsAM484509",
  "number": 2803,
  "title": "Inconsistent results from eth_call right after stage Execution, where blockTag >= eth_blockNumber - 1",
  "user": {
    "login": "metala",
    "id": 120106,
    "node_id": "MDQ6VXNlcjEyMDEwNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/120106?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/metala",
    "html_url": "https://github.com/metala",
    "followers_url": "https://api.github.com/users/metala/followers",
    "following_url": "https://api.github.com/users/metala/following{/other_user}",
    "gists_url": "https://api.github.com/users/metala/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/metala/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/metala/subscriptions",
    "organizations_url": "https://api.github.com/users/metala/orgs",
    "repos_url": "https://api.github.com/users/metala/repos",
    "events_url": "https://api.github.com/users/metala/events{/privacy}",
    "received_events_url": "https://api.github.com/users/metala/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2021-10-09T00:28:04Z",
  "updated_at": "2021-10-12T01:30:43Z",
  "closed_at": "2021-10-12T01:30:42Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "#### System information\r\n\r\nErigon version: `./erigon --version`\r\n```\r\nerigon version 2021.10.2-alpha\r\ngo version go1.17.1 linux/amd64\r\n```\r\n\r\nOS & Version: Windows/Linux/OSX\r\n```\r\nLinux 5.9.0-0.bpo.5-amd64 #1 SMP Debian 5.9.15-1~bpo10+1 (2020-12-31) x86_64 GNU/Linux\r\n```\r\n\r\nCommit hash : 8b4d31f6617a051285e62ef065d4a9de2a439fb2 + I have disabled CallTraces stage\r\n\r\n#### Expected behaviour\r\nWhen you provide block number to `blockTag` in `eth_call`, the data returned should be from the state as if the latest block in the chain is the block number provided. \r\n\r\n#### Actual behaviour\r\nIf the block number is larger or equal to the `eth_blockNumber - 1`, the `eth_call` returns the result from latest executed state, that could be any block after `eth_blockNumber - 1`.\r\n\r\n#### Steps to reproduce the behaviour\r\n**Setup**\r\n1. Starting from a point where Erigon is synced to block X and `eth_blockNumber` returns X as a hex result.\r\n2. Erigon downloads new headers, bodies and executing to block number Y. \r\n3. Right after Execution stage (7) finishes we interrupt Erigon, by hitting CTRL+C or by sending SIGINT.\r\nAt this right moment we have inconsistent results in rpcdaemon when requesting data with `eth_call`.\r\n\r\n**Verify**\r\n1. Pick an event that has changed the state between blocks [X+1, Y]. E.g. ERC20 Transfer event.\r\n2. Make `eth_call`s that read the state (e.g. ERC20.balanceOf) in blocks X and X-1 and confirm with another synced node that the results are as, if the blockTag was Y, instead of X or X - 1.\r\n\r\n#### Simplified example that illustrates the problem\r\n1. Erigon is synced to block **100**\r\n2. eth_call with blockTag **100** returns the state for block **100**\r\n3. Erigon downloads blocks and executes to block **200**\r\n4. Right at this moment, I interrupt Erigon (Ctrl+C)\r\n5. eth_call with blockTag **100** returns the state for block **200**\r\n6. Restart Erigon and fully sync to 200\r\n7. eth_call with blockTag **100** returns the state for block **100**\r\n\r\n#### More detailed testing\r\nI have reproduced the issue twice and here are the details from the latest attempt.\r\nThe Erigon was interrupted at eth_blockNumber `13380862`(**X**) and Execution finished to block `13380916` (**Y**) as you can also see in the table below: \r\n```\r\n$ mdbx_dump -s SyncStage -p /path/to/db.mdbx\r\n...\r\n Bodies\r\n \\00\\00\\00\\00\\00\\cc-4\r\n Execution\r\n \\00\\00\\00\\00\\00\\cc-4\r\n Finish\r\n \\00\\00\\00\\00\\00\\cc,\\fe\r\n```\r\n\r\nI have found multiple Transfer events from address `0xfc6dd0a2d14a4cc5e25202812f46a55beeb3f135` so I have decided to check the ERC20 token balance for  **X-2**, **X-1**, **X** and **latest** and here are the results:\r\n```\r\n** These are results from the Erigon under test **\r\neth_blockNumber: 13380862\r\ncontract = ERC20(0xdac17f958d2ee523a2206206994597c13d831ec7)\r\nBlock[13380860] contract.balanceOf(0xfc6dd0a2d14a4cc5e25202812f46a55beeb3f135) = 177906705792\r\nBlock[13380860] contract.balanceOf(0xceb11d3e54aa987efee56090e12f300b4b71bc24) = 0\r\nBlock[13380861] contract.balanceOf(0xfc6dd0a2d14a4cc5e25202812f46a55beeb3f135) = 592190562\r\nBlock[13380861] contract.balanceOf(0xceb11d3e54aa987efee56090e12f300b4b71bc24) = 1539729465\r\nBlock[13380862] contract.balanceOf(0xfc6dd0a2d14a4cc5e25202812f46a55beeb3f135) = 592190562\r\nBlock[13380862] contract.balanceOf(0xceb11d3e54aa987efee56090e12f300b4b71bc24) = 1539729465\r\nBlock[latest] contract.balanceOf(0xfc6dd0a2d14a4cc5e25202812f46a55beeb3f135) = 592190562\r\nBlock[latest] contract.balanceOf(0xceb11d3e54aa987efee56090e12f300b4b71bc24) = 1539729465\r\n```\r\nNext thing is to use another node to show that there is a discrepancy. For that case I have used ArchiveNode:\r\n```\r\n** These are results from ArchiveNode **\r\neth_blockNumber: 13381046\r\ncontract = ERC20(0xdac17f958d2ee523a2206206994597c13d831ec7)\r\nBlock[13380860] contract.balanceOf(0xfc6dd0a2d14a4cc5e25202812f46a55beeb3f135) = 177906705792\r\nBlock[13380860] contract.balanceOf(0xceb11d3e54aa987efee56090e12f300b4b71bc24) = 0\r\nBlock[13380861] contract.balanceOf(0xfc6dd0a2d14a4cc5e25202812f46a55beeb3f135) = 176366976327\r\nBlock[13380861] contract.balanceOf(0xceb11d3e54aa987efee56090e12f300b4b71bc24) = 1539729465\r\nBlock[13380862] contract.balanceOf(0xfc6dd0a2d14a4cc5e25202812f46a55beeb3f135) = 176366976327\r\nBlock[13380862] contract.balanceOf(0xceb11d3e54aa987efee56090e12f300b4b71bc24) = 1539729465\r\nBlock[latest] contract.balanceOf(0xfc6dd0a2d14a4cc5e25202812f46a55beeb3f135) = 133523562\r\nBlock[latest] contract.balanceOf(0xceb11d3e54aa987efee56090e12f300b4b71bc24) = 1539729465\r\n```\r\nWe can already see that there are discrepancies for block **X-1** and **X** as the data differs from the synced ArchiveNode.\r\nNext step is to restart Erigon and wait to fully sync to 13381071 (**Z**) and then stop it again.\r\n```\r\n$ mdbx_dump -s SyncStage -p /path/to/db.mdbx\r\n...\r\n Bodies\r\n \\00\\00\\00\\00\\00\\cc-\\cf\r\n Execution\r\n \\00\\00\\00\\00\\00\\cc-\\cf\r\n Finish\r\n \\00\\00\\00\\00\\00\\cc-\\cf\r\n```\r\nI have assumed that the wrong results I was getting for **X-1** (13380861) and **X** (13380862) are actually for **Y** (13380916) so I have added it to the list of blockTags and removed **latest** for brevity:\r\n````\r\n** These are results from the Erigon under test **\r\neth_blockNumber: 13381071\r\ncontract = ERC20(0xdac17f958d2ee523a2206206994597c13d831ec7)\r\nBlock[13380860] contract.balanceOf(0xfc6dd0a2d14a4cc5e25202812f46a55beeb3f135) = 177906705792\r\nBlock[13380860] contract.balanceOf(0xceb11d3e54aa987efee56090e12f300b4b71bc24) = 0\r\nBlock[13380861] contract.balanceOf(0xfc6dd0a2d14a4cc5e25202812f46a55beeb3f135) = 176366976327\r\nBlock[13380861] contract.balanceOf(0xceb11d3e54aa987efee56090e12f300b4b71bc24) = 1539729465\r\nBlock[13380862] contract.balanceOf(0xfc6dd0a2d14a4cc5e25202812f46a55beeb3f135) = 176366976327\r\nBlock[13380862] contract.balanceOf(0xceb11d3e54aa987efee56090e12f300b4b71bc24) = 1539729465\r\nBlock[13380916] contract.balanceOf(0xfc6dd0a2d14a4cc5e25202812f46a55beeb3f135) = 592190562\r\nBlock[13380916] contract.balanceOf(0xceb11d3e54aa987efee56090e12f300b4b71bc24) = 1539729465\r\n````\r\nAfter the node is fully synced, there are no issues and the results match those in ArchiveNode. Moreover we can clearly see that Erigon was serving results for state at block 13380916, when the blockTag was set to 13380861 and 13380862.\r\n",
  "closed_by": {
    "login": "AskAlexSharov",
    "id": 46885206,
    "node_id": "MDQ6VXNlcjQ2ODg1MjA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/46885206?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AskAlexSharov",
    "html_url": "https://github.com/AskAlexSharov",
    "followers_url": "https://api.github.com/users/AskAlexSharov/followers",
    "following_url": "https://api.github.com/users/AskAlexSharov/following{/other_user}",
    "gists_url": "https://api.github.com/users/AskAlexSharov/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AskAlexSharov/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AskAlexSharov/subscriptions",
    "organizations_url": "https://api.github.com/users/AskAlexSharov/orgs",
    "repos_url": "https://api.github.com/users/AskAlexSharov/repos",
    "events_url": "https://api.github.com/users/AskAlexSharov/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AskAlexSharov/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/2803/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/2803/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/939281165",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/2803#issuecomment-939281165",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/2803",
    "id": 939281165,
    "node_id": "IC_kwDOC0FsAM43_EsN",
    "user": {
      "login": "metala",
      "id": 120106,
      "node_id": "MDQ6VXNlcjEyMDEwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/120106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metala",
      "html_url": "https://github.com/metala",
      "followers_url": "https://api.github.com/users/metala/followers",
      "following_url": "https://api.github.com/users/metala/following{/other_user}",
      "gists_url": "https://api.github.com/users/metala/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metala/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metala/subscriptions",
      "organizations_url": "https://api.github.com/users/metala/orgs",
      "repos_url": "https://api.github.com/users/metala/repos",
      "events_url": "https://api.github.com/users/metala/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metala/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-09T11:28:15Z",
    "updated_at": "2021-10-09T11:28:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Update:\r\nI have had a long discussion on this issue in the Discord chat of the project and we came to the conclusion that this is happening because in this test I am starting Erigon and during the first cycle every stage is committed. This is because during the first sync cycle Erigon doesn't know if height can jump with more than 8k blocks, thus Erigon ensures that no data is lost during the first sync cycle if interrupted and commits every stage.\r\nIn the general case, i.e. it's not the first cycle, the commit is happening right after all stages has finished at the end of the sync cycle. This ensures atomic update of the state to the latest block after a regular full sync cycle. ",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/939281165/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/940579315",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/2803#issuecomment-940579315",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/2803",
    "id": 940579315,
    "node_id": "IC_kwDOC0FsAM44EBnz",
    "user": {
      "login": "AskAlexSharov",
      "id": 46885206,
      "node_id": "MDQ6VXNlcjQ2ODg1MjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46885206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AskAlexSharov",
      "html_url": "https://github.com/AskAlexSharov",
      "followers_url": "https://api.github.com/users/AskAlexSharov/followers",
      "following_url": "https://api.github.com/users/AskAlexSharov/following{/other_user}",
      "gists_url": "https://api.github.com/users/AskAlexSharov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AskAlexSharov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AskAlexSharov/subscriptions",
      "organizations_url": "https://api.github.com/users/AskAlexSharov/orgs",
      "repos_url": "https://api.github.com/users/AskAlexSharov/repos",
      "events_url": "https://api.github.com/users/AskAlexSharov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AskAlexSharov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-12T01:30:42Z",
    "updated_at": "2021-10-12T01:30:42Z",
    "author_association": "COLLABORATOR",
    "body": "Fixed by https://github.com/ledgerwatch/erigon/pull/2809",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/940579315/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
