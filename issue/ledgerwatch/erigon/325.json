{
  "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/325",
  "repository_url": "https://api.github.com/repos/ledgerwatch/erigon",
  "labels_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/325/labels{/name}",
  "comments_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/325/comments",
  "events_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/325/events",
  "html_url": "https://github.com/ledgerwatch/erigon/issues/325",
  "id": 551335062,
  "node_id": "MDU6SXNzdWU1NTEzMzUwNjI=",
  "number": 325,
  "title": "INTERMEDIATE-HASHES Phase 2",
  "user": {
    "login": "AlexeyAkhunov",
    "id": 13686139,
    "node_id": "MDQ6VXNlcjEzNjg2MTM5",
    "avatar_url": "https://avatars.githubusercontent.com/u/13686139?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AlexeyAkhunov",
    "html_url": "https://github.com/AlexeyAkhunov",
    "followers_url": "https://api.github.com/users/AlexeyAkhunov/followers",
    "following_url": "https://api.github.com/users/AlexeyAkhunov/following{/other_user}",
    "gists_url": "https://api.github.com/users/AlexeyAkhunov/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AlexeyAkhunov/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AlexeyAkhunov/subscriptions",
    "organizations_url": "https://api.github.com/users/AlexeyAkhunov/orgs",
    "repos_url": "https://api.github.com/users/AlexeyAkhunov/repos",
    "events_url": "https://api.github.com/users/AlexeyAkhunov/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AlexeyAkhunov/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "AskAlexSharov",
    "id": 46885206,
    "node_id": "MDQ6VXNlcjQ2ODg1MjA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/46885206?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AskAlexSharov",
    "html_url": "https://github.com/AskAlexSharov",
    "followers_url": "https://api.github.com/users/AskAlexSharov/followers",
    "following_url": "https://api.github.com/users/AskAlexSharov/following{/other_user}",
    "gists_url": "https://api.github.com/users/AskAlexSharov/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AskAlexSharov/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AskAlexSharov/subscriptions",
    "organizations_url": "https://api.github.com/users/AskAlexSharov/orgs",
    "repos_url": "https://api.github.com/users/AskAlexSharov/repos",
    "events_url": "https://api.github.com/users/AskAlexSharov/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AskAlexSharov/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "AskAlexSharov",
      "id": 46885206,
      "node_id": "MDQ6VXNlcjQ2ODg1MjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46885206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AskAlexSharov",
      "html_url": "https://github.com/AskAlexSharov",
      "followers_url": "https://api.github.com/users/AskAlexSharov/followers",
      "following_url": "https://api.github.com/users/AskAlexSharov/following{/other_user}",
      "gists_url": "https://api.github.com/users/AskAlexSharov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AskAlexSharov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AskAlexSharov/subscriptions",
      "organizations_url": "https://api.github.com/users/AskAlexSharov/orgs",
      "repos_url": "https://api.github.com/users/AskAlexSharov/repos",
      "events_url": "https://api.github.com/users/AskAlexSharov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AskAlexSharov/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2020-01-17T10:33:24Z",
  "updated_at": "2020-04-04T15:18:42Z",
  "closed_at": "2020-04-04T15:18:42Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Now that we are populating the extra bucket with the intermediate hashes (and deleting them when they are loaded in memory), next step is to modify the `Resolver` in `trie/resolver.go` to take advantage of this.\r\n\r\nCurrently, `Resolver` utilisies `GenStructStep` to build up the sub-trie to load from disk to memory, and it uses a `ResolveSet` (with its `HashOnly` function) to decide which branch (`fullNode` and `duoNode`) nodes need to stay in the trie, and which one can be represented as hashes (`hashNode`). Resolver supplies only two types of `GenStructStepData` to the `GenStructStep`:\r\n\r\n1. Account leaves: `GenStructStepAccountData`\r\n2. Storage item leaves: `GenStructStepLeafData`\r\n\r\nNow if you compare it with how `Stream` function (in `trie/stream.go`, please use branch `calc-trie-roots` until it is merged, it fixes it). The `Stream` function passes 3 types of data into `GenStructStep`. Apart from account leaves and storage item leaves, it can also pass \"intermediate hashes\" as `GenStructStepHashData`. It uses two separate `groups', but the shared stack.\r\n\r\nThis is the proposed algorithm of how `Resolver` should work with intermediate hashes:\r\n\r\n1. We open cursor `c1` for `AccountsBucket` or `StorageBucket`. Currently it is done via `MultiWalk` function, but we might need to do it as a low-level cursor, to be able to use `SeekTo` for better performance. We make sure it never goes out of the range specified by `ResolveRequest`.\r\n2. We open cursor `c2` for `IntermediateHash` bucket. We make sure it never goes out of the range specified by the `ResolveRequest`.\r\n3. In the loop that follows, in the beginning of each iteration, we compare current keys in the cursors `c1` and `c2` (`k1` and `k2` correspondingly), and see which one precedes another lexicographically, and we process the preceding one (this is similar to the behaviour of merge sort).\r\n4. If the `k1 < k2`, we perform what `Resolver` did previously (call GenStructStep with the leaf data from `k1` and `v1`), then `c1.Next()` and go to the beginning of the iteration.\r\n4. If `k1 > k2`: Look at the current `k2` of the cursor `c2` and check the result of function `ResolveSet.HashOnly(k2)`. We are checking if this intermediate hash can be used as it is, or we need to go deeper into its children. If `HashOnly` returns true, we generate `GenStructStepHashData` for the next `GenStructStep` call, and perform `c2.SeekTo` and `c1.SeekTo` (yes, we move both cursors, to skip uninteresting bits) to the next key with the same prefix length as the current one, and go back to the beginning of the iteration.\r\n5. Here we assume that `ResolveSet.HashOnly(k2)` returned false, or we reached the end of the range specified in the `ResolveRequest`. We perform `c2.Next()` and go to the beginning of the iteration.\r\n",
  "closed_by": {
    "login": "AlexeyAkhunov",
    "id": 13686139,
    "node_id": "MDQ6VXNlcjEzNjg2MTM5",
    "avatar_url": "https://avatars.githubusercontent.com/u/13686139?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AlexeyAkhunov",
    "html_url": "https://github.com/AlexeyAkhunov",
    "followers_url": "https://api.github.com/users/AlexeyAkhunov/followers",
    "following_url": "https://api.github.com/users/AlexeyAkhunov/following{/other_user}",
    "gists_url": "https://api.github.com/users/AlexeyAkhunov/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AlexeyAkhunov/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AlexeyAkhunov/subscriptions",
    "organizations_url": "https://api.github.com/users/AlexeyAkhunov/orgs",
    "repos_url": "https://api.github.com/users/AlexeyAkhunov/repos",
    "events_url": "https://api.github.com/users/AlexeyAkhunov/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AlexeyAkhunov/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/325/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/325/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[

]
