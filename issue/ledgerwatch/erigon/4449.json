{
  "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/4449",
  "repository_url": "https://api.github.com/repos/ledgerwatch/erigon",
  "labels_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/4449/labels{/name}",
  "comments_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/4449/comments",
  "events_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/4449/events",
  "html_url": "https://github.com/ledgerwatch/erigon/issues/4449",
  "id": 1271078417,
  "node_id": "I_kwDOC0FsAM5Lwx4R",
  "number": 4449,
  "title": "Does Erigon sacrifices the data integrity for less disk usage and high state query performance?",
  "user": {
    "login": "cryptocifer",
    "id": 4777457,
    "node_id": "MDQ6VXNlcjQ3Nzc0NTc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4777457?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cryptocifer",
    "html_url": "https://github.com/cryptocifer",
    "followers_url": "https://api.github.com/users/cryptocifer/followers",
    "following_url": "https://api.github.com/users/cryptocifer/following{/other_user}",
    "gists_url": "https://api.github.com/users/cryptocifer/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cryptocifer/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cryptocifer/subscriptions",
    "organizations_url": "https://api.github.com/users/cryptocifer/orgs",
    "repos_url": "https://api.github.com/users/cryptocifer/repos",
    "events_url": "https://api.github.com/users/cryptocifer/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cryptocifer/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-06-14T16:46:16Z",
  "updated_at": "2022-06-30T15:22:18Z",
  "closed_at": "2022-06-30T15:22:18Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hi I'm new to Erigon I'm not sure if the title suits. As my understanding about Erigon, it uses a flatten db schema to store the account state(and history) instead of the merkle patricia tree the Geth uses, actually I and our team are also considering this approach as it can save a lot of disk space the intermediate nodes of the merkle tree occupied, as well as providing a better account state query and initial sync performance.\r\n\r\nSo when I found that Erigon has adopted this approach I felt very happy, but I do have a question that, the merkle patricia tree in geth guarantees a tight data integrity since all account state are link-proof level by level, but in Erigon all of the account state are stored individually thus loosely, I feel this could be an major issue, as the node can theoretically manipulate the records in the flatten db now.\r\n\r\nDo we have some proof mechanism to prevent this from happenning now? I have looked the source code and it seems the `GetProof` rpc call hasn't been implemented yet",
  "closed_by": {
    "login": "mandrigin",
    "id": 466427,
    "node_id": "MDQ6VXNlcjQ2NjQyNw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/466427?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mandrigin",
    "html_url": "https://github.com/mandrigin",
    "followers_url": "https://api.github.com/users/mandrigin/followers",
    "following_url": "https://api.github.com/users/mandrigin/following{/other_user}",
    "gists_url": "https://api.github.com/users/mandrigin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mandrigin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mandrigin/subscriptions",
    "organizations_url": "https://api.github.com/users/mandrigin/orgs",
    "repos_url": "https://api.github.com/users/mandrigin/repos",
    "events_url": "https://api.github.com/users/mandrigin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mandrigin/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/4449/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/4449/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1155991872",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/4449#issuecomment-1155991872",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/4449",
    "id": 1155991872,
    "node_id": "IC_kwDOC0FsAM5E5wlA",
    "user": {
      "login": "AskAlexSharov",
      "id": 46885206,
      "node_id": "MDQ6VXNlcjQ2ODg1MjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46885206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AskAlexSharov",
      "html_url": "https://github.com/AskAlexSharov",
      "followers_url": "https://api.github.com/users/AskAlexSharov/followers",
      "following_url": "https://api.github.com/users/AskAlexSharov/following{/other_user}",
      "gists_url": "https://api.github.com/users/AskAlexSharov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AskAlexSharov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AskAlexSharov/subscriptions",
      "organizations_url": "https://api.github.com/users/AskAlexSharov/orgs",
      "repos_url": "https://api.github.com/users/AskAlexSharov/repos",
      "events_url": "https://api.github.com/users/AskAlexSharov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AskAlexSharov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-15T05:05:51Z",
    "updated_at": "2022-06-15T05:05:51Z",
    "author_association": "COLLABORATOR",
    "body": "Erigon also calculating state root for new blocks: does it not on PlainState (flatten non-crypto-hashed keys), to calc trie root it using HashedSate (copy of PlainState but crypto-hashed) and storing some branch-nodes in TrieAccount table. \r\n\r\nMost space-saving comes from encoding of Historical state changes: by inverted diffs. See: https://github.com/ledgerwatch/erigon-lib/blob/bbf96d05808e5bbcbf78ee67a0b1715887d1309d/kv/tables.go#L69  ",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1155991872/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
