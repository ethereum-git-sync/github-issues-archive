{
  "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/5884",
  "repository_url": "https://api.github.com/repos/ledgerwatch/erigon",
  "labels_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/5884/labels{/name}",
  "comments_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/5884/comments",
  "events_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/5884/events",
  "html_url": "https://github.com/ledgerwatch/erigon/issues/5884",
  "id": 1426395019,
  "node_id": "I_kwDOC0FsAM5VBQ-L",
  "number": 5884,
  "title": "Decoding responses on the sentinel for the Req/Resp Domain",
  "user": {
    "login": "michaelneuder",
    "id": 24661810,
    "node_id": "MDQ6VXNlcjI0NjYxODEw",
    "avatar_url": "https://avatars.githubusercontent.com/u/24661810?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelneuder",
    "html_url": "https://github.com/michaelneuder",
    "followers_url": "https://api.github.com/users/michaelneuder/followers",
    "following_url": "https://api.github.com/users/michaelneuder/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelneuder/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelneuder/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelneuder/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelneuder/orgs",
    "repos_url": "https://api.github.com/users/michaelneuder/repos",
    "events_url": "https://api.github.com/users/michaelneuder/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelneuder/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4566396003,
      "node_id": "LA_kwDOC0FsAM8AAAABEC2sYw",
      "url": "https://api.github.com/repos/ledgerwatch/erigon/labels/Stale",
      "name": "Stale",
      "color": "ededed",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2022-10-28T00:00:19Z",
  "updated_at": "2022-12-26T02:28:04Z",
  "closed_at": "2022-12-26T02:28:04Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "@Giulio2002 and I are trying to understand how to decode packets on the Req/Resp domain. \r\n\r\nCurrently, when a packet is received, the prefix is stripped from the front of the slice: [here](https://github.com/ledgerwatch/erigon/blob/d9ff645fbf64c42f71a4f8f2ee038b00fc0a8a11/cmd/lightclient/sentinel/communication/ssz_snappy/stream.go#L162). \r\n\r\nThe logic for the amount of bytes to remove from the front of the packet is:\r\n```\r\n\tif _, ok := val.(*cltypes.LightClientBootstrap); ok {\r\n\t\treturn make([]byte, 7)\r\n\t}\r\n\tif val.SizeSSZ() <= 16 {\r\n\t\treturn make([]byte, 1)\r\n\t}\r\n\treturn make([]byte, 6)\r\n```\r\n\r\nor in other words, if it is a LightClietBootstrap message -> remove 7 bytes, if the size of the deserialized object is <=16 bytes -> remove one byte, otherwise -> remove 6 bytes. \r\n\r\nAs we are expanding the handlers on the req/resp domain, we would like to better understand how to determine the size of that prefix. \r\n\r\nhttps://github.com/ledgerwatch/erigon/pull/5878 has a minimal working example of this with a test finality update packet: \r\n\r\nwe read the first six bytes:\r\n```\r\n\t// Read first six bytes.\r\n\tr := bytes.NewReader(fullPacket)\r\n\tr.Read(make([]byte, 6))\r\n```\r\n\r\nand then we are able to decompress and decode the SSZ encoded object. If we do not trim the first six bytes, we get the following error `unable to decompress data: snappy: corrupt input`. If we do trim the first 6 bytes, then we get the decoded object:\r\n\r\n```\r\ndecoded object: &{\r\n  AttestedHeader:0xc00015c230 \r\n  FinalizedHeader:0xc00015c2a0 \r\n  FinalityBranch:[[52 99 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [65 101 88 22 4 244 176 47 93 194 65 37 79 221 228 105 165 92 142 193 186 58 67 20 134 241 135 34 122 125 115 57] [172 122 65 185 199 105 189 49 177 241 177 210 33 99 244 214 26 95 84 189 174 224 193 54 236 63 221 184 78 109 127 253] [221 85 168 161 105 38 209 149 105 3 159 122 244 254 178 255 91 77 120 187 125 142 51 120 0 141 50 174 6 219 151 239] [0 85 229 188 59 64 96 194 166 103 55 135 128 213 137 87 28 183 254 10 242 76 181 154 34 69 191 188 199 55 40 100] [95 23 207 224 0 161 38 165 131 206 255 211 250 35 98 251 173 131 104 203 253 249 177 151 226 215 171 138 240 89 169 36]] \r\n  SyncAggregate:0xc00020e080 \r\n  SignatureSlot:5007072\r\n}\r\n```",
  "closed_by": {
    "login": "github-actions[bot]",
    "id": 41898282,
    "node_id": "MDM6Qm90NDE4OTgyODI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
    "html_url": "https://github.com/apps/github-actions",
    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/5884/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/5884/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1294386116",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/5884#issuecomment-1294386116",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/5884",
    "id": 1294386116,
    "node_id": "IC_kwDOC0FsAM5NJsPE",
    "user": {
      "login": "michaelneuder",
      "id": 24661810,
      "node_id": "MDQ6VXNlcjI0NjYxODEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/24661810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelneuder",
      "html_url": "https://github.com/michaelneuder",
      "followers_url": "https://api.github.com/users/michaelneuder/followers",
      "following_url": "https://api.github.com/users/michaelneuder/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelneuder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelneuder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelneuder/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelneuder/orgs",
      "repos_url": "https://api.github.com/users/michaelneuder/repos",
      "events_url": "https://api.github.com/users/michaelneuder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelneuder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-28T03:01:06Z",
    "updated_at": "2022-10-28T03:01:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "got a test MetadataV1 object decoded:\r\n\r\n```\r\nmetadataV1Response = []byte{\r\n\t\t16, 255, 6, 0, 0, 115, 78, 97, 80, 112, 89, 1, 20, 0, 0, 164,\r\n\t\t58, 252, 14, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0,\r\n\t}\r\n```\r\n\r\ndecodes into \r\n\r\n```\r\n&{SeqNumber:11 Attnets:9007199254740992}\r\n```\r\n\r\nthe first byte of the message is `0x10 = 16` and the message length is 16 bytes, so that works with the https://developers.google.com/protocol-buffers/docs/encoding#varints encoding. I wasn't able to get a MetadataV2 object decoded.",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1294386116/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1295053515",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/5884#issuecomment-1295053515",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/5884",
    "id": 1295053515,
    "node_id": "IC_kwDOC0FsAM5NMPLL",
    "user": {
      "login": "michaelneuder",
      "id": 24661810,
      "node_id": "MDQ6VXNlcjI0NjYxODEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/24661810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelneuder",
      "html_url": "https://github.com/michaelneuder",
      "followers_url": "https://api.github.com/users/michaelneuder/followers",
      "following_url": "https://api.github.com/users/michaelneuder/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelneuder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelneuder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelneuder/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelneuder/orgs",
      "repos_url": "https://api.github.com/users/michaelneuder/repos",
      "events_url": "https://api.github.com/users/michaelneuder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelneuder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-28T14:14:00Z",
    "updated_at": "2022-10-28T14:14:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK we needed to do the include the fork digest in the wire format: https://github.com/ethereum/consensus-specs/blob/dev/specs/altair/p2p-interface.md#forkdigest-context. these are a fixed set of four bytes that precede the varint.\r\n\r\nusing `fork.ComputeForkDigest` we get a fork digest of `[74 38 197 139]`. the first six bytes of our finality update object is:\r\n\r\n```\r\nfinalityUpdateResponse = []byte{\r\n\t\t74, 38, 197, 139, 200, 4, ...\r\n```\r\n\r\nwe see that those first four bytes are indeed the digest, so we remove them. then we have to interpret the varint. we get\r\n\r\n```\r\n200           4\r\n11001000      00000100 // binary\r\n 1001000       0000100 // trim MSB\r\n 0000100       1001000 // little endian\r\n\r\n 00001001001000 = 584 base 10 // concat and interpret\r\n```\r\n\r\n584 is the SizeSSZ of `&cltypes.LightClientFinalityUpdate{}`. this all seems correct to me",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1295053515/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1295086870",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/5884#issuecomment-1295086870",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/5884",
    "id": 1295086870,
    "node_id": "IC_kwDOC0FsAM5NMXUW",
    "user": {
      "login": "michaelneuder",
      "id": 24661810,
      "node_id": "MDQ6VXNlcjI0NjYxODEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/24661810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelneuder",
      "html_url": "https://github.com/michaelneuder",
      "followers_url": "https://api.github.com/users/michaelneuder/followers",
      "following_url": "https://api.github.com/users/michaelneuder/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelneuder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelneuder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelneuder/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelneuder/orgs",
      "repos_url": "https://api.github.com/users/michaelneuder/repos",
      "events_url": "https://api.github.com/users/michaelneuder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelneuder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-28T14:42:57Z",
    "updated_at": "2022-10-28T14:42:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "confirming that this works with the other lightclient types: \r\n\r\nfor `&cltypes.LightClientOptimisticUpdate{}`. we have a first six bytes of \r\n\r\n```\r\noptimisticUpdateResponse = []byte{\r\n\t\t74, 38, 197, 139, 152, 2\r\n```\r\n\r\ngoing ahead with the varint calculation:\r\n\r\n\r\n```\r\n152           2\r\n10011000      00000010 // binary\r\n 0011000       0000010 // trim MSB\r\n 0000010       0011000 // little endian\r\n\r\n 00000100011000 = 280 base 10 // concat and interpret\r\n```\r\n280 is the SizeSSZ of `&cltypes.LightClientOptimisticUpdate{}`.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1295086870/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1295115752",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/5884#issuecomment-1295115752",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/5884",
    "id": 1295115752,
    "node_id": "IC_kwDOC0FsAM5NMeXo",
    "user": {
      "login": "Giulio2002",
      "id": 29233688,
      "node_id": "MDQ6VXNlcjI5MjMzNjg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/29233688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Giulio2002",
      "html_url": "https://github.com/Giulio2002",
      "followers_url": "https://api.github.com/users/Giulio2002/followers",
      "following_url": "https://api.github.com/users/Giulio2002/following{/other_user}",
      "gists_url": "https://api.github.com/users/Giulio2002/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Giulio2002/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Giulio2002/subscriptions",
      "organizations_url": "https://api.github.com/users/Giulio2002/orgs",
      "repos_url": "https://api.github.com/users/Giulio2002/repos",
      "events_url": "https://api.github.com/users/Giulio2002/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Giulio2002/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-28T15:08:52Z",
    "updated_at": "2022-10-28T15:08:52Z",
    "author_association": "COLLABORATOR",
    "body": "Good work!",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1295115752/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1295444068",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/5884#issuecomment-1295444068",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/5884",
    "id": 1295444068,
    "node_id": "IC_kwDOC0FsAM5NNuhk",
    "user": {
      "login": "michaelneuder",
      "id": 24661810,
      "node_id": "MDQ6VXNlcjI0NjYxODEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/24661810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelneuder",
      "html_url": "https://github.com/michaelneuder",
      "followers_url": "https://api.github.com/users/michaelneuder/followers",
      "following_url": "https://api.github.com/users/michaelneuder/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelneuder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelneuder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelneuder/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelneuder/orgs",
      "repos_url": "https://api.github.com/users/michaelneuder/repos",
      "events_url": "https://api.github.com/users/michaelneuder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelneuder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-28T20:39:43Z",
    "updated_at": "2022-10-28T20:39:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "The size of the four LightClient types are \r\n\r\n```\r\ntype=*cltypes.LightClientFinalityUpdate, sizeSSZ=584\r\ntype=*cltypes.LightClientOptimisticUpdate, sizeSSZ=280\r\ntype=*cltypes.LightClientBootstrap, sizeSSZ=24896\r\ntype=*cltypes.LightClientUpdate, sizeSSZ=25368\r\n```\r\n\r\nthe code to generate this is:\r\n\r\n```\r\n\tupdateType := &cltypes.LightClientFinalityUpdate{}\r\n\toptimisticType := &cltypes.LightClientOptimisticUpdate{}\r\n\tbootstrapType := &cltypes.LightClientBootstrap{}\r\n\tlightclientType := &cltypes.LightClientUpdate{}\r\n\tfmt.Printf(\"type=%T, sizeSSZ=%d\\n\", updateType, updateType.SizeSSZ())\r\n\tfmt.Printf(\"type=%T, sizeSSZ=%d\\n\", optimisticType, optimisticType.SizeSSZ())\r\n\tfmt.Printf(\"type=%T, sizeSSZ=%d\\n\", bootstrapType, bootstrapType.SizeSSZ())\r\n\tfmt.Printf(\"type=%T, sizeSSZ=%d\\n\", lightclientType, lightclientType.SizeSSZ())\r\n```\r\n\r\nthis is just for reference. ",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1295444068/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1297990686",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/5884#issuecomment-1297990686",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/5884",
    "id": 1297990686,
    "node_id": "IC_kwDOC0FsAM5NXcQe",
    "user": {
      "login": "michaelneuder",
      "id": 24661810,
      "node_id": "MDQ6VXNlcjI0NjYxODEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/24661810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelneuder",
      "html_url": "https://github.com/michaelneuder",
      "followers_url": "https://api.github.com/users/michaelneuder/followers",
      "following_url": "https://api.github.com/users/michaelneuder/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelneuder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelneuder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelneuder/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelneuder/orgs",
      "repos_url": "https://api.github.com/users/michaelneuder/repos",
      "events_url": "https://api.github.com/users/michaelneuder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelneuder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-01T03:56:53Z",
    "updated_at": "2022-11-01T03:56:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "having a bit of trouble understanding the `BeaconBlocksByRange` response i am getting: \r\n\r\nthe request i am sending is\r\n\r\n```\r\n         blocksByRangeReq := &cltypes.BeaconBlocksByRangeRequest{\r\n\t\tStartSlot: 5000000, // arbitrary slot (currently at ~5030000)\r\n\t\tCount:     2,       // just need two blocks to verify correctness.\r\n\t\tStep:      1,       // deprecated, must be set to 1.\r\n\t}\r\n```\r\nthis is just asking for 2 blocks starting at the 5 millionth slot. seems simple enough. we get a non error response, which i saved to `erigon/cmd/sentinel/sentinel/communication/ssz_snappy/beacon_blocks_by_range.txt`. \r\n\r\nin the `stream_test.go` file i am just trying to decode this response using the `TestDecodeLizSSZ`, but am not successful so far. the first four bytes are `0x4a26c58b`, which is the fork digest, so that is all good. the next three bytes are the varint:\r\n\r\n```\r\n94            d6            05\r\n10010100      11010110      00000101    // binary\r\n 0010100       1010110       0000101    // trim MSB\r\n 0000101       1010110       0010100    // little endian\r\n\r\n 000010110101100010100 = 92948 base 10 // concat and interpret\r\n```\r\n\r\nthis is a super big response for only supposed to have 2 blocks. i added some logging to `stream.go` to try to understand the decoding, and i confirmed that the varint matches what we expect:\r\n\r\n```\r\n*** encoded=92948, bytes count=3, obj size=1076\r\n```\r\n\r\nthe bytes count indicates that 3 bytes were used in the varint, which also makes sense, but the size of the `&cltypes.SignedBeaconBlockBellatrix{}` is only 1076 bytes, which makes me think the response we are getting is way too big....\r\n\r\nlooking at the spec: https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/p2p-interface.md#beaconblocksbyrange\r\n\r\n```\r\nRequest Content:\r\n\r\n(\r\n  start_slot: Slot\r\n  count: uint64\r\n  step: uint64 # Deprecated, must be set to 1\r\n)\r\nResponse Content:\r\n\r\n(\r\n  List[SignedBeaconBlock, MAX_REQUEST_BLOCKS]\r\n)\r\n\r\n```\r\n\r\nit seems like we have the right request:\r\n\r\n```\r\n/*\r\n * BeaconBlocksByRangeRequest is the request for getting a range of blocks.\r\n */\r\ntype BeaconBlocksByRangeRequest struct {\r\n\tStartSlot uint64\r\n\tCount     uint64\r\n\tStep      uint64 // Deprecated, must be set to 1\r\n}\r\n```\r\n\r\npretty bizarre.",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1297990686/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1297993475",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/5884#issuecomment-1297993475",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/5884",
    "id": 1297993475,
    "node_id": "IC_kwDOC0FsAM5NXc8D",
    "user": {
      "login": "michaelneuder",
      "id": 24661810,
      "node_id": "MDQ6VXNlcjI0NjYxODEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/24661810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelneuder",
      "html_url": "https://github.com/michaelneuder",
      "followers_url": "https://api.github.com/users/michaelneuder/followers",
      "following_url": "https://api.github.com/users/michaelneuder/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelneuder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelneuder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelneuder/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelneuder/orgs",
      "repos_url": "https://api.github.com/users/michaelneuder/repos",
      "events_url": "https://api.github.com/users/michaelneuder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelneuder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-01T04:01:52Z",
    "updated_at": "2022-11-01T04:01:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/ledgerwatch/erigon/pull/5917 has the latest test in `erigon/cmd/sentinel/sentinel/communication/ssz_snappy/stream_test.go` and the request can be sent with `go run erigon/cmd/sentinel/main.go`.",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1297993475/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1298431885",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/5884#issuecomment-1298431885",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/5884",
    "id": 1298431885,
    "node_id": "IC_kwDOC0FsAM5NZH-N",
    "user": {
      "login": "michaelneuder",
      "id": 24661810,
      "node_id": "MDQ6VXNlcjI0NjYxODEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/24661810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelneuder",
      "html_url": "https://github.com/michaelneuder",
      "followers_url": "https://api.github.com/users/michaelneuder/followers",
      "following_url": "https://api.github.com/users/michaelneuder/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelneuder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelneuder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelneuder/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelneuder/orgs",
      "repos_url": "https://api.github.com/users/michaelneuder/repos",
      "events_url": "https://api.github.com/users/michaelneuder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelneuder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-01T12:20:08Z",
    "updated_at": "2022-11-01T12:20:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "i should mention that the error i am seeing now is:\r\n```\r\n    --- FAIL: TestDecodeLizSSZ/beaconBlocksByRangeResponse (0.00s)\r\n        stream_test.go:171:\r\n            \tError Trace:\t/Users/michaelneuder/github/erigon/cmd/sentinel/sentinel/communication/ssz_snappy/stream_test.go:171\r\n            \tError:      \tReceived unexpected error:\r\n            \t            \tunmarshalling: incorrect offset\r\n```\r\n\r\nwe hit this error during this logic\r\n\r\n```\r\n        sr := snappy.NewReader(r)\r\n\tfor i := 0; i < int(count); i++ {\r\n\t\tvar n int\r\n\t\traw := make([]byte, objSize)\r\n\t\tif n, err = sr.Read(raw); err != nil {\r\n\t\t\treturn fmt.Errorf(\"readPacket: %w\", err)\r\n\t\t}\r\n\t\tpos += uint64(n)\r\n\t\tfmt.Printf(\"*** read n bytes=%d, pos=%d\\n\", n, pos)\r\n\r\n\t\tif err := list[i].UnmarshalSSZ(raw); err != nil {\r\n\t\t\treturn fmt.Errorf(\"unmarshalling: %w\", err)\r\n\t\t}\r\n```\r\n\r\nwe read 1076 bytes into a buffer and then try to unmarshall into a `&cltypes.SignedBeaconBlockBellatrix{}` object and the error is thrown in `UnmarshalSSZ`. for debug purposes i printed the `pos` which is `pos=1083 = 4 + 3+ 1076= prefix + varint length + &cltypes.SignedBeaconBlockBellatrix{}.SizeSSZ()`. ",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1298431885/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1299461598",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/5884#issuecomment-1299461598",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/5884",
    "id": 1299461598,
    "node_id": "IC_kwDOC0FsAM5NdDXe",
    "user": {
      "login": "michaelneuder",
      "id": 24661810,
      "node_id": "MDQ6VXNlcjI0NjYxODEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/24661810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelneuder",
      "html_url": "https://github.com/michaelneuder",
      "followers_url": "https://api.github.com/users/michaelneuder/followers",
      "following_url": "https://api.github.com/users/michaelneuder/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelneuder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelneuder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelneuder/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelneuder/orgs",
      "repos_url": "https://api.github.com/users/michaelneuder/repos",
      "events_url": "https://api.github.com/users/michaelneuder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelneuder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-02T02:08:39Z",
    "updated_at": "2022-11-02T02:08:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "some progress: i was able to extract one block from the message using `DecodeListSSZBeaconBlock` in https://github.com/ledgerwatch/erigon/pull/5917.\r\n\r\n```\r\n        // See https://beaconcha.in/slot/5000000 for target data.\r\n\t// Confirm block contents are correct\r\n\tslot := outBlock.Block.Slot\r\n\twantSlot := 5000000\r\n\tbn := outBlock.Block.Body.ExecutionPayload.BlockNumber\r\n\twantBn := uint64(15835292)\r\n\tpi := outBlock.Block.ProposerIndex\r\n\twantPi := 101643\r\n\r\n^^^ this all worked for slot 5000000 block\r\n```\r\n\r\ni can't get the second block out though. here is some things to note.\r\n\r\n```\r\n1. the size of the raw file is 61539 bytes.\r\n\r\n2. when you read the fork digest + the varint, 7 bytes are removed: \r\nthis shows up in the length and size of the reader: len(r)=61532, size(r)=61539\r\n\r\n3. the varint encodes a size=92948, which is bigger than the message, which makes sense because the message is compressed and the varint represents the uncompressed message size. \r\n\r\n4. after the sr.Read, we find that \r\nn bytes read=65536, len(r)=30775, size(r)=61539\r\na few things to note: \r\nA) 65536 = 2^16, this makes me think that a hard stop on the number of bytes read in a single `.Read` might be being imposed\r\nB) len(r) = 30775 => 61532-30775 = 30757 bytes of the compressed string were read.\r\nC) 30757 != 65536, which means that the num bytes returned by `sr.Read(raw)` corresponds to the number of uncompressed bytes that are read. \r\nD) looking at the raw buffer we allocate for sr to write into, exactly 65536 are written to the slice. \r\ni confirmed this by setting all the values of the raw array to 0xFE and confirming that starting at index n, they take that value  raw[n-1:n+3]=[0 254 254 254]\r\n```\r\n\r\nbased on this, my theory is that we need to read all of the contents from the snappy reader into the buffer first. and then do the deserialization into the proto objects.",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1299461598/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1299483150",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/5884#issuecomment-1299483150",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/5884",
    "id": 1299483150,
    "node_id": "IC_kwDOC0FsAM5NdIoO",
    "user": {
      "login": "michaelneuder",
      "id": 24661810,
      "node_id": "MDQ6VXNlcjI0NjYxODEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/24661810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelneuder",
      "html_url": "https://github.com/michaelneuder",
      "followers_url": "https://api.github.com/users/michaelneuder/followers",
      "following_url": "https://api.github.com/users/michaelneuder/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelneuder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelneuder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelneuder/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelneuder/orgs",
      "repos_url": "https://api.github.com/users/michaelneuder/repos",
      "events_url": "https://api.github.com/users/michaelneuder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelneuder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-02T02:36:45Z",
    "updated_at": "2022-11-02T02:36:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok i figured it out:\r\n\r\nconfirmed this data with https://beaconcha.in/slot/5000000 and https://beaconcha.in/slot/5000001 \r\n\r\n```\r\n*** fork digest=[74 38 197 139]\r\n*** encoded=92948, numBytes=3\r\n*** len(r)=61532, size(r)=61539\r\n*** n bytes read=65536, len(r)=30775, size(r)=61539\r\n*** n2 bytes read=27412, len(r)=19753, size(r)=61539\r\n***\r\n\r\n block 1: slot=5000000, block number=15835292, proposer ind=101643\r\n\r\n*** fork digest2=[74 38 197 139]\r\n*** encoded2=38278, numBytes2=3\r\n*** n3 bytes read=38278, len(r)=0, size(r)=61539\r\n***\r\n\r\n block 2: slot=5000001, block number=15835293, proposer ind=5639\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1299483150/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1356998482",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/5884#issuecomment-1356998482",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/5884",
    "id": 1356998482,
    "node_id": "IC_kwDOC0FsAM5Q4idS",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-12-19T02:23:32Z",
    "updated_at": "2022-12-19T02:23:32Z",
    "author_association": "NONE",
    "body": "This issue is stale because it has been open for 40 days with no activity. Remove stale label or comment, or this will be closed in 7 days.",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1356998482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1364822734",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/5884#issuecomment-1364822734",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/5884",
    "id": 1364822734,
    "node_id": "IC_kwDOC0FsAM5RWYrO",
    "user": {
      "login": "github-actions[bot]",
      "id": 41898282,
      "node_id": "MDM6Qm90NDE4OTgyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-actions%5Bbot%5D",
      "html_url": "https://github.com/apps/github-actions",
      "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-12-26T02:28:03Z",
    "updated_at": "2022-12-26T02:28:03Z",
    "author_association": "NONE",
    "body": "This issue was closed because it has been stalled for 7 days with no activity.",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1364822734/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
