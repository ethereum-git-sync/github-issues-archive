{
  "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3947",
  "repository_url": "https://api.github.com/repos/ledgerwatch/erigon",
  "labels_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3947/labels{/name}",
  "comments_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3947/comments",
  "events_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3947/events",
  "html_url": "https://github.com/ledgerwatch/erigon/issues/3947",
  "id": 1213259753,
  "node_id": "I_kwDOC0FsAM5IUN_p",
  "number": 3947,
  "title": "Help: What is wrong with this syntax?",
  "user": {
    "login": "breezytm",
    "id": 3412923,
    "node_id": "MDQ6VXNlcjM0MTI5MjM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3412923?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/breezytm",
    "html_url": "https://github.com/breezytm",
    "followers_url": "https://api.github.com/users/breezytm/followers",
    "following_url": "https://api.github.com/users/breezytm/following{/other_user}",
    "gists_url": "https://api.github.com/users/breezytm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/breezytm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/breezytm/subscriptions",
    "organizations_url": "https://api.github.com/users/breezytm/orgs",
    "repos_url": "https://api.github.com/users/breezytm/repos",
    "events_url": "https://api.github.com/users/breezytm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/breezytm/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 16,
  "created_at": "2022-04-23T09:56:52Z",
  "updated_at": "2022-04-25T00:37:11Z",
  "closed_at": "2022-04-25T00:37:11Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Can someone please take a look at this and let me know what's wrong with this syntax because erigon is very unhappy with it and i can not for the life of me figure out what I am doing wrong. Thanks in advance \r\n\r\n```\r\ndocker run -d --name erigon -p 8545:8545 -p 30303:30303/tcp -p 30303:30303/udp -v /mnt/md0/eth-mainnet/erigon:/home/erigon/.local/share/erigon thorax/erigon:latest /bin/sh -c '/usr/local/bin/erigon --datadir=/home/erigon/.local/share/erigon --chain=mainnet --port=30303 --http.port=8545 --http.vhosts=* --http.corsdomain=* --private.api.addr=\"0.0.0.0:9090\" --http --ws --http.api=eth,debug,net,trace,web3,erigon'\r\n```\r\n\r\nError message `Incorrect Usage. flag provided but not defined: -http.port`\r\n",
  "closed_by": {
    "login": "AskAlexSharov",
    "id": 46885206,
    "node_id": "MDQ6VXNlcjQ2ODg1MjA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/46885206?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AskAlexSharov",
    "html_url": "https://github.com/AskAlexSharov",
    "followers_url": "https://api.github.com/users/AskAlexSharov/followers",
    "following_url": "https://api.github.com/users/AskAlexSharov/following{/other_user}",
    "gists_url": "https://api.github.com/users/AskAlexSharov/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AskAlexSharov/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AskAlexSharov/subscriptions",
    "organizations_url": "https://api.github.com/users/AskAlexSharov/orgs",
    "repos_url": "https://api.github.com/users/AskAlexSharov/repos",
    "events_url": "https://api.github.com/users/AskAlexSharov/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AskAlexSharov/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3947/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3947/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107445151",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/3947#issuecomment-1107445151",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3947",
    "id": 1107445151,
    "node_id": "IC_kwDOC0FsAM5CAkWf",
    "user": {
      "login": "AskAlexSharov",
      "id": 46885206,
      "node_id": "MDQ6VXNlcjQ2ODg1MjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46885206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AskAlexSharov",
      "html_url": "https://github.com/AskAlexSharov",
      "followers_url": "https://api.github.com/users/AskAlexSharov/followers",
      "following_url": "https://api.github.com/users/AskAlexSharov/following{/other_user}",
      "gists_url": "https://api.github.com/users/AskAlexSharov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AskAlexSharov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AskAlexSharov/subscriptions",
      "organizations_url": "https://api.github.com/users/AskAlexSharov/orgs",
      "repos_url": "https://api.github.com/users/AskAlexSharov/repos",
      "events_url": "https://api.github.com/users/AskAlexSharov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AskAlexSharov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T10:00:31Z",
    "updated_at": "2022-04-23T10:00:31Z",
    "author_association": "COLLABORATOR",
    "body": "2 dashes",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107445151/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107445427",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/3947#issuecomment-1107445427",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3947",
    "id": 1107445427,
    "node_id": "IC_kwDOC0FsAM5CAkaz",
    "user": {
      "login": "breezytm",
      "id": 3412923,
      "node_id": "MDQ6VXNlcjM0MTI5MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3412923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/breezytm",
      "html_url": "https://github.com/breezytm",
      "followers_url": "https://api.github.com/users/breezytm/followers",
      "following_url": "https://api.github.com/users/breezytm/following{/other_user}",
      "gists_url": "https://api.github.com/users/breezytm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/breezytm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/breezytm/subscriptions",
      "organizations_url": "https://api.github.com/users/breezytm/orgs",
      "repos_url": "https://api.github.com/users/breezytm/repos",
      "events_url": "https://api.github.com/users/breezytm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/breezytm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T10:02:22Z",
    "updated_at": "2022-04-23T10:02:22Z",
    "author_association": "NONE",
    "body": "what do you mean? only use one dash?",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107445427/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107445695",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/3947#issuecomment-1107445695",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3947",
    "id": 1107445695,
    "node_id": "IC_kwDOC0FsAM5CAke_",
    "user": {
      "login": "AskAlexSharov",
      "id": 46885206,
      "node_id": "MDQ6VXNlcjQ2ODg1MjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46885206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AskAlexSharov",
      "html_url": "https://github.com/AskAlexSharov",
      "followers_url": "https://api.github.com/users/AskAlexSharov/followers",
      "following_url": "https://api.github.com/users/AskAlexSharov/following{/other_user}",
      "gists_url": "https://api.github.com/users/AskAlexSharov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AskAlexSharov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AskAlexSharov/subscriptions",
      "organizations_url": "https://api.github.com/users/AskAlexSharov/orgs",
      "repos_url": "https://api.github.com/users/AskAlexSharov/repos",
      "events_url": "https://api.github.com/users/AskAlexSharov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AskAlexSharov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T10:04:27Z",
    "updated_at": "2022-04-23T10:04:27Z",
    "author_association": "COLLABORATOR",
    "body": "Error says - you used only 1 dash: Incorrect Usage. flag provided but not defined: -http.port",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107445695/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107445823",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/3947#issuecomment-1107445823",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3947",
    "id": 1107445823,
    "node_id": "IC_kwDOC0FsAM5CAkg_",
    "user": {
      "login": "AskAlexSharov",
      "id": 46885206,
      "node_id": "MDQ6VXNlcjQ2ODg1MjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46885206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AskAlexSharov",
      "html_url": "https://github.com/AskAlexSharov",
      "followers_url": "https://api.github.com/users/AskAlexSharov/followers",
      "following_url": "https://api.github.com/users/AskAlexSharov/following{/other_user}",
      "gists_url": "https://api.github.com/users/AskAlexSharov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AskAlexSharov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AskAlexSharov/subscriptions",
      "organizations_url": "https://api.github.com/users/AskAlexSharov/orgs",
      "repos_url": "https://api.github.com/users/AskAlexSharov/repos",
      "events_url": "https://api.github.com/users/AskAlexSharov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AskAlexSharov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T10:05:30Z",
    "updated_at": "2022-04-23T10:05:30Z",
    "author_association": "COLLABORATOR",
    "body": "Also i see you closed quote after: --chain=mainnet'",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107445823/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107446093",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/3947#issuecomment-1107446093",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3947",
    "id": 1107446093,
    "node_id": "IC_kwDOC0FsAM5CAklN",
    "user": {
      "login": "breezytm",
      "id": 3412923,
      "node_id": "MDQ6VXNlcjM0MTI5MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3412923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/breezytm",
      "html_url": "https://github.com/breezytm",
      "followers_url": "https://api.github.com/users/breezytm/followers",
      "following_url": "https://api.github.com/users/breezytm/following{/other_user}",
      "gists_url": "https://api.github.com/users/breezytm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/breezytm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/breezytm/subscriptions",
      "organizations_url": "https://api.github.com/users/breezytm/orgs",
      "repos_url": "https://api.github.com/users/breezytm/repos",
      "events_url": "https://api.github.com/users/breezytm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/breezytm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T10:07:36Z",
    "updated_at": "2022-04-23T10:08:13Z",
    "author_association": "NONE",
    "body": "i am not passing ``-http.port``, i am using ``--http.port``\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107446093/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107446176",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/3947#issuecomment-1107446176",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3947",
    "id": 1107446176,
    "node_id": "IC_kwDOC0FsAM5CAkmg",
    "user": {
      "login": "AskAlexSharov",
      "id": 46885206,
      "node_id": "MDQ6VXNlcjQ2ODg1MjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46885206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AskAlexSharov",
      "html_url": "https://github.com/AskAlexSharov",
      "followers_url": "https://api.github.com/users/AskAlexSharov/followers",
      "following_url": "https://api.github.com/users/AskAlexSharov/following{/other_user}",
      "gists_url": "https://api.github.com/users/AskAlexSharov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AskAlexSharov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AskAlexSharov/subscriptions",
      "organizations_url": "https://api.github.com/users/AskAlexSharov/orgs",
      "repos_url": "https://api.github.com/users/AskAlexSharov/repos",
      "events_url": "https://api.github.com/users/AskAlexSharov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AskAlexSharov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T10:08:02Z",
    "updated_at": "2022-04-23T10:08:02Z",
    "author_association": "COLLABORATOR",
    "body": "looks like you closed quote and docker think that —http.port is flag for docker",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107446176/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107446447",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/3947#issuecomment-1107446447",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3947",
    "id": 1107446447,
    "node_id": "IC_kwDOC0FsAM5CAkqv",
    "user": {
      "login": "breezytm",
      "id": 3412923,
      "node_id": "MDQ6VXNlcjM0MTI5MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3412923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/breezytm",
      "html_url": "https://github.com/breezytm",
      "followers_url": "https://api.github.com/users/breezytm/followers",
      "following_url": "https://api.github.com/users/breezytm/following{/other_user}",
      "gists_url": "https://api.github.com/users/breezytm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/breezytm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/breezytm/subscriptions",
      "organizations_url": "https://api.github.com/users/breezytm/orgs",
      "repos_url": "https://api.github.com/users/breezytm/repos",
      "events_url": "https://api.github.com/users/breezytm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/breezytm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T10:10:03Z",
    "updated_at": "2022-04-23T10:10:26Z",
    "author_association": "NONE",
    "body": "> looks like you closed quote and docker think that —http.port is flag for docker\r\n\r\nI accidentally pasted the quote in there. currently to get the chain started i am using ``docker run -d --name erigon -p 8545:8545 -p 30303:30303/tcp -p 30303:30303/udp -v /mnt/md0/eth-mainnet/erigon:/home/erigon/.local/share/erigon thorax/erigon:latest /bin/sh -c '/usr/local/bin/erigon --datadir=/home/erigon/.local/share/erigon --chain=mainnet'``",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107446447/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107446975",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/3947#issuecomment-1107446975",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3947",
    "id": 1107446975,
    "node_id": "IC_kwDOC0FsAM5CAky_",
    "user": {
      "login": "breezytm",
      "id": 3412923,
      "node_id": "MDQ6VXNlcjM0MTI5MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3412923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/breezytm",
      "html_url": "https://github.com/breezytm",
      "followers_url": "https://api.github.com/users/breezytm/followers",
      "following_url": "https://api.github.com/users/breezytm/following{/other_user}",
      "gists_url": "https://api.github.com/users/breezytm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/breezytm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/breezytm/subscriptions",
      "organizations_url": "https://api.github.com/users/breezytm/orgs",
      "repos_url": "https://api.github.com/users/breezytm/repos",
      "events_url": "https://api.github.com/users/breezytm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/breezytm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T10:14:17Z",
    "updated_at": "2022-04-23T10:14:17Z",
    "author_association": "NONE",
    "body": "also i compiled erigon in my computer and i see a sets of args. when i connect to the docker container i see a lot of the args are missing in the version packed in the docker image. I don't know if that is the root cause. take a look. \r\n\r\nmy computer \r\n\r\n```\r\nVERSION:\r\n   2022.04.3-alpha-961f4f58\r\n\r\nCOMMANDS:\r\n   init                               Bootstrap and initialize a new genesis block\r\n   import                             Import a blockchain file\r\n   snapshots                          \r\n   help                               Shows a list of commands or help for one command\r\n   \r\nGLOBAL OPTIONS:\r\n   --datadir value                    Data directory for the databases (default: \"/home/da/.local/share/erigon\") [<invalid Value>]\r\n   --ethash.dagdir value              Directory to store the ethash mining DAGs (default: \"/home/da/.local/share/erigon-ethash\") [<invalid Value>]\r\n   --syncmode value                   Default: \"snap\" for BSC, Mainnet and Goerli. \"fast\" in all other cases\r\n   --txpool.disable                   experimental external pool and block producer, see ./cmd/txpool/readme.md for more info. Disabling internal txpool and block producer.\r\n   --txpool.locals value              Comma separated accounts to treat as locals (no flush, priority inclusion)\r\n   --txpool.nolocals                  Disables price exemptions for locally submitted transactions\r\n   --txpool.journal value             Disk journal for local transaction to survive node restarts (default: \"transactions.rlp\")\r\n   --txpool.rejournal value           Time interval to regenerate the local transaction journal (default: 1h0m0s)\r\n   --txpool.pricelimit value          Minimum gas price (fee cap) limit to enforce for acceptance into the pool (default: 1)\r\n   --txpool.pricebump value           Price bump percentage to replace an already existing transaction (default: 10)\r\n   --txpool.accountslots value        Minimum number of executable transaction slots guaranteed per account (default: 16)\r\n   --txpool.globalslots value         Maximum number of executable transaction slots for all accounts (default: 10000)\r\n   --txpool.globalbasefeeslots value  Maximum number of non-executable transactions where only not enough baseFee (default: 30000)\r\n   --txpool.accountqueue value        Maximum number of non-executable transaction slots permitted per account (default: 64)\r\n   --txpool.globalqueue value         Maximum number of non-executable transaction slots for all accounts (default: 30000)\r\n   --txpool.lifetime value            Maximum amount of time non-executable transaction are queued (default: 3h0m0s)\r\n   --txpool.trace.senders value       Comma separared list of addresses, whoes transactions will traced in transaction pool with debug printing\r\n   --prune value                      Choose which ancient data delete from DB:\r\n                                      h - prune history (ChangeSets, HistoryIndices - used by historical state access, like eth_getStorageAt, eth_getBalanceAt, debug_traceTransaction, trace_block, trace_transaction, etc.)\r\n                                      r - prune receipts (Receipts, Logs, LogTopicIndex, LogAddressIndex - used by eth_getLogs and similar RPC methods)\r\n                                      t - prune transaction by it's hash index\r\n                                      c - prune call traces (used by trace_filter method)\r\n                                      Does delete data older than 90K block (can set another value by '--prune.*.older' flags). \r\n                                      If item is NOT in the list - means NO pruning for this data.s\r\n                                      Example: --prune=hrtc (default: \"disabled\")\r\n   --prune.h.older value              Prune data after this amount of blocks (if --prune flag has 'h', then default is 90K) (default: 0)\r\n   --prune.r.older value              Prune data after this amount of blocks (if --prune flag has 'r', then default is 90K) (default: 0)\r\n   --prune.t.older value              Prune data after this amount of blocks (if --prune flag has 't', then default is 90K) (default: 0)\r\n   --prune.c.older value              Prune data after this amount of blocks (if --prune flag has 'c', then default is 90K) (default: 0)\r\n   --prune.h.before value             Prune data before this block (default: 0)\r\n   --prune.r.before value             Prune data before this block (default: 0)\r\n   --prune.t.before value             Prune data before this block (default: 0)\r\n   --prune.c.before value             Prune data before this block (default: 0)\r\n   --batchSize value                  Batch size for the execution stage (default: \"256M\")\r\n   --blockDownloaderWindow value      Outstanding limit of block bodies being downloaded (default: 32768)\r\n   --database.verbosity value         Enabling internal db logs. Very high verbosity levels may require recompile db. Default: 2, means warning. (default: 2)\r\n   --private.api.addr value           private api network address, for example: 127.0.0.1:9090, empty string means not to start the listener. do not expose to public network. serves remote database interface (default: \"127.0.0.1:9090\")\r\n   --private.api.ratelimit value      Amount of requests server handle simultaneously - requests over this limit will wait. Increase it - if clients see 'request timeout' while server load is low - it means your 'hot data' is small or have much RAM.  (default: 31872)\r\n   --etl.bufferSize value             Buffer size for ETL operations. (default: \"256MB\")\r\n   --tls                              Enable TLS handshake\r\n   --tls.cert value                   Specify certificate\r\n   --tls.key value                    Specify key file\r\n   --tls.cacert value                 Specify certificate authority\r\n   --state.stream.disable             Disable streaming of state changes from core to RPC daemon\r\n   --sync.loop.throttle value         Sets the minimum time between sync loop starts (e.g. 1h30m, default is none)\r\n   --bad.block value                  Marks block with given hex string as bad and forces initial reorg before normal staged sync\r\n   --http                             Enabled by default. Use --http=false to disable the HTTP-RPC server\r\n   --http.addr value                  HTTP-RPC server listening interface (default: \"localhost\")\r\n   --http.port value                  HTTP-RPC server listening port (default: 8545)\r\n   --engine.addr value                HTTP-RPC server listening interface for engineAPI (default: \"localhost\")\r\n   --engine.port value                HTTP-RPC server listening port for the engineAPI (default: 8550)\r\n   --authrpc.jwtsecret value          Path to the token that ensures safe connection between CL and EL\r\n   --http.compression                 Enable compression over HTTP-RPC\r\n   --http.corsdomain value            Comma separated list of domains from which to accept cross origin requests (browser enforced)\r\n   --http.vhosts value                Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts '*' wildcard. (default: \"localhost\")\r\n   --http.api value                   API's offered over the HTTP-RPC interface (default: \"eth,erigon\")\r\n   --ws                               Enable the WS-RPC server\r\n   --ws.compression                   Enable compression over WebSocket\r\n   --state.cache value                Amount of keys to store in StateCache (enabled if no --datadir set). Set 0 to disable StateCache. 1_000_000 keys ~ equal to 2Gb RAM (maybe we will add RAM accounting in future versions). (default: 1000000)\r\n   --rpc.batch.concurrency value      Does limit amount of goroutines to process 1 batch request. Means 1 bach request can't overload server. 1 batch still can have unlimited amount of request (default: 2)\r\n   --db.read.concurrency value        Does limit amount of parallel db reads. Default: equal to GOMAXPROCS (or number of CPU) (default: 32)\r\n   --rpc.accessList value             Specify granular (method-by-method) API allowlist\r\n   --trace.compat                     Bug for bug compatibility with OE for trace_ routines\r\n   --rpc.gascap value                 Sets a cap on gas that can be used in eth_call/estimateGas (default: 50000000)\r\n   --starknet.grpc.address value      Starknet GRPC address (default: \"127.0.0.1:6066\")\r\n   --experimental.tevm                Enables Transpiled EVM experiment\r\n   --txpool.api.addr value            txpool api network address, for example: 127.0.0.1:9090 (default: use value of --private.api.addr)\r\n   --trace.maxtraces value            Sets a limit on traces that can be returned in trace_filter (default: 200)\r\n   --snap.keepblocks                  Keep ancient blocks in db (useful for debug)\r\n   --db.pagesize value                set mdbx pagesize on db creation: must be power of 2 and '256b <= pagesize <= 64kb'  (default: \"4kb\")\r\n   --torrent.port value               port to listen and serve BitTorrent protocol (default: 42069)\r\n   --torrent.maxpeers value           limit amount of torrent peers (default: 100)\r\n   --torrent.conns.perfile value      connections per file (default: 20)\r\n   --torrent.upload.rate value        bytes per second, example: 32mb (default: \"4mb\")\r\n   --torrent.download.rate value      bytes per second, example: 32mb (default: \"8mb\")\r\n   --torrent.verbosity value          DEBUG | INFO | WARN | ERROR (must set --verbosity to equal or higher level) (default: \"WRN\")\r\n   --port value                       Network listening port (default: 30303)\r\n   --nat value                        NAT port mapping mechanism (any|none|upnp|pmp|extip:<IP>)\r\n                                           \"\" or \"none\"         default - do not nat\r\n                                           \"extip:77.12.33.4\"   will assume the local machine is reachable on the given IP\r\n                                           \"any\"                uses the first auto-detected mechanism\r\n                                           \"upnp\"               uses the Universal Plug and Play protocol\r\n                                           \"pmp\"                uses NAT-PMP with an auto-detected gateway address\r\n                                           \"pmp:192.168.0.1\"    uses NAT-PMP with the given gateway address\r\n   --nodiscover                       Disables the peer discovery mechanism (manual peer addition)\r\n   --v5disc                           Enables the experimental RLPx V5 (Topic Discovery) mechanism\r\n   --netrestrict value                Restricts network communication to the given IP networks (CIDR masks)\r\n   --nodekey value                    P2P node key file\r\n   --nodekeyhex value                 P2P node key as hex (for testing)\r\n   --discovery.dns value              Sets DNS discovery entry points (use \"\" to disable DNS)\r\n   --bootnodes value                  Comma separated enode URLs for P2P discovery bootstrap\r\n   --staticpeers value                Comma separated enode URLs to connect to\r\n   --trustedpeers value               Comma separated enode URLs which are always allowed to connect, even above the peer limit\r\n   --maxpeers value                   Maximum number of network peers (network disabled if set to 0) (default: 100)\r\n   --chain value                      Name of the testnet to join (default: \"mainnet\")\r\n   --dev.period value                 Block period to use in developer mode (0 = mine only if transaction pending) (default: 0)\r\n   --vmdebug                          Record information useful for VM and contract debugging\r\n   --networkid value                  Explicitly set network id (integer)(For testnets: use --chain <testnet_name> instead) (default: 1)\r\n   --fakepow                          Disables proof-of-work verification\r\n   --gpo.blocks value                 Number of recent blocks to check for gas prices (default: 20)\r\n   --gpo.percentile value             Suggested gas price is the given percentile of a set of recent transaction gas prices (default: 60)\r\n   --allow-insecure-unlock            Allow insecure account unlocking when account-related RPCs are exposed by http\r\n   --metrics                          Enable metrics collection and reporting\r\n   --metrics.expensive                Enable expensive metrics collection and reporting\r\n   --metrics.addr value               Enable stand-alone metrics HTTP server listening interface (default: \"127.0.0.1\")\r\n   --metrics.port value               Metrics HTTP server listening port (default: 6060)\r\n   --identity value                   Custom node name\r\n   --clique.checkpoint value          number of blocks after which to save the vote snapshot to the database (default: 10)\r\n   --clique.snapshots value           number of recent vote snapshots to keep in memory (default: 1024)\r\n   --clique.signatures value          number of recent block signatures to keep in memory (default: 16384)\r\n   --clique.datadir value             a path to clique db folder [<invalid Value>]\r\n   --watch-the-burn                   Enable WatchTheBurn stage to keep track of ETH issuance\r\n   --mine                             Enable mining\r\n   --proposer.disable                 Disables PoS proposer\r\n   --miner.notify value               Comma separated HTTP URL list to notify of new work packages\r\n   --miner.gaslimit value             Target gas limit for mined blocks (default: 30000000)\r\n   --miner.etherbase value            Public address for block mining rewards (default: \"0\")\r\n   --miner.extradata value            Block extra data set by the miner (default = client version)\r\n   --miner.noverify                   Disable remote sealing verification\r\n   --miner.sigfile value              Private key to sign blocks with\r\n   --sentry.api.addr value            comma separated sentry addresses '<host>:<port>,<host>:<port>'\r\n   --downloader.api.addr value        downloader address '<host>:<port>'\r\n   --healthcheck                      Enable grpc health check\r\n   --bor.heimdall value               URL of Heimdall service (default: \"http://localhost:1317\")\r\n   --bor.withoutheimdall              Run without Heimdall service (for testing purpose)\r\n   --ethstats value                   Reporting URL of a ethstats service (nodename:secret@host:port)\r\n   --verbosity value                  Logging verbosity: 0=silent, 1=error, 2=warn, 3=info, 4=debug, 5=detail (default: 3)\r\n   --log.json                         Format logs with JSON\r\n   --pprof                            Enable the pprof HTTP server\r\n   --pprof.addr value                 pprof HTTP server listening interface (default: \"127.0.0.1\")\r\n   --pprof.port value                 pprof HTTP server listening port (default: 6060)\r\n   --pprof.cpuprofile value           Write CPU profile to the given file\r\n   --trace value                      Write execution trace to the given file\r\n   --help, -h                         show help\r\n   --version, -v                      print the version\r\n\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107446975/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107447078",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/3947#issuecomment-1107447078",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3947",
    "id": 1107447078,
    "node_id": "IC_kwDOC0FsAM5CAk0m",
    "user": {
      "login": "breezytm",
      "id": 3412923,
      "node_id": "MDQ6VXNlcjM0MTI5MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3412923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/breezytm",
      "html_url": "https://github.com/breezytm",
      "followers_url": "https://api.github.com/users/breezytm/followers",
      "following_url": "https://api.github.com/users/breezytm/following{/other_user}",
      "gists_url": "https://api.github.com/users/breezytm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/breezytm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/breezytm/subscriptions",
      "organizations_url": "https://api.github.com/users/breezytm/orgs",
      "repos_url": "https://api.github.com/users/breezytm/repos",
      "events_url": "https://api.github.com/users/breezytm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/breezytm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T10:15:02Z",
    "updated_at": "2022-04-23T10:15:02Z",
    "author_association": "NONE",
    "body": "docker container \r\n\r\n```\r\nerigon [global options] command [command options] [arguments...]\r\n\r\nVERSION:\r\n   2022.04.2-beta\r\n\r\nCOMMANDS:\r\n   init                               Bootstrap and initialize a new genesis block\r\n   help                               Shows a list of commands or help for one command\r\n   \r\nGLOBAL OPTIONS:\r\n   --datadir value                    Data directory for the databases (default: \"/home/erigon/.local/share/erigon\") [<invalid Value>]\r\n   --ethash.dagdir value              Directory to store the ethash mining DAGs (default: \"/home/erigon/.local/share/erigon-ethash\") [<invalid Value>]\r\n   --txpool.disable                   experimental external pool and block producer, see ./cmd/txpool/readme.md for more info. Disabling internal txpool and block producer.\r\n   --txpool.locals value              Comma separated accounts to treat as locals (no flush, priority inclusion)\r\n   --txpool.nolocals                  Disables price exemptions for locally submitted transactions\r\n   --txpool.journal value             Disk journal for local transaction to survive node restarts (default: \"transactions.rlp\")\r\n   --txpool.rejournal value           Time interval to regenerate the local transaction journal (default: 1h0m0s)\r\n   --txpool.pricelimit value          Minimum gas price (fee cap) limit to enforce for acceptance into the pool (default: 1)\r\n   --txpool.pricebump value           Price bump percentage to replace an already existing transaction (default: 10)\r\n   --txpool.accountslots value        Minimum number of executable transaction slots guaranteed per account (default: 16)\r\n   --txpool.globalslots value         Maximum number of executable transaction slots for all accounts (default: 10000)\r\n   --txpool.globalbasefeeslots value  Maximum number of non-executable transactions where only not enough baseFee (default: 30000)\r\n   --txpool.accountqueue value        Maximum number of non-executable transaction slots permitted per account (default: 64)\r\n   --txpool.globalqueue value         Maximum number of non-executable transaction slots for all accounts (default: 30000)\r\n   --txpool.lifetime value            Maximum amount of time non-executable transaction are queued (default: 3h0m0s)\r\n   --txpool.trace.senders value       Comma separared list of addresses, whoes transactions will traced in transaction pool with debug printing\r\n   --prune value                      Choose which ancient data delete from DB: \r\n                                      h - prune history (ChangeSets, HistoryIndices - used by historical state access)\r\n                                      r - prune receipts (Receipts, Logs, LogTopicIndex, LogAddressIndex - used by eth_getLogs and similar RPC methods)\r\n                                      t - prune transaction by it's hash index\r\n                                      c - prune call traces (used by trace_* methods)\r\n                                      Does delete data older than 90K block (can set another value by '--prune.*.older' flags). \r\n                                      If item is NOT in the list - means NO pruning for this data.s\r\n                                      Example: --prune=hrtc (default: \"disabled\")\r\n   --prune.h.older value              Prune data after this amount of blocks (if --prune flag has 'h', then default is 90K) (default: 0)\r\n   --prune.r.older value              Prune data after this amount of blocks (if --prune flag has 'r', then default is 90K) (default: 0)\r\n   --prune.t.older value              Prune data after this amount of blocks (if --prune flag has 't', then default is 90K) (default: 0)\r\n   --prune.c.older value              Prune data after this amount of blocks (if --prune flag has 'c', then default is 90K) (default: 0)\r\n   --prune.h.before value             Prune data before this block (default: 0)\r\n   --prune.r.before value             Prune data before this block (default: 0)\r\n   --prune.t.before value             Prune data before this block (default: 0)\r\n   --prune.c.before value             Prune data before this block (default: 0)\r\n   --batchSize value                  Batch size for the execution stage (default: \"512M\")\r\n   --blockDownloaderWindow value      Outstanding limit of block bodies being downloaded (default: 32768)\r\n   --database.verbosity value         Enabling internal db logs. Very high verbosity levels may require recompile db. Default: 2, means warning. (default: 2)\r\n   --private.api.addr value           private api network address, for example: 127.0.0.1:9090, empty string means not to start the listener. do not expose to public network. serves remote database interface (default: \"127.0.0.1:9090\")\r\n   --private.api.ratelimit value      Amount of requests server handle simultaneously - requests over this limit will wait. Increase it - if clients see 'request timeout' while server load is low - it means your 'hot data' is small or have much RAM.  (default: 31872)\r\n   --etl.bufferSize value             Buffer size for ETL operations. (default: \"256MB\")\r\n   --tls                              Enable TLS handshake\r\n   --tls.cert value                   Specify certificate\r\n   --tls.key value                    Specify key file\r\n   --tls.cacert value                 Specify certificate authority\r\n   --state.stream.disable             Disable streaming of state changes from core to RPC daemon\r\n   --sync.loop.throttle value         Sets the minimum time between sync loop starts (e.g. 1h30m, default is none)\r\n   --bad.block value                  Marks block with given hex string as bad and forces initial reorg before normal staged sync\r\n   --port value                       Network listening port (default: 30303)\r\n   --nat value                        NAT port mapping mechanism (any|none|upnp|pmp|extip:<IP>)\r\n                                           \"\" or \"none\"         default - do not nat\r\n                                           \"extip:77.12.33.4\"   will assume the local machine is reachable on the given IP\r\n                                           \"any\"                uses the first auto-detected mechanism\r\n                                           \"upnp\"               uses the Universal Plug and Play protocol\r\nflag provided but not defined: -http.port\r\n                                           \"pmp\"                uses NAT-PMP with an auto-detected gateway address\r\n                                           \"pmp:192.168.0.1\"    uses NAT-PMP with the given gateway address\r\n   --nodiscover                       Disables the peer discovery mechanism (manual peer addition)\r\n   --v5disc                           Enables the experimental RLPx V5 (Topic Discovery) mechanism\r\n   --netrestrict value                Restricts network communication to the given IP networks (CIDR masks)\r\n   --nodekey value                    P2P node key file\r\n   --nodekeyhex value                 P2P node key as hex (for testing)\r\n   --discovery.dns value              Sets DNS discovery entry points (use \"\" to disable DNS)\r\n   --staticpeers value                Comma separated enode URLs to connect to\r\n   --trustedpeers value               Comma separated enode URLs which are always allowed to connect, even above the peer limit\r\n   --maxpeers value                   Maximum number of network peers (network disabled if set to 0) (default: 100)\r\n   --chain value                      Name of the testnet to join (default: \"mainnet\")\r\n   --dev.period value                 Block period to use in developer mode (0 = mine only if transaction pending) (default: 0)\r\n   --vmdebug                          Record information useful for VM and contract debugging\r\n   --networkid value                  Explicitly set network id (integer)(For testnets: use --chain <testnet_name> instead) (default: 1)\r\n   --fakepow                          Disables proof-of-work verification\r\n   --gpo.blocks value                 Number of recent blocks to check for gas prices (default: 20)\r\n   --gpo.percentile value             Suggested gas price is the given percentile of a set of recent transaction gas prices (default: 60)\r\n   --allow-insecure-unlock            Allow insecure account unlocking when account-related RPCs are exposed by http\r\n   --metrics                          Enable metrics collection and reporting\r\n   --metrics.expensive                Enable expensive metrics collection and reporting\r\n   --metrics.addr value               Enable stand-alone metrics HTTP server listening interface (default: \"127.0.0.1\")\r\n   --metrics.port value               Metrics HTTP server listening port (default: 6060)\r\n   --identity value                   Custom node name\r\n   --clique.checkpoint value          number of blocks after which to save the vote snapshot to the database (default: 10)\r\n   --clique.snapshots value           number of recent vote snapshots to keep in memory (default: 1024)\r\n   --clique.signatures value          number of recent block signatures to keep in memory (default: 16384)\r\n   --clique.datadir value             a path to clique db folder [<invalid Value>]\r\n   --watch-the-burn                   Enable WatchTheBurn stage to keep track of ETH issuance\r\n   --mine                             Enable mining\r\n   --miner.notify value               Comma separated HTTP URL list to notify of new work packages\r\n   --miner.gaslimit value             Target gas limit for mined blocks (default: 30000000)\r\n   --miner.etherbase value            Public address for block mining rewards (default: \"0\")\r\n   --miner.extradata value            Block extra data set by the miner (default = client version)\r\n   --miner.noverify                   Disable remote sealing verification\r\n   --miner.sigfile value              Private key to sign blocks with\r\n   --sentry.api.addr value            comma separated sentry addresses '<host>:<port>,<host>:<port>'\r\n   --healthcheck                      Enable grpc health check\r\n   --verbosity value                  Logging verbosity: 0=silent, 1=error, 2=warn, 3=info, 4=debug, 5=detail (default: 3)\r\n   --log.json                         Format logs with JSON\r\n   --vmodule value                    Per-module verbosity: comma-separated list of <pattern>=<level> (e.g. eth/*=5,p2p=4)\r\n   --backtrace value                  Request a stack trace at a specific logging statement (e.g. \"block.go:271\")\r\n   --debug                            Prepends log messages with call-site location (file and line number)\r\n   --pprof                            Enable the pprof HTTP server\r\n   --pprof.addr value                 pprof HTTP server listening interface (default: \"127.0.0.1\")\r\n   --pprof.port value                 pprof HTTP server listening port (default: 6060)\r\n   --pprof.memprofilerate value       Turn on memory profiling with the given rate (default: 524288)\r\n   --pprof.blockprofilerate value     Turn on block profiling with the given rate (default: 0)\r\n   --pprof.cpuprofile value           Write CPU profile to the given file\r\n   --trace value                      Write execution trace to the given file\r\n   --help, -h                         show help\r\n   --version, -v                      print the version\r\n   ```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107447078/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107453585",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/3947#issuecomment-1107453585",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3947",
    "id": 1107453585,
    "node_id": "IC_kwDOC0FsAM5CAmaR",
    "user": {
      "login": "AskAlexSharov",
      "id": 46885206,
      "node_id": "MDQ6VXNlcjQ2ODg1MjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46885206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AskAlexSharov",
      "html_url": "https://github.com/AskAlexSharov",
      "followers_url": "https://api.github.com/users/AskAlexSharov/followers",
      "following_url": "https://api.github.com/users/AskAlexSharov/following{/other_user}",
      "gists_url": "https://api.github.com/users/AskAlexSharov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AskAlexSharov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AskAlexSharov/subscriptions",
      "organizations_url": "https://api.github.com/users/AskAlexSharov/orgs",
      "repos_url": "https://api.github.com/users/AskAlexSharov/repos",
      "events_url": "https://api.github.com/users/AskAlexSharov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AskAlexSharov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T11:07:59Z",
    "updated_at": "2022-04-23T11:07:59Z",
    "author_association": "COLLABORATOR",
    "body": "Our “alpha” releases are more new (have more features) than beta release ( beta is in docker). Beta releases - is old stable version with small  bugfixes and no new features, useful for some old production installations. \r\n\r\nIf you are new to Erigon - I advise you use “alpha” releases, they are also production ready ( “alpha” - is more about stabilization of api and database format). \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107453585/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107553431",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/3947#issuecomment-1107553431",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3947",
    "id": 1107553431,
    "node_id": "IC_kwDOC0FsAM5CA-yX",
    "user": {
      "login": "breezytm",
      "id": 3412923,
      "node_id": "MDQ6VXNlcjM0MTI5MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3412923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/breezytm",
      "html_url": "https://github.com/breezytm",
      "followers_url": "https://api.github.com/users/breezytm/followers",
      "following_url": "https://api.github.com/users/breezytm/following{/other_user}",
      "gists_url": "https://api.github.com/users/breezytm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/breezytm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/breezytm/subscriptions",
      "organizations_url": "https://api.github.com/users/breezytm/orgs",
      "repos_url": "https://api.github.com/users/breezytm/repos",
      "events_url": "https://api.github.com/users/breezytm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/breezytm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T18:11:39Z",
    "updated_at": "2022-04-23T18:11:39Z",
    "author_association": "NONE",
    "body": "is there a docker image i can use with the alpha version? if not, any chance you can upload one to the docker hub. thanks. ",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107553431/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107679533",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/3947#issuecomment-1107679533",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3947",
    "id": 1107679533,
    "node_id": "IC_kwDOC0FsAM5CBdkt",
    "user": {
      "login": "AskAlexSharov",
      "id": 46885206,
      "node_id": "MDQ6VXNlcjQ2ODg1MjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46885206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AskAlexSharov",
      "html_url": "https://github.com/AskAlexSharov",
      "followers_url": "https://api.github.com/users/AskAlexSharov/followers",
      "following_url": "https://api.github.com/users/AskAlexSharov/following{/other_user}",
      "gists_url": "https://api.github.com/users/AskAlexSharov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AskAlexSharov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AskAlexSharov/subscriptions",
      "organizations_url": "https://api.github.com/users/AskAlexSharov/orgs",
      "repos_url": "https://api.github.com/users/AskAlexSharov/repos",
      "events_url": "https://api.github.com/users/AskAlexSharov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AskAlexSharov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-24T01:19:40Z",
    "updated_at": "2022-04-24T01:19:40Z",
    "author_association": "COLLABORATOR",
    "body": "1. Added `alpha` and `v2020.08.03-alpha` to hub.docker.com (build will finish in ~15min) \r\n2. You also can create docker image from sources by: `git checkout alpha` and `make docker`.",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107679533/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107701225",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/3947#issuecomment-1107701225",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3947",
    "id": 1107701225,
    "node_id": "IC_kwDOC0FsAM5CBi3p",
    "user": {
      "login": "breezytm",
      "id": 3412923,
      "node_id": "MDQ6VXNlcjM0MTI5MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3412923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/breezytm",
      "html_url": "https://github.com/breezytm",
      "followers_url": "https://api.github.com/users/breezytm/followers",
      "following_url": "https://api.github.com/users/breezytm/following{/other_user}",
      "gists_url": "https://api.github.com/users/breezytm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/breezytm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/breezytm/subscriptions",
      "organizations_url": "https://api.github.com/users/breezytm/orgs",
      "repos_url": "https://api.github.com/users/breezytm/repos",
      "events_url": "https://api.github.com/users/breezytm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/breezytm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-24T03:40:41Z",
    "updated_at": "2022-04-24T03:44:03Z",
    "author_association": "NONE",
    "body": "> 1. Added `alpha` and `v2020.08.03-alpha` to hub.docker.com (build will finish in ~15min)\r\n> 2. You also can create docker image from sources by: `git checkout alpha` and `make docker`.\r\n\r\nThank you for that. I was able to do a pull for alpha and it appears to have the switches I needed and I am no longer gettting an of the previous errors but now I am facing this new error message ``err=\"migrator.VerifyVersion: cannot upgrade major DB version for more than 1 version from 3 to 6, use integration tool if you know what you are doing\"`` \r\n\r\nDoes this mean I need to resync? I see the recommendations from other open issues is to remain on the existing branch but in my case that is not possible. ",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107701225/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107711104",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/3947#issuecomment-1107711104",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3947",
    "id": 1107711104,
    "node_id": "IC_kwDOC0FsAM5CBlSA",
    "user": {
      "login": "AskAlexSharov",
      "id": 46885206,
      "node_id": "MDQ6VXNlcjQ2ODg1MjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46885206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AskAlexSharov",
      "html_url": "https://github.com/AskAlexSharov",
      "followers_url": "https://api.github.com/users/AskAlexSharov/followers",
      "following_url": "https://api.github.com/users/AskAlexSharov/following{/other_user}",
      "gists_url": "https://api.github.com/users/AskAlexSharov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AskAlexSharov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AskAlexSharov/subscriptions",
      "organizations_url": "https://api.github.com/users/AskAlexSharov/orgs",
      "repos_url": "https://api.github.com/users/AskAlexSharov/repos",
      "events_url": "https://api.github.com/users/AskAlexSharov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AskAlexSharov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-24T05:07:23Z",
    "updated_at": "2022-04-24T05:07:23Z",
    "author_association": "COLLABORATOR",
    "body": "yes, I think you not synced yet. ",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107711104/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107950021",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/3947#issuecomment-1107950021",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3947",
    "id": 1107950021,
    "node_id": "IC_kwDOC0FsAM5CCfnF",
    "user": {
      "login": "breezytm",
      "id": 3412923,
      "node_id": "MDQ6VXNlcjM0MTI5MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3412923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/breezytm",
      "html_url": "https://github.com/breezytm",
      "followers_url": "https://api.github.com/users/breezytm/followers",
      "following_url": "https://api.github.com/users/breezytm/following{/other_user}",
      "gists_url": "https://api.github.com/users/breezytm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/breezytm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/breezytm/subscriptions",
      "organizations_url": "https://api.github.com/users/breezytm/orgs",
      "repos_url": "https://api.github.com/users/breezytm/repos",
      "events_url": "https://api.github.com/users/breezytm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/breezytm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-25T00:22:56Z",
    "updated_at": "2022-04-25T00:22:56Z",
    "author_association": "NONE",
    "body": "> yes, I think you not synced yet.\r\n\r\nI ended up deleted the sync progress and started from scratch for the node to start. Was this the correct course of action? Is there a way to migrate the data?",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107950021/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107952933",
    "html_url": "https://github.com/ledgerwatch/erigon/issues/3947#issuecomment-1107952933",
    "issue_url": "https://api.github.com/repos/ledgerwatch/erigon/issues/3947",
    "id": 1107952933,
    "node_id": "IC_kwDOC0FsAM5CCgUl",
    "user": {
      "login": "AskAlexSharov",
      "id": 46885206,
      "node_id": "MDQ6VXNlcjQ2ODg1MjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46885206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AskAlexSharov",
      "html_url": "https://github.com/AskAlexSharov",
      "followers_url": "https://api.github.com/users/AskAlexSharov/followers",
      "following_url": "https://api.github.com/users/AskAlexSharov/following{/other_user}",
      "gists_url": "https://api.github.com/users/AskAlexSharov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AskAlexSharov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AskAlexSharov/subscriptions",
      "organizations_url": "https://api.github.com/users/AskAlexSharov/orgs",
      "repos_url": "https://api.github.com/users/AskAlexSharov/repos",
      "events_url": "https://api.github.com/users/AskAlexSharov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AskAlexSharov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-25T00:37:09Z",
    "updated_at": "2022-04-25T00:37:09Z",
    "author_association": "COLLABORATOR",
    "body": "We have migrations between minor updates. But no migrations from beta to alpha. Re-sync is only way in this case. ",
    "reactions": {
      "url": "https://api.github.com/repos/ledgerwatch/erigon/issues/comments/1107952933/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
