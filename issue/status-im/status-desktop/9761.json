{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/9761",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/9761/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/9761/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/9761/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/9761",
  "id": 1613159899,
  "node_id": "I_kwDOD5KrTM5gJt3b",
  "number": 9761,
  "title": "Implement RequestToJoin with wallet addresses <-> signature payloads",
  "user": {
    "login": "0x-r4bbit",
    "id": 445106,
    "node_id": "MDQ6VXNlcjQ0NTEwNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/445106?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/0x-r4bbit",
    "html_url": "https://github.com/0x-r4bbit",
    "followers_url": "https://api.github.com/users/0x-r4bbit/followers",
    "following_url": "https://api.github.com/users/0x-r4bbit/following{/other_user}",
    "gists_url": "https://api.github.com/users/0x-r4bbit/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/0x-r4bbit/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/0x-r4bbit/subscriptions",
    "organizations_url": "https://api.github.com/users/0x-r4bbit/orgs",
    "repos_url": "https://api.github.com/users/0x-r4bbit/repos",
    "events_url": "https://api.github.com/users/0x-r4bbit/events{/privacy}",
    "received_events_url": "https://api.github.com/users/0x-r4bbit/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3047427135,
      "node_id": "MDU6TGFiZWwzMDQ3NDI3MTM1",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/feature",
      "name": "feature",
      "color": "0E8A16",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "0x-r4bbit",
    "id": 445106,
    "node_id": "MDQ6VXNlcjQ0NTEwNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/445106?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/0x-r4bbit",
    "html_url": "https://github.com/0x-r4bbit",
    "followers_url": "https://api.github.com/users/0x-r4bbit/followers",
    "following_url": "https://api.github.com/users/0x-r4bbit/following{/other_user}",
    "gists_url": "https://api.github.com/users/0x-r4bbit/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/0x-r4bbit/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/0x-r4bbit/subscriptions",
    "organizations_url": "https://api.github.com/users/0x-r4bbit/orgs",
    "repos_url": "https://api.github.com/users/0x-r4bbit/repos",
    "events_url": "https://api.github.com/users/0x-r4bbit/events{/privacy}",
    "received_events_url": "https://api.github.com/users/0x-r4bbit/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "0x-r4bbit",
      "id": 445106,
      "node_id": "MDQ6VXNlcjQ0NTEwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/445106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x-r4bbit",
      "html_url": "https://github.com/0x-r4bbit",
      "followers_url": "https://api.github.com/users/0x-r4bbit/followers",
      "following_url": "https://api.github.com/users/0x-r4bbit/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x-r4bbit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x-r4bbit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x-r4bbit/subscriptions",
      "organizations_url": "https://api.github.com/users/0x-r4bbit/orgs",
      "repos_url": "https://api.github.com/users/0x-r4bbit/repos",
      "events_url": "https://api.github.com/users/0x-r4bbit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x-r4bbit/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-03-07T10:38:14Z",
  "updated_at": "2023-03-29T11:51:40Z",
  "closed_at": "2023-03-29T11:51:40Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "This is a crucial part to make #9088 work.\r\nHere's what needs to be done and why:\r\n\r\n- To make communities indeed token gated, owners need a mechanism to ensure a user that requests access to the community, does indeed own the funds needed to access the community\r\n- A user therefore needs to a) send the owner wallet addresses that should hold all necessary funds in aggregate and b) proofs that those addresses indeed belong to that user\r\n- Proofs are then verified by the owner before checking whether all funds exist in the given wallets\r\n\r\n### How are proofs done?\r\n\r\nA user that owns wallet accounts is able to sign messages with those accounts. Given such a signature, another party can then verify that the content was indeed signed by that wallet account. So something like\r\n\r\n```\r\nWalletSign(WalletAddress)\r\n```\r\n\r\nThis allow however doesn't proof that the Status user (account) owns that wallet. So one might think we just need to add a signature of the Status account around that:\r\n\r\n```\r\nStatusAccountSign(WalletSign(WalletAddress))\r\n```\r\n\r\nWhile this proofs that the message was signed/sent by `StatusAccount`, it still doesn't proof that the inner `WalletSign()` was performed by `StatusAccount`. A malicious actor might take the inner signature and reuse it like this:\r\n\r\n```\r\nOtherStatusAccountSign(WalletSign(WalletAddress))\r\n```\r\n\r\n^ The inner `WalletSign()` is still valid but wasn't actually done by `OtherStatusAccount`.\r\n\r\nTo account for that, we need to ensure that these signatures are \"sealed\" by the Status account and wallet account in question, and, that the signatures are ideally single-use only.\r\n\r\n@cammellos came up with a good scheme that looks something like this:\r\n\r\n```\r\nStatusAccountSign(WalletSign(StatusAddress + WalletAddress + CommunityID + RequestID))\r\n```\r\n\r\nLet's break this down:\r\n\r\n1. `StatusAddress + WalletAddress + CommunityID + RequestID` is the \"inner\" material to be signed\r\n2. `CommunityID + RequestID` is what makes this signature material unique as both IDs can never be reused\r\n3. `WalletSIgn(StatusAddress + WalletAddress + CommunityID + RequestID)` ensures the wallet owner is okay to reveal the wallet address along with the Status account address + the unique ID\r\n4. `StatusAccountSign(WalletSign(...))` states that `StatusAccount` is willing to share the wallet signature\r\n\r\nWhile previously, a malicious actor could just take the inner signature and do:\r\n\r\n```\r\nOtherStatusAccountSIgn(WalletSign(WalletAddress))\r\n```\r\n\r\nThe signature is now only valid, if the `WalletSign()` also includes the chat key of the Status Account. So if the malicious actor doesn't own the wallet key and only gets hold of a signature, it would essentially look like this:\r\n\r\n```\r\nOtherStatusAccountSign(WalletSign(StatusAccountAddress + WalletAddress + ...))\r\n```\r\n\r\nBut for it to be valid, it has to look like\r\n\r\n```\r\nOtherStatusAccountSign(WalletSign(OtherStatusAccountAddress + WalletAddress + ...))\r\n```\r\n\r\n### Implementation\r\n\r\nAs for implementation, we can leverage an existing API in status-go `Messenger.SIgnMessage()`.\r\nThis one currently signs data using the logged-in user's key, but needs to be extended such that it can be signed using a wallet's key.\r\n\r\nOne thing that needs to be explore is how this will work with Keycard.\r\nAlso need to look into how we verify the wrapped signatures on the owner side",
  "closed_by": {
    "login": "0x-r4bbit",
    "id": 445106,
    "node_id": "MDQ6VXNlcjQ0NTEwNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/445106?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/0x-r4bbit",
    "html_url": "https://github.com/0x-r4bbit",
    "followers_url": "https://api.github.com/users/0x-r4bbit/followers",
    "following_url": "https://api.github.com/users/0x-r4bbit/following{/other_user}",
    "gists_url": "https://api.github.com/users/0x-r4bbit/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/0x-r4bbit/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/0x-r4bbit/subscriptions",
    "organizations_url": "https://api.github.com/users/0x-r4bbit/orgs",
    "repos_url": "https://api.github.com/users/0x-r4bbit/repos",
    "events_url": "https://api.github.com/users/0x-r4bbit/events{/privacy}",
    "received_events_url": "https://api.github.com/users/0x-r4bbit/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/9761/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/9761/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1488458270",
    "html_url": "https://github.com/status-im/status-desktop/issues/9761#issuecomment-1488458270",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9761",
    "id": 1488458270,
    "node_id": "IC_kwDOD5KrTM5YuBIe",
    "user": {
      "login": "0x-r4bbit",
      "id": 445106,
      "node_id": "MDQ6VXNlcjQ0NTEwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/445106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x-r4bbit",
      "html_url": "https://github.com/0x-r4bbit",
      "followers_url": "https://api.github.com/users/0x-r4bbit/followers",
      "following_url": "https://api.github.com/users/0x-r4bbit/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x-r4bbit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x-r4bbit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x-r4bbit/subscriptions",
      "organizations_url": "https://api.github.com/users/0x-r4bbit/orgs",
      "repos_url": "https://api.github.com/users/0x-r4bbit/repos",
      "events_url": "https://api.github.com/users/0x-r4bbit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x-r4bbit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T11:51:40Z",
    "updated_at": "2023-03-29T11:51:40Z",
    "author_association": "MEMBER",
    "body": "This has landed",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1488458270/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
