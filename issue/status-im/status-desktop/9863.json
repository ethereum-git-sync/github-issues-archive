{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/9863",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/9863/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/9863/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/9863/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/9863",
  "id": 1622517495,
  "node_id": "I_kwDOD5KrTM5gtab3",
  "number": 9863,
  "title": "Make StatusQ a QML module",
  "user": {
    "login": "igor-sirotin",
    "id": 25482501,
    "node_id": "MDQ6VXNlcjI1NDgyNTAx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25482501?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/igor-sirotin",
    "html_url": "https://github.com/igor-sirotin",
    "followers_url": "https://api.github.com/users/igor-sirotin/followers",
    "following_url": "https://api.github.com/users/igor-sirotin/following{/other_user}",
    "gists_url": "https://api.github.com/users/igor-sirotin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/igor-sirotin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/igor-sirotin/subscriptions",
    "organizations_url": "https://api.github.com/users/igor-sirotin/orgs",
    "repos_url": "https://api.github.com/users/igor-sirotin/repos",
    "events_url": "https://api.github.com/users/igor-sirotin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/igor-sirotin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3143640900,
      "node_id": "MDU6TGFiZWwzMTQzNjQwOTAw",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/chore",
      "name": "chore",
      "color": "5AD5E4",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "igor-sirotin",
    "id": 25482501,
    "node_id": "MDQ6VXNlcjI1NDgyNTAx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25482501?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/igor-sirotin",
    "html_url": "https://github.com/igor-sirotin",
    "followers_url": "https://api.github.com/users/igor-sirotin/followers",
    "following_url": "https://api.github.com/users/igor-sirotin/following{/other_user}",
    "gists_url": "https://api.github.com/users/igor-sirotin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/igor-sirotin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/igor-sirotin/subscriptions",
    "organizations_url": "https://api.github.com/users/igor-sirotin/orgs",
    "repos_url": "https://api.github.com/users/igor-sirotin/repos",
    "events_url": "https://api.github.com/users/igor-sirotin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/igor-sirotin/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "igor-sirotin",
      "id": 25482501,
      "node_id": "MDQ6VXNlcjI1NDgyNTAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25482501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/igor-sirotin",
      "html_url": "https://github.com/igor-sirotin",
      "followers_url": "https://api.github.com/users/igor-sirotin/followers",
      "following_url": "https://api.github.com/users/igor-sirotin/following{/other_user}",
      "gists_url": "https://api.github.com/users/igor-sirotin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/igor-sirotin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/igor-sirotin/subscriptions",
      "organizations_url": "https://api.github.com/users/igor-sirotin/orgs",
      "repos_url": "https://api.github.com/users/igor-sirotin/repos",
      "events_url": "https://api.github.com/users/igor-sirotin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/igor-sirotin/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-03-14T00:33:12Z",
  "updated_at": "2023-04-14T08:18:58Z",
  "closed_at": "2023-04-14T08:18:58Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# TLDR;\r\n\r\nAll we have in StatusQ are QML components. Implemented in QML or C++.\r\nThis could be compiled into a [QML module](https://doc.qt.io/qt-5/qtqml-modules-topic.html), which would be loaded dynamically by QQmlEngine when `import StatusQ` is found.\r\n\r\nGood things have been done in https://github.com/status-im/status-desktop/issues/9125, but it seems to me that we can do better ðŸ’ª \r\n\r\n![image](https://user-images.githubusercontent.com/25482501/224862117-b2179306-ff68-4d73-bc36-a812f423330f.png)\r\n\r\n# What's the problem?\r\n\r\n`StatusQ` doesn't provide a \"binary product\".\r\nIt's simply a repository with C++ and QML components. \r\nIt's also has `SortFilterProxyModel` as a submodule and require those to be linked after all.\r\n\r\nBecause of this, we have to compile StatusQ (C++ components, QML, dependeices like SortFilterProxyModel) as part of something else.\r\n\r\nE.g., this is how we link StatusQ to status-desktop:\r\n1. Compile StatusQ C++ components as part of `DOtherSide`\r\n2. Compile `SortFilterProxyModel` as part of `DOtherSide`\r\n3. Generate a RCC with QML files, dynamically load it\r\n4. Call StatusQ `registerTypes`\r\n\r\nAnd we have to do this manually for EACH usage of StatusQ in:\r\n- DOtherSide (this one registers things in the Nim app)\r\n- sandbox\r\n- storybook\r\n- StatusQ sanity checker\r\n\r\nAnd it's done in a different way every time.\r\n\r\n## Dude, just give some images!\r\n\r\n![image](https://user-images.githubusercontent.com/25482501/224862084-fe85dac3-3547-4321-b3f5-9ef9df9e2c24.png)\r\n\r\n# Registering QML types\r\n\r\nI recently added https://github.com/status-im/qzxing as dependency for QR code scanning (https://github.com/status-im/status-desktop/pull/9464). It was a nightmare adding it.\r\n\r\nI thought that `SortFilterProxyModel` would be a great guide for me on how to link such dependency.\r\nWhat I didn't know was:\r\n- `SortFilterProxyModel` is internally built as `OBJECT` library\r\n- `SortFilterProxyModel` is internally using `Q_COREAPP_STARTUP_FUNCTION` macro to register types\r\n\r\nBoth of this clauses are false for `QZXing`.\r\n1. Itâ€™s internally built as `STATIC` library\r\n1. You should manually call `QZXing::registerQMLTypes` for the types to be found in QML\r\n\r\nSo, comparing to `SortFilterProxyModel`, here I need to:\r\n- link `QZXing` to each usage\r\n- call `QZXing::registerQMLTypes()`\r\n\r\n# How does QML module fix this?\r\n\r\nEach QML module can override `initializeEngine` function thatâ€™s being called on module loading.\r\nThis function is intended to register all cpp-implemented QML elements with appropriate library name.\r\n\r\nðŸŽ‰  This way `QZXing` and `SortFilterProxyModel` could be pure dependencies of `StatusQ`!\r\nAnd we would call to `QZXing::registerQMLTypes` on module loading.\r\n\r\n`StatusQ` knows nothing about `DOtherSide`. Nor should `DOtherSide` know anything about `StatusQ`.\r\nWe should try hard to make those libraries independent. \r\nAnd simply connect required libraries directly to:\r\n- status desktop\r\n- sandbox\r\n- storybook\r\n- StatusQ sanity checker",
  "closed_by": {
    "login": "igor-sirotin",
    "id": 25482501,
    "node_id": "MDQ6VXNlcjI1NDgyNTAx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25482501?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/igor-sirotin",
    "html_url": "https://github.com/igor-sirotin",
    "followers_url": "https://api.github.com/users/igor-sirotin/followers",
    "following_url": "https://api.github.com/users/igor-sirotin/following{/other_user}",
    "gists_url": "https://api.github.com/users/igor-sirotin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/igor-sirotin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/igor-sirotin/subscriptions",
    "organizations_url": "https://api.github.com/users/igor-sirotin/orgs",
    "repos_url": "https://api.github.com/users/igor-sirotin/repos",
    "events_url": "https://api.github.com/users/igor-sirotin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/igor-sirotin/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/9863/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/9863/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1467169912",
    "html_url": "https://github.com/status-im/status-desktop/issues/9863#issuecomment-1467169912",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9863",
    "id": 1467169912,
    "node_id": "IC_kwDOD5KrTM5Xczx4",
    "user": {
      "login": "igor-sirotin",
      "id": 25482501,
      "node_id": "MDQ6VXNlcjI1NDgyNTAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25482501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/igor-sirotin",
      "html_url": "https://github.com/igor-sirotin",
      "followers_url": "https://api.github.com/users/igor-sirotin/followers",
      "following_url": "https://api.github.com/users/igor-sirotin/following{/other_user}",
      "gists_url": "https://api.github.com/users/igor-sirotin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/igor-sirotin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/igor-sirotin/subscriptions",
      "organizations_url": "https://api.github.com/users/igor-sirotin/orgs",
      "repos_url": "https://api.github.com/users/igor-sirotin/repos",
      "events_url": "https://api.github.com/users/igor-sirotin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/igor-sirotin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-14T00:36:00Z",
    "updated_at": "2023-03-14T00:36:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "It shouldn't be hard to implement, so I might come later with a draft PR.\r\n\r\n@osmaczko @micieslak @caybro, please, leave your thoughts ðŸ™‚ \r\nAll comments are very appreciated!\r\n\r\nIt might be hard to see the whole picture from the description, so we can have a call so I could explain it verbally.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1467169912/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1467846896",
    "html_url": "https://github.com/status-im/status-desktop/issues/9863#issuecomment-1467846896",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9863",
    "id": 1467846896,
    "node_id": "IC_kwDOD5KrTM5XfZDw",
    "user": {
      "login": "caybro",
      "id": 5377645,
      "node_id": "MDQ6VXNlcjUzNzc2NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/caybro",
      "html_url": "https://github.com/caybro",
      "followers_url": "https://api.github.com/users/caybro/followers",
      "following_url": "https://api.github.com/users/caybro/following{/other_user}",
      "gists_url": "https://api.github.com/users/caybro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/caybro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/caybro/subscriptions",
      "organizations_url": "https://api.github.com/users/caybro/orgs",
      "repos_url": "https://api.github.com/users/caybro/repos",
      "events_url": "https://api.github.com/users/caybro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/caybro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-14T10:41:53Z",
    "updated_at": "2023-03-14T10:41:53Z",
    "author_association": "MEMBER",
    "body": "Fully agree :) Just for reference, this is exactly what I've been doing for the new StatusQ theme/style engine: https://github.com/caybro/StatusQ2/blob/master/imports/StatusQ/Core/Theme/plugin.cpp \r\n\r\nSuch a plugin \"registers\" itself and then on the QML side it's just sufficient to:\r\n```qml\r\nimport StatusQ.Core.Theme 1.0\r\n...\r\n```\r\n\r\nNo need to link the app binary to the plugin DLL at all",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1467846896/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1467852514",
    "html_url": "https://github.com/status-im/status-desktop/issues/9863#issuecomment-1467852514",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9863",
    "id": 1467852514,
    "node_id": "IC_kwDOD5KrTM5Xfabi",
    "user": {
      "login": "caybro",
      "id": 5377645,
      "node_id": "MDQ6VXNlcjUzNzc2NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/caybro",
      "html_url": "https://github.com/caybro",
      "followers_url": "https://api.github.com/users/caybro/followers",
      "following_url": "https://api.github.com/users/caybro/following{/other_user}",
      "gists_url": "https://api.github.com/users/caybro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/caybro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/caybro/subscriptions",
      "organizations_url": "https://api.github.com/users/caybro/orgs",
      "repos_url": "https://api.github.com/users/caybro/repos",
      "events_url": "https://api.github.com/users/caybro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/caybro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-14T10:44:52Z",
    "updated_at": "2023-03-14T10:45:10Z",
    "author_association": "MEMBER",
    "body": "Also worth noting, that no QML types have to be manually exported or registered at all, it happens via the Qt macros (`QML_ELEMENT` and `QML_SINGLETON` here) and some qmake magic; example https://github.com/caybro/StatusQ2/blob/master/imports/StatusQ/Core/Theme/theme.h:\r\n\r\n```cpp\r\n#include <QmlTypeAndRevisionsRegistration>\r\n...\r\nclass Theme : public QObject\r\n{\r\n  Q_OBJECT\r\n  QML_ELEMENT\r\n  QML_SINGLETON\r\n  Q_DISABLE_COPY_MOVE(Theme)\r\n...\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1467852514/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1500548053",
    "html_url": "https://github.com/status-im/status-desktop/issues/9863#issuecomment-1500548053",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9863",
    "id": 1500548053,
    "node_id": "IC_kwDOD5KrTM5ZcIvV",
    "user": {
      "login": "osmaczko",
      "id": 33099791,
      "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osmaczko",
      "html_url": "https://github.com/osmaczko",
      "followers_url": "https://api.github.com/users/osmaczko/followers",
      "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
      "organizations_url": "https://api.github.com/users/osmaczko/orgs",
      "repos_url": "https://api.github.com/users/osmaczko/repos",
      "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osmaczko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-07T18:53:46Z",
    "updated_at": "2023-04-07T18:53:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Go for it :+1: \r\n\r\n> SortFilterProxyModel is internally using Q_COREAPP_STARTUP_FUNCTION macro to register types\r\n\r\nIn general yes, but for status-desktop the manual registration is needed anyway: https://github.com/status-im/status-desktop/blob/3f66e41929465cf09d17e01bd12e7f9bc9c0f756/vendor/DOtherSide/lib/src/DOtherSide.cpp#L106",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1500548053/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
