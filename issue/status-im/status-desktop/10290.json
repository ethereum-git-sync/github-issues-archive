{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/10290",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/10290/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/10290/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/10290/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/10290",
  "id": 1666254035,
  "node_id": "I_kwDOD5KrTM5jUQTT",
  "number": 10290,
  "title": "Add API to fetch list of owners of NFTs from a given contract",
  "user": {
    "login": "dlipicar",
    "id": 11161531,
    "node_id": "MDQ6VXNlcjExMTYxNTMx",
    "avatar_url": "https://avatars.githubusercontent.com/u/11161531?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dlipicar",
    "html_url": "https://github.com/dlipicar",
    "followers_url": "https://api.github.com/users/dlipicar/followers",
    "following_url": "https://api.github.com/users/dlipicar/following{/other_user}",
    "gists_url": "https://api.github.com/users/dlipicar/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dlipicar/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dlipicar/subscriptions",
    "organizations_url": "https://api.github.com/users/dlipicar/orgs",
    "repos_url": "https://api.github.com/users/dlipicar/repos",
    "events_url": "https://api.github.com/users/dlipicar/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dlipicar/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2331339531,
      "node_id": "MDU6TGFiZWwyMzMxMzM5NTMx",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/wallet-team",
      "name": "wallet-team",
      "color": "b60205",
      "default": false,
      "description": ""
    },
    {
      "id": 3047427135,
      "node_id": "MDU6TGFiZWwzMDQ3NDI3MTM1",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/feature",
      "name": "feature",
      "color": "0E8A16",
      "default": false,
      "description": ""
    },
    {
      "id": 4121954569,
      "node_id": "LA_kwDOD5KrTM71sAkJ",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Wallet",
      "name": "E:Wallet",
      "color": "084532",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "dlipicar",
    "id": 11161531,
    "node_id": "MDQ6VXNlcjExMTYxNTMx",
    "avatar_url": "https://avatars.githubusercontent.com/u/11161531?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dlipicar",
    "html_url": "https://github.com/dlipicar",
    "followers_url": "https://api.github.com/users/dlipicar/followers",
    "following_url": "https://api.github.com/users/dlipicar/following{/other_user}",
    "gists_url": "https://api.github.com/users/dlipicar/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dlipicar/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dlipicar/subscriptions",
    "organizations_url": "https://api.github.com/users/dlipicar/orgs",
    "repos_url": "https://api.github.com/users/dlipicar/repos",
    "events_url": "https://api.github.com/users/dlipicar/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dlipicar/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "dlipicar",
      "id": 11161531,
      "node_id": "MDQ6VXNlcjExMTYxNTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/11161531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlipicar",
      "html_url": "https://github.com/dlipicar",
      "followers_url": "https://api.github.com/users/dlipicar/followers",
      "following_url": "https://api.github.com/users/dlipicar/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlipicar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlipicar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlipicar/subscriptions",
      "organizations_url": "https://api.github.com/users/dlipicar/orgs",
      "repos_url": "https://api.github.com/users/dlipicar/repos",
      "events_url": "https://api.github.com/users/dlipicar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlipicar/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/56",
    "html_url": "https://github.com/status-im/status-desktop/milestone/56",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/56/labels",
    "id": 8475714,
    "node_id": "MI_kwDOD5KrTM4AgVRC",
    "number": 56,
    "title": "0.12",
    "description": "Priorities **in priority order** for the 0.12 milestone:  \r\n\r\n**1. Improve performance**\r\n- Focus on eliminating any UI freezes when the user clicks on something and the app does not display an immediate response.  Target: the app should ideally respond to all user input within 50ms, but let's start with identifying the longest UI freezes and trying to fix the worst UI freezes first.\r\n- Speed and responsiveness of switching between community channels, and 1on1 and ad-hoc group chats is particularly important, especially for channels and chats that contains a lot of history.  We should aim for about 250ms delay in the *worst* case if possible.  Having a lot of history in a channel should not slow channel switching down.\r\n- DB perf optimisations.  \r\n- Move things to async and off main thread\r\n- See Alex's great profiling work for possible tasks (Alex to continue focusing on perf. for this release cycle)\r\n- \"user facing performance in everyday app usage\" is the top priority, but any task that improves performance is worthwhile\r\n\r\n**2. Finish development of token based functionality from 0.11**\r\n- Optimise No. queries made by owner node when checking member tokens (Pascal)\r\n- Community encryption should automatically switch on/off depending on community permissions (issue #9942)\r\n- Implement the 'Admin' role (issue #10114)\r\n- Airdrop to community members (in addition to addresses)\r\n- Optimise gas required by collectable minting smart contracts (issue #9943, GravityBlast)\r\n--- After collectable minting gas optimisation is complete, start work on Asset minting contracts (GravityBlast)\r\n- Complete token remote destruct UI\r\n- Remove 'Community Permissions Settings', 'Community Tokens' and 'Discord Import Tool' feature flags (issue #10115)\r\n- Thoroughly test, and fix all bugs found. \r\n- Anything else related to Community level token permissions, collectable minting, airdropping, and remote destructing that didn't make it into 0.11\r\n\r\n**3. Finish implementing the ability for Community Owners and Admins to drag and drop channels and categories into different orders**\r\n\r\n**4. Finish anything related to the initial pairing process for syncing that wasn't completed in 0.11** (Igor)\r\n\r\n**5. Improve Mutual Contacts functionality to improve reliability and pay off tech debt** (Mishka)\r\n\r\n**6. Complete Community Directory Curation dApp integration inc. Featured functionality** (Patryk)\r\n \r\n**7. Backend for the Profile Showcase**\r\n\r\n**8. Identity Verification** (required for 'Profile Showcase')\r\n\r\n**9. Fix bugs, bugs and more bugs!**\r\n- Esp. find the cause of and fix the longstanding bug of some 'requests to join' not arriving for hours/days after they were sent!\r\n- Many 'fit and finish' bugs for the UI team\r\n\r\n**--- For the Wallet team ---**\r\n\r\n1. Continue feature development inc. kicking off development of the activity screens\r\n2. 'All accounts' section.  The ability to return all tokens owned by the user in all accounts (excluding watch only accounts) is also required for the Showcase functionality\r\n3. Widen scope of 'backup to waku' and 'syncing' so that all relevant Wallet user state is backed up and synced between devices\r\n4. Continue to ensure Wallet functionality is performant.\r\n5. Fix wallet bugs",
    "creator": {
      "login": "iurimatias",
      "id": 176720,
      "node_id": "MDQ6VXNlcjE3NjcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iurimatias",
      "html_url": "https://github.com/iurimatias",
      "followers_url": "https://api.github.com/users/iurimatias/followers",
      "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
      "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
      "organizations_url": "https://api.github.com/users/iurimatias/orgs",
      "repos_url": "https://api.github.com/users/iurimatias/repos",
      "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iurimatias/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 84,
    "closed_issues": 141,
    "state": "open",
    "created_at": "2022-09-28T20:32:37Z",
    "updated_at": "2023-04-29T10:33:10Z",
    "due_on": "2023-05-05T07:00:00Z",
    "closed_at": null
  },
  "comments": 0,
  "created_at": "2023-04-13T11:42:00Z",
  "updated_at": "2023-04-19T19:35:01Z",
  "closed_at": "2023-04-19T19:35:00Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Community owners need to keep track of all the addresses that own Community NFTs from the contracts they created.\r\n\r\nInfura does offer an endpoint (https://docs.infura.io/infura/infura-expansion-apis/nft-api/rest-apis/api-reference/ownership - Get NFT owners by contract address) which perfectly suits our needs. Unfortunately, they do not currently support Arbitrum testnet and Optimism testnet/mainnet. They will be supported in the future, but there's no ETA.\r\nAlchemy has a similar endpoint (https://docs.alchemy.com/reference/getownersforcollection) and they support all the chains we need and more, so it would fully solve our problem in the most efficient way possible. \r\n\r\nThey offer a \"generous\" free plan (https://www.alchemy.com/pricing) which, according to my calculations (https://docs.alchemy.com/reference/compute-unit-costs#nft-api) and assuming we only use that endpoint in our app, would give us 15 million fetches per month or something like 3500 token ownership list refreshes every 10 minutes. That does seem enough to start with.\r\n\r\n- Integrate Alchemy as our main provider for this, add Infura as fallback for the available chains\r\n- Ask Jakub to request and integrate an Alchemy API key in our CI builds\r\n- Create a tracker issue to add the chains currently missing from Infura whenever they get supported.\r\n\r\n",
  "closed_by": {
    "login": "dlipicar",
    "id": 11161531,
    "node_id": "MDQ6VXNlcjExMTYxNTMx",
    "avatar_url": "https://avatars.githubusercontent.com/u/11161531?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dlipicar",
    "html_url": "https://github.com/dlipicar",
    "followers_url": "https://api.github.com/users/dlipicar/followers",
    "following_url": "https://api.github.com/users/dlipicar/following{/other_user}",
    "gists_url": "https://api.github.com/users/dlipicar/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dlipicar/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dlipicar/subscriptions",
    "organizations_url": "https://api.github.com/users/dlipicar/orgs",
    "repos_url": "https://api.github.com/users/dlipicar/repos",
    "events_url": "https://api.github.com/users/dlipicar/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dlipicar/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/10290/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/10290/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[

]
