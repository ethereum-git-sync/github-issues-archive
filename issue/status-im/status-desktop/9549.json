{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/9549",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/9549/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/9549/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/9549/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/9549",
  "id": 1585442837,
  "node_id": "I_kwDOD5KrTM5ef_AV",
  "number": 9549,
  "title": "Use https:// deep links instead of status-im:// - Windows",
  "user": {
    "login": "endulab",
    "id": 61889657,
    "node_id": "MDQ6VXNlcjYxODg5NjU3",
    "avatar_url": "https://avatars.githubusercontent.com/u/61889657?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/endulab",
    "html_url": "https://github.com/endulab",
    "followers_url": "https://api.github.com/users/endulab/followers",
    "following_url": "https://api.github.com/users/endulab/following{/other_user}",
    "gists_url": "https://api.github.com/users/endulab/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/endulab/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/endulab/subscriptions",
    "organizations_url": "https://api.github.com/users/endulab/orgs",
    "repos_url": "https://api.github.com/users/endulab/repos",
    "events_url": "https://api.github.com/users/endulab/events{/privacy}",
    "received_events_url": "https://api.github.com/users/endulab/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2036563458,
      "node_id": "MDU6TGFiZWwyMDM2NTYzNDU4",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/bug",
      "name": "bug",
      "color": "d73a4a",
      "default": true,
      "description": "Something isn't working"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "jrainville",
    "id": 11926403,
    "node_id": "MDQ6VXNlcjExOTI2NDAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jrainville",
    "html_url": "https://github.com/jrainville",
    "followers_url": "https://api.github.com/users/jrainville/followers",
    "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
    "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
    "organizations_url": "https://api.github.com/users/jrainville/orgs",
    "repos_url": "https://api.github.com/users/jrainville/repos",
    "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jrainville/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/64",
    "html_url": "https://github.com/status-im/status-desktop/milestone/64",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/64/labels",
    "id": 9039503,
    "node_id": "MI_kwDOD5KrTM4Aie6P",
    "number": 64,
    "title": "0.13",
    "description": "Priorities **in priority order** for the 0.13 milestone:\r\n\r\n**1. Finish items started in 0.12**\r\n- Complete any outstanding issues related to pairing (for syncing) - Igor\r\n- Implement the 'Admin' role (issue #10114) - Mykhailo\r\n- Any remaining work to pay off tech. debt related to mutual contacts - Mishka\r\n- When creating/editing token based permission, ability to search for and selecting Collectables from OpenSea - MichaelC\r\n\r\n**2. Channel token permissions**\r\n- Create, edit and delete channel token permissions in the permissions admin screens\r\n- This includes the \"no tokens required to view this channel\" permission\r\n- All user facing channel token permissions functionality e.g. what happens when a user tries to access a token gated channel they don't have the required tokens to access, what happens when a user only has permissions to view a channel, etc...\r\n- If a community is an open (not token gated at the community level) community, if a channel is token gated AND if **no** \"no tokens required to view this channel\" permission for that channel exists, then the channel should be automatically encrypted.  If token gating is removed from a channel, the channel should become unencrypted.\r\n\r\n**3. DB perf improvements**\r\n- https://www.notion.so/Database-related-performance-1dbaa7ea894c461d885e55676683be07\r\n- Alex and Patryk to work on this, with help from Lukáš\r\n\r\n**4. Update app to use new 'Share URL' formats**\r\n- add functionality to status-go to generate the new 'Share URL' formats for sharing links to: User Profiles, Communities, Channel inside a Community\r\n- Update everywhere a user can share a URL from to use the new URL format\r\n- New/updated URL unroll designs for inside chat, including specific unrolls for the new User Profile, Community and Channel inside a Community URLs\r\n- Ability to share a URL that points to a specific channel in a community (issue #10160)\r\n- Update all address inputs to accept a user pasting a 'share URL' into the input (in addition to being able to input the raw address).  This includes: Start new chat input, send contact request input in Settings, the import community key input, etc...\r\n- Update Status Desktops URL handler so that if Status is installed on a computer, when a user clicks on a Status 'Share URL' the app is launched (if not already running) and after signing in the user is automatically taken to the entity the Share URL represented inside the app.  e.g. if a user clicks on a URL for a Status Community, the user should be taken to the home screen for that community inside the Status App\r\n\r\n**5. Mint Assets functionality**\r\n- Also includes some small improvements to the mint Collectables functionality\r\n- Noelia, GravityBlast\r\n\r\n**6. Profile showcase backend**\r\n\r\n\r\n**--- For the Wallet team ---**\r\ntldr; continue building out Ben's wallet designs\r\n\r\n1. Complete any outstanding development related to the activity screens\r\n2. All accounts overview screens\r\n3. New settings screens\r\n4. Implement 'imported key and account' syncing and transfer between devices\r\n\r\n\r\n",
    "creator": {
      "login": "iurimatias",
      "id": 176720,
      "node_id": "MDQ6VXNlcjE3NjcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iurimatias",
      "html_url": "https://github.com/iurimatias",
      "followers_url": "https://api.github.com/users/iurimatias/followers",
      "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
      "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
      "organizations_url": "https://api.github.com/users/iurimatias/orgs",
      "repos_url": "https://api.github.com/users/iurimatias/repos",
      "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iurimatias/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 185,
    "closed_issues": 23,
    "state": "open",
    "created_at": "2023-02-13T19:04:13Z",
    "updated_at": "2023-05-09T18:06:47Z",
    "due_on": "2023-06-16T07:00:00Z",
    "closed_at": null
  },
  "comments": 3,
  "created_at": "2023-02-15T08:41:32Z",
  "updated_at": "2023-05-09T19:49:52Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Related to #7957\r\n\r\nDiscussions in https://github.com/status-im/status-web/issues/327",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/9549/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/9549/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1431096996",
    "html_url": "https://github.com/status-im/status-desktop/issues/9549#issuecomment-1431096996",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9549",
    "id": 1431096996,
    "node_id": "IC_kwDOD5KrTM5VTM6k",
    "user": {
      "login": "felicio",
      "id": 13265126,
      "node_id": "MDQ6VXNlcjEzMjY1MTI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/13265126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/felicio",
      "html_url": "https://github.com/felicio",
      "followers_url": "https://api.github.com/users/felicio/followers",
      "following_url": "https://api.github.com/users/felicio/following{/other_user}",
      "gists_url": "https://api.github.com/users/felicio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/felicio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felicio/subscriptions",
      "organizations_url": "https://api.github.com/users/felicio/orgs",
      "repos_url": "https://api.github.com/users/felicio/repos",
      "events_url": "https://api.github.com/users/felicio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/felicio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-15T10:27:05Z",
    "updated_at": "2023-03-02T15:54:37Z",
    "author_association": "NONE",
    "body": "@endulab please, could you add the following to description as one of acceptance criteria\r\n\r\n- test if passed `https://myphotoapp.example.com/albums?albumname=vacation&index=1#secret`, platform can access both query parameters after `?` as well as value after `#`\r\n\r\nof\r\n\r\n- this issue\r\n- https://github.com/status-im/status-desktop/issues/7957\r\n- https://github.com/status-im/status-desktop/issues/8027\r\n\r\n---\r\n\r\nPlatform | Example URL | Registration during install | Approach\r\n-- | -- | -- | --\r\nLinux | https://myphotoapp.example.com/albums?albumname=vacation&index=1#secret | Use a .desktop file to associate the app with a custom URI scheme. The .desktop file can be placed in /usr/share/applications or ~/.local/share/applications. | Use command-line arguments or X11 events to pass the URL to the running instance of the application. Extract the query parameters and fragment from the URL using a URI parsing library or regular expressions.\r\nWindows | https://myphotoapp.example.com/albums?albumname=vacation&index=1#secret | Add a registry key to associate the app with a custom URI scheme. The registry key can be added during the installation process using an installer or script. | Use command-line arguments or the Windows registry to pass the URL to the running instance of the application. Extract the query parameters and fragment from the URL using a URI parsing library or regular expressions.\r\nmacOS | https://myphotoapp.example.com/albums?albumname=vacation&index=1#secret | Define the custom URI scheme in the application's Info.plist file. The CFBundleURLTypes key in the Info.plist file specifies the URL schemes that the app can handle. | Use AppleScript, the NSAppleEventManager API, or the CFBundleURLTypes key in the application's Info.plist file to handle the URL. Extract the query parameters and fragment from the URL using a URI parsing library or regular expressions.\r\niOS | https://myphotoapp.example.com/albums?albumname=vacation&index=1#secret | Define the custom URI scheme in the application's Info.plist file. The LSApplicationQueriesSchemes key in the Info.plist file specifies the URL schemes that the app can handle. | Use the UIApplicationDelegate method application(_:open:options:) to handle the URL. Extract the query parameters and fragment from the URL using the URLComponents class or regular expressions.\r\nAndroid | https://myphotoapp.example.com/albums?albumname=vacation&index=1#secret | Define an <intent-filter> element in the application's manifest file to register the URL scheme. The <intent-filter> element specifies the URL scheme and the activity that can handle the URL. | Define an <intent-filter> element in the application's manifest file to register the URL scheme. Use the getIntent method of the Activity class to extract the data from the intent object that started the activity. Extract the query parameters and fragment from the URL using the Uri class.\r\n\r\n– source, ChatGPT",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1431096996/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1540780567",
    "html_url": "https://github.com/status-im/status-desktop/issues/9549#issuecomment-1540780567",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9549",
    "id": 1540780567,
    "node_id": "IC_kwDOD5KrTM5b1nIX",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-09T19:31:53Z",
    "updated_at": "2023-05-09T19:31:53Z",
    "author_association": "MEMBER",
    "body": "Confirming that deep links still work on Windows.\r\n\r\nChanging to https://",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1540780567/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1540801424",
    "html_url": "https://github.com/status-im/status-desktop/issues/9549#issuecomment-1540801424",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9549",
    "id": 1540801424,
    "node_id": "IC_kwDOD5KrTM5b1sOQ",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-09T19:49:51Z",
    "updated_at": "2023-05-09T19:49:51Z",
    "author_association": "MEMBER",
    "body": "I tried using `https://status-whetever` in the registry and it doesn't work.\r\n`http` and `https` are both already handled by Windows.\r\n\r\nUnless I misunderstood the task, I don't think it's possible to make a deep link start with `http(s)` on Windows.\r\n\r\nWe can have `status-im://` or `status-app://` or anything like that though.\r\n\r\n@felicio @endulab ",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1540801424/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
