{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/12609",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/12609/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/12609/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/12609/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/12609",
  "id": 1972796714,
  "node_id": "I_kwDOD5KrTM51ln0q",
  "number": 12609,
  "title": "Move Permission logic from the Create/EditChatPopup to the Nim model",
  "user": {
    "login": "jrainville",
    "id": 11926403,
    "node_id": "MDQ6VXNlcjExOTI2NDAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jrainville",
    "html_url": "https://github.com/jrainville",
    "followers_url": "https://api.github.com/users/jrainville/followers",
    "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
    "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
    "organizations_url": "https://api.github.com/users/jrainville/orgs",
    "repos_url": "https://api.github.com/users/jrainville/repos",
    "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jrainville/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2087353959,
      "node_id": "MDU6TGFiZWwyMDg3MzUzOTU5",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/ui-team",
      "name": "ui-team",
      "color": "1111ff",
      "default": false,
      "description": ""
    },
    {
      "id": 2351074091,
      "node_id": "MDU6TGFiZWwyMzUxMDc0MDkx",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/refactor",
      "name": "refactor",
      "color": "ef9870",
      "default": false,
      "description": ""
    },
    {
      "id": 4548141040,
      "node_id": "LA_kwDOD5KrTM8AAAABDxcf8A",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/messenger-team",
      "name": "messenger-team",
      "color": "232858",
      "default": false,
      "description": ""
    },
    {
      "id": 5745629806,
      "node_id": "LA_kwDOD5KrTM8AAAABVndabg",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Desktop%20Comm%20Perms%20and%20Minting%20MVP",
      "name": "E:Desktop Comm Perms and Minting MVP",
      "color": "c2e0c6",
      "default": false,
      "description": "Misc tasks about Community permissions that are not part of another Epic, due for the MVP"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "alexjba",
    "id": 47811206,
    "node_id": "MDQ6VXNlcjQ3ODExMjA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alexjba",
    "html_url": "https://github.com/alexjba",
    "followers_url": "https://api.github.com/users/alexjba/followers",
    "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
    "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
    "organizations_url": "https://api.github.com/users/alexjba/orgs",
    "repos_url": "https://api.github.com/users/alexjba/repos",
    "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alexjba/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "alexjba",
      "id": 47811206,
      "node_id": "MDQ6VXNlcjQ3ODExMjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexjba",
      "html_url": "https://github.com/alexjba",
      "followers_url": "https://api.github.com/users/alexjba/followers",
      "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
      "organizations_url": "https://api.github.com/users/alexjba/orgs",
      "repos_url": "https://api.github.com/users/alexjba/repos",
      "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexjba/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/61",
    "html_url": "https://github.com/status-im/status-desktop/milestone/61",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/61/labels",
    "id": 8739485,
    "node_id": "MI_kwDOD5KrTM4AhVqd",
    "number": 61,
    "title": "0.16",
    "description": "**1. Actioning Communities and Messaging dogfooding feedback**\r\n\r\n**2. Continue stabilization and bug fixing**\r\n\r\n**3. Complete the profile showcase**\r\n\r\n\r\n\r\n**--- Wallet Team ---**\r\n\r\n1. Complete support for Community minted assets\r\n\r\n2. Complete token visibility management screens\r\n\r\n3. Continue working on WalletConnect support\r\n\r\n4. Continue fixing bugs, making optimisations and keeping tech debt low\r\n\r\n\r\n\r\n\r\n",
    "creator": {
      "login": "iurimatias",
      "id": 176720,
      "node_id": "MDQ6VXNlcjE3NjcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iurimatias",
      "html_url": "https://github.com/iurimatias",
      "followers_url": "https://api.github.com/users/iurimatias/followers",
      "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
      "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
      "organizations_url": "https://api.github.com/users/iurimatias/orgs",
      "repos_url": "https://api.github.com/users/iurimatias/repos",
      "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iurimatias/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 59,
    "closed_issues": 0,
    "state": "open",
    "created_at": "2022-12-09T15:06:43Z",
    "updated_at": "2023-11-28T12:44:29Z",
    "due_on": "2024-01-31T08:00:00Z",
    "closed_at": null
  },
  "comments": 3,
  "created_at": "2023-11-01T17:28:58Z",
  "updated_at": "2023-11-28T09:49:14Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nAs implemented in https://github.com/status-im/status-desktop/pull/12160, the [new design](https://www.figma.com/file/qHfFm7C9LwtXpfdbxssCK3/Kuba%E2%8E%9CDesktop---Communities?type=design&node-id=2975-488707&mode=design&t=7bhUfNQmmUXSOz0g-4) was implemented to make it possible to create, edit and delete permissions inside the Create/EditChatPopup.\r\n\r\nFor added info, the permissions changes must not be confirmed (sent to status-go) until the user presses the `Create/Edit channel` button, so we need to keep a temporary state.\r\n\r\nThe problem is that the PR added a lot of logic to the QML part, because the PermisisonsModel was never meant to be used for that temporary context.\r\n\r\nWe need to improve the model to support it. Here is my idea:\r\n\r\n> Maybe we add an enum in the permisisons model called `temporaryState`. That enum it can be `default/normal`, `created`, `edited` or `deleted`.\r\n> With that, the UI can now  call Nim each time the user makes changes, but with a temporary flag.\r\n> \r\n> Then, when the user clicks Next, the Nim code can check those that are not `default/normal` and apply the change to them (create them, edit them, etc).\r\n> \r\n> If the user clicks cancel, instead we just undo everything.\r\n> For created, it's easy we just remove it from the model.\r\n> For deleted, it's also simple, we go back to normal.\r\n> \r\n> The complex one is edited, because we need to go back to the previous data and I'm not sure where we can keep that data. Maybe we can just get that permission back from the cache.\r\n\r\nWith all these changes in place, the code will be much cleaner in QML.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/12609/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/12609/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1805942648",
    "html_url": "https://github.com/status-im/status-desktop/issues/12609#issuecomment-1805942648",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12609",
    "id": 1805942648,
    "node_id": "IC_kwDOD5KrTM5rpH94",
    "user": {
      "login": "micieslak",
      "id": 20650004,
      "node_id": "MDQ6VXNlcjIwNjUwMDA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20650004?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/micieslak",
      "html_url": "https://github.com/micieslak",
      "followers_url": "https://api.github.com/users/micieslak/followers",
      "following_url": "https://api.github.com/users/micieslak/following{/other_user}",
      "gists_url": "https://api.github.com/users/micieslak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/micieslak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/micieslak/subscriptions",
      "organizations_url": "https://api.github.com/users/micieslak/orgs",
      "repos_url": "https://api.github.com/users/micieslak/repos",
      "events_url": "https://api.github.com/users/micieslak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/micieslak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-10T15:28:05Z",
    "updated_at": "2023-11-10T15:28:05Z",
    "author_association": "MEMBER",
    "body": "Hey, currently there is a logic for handling temporary state in QML, we have some reusable components like e.g. `ModelComparator` to track quite easily the dirty state. It works for previous views in settings. But it may not fit perfectly in the new use-cases, that's true.\r\n\r\nBut moving it to nim sounds also sub-optimal bc we increase complexity of nim part, which is intended to be dropped in the future. And it would be specific solution for that case, not reusable component. Because of that I would opt for handle it on UI side by custom c++ model or, ideally, by some generic models, especially https://github.com/status-im/status-desktop/issues/12690 seems to be useful here (maybe in combination with some other proxies - https://github.com/status-im/status-desktop/issues/12681).\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1805942648/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1808196462",
    "html_url": "https://github.com/status-im/status-desktop/issues/12609#issuecomment-1808196462",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12609",
    "id": 1808196462,
    "node_id": "IC_kwDOD5KrTM5rxuNu",
    "user": {
      "login": "noeliaSD",
      "id": 97019400,
      "node_id": "U_kgDOBchmCA",
      "avatar_url": "https://avatars.githubusercontent.com/u/97019400?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/noeliaSD",
      "html_url": "https://github.com/noeliaSD",
      "followers_url": "https://api.github.com/users/noeliaSD/followers",
      "following_url": "https://api.github.com/users/noeliaSD/following{/other_user}",
      "gists_url": "https://api.github.com/users/noeliaSD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/noeliaSD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/noeliaSD/subscriptions",
      "organizations_url": "https://api.github.com/users/noeliaSD/orgs",
      "repos_url": "https://api.github.com/users/noeliaSD/repos",
      "events_url": "https://api.github.com/users/noeliaSD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/noeliaSD/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-13T13:47:30Z",
    "updated_at": "2023-11-13T13:47:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Hey, currently there is a logic for handling temporary state in QML, we have some reusable components like e.g. `ModelComparator` to track quite easily the dirty state. It works for previous views in settings. But it may not fit perfectly in the new use-cases, that's true.\r\n> \r\n> But moving it to nim sounds also sub-optimal bc we increase complexity of nim part, which is intended to be dropped in the future. And it would be specific solution for that case, not reusable component. Because of that I would opt for handle it on UI side by custom c++ model or, ideally, by some generic models, especially #12690 seems to be useful here (maybe in combination with some other proxies - #12681).\r\n\r\nI think that in the measure of possible we should keep the nim side / backend just as a `UI data provider` and, again, if possible, try to manage user interaction in UI. However, I didn't go deep into this specific use case and could be wrong!\r\n\r\nWhat @micieslak suggests makes sense to me and the `temporal model state` editing forms seems to be something very generic / usual in our app so we can think on, if with the existing utils it's not enough, creating a generic proxy or, a specific for this use case c++ model that helps on it. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1808196462/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1829459871",
    "html_url": "https://github.com/status-im/status-desktop/issues/12609#issuecomment-1829459871",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12609",
    "id": 1829459871,
    "node_id": "IC_kwDOD5KrTM5tC1ef",
    "user": {
      "login": "noeliaSD",
      "id": 97019400,
      "node_id": "U_kgDOBchmCA",
      "avatar_url": "https://avatars.githubusercontent.com/u/97019400?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/noeliaSD",
      "html_url": "https://github.com/noeliaSD",
      "followers_url": "https://api.github.com/users/noeliaSD/followers",
      "following_url": "https://api.github.com/users/noeliaSD/following{/other_user}",
      "gists_url": "https://api.github.com/users/noeliaSD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/noeliaSD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/noeliaSD/subscriptions",
      "organizations_url": "https://api.github.com/users/noeliaSD/orgs",
      "repos_url": "https://api.github.com/users/noeliaSD/repos",
      "events_url": "https://api.github.com/users/noeliaSD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/noeliaSD/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-28T09:49:13Z",
    "updated_at": "2023-11-28T09:49:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Following same reasoning than in here: https://github.com/status-im/status-desktop/issues/12142 this is moved to the next iteration.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1829459871/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
