{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/11564",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/11564/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/11564/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/11564/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/11564",
  "id": 1809621513,
  "node_id": "I_kwDOD5KrTM5r3KIJ",
  "number": 11564,
  "title": "Move latest block approximation to status-go",
  "user": {
    "login": "Cuteivist",
    "id": 11396062,
    "node_id": "MDQ6VXNlcjExMzk2MDYy",
    "avatar_url": "https://avatars.githubusercontent.com/u/11396062?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Cuteivist",
    "html_url": "https://github.com/Cuteivist",
    "followers_url": "https://api.github.com/users/Cuteivist/followers",
    "following_url": "https://api.github.com/users/Cuteivist/following{/other_user}",
    "gists_url": "https://api.github.com/users/Cuteivist/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Cuteivist/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Cuteivist/subscriptions",
    "organizations_url": "https://api.github.com/users/Cuteivist/orgs",
    "repos_url": "https://api.github.com/users/Cuteivist/repos",
    "events_url": "https://api.github.com/users/Cuteivist/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Cuteivist/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2331339531,
      "node_id": "MDU6TGFiZWwyMzMxMzM5NTMx",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/wallet-team",
      "name": "wallet-team",
      "color": "b60205",
      "default": false,
      "description": ""
    },
    {
      "id": 3047427135,
      "node_id": "MDU6TGFiZWwzMDQ3NDI3MTM1",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/feature",
      "name": "feature",
      "color": "0E8A16",
      "default": false,
      "description": ""
    },
    {
      "id": 5745575725,
      "node_id": "LA_kwDOD5KrTM8AAAABVnaHLQ",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:DesktopNewActivity",
      "name": "E:DesktopNewActivity",
      "color": "0052cc",
      "default": false,
      "description": "Implementation of the new Activity UI"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/70",
    "html_url": "https://github.com/status-im/status-desktop/milestone/70",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/70/labels",
    "id": 9405726,
    "node_id": "MI_kwDOD5KrTM4Aj4Ue",
    "number": 70,
    "title": "0.17",
    "description": "**1. Finish anything that wasn't completed in the previous 0.16 cycle**\r\n\r\n- And fix bugs as usual.  We need to keep tech. debt at a roughly fixed level as we grow out functionality, can't let it accumulate! ;-)\r\n\r\n- Ensure accounts stored on Keycard are taken into consideration for community permissions\r\n\r\n\r\n**2. Stress testing and perf**\r\n\r\n- Create a test user account with 5,000 mutual contacts. See what breaks, or if this causes poor performance. Then fix whatever found. Realistically the requirement is 'only' for the experience of having up to 2,000 mutual contacts to work well. But if we test with 5,000 mutual contacts, it will make it easier to see issues.\r\n\r\n- Create a test community that contains 20,000 members. Test, see what breaks and what perf. issues are encountered. Then fix whatever needs fixing. Member bar is probably one area that will have issues\r\n\r\n\r\n**3. Opt-in auto-update functionality**\r\n\r\n- Desktop app downloads update in the background, displays global informing user that update is available.  When user presses the 'Update' button, Status Desktop closes and simultaneously automatically launches an 'updater' app that performs the update.  When the update is complete, the 'updater app' closes itself and re-launches Status Desktop.  Or something like that ;-)\r\n\r\n\r\n**4. Message input improvements**\r\n\r\n- Fix all bugs with message input component\r\n\r\n- Needs to handle markdown entered into the message input field correctly\r\n\r\n- Add SpellChecking\r\n\r\n\r\n**5. Audio messages**\r\n\r\n- Re-enable the posting of Audio messages in 1on1, ad-hoc group chats and community chats\r\n\r\n\r\n**6. Restart work on Browser**\r\n\r\n- Start with conducting a spike to work out how can ensure we always have the latest version of Chromium in our app.  If a security critical bug is fixed in Chromium, how can we have that fix in our app in 24h to 48h?\r\n\r\n- Do we need to automate building our own fork of QtWebEngine, so we can create new builds of QtWebEngine each time a new version of Chromium is released?\r\n\r\n- Can we use the UnGoogled version of Chromium?\r\n\r\n- We need to answer the above questions before proceeding further with the browser work.\r\n\r\n\r\n**Possible items (these will probably be shifted to a subsequent milestone)**\r\n- Code Formatting\r\n- Start ENS functionality redesign/rebuild\r\n- Linking to Messages\r\n\r\n",
    "creator": {
      "login": "iurimatias",
      "id": 176720,
      "node_id": "MDQ6VXNlcjE3NjcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iurimatias",
      "html_url": "https://github.com/iurimatias",
      "followers_url": "https://api.github.com/users/iurimatias/followers",
      "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
      "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
      "organizations_url": "https://api.github.com/users/iurimatias/orgs",
      "repos_url": "https://api.github.com/users/iurimatias/repos",
      "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iurimatias/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 3,
    "closed_issues": 0,
    "state": "open",
    "created_at": "2023-05-16T17:34:32Z",
    "updated_at": "2023-07-18T10:11:45Z",
    "due_on": "2023-12-01T08:00:00Z",
    "closed_at": null
  },
  "comments": 0,
  "created_at": "2023-07-18T10:11:32Z",
  "updated_at": "2023-07-20T05:58:44Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "#11522 introduced approximate calculation of latest block to reduce delays because of sync requests.\r\n\r\nTo improve this task:\r\n* Move implementation to `status-go`, so mobile can also use it\r\n* Separate 2 rpc calls for direct query of latest block and approximation\r\n* Fallback from approx function should give a log that maybe chain approximation (action per second) must be provided, then call direct query of latest block\r\n* Query latest block in `status-go` in the background instead on the first call to refresh approximation every x minutes (currently 10 min)\r\n\r\nIt is low priority task",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/11564/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/11564/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
