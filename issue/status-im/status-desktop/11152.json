{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/11152",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/11152/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/11152/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/11152/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/11152",
  "id": 1764119565,
  "node_id": "I_kwDOD5KrTM5pJlQN",
  "number": 11152,
  "title": "[Community Management] Implement nb of members graph (backend)",
  "user": {
    "login": "jrainville",
    "id": 11926403,
    "node_id": "MDQ6VXNlcjExOTI2NDAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jrainville",
    "html_url": "https://github.com/jrainville",
    "followers_url": "https://api.github.com/users/jrainville/followers",
    "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
    "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
    "organizations_url": "https://api.github.com/users/jrainville/orgs",
    "repos_url": "https://api.github.com/users/jrainville/repos",
    "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jrainville/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3047427135,
      "node_id": "MDU6TGFiZWwzMDQ3NDI3MTM1",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/feature",
      "name": "feature",
      "color": "0E8A16",
      "default": false,
      "description": ""
    },
    {
      "id": 4548141040,
      "node_id": "LA_kwDOD5KrTM8AAAABDxcf8A",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/messenger-team",
      "name": "messenger-team",
      "color": "232858",
      "default": false,
      "description": ""
    },
    {
      "id": 5639332268,
      "node_id": "LA_kwDOD5KrTM8AAAABUCFhrA",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/C2",
      "name": "C2",
      "color": "E15258",
      "default": false,
      "description": ""
    },
    {
      "id": 5732731550,
      "node_id": "LA_kwDOD5KrTM8AAAABVbKKng",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:DCommunityOverviewRedesign",
      "name": "E:DCommunityOverviewRedesign",
      "color": "88DD6E",
      "default": false,
      "description": "Redesign of the community management overview screen for MVP"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [
    {
      "login": "osmaczko",
      "id": 33099791,
      "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osmaczko",
      "html_url": "https://github.com/osmaczko",
      "followers_url": "https://api.github.com/users/osmaczko/followers",
      "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
      "organizations_url": "https://api.github.com/users/osmaczko/orgs",
      "repos_url": "https://api.github.com/users/osmaczko/repos",
      "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osmaczko/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/57",
    "html_url": "https://github.com/status-im/status-desktop/milestone/57",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/57/labels",
    "id": 8475715,
    "node_id": "MI_kwDOD5KrTM4AgVRD",
    "number": 57,
    "title": "0.14",
    "description": "Milestone cycles:\r\n\r\n[Cycle 1](https://github.com/status-im/status-desktop/issues?q=is%3Aopen+is%3Aissue+milestone%3A0.14+label%3AC1): 7 July\r\n[Cycle 2](https://github.com/status-im/status-desktop/issues?q=is%3Aopen+is%3Aissue+milestone%3A0.14+label%3AC2): 28 July \r\n[Cycle 3](https://github.com/status-im/status-desktop/issues?q=is%3Aopen+is%3Aissue+milestone%3A0.14+label%3AC3): 18 August\r\n\r\n\r\n**--- Main focus ---**\r\n\r\n**1. Token permissions to enable control of community smart contracts**\r\n- Before a community founder can use any of the community token admin functionality, they first have to deploy Owner and Token Master contracts.\r\n- This work involves: new empty state screen for Mint and Airdrop tokens (before current empty state screen is revealed), new flow for deploying the community's Owner and Token Master contracts in a single step, a fixed uneditable permission giving anybody who holds the Token Master token admin rights for the community should be automatically created.\r\n- Only the holder of the single Owner token can access the Token Master airdrop, remote destruct, and view holders functions. Anybody who holds the Token Master token can access all token admin options, excluding those related to the Token Master token itself, as well as being and Admin of the community.\r\n- This will all be explained in more detail in the designs.\r\n\r\nBackend Epic: https://github.com/status-im/status-desktop/issues/11249\r\n\r\n**2. Update Community Admin home screen inc control node transfer and associated dialogues**\r\n- Remove ability for a Owner to leave a community on the computer that's running as that community's control node\r\n- Community Admin home screen cleanup (inc. adding at least one of the three graphs, whichever is easiest to implement).\r\n  - Graph issue: https://github.com/status-im/status-desktop/issues/11152  \r\n  - Community overview: https://github.com/status-im/status-desktop/issues/11278\r\n\r\n**3. Ability for user to select & manage accounts shared with each community control node**\r\n- This item is quite a bit of work\r\n- Touches Community settings, as well as all of the community join flows\r\n- Backend issues: \r\n  - Join API: https://github.com/status-im/status-desktop/issues/11154\r\n  - Edit API: https://github.com/status-im/status-desktop/issues/11153\r\n\r\n**4. Encryption for token gated channels that are inside Open (not token gated) communities**\r\n[#10998](https://github.com/status-im/status-desktop/issues/10998)\r\n\r\n**5. Final screens and bits and bobs needed prior to public beta**\r\n- Modal that's shown every time after login, reminding user's that Status Desktop is in Beta [#11044](https://github.com/status-im/status-desktop/issues/11044)\r\n- The bug with 'requests to join' a community not constantly arriving, or sometimes arriving after a delay, must be fixed. [#8264](https://github.com/status-im/status-desktop/issues/8264)\r\n- Anything that didn't get completed in 0.13 related to new share URL format\r\n- All the outstanding bugs and small items that got pushed into the 0.14 milestone.\r\n\r\n\r\n**--- Things that we SHOULD NOT work on during the 0.14 cycle ---**\r\n- Messaging and UI teams shouldn't work on perf. in 0.14 (but Wallet team should!)\r\n- Anything big mutual contacts related, other than fixing small bugs we find like #10497 #10498 #11120 #11121  (hopefully this functionality working good enough now!)\r\n\r\n**--- Wallet Team ---**\r\n\r\n1. Finish any outstanding work related to Activity screens (top priority - aim to have complete by July 14th)\r\n\r\n2. Updated Wallet Settings screens UI inc. account syncing functionality  *Synced information should immediately be reflected in the UI after it is received (sometimes synced info is currently only displayed after the next app restart, this needs to be fixed)*\r\n\r\n3. Wallet performance and memory consumption optimisations\r\n\r\n4. Fix bugs, clean up loose ends (to get things in a good state before the work on the Mobile wallet starts)\r\n\r\n\r\n\r\n\r\n\r\n",
    "creator": {
      "login": "iurimatias",
      "id": 176720,
      "node_id": "MDQ6VXNlcjE3NjcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iurimatias",
      "html_url": "https://github.com/iurimatias",
      "followers_url": "https://api.github.com/users/iurimatias/followers",
      "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
      "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
      "organizations_url": "https://api.github.com/users/iurimatias/orgs",
      "repos_url": "https://api.github.com/users/iurimatias/repos",
      "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iurimatias/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 114,
    "closed_issues": 143,
    "state": "open",
    "created_at": "2022-09-28T20:32:56Z",
    "updated_at": "2023-07-17T14:25:57Z",
    "due_on": "2023-08-18T07:00:00Z",
    "closed_at": null
  },
  "comments": 7,
  "created_at": "2023-06-19T19:36:16Z",
  "updated_at": "2023-07-17T13:52:03Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nThis task is to implement one of the graphs in the Owner's Commnity Overview view.\r\n\r\nYou have to do ONE of the three graphs. Choose the simplest one. \r\n\r\nThere is: \r\n\r\n- Nb of Members over time\r\n![image](https://github.com/status-im/status-desktop/assets/11926403/674308ad-c436-43de-b0c5-6032eb62c57a)\r\n\r\n-  Messages per month\r\n![image](https://github.com/status-im/status-desktop/assets/11926403/c9bbe22b-c63d-4943-a09f-a6c176716813)\r\n\r\n- Control node uptime\r\n![image](https://github.com/status-im/status-desktop/assets/11926403/c85632c8-c052-4e06-9b76-e6eb0b03e080)\r\n\r\nDesign https://www.figma.com/file/17fc13UBFvInrLgNUKJJg5/Kuba%E2%8E%9CDesktop?type=design&node-id=29648-618516&t=iOq5Q8V0ftXMj4qM-0\r\n\r\nAgain, choose only one of the three, the simplest one. The graph component should already exist, ask the Wallet team where it is, how it works and what type of data it supports. If we only support line graphs for example, then we'd better do the number of members.\r\n\r\nWe currently do not store any historical data, so you'll need to implement that in status-go. The Owner, TokenMaster admins and Admins all have access to this information.\r\nThe best way to do it would be for the Control to aggregate the data and share it with the admins.\r\nOf course, no personal data needs to be saved, only numbers and dates.\r\n\r\nAlso, ignore the bottom of the graph, it is **not** part of the scope. (the part where you can select the time frame to choose) \r\n\r\nIf doing the top part (time selector for 1H, 1D, 7D, etc) is also harder and/or not supported by the current component, do not do it.\r\n\r\nThe goal of this task is to populate the Overview screen so it's not as empty, while keeping it as simple as possible\r\n\r\n### Acceptance Criteria\r\n\r\n- The owner's Overview page in the Management panel now has one of the graphs from the list above.\r\n- The graph contains local info about the community and evolves over time\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/11152/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/11152/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1597674555",
    "html_url": "https://github.com/status-im/status-desktop/issues/11152#issuecomment-1597674555",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11152",
    "id": 1597674555,
    "node_id": "IC_kwDOD5KrTM5fOpQ7",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-19T19:42:24Z",
    "updated_at": "2023-06-19T19:42:24Z",
    "author_association": "MEMBER",
    "body": "@John-44 in the description I wrote \"Only the owner node needs to aggregate that data\", but I want to confirm if that's correct. \r\n\r\nShould Admins also show the graph? If so, they'll have to aggregate the data too (simpler than sharing the data over the network IMO)",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1597674555/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1598527282",
    "html_url": "https://github.com/status-im/status-desktop/issues/11152#issuecomment-1598527282",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11152",
    "id": 1598527282,
    "node_id": "IC_kwDOD5KrTM5fR5cy",
    "user": {
      "login": "John-44",
      "id": 22846356,
      "node_id": "MDQ6VXNlcjIyODQ2MzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/22846356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/John-44",
      "html_url": "https://github.com/John-44",
      "followers_url": "https://api.github.com/users/John-44/followers",
      "following_url": "https://api.github.com/users/John-44/following{/other_user}",
      "gists_url": "https://api.github.com/users/John-44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/John-44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/John-44/subscriptions",
      "organizations_url": "https://api.github.com/users/John-44/orgs",
      "repos_url": "https://api.github.com/users/John-44/repos",
      "events_url": "https://api.github.com/users/John-44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/John-44/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-20T10:35:50Z",
    "updated_at": "2023-06-20T15:31:12Z",
    "author_association": "NONE",
    "body": "@jrainville this graph should be visible to all Admins and TokenMasters of the community (they all have access to the community's admin area), in addition to the Owner.\r\n\r\nI suppose the way to do this would be for the Control Node to aggregate the data, but this data would also then need to be sent to Admins and TokenMasters so that they can access the data when the Control Node is offline.\r\n\r\nIt's fine in the data only extends to the last date the Control Node was online e.g. if the Control Node has been offline for 7 days, the Admins and TokenMasters should only see the data up until the point he Control Node went off line (in this scenario the data the Admins and TokenMasters would see would end 7 days in the past)",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1598527282/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1621762297",
    "html_url": "https://github.com/status-im/status-desktop/issues/11152#issuecomment-1621762297",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11152",
    "id": 1621762297,
    "node_id": "IC_kwDOD5KrTM5gqiD5",
    "user": {
      "login": "alexjba",
      "id": 47811206,
      "node_id": "MDQ6VXNlcjQ3ODExMjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexjba",
      "html_url": "https://github.com/alexjba",
      "followers_url": "https://api.github.com/users/alexjba/followers",
      "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
      "organizations_url": "https://api.github.com/users/alexjba/orgs",
      "repos_url": "https://api.github.com/users/alexjba/repos",
      "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexjba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-05T13:28:59Z",
    "updated_at": "2023-07-05T13:28:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jrainville Is it planned for messenger team to implement it end-to-end?\r\nIf so, we could split it. The UI team could implement the UI with mocked data and messenger team the backend. WDYT?",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1621762297/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1621822234",
    "html_url": "https://github.com/status-im/status-desktop/issues/11152#issuecomment-1621822234",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11152",
    "id": 1621822234,
    "node_id": "IC_kwDOD5KrTM5gqwsa",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-05T14:00:44Z",
    "updated_at": "2023-07-05T14:00:44Z",
    "author_association": "MEMBER",
    "body": "As discussed with @alexandraB99 , as was planning for our team to do it end to end, but since it seems you're already doing part of the Overview page and are willing to help, then yes, I'll agree to the help.\r\n\r\nIf you can first start by finding which types of graphs are available in the component for now, it will help decide which of the three graphs we'll do.\r\n\r\nThen, you can create a new issue to do a mocked UI.\r\n\r\nThanks.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1621822234/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1623540156",
    "html_url": "https://github.com/status-im/status-desktop/issues/11152#issuecomment-1623540156",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11152",
    "id": 1623540156,
    "node_id": "IC_kwDOD5KrTM5gxUG8",
    "user": {
      "login": "alexjba",
      "id": 47811206,
      "node_id": "MDQ6VXNlcjQ3ODExMjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexjba",
      "html_url": "https://github.com/alexjba",
      "followers_url": "https://api.github.com/users/alexjba/followers",
      "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
      "organizations_url": "https://api.github.com/users/alexjba/orgs",
      "repos_url": "https://api.github.com/users/alexjba/repos",
      "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexjba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-06T11:45:34Z",
    "updated_at": "2023-07-06T11:45:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jrainville We have out of the box support for `Nb of Members over time` and `Messages per month` (bar and line chart). Implementing `Control node uptime` seems to require a custom solution.\r\n\r\nHere's the supported chart types: https://www.chartjs.org/docs/2.9.4/charts/",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1623540156/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1623812942",
    "html_url": "https://github.com/status-im/status-desktop/issues/11152#issuecomment-1623812942",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11152",
    "id": 1623812942,
    "node_id": "IC_kwDOD5KrTM5gyWtO",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-06T14:46:24Z",
    "updated_at": "2023-07-06T14:46:24Z",
    "author_association": "MEMBER",
    "body": "We decided to go with the Messages per month graph, since we already have all the data available. We'll just need a query to get it",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1623812942/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1623819942",
    "html_url": "https://github.com/status-im/status-desktop/issues/11152#issuecomment-1623819942",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11152",
    "id": 1623819942,
    "node_id": "IC_kwDOD5KrTM5gyYam",
    "user": {
      "login": "alexjba",
      "id": 47811206,
      "node_id": "MDQ6VXNlcjQ3ODExMjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexjba",
      "html_url": "https://github.com/alexjba",
      "followers_url": "https://api.github.com/users/alexjba/followers",
      "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
      "organizations_url": "https://api.github.com/users/alexjba/orgs",
      "repos_url": "https://api.github.com/users/alexjba/repos",
      "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexjba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-06T14:50:50Z",
    "updated_at": "2023-07-06T14:50:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "UI task: https://github.com/status-im/status-desktop/issues/11440",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1623819942/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
