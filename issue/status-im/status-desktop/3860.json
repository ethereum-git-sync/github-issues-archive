{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/3860",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/3860/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/3860/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/3860/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/3860",
  "id": 1030284555,
  "node_id": "I_kwDOD5KrTM49aOUL",
  "number": 3860,
  "title": "Adapt `StatusAppNavBar` to the new refactoring changes",
  "user": {
    "login": "saledjenic",
    "id": 86303051,
    "node_id": "MDQ6VXNlcjg2MzAzMDUx",
    "avatar_url": "https://avatars.githubusercontent.com/u/86303051?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/saledjenic",
    "html_url": "https://github.com/saledjenic",
    "followers_url": "https://api.github.com/users/saledjenic/followers",
    "following_url": "https://api.github.com/users/saledjenic/following{/other_user}",
    "gists_url": "https://api.github.com/users/saledjenic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/saledjenic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/saledjenic/subscriptions",
    "organizations_url": "https://api.github.com/users/saledjenic/orgs",
    "repos_url": "https://api.github.com/users/saledjenic/repos",
    "events_url": "https://api.github.com/users/saledjenic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/saledjenic/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2351074091,
      "node_id": "MDU6TGFiZWwyMzUxMDc0MDkx",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/refactor",
      "name": "refactor",
      "color": "ef9870",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "saledjenic",
    "id": 86303051,
    "node_id": "MDQ6VXNlcjg2MzAzMDUx",
    "avatar_url": "https://avatars.githubusercontent.com/u/86303051?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/saledjenic",
    "html_url": "https://github.com/saledjenic",
    "followers_url": "https://api.github.com/users/saledjenic/followers",
    "following_url": "https://api.github.com/users/saledjenic/following{/other_user}",
    "gists_url": "https://api.github.com/users/saledjenic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/saledjenic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/saledjenic/subscriptions",
    "organizations_url": "https://api.github.com/users/saledjenic/orgs",
    "repos_url": "https://api.github.com/users/saledjenic/repos",
    "events_url": "https://api.github.com/users/saledjenic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/saledjenic/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "saledjenic",
      "id": 86303051,
      "node_id": "MDQ6VXNlcjg2MzAzMDUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/86303051?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saledjenic",
      "html_url": "https://github.com/saledjenic",
      "followers_url": "https://api.github.com/users/saledjenic/followers",
      "following_url": "https://api.github.com/users/saledjenic/following{/other_user}",
      "gists_url": "https://api.github.com/users/saledjenic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saledjenic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saledjenic/subscriptions",
      "organizations_url": "https://api.github.com/users/saledjenic/orgs",
      "repos_url": "https://api.github.com/users/saledjenic/repos",
      "events_url": "https://api.github.com/users/saledjenic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saledjenic/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2021-10-19T13:05:01Z",
  "updated_at": "2022-01-10T14:09:57Z",
  "closed_at": "2022-01-10T14:09:57Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "During this refactoring phase we introduced new `sectionsModel` (we didn't have something like this before) which is part of `mainModule` which unites all applications' sections to a single model with the aim to sort out the things there, make them uniform and make switching and working with app sections easier.\r\n\r\nWithin this ticket we need to update qml part, most likely only the `StatusAppNavBar` component, to work the same as it works now, but with different source. Don't worry if there is no all sections visible in this moment cause only `chatSection` and `communitySection/s` are added so far, but the code should be generic and it should know how to display other sections when we add them.\r\n\r\nWe have as much sections as many nav bar buttons in the application navigation bar.\r\n\r\nSo `sectionModel` will always contain the items in the order how they should be displayed in the navigation bar in top-down direction. \r\n\r\nOne should use `refactoring/app_sections` branch as a base branch to test this.\r\n\r\n- [here](https://github.com/status-im/status-desktop/blob/refactoring/app_sections/src/app/modules/main/model.nim) you may see how exposed model looks\r\n- [here](https://github.com/status-im/status-desktop/blob/refactoring/app_sections/src/app/modules/main/item.nim) corresponding items\r\n- [here](https://github.com/status-im/status-desktop/blob/c1422b25cb42813e25916284ecc6c2571d18289f/src/app/modules/main/private_interfaces/module_base_interface.nim#L8) what types of sections we have registered so far (there can be multiple communities each with different id, but the same type)\r\n\r\nTo set active section this call should be used `mainModule.setActiveSectionById(model.id)` where `model.id` refers to the section id.",
  "closed_by": {
    "login": "iurimatias",
    "id": 176720,
    "node_id": "MDQ6VXNlcjE3NjcyMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/iurimatias",
    "html_url": "https://github.com/iurimatias",
    "followers_url": "https://api.github.com/users/iurimatias/followers",
    "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
    "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
    "organizations_url": "https://api.github.com/users/iurimatias/orgs",
    "repos_url": "https://api.github.com/users/iurimatias/repos",
    "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
    "received_events_url": "https://api.github.com/users/iurimatias/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/3860/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/3860/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/946729241",
    "html_url": "https://github.com/status-im/status-desktop/issues/3860#issuecomment-946729241",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/3860",
    "id": 946729241,
    "node_id": "IC_kwDOD5KrTM44bfEZ",
    "user": {
      "login": "0x-r4bbit",
      "id": 445106,
      "node_id": "MDQ6VXNlcjQ0NTEwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/445106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x-r4bbit",
      "html_url": "https://github.com/0x-r4bbit",
      "followers_url": "https://api.github.com/users/0x-r4bbit/followers",
      "following_url": "https://api.github.com/users/0x-r4bbit/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x-r4bbit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x-r4bbit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x-r4bbit/subscriptions",
      "organizations_url": "https://api.github.com/users/0x-r4bbit/orgs",
      "repos_url": "https://api.github.com/users/0x-r4bbit/repos",
      "events_url": "https://api.github.com/users/0x-r4bbit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x-r4bbit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-19T13:33:43Z",
    "updated_at": "2021-10-19T13:33:43Z",
    "author_association": "MEMBER",
    "body": "Hi @saledjenic \r\n\r\nlemme add some thoughts on this here, just to clarify some things:\r\n\r\nAt the moment, `StatusAppNavBar` works like this:\r\n\r\n```qml\r\nStatusAppNavBar {\r\n    navBarChatButton: StatusNavBarTabButton {\r\n        ...\r\n    }\r\n    navBarCommunityTabButtons.model: ListModel {\r\n        ...\r\n    }\r\n    navBarCommunityTabButtons.delegate: StatusNavBarTabButton {\r\n        ...\r\n    }\r\n    navBarTabButtons: [\r\n        StatusNavBarTabButton {\r\n            ...\r\n        },\r\n        ...\r\n    ]\r\n}\r\n```\r\n\r\nAs you can see, it consists of three sections:\r\n\r\n1. The chat section button. This one is static because it's always rendered at the top all the time, regardless of how many communities or other sections exist.\r\n2. The community buttons. Every community represents a button here and therefore has to be dynamic.\r\n3. All other section buttons. A static list, because we know which sections exist.\r\n\r\nNow, the reason why this is split up into three sections is because we have one part that can grow at any point (the communities) but shouldn't break the UI. If there are more communities than space available in the app nav bar, that one particular section becomes scrollable:\r\n\r\n<img width=\"426\" alt=\"Screenshot 2021-10-19 at 15 29 51\" src=\"https://user-images.githubusercontent.com/445106/137919706-c5066b0c-c213-48de-9db9-2187ea495dd7.png\">\r\n\r\nIf we want this to continue to behave the same way, we need all communities in a separate list.\r\n\r\nThis can also be done inside the component if we just get a list of sections (although I'd argue that this component should work mostly statically), however it'll obviously put the additional work there as well. Meaning that the component has to recalculate the community button list if there are changes at runtime etc.\r\n\r\nDo you think it's strictly necessary to go down that path, or could Status Desktop supply (most) of the sections still statically?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/946729241/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/946922016",
    "html_url": "https://github.com/status-im/status-desktop/issues/3860#issuecomment-946922016",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/3860",
    "id": 946922016,
    "node_id": "IC_kwDOD5KrTM44cOIg",
    "user": {
      "login": "saledjenic",
      "id": 86303051,
      "node_id": "MDQ6VXNlcjg2MzAzMDUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/86303051?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saledjenic",
      "html_url": "https://github.com/saledjenic",
      "followers_url": "https://api.github.com/users/saledjenic/followers",
      "following_url": "https://api.github.com/users/saledjenic/following{/other_user}",
      "gists_url": "https://api.github.com/users/saledjenic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saledjenic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saledjenic/subscriptions",
      "organizations_url": "https://api.github.com/users/saledjenic/orgs",
      "repos_url": "https://api.github.com/users/saledjenic/repos",
      "events_url": "https://api.github.com/users/saledjenic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saledjenic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-19T17:01:58Z",
    "updated_at": "2021-10-19T17:01:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@PascalPrecht yes, I've already seen all you stated here, and it's clear what was intention there, but now we have sections at the backend, and items of the `sectionsModel` of the `mainModule` describe actually each `StatusNavBarTabButton` with their properties. Those properties should be used to achieve the same what we have now. I've just added `enabled` field there.\r\n\r\nThe whole thing is to have them maintained from the Nim side, so Nim will tell to UI what to display and UI should know how to display that.\r\n\r\nWith these fields you or whoever should be able to achieve the same what we have now:\r\n```\r\nsectionType: int\r\nid: string\r\nname: string\r\nimage: string\r\nicon: string\r\ncolor: string\r\nmentionsCount: int\r\nunviewedMessagesCount: int\r\nenabled: bool\r\n```\r\n\r\n> Do you think it's strictly necessary to go down that path, or could Status Desktop supply (most) of the sections still statically?\r\n\r\nYes, we need that change, and now is the moment for that (refactoring time). Currently I am moving `global` and `appSettings` to backend and we will configure the app from Nim soon. One thing more... not in this phase, but later maybe in some other refactoring phase, we will get to the state we want to have to don't load modules which are not enabled and running corresponding services.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/946922016/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
