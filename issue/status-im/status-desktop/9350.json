{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/9350",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/9350/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/9350/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/9350/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/9350",
  "id": 1561957532,
  "node_id": "I_kwDOD5KrTM5dGZSc",
  "number": 9350,
  "title": "Setup Linux CI for Qt5.15.8+KDAB using minimum glibc version compatibility",
  "user": {
    "login": "alexjba",
    "id": 47811206,
    "node_id": "MDQ6VXNlcjQ3ODExMjA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alexjba",
    "html_url": "https://github.com/alexjba",
    "followers_url": "https://api.github.com/users/alexjba/followers",
    "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
    "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
    "organizations_url": "https://api.github.com/users/alexjba/orgs",
    "repos_url": "https://api.github.com/users/alexjba/repos",
    "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alexjba/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2987757762,
      "node_id": "MDU6TGFiZWwyOTg3NzU3NzYy",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/to%20analyze",
      "name": "to analyze",
      "color": "5CC421",
      "default": false,
      "description": ""
    },
    {
      "id": 6005635869,
      "node_id": "LA_kwDOD5KrTM8AAAABZfa7HQ",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Desktop%20CI",
      "name": "E:Desktop CI",
      "color": "46A660",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "yakimant",
    "id": 1529006,
    "node_id": "MDQ6VXNlcjE1MjkwMDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1529006?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/yakimant",
    "html_url": "https://github.com/yakimant",
    "followers_url": "https://api.github.com/users/yakimant/followers",
    "following_url": "https://api.github.com/users/yakimant/following{/other_user}",
    "gists_url": "https://api.github.com/users/yakimant/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/yakimant/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/yakimant/subscriptions",
    "organizations_url": "https://api.github.com/users/yakimant/orgs",
    "repos_url": "https://api.github.com/users/yakimant/repos",
    "events_url": "https://api.github.com/users/yakimant/events{/privacy}",
    "received_events_url": "https://api.github.com/users/yakimant/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "yakimant",
      "id": 1529006,
      "node_id": "MDQ6VXNlcjE1MjkwMDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1529006?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yakimant",
      "html_url": "https://github.com/yakimant",
      "followers_url": "https://api.github.com/users/yakimant/followers",
      "following_url": "https://api.github.com/users/yakimant/following{/other_user}",
      "gists_url": "https://api.github.com/users/yakimant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yakimant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yakimant/subscriptions",
      "organizations_url": "https://api.github.com/users/yakimant/orgs",
      "repos_url": "https://api.github.com/users/yakimant/repos",
      "events_url": "https://api.github.com/users/yakimant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yakimant/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/61",
    "html_url": "https://github.com/status-im/status-desktop/milestone/61",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/61/labels",
    "id": 8739485,
    "node_id": "MI_kwDOD5KrTM4AhVqd",
    "number": 61,
    "title": "0.16",
    "description": "**1. Complete initial airdrop functionality**\r\n- Airdrop history screens\r\n- Ability to airdrop based on in-Community activity (No. of msg, No. msg in time range, joining a community, length of community membership)  Ability to combine multiple attributes into an airdrop\r\n- Ability to token gate airdrops\r\n- Live airdrop gas estimation when setting up airdrop\r\n\r\n**2. Community Admin functionality enhancements**\r\n- optional service to once a month auto-kick all members who haven't been online for between 30 and 60 days (e.g. auto-kick members whose profile information like Name, Avatar, etc... can no longer be fetched)\r\n\r\n**3.  IPFS service for community minted NFTs and other binary community assets**\r\n\r\n- In order for NFT tokens minted in our UI to be correctly displayed with all metadata on OpenSea, their assets need to be stored in IPFS (because IPFS is supported by OpenSea)\r\n\r\n- Will work something like this: IPFS pinning server is integrated into Status Desktop. When a community mints a NFT, the associated assets are IPFS pinned by the community control node.  The community control node then sends a 'user invisible message' to all other community members via Waku, and the Status Desktop installs of all community members then fetch the NFT assets and pin them as well.  This means that every member of a community that is running Status Desktop will always be 'IPFS pinning' all assets related to the community, so that as long as one community member that uses Status Desktop is online, the assets are guaranteed to be available via IPFS.\r\n\r\n- Use a similar scheme to the above could be used for other community assets (that are not related to token minting) in the future like: Community banner image, community icon, community description, etc...\r\n\r\n- Use a similar scheme to the above could be used for status user data in the future.  Status users pin assets related to their profile (banner image, avatar, showcase contents) using IPFS, and all of the user's mutual contacts also pin that user's profile data.  Must incorporate a setting so that users can opt-out of pinning their mutual contact's profile data.\r\n\r\n**4. QR scanner**\r\n- Needed for private key transfer\r\n- Ethereum key QRs (send modal triggered)\r\n- User Share URL in a QR (opens user profile dialogue) \r\n- Community and Channel inside Community URL in QRs (takes user to Community or Channel in Community)\r\n\r\n\r\n**5. Telegram history import into a single channel in an existing community**\r\n\r\n\r\n**--- Wallet Team ---**\r\n\r\n1. Total balance graphs for 'All accounts' and each individual account\r\n\r\n2. Advanced transaction signing\r\n\r\n",
    "creator": {
      "login": "iurimatias",
      "id": 176720,
      "node_id": "MDQ6VXNlcjE3NjcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iurimatias",
      "html_url": "https://github.com/iurimatias",
      "followers_url": "https://api.github.com/users/iurimatias/followers",
      "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
      "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
      "organizations_url": "https://api.github.com/users/iurimatias/orgs",
      "repos_url": "https://api.github.com/users/iurimatias/repos",
      "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iurimatias/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 45,
    "closed_issues": 0,
    "state": "open",
    "created_at": "2022-12-09T15:06:43Z",
    "updated_at": "2023-10-12T11:30:14Z",
    "due_on": "2024-01-31T08:00:00Z",
    "closed_at": null
  },
  "comments": 3,
  "created_at": "2023-01-30T08:20:08Z",
  "updated_at": "2023-10-13T12:48:47Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nPrebuilt binaries of Qt5.15.8 are compiled using glibc 2.28 and migrating to this version will breaking compatibility with older linux versions. \r\n\r\nThe purpose of this task is to setup the Linux CI to use latest Qt5.15.8 + KDAB fixes and keep the glibc dependency to a lower version (Ideally 2.23 or lower). Also, we will have this issue when moving to Qt6 and solving this will also help long term with newer qt versions.\r\n\r\nThere are multiple options that could be considered:\r\n1. Finding an out of the box setup - precompiled Qt binaries compatible with older linux versions\r\n1. Compiling Qt5.15.8 with KDAB patches + Status and link with glibc 2.23 (probably the easiest way to do it is on a linux distribution that uses this version)\r\n2. Try this hack https://github.com/wheybags/glibc_version_header and enable Nix environment on CI\r\n3. https://github.com/phusion/holy-build-box\r\n\r\nOn the CI side there are two approaches that were considered when migrating to Qt5.15: Docker and Nix. Nix is preferred, but it has the same limitation - will break compatibility with older linux dostros. We're using Docker for now.\r\n\r\nSee: #9222, #9232",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/9350/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/9350/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1658627215",
    "html_url": "https://github.com/status-im/status-desktop/issues/9350#issuecomment-1658627215",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9350",
    "id": 1658627215,
    "node_id": "IC_kwDOD5KrTM5i3KSP",
    "user": {
      "login": "anastasiyaig",
      "id": 82375995,
      "node_id": "MDQ6VXNlcjgyMzc1OTk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/82375995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anastasiyaig",
      "html_url": "https://github.com/anastasiyaig",
      "followers_url": "https://api.github.com/users/anastasiyaig/followers",
      "following_url": "https://api.github.com/users/anastasiyaig/following{/other_user}",
      "gists_url": "https://api.github.com/users/anastasiyaig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anastasiyaig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anastasiyaig/subscriptions",
      "organizations_url": "https://api.github.com/users/anastasiyaig/orgs",
      "repos_url": "https://api.github.com/users/anastasiyaig/repos",
      "events_url": "https://api.github.com/users/anastasiyaig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anastasiyaig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-31T15:42:46Z",
    "updated_at": "2023-07-31T15:42:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@alexjba @jakubgs we need that for all platforms (windows and mac inclusive). windows now is 5.15.2 and arm mac is 5.15.8 when intel is 5.15.5",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1658627215/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1660181882",
    "html_url": "https://github.com/status-im/status-desktop/issues/9350#issuecomment-1660181882",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9350",
    "id": 1660181882,
    "node_id": "IC_kwDOD5KrTM5i9F16",
    "user": {
      "login": "jakubgs",
      "id": 2212681,
      "node_id": "MDQ6VXNlcjIyMTI2ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2212681?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakubgs",
      "html_url": "https://github.com/jakubgs",
      "followers_url": "https://api.github.com/users/jakubgs/followers",
      "following_url": "https://api.github.com/users/jakubgs/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakubgs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakubgs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakubgs/subscriptions",
      "organizations_url": "https://api.github.com/users/jakubgs/orgs",
      "repos_url": "https://api.github.com/users/jakubgs/repos",
      "events_url": "https://api.github.com/users/jakubgs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakubgs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-01T12:08:28Z",
    "updated_at": "2023-08-01T12:08:28Z",
    "author_association": "MEMBER",
    "body": "Actually, we could combine using Nix together with use of https://github.com/wheybags/glibc_version_header.\r\nAnd that might be the best option for us, since it would provide locked Qt for both Linux and MacOS, and possibly even Windows if we managed to use WSL for CI. Though that might require extra work.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1660181882/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1761465619",
    "html_url": "https://github.com/status-im/status-desktop/issues/9350#issuecomment-1761465619",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9350",
    "id": 1761465619,
    "node_id": "IC_kwDOD5KrTM5o_dUT",
    "user": {
      "login": "yakimant",
      "id": 1529006,
      "node_id": "MDQ6VXNlcjE1MjkwMDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1529006?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yakimant",
      "html_url": "https://github.com/yakimant",
      "followers_url": "https://api.github.com/users/yakimant/followers",
      "following_url": "https://api.github.com/users/yakimant/following{/other_user}",
      "gists_url": "https://api.github.com/users/yakimant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yakimant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yakimant/subscriptions",
      "organizations_url": "https://api.github.com/users/yakimant/orgs",
      "repos_url": "https://api.github.com/users/yakimant/repos",
      "events_url": "https://api.github.com/users/yakimant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yakimant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-13T12:48:46Z",
    "updated_at": "2023-10-13T12:48:46Z",
    "author_association": "MEMBER",
    "body": "Hi guys, I started to research on this issue.\r\n\r\nHere is a first finding - there is no binary for Qt 5.15.3+ available.\r\n\r\n```\r\n❯ aqt list-qt linux desktop\r\n5.9.0 5.9.1 5.9.2 5.9.3 5.9.4 5.9.5 5.9.6 5.9.7 5.9.8 5.9.9\r\n5.10.0 5.10.1\r\n5.11.0 5.11.1 5.11.2 5.11.3\r\n5.12.0 5.12.1 5.12.2 5.12.3 5.12.4 5.12.5 5.12.6 5.12.7 5.12.8 5.12.9 5.12.10 5.12.11 5.12.12\r\n5.13.0 5.13.1 5.13.2\r\n5.14.0 5.14.1 5.14.2\r\n5.15.0 5.15.1 5.15.2\r\n6.0.0 6.0.1 6.0.2 6.0.3 6.0.4\r\n6.1.0 6.1.1 6.1.2 6.1.3\r\n6.2.0 6.2.1 6.2.2 6.2.3 6.2.4\r\n6.3.0 6.3.1 6.3.2\r\n6.4.0 6.4.1 6.4.2 6.4.3\r\n6.5.0 6.5.1 6.5.2 6.5.3\r\n6.6.0\r\n```\r\nwhich taked binaries from https://download.qt.io/online/qtsdkrepository/linux_x64/desktop/\r\n\r\nSee https://github.com/miurahr/aqtinstall/pull/572\r\n\r\nDo I miss smth here and there are other \"Prebuilt binaries of Qt5.15.8\" for Linux?",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1761465619/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
