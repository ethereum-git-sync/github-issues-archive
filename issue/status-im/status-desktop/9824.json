{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/9824",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/9824/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/9824/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/9824/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/9824",
  "id": 1617458910,
  "node_id": "I_kwDOD5KrTM5gaHbe",
  "number": 9824,
  "title": "Investigate OpenSea publishing for our Minting process",
  "user": {
    "login": "jrainville",
    "id": 11926403,
    "node_id": "MDQ6VXNlcjExOTI2NDAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jrainville",
    "html_url": "https://github.com/jrainville",
    "followers_url": "https://api.github.com/users/jrainville/followers",
    "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
    "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
    "organizations_url": "https://api.github.com/users/jrainville/orgs",
    "repos_url": "https://api.github.com/users/jrainville/repos",
    "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jrainville/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2987757762,
      "node_id": "MDU6TGFiZWwyOTg3NzU3NzYy",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/to%20analyze",
      "name": "to analyze",
      "color": "5CC421",
      "default": false,
      "description": ""
    },
    {
      "id": 3955125927,
      "node_id": "LA_kwDOD5KrTM7rvm6n",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Communities",
      "name": "E:Communities",
      "color": "E56631",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "dlipicar",
    "id": 11161531,
    "node_id": "MDQ6VXNlcjExMTYxNTMx",
    "avatar_url": "https://avatars.githubusercontent.com/u/11161531?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dlipicar",
    "html_url": "https://github.com/dlipicar",
    "followers_url": "https://api.github.com/users/dlipicar/followers",
    "following_url": "https://api.github.com/users/dlipicar/following{/other_user}",
    "gists_url": "https://api.github.com/users/dlipicar/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dlipicar/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dlipicar/subscriptions",
    "organizations_url": "https://api.github.com/users/dlipicar/orgs",
    "repos_url": "https://api.github.com/users/dlipicar/repos",
    "events_url": "https://api.github.com/users/dlipicar/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dlipicar/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "dlipicar",
      "id": 11161531,
      "node_id": "MDQ6VXNlcjExMTYxNTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/11161531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlipicar",
      "html_url": "https://github.com/dlipicar",
      "followers_url": "https://api.github.com/users/dlipicar/followers",
      "following_url": "https://api.github.com/users/dlipicar/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlipicar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlipicar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlipicar/subscriptions",
      "organizations_url": "https://api.github.com/users/dlipicar/orgs",
      "repos_url": "https://api.github.com/users/dlipicar/repos",
      "events_url": "https://api.github.com/users/dlipicar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlipicar/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/55",
    "html_url": "https://github.com/status-im/status-desktop/milestone/55",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/55/labels",
    "id": 8475711,
    "node_id": "MI_kwDOD5KrTM4AgVQ_",
    "number": 55,
    "title": "0.11.0",
    "description": "Communities:\r\n- Token Based Functionality\r\n\r\nGeneral:\r\n- User Profile showcase\r\n",
    "creator": {
      "login": "iurimatias",
      "id": 176720,
      "node_id": "MDQ6VXNlcjE3NjcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iurimatias",
      "html_url": "https://github.com/iurimatias",
      "followers_url": "https://api.github.com/users/iurimatias/followers",
      "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
      "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
      "organizations_url": "https://api.github.com/users/iurimatias/orgs",
      "repos_url": "https://api.github.com/users/iurimatias/repos",
      "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iurimatias/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 195,
    "state": "closed",
    "created_at": "2022-09-28T20:32:13Z",
    "updated_at": "2023-04-24T18:15:13Z",
    "due_on": "2023-03-24T07:00:00Z",
    "closed_at": "2023-04-24T18:15:13Z"
  },
  "comments": 5,
  "created_at": "2023-03-09T15:20:57Z",
  "updated_at": "2023-03-24T19:16:09Z",
  "closed_at": "2023-03-24T19:16:09Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Mish mash of questions and discussions we've had in a group chat:\r\n\r\n- Initial message from John:\r\n  - Hyia jonathan-new Iuri , I was just having a conversation with anthony and MichalC (MichalC had a couple of questions about fetching assets for the token permissions setup screen), and one question came up that I didn't know the answer to, so wanted to ask if anybody else knows the answer.\r\nThe question is: when a community owner mints a collectable, how is all the metadata related to the collectable (Name, Description, Image, etc...) fetched by other Status users who have that token airdropped into their wallet?  A token minted by a community owner will in many cases be airdropped into the wallets of Status users who are not yet members of that community, and we need these tokens to be correctly displayed.\r\nI was wondering how is this functionality currently being implemented?  I can think of one way it could be implemented, and anthony suggested another totally different implementation option that might be better than what I had in mind, but I wanted to ask what the folks currently working on building this functionality have implemented (or are planning to do)?\r\n\r\n\r\n- Open Sea idea:\r\n  - jonathan-new Michal Pascal when I was speaking with anthony earlier today, he had a completly different suggestion that in hindsight seems completly obvious and could (if it works) be a massive simplification, better for scaling and a reliability improvement as well.\r\n  The idea is as follows:\r\n     - When a new Collectable is minted, it is published to OpenSea.   OpenSea might (???) watch the blockchain and automatically publish NFTs when they are detected.  However we would need to ensure the Collectable image is somehow uploaded to OpenSea as well.  There might be a delay between an NFT being published to OpenSea and its metadata inc. image being retrievable via the OpenSea API, if this is the case this delay can be handled in the UI/\r\nOpenSea does support Ethereum Mainnet, Optimism and Arbitrum, so we are all good in terms of OpenSea blockchain support.\r\n    - No need to worry about peridocially publishing to waku, no need to worry about waku scaling, no need to worry about waku reliability, no need to add additional code to the wallet to do something else in addition to the already supported usage of OpenSea.\r\nWDYT?  Worth of investigation?  I'm a bit embarrassed about not thinking about this idea before, if this works it could be a much simplier way of doing things\r\n\r\n- Some questions by Michal:\r\n  - OpenSea solution sounds reasonable. I understand that we can deploy the contract in the way we are doing this now and then just register this contract in OpenSea, am I correct ? Or the deployment will be done completely via OpenSea ?\r\nOur NFT has got an empty tokenUri, because we publish metadata to waku. Probably we will have to do this according to OpenSea standards: create metadata file and fill uri correctly.\r\nRegarding delays.. If we keep our current way of deployment (can we ?) and additionally register NFT in OpenSea, then this is not a problem. The wallet can display a default icon and then reload it when notified from OpenSea.\r\n\r\n- Other questions by Anthony:\r\n  - Sorry catching up here... before making big plan indeed, we need to understand opensea aggregator. Are they listening on chain event, in that case it would be immediate, are they running the aggregator daily, that would mean a delay. So it depends on this. Here we are only talking about erc721, not erc20. As those tokens are not in opensea but they are more \"standard\"\r\n\r\nFind anything you can about it and report here so we know if it's a good solution for our problems.",
  "closed_by": {
    "login": "jrainville",
    "id": 11926403,
    "node_id": "MDQ6VXNlcjExOTI2NDAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jrainville",
    "html_url": "https://github.com/jrainville",
    "followers_url": "https://api.github.com/users/jrainville/followers",
    "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
    "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
    "organizations_url": "https://api.github.com/users/jrainville/orgs",
    "repos_url": "https://api.github.com/users/jrainville/repos",
    "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jrainville/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/9824/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/9824/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1462541385",
    "html_url": "https://github.com/status-im/status-desktop/issues/9824#issuecomment-1462541385",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9824",
    "id": 1462541385,
    "node_id": "IC_kwDOD5KrTM5XLJxJ",
    "user": {
      "login": "dlipicar",
      "id": 11161531,
      "node_id": "MDQ6VXNlcjExMTYxNTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/11161531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlipicar",
      "html_url": "https://github.com/dlipicar",
      "followers_url": "https://api.github.com/users/dlipicar/followers",
      "following_url": "https://api.github.com/users/dlipicar/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlipicar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlipicar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlipicar/subscriptions",
      "organizations_url": "https://api.github.com/users/dlipicar/orgs",
      "repos_url": "https://api.github.com/users/dlipicar/repos",
      "events_url": "https://api.github.com/users/dlipicar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlipicar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-09T18:10:09Z",
    "updated_at": "2023-03-09T18:11:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "OpenSea recommends using the OpenZeppelin implementation (https://docs.opensea.io/docs/getting-started).\r\n\r\n```\r\nTo be listed on OpenSea, it's best if your items adhere to the latest [Open Zeppelin](https://github.com/OpenZeppelin/openzeppelin-solidity/tree/master/contracts/token/ERC721) implementation of ERC721.\r\n```\r\n\r\nAfter deploying the contract and minting the collectibles, you apparently don't need to register them in OpenSea for them to be listed there. There's no mention of any sort of delay, you should be able to immediately access it using link `https://<net>.opensea.io/assets/<asset_contract_address>/<token_id>`\r\n\r\nIf one adheres to the ERC721Metadata standard (https://docs.opensea.io/docs/2-adding-metadata) and provides metadata following their structure (https://docs.opensea.io/docs/metadata-standards), everything will be picked up automatically. If the `tokenURI` method is not implemented, you can contact the help center and give them any link with format `<your-api.com/any_path>/{token_id}` that returns the metadata in the mentioned format, but they will have to process that manually so there's a delay.\r\n\r\nThey apparently store a local cache of the metadata, and they update it under a couple conditions\r\n\r\n```\r\nTo refresh token metadata on OpenSea, you can emit on-chain events as defined in [EIP-4906](https://eips.ethereum.org/EIPS/eip-4906):\r\n\r\nevent MetadataUpdate(uint256 _tokenId);\r\nevent BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\r\n\r\nTo refresh a whole collection, emit _toTokenId with type(uint256).max\r\n\r\nFor ERC1155, metadata updates are supported via the [specification](https://eips.ethereum.org/EIPS/eip-1155#specification) for the event URI:\r\n\r\nevent URI(string _value, uint256 indexed _id);\r\n\r\nAlternatively, you can hit the OpenSea API with the force_update param:\r\n\r\nhttps://api.opensea.io/api/v1/asset/<your_contract_address>/<token_id>/?force_update=true\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1462541385/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1462543927",
    "html_url": "https://github.com/status-im/status-desktop/issues/9824#issuecomment-1462543927",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9824",
    "id": 1462543927,
    "node_id": "IC_kwDOD5KrTM5XLKY3",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-09T18:11:45Z",
    "updated_at": "2023-03-09T18:11:45Z",
    "author_association": "MEMBER",
    "body": "Ok cool. We already use OpenZeppelin implementations iirc cc @endulab @0x-r4bbit ",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1462543927/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1463410744",
    "html_url": "https://github.com/status-im/status-desktop/issues/9824#issuecomment-1463410744",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9824",
    "id": 1463410744,
    "node_id": "IC_kwDOD5KrTM5XOeA4",
    "user": {
      "login": "endulab",
      "id": 61889657,
      "node_id": "MDQ6VXNlcjYxODg5NjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/61889657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/endulab",
      "html_url": "https://github.com/endulab",
      "followers_url": "https://api.github.com/users/endulab/followers",
      "following_url": "https://api.github.com/users/endulab/following{/other_user}",
      "gists_url": "https://api.github.com/users/endulab/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/endulab/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/endulab/subscriptions",
      "organizations_url": "https://api.github.com/users/endulab/orgs",
      "repos_url": "https://api.github.com/users/endulab/repos",
      "events_url": "https://api.github.com/users/endulab/events{/privacy}",
      "received_events_url": "https://api.github.com/users/endulab/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-10T07:55:48Z",
    "updated_at": "2023-03-10T07:55:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes @jrainville , we have OpenZeppelin impl. \r\n\r\nWhen we deploy a contract , OpenSea will know about it, so does our wallet. This is a good information.\r\n\r\nRegarding contract metadata, the problem that we have is **storage**. Right now we keep it in waku and OpenSea does not understand waku. OpenSea requires something like this: \"image\": \"https://storage.googleapis.com/opensea-prod.appspot.com/creature/50.png\". @dlipicar does OpenSea offer some storage so we can place our metadata json and assets there ?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1463410744/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1463720600",
    "html_url": "https://github.com/status-im/status-desktop/issues/9824#issuecomment-1463720600",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9824",
    "id": 1463720600,
    "node_id": "IC_kwDOD5KrTM5XPpqY",
    "user": {
      "login": "dlipicar",
      "id": 11161531,
      "node_id": "MDQ6VXNlcjExMTYxNTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/11161531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlipicar",
      "html_url": "https://github.com/dlipicar",
      "followers_url": "https://api.github.com/users/dlipicar/followers",
      "following_url": "https://api.github.com/users/dlipicar/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlipicar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlipicar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlipicar/subscriptions",
      "organizations_url": "https://api.github.com/users/dlipicar/orgs",
      "repos_url": "https://api.github.com/users/dlipicar/repos",
      "events_url": "https://api.github.com/users/dlipicar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlipicar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-10T12:13:56Z",
    "updated_at": "2023-03-10T12:13:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@endulab hmm I think they will store your image if you do the minting through their website, but I don't think they have some sort of image storage service you can freely use. Any chance we can use IPFS? [They support that](https://docs.opensea.io/docs/metadata-standards).\r\n\r\n```\r\nIPFS and Arweave URIs\r\nOpenSea supports the storage of NFT metadata in decentralized file networks, so that they can’t be modified by a central party.\r\n\r\nIf you use [IPFS](https://ipfs.io/) to host your metadata, your URL should be in the format ipfs://<hash>. For example, ipfs://QmTy8w65yBXgyfG2ZBg5TrfB2hPjrDQH3RCQFJGkARStJb. If you plan to store on IPFS, we recommend [Pinata](https://pinata.cloud/) for easily storing data. Here's a tutorial by Chainlink for getting started: https://blog.chain.link/build-deploy-and-sell-your-own-dynamic-nft/.\r\n\r\n[Arweave](https://www.arweave.org/)'s equivalent is ar://<hash>. For example, ar://jK9sR4OrYvODj7PD3czIAyNJalub0-vdV_JAg1NqQ-o.\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1463720600/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1483294689",
    "html_url": "https://github.com/status-im/status-desktop/issues/9824#issuecomment-1483294689",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9824",
    "id": 1483294689,
    "node_id": "IC_kwDOD5KrTM5YaUfh",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-24T19:16:08Z",
    "updated_at": "2023-03-24T19:16:08Z",
    "author_association": "MEMBER",
    "body": "Closing as completed as the investigation is done",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1483294689/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
