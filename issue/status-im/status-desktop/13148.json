{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/13148",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/13148/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/13148/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/13148/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/13148",
  "id": 2069913306,
  "node_id": "I_kwDOD5KrTM57YF7a",
  "number": 13148,
  "title": "[StatusQ] Simplify WritableProxyModel internal structure",
  "user": {
    "login": "alexjba",
    "id": 47811206,
    "node_id": "MDQ6VXNlcjQ3ODExMjA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alexjba",
    "html_url": "https://github.com/alexjba",
    "followers_url": "https://api.github.com/users/alexjba/followers",
    "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
    "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
    "organizations_url": "https://api.github.com/users/alexjba/orgs",
    "repos_url": "https://api.github.com/users/alexjba/repos",
    "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alexjba/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2087353959,
      "node_id": "MDU6TGFiZWwyMDg3MzUzOTU5",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/ui-team",
      "name": "ui-team",
      "color": "1111ff",
      "default": false,
      "description": ""
    },
    {
      "id": 5843953760,
      "node_id": "LA_kwDOD5KrTM8AAAABXFOoYA",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Desktop%20Bugfixes%200.16",
      "name": "E:Desktop Bugfixes 0.16",
      "color": "5A1BE3",
      "default": false,
      "description": "Misc bug fixes in Desktop app overall for 0.16"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "alexjba",
    "id": 47811206,
    "node_id": "MDQ6VXNlcjQ3ODExMjA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alexjba",
    "html_url": "https://github.com/alexjba",
    "followers_url": "https://api.github.com/users/alexjba/followers",
    "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
    "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
    "organizations_url": "https://api.github.com/users/alexjba/orgs",
    "repos_url": "https://api.github.com/users/alexjba/repos",
    "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alexjba/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "alexjba",
      "id": 47811206,
      "node_id": "MDQ6VXNlcjQ3ODExMjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexjba",
      "html_url": "https://github.com/alexjba",
      "followers_url": "https://api.github.com/users/alexjba/followers",
      "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
      "organizations_url": "https://api.github.com/users/alexjba/orgs",
      "repos_url": "https://api.github.com/users/alexjba/repos",
      "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexjba/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2024-01-08T07:56:57Z",
  "updated_at": "2024-01-08T07:57:40Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "```\r\n    IndexedValues<QPersistentModelIndex> cache;\r\n    IndexedValues<QModelIndex> insertedRows;\r\n    int rowsAboutToBeInserted = 0;\r\n    QSet<QPersistentModelIndex> removedRows;\r\n    QVector<int> proxyToSourceRowMapping;\r\n    //internal operations can change dirty flag\r\n    bool canUpdateDirtyFlag = true;\r\n```\r\nRight now there is two maps, with persistent indexes and the normal ones, set for removed rows, vector with mapping and some additional variables.\r\n\r\nThe proposition would be to use a bit simpler structures:\r\n1. Mapping from source indexes, e.g. `QVector<int>` (containing index of the output model or -1 when not present in the output model).\r\n2. Mapping to both source model indexes and values provided by the user, e.g.:\r\n\r\n`QVector<QPair<int, QHash<int, QVariant>>>`\r\nwhere first `int` refers to index in the source model (or -1 when inserted to proxy). The nested hash holding inserted or overwritten values.\r\n\r\nPros:\r\n- O(1) access via data() (instead of log(n) in worst case currently)\r\n- only two structures containing everything, easy to understand\r\n- low memory footprint `QPair<int, QHash<int, QVariant>>` with empty hash is 16 bytes, and no dynamic memory allocation involved (QModelIndex - 24 bytes, QPersistenModelIndex - sizeof is 8 but dynamic allocation is performed). So it will consume ~1Mb for 50K items in source.\r\n- no cost related to QPersistenModelIndex (which are maintained internally by their source model on inserts, removes and so on)\r\n\r\nCons:\r\n- `QHash<int, QVariant>` empty qhash is created up-front for every entry, however the cost is not high as mentioned above\r\n- would require some changes in currently implemented algorithms\r\n- maybe a bit costy insert/remove/move (but probably not necessarily bc in `QVector<QPair<int, QHash<int, QVariant>>>` indices are always growing so binary search could be used, resulting in `O(log(n))` when searching for given source index in output model)\r\n\r\n_Originally posted by @micieslak in https://github.com/status-im/status-desktop/pull/12898#pullrequestreview-1777198318_\r\n            ",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/13148/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/13148/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
