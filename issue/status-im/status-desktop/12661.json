{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/12661",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/12661/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/12661/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/12661/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/12661",
  "id": 1983961134,
  "node_id": "I_kwDOD5KrTM52QNgu",
  "number": 12661,
  "title": "Toasts - Improve toasts management in qml layer and explore if we can have / or already have a central manager as well in nim backend",
  "user": {
    "login": "noeliaSD",
    "id": 97019400,
    "node_id": "U_kgDOBchmCA",
    "avatar_url": "https://avatars.githubusercontent.com/u/97019400?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/noeliaSD",
    "html_url": "https://github.com/noeliaSD",
    "followers_url": "https://api.github.com/users/noeliaSD/followers",
    "following_url": "https://api.github.com/users/noeliaSD/following{/other_user}",
    "gists_url": "https://api.github.com/users/noeliaSD/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/noeliaSD/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/noeliaSD/subscriptions",
    "organizations_url": "https://api.github.com/users/noeliaSD/orgs",
    "repos_url": "https://api.github.com/users/noeliaSD/repos",
    "events_url": "https://api.github.com/users/noeliaSD/events{/privacy}",
    "received_events_url": "https://api.github.com/users/noeliaSD/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2087353959,
      "node_id": "MDU6TGFiZWwyMDg3MzUzOTU5",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/ui-team",
      "name": "ui-team",
      "color": "1111ff",
      "default": false,
      "description": ""
    },
    {
      "id": 2351074091,
      "node_id": "MDU6TGFiZWwyMzUxMDc0MDkx",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/refactor",
      "name": "refactor",
      "color": "ef9870",
      "default": false,
      "description": ""
    },
    {
      "id": 6014779451,
      "node_id": "LA_kwDOD5KrTM8AAAABZoJAOw",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Desktop%20misc%20refactors",
      "name": "E:Desktop misc refactors",
      "color": "A6C799",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/61",
    "html_url": "https://github.com/status-im/status-desktop/milestone/61",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/61/labels",
    "id": 8739485,
    "node_id": "MI_kwDOD5KrTM4AhVqd",
    "number": 61,
    "title": "0.16",
    "description": "**1. Actioning Communities and Messaging dogfooding feedback**\r\n\r\n**2. Continue stabilization and bug fixing**\r\n\r\n**3.  Perhaps pull items in from 0.17 if all work items related to the two points above are completed**\r\n\r\n\r\n**--- Wallet Team ---**\r\n\r\n1. Complete support for Community minted assets\r\n\r\n2. Complete token visibility management screens\r\n\r\n3. Pre-tx signing dialog, for Community Admin, Browser, WalletConnet\r\n\r\n4. Complete WalletConnect support\r\n\r\n5. Improved 'saved accounts' functionality and 'share address' dialogue\r\n\r\n6. Continue fixing bugs, making optimisations and keeping tech debt low\r\n",
    "creator": {
      "login": "iurimatias",
      "id": 176720,
      "node_id": "MDQ6VXNlcjE3NjcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iurimatias",
      "html_url": "https://github.com/iurimatias",
      "followers_url": "https://api.github.com/users/iurimatias/followers",
      "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
      "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
      "organizations_url": "https://api.github.com/users/iurimatias/orgs",
      "repos_url": "https://api.github.com/users/iurimatias/repos",
      "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iurimatias/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 63,
    "closed_issues": 1,
    "state": "open",
    "created_at": "2022-12-09T15:06:43Z",
    "updated_at": "2023-11-22T11:54:21Z",
    "due_on": "2024-01-31T08:00:00Z",
    "closed_at": null
  },
  "comments": 1,
  "created_at": "2023-11-08T16:17:25Z",
  "updated_at": "2023-11-22T11:54:21Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\r\nNowadays we don't have central point to manage `Toasts` at least from the **qml layer** and it's not obvious to track which are the current existing toasts.\r\n\r\nNot sure which is the current state on the **nim site** but this task pretends to analyse also this layer and provide an **_unified management solution._**\r\n\r\nA first step has been already done in [here](https://github.com/status-im/status-desktop/pull/12645) where a new `ToastsManager.qml` class has been created and there will be a single object instance of this class managed by `appMain` where all toasts management will be centralized. The shared pr creates the new manager object and adds toasts logic for just one specific context (community transfer ownership related toasts). Next steps needed in here will be:\r\n1. Collect all `Global.displayToastMessage` calls in qml files and refactor them to be called from the new `toastsManager` object instantiated in `AppMain.qml`. In case the new `ToastsManager` file grows considerably, consider creating different toasts sub-managers per topic / context and just instantiate them in the main one.\r\n2. Review `ephemeral_notifcation_item/model` analysing the current toasts item's needs. Now these toasts will also trigger some actions apart from opening an external url. We need to take a look at this definition and provide an unified and generic solution to deal with these actions too (previous pr shared introduces 2 different roles `actionType` and `actionData` but there's already a `details` role that can, maybe, be useful, so just give it another thought and propose an unified solution.\r\n3. Review `src/app/modules/main/view.nim` api. It would make sense to unify it or, on the contrary, create specific calls for specific needs / params. The cleaner and more readable, the better. It doesn't worth it, neither makes it readable, to have just one method to create a toast with 6 parameters, and only use 2 or 3 parameters each time it's called, passing \"null\" data to the rest of params.\r\n4. Review `src/app/modules/main/module.nim`. It's the main app module and contains a lot of logic in it. Would it make sense to create a sub-module specific for toasts and remove \"weight\" from the main module?\r\n5. Analyse how the rest of toasts are triggered from the nim site.\r\nThere are probably different situations and sometimes it can be the need of directly request a toast from the UI as per design, and there's no backend logic needed for this specific scenario but in the major part of the cases, the toast (or at least from my point of view) should be ONLY driven by the backend and we should try to avoid  the current _ping-pong_ flow that doesn't seem to have a lot of sense, neither adding value. The flow described is:\r\n`backend signal to trigger toast --> UI connects to it and calls to backend to add the toast to the corresponding model --> backend recives the request and updates the model accordingly --> finally UI displays model updates`\r\nI guess that this `ping-pong` flow has been introduced mainly to deal with _translations_, since we cannot or do not want to manage them from _nim_. However, there may be other solutions than those described above to solve this problem. For example: we can create a `toast messages dictionary` with a `key` and the corresponding `text`. So nim backend is only responsible for working and providing `keys` and the UI will be responsible for the final visualization. Then we could end up with this flow:\r\n`backend signal to trigger toast that updates model --> finally UI displays model updates`\r\n\r\nThese are some bullet points and proposals, but it's just an open discussion.\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/12661/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/12661/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1805893024",
    "html_url": "https://github.com/status-im/status-desktop/issues/12661#issuecomment-1805893024",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12661",
    "id": 1805893024,
    "node_id": "IC_kwDOD5KrTM5ro72g",
    "user": {
      "login": "noeliaSD",
      "id": 97019400,
      "node_id": "U_kgDOBchmCA",
      "avatar_url": "https://avatars.githubusercontent.com/u/97019400?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/noeliaSD",
      "html_url": "https://github.com/noeliaSD",
      "followers_url": "https://api.github.com/users/noeliaSD/followers",
      "following_url": "https://api.github.com/users/noeliaSD/following{/other_user}",
      "gists_url": "https://api.github.com/users/noeliaSD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/noeliaSD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/noeliaSD/subscriptions",
      "organizations_url": "https://api.github.com/users/noeliaSD/orgs",
      "repos_url": "https://api.github.com/users/noeliaSD/repos",
      "events_url": "https://api.github.com/users/noeliaSD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/noeliaSD/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-10T14:59:15Z",
    "updated_at": "2023-11-10T14:59:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Take into consideration concerns / comments posted in here: https://github.com/status-im/status-desktop/pull/12645#pullrequestreview-1724812945",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1805893024/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
