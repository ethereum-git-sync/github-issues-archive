{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/12301",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/12301/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/12301/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/12301/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/12301",
  "id": 1919166001,
  "node_id": "I_kwDOD5KrTM5yZCYx",
  "number": 12301,
  "title": "Investigate the best way to implement Wallet Connect v2 in Status-Desktop",
  "user": {
    "login": "stefandunca",
    "id": 47554641,
    "node_id": "MDQ6VXNlcjQ3NTU0NjQx",
    "avatar_url": "https://avatars.githubusercontent.com/u/47554641?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stefandunca",
    "html_url": "https://github.com/stefandunca",
    "followers_url": "https://api.github.com/users/stefandunca/followers",
    "following_url": "https://api.github.com/users/stefandunca/following{/other_user}",
    "gists_url": "https://api.github.com/users/stefandunca/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stefandunca/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stefandunca/subscriptions",
    "organizations_url": "https://api.github.com/users/stefandunca/orgs",
    "repos_url": "https://api.github.com/users/stefandunca/repos",
    "events_url": "https://api.github.com/users/stefandunca/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stefandunca/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2086938709,
      "node_id": "MDU6TGFiZWwyMDg2OTM4NzA5",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/Epic",
      "name": "Epic",
      "color": "3E4B9E",
      "default": false,
      "description": null
    },
    {
      "id": 2331339531,
      "node_id": "MDU6TGFiZWwyMzMxMzM5NTMx",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/wallet-team",
      "name": "wallet-team",
      "color": "b60205",
      "default": false,
      "description": ""
    },
    {
      "id": 6033502055,
      "node_id": "LA_kwDOD5KrTM8AAAABZ5_vZw",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Desktop%20Wallet%20Connect",
      "name": "E:Desktop Wallet Connect",
      "color": "11FD7B",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "stefandunca",
    "id": 47554641,
    "node_id": "MDQ6VXNlcjQ3NTU0NjQx",
    "avatar_url": "https://avatars.githubusercontent.com/u/47554641?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stefandunca",
    "html_url": "https://github.com/stefandunca",
    "followers_url": "https://api.github.com/users/stefandunca/followers",
    "following_url": "https://api.github.com/users/stefandunca/following{/other_user}",
    "gists_url": "https://api.github.com/users/stefandunca/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stefandunca/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stefandunca/subscriptions",
    "organizations_url": "https://api.github.com/users/stefandunca/orgs",
    "repos_url": "https://api.github.com/users/stefandunca/repos",
    "events_url": "https://api.github.com/users/stefandunca/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stefandunca/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "stefandunca",
      "id": 47554641,
      "node_id": "MDQ6VXNlcjQ3NTU0NjQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/47554641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stefandunca",
      "html_url": "https://github.com/stefandunca",
      "followers_url": "https://api.github.com/users/stefandunca/followers",
      "following_url": "https://api.github.com/users/stefandunca/following{/other_user}",
      "gists_url": "https://api.github.com/users/stefandunca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stefandunca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stefandunca/subscriptions",
      "organizations_url": "https://api.github.com/users/stefandunca/orgs",
      "repos_url": "https://api.github.com/users/stefandunca/repos",
      "events_url": "https://api.github.com/users/stefandunca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stefandunca/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/65",
    "html_url": "https://github.com/status-im/status-desktop/milestone/65",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/65/labels",
    "id": 9039509,
    "node_id": "MI_kwDOD5KrTM4Aie6V",
    "number": 65,
    "title": "0.15",
    "description": "**1. Finish anything that wasn't completed in the previous 0.14 cycle**\r\n- And fix bugs as usual. We need to keep tech. debt at a roughly fixed level as we grow out functionality, can't let it accumulate! ;-)\r\n\r\n**2. Tokenisation of community ownership**\r\n- Work needed already evaluated in spike.  Community and 'Channel in a Community' URLs don't need to be signed if this will present problems. Patryk to work on this as a continuation of the spike already done.\r\n- See priority 4 below, as this also has some implications for the tokenisation of community work.\r\n\r\n**3. Profile showcase backend**\r\n- The long-delayed profile showcase backend!  We have the UI on the desktop ready to go for this feature, and Mobile is going to need the backend for this feature as well, so let's try to get it done in 0.14 [#11081](https://github.com/status-im/status-desktop/issues/11081)\r\n\r\n**4. Community tokens visible in wallet when received by user who is not a member of that community**\r\n- Solution obvs. needs to be fully decenteralised and permissionless\r\n- Perhaps whenever a community token is A) sent from a Status Wallet to another user or B) airdropped by a community or C) retailed by a community, a M2M (invisible to the user) Waku message should be sent to the recipient's *ethereum address*?\r\n- This message could either: A) contain the metadata for the token B) tell the user that they have received token, and to check the metadata in either another Waku channel where Control Nodes periodically post Metadata OR check the metadata embedded in the token contract (embedding metadata in the token contract might be a better idea?).  \r\n- The token metadata stored in the token contract is signed by the Community's private key to ensure authenticity.  When the community's private key changes due to ownership of a community being transferred or due to the control node being moved, a transaction must be made to update this metadata so it is signed by the community's new private key.\r\n- See here for how a Waku message can be sent to and Ethereum address https://rfc.vac.dev/spec/20/\r\n\r\n**5. Discord history import into a single channel in an existing community**\r\n- Pay off any Discord history import service tech. debt first\r\n- Then build the import into a single channel functionality, designs for this are already complete\r\n\r\n**6. UI for community owner to enable manual Waku static shading for their community**\r\n- This will be off by default in 0.15\r\n- This UI is only for the Owner of a community (not TokenMasters or Admins)\r\n- Figma designs are here https://www.figma.com/file/qHfFm7C9LwtXpfdbxssCK3/Kuba%E2%8E%9CDesktop---Communities?type=design&node-id=37242%3A222352&mode=design&t=rw6q6NQYmiz3rSn2-1\r\n\r\n**7. Community chat functionality enhancements**\r\n- Ability to mark a token gated channel as 'hidden', only visible to community members with the requisite tokens\r\n\r\n\r\n\r\n\r\n\r\n**--- Wallet Team ---**\r\n\r\n1. Finish anything that wasn't completed in the previous 0.14 cycle\r\n- And fix bugs as usual. We need to keep tech. debt at a roughly fixed level as we grow out functionality, can't let it accumulate! ;-)\r\n\r\n2. Sending Community created tokens to Status users who are not members of that community\r\n- See priority 4) in the messaging priorities list above.\r\n\r\n3. Send NFT functionality\r\n\r\n4. Updated wallet settings with keypair syncing\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "creator": {
      "login": "iurimatias",
      "id": 176720,
      "node_id": "MDQ6VXNlcjE3NjcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iurimatias",
      "html_url": "https://github.com/iurimatias",
      "followers_url": "https://api.github.com/users/iurimatias/followers",
      "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
      "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
      "organizations_url": "https://api.github.com/users/iurimatias/orgs",
      "repos_url": "https://api.github.com/users/iurimatias/repos",
      "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iurimatias/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 23,
    "closed_issues": 261,
    "state": "open",
    "created_at": "2023-02-13T19:08:52Z",
    "updated_at": "2023-11-01T17:43:14Z",
    "due_on": "2023-11-09T08:00:00Z",
    "closed_at": null
  },
  "comments": 3,
  "created_at": "2023-09-29T12:15:11Z",
  "updated_at": "2023-11-01T13:39:34Z",
  "closed_at": "2023-10-30T08:29:35Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# Wallet Connect v2\r\n\r\n## Prototype\r\n\r\n- [x] Integrate web SDK in WebView\r\n- [x] Communicate externally to forward actions and propagate events to/from the wallet\r\n  - [x] offline (no web server) was demonstrated using `WebView.runJavaScript` and a `Timer` for a pooling behaviour.\r\n  - [x] ~~webserver might provide a simpler reactive alternative but with higher risk of exposing a webserver with a specific port to the environment~\r\n    - The pooling workaround seems to work fine and reliable\r\n- [x] Move prototype code to nim APP\r\n\r\n## Implementation\r\n\r\nOptions\r\n\r\n- WebView + Web SDK\r\n  - not sure if it is properly supported on all platforms without relaying on the heavy Qt WebEngine\r\n- Cross-platform library\r\n  - It looks like there is no option. There is a [rust SDK](https://github.com/WalletConnect/WalletConnectRust/tree/main) in the work, but no guarantee it will be usable for cross-compilation\r\n\r\n## Info\r\n\r\nWeb3Wallet SDK ([web3wallet](https://github.com/WalletConnect/walletconnect-monorepo/tree/v2.0/packages/web3wallet))\r\n\r\n- Web\r\n- iOS (Swift)\r\n- Flutter\r\n- React Native\r\n- C#\r\n\r\nThe client SDKs are supported in the \"Web3Modal SDK\"\r\n\r\n- React + wagmi (react hooks for ethereum)\r\n- Vue + wagmi\r\n- HTML + wagmi\r\n- Flutter\r\n- Android\r\n\r\n## User Flow\r\n\r\n[Overview](https://specs.walletconnect.com/2.0/specs/clients/sign/session-proposal)\r\n\r\nIntegration steps\r\n\r\n```mermaid\r\nsequenceDiagram\r\n  participant dApp\r\n  participant WalletConnect\r\n  participant StatusWallet\r\n\r\n  dApp->>WalletConnect: Request Connection\r\n  WalletConnect->>StatusWallet: Show QR Code / Deep Link\r\n  StatusWallet->>WalletConnect: Scan QR Code / Follow Deep Link\r\n  WalletConnect->>dApp: Confirm Connection\r\n\r\n  dApp->>WalletConnect: Send Transaction Request\r\n  WalletConnect->>StatusWallet: Push Notification (Approve/Reject)\r\n  StatusWallet->>WalletConnect: Approve Transaction\r\n  WalletConnect->>dApp: Confirm Transaction\r\n```\r\n\r\nUX steps\r\n\r\n1. App displays qrcode or **deep link** to connect wallet\r\n2. User scans qrcode or **redirects to wallet**\r\n3. User approves session proposal from App\r\n4. User returns to app after success prompt\r\n5. App receives accounts and namespaces from Wallet\r\n6. App sends request to sign transaction or message\r\n7. User redirects to wallet to inspect request\r\n8. User approves transaction or message request\r\n9. User returns to app after success prompt\r\n10. App receives transaction confirmation or signature\r\n\r\n## APIS\r\n\r\nSign - establishes a session between a dapp and a wallet in order to expose a set of blockchain accounts that can sign transactions\r\n\r\nAuth - simple and lean interface to enable applications to authenticate wallet users to login/signin into applications with their wallets by automatically signing an authentication message.\r\n\r\nVerify - allows wallets to notify end-users when they may be connecting to a suspicious or malicious domain, helping to prevent phishing attacks across the industry.",
  "closed_by": {
    "login": "stefandunca",
    "id": 47554641,
    "node_id": "MDQ6VXNlcjQ3NTU0NjQx",
    "avatar_url": "https://avatars.githubusercontent.com/u/47554641?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stefandunca",
    "html_url": "https://github.com/stefandunca",
    "followers_url": "https://api.github.com/users/stefandunca/followers",
    "following_url": "https://api.github.com/users/stefandunca/following{/other_user}",
    "gists_url": "https://api.github.com/users/stefandunca/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stefandunca/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stefandunca/subscriptions",
    "organizations_url": "https://api.github.com/users/stefandunca/orgs",
    "repos_url": "https://api.github.com/users/stefandunca/repos",
    "events_url": "https://api.github.com/users/stefandunca/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stefandunca/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/12301/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/12301/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1752788596",
    "html_url": "https://github.com/status-im/status-desktop/issues/12301#issuecomment-1752788596",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12301",
    "id": 1752788596,
    "node_id": "IC_kwDOD5KrTM5oeW50",
    "user": {
      "login": "stefandunca",
      "id": 47554641,
      "node_id": "MDQ6VXNlcjQ3NTU0NjQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/47554641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stefandunca",
      "html_url": "https://github.com/stefandunca",
      "followers_url": "https://api.github.com/users/stefandunca/followers",
      "following_url": "https://api.github.com/users/stefandunca/following{/other_user}",
      "gists_url": "https://api.github.com/users/stefandunca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stefandunca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stefandunca/subscriptions",
      "organizations_url": "https://api.github.com/users/stefandunca/orgs",
      "repos_url": "https://api.github.com/users/stefandunca/repos",
      "events_url": "https://api.github.com/users/stefandunca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stefandunca/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-09T10:57:56Z",
    "updated_at": "2023-10-09T10:58:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Following my Wallet Connect integration and QML prototype, here are my latest findings and understanding:\r\n\r\n- The closest option for desktop is to use the **Web Wallet SDK** via QML's *WebView*\r\n  - Alternatively, a closer-to-native experience can be achieved by integrating a `NodeJS` library in the app and executing the web SDK internally. However, the complexity, risks and maintenance burden are too high and not worth given that Mobile has react-native SDKs\r\n- The major limitation is that the integrated web view has to be visible to process Wallet Connect events, which can be done in one of two ways\r\n  - **QML UX**: embed and \"hide\" the `WebView` in the WalletConnect modal popup by filling it with background\r\n    - This allows us to provide a **Status themed** wallet-connect integration\r\n    - This can have side effects (an HTML error might appear in some corner cases in the web view)\r\n    - Mixing WebView (web controls) with QML controls is not possible so the web view will be posted at the bottom without any content and background colour matching the QML's modal\r\n    - More complexity on the wallet integration side\r\n  - **HTML UX**: Use a web browser HTML5 interface\r\n    - This limits the UX experience by providing a non-themed visual experience\r\n    - Might be easier to integrate with the SDK, allowing a lighter wallet integration\r\n    - More maintenance burden due to the HTML code\r\n- Other limitations:\r\n  - Could not make the \"offline\" bundle work to load from disk; providing an in-process web server might be necessary or load the wallet connect from the online servers\r\n  - Will require another build step (could be made)\r\n\r\nSome more background:\r\n\r\n- The Wallet Connect doesn't provide any desktop platform native SDKs\r\n  - There is a client-side attempt in Rust, but it is not production-ready, and no wallet integration support",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1752788596/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1753087679",
    "html_url": "https://github.com/status-im/status-desktop/issues/12301#issuecomment-1753087679",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12301",
    "id": 1753087679,
    "node_id": "IC_kwDOD5KrTM5off6_",
    "user": {
      "login": "saledjenic",
      "id": 86303051,
      "node_id": "MDQ6VXNlcjg2MzAzMDUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/86303051?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saledjenic",
      "html_url": "https://github.com/saledjenic",
      "followers_url": "https://api.github.com/users/saledjenic/followers",
      "following_url": "https://api.github.com/users/saledjenic/following{/other_user}",
      "gists_url": "https://api.github.com/users/saledjenic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saledjenic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saledjenic/subscriptions",
      "organizations_url": "https://api.github.com/users/saledjenic/orgs",
      "repos_url": "https://api.github.com/users/saledjenic/repos",
      "events_url": "https://api.github.com/users/saledjenic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saledjenic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-09T14:09:09Z",
    "updated_at": "2023-10-09T14:09:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Mixing WebView (web controls) with QML controls is not possible so the web view will be posted at the bottom without any content and background colour matching the QML's modal\r\n\r\nOnce page is loaded we should have a full access to DOM and we can change anything we want, like colors, links, edit the page, interact with the page from the qml, so I am pretty sure all interactions should be possible. ",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1753087679/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1753371122",
    "html_url": "https://github.com/status-im/status-desktop/issues/12301#issuecomment-1753371122",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12301",
    "id": 1753371122,
    "node_id": "IC_kwDOD5KrTM5oglHy",
    "user": {
      "login": "stefandunca",
      "id": 47554641,
      "node_id": "MDQ6VXNlcjQ3NTU0NjQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/47554641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stefandunca",
      "html_url": "https://github.com/stefandunca",
      "followers_url": "https://api.github.com/users/stefandunca/followers",
      "following_url": "https://api.github.com/users/stefandunca/following{/other_user}",
      "gists_url": "https://api.github.com/users/stefandunca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stefandunca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stefandunca/subscriptions",
      "organizations_url": "https://api.github.com/users/stefandunca/orgs",
      "repos_url": "https://api.github.com/users/stefandunca/repos",
      "events_url": "https://api.github.com/users/stefandunca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stefandunca/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-09T17:09:03Z",
    "updated_at": "2023-10-09T17:11:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "> ...\r\n> Once page is loaded we should have a full access to DOM and we can change anything we want, like colors, links, edit the page, interact with the page from the qml, so I am pretty sure all interactions should be possible.\r\n\r\nI meant the mix between QML controls and WebView as specified in [Qt's documentation](https://doc.qt.io/qt-5/qml-qtwebview-webview.html#details) \"Note: Due to platform limitations overlapping the WebView and other QML components is not supported.\"\r\n\r\nThe plan is to blend it in by loading a page with plain colour matching the window background so that JS from the SDK runs freely without being \"optimized\". However, we can't use it to fill the background of the modal for example",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1753371122/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
