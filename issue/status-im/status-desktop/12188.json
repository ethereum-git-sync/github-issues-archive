{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/12188",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/12188/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/12188/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/12188/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/12188",
  "id": 1900742917,
  "node_id": "I_kwDOD5KrTM5xSwkF",
  "number": 12188,
  "title": "Split CommunityDescription message",
  "user": {
    "login": "MishkaRogachev",
    "id": 2522130,
    "node_id": "MDQ6VXNlcjI1MjIxMzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2522130?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MishkaRogachev",
    "html_url": "https://github.com/MishkaRogachev",
    "followers_url": "https://api.github.com/users/MishkaRogachev/followers",
    "following_url": "https://api.github.com/users/MishkaRogachev/following{/other_user}",
    "gists_url": "https://api.github.com/users/MishkaRogachev/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MishkaRogachev/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MishkaRogachev/subscriptions",
    "organizations_url": "https://api.github.com/users/MishkaRogachev/orgs",
    "repos_url": "https://api.github.com/users/MishkaRogachev/repos",
    "events_url": "https://api.github.com/users/MishkaRogachev/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MishkaRogachev/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2036563458,
      "node_id": "MDU6TGFiZWwyMDM2NTYzNDU4",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/bug",
      "name": "bug",
      "color": "d73a4a",
      "default": true,
      "description": "Something isn't working"
    },
    {
      "id": 2351074091,
      "node_id": "MDU6TGFiZWwyMzUxMDc0MDkx",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/refactor",
      "name": "refactor",
      "color": "ef9870",
      "default": false,
      "description": ""
    },
    {
      "id": 2987757762,
      "node_id": "MDU6TGFiZWwyOTg3NzU3NzYy",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/to%20analyze",
      "name": "to analyze",
      "color": "5CC421",
      "default": false,
      "description": ""
    },
    {
      "id": 4548141040,
      "node_id": "LA_kwDOD5KrTM8AAAABDxcf8A",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/messenger-team",
      "name": "messenger-team",
      "color": "232858",
      "default": false,
      "description": ""
    },
    {
      "id": 5745637395,
      "node_id": "LA_kwDOD5KrTM8AAAABVnd4Ew",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Desktop%20Community%20Bugfixes%20MVP",
      "name": "E:Desktop Community Bugfixes MVP",
      "color": "01CE46",
      "default": false,
      "description": "Misc bug fixes about communities that are due for the MVP"
    },
    {
      "id": 5745649251,
      "node_id": "LA_kwDOD5KrTM8AAAABVnemYw",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Desktop%20Scalability%20For%20Mass%20Market",
      "name": "E:Desktop Scalability For Mass Market",
      "color": "20FD3C",
      "default": false,
      "description": "Issues related to make the app scalable for thousands of user at the same time"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/77",
    "html_url": "https://github.com/status-im/status-desktop/milestone/77",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/77/labels",
    "id": 9909318,
    "node_id": "MI_kwDOD5KrTM4AlzRG",
    "number": 77,
    "title": "0.15.5 - Stabilizing release",
    "description": "A point milestone where we focus 100% on bug fixing, stabilisation, reliability and finishing any unfinished items from 0.15  \r\n\r\n**1.  Reduce size of community description metadata**\r\n- better compressions, less duplication\r\n\r\n**2. Use data sync layer (or other mechanism) to improve community description reliability**\r\n- Every time a new user joins the community, the Control Node updates and signs the description.\r\n- Random back off to stop it being too chatty \r\n\r\n**3. Refactor synchronisation of contacts**\r\n- To fix various contact request issues, is a large work item\r\n- Mishka and Igor to work on this?\r\n- https://github.com/status-im/status-go/issues/3720\r\n- https://github.com/status-im/status-go/issues/3803#issuecomment-1654588500\r\n\r\n--- Wallet ---\r\n\r\n- Database re-encryption flows\r\n- Community Asset and NFT designs for Asset screens\r\n- Community token visibility\r\n- Minor updates to Asset screens\r\n- WalletConnect",
    "creator": {
      "login": "John-44",
      "id": 22846356,
      "node_id": "MDQ6VXNlcjIyODQ2MzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/22846356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/John-44",
      "html_url": "https://github.com/John-44",
      "followers_url": "https://api.github.com/users/John-44/followers",
      "following_url": "https://api.github.com/users/John-44/following{/other_user}",
      "gists_url": "https://api.github.com/users/John-44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/John-44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/John-44/subscriptions",
      "organizations_url": "https://api.github.com/users/John-44/orgs",
      "repos_url": "https://api.github.com/users/John-44/repos",
      "events_url": "https://api.github.com/users/John-44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/John-44/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 86,
    "closed_issues": 26,
    "state": "open",
    "created_at": "2023-09-11T16:40:59Z",
    "updated_at": "2023-10-19T17:33:49Z",
    "due_on": "2023-12-07T08:00:00Z",
    "closed_at": null
  },
  "comments": 10,
  "created_at": "2023-09-18T11:37:03Z",
  "updated_at": "2023-10-19T14:30:05Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nAt the moment, the [CommunityDescription](https://github.com/status-im/status-go/blob/develop/protocol/protobuf/communities.proto#L84-L101) message is too large, both in terms of meaningfulness and size in bytes. In [this](https://github.com/status-im/status-desktop/issues/12114#issuecomment-1721426909) experiment, we found that the size of this message for Status CCs reaches 2 mb. \r\n\r\nThis [PR](https://github.com/status-im/status-go/pull/4039) is a temporary measure until this feature is implemented. When switching to split messages I think we should remove this optimisation, but in the list of channel members we should not send the members themselves, but only their IDs.\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/12188/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/12188/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1723240065",
    "html_url": "https://github.com/status-im/status-desktop/issues/12188#issuecomment-1723240065",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12188",
    "id": 1723240065,
    "node_id": "IC_kwDOD5KrTM5mto6B",
    "user": {
      "login": "MishkaRogachev",
      "id": 2522130,
      "node_id": "MDQ6VXNlcjI1MjIxMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2522130?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MishkaRogachev",
      "html_url": "https://github.com/MishkaRogachev",
      "followers_url": "https://api.github.com/users/MishkaRogachev/followers",
      "following_url": "https://api.github.com/users/MishkaRogachev/following{/other_user}",
      "gists_url": "https://api.github.com/users/MishkaRogachev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MishkaRogachev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MishkaRogachev/subscriptions",
      "organizations_url": "https://api.github.com/users/MishkaRogachev/orgs",
      "repos_url": "https://api.github.com/users/MishkaRogachev/repos",
      "events_url": "https://api.github.com/users/MishkaRogachev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MishkaRogachev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-18T11:43:33Z",
    "updated_at": "2023-09-18T11:50:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Proposition\r\n\r\nI propose to split this message into several messages broken down by meaning, but not just chunks:\r\n- CommunityDescription (chat identity, intro, outro, tags and etc)\r\n- CommumnityMembers: (members & ban list)\r\n- CommunityChannels (chats & categories)\r\n- CommunityTokens (tokens & collectibles)\r\n\r\nI think permissions should be scattered between these categories. \r\n\r\n@richard-ramos it will be great if we can store just one last message of each type for each community. Then we can broadcast those messages periodically in case they are got lost.\r\n\r\n@osmaczko @mprakhov @cammellos WDYT?\r\n\r\n@John-44 @iurimatias @jrainville I think we need this before releasing the MVP due to the risk of losing compatibility",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1723240065/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1723266978",
    "html_url": "https://github.com/status-im/status-desktop/issues/12188#issuecomment-1723266978",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12188",
    "id": 1723266978,
    "node_id": "IC_kwDOD5KrTM5mtvei",
    "user": {
      "login": "osmaczko",
      "id": 33099791,
      "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osmaczko",
      "html_url": "https://github.com/osmaczko",
      "followers_url": "https://api.github.com/users/osmaczko/followers",
      "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
      "organizations_url": "https://api.github.com/users/osmaczko/orgs",
      "repos_url": "https://api.github.com/users/osmaczko/repos",
      "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osmaczko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-18T12:00:22Z",
    "updated_at": "2023-09-18T12:00:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "I like the idea.\r\n\r\nThe primary challenge I foresee is how to manage situations where one of the messages is lost. We need to determine whether we should wait for all partitions or if we can apply them separately to modify the state of the community.\r\n\r\nAdditionally, this change will enable encryption for both `CommunityMembers` and `CommunityChannels`. This ensures that they are not publicly accessible for closed communities.\r\n\r\n> I believe we need to implement this before releasing the MVP to avoid the risk of losing compatibility.\r\n\r\nI agree. Ideally, we should refrain from supporting the legacy `CommunityDescription` for the sake of simplicity.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1723266978/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1723275002",
    "html_url": "https://github.com/status-im/status-desktop/issues/12188#issuecomment-1723275002",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12188",
    "id": 1723275002,
    "node_id": "IC_kwDOD5KrTM5mtxb6",
    "user": {
      "login": "caybro",
      "id": 5377645,
      "node_id": "MDQ6VXNlcjUzNzc2NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/caybro",
      "html_url": "https://github.com/caybro",
      "followers_url": "https://api.github.com/users/caybro/followers",
      "following_url": "https://api.github.com/users/caybro/following{/other_user}",
      "gists_url": "https://api.github.com/users/caybro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/caybro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/caybro/subscriptions",
      "organizations_url": "https://api.github.com/users/caybro/orgs",
      "repos_url": "https://api.github.com/users/caybro/repos",
      "events_url": "https://api.github.com/users/caybro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/caybro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-18T12:05:50Z",
    "updated_at": "2023-09-18T12:05:50Z",
    "author_association": "MEMBER",
    "body": "Good idea; I also thought if it would be feasible to just compress/uncompress the description; it's plain text anyway, should be able to reach a high ratio",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1723275002/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1723384656",
    "html_url": "https://github.com/status-im/status-desktop/issues/12188#issuecomment-1723384656",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12188",
    "id": 1723384656,
    "node_id": "IC_kwDOD5KrTM5muMNQ",
    "user": {
      "login": "John-44",
      "id": 22846356,
      "node_id": "MDQ6VXNlcjIyODQ2MzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/22846356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/John-44",
      "html_url": "https://github.com/John-44",
      "followers_url": "https://api.github.com/users/John-44/followers",
      "following_url": "https://api.github.com/users/John-44/following{/other_user}",
      "gists_url": "https://api.github.com/users/John-44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/John-44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/John-44/subscriptions",
      "organizations_url": "https://api.github.com/users/John-44/orgs",
      "repos_url": "https://api.github.com/users/John-44/repos",
      "events_url": "https://api.github.com/users/John-44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/John-44/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-18T13:13:24Z",
    "updated_at": "2023-09-18T13:13:24Z",
    "author_association": "NONE",
    "body": "> @John-44 @iurimatias @jrainville I think we need this before releasing the MVP due to the risk of losing compatibility\r\n\r\nAfter 0.15 is out we won't be able to make non-backwards compatible breaking changes.  So @iurimatias @jrainville does this need to go on the list of must-have (release blocking) features for 0.15?",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1723384656/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1723404904",
    "html_url": "https://github.com/status-im/status-desktop/issues/12188#issuecomment-1723404904",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12188",
    "id": 1723404904,
    "node_id": "IC_kwDOD5KrTM5muRJo",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-18T13:25:01Z",
    "updated_at": "2023-09-18T13:25:01Z",
    "author_association": "MEMBER",
    "body": "> After 0.15 is out we won't be able to make non-backwards compatible breaking changes. So @iurimatias @jrainville does this need to go on the list of must-have (release blocking) features for 0.15?\r\n\r\nI would say so. For 0.14 we will have a small fix that makes it possible for the Status CC community to continue working, but if there was a very big community that has lots of channels with permissions and lots of members, then we'll have the same issue happen again (the description will exceed the max number of bytes).\r\n\r\nSo yes, this is something that needs to be done before the \"breaking change freeze\".",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1723404904/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1723411998",
    "html_url": "https://github.com/status-im/status-desktop/issues/12188#issuecomment-1723411998",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12188",
    "id": 1723411998,
    "node_id": "IC_kwDOD5KrTM5muS4e",
    "user": {
      "login": "richard-ramos",
      "id": 1106587,
      "node_id": "MDQ6VXNlcjExMDY1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1106587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/richard-ramos",
      "html_url": "https://github.com/richard-ramos",
      "followers_url": "https://api.github.com/users/richard-ramos/followers",
      "following_url": "https://api.github.com/users/richard-ramos/following{/other_user}",
      "gists_url": "https://api.github.com/users/richard-ramos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/richard-ramos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/richard-ramos/subscriptions",
      "organizations_url": "https://api.github.com/users/richard-ramos/orgs",
      "repos_url": "https://api.github.com/users/richard-ramos/repos",
      "events_url": "https://api.github.com/users/richard-ramos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/richard-ramos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-18T13:29:03Z",
    "updated_at": "2023-09-18T13:29:03Z",
    "author_association": "MEMBER",
    "body": "If a refactor is going to be done for community members, please do include the following:\r\n\r\nCommunity members are stored like this in the community description:\r\n```\r\nmap<string,CommunityMember> members = 2;\r\n```\r\nwith the string key containing a 130char string with the member public key (\"0x\" + 128 hex characters). We should use instead the 33 bytes compressed version with no \"0x\" prefix to save space.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1723411998/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1723418663",
    "html_url": "https://github.com/status-im/status-desktop/issues/12188#issuecomment-1723418663",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12188",
    "id": 1723418663,
    "node_id": "IC_kwDOD5KrTM5muUgn",
    "user": {
      "login": "richard-ramos",
      "id": 1106587,
      "node_id": "MDQ6VXNlcjExMDY1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1106587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/richard-ramos",
      "html_url": "https://github.com/richard-ramos",
      "followers_url": "https://api.github.com/users/richard-ramos/followers",
      "following_url": "https://api.github.com/users/richard-ramos/following{/other_user}",
      "gists_url": "https://api.github.com/users/richard-ramos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/richard-ramos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/richard-ramos/subscriptions",
      "organizations_url": "https://api.github.com/users/richard-ramos/orgs",
      "repos_url": "https://api.github.com/users/richard-ramos/repos",
      "events_url": "https://api.github.com/users/richard-ramos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/richard-ramos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-18T13:32:47Z",
    "updated_at": "2023-09-18T13:32:47Z",
    "author_association": "MEMBER",
    "body": "Also keep in mind that in the future the maximum size of a message might be reduced dramatically from 1MB to maybe 150kb as described in [here](https://rfc.vac.dev/spec/64/#message-size), so we should consider looking at storing this type of large control messages outside of waku. (i.e. Codex / IPFS / Swarm / Torrent?)",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1723418663/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1723440247",
    "html_url": "https://github.com/status-im/status-desktop/issues/12188#issuecomment-1723440247",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12188",
    "id": 1723440247,
    "node_id": "IC_kwDOD5KrTM5muZx3",
    "user": {
      "login": "richard-ramos",
      "id": 1106587,
      "node_id": "MDQ6VXNlcjExMDY1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1106587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/richard-ramos",
      "html_url": "https://github.com/richard-ramos",
      "followers_url": "https://api.github.com/users/richard-ramos/followers",
      "following_url": "https://api.github.com/users/richard-ramos/following{/other_user}",
      "gists_url": "https://api.github.com/users/richard-ramos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/richard-ramos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/richard-ramos/subscriptions",
      "organizations_url": "https://api.github.com/users/richard-ramos/orgs",
      "repos_url": "https://api.github.com/users/richard-ramos/repos",
      "events_url": "https://api.github.com/users/richard-ramos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/richard-ramos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-18T13:42:07Z",
    "updated_at": "2023-09-18T13:42:07Z",
    "author_association": "MEMBER",
    "body": "> @richard-ramos it will be great if we can store just one last message of each type for each community. Then we can broadcast those messages periodically in case they are got lost.\r\n\r\nStoring only the last message of a type is not supported in the Store protocol, but you can achieve similar results via a store query:\r\n1. Send each message type on a separate content topic instead of only in the community topic\r\n2. Create a function similar to this: https://github.com/status-im/status-go/blob/develop/wakuv2/waku.go#L1164-L1180 but remove the Start and End time, pass the specific content topic you're interested into and the following option: `store.WithPaging(false, 1)` to order messages DESC and just return the first message. ",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1723440247/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1723470230",
    "html_url": "https://github.com/status-im/status-desktop/issues/12188#issuecomment-1723470230",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12188",
    "id": 1723470230,
    "node_id": "IC_kwDOD5KrTM5muhGW",
    "user": {
      "login": "cammellos",
      "id": 1017008,
      "node_id": "MDQ6VXNlcjEwMTcwMDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1017008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cammellos",
      "html_url": "https://github.com/cammellos",
      "followers_url": "https://api.github.com/users/cammellos/followers",
      "following_url": "https://api.github.com/users/cammellos/following{/other_user}",
      "gists_url": "https://api.github.com/users/cammellos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cammellos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cammellos/subscriptions",
      "organizations_url": "https://api.github.com/users/cammellos/orgs",
      "repos_url": "https://api.github.com/users/cammellos/repos",
      "events_url": "https://api.github.com/users/cammellos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cammellos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-18T13:55:35Z",
    "updated_at": "2023-09-18T13:55:35Z",
    "author_association": "MEMBER",
    "body": "> > @richard-ramos it will be great if we can store just one last message of each type for each community. Then we can broadcast those messages periodically in case they are got lost.\r\n> \r\n> Storing only the last message of a type is not supported in the Store protocol, but you can achieve similar results via a store query:\r\n> \r\n> 1. Send each message type on a separate content topic instead of only in the community topic\r\n> 2. Create a function similar to this: https://github.com/status-im/status-go/blob/develop/wakuv2/waku.go#L1164-L1180 but remove the Start and End time, pass the specific content topic you're interested into and the following option: `store.WithPaging(false, 1)` to order messages DESC and just return the first message.\r\n\r\nThis can't be relied on though, since anyone can publish on this topic, so you would still have to fetch until you find the one you care about, unless I am mistaking.\r\nGood suggestion on the public key, I believe bytes is not supported as a key on protobuf, but we should move towards something on those lines.\r\n\r\n\r\n@MishkaRogachev not sure I would go that way, the message fundamentally doesn't scale as the member list is fundamentally unbound. \r\nI think in this cases it should be broken down at the transport layer rather. (or we can find application layer solutions, but we need to assume that `CommumnityMembers` will exceed 1 MB eventually.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1723470230/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1725800487",
    "html_url": "https://github.com/status-im/status-desktop/issues/12188#issuecomment-1725800487",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12188",
    "id": 1725800487,
    "node_id": "IC_kwDOD5KrTM5m3aAn",
    "user": {
      "login": "John-44",
      "id": 22846356,
      "node_id": "MDQ6VXNlcjIyODQ2MzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/22846356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/John-44",
      "html_url": "https://github.com/John-44",
      "followers_url": "https://api.github.com/users/John-44/followers",
      "following_url": "https://api.github.com/users/John-44/following{/other_user}",
      "gists_url": "https://api.github.com/users/John-44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/John-44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/John-44/subscriptions",
      "organizations_url": "https://api.github.com/users/John-44/orgs",
      "repos_url": "https://api.github.com/users/John-44/repos",
      "events_url": "https://api.github.com/users/John-44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/John-44/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-19T14:50:41Z",
    "updated_at": "2023-09-19T14:51:05Z",
    "author_association": "NONE",
    "body": "> Also keep in mind that in the future the maximum size of a message might be reduced dramatically from 1MB to maybe 150kb as described in [here](https://rfc.vac.dev/spec/64/#message-size), so we should consider looking at storing this type of large control messages outside of waku. (i.e. Codex / IPFS / Swarm / Torrent?)\r\n\r\nWe will also be increasing the maximum size of binary messages that can be sent over waku via https://github.com/status-im/status-desktop/issues/9923 and when we do this we could perhaps extend this to split non-binary messages as well.\r\n\r\nAgree that it's a good idea to impose a max message size at the Waku protocol level, and then at the Status protocol level we can get larger message sizes than we have today via schemes like the one described in the above issue.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1725800487/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
