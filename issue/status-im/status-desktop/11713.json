{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/11713",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/11713/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/11713/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/11713/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/11713",
  "id": 1826703472,
  "node_id": "I_kwDOD5KrTM5s4Uhw",
  "number": 11713,
  "title": "Backup community after admin events",
  "user": {
    "login": "mprakhov",
    "id": 117639195,
    "node_id": "U_kgDOBwMIGw",
    "avatar_url": "https://avatars.githubusercontent.com/u/117639195?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mprakhov",
    "html_url": "https://github.com/mprakhov",
    "followers_url": "https://api.github.com/users/mprakhov/followers",
    "following_url": "https://api.github.com/users/mprakhov/following{/other_user}",
    "gists_url": "https://api.github.com/users/mprakhov/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mprakhov/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mprakhov/subscriptions",
    "organizations_url": "https://api.github.com/users/mprakhov/orgs",
    "repos_url": "https://api.github.com/users/mprakhov/repos",
    "events_url": "https://api.github.com/users/mprakhov/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mprakhov/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 5744740396,
      "node_id": "LA_kwDOD5KrTM8AAAABVmnILA",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Desktop%20Community%20Admin%20Improvements",
      "name": "E:Desktop Community Admin Improvements",
      "color": "fbca04",
      "default": false,
      "description": "Implementation of the needed improvements for the Admin events to be stable."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2023-07-28T16:14:33Z",
  "updated_at": "2023-07-31T14:53:52Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nIf the admin event will be propagated and  it will be not certified by the control node, all users and members (not the control node) will keep CommunityDesctiption without the control node signature\r\n\r\nThis CommunityDescription can be synchronized or backuped without the control node signature\r\nWe need to find the best option how to handle this. Here are some ideas\r\n- before backuping/syncing do a verification that we do not backup/sync unsigned CommunityDescription\r\n- do not keep unsigned CommunityDescription (this will require on each community request from db to restore the current state and track that we never save or backup/sync restored community)\r\n- if it is unsigned - take CommunityDescription from the `EventData` struct (we keep here CommunityDescription on top of which the first event was generated)\r\n\r\nWould be nice to have some discussion and find the solution, but we will need some person who is familiar with the backuping/syncing code in order to understand pros and cons of this or those solutions",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/11713/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/11713/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1655953216",
    "html_url": "https://github.com/status-im/status-desktop/issues/11713#issuecomment-1655953216",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11713",
    "id": 1655953216,
    "node_id": "IC_kwDOD5KrTM5is9dA",
    "user": {
      "login": "mprakhov",
      "id": 117639195,
      "node_id": "U_kgDOBwMIGw",
      "avatar_url": "https://avatars.githubusercontent.com/u/117639195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mprakhov",
      "html_url": "https://github.com/mprakhov",
      "followers_url": "https://api.github.com/users/mprakhov/followers",
      "following_url": "https://api.github.com/users/mprakhov/following{/other_user}",
      "gists_url": "https://api.github.com/users/mprakhov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mprakhov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mprakhov/subscriptions",
      "organizations_url": "https://api.github.com/users/mprakhov/orgs",
      "repos_url": "https://api.github.com/users/mprakhov/repos",
      "events_url": "https://api.github.com/users/mprakhov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mprakhov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-28T16:14:45Z",
    "updated_at": "2023-07-28T16:14:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @jrainville @osmaczko ",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1655953216/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1658469838",
    "html_url": "https://github.com/status-im/status-desktop/issues/11713#issuecomment-1658469838",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11713",
    "id": 1658469838,
    "node_id": "IC_kwDOD5KrTM5i2j3O",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-31T14:21:35Z",
    "updated_at": "2023-07-31T14:21:35Z",
    "author_association": "MEMBER",
    "body": "Should only the control node do the backup? If that's so, we don,t have much to do. We'd only need to ensure that only the control node, that has a signed description can back up the description.\r\n\r\nIf there is an owner node without the private key, they shouldn't back up.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1658469838/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1658473259",
    "html_url": "https://github.com/status-im/status-desktop/issues/11713#issuecomment-1658473259",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11713",
    "id": 1658473259,
    "node_id": "IC_kwDOD5KrTM5i2ksr",
    "user": {
      "login": "mprakhov",
      "id": 117639195,
      "node_id": "U_kgDOBwMIGw",
      "avatar_url": "https://avatars.githubusercontent.com/u/117639195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mprakhov",
      "html_url": "https://github.com/mprakhov",
      "followers_url": "https://api.github.com/users/mprakhov/followers",
      "following_url": "https://api.github.com/users/mprakhov/following{/other_user}",
      "gists_url": "https://api.github.com/users/mprakhov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mprakhov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mprakhov/subscriptions",
      "organizations_url": "https://api.github.com/users/mprakhov/orgs",
      "repos_url": "https://api.github.com/users/mprakhov/repos",
      "events_url": "https://api.github.com/users/mprakhov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mprakhov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-31T14:23:33Z",
    "updated_at": "2023-07-31T14:24:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Should only the control node do the backup? If that's so, we don,t have much to do. We'd only need to ensure that only the control node, that has a signed description can back up the description.\r\n> \r\n> If there is an owner node without the private key, they shouldn't back up.\r\n\r\nWhat about the case, when we are the users/admins? Do we backup any community-related data?",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1658473259/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1658475844",
    "html_url": "https://github.com/status-im/status-desktop/issues/11713#issuecomment-1658475844",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11713",
    "id": 1658475844,
    "node_id": "IC_kwDOD5KrTM5i2lVE",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-31T14:25:04Z",
    "updated_at": "2023-07-31T14:25:04Z",
    "author_association": "MEMBER",
    "body": "> What about the case, when we are the users/admins?\r\n\r\nI don't know that code that well, but I thought only owners used to back up. We don't need every people in the community to backup the community to waku, that would spam the network",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1658475844/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1658509730",
    "html_url": "https://github.com/status-im/status-desktop/issues/11713#issuecomment-1658509730",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11713",
    "id": 1658509730,
    "node_id": "IC_kwDOD5KrTM5i2tmi",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-31T14:42:32Z",
    "updated_at": "2023-07-31T14:42:32Z",
    "author_association": "MEMBER",
    "body": "I looked at the code and it seems like indeed we backup all communities a user has joined. \r\n\r\nI wonder if instead of backing up all the community description, we should just back up the id, then fetch it? \r\n\r\nFirstly, it would fix the issue described above.\r\n\r\nSecondly, it would be lighter for the network.\r\n\r\nThe downside is that it would be slower for the user, because they would need another store node fetch, but it seems reasonable.\r\n\r\nIt's a little more work for us, because we'd need to rework the back of communities, but the code to fetch communities from store nodes already exists.\r\n\r\nI might be missing details though, so do let me know if it makes sense",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1658509730/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1658521231",
    "html_url": "https://github.com/status-im/status-desktop/issues/11713#issuecomment-1658521231",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11713",
    "id": 1658521231,
    "node_id": "IC_kwDOD5KrTM5i2waP",
    "user": {
      "login": "mprakhov",
      "id": 117639195,
      "node_id": "U_kgDOBwMIGw",
      "avatar_url": "https://avatars.githubusercontent.com/u/117639195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mprakhov",
      "html_url": "https://github.com/mprakhov",
      "followers_url": "https://api.github.com/users/mprakhov/followers",
      "following_url": "https://api.github.com/users/mprakhov/following{/other_user}",
      "gists_url": "https://api.github.com/users/mprakhov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mprakhov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mprakhov/subscriptions",
      "organizations_url": "https://api.github.com/users/mprakhov/orgs",
      "repos_url": "https://api.github.com/users/mprakhov/repos",
      "events_url": "https://api.github.com/users/mprakhov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mprakhov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-31T14:46:38Z",
    "updated_at": "2023-07-31T14:48:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "For now, I see only 1 corner case:\r\nIf the control node will lost his community key or will be offline - the community won't be backuped. So when some user will restore his account by seed phrase - he'll get the old CommunityDescription. But maybe this is ok...\r\n\r\nP.S. In my understanding - the community must have the possibility to \"live\" even if the control node is \"dead\" :) \r\nBut I can be wrong",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1658521231/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1658534529",
    "html_url": "https://github.com/status-im/status-desktop/issues/11713#issuecomment-1658534529",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11713",
    "id": 1658534529,
    "node_id": "IC_kwDOD5KrTM5i2zqB",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-31T14:53:52Z",
    "updated_at": "2023-07-31T14:53:52Z",
    "author_association": "MEMBER",
    "body": "> For now, I see only 1 corner case: If the control node will lost his community key or will be offline - the community won't be backuped. So when some user will restore his account by seed phrase - he'll get the old CommunityDescription. But maybe this is ok...\r\n> \r\n> P.S. In my understanding - the community must have the possibility to \"live\" even if the control node is \"dead\" :) But I can be wrong\r\n\r\nIn theory, once the control node comes back online or just sends an updated version, the member would update to the latest. \r\n\r\nThe same corner case could happen with the current backup. If the member was last online one week ago, did a backup and then re-syncs, they'll have a week old community description. They'll need the new one.  \r\n\r\nAs for the community being able to live when the control node is dead, that is true, up to a certain point. It should be the case for small periods of time, but if the control node never comes back online, the community is basically doomed, because no new users can join, the history archive will stop working and even the ratchet keys will stop to be rotated.\r\n\r\nSo as for this particular corner case, I think my solution is ok.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1658534529/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
