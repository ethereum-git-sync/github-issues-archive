{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/7854",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/7854/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/7854/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/7854/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/7854",
  "id": 1404300453,
  "node_id": "I_kwDOD5KrTM5Ts-yl",
  "number": 7854,
  "title": "Add CI script to prevent StatusQ having dependencies to status-desktop",
  "user": {
    "login": "osmaczko",
    "id": 33099791,
    "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/osmaczko",
    "html_url": "https://github.com/osmaczko",
    "followers_url": "https://api.github.com/users/osmaczko/followers",
    "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
    "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
    "organizations_url": "https://api.github.com/users/osmaczko/orgs",
    "repos_url": "https://api.github.com/users/osmaczko/repos",
    "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/osmaczko/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2087353959,
      "node_id": "MDU6TGFiZWwyMDg3MzUzOTU5",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/ui-team",
      "name": "ui-team",
      "color": "1111ff",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "micieslak",
    "id": 20650004,
    "node_id": "MDQ6VXNlcjIwNjUwMDA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/20650004?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/micieslak",
    "html_url": "https://github.com/micieslak",
    "followers_url": "https://api.github.com/users/micieslak/followers",
    "following_url": "https://api.github.com/users/micieslak/following{/other_user}",
    "gists_url": "https://api.github.com/users/micieslak/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/micieslak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/micieslak/subscriptions",
    "organizations_url": "https://api.github.com/users/micieslak/orgs",
    "repos_url": "https://api.github.com/users/micieslak/repos",
    "events_url": "https://api.github.com/users/micieslak/events{/privacy}",
    "received_events_url": "https://api.github.com/users/micieslak/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "micieslak",
      "id": 20650004,
      "node_id": "MDQ6VXNlcjIwNjUwMDA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20650004?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/micieslak",
      "html_url": "https://github.com/micieslak",
      "followers_url": "https://api.github.com/users/micieslak/followers",
      "following_url": "https://api.github.com/users/micieslak/following{/other_user}",
      "gists_url": "https://api.github.com/users/micieslak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/micieslak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/micieslak/subscriptions",
      "organizations_url": "https://api.github.com/users/micieslak/orgs",
      "repos_url": "https://api.github.com/users/micieslak/repos",
      "events_url": "https://api.github.com/users/micieslak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/micieslak/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/52",
    "html_url": "https://github.com/status-im/status-desktop/milestone/52",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/52/labels",
    "id": 8473973,
    "node_id": "MI_kwDOD5KrTM4AgU11",
    "number": 52,
    "title": "0.8.0",
    "description": "Features:\r\n\r\nGeneral:\r\n- Memory Usage Improvements (part 1)\r\n\r\nChat:\r\n- Activity Center\r\n- New Profile Modal\r\n- Contacts & Profiles\r\n- Identity Verification\r\n\r\nCommunities:\r\n- Community Portal\r\n- New Join Workflow\r\n- Encrypted Communities\r\n- Import Tool\r\n\r\nWallet:\r\n- Send\r\n  - Initial Bridge integration, allow to send eth/token to best route and advanced view\r\n- Test:\r\n  - Wallet test fully automated and working\r\n- Asset\r\n  - Token view graph\r\n- Keycard \r\n   - onboarding flow  and login revision\r\n   - Rename Keycard\r\n   - Change PIN\r\n   - Create a 12-digit personal unblocking key (PUK)\r\n   - Create a new Pairing Code\r\n   - UI for the keycard settings in case user has set up a keycard\r\n\r\nAutomation:\r\n- docker setup to test message reliability & message fetching \r\n- Use local mailserver in the CI\r\n- Automation: Edit group chat name and cleanup group chat creation scenario\r\n- Automation: Can invite members to a community\r\n- Automation: Can create a contact request\r\n- Automation: Can create a 1 on 1 chat with a mutual contact\r\n- Automation: Can create a 1 on 1 chat with a mutual contactCan delete a message from another member if admin\r\n- Automation: Can create a 1 on 1 chat with a mutual contactCan reply to a message in a community channel\r\n- Wallet scenario: User adds a watch only account\r\n- Wallet scenario: User generates a new account from wallet\r\n- Wallet scenario: User imports a private key\r\n- Wallet scenario: User imports a seed phrase\r\n- Wallet scenario: User deletes a generated account\r\n- Wallet scenario: Can see collectibles for an account\r\n- Wallet scenario: User can edit the default wallet account\r\n- Wallet scenario: User can toggle network and see balances\r\n\r\nUI Storybook:\r\n- Initial Storybook app\r\n- Component Events Tracking/logging\r\n- Component properties/models Editing\r\n- Community Portal Section\r\n- Community Portal Card Component\r\n- ProfilePopup Component\r\n\r\nC++:\r\n- status-go wrapper: Login\r\n- status-go wrapper: Account Creation\r\n- status-go wrapper: get Chats\r\n",
    "creator": {
      "login": "iurimatias",
      "id": 176720,
      "node_id": "MDQ6VXNlcjE3NjcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iurimatias",
      "html_url": "https://github.com/iurimatias",
      "followers_url": "https://api.github.com/users/iurimatias/followers",
      "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
      "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
      "organizations_url": "https://api.github.com/users/iurimatias/orgs",
      "repos_url": "https://api.github.com/users/iurimatias/repos",
      "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iurimatias/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 233,
    "state": "closed",
    "created_at": "2022-09-28T12:52:48Z",
    "updated_at": "2023-04-24T08:51:38Z",
    "due_on": "2022-11-07T08:00:00Z",
    "closed_at": "2022-11-21T18:50:35Z"
  },
  "comments": 5,
  "created_at": "2022-10-11T09:17:10Z",
  "updated_at": "2022-11-04T11:02:02Z",
  "closed_at": "2022-11-04T11:02:01Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nWhen `StatusQ` was a submodule it was physically impossible to make dependencies to `status-dekstop`. Post integration[ it is easy and tempting](https://github.com/status-im/status-desktop/pull/7517#discussion_r978567425) to make the dependency bidirectional, making the concept of `StatusQ` pointless.\r\n\r\nIt comes from the scope of: https://github.com/status-im/status-desktop/issues/7548 - the solution proposal is there as well.\r\n\r\n### Possible solution\r\n- add CI check that validates StatusQ builds (and runs) successfully in Release mode. The release version takes resources from `StatusQ/*`, making it impossible to use anything from the parent directory.\r\n\r\nUPDATE:\r\nThe ticket has been split into two parts:\r\n1. https://github.com/status-im/status-desktop/issues/8071 - utility app for checking imports\r\n2. This one - adding CI script",
  "closed_by": {
    "login": "jakubgs",
    "id": 2212681,
    "node_id": "MDQ6VXNlcjIyMTI2ODE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2212681?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jakubgs",
    "html_url": "https://github.com/jakubgs",
    "followers_url": "https://api.github.com/users/jakubgs/followers",
    "following_url": "https://api.github.com/users/jakubgs/following{/other_user}",
    "gists_url": "https://api.github.com/users/jakubgs/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jakubgs/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jakubgs/subscriptions",
    "organizations_url": "https://api.github.com/users/jakubgs/orgs",
    "repos_url": "https://api.github.com/users/jakubgs/repos",
    "events_url": "https://api.github.com/users/jakubgs/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jakubgs/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/7854/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/7854/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1291795522",
    "html_url": "https://github.com/status-im/status-desktop/issues/7854#issuecomment-1291795522",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/7854",
    "id": 1291795522,
    "node_id": "IC_kwDOD5KrTM5M_zxC",
    "user": {
      "login": "micieslak",
      "id": 20650004,
      "node_id": "MDQ6VXNlcjIwNjUwMDA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20650004?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/micieslak",
      "html_url": "https://github.com/micieslak",
      "followers_url": "https://api.github.com/users/micieslak/followers",
      "following_url": "https://api.github.com/users/micieslak/following{/other_user}",
      "gists_url": "https://api.github.com/users/micieslak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/micieslak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/micieslak/subscriptions",
      "organizations_url": "https://api.github.com/users/micieslak/orgs",
      "repos_url": "https://api.github.com/users/micieslak/repos",
      "events_url": "https://api.github.com/users/micieslak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/micieslak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-26T10:02:22Z",
    "updated_at": "2022-10-26T10:02:22Z",
    "author_association": "MEMBER",
    "body": "Maybe I'm missing something, but I have a notion that we didn't lose anything when it comes to control over `StatusQ` dependencies when merging into `status-desktop`.\r\n\r\nFor example let's take `StatusColorSelector.qml`. If we add import from `status-desktop`, e.g. `import utils 1.0` it can be easily unnoticed (now and before merge as well) because:\r\n   - when used in `status-desktop` the import is just available\r\n   - `sandbox` in general will work, because pages are loaded on demand from source code files. Only if given page uses improper import directly or indirectly, there will be an error written to the console out, e.g. (`module \"utils\" is not installed`). But even when broken page is chosen, the app will continue to work and won't exit with the error code.\r\n   - `sandbox` would exit immediately with error code only when component with improper import is used directly by `sandbox` application, e.g. `StatusButton`. It's not applicable to components accessed in pages, as discribed above.\r\n   - the library itself is not compiled to any form of library, so it's not possible to check anything when compiling - there is no compilation\r\n  \r\nAny of those circumstances changed after merging `StatusQ` to `status-desktop` so there is a problem with effective detection of improper dependencies but the merge itself didn't introduce any regression.\r\n\r\nThe only reasonable approach that comes to my mind now is to have at least very basic qml (even just only importing components) unit tests for all components provided by that library.\r\n\r\n@osmaczko @caybro @alexandraB99 Please verify and share your thoughts :)",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1291795522/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1291885373",
    "html_url": "https://github.com/status-im/status-desktop/issues/7854#issuecomment-1291885373",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/7854",
    "id": 1291885373,
    "node_id": "IC_kwDOD5KrTM5NAJs9",
    "user": {
      "login": "micieslak",
      "id": 20650004,
      "node_id": "MDQ6VXNlcjIwNjUwMDA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20650004?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/micieslak",
      "html_url": "https://github.com/micieslak",
      "followers_url": "https://api.github.com/users/micieslak/followers",
      "following_url": "https://api.github.com/users/micieslak/following{/other_user}",
      "gists_url": "https://api.github.com/users/micieslak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/micieslak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/micieslak/subscriptions",
      "organizations_url": "https://api.github.com/users/micieslak/orgs",
      "repos_url": "https://api.github.com/users/micieslak/repos",
      "events_url": "https://api.github.com/users/micieslak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/micieslak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-26T11:25:20Z",
    "updated_at": "2022-10-26T11:25:20Z",
    "author_association": "MEMBER",
    "body": "Similar story with imports like `../../../StatusQ/src/Components`, it was also possible to overlook it before, bc people had `StatusQ` configured from `status-desktop` tree (not as a standalone clone) for convenience. But this case is very obvious, hard to overlook when writing and during code review, I hope.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1291885373/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1292440842",
    "html_url": "https://github.com/status-im/status-desktop/issues/7854#issuecomment-1292440842",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/7854",
    "id": 1292440842,
    "node_id": "IC_kwDOD5KrTM5NCRUK",
    "user": {
      "login": "osmaczko",
      "id": 33099791,
      "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osmaczko",
      "html_url": "https://github.com/osmaczko",
      "followers_url": "https://api.github.com/users/osmaczko/followers",
      "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
      "organizations_url": "https://api.github.com/users/osmaczko/orgs",
      "repos_url": "https://api.github.com/users/osmaczko/repos",
      "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osmaczko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-26T18:32:59Z",
    "updated_at": "2022-10-26T18:32:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Maybe I'm missing something, but I have a notion that we didn't lose anything when it comes to control over StatusQ dependencies when merging into status-desktop.\r\n\r\nWe lost the physical boundary, now it is tempting to use files from the parent directory. It is not an accident that the first dependency to status-desktop was created after StatusQ was moved.\r\n\r\n> - when used in status-desktop the import is just available\r\n\r\nThat's true but some (most?) ppl were using StatusQ as a standalone repository. The chance to spot not loading pages or not running Sandbox was high, now it is easy to miss, cause everyone is running Sandbox from status-desktop.\r\n\r\n> - sandbox in general will work, because pages are loaded on demand from source code files...\r\n>\r\n> - sandbox would exit immediately with error code only when component with improper import is used directly by sandbox application...\r\n\r\nThat's also true. The first point I didn't take into consideration and that makes the proposed solution incomplete. Nevertheless proposed solution would catch some of the issues, for example:\r\n```\r\ndiff --git a/ui/StatusQ/src/StatusQ/Components/StatusTagSelector.qml b/ui/StatusQ/src/StatusQ/Components/StatusTagSelector.qml\r\nindex abb20d6b4..a2073b0ee 100644\r\n--- a/ui/StatusQ/src/StatusQ/Components/StatusTagSelector.qml\r\n+++ b/ui/StatusQ/src/StatusQ/Components/StatusTagSelector.qml\r\n@@ -7,6 +7,8 @@ import StatusQ.Core 0.1\r\n import StatusQ.Core.Theme 0.1\r\n import StatusQ.Controls 0.1\r\n \r\n+import utils 1.0 as SD\r\n+\r\n /*!\r\n      \\qmltype StatusTagSelector\r\n      \\inherits Item\r\n\r\n```\r\n```\r\n$ ./Sandbox\r\nQQmlApplicationEngine failed to load component\r\nqrc:/main.qml:516:13: Type DemoApp unavailable\r\nqrc:/DemoApp.qml:193:9: Type StatusAppChatView unavailable\r\nqrc:/demoapp/StatusAppChatView.qml:260:13: Type CreateChatView unavailable\r\nqrc:/demoapp/CreateChatView.qml:25:9: Type StatusTagSelector unavailable\r\nqrc:/StatusQ/Components/StatusTagSelector.qml:10:1: module \"utils\" is not installed\r\n```\r\n\r\n> the library itself is not compiled to any form of library, so it's not possible to check anything when compiling - there is no compilation\r\n\r\nOf course, compiling is not enough, we need to run the app and scan the error code.\r\n\r\n> The only reasonable approach that comes to my mind now is to have at least very basic qml (even just only importing components) unit tests for all components provided by that library.\r\n\r\nThe solution I believe that requires the least manual work is to load every page statically, through the main component. It could look like this:\r\n\r\nmain.qml\r\n```\r\nStatusWindow {\r\n    SanityCheck {}\r\n    ...\r\n}\r\n```\r\n\r\nSanityCheck.qml\r\n```\r\nItem {\r\n    visible: false\r\n    \r\n    StatusAccountsSelectorPage {}\r\n    StatusAddressPage {}\r\n    ...\r\n    \r\n    Buttons {}\r\n    Controls {}\r\n    ...\r\n}\r\n```\r\n\r\nOr even create `SanityCheck.qml` as a root component of a separate application which we will compile and run on CI to see if there is no dependency to status-desktop. We can even go one step further and write a script that generates `SanityCheck.qml`.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1292440842/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1292508611",
    "html_url": "https://github.com/status-im/status-desktop/issues/7854#issuecomment-1292508611",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/7854",
    "id": 1292508611,
    "node_id": "IC_kwDOD5KrTM5NCh3D",
    "user": {
      "login": "osmaczko",
      "id": 33099791,
      "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osmaczko",
      "html_url": "https://github.com/osmaczko",
      "followers_url": "https://api.github.com/users/osmaczko/followers",
      "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
      "organizations_url": "https://api.github.com/users/osmaczko/orgs",
      "repos_url": "https://api.github.com/users/osmaczko/repos",
      "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osmaczko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-26T19:14:34Z",
    "updated_at": "2022-10-26T19:14:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, please forget about the last proposal. I figured out something much easier and more generic. We need a script that iterates through `ui/StatusQ/src/*.qml` files and runs them through qmlscene.\r\n\r\nExample:\r\n- StatusTagSelector.qml with proper imports runs ok\r\n```\r\n$ qmlscene -I src src/StatusQ/Components/StatusTagSelector.qml\r\nfile:///home/osmaczny/Dev/status/status-desktop/ui/StatusQ/src/StatusQ/Components/StatusTagSelector.qml:210: TypeError: Cannot read property 'count' of undefined\r\n```\r\n- StatusTagSelector.qml with `import utils 1.0 as SD` exits immediately\r\n```\r\n$ qmlscene -I src src/StatusQ/Components/StatusTagSelector.qml\r\nfile:///home/osmaczny/Dev/status/status-desktop/ui/StatusQ/src/StatusQ/Components/StatusTagSelector.qml:10 module \"utils\" is not installed\r\n```\r\n\r\n- StatusTagSelector.qml with `import \"../../../../imports/utils\"` exits immediately (although this may run without an issue in some cases, that is, when imported stuff e.g. \"utils\" does not depend on modules - this is super unlikely and we can take that risk I guess)\r\n```\r\n$ qmlscene -I src src/StatusQ/Components/StatusTagSelector.qml\r\nfile:///home/osmaczny/Dev/status/status-desktop/ui/StatusQ/src/StatusQ/Components/StatusTagSelector.qml:-1 Type Utils unavailable\r\nfile:///home/osmaczny/Dev/status/status-desktop/ui/imports/utils/Utils.qml:5 module \"shared\" is not installed\r\n```\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1292508611/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1292532137",
    "html_url": "https://github.com/status-im/status-desktop/issues/7854#issuecomment-1292532137",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/7854",
    "id": 1292532137,
    "node_id": "IC_kwDOD5KrTM5NCnmp",
    "user": {
      "login": "micieslak",
      "id": 20650004,
      "node_id": "MDQ6VXNlcjIwNjUwMDA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20650004?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/micieslak",
      "html_url": "https://github.com/micieslak",
      "followers_url": "https://api.github.com/users/micieslak/followers",
      "following_url": "https://api.github.com/users/micieslak/following{/other_user}",
      "gists_url": "https://api.github.com/users/micieslak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/micieslak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/micieslak/subscriptions",
      "organizations_url": "https://api.github.com/users/micieslak/orgs",
      "repos_url": "https://api.github.com/users/micieslak/repos",
      "events_url": "https://api.github.com/users/micieslak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/micieslak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-26T19:27:00Z",
    "updated_at": "2022-10-26T19:27:26Z",
    "author_association": "MEMBER",
    "body": "> Ok, please forget about the last proposal. I figured out something much easier and more generic. We need a script that iterates through ui/StatusQ/src/*.qml files and runs them through qmlscene.\r\n\r\nNice try, but SortFilterProxyModel is breaking that idea :(",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1292532137/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
