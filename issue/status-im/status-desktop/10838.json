{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/10838",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/10838/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/10838/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/10838/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/10838",
  "id": 1730357129,
  "node_id": "I_kwDOD5KrTM5nIyeJ",
  "number": 10838,
  "title": "`database is locked` error in some scenarios",
  "user": {
    "login": "saledjenic",
    "id": 86303051,
    "node_id": "MDQ6VXNlcjg2MzAzMDUx",
    "avatar_url": "https://avatars.githubusercontent.com/u/86303051?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/saledjenic",
    "html_url": "https://github.com/saledjenic",
    "followers_url": "https://api.github.com/users/saledjenic/followers",
    "following_url": "https://api.github.com/users/saledjenic/following{/other_user}",
    "gists_url": "https://api.github.com/users/saledjenic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/saledjenic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/saledjenic/subscriptions",
    "organizations_url": "https://api.github.com/users/saledjenic/orgs",
    "repos_url": "https://api.github.com/users/saledjenic/repos",
    "events_url": "https://api.github.com/users/saledjenic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/saledjenic/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2036563458,
      "node_id": "MDU6TGFiZWwyMDM2NTYzNDU4",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/bug",
      "name": "bug",
      "color": "d73a4a",
      "default": true,
      "description": "Something isn't working"
    },
    {
      "id": 3166254951,
      "node_id": "MDU6TGFiZWwzMTY2MjU0OTUx",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/performance",
      "name": "performance",
      "color": "7F1B66",
      "default": false,
      "description": ""
    },
    {
      "id": 3166424543,
      "node_id": "MDU6TGFiZWwzMTY2NDI0NTQz",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/general",
      "name": "general",
      "color": "427672",
      "default": false,
      "description": ""
    },
    {
      "id": 3904301025,
      "node_id": "LA_kwDOD5KrTM7otufh",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:PerformanceImprovements",
      "name": "E:PerformanceImprovements",
      "color": "7D613C",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "osmaczko",
    "id": 33099791,
    "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/osmaczko",
    "html_url": "https://github.com/osmaczko",
    "followers_url": "https://api.github.com/users/osmaczko/followers",
    "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
    "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
    "organizations_url": "https://api.github.com/users/osmaczko/orgs",
    "repos_url": "https://api.github.com/users/osmaczko/repos",
    "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/osmaczko/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "osmaczko",
      "id": 33099791,
      "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osmaczko",
      "html_url": "https://github.com/osmaczko",
      "followers_url": "https://api.github.com/users/osmaczko/followers",
      "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
      "organizations_url": "https://api.github.com/users/osmaczko/orgs",
      "repos_url": "https://api.github.com/users/osmaczko/repos",
      "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osmaczko/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "alexjba",
      "id": 47811206,
      "node_id": "MDQ6VXNlcjQ3ODExMjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexjba",
      "html_url": "https://github.com/alexjba",
      "followers_url": "https://api.github.com/users/alexjba/followers",
      "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
      "organizations_url": "https://api.github.com/users/alexjba/orgs",
      "repos_url": "https://api.github.com/users/alexjba/repos",
      "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexjba/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/64",
    "html_url": "https://github.com/status-im/status-desktop/milestone/64",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/64/labels",
    "id": 9039503,
    "node_id": "MI_kwDOD5KrTM4Aie6P",
    "number": 64,
    "title": "0.13",
    "description": "Priorities **in priority order** for the 0.13 milestone:\r\n\r\n**1. Finish items started in 0.12**\r\n- Complete any outstanding issues related to pairing (for syncing) - Igor\r\n- Implement the 'Admin' role (issue #10114) - Mykhailo\r\n- Any remaining work to pay off tech. debt related to mutual contacts - Mishka\r\n- When creating/editing token based permission, ability to search for and selecting Collectables from OpenSea - MichaelC\r\n\r\n**2. Channel token permissions**\r\n- Create, edit and delete channel token permissions in the permissions admin screens\r\n- This includes the \"no tokens required to view this channel\" permission\r\n- All user facing channel token permissions functionality e.g. what happens when a user tries to access a token gated channel they don't have the required tokens to access, what happens when a user only has permissions to view a channel, etc...\r\n- If a community is an open (not token gated at the community level) community, if a channel is token gated AND if **no** \"no tokens required to view this channel\" permission for that channel exists, then the channel should be automatically encrypted.  If token gating is removed from a channel, the channel should become unencrypted.\r\n\r\n**3. DB perf improvements**\r\n- https://www.notion.so/Database-related-performance-1dbaa7ea894c461d885e55676683be07\r\n- Alex and Patryk to work on this, with help from Lukáš\r\n\r\n**4. Update app to use new 'Share URL' formats**\r\n- add functionality to status-go to generate the new 'Share URL' formats for sharing links to: User Profiles, Communities, Channel inside a Community (issue https://github.com/status-im/status-desktop/issues/10851)\r\n- Update everywhere a user can share a URL from to use the new URL format (issue https://github.com/status-im/status-desktop/issues/10852)\r\n- New/updated URL unroll designs for inside chat, including specific unrolls for the new User Profile, Community and Channel inside a Community URLs (issue https://github.com/status-im/status-desktop/issues/10585)\r\n- Ability to share a URL that points to a specific channel in a community (issue #10160)\r\n- Update all address inputs to accept a user pasting a 'share URL' into the input (in addition to being able to input the raw address).  This includes: Start new chat input, send contact request input in Settings, the import community key input, etc...\r\n- Update Status Desktops URL handler so that if Status is installed on a computer, when a user clicks on a Status 'Share URL' the app is launched (if not already running) and after signing in the user is automatically taken to the entity the Share URL represented inside the app.  e.g. if a user clicks on a URL for a Status Community, the user should be taken to the home screen for that community inside the Status App\r\n\r\n**5. Mint Assets functionality**\r\n- Also includes some small improvements to the mint Collectables functionality\r\n- Noelia, GravityBlast\r\n\r\n**6. Profile showcase backend**\r\n\r\n\r\n**--- For the Wallet team ---**\r\ntldr; continue building out Ben's wallet designs\r\n\r\n1. Complete any outstanding development related to the activity screens\r\n2. All accounts overview screens\r\n3. New settings screens\r\n4. Implement 'imported key and account' syncing and transfer between devices\r\n\r\n\r\n",
    "creator": {
      "login": "iurimatias",
      "id": 176720,
      "node_id": "MDQ6VXNlcjE3NjcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iurimatias",
      "html_url": "https://github.com/iurimatias",
      "followers_url": "https://api.github.com/users/iurimatias/followers",
      "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
      "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
      "organizations_url": "https://api.github.com/users/iurimatias/orgs",
      "repos_url": "https://api.github.com/users/iurimatias/repos",
      "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iurimatias/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 108,
    "closed_issues": 139,
    "state": "open",
    "created_at": "2023-02-13T19:04:13Z",
    "updated_at": "2023-05-31T14:55:47Z",
    "due_on": "2023-06-16T07:00:00Z",
    "closed_at": null
  },
  "comments": 11,
  "created_at": "2023-05-29T08:54:40Z",
  "updated_at": "2023-05-31T08:54:51Z",
  "closed_at": "2023-05-31T08:54:50Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "`database is locked` error started to appear after db improvements were applied. Not sure when, under which circumstances that's happening, but folks from mobile team faced this issue as well. One flow where it is reproducible in 100% cases is when user  is migrating his profile keypair to a keycard. That flow ends with an error due to `database is locked` error which is happening when status-go `ConvertToKeycardAccount` function is called in this line `addedKc, _, err := accountDB.AddKeycardOrAddAccountsIfKeycardIsAdded(kc)`.",
  "closed_by": {
    "login": "osmaczko",
    "id": 33099791,
    "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/osmaczko",
    "html_url": "https://github.com/osmaczko",
    "followers_url": "https://api.github.com/users/osmaczko/followers",
    "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
    "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
    "organizations_url": "https://api.github.com/users/osmaczko/orgs",
    "repos_url": "https://api.github.com/users/osmaczko/repos",
    "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/osmaczko/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/10838/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/10838/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1567169543",
    "html_url": "https://github.com/status-im/status-desktop/issues/10838#issuecomment-1567169543",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10838",
    "id": 1567169543,
    "node_id": "IC_kwDOD5KrTM5daRwH",
    "user": {
      "login": "alexjba",
      "id": 47811206,
      "node_id": "MDQ6VXNlcjQ3ODExMjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexjba",
      "html_url": "https://github.com/alexjba",
      "followers_url": "https://api.github.com/users/alexjba/followers",
      "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
      "organizations_url": "https://api.github.com/users/alexjba/orgs",
      "repos_url": "https://api.github.com/users/alexjba/repos",
      "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexjba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-29T13:55:52Z",
    "updated_at": "2023-05-29T13:55:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Changing the flow a little bit results in a different error - `FOREIGN KEY constraint failed` while inserting in `keycards`.\r\n\r\nIn `AddKeycardOrAddAccountsIfKeycardIsAdded` changing the flow\r\nFrom: Begin transaction -> Select from `keycards` -> Insert into `keycards` -> `Database is locked`\r\nTo: Select from `keycards` -> Begin transaction -> Insert into `keycards` -> `FOREIGN KEY constraint failed`",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1567169543/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1567209747",
    "html_url": "https://github.com/status-im/status-desktop/issues/10838#issuecomment-1567209747",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10838",
    "id": 1567209747,
    "node_id": "IC_kwDOD5KrTM5dabkT",
    "user": {
      "login": "alexjba",
      "id": 47811206,
      "node_id": "MDQ6VXNlcjQ3ODExMjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexjba",
      "html_url": "https://github.com/alexjba",
      "followers_url": "https://api.github.com/users/alexjba/followers",
      "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
      "organizations_url": "https://api.github.com/users/alexjba/orgs",
      "repos_url": "https://api.github.com/users/alexjba/repos",
      "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexjba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-29T14:26:18Z",
    "updated_at": "2023-05-29T14:26:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@saledjenic Currently if the  `ConvertToKeycardAccount ` fails, the backend access will be locked and nim won't be able to reach it anymore. This is the variable used to lock it:\r\n```\r\n  if DB_BLOCKED_DUE_TO_PROFILE_MIGRATION:\r\n    debug \"DB blocked due to profile migration, unable to proceed with the rpc call\", rpc_method=methodName\r\n    raise newException(RpcException, \"db closed due to profile migration\")\r\n```\r\n\r\nOn top of fixing the `database is locked` issue, it might be good to also improve the error handling in nim and status-go in order not to break the current app session or the profile. IMO there's two missing pieces (might be more and I'm missing something):\r\n1. Restore the profile to use password login\r\n2. Release the `DB_BLOCKED_DUE_TO_PROFILE_MIGRATION` lock \r\n\r\nWDYT of adding another task to keep track of it once we plan to release for keycard support?",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1567209747/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1567252697",
    "html_url": "https://github.com/status-im/status-desktop/issues/10838#issuecomment-1567252697",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10838",
    "id": 1567252697,
    "node_id": "IC_kwDOD5KrTM5damDZ",
    "user": {
      "login": "alexjba",
      "id": 47811206,
      "node_id": "MDQ6VXNlcjQ3ODExMjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexjba",
      "html_url": "https://github.com/alexjba",
      "followers_url": "https://api.github.com/users/alexjba/followers",
      "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
      "organizations_url": "https://api.github.com/users/alexjba/orgs",
      "repos_url": "https://api.github.com/users/alexjba/repos",
      "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexjba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-29T15:05:19Z",
    "updated_at": "2023-05-29T15:06:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Changing the flow a little bit results in a different error - `FOREIGN KEY constraint failed` while inserting in `keycards`.\r\n> \r\n> In `AddKeycardOrAddAccountsIfKeycardIsAdded` changing the flow From: Begin transaction -> Select from `keycards` -> Insert into `keycards` -> `Database is locked` To: Select from `keycards` -> Begin transaction -> Insert into `keycards` -> `FOREIGN KEY constraint failed`\r\n\r\nThere's a circular foreign key definition between `keycards` and `keycards_accounts`. Based on sqlite documentation we shouldn't be able to insert into any of these tables. Now I'm not sure why it worked when having only 1 db connection.\r\nBased on this [documentation](https://www.sqlite.org/foreignkeys.html), we would need what is defined in the doc as `Deferred Foreign Key Constraints`. This should allow us to insert in these tables if we're running the inserts on the same transaction.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1567252697/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1567810205",
    "html_url": "https://github.com/status-im/status-desktop/issues/10838#issuecomment-1567810205",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10838",
    "id": 1567810205,
    "node_id": "IC_kwDOD5KrTM5dcuKd",
    "user": {
      "login": "saledjenic",
      "id": 86303051,
      "node_id": "MDQ6VXNlcjg2MzAzMDUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/86303051?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saledjenic",
      "html_url": "https://github.com/saledjenic",
      "followers_url": "https://api.github.com/users/saledjenic/followers",
      "following_url": "https://api.github.com/users/saledjenic/following{/other_user}",
      "gists_url": "https://api.github.com/users/saledjenic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saledjenic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saledjenic/subscriptions",
      "organizations_url": "https://api.github.com/users/saledjenic/orgs",
      "repos_url": "https://api.github.com/users/saledjenic/repos",
      "events_url": "https://api.github.com/users/saledjenic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saledjenic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-30T06:11:51Z",
    "updated_at": "2023-05-30T06:11:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Currently if the ConvertToKeycardAccount  fails, the backend access will be locked and nim won't be able to reach it anymore. This is the variable used to lock it:\r\n\r\n`ConvertToKeycardAccount` function is called only in case of profile keypair migration. Actually that may fail only if any db operation fails. The sad thing is that if that happens we cannot recover the app, but at least for not it is like that. The result of that process is converted account and the only option available for logged in user to do is to quit the app. \r\n\r\nNow about this part `if DB_BLOCKED_DUE_TO_PROFILE_MIGRATION: ...` while migration is ongoing (since that's an async job) many other parts of the app may do some db calls, if those calls come the db encryption has changed (from pass to encrypted pub key) the user may face an error (cannot recall maybe even a crash). That's the reason why we have that check.\r\n\r\n> WDYT of adding another task to keep track of it once we plan to release for keycard support?\r\n\r\nNot sure that I understand this, but keycard support will be released with mvp.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1567810205/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1567827971",
    "html_url": "https://github.com/status-im/status-desktop/issues/10838#issuecomment-1567827971",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10838",
    "id": 1567827971,
    "node_id": "IC_kwDOD5KrTM5dcygD",
    "user": {
      "login": "saledjenic",
      "id": 86303051,
      "node_id": "MDQ6VXNlcjg2MzAzMDUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/86303051?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saledjenic",
      "html_url": "https://github.com/saledjenic",
      "followers_url": "https://api.github.com/users/saledjenic/followers",
      "following_url": "https://api.github.com/users/saledjenic/following{/other_user}",
      "gists_url": "https://api.github.com/users/saledjenic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saledjenic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saledjenic/subscriptions",
      "organizations_url": "https://api.github.com/users/saledjenic/orgs",
      "repos_url": "https://api.github.com/users/saledjenic/repos",
      "events_url": "https://api.github.com/users/saledjenic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saledjenic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-30T06:18:45Z",
    "updated_at": "2023-05-30T06:18:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "> There's a circular foreign key definition between keycards and keycards_accounts. \r\n\r\nHow do you see it \"circular\"?\r\nIn `keypairs` table primary key is `key_uid`. \r\nIn `keycards` table primary key is `keycard_uid`. There is also a `key_uid` column which is a foreign key which references `keypairs.key_uid`\r\n\r\n`keypairs_accounts` table has a foreign key `key_uid` which references `keypairs.key_uid`\r\n`keycards_accounts` table has a foreign key `keycard_uid` which references `keycards.keycard_uid`\r\n\r\nBased on described relations I don't see any circular dependency?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1567827971/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1567895306",
    "html_url": "https://github.com/status-im/status-desktop/issues/10838#issuecomment-1567895306",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10838",
    "id": 1567895306,
    "node_id": "IC_kwDOD5KrTM5ddC8K",
    "user": {
      "login": "alexjba",
      "id": 47811206,
      "node_id": "MDQ6VXNlcjQ3ODExMjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexjba",
      "html_url": "https://github.com/alexjba",
      "followers_url": "https://api.github.com/users/alexjba/followers",
      "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
      "organizations_url": "https://api.github.com/users/alexjba/orgs",
      "repos_url": "https://api.github.com/users/alexjba/repos",
      "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexjba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-30T07:17:25Z",
    "updated_at": "2023-05-30T07:17:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Based on described relations I don't see any circular dependency?\r\n\r\nYou are right, thanks! Got lost in keycards and keypairs. Back to square one to fully understand this behaviour.\r\n\r\n\r\n\r\n> > Currently if the ConvertToKeycardAccount  fails, the backend access will be locked and nim won't be able to reach it anymore. This is the variable used to lock it:\r\n> \r\n> `ConvertToKeycardAccount` function is called only in case of profile keypair migration. Actually that may fail only if any db operation fails. The sad thing is that if that happens we cannot recover the app, but at least for not it is like that. The result of that process is converted account and the only option available for logged in user to do is to quit the app.\r\n> \r\n> Now about this part `if DB_BLOCKED_DUE_TO_PROFILE_MIGRATION: ...` while migration is ongoing (since that's an async job) many other parts of the app may do some db calls, if those calls come the db encryption has changed (from pass to encrypted pub key) the user may face an error (cannot recall maybe even a crash). That's the reason why we have that check.\r\n> \r\n> > WDYT of adding another task to keep track of it once we plan to release for keycard support?\r\n> \r\n> Not sure that I understand this, but keycard support will be released with mvp.\r\n\r\n\r\nWhat I meant is that currently when there is an error in profile migration the account becomes unusable. It is partially migrated to keycard, but the keycard login won't work. The question is if it's feasible (also if it's something we want) to fix this so that the user can still use the same account in case of migration error?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1567895306/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1567918244",
    "html_url": "https://github.com/status-im/status-desktop/issues/10838#issuecomment-1567918244",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10838",
    "id": 1567918244,
    "node_id": "IC_kwDOD5KrTM5ddIik",
    "user": {
      "login": "saledjenic",
      "id": 86303051,
      "node_id": "MDQ6VXNlcjg2MzAzMDUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/86303051?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saledjenic",
      "html_url": "https://github.com/saledjenic",
      "followers_url": "https://api.github.com/users/saledjenic/followers",
      "following_url": "https://api.github.com/users/saledjenic/following{/other_user}",
      "gists_url": "https://api.github.com/users/saledjenic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saledjenic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saledjenic/subscriptions",
      "organizations_url": "https://api.github.com/users/saledjenic/orgs",
      "repos_url": "https://api.github.com/users/saledjenic/repos",
      "events_url": "https://api.github.com/users/saledjenic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saledjenic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-30T07:35:24Z",
    "updated_at": "2023-05-30T07:35:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "> What I meant is that currently when there is an error in profile migration the account becomes unusable. It is partially migrated to keycard, but the keycard login won't work. The question is if it's feasible (also if it's something we want) to fix this so that the user can still use the same account in case of migration error?\r\n\r\nYes, that's true, if something goes wrong there is no a recovering process which will revert applied changes and keep the profile valid. Otherwise if an error occurs even if user is able to login, that account is corrupted, cause a migration was partially done and the data in the db are inconsistent. That's something we can think of and possibly improve, but I guess that will require wider changes cause I used the existing `ConvertToKeycardAccount` function and just updated it a bit. \r\nIn short something may go wrong in one of the following cases:\r\n1. if there is any db error running queries (which is the issue we're experiencing now)\r\n2. if changing db password fails\r\n3. if deleting local keystore files fails\r\n\r\nfor any of those we actually cannot do anything to recover from that state:\r\n- In case 1. what we can do? But that's actually very hard to happen (the db locked issue is because of those improvements, but once we fix that, it should be hard to get into db error)\r\n- in case 2. if that fails we don't have too much to do, actually nothing\r\n- in case 3. the same, cause if deletion any of keystore files fails in order to re-create previously delete files we need seed phrase which we don't have at that moment and no way to get it from anywhere\r\n\r\nAll in all (at least for now) that's very sensitive action (which may take very long, depends on the db size), which should go smooth, but if something goes wrong, the only what user can do is to remove local Status folder and recover his account.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1567918244/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1568236815",
    "html_url": "https://github.com/status-im/status-desktop/issues/10838#issuecomment-1568236815",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10838",
    "id": 1568236815,
    "node_id": "IC_kwDOD5KrTM5deWUP",
    "user": {
      "login": "saledjenic",
      "id": 86303051,
      "node_id": "MDQ6VXNlcjg2MzAzMDUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/86303051?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saledjenic",
      "html_url": "https://github.com/saledjenic",
      "followers_url": "https://api.github.com/users/saledjenic/followers",
      "following_url": "https://api.github.com/users/saledjenic/following{/other_user}",
      "gists_url": "https://api.github.com/users/saledjenic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saledjenic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saledjenic/subscriptions",
      "organizations_url": "https://api.github.com/users/saledjenic/orgs",
      "repos_url": "https://api.github.com/users/saledjenic/repos",
      "events_url": "https://api.github.com/users/saledjenic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saledjenic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-30T11:06:37Z",
    "updated_at": "2023-05-30T11:06:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm facing the same issue when I was trying to change a display name in the latest master branch, here is the log:\r\n```\r\nDBG 2023-05-30 13:03:21.643+02:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=3398430 file=core.nim:27 rpc_method=wakuext_getLatestVerificationRequestFrom\r\nDBG 2023-05-30 13:03:25.465+02:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=3398430 file=core.nim:27 rpc_method=wakuext_getLatestVerificationRequestFrom\r\n2023-05-30T13:03:26.120+0200\tWARN\tpeerstore\tpstoremem/addr_book.go:248\tWas passed p2p address with a different peerId. found: 16Uiu2HAkyScd7DiwgMwzfw8CFFhznH3wRzciqEUfjDzn7vyimR8c, expected: 16Uiu2HAm7v2ZkJVDPH9z9NaN7G81E8iUzSiZ6FDFcq6a4taBcAjd\r\nDBG 2023-05-30 13:03:50.148+02:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=3398430 file=core.nim:27 rpc_method=wakuext_setDisplayName\r\nERR 2023-05-30 13:03:50.153+02:00 rpc response error                         topics=\"rpc\" tid=3398430 file=core.nim:36 err=\"\\nstatus-go error [methodName:wakuext_setDisplayName, code:-32000, message:database is locked ]\\n\"\r\nERR 2023-05-30 13:03:50.153+02:00 error doing rpc request                    topics=\"rpc\" tid=3398430 file=core.nim:40 methodName=wakuext_setDisplayName exception=\"\\nstatus-go error [methodName:wakuext_setDisplayName, code:-32000, message:database is locked ]\\n\"\r\nERR 2023-05-30 13:03:50.153+02:00 error:                                     topics=\"profile-service\" tid=3398430 file=service.nim:81 procName=setDisplayName errName=RpcException errDesription=\"\\nstatus-go error [methodName:wakuext_setDisplayName, code:-32000, message:database is locked ]\\n\"\r\nDBG 2023-05-30 13:03:50.154+02:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=3398430 file=core.nim:27 rpc_method=settings_setBio\r\nDBG 2023-05-30 13:03:50.155+02:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=3398430 file=core.nim:27 rpc_method=settings_setSocialLinks\r\nDBG 2023-05-30 13:03:50.155+02:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=3398430 file=core.nim:27 rpc_method=settings_getSocialLinks\r\nDBG 2023-05-30 13:03:50.157+02:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=3398430 file=core.nim:27 rpc_method=multiaccounts_deleteIdentityImage\r\nDBG 2023-05-30 13:03:50.158+02:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=3398430 file=core.nim:27 rpc_method=wakuext_getLatestVerificationRequestFrom\r\n\r\n```\r\n\r\n@alexjba @osmaczko could we revert that commit where db improvements are added and merge it once we solve this issue?",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1568236815/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1568329163",
    "html_url": "https://github.com/status-im/status-desktop/issues/10838#issuecomment-1568329163",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10838",
    "id": 1568329163,
    "node_id": "IC_kwDOD5KrTM5des3L",
    "user": {
      "login": "caybro",
      "id": 5377645,
      "node_id": "MDQ6VXNlcjUzNzc2NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/caybro",
      "html_url": "https://github.com/caybro",
      "followers_url": "https://api.github.com/users/caybro/followers",
      "following_url": "https://api.github.com/users/caybro/following{/other_user}",
      "gists_url": "https://api.github.com/users/caybro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/caybro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/caybro/subscriptions",
      "organizations_url": "https://api.github.com/users/caybro/orgs",
      "repos_url": "https://api.github.com/users/caybro/repos",
      "events_url": "https://api.github.com/users/caybro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/caybro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-30T12:14:10Z",
    "updated_at": "2023-05-30T12:14:10Z",
    "author_association": "MEMBER",
    "body": "> \r\n\r\n\r\n\r\n> I'm facing the same issue when I was trying to change a display name in the latest master branch, here is the log:\r\n> \r\n> ```\r\n> DBG 2023-05-30 13:03:21.643+02:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=3398430 file=core.nim:27 rpc_method=wakuext_getLatestVerificationRequestFrom\r\n> DBG 2023-05-30 13:03:25.465+02:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=3398430 file=core.nim:27 rpc_method=wakuext_getLatestVerificationRequestFrom\r\n> 2023-05-30T13:03:26.120+0200\tWARN\tpeerstore\tpstoremem/addr_book.go:248\tWas passed p2p address with a different peerId. found: 16Uiu2HAkyScd7DiwgMwzfw8CFFhznH3wRzciqEUfjDzn7vyimR8c, expected: 16Uiu2HAm7v2ZkJVDPH9z9NaN7G81E8iUzSiZ6FDFcq6a4taBcAjd\r\n> DBG 2023-05-30 13:03:50.148+02:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=3398430 file=core.nim:27 rpc_method=wakuext_setDisplayName\r\n> ERR 2023-05-30 13:03:50.153+02:00 rpc response error                         topics=\"rpc\" tid=3398430 file=core.nim:36 err=\"\\nstatus-go error [methodName:wakuext_setDisplayName, code:-32000, message:database is locked ]\\n\"\r\n> ERR 2023-05-30 13:03:50.153+02:00 error doing rpc request                    topics=\"rpc\" tid=3398430 file=core.nim:40 methodName=wakuext_setDisplayName exception=\"\\nstatus-go error [methodName:wakuext_setDisplayName, code:-32000, message:database is locked ]\\n\"\r\n> ERR 2023-05-30 13:03:50.153+02:00 error:                                     topics=\"profile-service\" tid=3398430 file=service.nim:81 procName=setDisplayName errName=RpcException errDesription=\"\\nstatus-go error [methodName:wakuext_setDisplayName, code:-32000, message:database is locked ]\\n\"\r\n> DBG 2023-05-30 13:03:50.154+02:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=3398430 file=core.nim:27 rpc_method=settings_setBio\r\n> DBG 2023-05-30 13:03:50.155+02:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=3398430 file=core.nim:27 rpc_method=settings_setSocialLinks\r\n> DBG 2023-05-30 13:03:50.155+02:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=3398430 file=core.nim:27 rpc_method=settings_getSocialLinks\r\n> DBG 2023-05-30 13:03:50.157+02:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=3398430 file=core.nim:27 rpc_method=multiaccounts_deleteIdentityImage\r\n> DBG 2023-05-30 13:03:50.158+02:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=3398430 file=core.nim:27 rpc_method=wakuext_getLatestVerificationRequestFrom\r\n> ```\r\n> \r\n> @alexjba @osmaczko could we revert that commit where db improvements are added and merge it once we solve this issue?\r\n\r\nHmmm... I cannot reproduce on latest master (under Linux). \r\n\r\nBut... we have the very same issue open already: #10827",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1568329163/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1568479918",
    "html_url": "https://github.com/status-im/status-desktop/issues/10838#issuecomment-1568479918",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10838",
    "id": 1568479918,
    "node_id": "IC_kwDOD5KrTM5dfRqu",
    "user": {
      "login": "alexjba",
      "id": 47811206,
      "node_id": "MDQ6VXNlcjQ3ODExMjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexjba",
      "html_url": "https://github.com/alexjba",
      "followers_url": "https://api.github.com/users/alexjba/followers",
      "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
      "organizations_url": "https://api.github.com/users/alexjba/orgs",
      "repos_url": "https://api.github.com/users/alexjba/repos",
      "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexjba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-30T13:54:55Z",
    "updated_at": "2023-05-30T13:54:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Apparently there can be read transactions and write transactions (based on the first statement used in the transaction). In our case the the db lock was happening when the first transaction statement is `select`. The transaction is set to read transaction and it can't be upgraded to write due to multiple connections/transactions. In this case the `database is locked` error is sent. (https://www.sqlite.org/lang_transaction.html)\r\n\r\nThe fix in our case seems to be to set `_txlock` to `immediate`. This means all transactions will be considered write transactions. And it makes sense for us as all transactions we open are write transactions.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1568479918/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1569020603",
    "html_url": "https://github.com/status-im/status-desktop/issues/10838#issuecomment-1569020603",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10838",
    "id": 1569020603,
    "node_id": "IC_kwDOD5KrTM5dhVq7",
    "user": {
      "login": "noeliaSD",
      "id": 97019400,
      "node_id": "U_kgDOBchmCA",
      "avatar_url": "https://avatars.githubusercontent.com/u/97019400?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/noeliaSD",
      "html_url": "https://github.com/noeliaSD",
      "followers_url": "https://api.github.com/users/noeliaSD/followers",
      "following_url": "https://api.github.com/users/noeliaSD/following{/other_user}",
      "gists_url": "https://api.github.com/users/noeliaSD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/noeliaSD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/noeliaSD/subscriptions",
      "organizations_url": "https://api.github.com/users/noeliaSD/orgs",
      "repos_url": "https://api.github.com/users/noeliaSD/repos",
      "events_url": "https://api.github.com/users/noeliaSD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/noeliaSD/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-30T20:07:10Z",
    "updated_at": "2023-05-30T20:07:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "> But... we have the very same issue open already: #10827\r\n\r\nScenario `suite_settings/tst_userIdentity/The user can change own display name in profile` has been skipped since `displayName` is not correctly updated in **profile page**. Please, enable it again when the bug is solved.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1569020603/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
