{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/8830",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/8830/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/8830/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/8830/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/8830",
  "id": 1499977785,
  "node_id": "I_kwDOD5KrTM5ZZ9g5",
  "number": 8830,
  "title": "[Community Permissions] Create C++ reusable model wrapper that manages dirty state of a list model",
  "user": {
    "login": "noeliaSD",
    "id": 97019400,
    "node_id": "U_kgDOBchmCA",
    "avatar_url": "https://avatars.githubusercontent.com/u/97019400?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/noeliaSD",
    "html_url": "https://github.com/noeliaSD",
    "followers_url": "https://api.github.com/users/noeliaSD/followers",
    "following_url": "https://api.github.com/users/noeliaSD/following{/other_user}",
    "gists_url": "https://api.github.com/users/noeliaSD/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/noeliaSD/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/noeliaSD/subscriptions",
    "organizations_url": "https://api.github.com/users/noeliaSD/orgs",
    "repos_url": "https://api.github.com/users/noeliaSD/repos",
    "events_url": "https://api.github.com/users/noeliaSD/events{/privacy}",
    "received_events_url": "https://api.github.com/users/noeliaSD/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2087353959,
      "node_id": "MDU6TGFiZWwyMDg3MzUzOTU5",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/ui-team",
      "name": "ui-team",
      "color": "1111ff",
      "default": false,
      "description": ""
    },
    {
      "id": 2588688093,
      "node_id": "MDU6TGFiZWwyNTg4Njg4MDkz",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/Communities",
      "name": "Communities",
      "color": "3923e0",
      "default": false,
      "description": ""
    },
    {
      "id": 3205515124,
      "node_id": "MDU6TGFiZWwzMjA1NTE1MTI0",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/priority%20F2:%20important",
      "name": "priority F2: important",
      "color": "FBCA04",
      "default": false,
      "description": "a feature the app should have if possible, has high business value but the app can work without it"
    },
    {
      "id": 4152389672,
      "node_id": "LA_kwDOD5KrTM73gHAo",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/ui-improvements",
      "name": "ui-improvements",
      "color": "98E78E",
      "default": false,
      "description": ""
    },
    {
      "id": 4240005419,
      "node_id": "LA_kwDOD5KrTM78uVkr",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/S:2",
      "name": "S:2",
      "color": "C76232",
      "default": false,
      "description": "Effort or problem solving is required, known problem and little to no unknowns"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "micieslak",
    "id": 20650004,
    "node_id": "MDQ6VXNlcjIwNjUwMDA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/20650004?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/micieslak",
    "html_url": "https://github.com/micieslak",
    "followers_url": "https://api.github.com/users/micieslak/followers",
    "following_url": "https://api.github.com/users/micieslak/following{/other_user}",
    "gists_url": "https://api.github.com/users/micieslak/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/micieslak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/micieslak/subscriptions",
    "organizations_url": "https://api.github.com/users/micieslak/orgs",
    "repos_url": "https://api.github.com/users/micieslak/repos",
    "events_url": "https://api.github.com/users/micieslak/events{/privacy}",
    "received_events_url": "https://api.github.com/users/micieslak/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "micieslak",
      "id": 20650004,
      "node_id": "MDQ6VXNlcjIwNjUwMDA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20650004?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/micieslak",
      "html_url": "https://github.com/micieslak",
      "followers_url": "https://api.github.com/users/micieslak/followers",
      "following_url": "https://api.github.com/users/micieslak/following{/other_user}",
      "gists_url": "https://api.github.com/users/micieslak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/micieslak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/micieslak/subscriptions",
      "organizations_url": "https://api.github.com/users/micieslak/orgs",
      "repos_url": "https://api.github.com/users/micieslak/repos",
      "events_url": "https://api.github.com/users/micieslak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/micieslak/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-12-16T10:37:17Z",
  "updated_at": "2023-02-20T17:41:02Z",
  "closed_at": "2023-02-20T17:41:02Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\r\nWe have a few use cases, particularly in `Community Permission`, but there may be more in the future, where we have a list model data and want to detect if a form is changed from the initial list model data.\r\n\r\n### What to do\r\nCreate C++ model wrapping the original model:\r\n````\r\nIntermediateModel /*Or thing a better appropiate naming*/ {\r\n   id: intermediateModel\r\n   sourceModel: hodlingsModel\r\n}\r\n````\r\nSuch model would have the same roles of the provided `sourceModel` + additional `dirty` role. Moreover it could expose additional `dirty` property for the whole model set to true when there is any change. It could be used as follows:\r\n````\r\nButton {\r\n  text: \"Close\"\r\n  onClicked: {\r\n     if (intermediateModel.dirty)\r\n        // open confirm exit modal\r\n     else\r\n        closeView()\r\n   }\r\n}\r\n````\r\n\r\n\r\n**NOTE:** Once it is done, remove all js edit logic here `ui/app/AppLayouts/Chat/views/communities/CommunityNewPermissionView.qml` and use the new object type instead.\r\n",
  "closed_by": {
    "login": "micieslak",
    "id": 20650004,
    "node_id": "MDQ6VXNlcjIwNjUwMDA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/20650004?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/micieslak",
    "html_url": "https://github.com/micieslak",
    "followers_url": "https://api.github.com/users/micieslak/followers",
    "following_url": "https://api.github.com/users/micieslak/following{/other_user}",
    "gists_url": "https://api.github.com/users/micieslak/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/micieslak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/micieslak/subscriptions",
    "organizations_url": "https://api.github.com/users/micieslak/orgs",
    "repos_url": "https://api.github.com/users/micieslak/repos",
    "events_url": "https://api.github.com/users/micieslak/events{/privacy}",
    "received_events_url": "https://api.github.com/users/micieslak/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/8830/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/8830/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1354540277",
    "html_url": "https://github.com/status-im/status-desktop/issues/8830#issuecomment-1354540277",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/8830",
    "id": 1354540277,
    "node_id": "IC_kwDOD5KrTM5QvKT1",
    "user": {
      "login": "micieslak",
      "id": 20650004,
      "node_id": "MDQ6VXNlcjIwNjUwMDA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20650004?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/micieslak",
      "html_url": "https://github.com/micieslak",
      "followers_url": "https://api.github.com/users/micieslak/followers",
      "following_url": "https://api.github.com/users/micieslak/following{/other_user}",
      "gists_url": "https://api.github.com/users/micieslak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/micieslak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/micieslak/subscriptions",
      "organizations_url": "https://api.github.com/users/micieslak/orgs",
      "repos_url": "https://api.github.com/users/micieslak/repos",
      "events_url": "https://api.github.com/users/micieslak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/micieslak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-16T10:44:06Z",
    "updated_at": "2022-12-16T10:44:06Z",
    "author_association": "MEMBER",
    "body": "Thank you @noeliaSD for creating ticket for that idea.\r\n\r\nSome additional clarification:\r\n\r\nIt's quite significant effort to create such model, provide some potentially needed configuration possibilities and write tests. But it has big potential to be reused in many places, reducing js code bloat in qml part.\r\n\r\nOf course such `IntermediateModel` could be modified freely, without affecting the source. In more advanced version it could also track changes in the original model and react to them accordingly to the chosen strategy.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1354540277/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
