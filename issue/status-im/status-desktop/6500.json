{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/6500",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/6500/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/6500/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/6500/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/6500",
  "id": 1307565753,
  "node_id": "I_kwDOD5KrTM5N7965",
  "number": 6500,
  "title": "Make `StatusListPicker` work with backend models",
  "user": {
    "login": "osmaczko",
    "id": 33099791,
    "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/osmaczko",
    "html_url": "https://github.com/osmaczko",
    "followers_url": "https://api.github.com/users/osmaczko/followers",
    "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
    "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
    "organizations_url": "https://api.github.com/users/osmaczko/orgs",
    "repos_url": "https://api.github.com/users/osmaczko/repos",
    "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/osmaczko/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4220089404,
      "node_id": "LA_kwDOD5KrTM77iXQ8",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/S:3",
      "name": "S:3",
      "color": "03A6A2",
      "default": false,
      "description": "We know what needs to be done, some extra steps, but that’s it, little to no unknowns"
    },
    {
      "id": 4247499644,
      "node_id": "LA_kwDOD5KrTM79K7N8",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Settings",
      "name": "E:Settings",
      "color": "0544AC",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "osmaczko",
    "id": 33099791,
    "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/osmaczko",
    "html_url": "https://github.com/osmaczko",
    "followers_url": "https://api.github.com/users/osmaczko/followers",
    "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
    "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
    "organizations_url": "https://api.github.com/users/osmaczko/orgs",
    "repos_url": "https://api.github.com/users/osmaczko/repos",
    "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/osmaczko/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "osmaczko",
      "id": 33099791,
      "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osmaczko",
      "html_url": "https://github.com/osmaczko",
      "followers_url": "https://api.github.com/users/osmaczko/followers",
      "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
      "organizations_url": "https://api.github.com/users/osmaczko/orgs",
      "repos_url": "https://api.github.com/users/osmaczko/repos",
      "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osmaczko/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-07-18T08:12:39Z",
  "updated_at": "2022-07-27T11:54:24Z",
  "closed_at": "2022-07-27T11:54:24Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\n`StatusListPicker` is a reusable StatusQ component which purpose is to display a list of items that comply with the predefined interface. It expects `ListModel` with elements that define `key, name, shortName, symbol, imageSource, category, selected`.\r\nThe interface is good enough for a sandbox app that works on mocked `ListModel`s, but it does work with status-desktop which provides data through `QAbstractListModel`.\r\n\r\nUsing `ListModel` as an interface leads to situations where `StatusListPicker` drives the backend model structure, which is **entirely wrong**. \r\nExample: \r\n[LanguageStore.qml](https://github.com/status-im/status-desktop/blob/ee8477ae9b588a98213427cdbefe2dc9ab1ed3c3/ui/app/AppLayouts/Profile/stores/LanguageStore.qml#L13-L29)\r\n```\r\n    property ListModel languageModel: ListModel {\r\n        ListElement {key: \"en\"; shortName: \"English\"; name: \"English\"; category: \"\"; imageSource: \"../../assets/twemoji/svg/1f1ec-1f1e7.svg\"; selected: false}\r\n        ListElement {key: \"zh\"; shortName: \"普通话\"; name: \"Chinese (Mainland China)\"; imageSource: \"../../assets/twemoji/svg/1f1e8-1f1f3.svg\"; category: \"\"; selected: false}\r\n        ListElement {key: \"ko\"; shortName: \"한국어\"; name: \"Korean\"; category: \"\"; imageSource: \"../../assets/twemoji/svg/1f1f0-1f1f7.svg\"; selected: false}\r\n        ListElement {key: \"pt_BR\"; shortName: \"Português\"; name: \"Portuguese (Brazil)\"; category: \"\"; imageSource: \"../../assets/twemoji/svg/1f1e7-1f1f7.svg\"; selected: false}\r\n        ListElement {key: \"ru\"; shortName: \"Русский Язык\"; name: \"Russian\"; category: \"\"; imageSource: \"../../assets/twemoji/svg/1f1f7-1f1fa.svg\"; selected: false}\r\n        ListElement {key: \"ar\"; shortName: \"اَلْعَرَبِيَّةُ\"; name: \"Arabic\"; category: qsTr(\"Beta Languages\"); imageSource: \"../../assets/twemoji/svg/1f1f8-1f1e6.svg\"; selected: false}\r\n        ListElement {key: \"zh_TW\"; shortName: \"臺灣華語\"; name: \"Chinese (Taiwan)\"; category: qsTr(\"Beta Languages\"); imageSource: \"../../assets/twemoji/svg/1f1f9-1f1fc.svg\"; selected: false}\r\n        ListElement {key: \"de\"; shortName: \"Nederlands\"; name: \"Dutch\"; category: qsTr(\"Beta Languages\"); imageSource: \"../../assets/twemoji/svg/1f1f3-1f1f1.svg\"; selected: false}\r\n        ListElement {key: \"fil\"; shortName: \"Wikang Filipino\"; name: \"Filipino\"; category: qsTr(\"Beta Languages\"); imageSource: \"../../assets/twemoji/svg/1f1f5-1f1ed.svg\"; selected: false}\r\n        ListElement {key: \"fr\"; shortName: \"Français\"; name: \"French\"; category: qsTr(\"Beta Languages\"); imageSource: \"../../assets/twemoji/svg/1f1eb-1f1f7.svg\"; selected: false}\r\n        ListElement {key: \"id\"; shortName: \"Bahasa Indonesia\"; name: \"Indonesian\"; category: qsTr(\"Beta Languages\"); imageSource: \"../../assets/twemoji/svg/1f1ee-1f1e9.svg\"; selected: false}\r\n        ListElement {key: \"it\"; shortName: \"Italiano\"; name: \"Italian\"; category: qsTr(\"Beta Languages\"); imageSource: \"../../assets/twemoji/svg/1f1ee-1f1f9.svg\"; selected: false}\r\n        ListElement {key: \"es\"; shortName: \"Español\"; name: \"Spanish\"; category: qsTr(\"Beta Languages\"); imageSource: \"../../assets/twemoji/svg/1f1ea-1f1f8.svg\"; selected: false}\r\n        ListElement {key: \"tr\"; shortName: \"Türkçe\"; name: \"Turkish\"; category: qsTr(\"Beta Languages\"); imageSource: \"../../assets/twemoji/svg/1f1f9-1f1f7.svg\"; selected: false}\r\n        ListElement {key: \"ur\"; shortName: \"اُردُو\"; name: \"Urdu\"; category: qsTr(\"Beta Languages\"); imageSource: \"../../assets/twemoji/svg/1f1f5-1f1f0.svg\"; selected: false}\r\n    }\r\n```\r\nIn order to make a language model work with `StatusListPicker` its fields were renamed, as a consequence making this model incompatible with any other StatusQ component that may require different list elements naming (e.g. `descr` instead of `shortName`, etc.). _Mentioned limitation makes it impossible to use `StatusListPicker` with models with different role names._\r\n\r\nIn short: `StatusListPicker` should be able to work with different kinds of models, for instance, we may want to \"pick\" user, language, currency, etc. (these models have different role names).\r\n\r\nSolution proposal:\r\n- extract delegate so that each client assigns properties accordingly to model roles:\r\n```\r\nStatusListPicker {\r\n    model: userModel\r\n    delegate: StatusListPickerDelegate {\r\n        key: model.name\r\n        shortName: model.alias\r\n        etc..\r\n    }\r\n}\r\n```\r\n\r\nObstacles:\r\n- `StatusListPicker` creates `filteredModel` imperatively assuming role names. It has to be abstracted as well. That may be the challenging part.\r\n",
  "closed_by": {
    "login": "osmaczko",
    "id": 33099791,
    "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/osmaczko",
    "html_url": "https://github.com/osmaczko",
    "followers_url": "https://api.github.com/users/osmaczko/followers",
    "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
    "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
    "organizations_url": "https://api.github.com/users/osmaczko/orgs",
    "repos_url": "https://api.github.com/users/osmaczko/repos",
    "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/osmaczko/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/6500/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/6500/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1187050058",
    "html_url": "https://github.com/status-im/status-desktop/issues/6500#issuecomment-1187050058",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/6500",
    "id": 1187050058,
    "node_id": "IC_kwDOD5KrTM5GwPJK",
    "user": {
      "login": "caybro",
      "id": 5377645,
      "node_id": "MDQ6VXNlcjUzNzc2NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/caybro",
      "html_url": "https://github.com/caybro",
      "followers_url": "https://api.github.com/users/caybro/followers",
      "following_url": "https://api.github.com/users/caybro/following{/other_user}",
      "gists_url": "https://api.github.com/users/caybro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/caybro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/caybro/subscriptions",
      "organizations_url": "https://api.github.com/users/caybro/orgs",
      "repos_url": "https://api.github.com/users/caybro/repos",
      "events_url": "https://api.github.com/users/caybro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/caybro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-18T10:50:01Z",
    "updated_at": "2022-07-18T10:50:01Z",
    "author_association": "MEMBER",
    "body": "QAbstractListModel to the rescue :)",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1187050058/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
