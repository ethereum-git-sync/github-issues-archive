{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/12170",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/12170/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/12170/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/12170/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/12170",
  "id": 1898066728,
  "node_id": "I_kwDOD5KrTM5xIjMo",
  "number": 12170,
  "title": "[Join community] Cannot join communities after restoring the account from keycard",
  "user": {
    "login": "alexjba",
    "id": 47811206,
    "node_id": "MDQ6VXNlcjQ3ODExMjA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alexjba",
    "html_url": "https://github.com/alexjba",
    "followers_url": "https://api.github.com/users/alexjba/followers",
    "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
    "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
    "organizations_url": "https://api.github.com/users/alexjba/orgs",
    "repos_url": "https://api.github.com/users/alexjba/repos",
    "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alexjba/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2036563458,
      "node_id": "MDU6TGFiZWwyMDM2NTYzNDU4",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/bug",
      "name": "bug",
      "color": "d73a4a",
      "default": true,
      "description": "Something isn't working"
    },
    {
      "id": 2331339531,
      "node_id": "MDU6TGFiZWwyMzMxMzM5NTMx",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/wallet-team",
      "name": "wallet-team",
      "color": "b60205",
      "default": false,
      "description": ""
    },
    {
      "id": 4548141040,
      "node_id": "LA_kwDOD5KrTM8AAAABDxcf8A",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/messenger-team",
      "name": "messenger-team",
      "color": "232858",
      "default": false,
      "description": ""
    },
    {
      "id": 5830819681,
      "node_id": "LA_kwDOD5KrTM8AAAABW4s_YQ",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Desktop%20Keycard%20Bug",
      "name": "E:Desktop Keycard Bug",
      "color": "5319e7",
      "default": false,
      "description": "Bug found after initial keycard development"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "endulab",
    "id": 61889657,
    "node_id": "MDQ6VXNlcjYxODg5NjU3",
    "avatar_url": "https://avatars.githubusercontent.com/u/61889657?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/endulab",
    "html_url": "https://github.com/endulab",
    "followers_url": "https://api.github.com/users/endulab/followers",
    "following_url": "https://api.github.com/users/endulab/following{/other_user}",
    "gists_url": "https://api.github.com/users/endulab/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/endulab/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/endulab/subscriptions",
    "organizations_url": "https://api.github.com/users/endulab/orgs",
    "repos_url": "https://api.github.com/users/endulab/repos",
    "events_url": "https://api.github.com/users/endulab/events{/privacy}",
    "received_events_url": "https://api.github.com/users/endulab/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "saledjenic",
      "id": 86303051,
      "node_id": "MDQ6VXNlcjg2MzAzMDUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/86303051?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saledjenic",
      "html_url": "https://github.com/saledjenic",
      "followers_url": "https://api.github.com/users/saledjenic/followers",
      "following_url": "https://api.github.com/users/saledjenic/following{/other_user}",
      "gists_url": "https://api.github.com/users/saledjenic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saledjenic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saledjenic/subscriptions",
      "organizations_url": "https://api.github.com/users/saledjenic/orgs",
      "repos_url": "https://api.github.com/users/saledjenic/repos",
      "events_url": "https://api.github.com/users/saledjenic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saledjenic/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/65",
    "html_url": "https://github.com/status-im/status-desktop/milestone/65",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/65/labels",
    "id": 9039509,
    "node_id": "MI_kwDOD5KrTM4Aie6V",
    "number": 65,
    "title": "0.15",
    "description": "**1. Finish anything that wasn't completed in the previous 0.14 cycle**\r\n- And fix bugs as usual. We need to keep tech. debt at a roughly fixed level as we grow out functionality, can't let it accumulate! ;-)\r\n\r\n**2. Tokenisation of community ownership**\r\n- Work needed already evaluated in spike.  Community and 'Channel in a Community' URLs don't need to be signed if this will present problems. Patryk to work on this as a continuation of the spike already done.\r\n- See priority 4 below, as this also has some implications for the tokenisation of community work.\r\n\r\n**3. Profile showcase backend**\r\n- The long-delayed profile showcase backend!  We have the UI on the desktop ready to go for this feature, and Mobile is going to need the backend for this feature as well, so let's try to get it done in 0.14 [#11081](https://github.com/status-im/status-desktop/issues/11081)\r\n\r\n**4. Community tokens visible in wallet when received by user who is not a member of that community**\r\n- Solution obvs. needs to be fully decenteralised and permissionless\r\n- Perhaps whenever a community token is A) sent from a Status Wallet to another user or B) airdropped by a community or C) retailed by a community, a M2M (invisible to the user) Waku message should be sent to the recipient's *ethereum address*?\r\n- This message could either: A) contain the metadata for the token B) tell the user that they have received token, and to check the metadata in either another Waku channel where Control Nodes periodically post Metadata OR check the metadata embedded in the token contract (embedding metadata in the token contract might be a better idea?).  \r\n- The token metadata stored in the token contract is signed by the Community's private key to ensure authenticity.  When the community's private key changes due to ownership of a community being transferred or due to the control node being moved, a transaction must be made to update this metadata so it is signed by the community's new private key.\r\n- See here for how a Waku message can be sent to and Ethereum address https://rfc.vac.dev/spec/20/\r\n\r\n**5. Discord history import into a single channel in an existing community**\r\n- Pay off any Discord history import service tech. debt first\r\n- Then build the import into a single channel functionality, designs for this are already complete\r\n\r\n**6. UI for community owner to enable manual Waku static shading for their community**\r\n- This will be off by default in 0.15\r\n- This UI is only for the Owner of a community (not TokenMasters or Admins)\r\n- Figma designs are here https://www.figma.com/file/qHfFm7C9LwtXpfdbxssCK3/Kuba%E2%8E%9CDesktop---Communities?type=design&node-id=37242%3A222352&mode=design&t=rw6q6NQYmiz3rSn2-1\r\n\r\n**7. Community chat functionality enhancements**\r\n- Ability to mark a token gated channel as 'hidden', only visible to community members with the requisite tokens\r\n\r\n\r\n\r\n\r\n\r\n**--- Wallet Team ---**\r\n\r\n1. Finish anything that wasn't completed in the previous 0.14 cycle\r\n- And fix bugs as usual. We need to keep tech. debt at a roughly fixed level as we grow out functionality, can't let it accumulate! ;-)\r\n\r\n2. Sending Community created tokens to Status users who are not members of that community\r\n- See priority 4) in the messaging priorities list above.\r\n\r\n3. Send NFT functionality\r\n\r\n4. Updated wallet settings with keypair syncing\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "creator": {
      "login": "iurimatias",
      "id": 176720,
      "node_id": "MDQ6VXNlcjE3NjcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iurimatias",
      "html_url": "https://github.com/iurimatias",
      "followers_url": "https://api.github.com/users/iurimatias/followers",
      "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
      "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
      "organizations_url": "https://api.github.com/users/iurimatias/orgs",
      "repos_url": "https://api.github.com/users/iurimatias/repos",
      "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iurimatias/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 18,
    "closed_issues": 274,
    "state": "open",
    "created_at": "2023-02-13T19:08:52Z",
    "updated_at": "2023-11-06T16:24:07Z",
    "due_on": "2023-11-09T08:00:00Z",
    "closed_at": null
  },
  "comments": 4,
  "created_at": "2023-09-15T09:35:46Z",
  "updated_at": "2023-11-06T14:44:15Z",
  "closed_at": "2023-11-03T15:14:20Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# Bug Report\r\n\r\n## Description\r\n\r\nCannot join Status community with a newly restored account using keycard. It seems to be related to the new `Share address flow`.\r\n<!-- Provide a short description describing the problem you are experiencing. -->\r\n\r\n## Steps to reproduce\r\n1. Make sure there is an account stored on keycard\r\n2. Go through the onboarding flow for an existing Status account\r\n3. Restore using keycard\r\n4. Login after a successful restore\r\n5. Request to join Status community\r\n<!-- example: step 1. do X step 2. do Y etc.. -->\r\n\r\n#### Expected behavior\r\nJoin request is sent\r\n#### Actual behavior\r\nFailed to send join request\r\n### Additional Information\r\n\r\nThe flow fails with the following error:\r\n`cannot retrieve a valid key for a given account`\r\n\r\n- Status desktop version: 0.14 RC9\r\n- Operating System: MacOS\r\n\r\n",
  "closed_by": {
    "login": "saledjenic",
    "id": 86303051,
    "node_id": "MDQ6VXNlcjg2MzAzMDUx",
    "avatar_url": "https://avatars.githubusercontent.com/u/86303051?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/saledjenic",
    "html_url": "https://github.com/saledjenic",
    "followers_url": "https://api.github.com/users/saledjenic/followers",
    "following_url": "https://api.github.com/users/saledjenic/following{/other_user}",
    "gists_url": "https://api.github.com/users/saledjenic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/saledjenic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/saledjenic/subscriptions",
    "organizations_url": "https://api.github.com/users/saledjenic/orgs",
    "repos_url": "https://api.github.com/users/saledjenic/repos",
    "events_url": "https://api.github.com/users/saledjenic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/saledjenic/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/12170/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/12170/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1748609224",
    "html_url": "https://github.com/status-im/status-desktop/issues/12170#issuecomment-1748609224",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12170",
    "id": 1748609224,
    "node_id": "IC_kwDOD5KrTM5oOajI",
    "user": {
      "login": "endulab",
      "id": 61889657,
      "node_id": "MDQ6VXNlcjYxODg5NjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/61889657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/endulab",
      "html_url": "https://github.com/endulab",
      "followers_url": "https://api.github.com/users/endulab/followers",
      "following_url": "https://api.github.com/users/endulab/following{/other_user}",
      "gists_url": "https://api.github.com/users/endulab/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/endulab/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/endulab/subscriptions",
      "organizations_url": "https://api.github.com/users/endulab/orgs",
      "repos_url": "https://api.github.com/users/endulab/repos",
      "events_url": "https://api.github.com/users/endulab/events{/privacy}",
      "received_events_url": "https://api.github.com/users/endulab/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-05T10:22:18Z",
    "updated_at": "2023-10-05T10:22:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "There are 2 additional issues found during reproducing:\r\n1. Problem with fetching data. I encountered this may times (already signalized to QA team)\r\n2. Problem with requesting to join community. After clicking \"Request to join\" button and revealing the address nothing happens.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1748609224/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1761316439",
    "html_url": "https://github.com/status-im/status-desktop/issues/12170#issuecomment-1761316439",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12170",
    "id": 1761316439,
    "node_id": "IC_kwDOD5KrTM5o-45X",
    "user": {
      "login": "saledjenic",
      "id": 86303051,
      "node_id": "MDQ6VXNlcjg2MzAzMDUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/86303051?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saledjenic",
      "html_url": "https://github.com/saledjenic",
      "followers_url": "https://api.github.com/users/saledjenic/followers",
      "following_url": "https://api.github.com/users/saledjenic/following{/other_user}",
      "gists_url": "https://api.github.com/users/saledjenic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saledjenic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saledjenic/subscriptions",
      "organizations_url": "https://api.github.com/users/saledjenic/orgs",
      "repos_url": "https://api.github.com/users/saledjenic/repos",
      "events_url": "https://api.github.com/users/saledjenic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saledjenic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-13T10:53:25Z",
    "updated_at": "2023-10-13T10:53:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've started introducing myself with this part of the app to grasp a context before starting to fix this bug.\n\nThere are 2 things that need to be fixed:\n- verifying account address, in case the address belongs to a keypair that is migrated to a keycard\n- generating a signature for signing the joining community request in case a profile keypair is migrated to a keycard\n\nBut before that, I have some questions for @messenger-team, that might result in some other issues:\n1. I see that the address used as `airdropAddress` is always the default wallet account of the logged-in user, actually the profile that is joining a community, is that what we want?\n2. I also see that we're letting users select which addresses they would like to reveal to the community, but I don't see in the code that we're letting users join the community if they didn't select the default wallet address as an address to be revealed to the community. Is that what we want? How I get it is that addresses selected to be revealed are those other community members may see, but one used for airdrop doesn't need to be revealed and I guess that's the valid case?\n3. Also not sure why we need to sign a community request [here](https://github.com/status-im/status-go/blob/ac813ef5d8f012ba4a0b532483ceeebc553aa3b1/protocol/messenger_communities.go#L987) with all addresses users want to reveal? I somehow expected a community request to be signed once, using the logged-in user chat address, not using wallet addresses.\n4. In case we really need to sign a community request for each revealed address and let's that we want to reveal X addresses where each of them belongs to a different keypair that is migrated to a keycard, then it means we need to ask used to provide X different keycard while requesting to join community process it ongoing and provide pin for each of them to complete the request? \n5. This one is not a question, but more a concern based on code I've seen today, while analyzing this issue. I see that you're fetching the accounts from the wallet-section/send module, [here](https://github.com/status-im/status-desktop/blob/2c5eeea50311554fad2343a4aebebfba10128a93/ui/app/AppLayouts/Wallet/stores/RootStore.qml#L21) to offer users addresses to select which addresses they would like to share when joining a token gated community and also using that model to select the airdrop address. That approach is not very good, much better is to inject wallet-accounts-service in the module where wallet-related data are necessary and grab them from that service and use them in a form you like/need. \nAn issue (that might be hidden) because of that is that there is no guarantee in the order of accounts model fetched from wallet-section/send module, especially when we know that we have drag&drop feature for accounts and that we know that accounts model is just a UI model. That further means, referring to point 1. of this comment, [this](https://github.com/status-im/status-desktop/blob/2c5eeea50311554fad2343a4aebebfba10128a93/ui/imports/shared/popups/CommunityIntroDialog.qml#L90) and similar approaches in other places in the app are wrong.\n\n@jrainville @alexjba @endulab @osmaczko ",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1761316439/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1761398942",
    "html_url": "https://github.com/status-im/status-desktop/issues/12170#issuecomment-1761398942",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12170",
    "id": 1761398942,
    "node_id": "IC_kwDOD5KrTM5o_NCe",
    "user": {
      "login": "caybro",
      "id": 5377645,
      "node_id": "MDQ6VXNlcjUzNzc2NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/caybro",
      "html_url": "https://github.com/caybro",
      "followers_url": "https://api.github.com/users/caybro/followers",
      "following_url": "https://api.github.com/users/caybro/following{/other_user}",
      "gists_url": "https://api.github.com/users/caybro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/caybro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/caybro/subscriptions",
      "organizations_url": "https://api.github.com/users/caybro/orgs",
      "repos_url": "https://api.github.com/users/caybro/repos",
      "events_url": "https://api.github.com/users/caybro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/caybro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-13T11:59:56Z",
    "updated_at": "2023-10-13T12:00:48Z",
    "author_association": "MEMBER",
    "body": "> I've started introducing myself with this part of the app to grasp a context before starting to fix this bug.\r\n> \r\n> There are 2 things that need to be fixed:\r\n> \r\n> * verifying account address, in case the address belongs to a keypair that is migrated to a keycard\r\n> * generating a signature for signing the joining community request in case a profile keypair is migrated to a keycard\r\n> \r\n> But before that, I have some questions for @Messenger-Team, that might result in some other issues:\r\n> \r\n> 1. I see that the address used as `airdropAddress` is always the default wallet account of the logged-in user, actually the profile that is joining a community, is that what we want?\r\n\r\nYes, that is (or should be) the default one but the user is free to select any other\r\n\r\n> 2. I also see that we're letting users select which addresses they would like to reveal to the community, but I don't see in the code that we're letting users join the community if they didn't select the default wallet address as an address to be revealed to the community. Is that what we want? How I get it is that addresses selected to be revealed are those other community members may see, but one used for airdrop doesn't need to be revealed and I guess that's the valid case?\r\n\r\nFrom the UI pov, the user must select the airdrop address from the ones they reveal (or go with the default one), ie there's no way to select an aidrop address and _not_ reveal it\r\n\r\n> 5. This one is not a question, but more a concern based on code I've seen today, while analyzing this issue. I see that you're fetching the accounts from the wallet-section/send module, [here](https://github.com/status-im/status-desktop/blob/2c5eeea50311554fad2343a4aebebfba10128a93/ui/app/AppLayouts/Wallet/stores/RootStore.qml#L21) to offer users addresses to select which addresses they would like to share when joining a token gated community and also using that model to select the airdrop address. That approach is not very good, much better is to inject wallet-accounts-service in the module where wallet-related data are necessary and grab them from that service and use them in a form you like/need.\r\n\r\nI'll defer this decision to the messenger team; in the early (UI) phase with no backend, I needed something that also provides access to the tokens/assets the user possesses\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1761398942/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1761481175",
    "html_url": "https://github.com/status-im/status-desktop/issues/12170#issuecomment-1761481175",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12170",
    "id": 1761481175,
    "node_id": "IC_kwDOD5KrTM5o_hHX",
    "user": {
      "login": "osmaczko",
      "id": 33099791,
      "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osmaczko",
      "html_url": "https://github.com/osmaczko",
      "followers_url": "https://api.github.com/users/osmaczko/followers",
      "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
      "organizations_url": "https://api.github.com/users/osmaczko/orgs",
      "repos_url": "https://api.github.com/users/osmaczko/repos",
      "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osmaczko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-13T12:59:24Z",
    "updated_at": "2023-10-13T12:59:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "> 1. I see that the address used as `airdropAddress` is always the default wallet account of the logged-in user, actually the profile that is joining a community, is that what we want?\r\n\r\nThe default wallet account should serve as a fallback if the user doesn't make a selection on their own.\r\n\r\n\r\n> 2\\. I also see that we're letting users select which addresses they would like to reveal to the community, but I don't see in the code that we're letting users join the community if they didn't select the default wallet address as an address to be revealed to the community. Is that what we want? How I get it is that addresses selected to be revealed are those other community members may see, but one used for airdrop doesn't need to be revealed and I guess that's the valid case?\r\n\r\nThat's the issue. Users should be able to select a non-default address. Only privileged members (token masters) and the control node can view the addresses; other members cannot see them.\r\n\r\n\r\n\r\n> 3\\. Also not sure why we need to sign a community request [here](https://github.com/status-im/status-go/blob/ac813ef5d8f012ba4a0b532483ceeebc553aa3b1/protocol/messenger_communities.go#L987) with all addresses users want to reveal? I somehow expected a community request to be signed once, using the logged-in user chat address, not using wallet addresses.\r\n\r\nUsers need to prove they own a specific wallet address; otherwise, they could select any address with assets that meet the community's criteria. For example, if I wanted to join a community that requires ownership of 100ETH, I could submit Vitalik's address to gain access, even though I don't actually own 100ETH.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1761481175/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
