{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/12481",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/12481/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/12481/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/12481/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/12481",
  "id": 1952070719,
  "node_id": "I_kwDOD5KrTM50Wjw_",
  "number": 12481,
  "title": "Sending community invite is not working for the community with minted owner token",
  "user": {
    "login": "mprakhov",
    "id": 117639195,
    "node_id": "U_kgDOBwMIGw",
    "avatar_url": "https://avatars.githubusercontent.com/u/117639195?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mprakhov",
    "html_url": "https://github.com/mprakhov",
    "followers_url": "https://api.github.com/users/mprakhov/followers",
    "following_url": "https://api.github.com/users/mprakhov/following{/other_user}",
    "gists_url": "https://api.github.com/users/mprakhov/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mprakhov/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mprakhov/subscriptions",
    "organizations_url": "https://api.github.com/users/mprakhov/orgs",
    "repos_url": "https://api.github.com/users/mprakhov/repos",
    "events_url": "https://api.github.com/users/mprakhov/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mprakhov/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2036563458,
      "node_id": "MDU6TGFiZWwyMDM2NTYzNDU4",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/bug",
      "name": "bug",
      "color": "d73a4a",
      "default": true,
      "description": "Something isn't working"
    },
    {
      "id": 4548141040,
      "node_id": "LA_kwDOD5KrTM8AAAABDxcf8A",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/messenger-team",
      "name": "messenger-team",
      "color": "232858",
      "default": false,
      "description": ""
    },
    {
      "id": 5732688644,
      "node_id": "LA_kwDOD5KrTM8AAAABVbHjBA",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Desktop%20Tokenized%20Ownership",
      "name": "E:Desktop Tokenized Ownership",
      "color": "fbca04",
      "default": false,
      "description": "Implementation of the tokenization of community ownership and transfer of said ownership"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "osmaczko",
    "id": 33099791,
    "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/osmaczko",
    "html_url": "https://github.com/osmaczko",
    "followers_url": "https://api.github.com/users/osmaczko/followers",
    "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
    "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
    "organizations_url": "https://api.github.com/users/osmaczko/orgs",
    "repos_url": "https://api.github.com/users/osmaczko/repos",
    "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/osmaczko/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "osmaczko",
      "id": 33099791,
      "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osmaczko",
      "html_url": "https://github.com/osmaczko",
      "followers_url": "https://api.github.com/users/osmaczko/followers",
      "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
      "organizations_url": "https://api.github.com/users/osmaczko/orgs",
      "repos_url": "https://api.github.com/users/osmaczko/repos",
      "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osmaczko/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/65",
    "html_url": "https://github.com/status-im/status-desktop/milestone/65",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/65/labels",
    "id": 9039509,
    "node_id": "MI_kwDOD5KrTM4Aie6V",
    "number": 65,
    "title": "0.15",
    "description": "**1. Finish anything that wasn't completed in the previous 0.14 cycle**\r\n- And fix bugs as usual. We need to keep tech. debt at a roughly fixed level as we grow out functionality, can't let it accumulate! ;-)\r\n\r\n**2. Tokenisation of community ownership**\r\n- Work needed already evaluated in spike.  Community and 'Channel in a Community' URLs don't need to be signed if this will present problems. Patryk to work on this as a continuation of the spike already done.\r\n- See priority 4 below, as this also has some implications for the tokenisation of community work.\r\n\r\n**3. Profile showcase backend**\r\n- The long-delayed profile showcase backend!  We have the UI on the desktop ready to go for this feature, and Mobile is going to need the backend for this feature as well, so let's try to get it done in 0.14 [#11081](https://github.com/status-im/status-desktop/issues/11081)\r\n\r\n**4. Community tokens visible in wallet when received by user who is not a member of that community**\r\n- Solution obvs. needs to be fully decenteralised and permissionless\r\n- Perhaps whenever a community token is A) sent from a Status Wallet to another user or B) airdropped by a community or C) retailed by a community, a M2M (invisible to the user) Waku message should be sent to the recipient's *ethereum address*?\r\n- This message could either: A) contain the metadata for the token B) tell the user that they have received token, and to check the metadata in either another Waku channel where Control Nodes periodically post Metadata OR check the metadata embedded in the token contract (embedding metadata in the token contract might be a better idea?).  \r\n- The token metadata stored in the token contract is signed by the Community's private key to ensure authenticity.  When the community's private key changes due to ownership of a community being transferred or due to the control node being moved, a transaction must be made to update this metadata so it is signed by the community's new private key.\r\n- See here for how a Waku message can be sent to and Ethereum address https://rfc.vac.dev/spec/20/\r\n\r\n**5. Discord history import into a single channel in an existing community**\r\n- Pay off any Discord history import service tech. debt first\r\n- Then build the import into a single channel functionality, designs for this are already complete\r\n\r\n**6. UI for community owner to enable manual Waku static shading for their community**\r\n- This will be off by default in 0.15\r\n- This UI is only for the Owner of a community (not TokenMasters or Admins)\r\n- Figma designs are here https://www.figma.com/file/qHfFm7C9LwtXpfdbxssCK3/Kuba%E2%8E%9CDesktop---Communities?type=design&node-id=37242%3A222352&mode=design&t=rw6q6NQYmiz3rSn2-1\r\n\r\n**7. Community chat functionality enhancements**\r\n- Ability to mark a token gated channel as 'hidden', only visible to community members with the requisite tokens\r\n\r\n\r\n\r\n\r\n\r\n**--- Wallet Team ---**\r\n\r\n1. Finish anything that wasn't completed in the previous 0.14 cycle\r\n- And fix bugs as usual. We need to keep tech. debt at a roughly fixed level as we grow out functionality, can't let it accumulate! ;-)\r\n\r\n2. Sending Community created tokens to Status users who are not members of that community\r\n- See priority 4) in the messaging priorities list above.\r\n\r\n3. Send NFT functionality\r\n\r\n4. Updated wallet settings with keypair syncing\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "creator": {
      "login": "iurimatias",
      "id": 176720,
      "node_id": "MDQ6VXNlcjE3NjcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iurimatias",
      "html_url": "https://github.com/iurimatias",
      "followers_url": "https://api.github.com/users/iurimatias/followers",
      "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
      "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
      "organizations_url": "https://api.github.com/users/iurimatias/orgs",
      "repos_url": "https://api.github.com/users/iurimatias/repos",
      "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iurimatias/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 43,
    "closed_issues": 190,
    "state": "open",
    "created_at": "2023-02-13T19:08:52Z",
    "updated_at": "2023-10-19T17:00:37Z",
    "due_on": "2023-10-26T07:00:00Z",
    "closed_at": null
  },
  "comments": 6,
  "created_at": "2023-10-19T12:08:50Z",
  "updated_at": "2023-10-19T18:55:41Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# Bug Report\r\n\r\n## Description\r\n\r\nIf you try to invite the member to the community with a minted token owner - the receiver will not receive this msg\r\n\r\n## Steps to reproduce\r\n\r\n1. Mint owner token\r\n2. Send an invite to the community to the user\r\n\r\nNotes:\r\nInvite members does not work due to `handleWrappedCommunityDescriptionMessage` https://github.com/status-im/status-go/blob/74c13fd3639079ed4534ea552b35d580f0e4bd87/protocol/messenger_handler.go#L2292-L2309\r\nwhich will return null, because all communitiesDescriptions are going to the runOwnerVerificationLoop if owner token was deployed\r\n\r\nIf just skip this data (do not do an early return on `communityResponse == nil`), we'll get corrupted UI and this won't work too\r\n![image](https://github.com/status-im/status-desktop/assets/117639195/365489ea-d044-4791-a094-09aa19d3df01)\r\n\r\nIf send a community link directly (https://status.app/c/CwuAChUKAzIyMhIDMjIyGAEiByM0MzYwREYD#zQ3shNbuVmNhcDGXEWiXzWyGV31uie7mwD3pZkjpjyMNRWyYT), the client gets an error\r\n\r\n```\r\nDBG 2023-10-19 14:07:20.852+02:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=65637631 file=core.nim:27 rpc_method=wakuext_requestCommunityInfoFromMailserver\r\nDBG 2023-10-19 14:07:22.691+02:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=65637419 file=core.nim:27 rpc_method=wakuext_speedupArchivesImport\r\nWRN 2023-10-19 14:07:26.792+02:00 Error decoding signal                      topics=\"signals-manager\" tid=65637419 file=signals_manager.nim:43 err=\"Unknown signal received: backup.performed\"\r\nERR 2023-10-19 14:07:35.960+02:00 rpc response error                         topics=\"rpc\" tid=65637631 file=core.nim:36 err=\"\\nstatus-go error [methodName:wakuext_requestCommunityInfoFromMailserver, code:-32000, message:failed to request community info for id \\'0x0211b4b265d0c6ce95c2fcf81e7608ab520a91154d880becc35d3186289f357628\\' from mailserver: context deadline exceeded ]\\n\"\r\nERR 2023-10-19 14:07:35.962+02:00 error doing rpc request                    topics=\"rpc\" tid=65637631 file=core.nim:40 methodName=wakuext_requestCommunityInfoFromMailserver exception=\"\\nstatus-go error [methodName:wakuext_requestCommunityInfoFromMailserver, code:-32000, message:failed to request community info for id \\'0x0211b4b265d0c6ce95c2fcf81e7608ab520a91154d880becc35d3186289f357628\\' from mailserver: context deadline exceeded ]\\n\"\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/12481/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/12481/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1770840599",
    "html_url": "https://github.com/status-im/status-desktop/issues/12481#issuecomment-1770840599",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12481",
    "id": 1770840599,
    "node_id": "IC_kwDOD5KrTM5pjOIX",
    "user": {
      "login": "mprakhov",
      "id": 117639195,
      "node_id": "U_kgDOBwMIGw",
      "avatar_url": "https://avatars.githubusercontent.com/u/117639195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mprakhov",
      "html_url": "https://github.com/mprakhov",
      "followers_url": "https://api.github.com/users/mprakhov/followers",
      "following_url": "https://api.github.com/users/mprakhov/following{/other_user}",
      "gists_url": "https://api.github.com/users/mprakhov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mprakhov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mprakhov/subscriptions",
      "organizations_url": "https://api.github.com/users/mprakhov/orgs",
      "repos_url": "https://api.github.com/users/mprakhov/repos",
      "events_url": "https://api.github.com/users/mprakhov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mprakhov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-19T12:17:23Z",
    "updated_at": "2023-10-19T12:17:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @jrainville , @igor-sirotin , @osmaczko \r\nCan we have some brainstorming on how we can fix that issue?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1770840599/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1770858002",
    "html_url": "https://github.com/status-im/status-desktop/issues/12481#issuecomment-1770858002",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12481",
    "id": 1770858002,
    "node_id": "IC_kwDOD5KrTM5pjSYS",
    "user": {
      "login": "osmaczko",
      "id": 33099791,
      "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osmaczko",
      "html_url": "https://github.com/osmaczko",
      "followers_url": "https://api.github.com/users/osmaczko/followers",
      "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
      "organizations_url": "https://api.github.com/users/osmaczko/orgs",
      "repos_url": "https://api.github.com/users/osmaczko/repos",
      "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osmaczko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-19T12:23:26Z",
    "updated_at": "2023-10-19T12:23:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "One of the solutions would be to mimic the same mechanism as with communities shared through links. When we receive the link, we display the card in a loading state and request community info from the mailserver. We could approach this in a similar way, displaying the loading state until we get the community response from the loop.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1770858002/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1770913237",
    "html_url": "https://github.com/status-im/status-desktop/issues/12481#issuecomment-1770913237",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12481",
    "id": 1770913237,
    "node_id": "IC_kwDOD5KrTM5pjf3V",
    "user": {
      "login": "mprakhov",
      "id": 117639195,
      "node_id": "U_kgDOBwMIGw",
      "avatar_url": "https://avatars.githubusercontent.com/u/117639195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mprakhov",
      "html_url": "https://github.com/mprakhov",
      "followers_url": "https://api.github.com/users/mprakhov/followers",
      "following_url": "https://api.github.com/users/mprakhov/following{/other_user}",
      "gists_url": "https://api.github.com/users/mprakhov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mprakhov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mprakhov/subscriptions",
      "organizations_url": "https://api.github.com/users/mprakhov/orgs",
      "repos_url": "https://api.github.com/users/mprakhov/repos",
      "events_url": "https://api.github.com/users/mprakhov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mprakhov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-19T12:44:46Z",
    "updated_at": "2023-10-19T12:44:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "option 2: @igor-sirotin told, that we are planning to reject from `invite member` msg and send the community link directly, but in my case, it is also not working on the latest master\r\nP.S. The problem with option 2 is : `invite member` msg can be still used on the mobile",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1770913237/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1771067598",
    "html_url": "https://github.com/status-im/status-desktop/issues/12481#issuecomment-1771067598",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12481",
    "id": 1771067598,
    "node_id": "IC_kwDOD5KrTM5pkFjO",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-19T14:06:58Z",
    "updated_at": "2023-10-19T14:06:58Z",
    "author_association": "MEMBER",
    "body": "If we do have confirmation that we don't want to use the old invite api, where we send the community description in the message, then just sending the Community link and using the Unfurl mechanism is fine.\r\n\r\nThe advantage of using the `inviteToCommunity` flow though is that it doesn't rely on the store nodes. The description is already part of the message, so it's faster to share a community with someone. The tests also rely a lot on it (`advertiseCommunityTo` uses it).\r\n\r\nSo in the case where we want to continue using that mechanism, Patryk's idea is good. We use the same process as with links:\r\n1. Check DB (or service cache in our case) if we know this community\r\n   - if yes, display what we have\r\n   - if no, show a loading state\r\n3. In the meantime, subscribe to the community topic\r\n4. Also in the meantime, unwrap the community description and validate that it is legit\r\n5. If we get a more up to date description from the store nodes or the unwrapped description, we send a signal to the client and update the unfurl with the up to date data\r\n\r\nIn theory, this should be the same behaviour we have/we want when unfurling a community link",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1771067598/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1771373995",
    "html_url": "https://github.com/status-im/status-desktop/issues/12481#issuecomment-1771373995",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12481",
    "id": 1771373995,
    "node_id": "IC_kwDOD5KrTM5plQWr",
    "user": {
      "login": "igor-sirotin",
      "id": 25482501,
      "node_id": "MDQ6VXNlcjI1NDgyNTAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25482501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/igor-sirotin",
      "html_url": "https://github.com/igor-sirotin",
      "followers_url": "https://api.github.com/users/igor-sirotin/followers",
      "following_url": "https://api.github.com/users/igor-sirotin/following{/other_user}",
      "gists_url": "https://api.github.com/users/igor-sirotin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/igor-sirotin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/igor-sirotin/subscriptions",
      "organizations_url": "https://api.github.com/users/igor-sirotin/orgs",
      "repos_url": "https://api.github.com/users/igor-sirotin/repos",
      "events_url": "https://api.github.com/users/igor-sirotin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/igor-sirotin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-19T16:53:52Z",
    "updated_at": "2023-10-19T16:53:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "> In theory, this should be the same behaviour we have/we want when unfurling a community link\r\n\r\nThis is almost the same. I see 2 differences here:\r\n1. The data in`ChatMessage_COMMUNITY` is signed and we can trust it, comparing to `LinkPreview`.\r\nSo as soon as we unwrap and verify it, we can even save it to the database.\r\n2. We have a loading state here, which we don't have in Link previews.\r\nFor link previews we do mostly the same, but we show the received preview immediately anyway.\r\n\r\n_____\r\n\r\nI'm not sure where and when, but I remember hearing from someone that we planned not to use this way of community invites in favour of sharing URLs. But I might be wrong 🙂 ",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1771373995/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1771388028",
    "html_url": "https://github.com/status-im/status-desktop/issues/12481#issuecomment-1771388028",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/12481",
    "id": 1771388028,
    "node_id": "IC_kwDOD5KrTM5plTx8",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-19T17:03:09Z",
    "updated_at": "2023-10-19T17:03:45Z",
    "author_association": "MEMBER",
    "body": "> I'm not sure where and when, but I remember hearing from someone that we planned not to use this way of community invites in favour of sharing URLs. But I might be wrong 🙂\r\n\r\nLet's ask John and the others from the Desktop team tomorrow to see if that's indeed the case.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1771388028/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
