{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/11715",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/11715/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/11715/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/11715/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/11715",
  "id": 1828763815,
  "node_id": "I_kwDOD5KrTM5tALin",
  "number": 11715,
  "title": "Introduce message type that allows for sharing information between admins in a secure manner",
  "user": {
    "login": "0x-r4bbit",
    "id": 445106,
    "node_id": "MDQ6VXNlcjQ0NTEwNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/445106?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/0x-r4bbit",
    "html_url": "https://github.com/0x-r4bbit",
    "followers_url": "https://api.github.com/users/0x-r4bbit/followers",
    "following_url": "https://api.github.com/users/0x-r4bbit/following{/other_user}",
    "gists_url": "https://api.github.com/users/0x-r4bbit/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/0x-r4bbit/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/0x-r4bbit/subscriptions",
    "organizations_url": "https://api.github.com/users/0x-r4bbit/orgs",
    "repos_url": "https://api.github.com/users/0x-r4bbit/repos",
    "events_url": "https://api.github.com/users/0x-r4bbit/events{/privacy}",
    "received_events_url": "https://api.github.com/users/0x-r4bbit/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3047427135,
      "node_id": "MDU6TGFiZWwzMDQ3NDI3MTM1",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/feature",
      "name": "feature",
      "color": "0E8A16",
      "default": false,
      "description": ""
    },
    {
      "id": 4548141040,
      "node_id": "LA_kwDOD5KrTM8AAAABDxcf8A",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/messenger-team",
      "name": "messenger-team",
      "color": "232858",
      "default": false,
      "description": ""
    },
    {
      "id": 5744740396,
      "node_id": "LA_kwDOD5KrTM8AAAABVmnILA",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Desktop%20Community%20Admin%20Improvements",
      "name": "E:Desktop Community Admin Improvements",
      "color": "fbca04",
      "default": false,
      "description": "Implementation of the needed improvements for the Admin events to be stable."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-07-31T09:19:32Z",
  "updated_at": "2023-07-31T09:19:32Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "In a network of Status nodes (desktop clients) that participate in the same community, we have a bunch of different nodes:\r\n\r\n- A single control node, this one owns the private key of the community\r\n- Multiple owners nodes (nodes that used to be control nodes, until they've removed the private key)\r\n- Multiple token master nodes (accounts with admin privileges + token distribution)\r\n- Multiple admin nodes (accounts with admin privileges)\r\n\r\nControl nodes, owners and token master can deploy, mint and airdrop tokens.\r\nTokens that have been created through community user interface will be added to 2 places:\r\n\r\n1. In the `CommunityDescription` which has a `communityTokensMetadata` field (this data is publicly available to everyone)\r\n2. In the accounts local database - here we store everything that goes into `communityTokensMetadata` + some additional information that is only interesting for owners/admins (this data is not publicly available and only lives in the account's database)\r\n\r\nBecause of the nature of 2) we need a way to distribute that additional information to other admins as well, so they'll see the same community token information in the community settings interface as the owner that deployed the token.\r\n\r\nUnfortunately, we can't simply derive it from the community tokens metadata in the community description, because it's incomplete.\r\n\r\n### What we probably want to do\r\n\r\nIn order to share such information across privileged users, we probably need to introduce a new message type that is then encrypted using every privileged user's public key and send to those users accordingly.\r\n\r\nThere are various ways to go about this, however since I think there'll be more such data that we want to be shared across those users, it probably makes sense to introduce a generic message that can hold different kinds of payloads.\r\n\r\nFor example something like:\r\n\r\n```protobuf\r\nmessage CommunitySuperUserSyncMessage {\r\n  uint64 clock = 1;\r\n  EventType type = 2;\r\n  repeated CommunityCompleteTokenMetadata complete_token_metadata = 3;\r\n  // other types of payloads that need to be synced across admins\r\n  \r\n  enum EventType {\r\n    UNKNOWN = 0;\r\n    COMMUNITY_TOKEN_DEPLOYED =1;\r\n    COMMUNITY_TOKEN_REMOVED = 2;\r\n    ... // other types of data that need to be synced across admins\r\n  }\r\n}\r\n```\r\n\r\nAs mentioned above, this message needs to be send to all privileged users via private message (so they can be encrypted accordingly). Receiving nodes then need to:\r\n\r\n1. Verify that the message was sent by a legitimate privileged user (and not some random account)\r\n2. Apply the changes provided in the payload and sync the local database\r\n\r\n^ This should keep admins in sync. \r\n\r\nIn addition, we might want to consider adding this shared data to the nodes Sync/Backup mechanism, so that when a privileged user recovers their account, they can reconstruct the known data.\r\n\r\nFeel free to discuss the exact details further on this issue.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/11715/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/11715/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
