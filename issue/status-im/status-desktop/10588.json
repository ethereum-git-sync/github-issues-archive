{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/10588",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/10588/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/10588/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/10588/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/10588",
  "id": 1701449766,
  "node_id": "I_kwDOD5KrTM5lahAm",
  "number": 10588,
  "title": "Profile database queries",
  "user": {
    "login": "osmaczko",
    "id": 33099791,
    "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/osmaczko",
    "html_url": "https://github.com/osmaczko",
    "followers_url": "https://api.github.com/users/osmaczko/followers",
    "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
    "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
    "organizations_url": "https://api.github.com/users/osmaczko/orgs",
    "repos_url": "https://api.github.com/users/osmaczko/repos",
    "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/osmaczko/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3166254951,
      "node_id": "MDU6TGFiZWwzMTY2MjU0OTUx",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/performance",
      "name": "performance",
      "color": "7F1B66",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "osmaczko",
    "id": 33099791,
    "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/osmaczko",
    "html_url": "https://github.com/osmaczko",
    "followers_url": "https://api.github.com/users/osmaczko/followers",
    "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
    "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
    "organizations_url": "https://api.github.com/users/osmaczko/orgs",
    "repos_url": "https://api.github.com/users/osmaczko/repos",
    "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/osmaczko/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "osmaczko",
      "id": 33099791,
      "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osmaczko",
      "html_url": "https://github.com/osmaczko",
      "followers_url": "https://api.github.com/users/osmaczko/followers",
      "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
      "organizations_url": "https://api.github.com/users/osmaczko/orgs",
      "repos_url": "https://api.github.com/users/osmaczko/repos",
      "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osmaczko/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/64",
    "html_url": "https://github.com/status-im/status-desktop/milestone/64",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/64/labels",
    "id": 9039503,
    "node_id": "MI_kwDOD5KrTM4Aie6P",
    "number": 64,
    "title": "0.13",
    "description": "Priorities **in priority order** for the 0.13 milestone:\r\n\r\n**1. Finish items started in 0.12**\r\n- Complete any outstanding issues related to pairing (for syncing) - Igor\r\n- Implement the 'Admin' role (issue #10114) - Mykhailo\r\n- Any remaining work to pay off tech. debt related to mutual contacts - Mishka\r\n- When creating/editing token based permission, ability to search for and selecting Collectables from OpenSea - MichaelC\r\n\r\n**2. Channel token permissions**\r\n- Create, edit and delete channel token permissions in the permissions admin screens\r\n- This includes the \"no tokens required to view this channel\" permission\r\n- All user facing channel token permissions functionality e.g. what happens when a user tries to access a token gated channel they don't have the required tokens to access, what happens when a user only has permissions to view a channel, etc...\r\n- If a community is an open (not token gated at the community level) community, if a channel is token gated AND if **no** \"no tokens required to view this channel\" permission for that channel exists, then the channel should be automatically encrypted.  If token gating is removed from a channel, the channel should become unencrypted.\r\n\r\n**3. DB perf improvements**\r\n- https://www.notion.so/Database-related-performance-1dbaa7ea894c461d885e55676683be07\r\n- Alex and Patryk to work on this, with help from Lukáš\r\n\r\n**4. Update app to use new 'Share URL' formats**\r\n- add functionality to status-go to generate the new 'Share URL' formats for sharing links to: User Profiles, Communities, Channel inside a Community\r\n- Update everywhere a user can share a URL from to use the new URL format\r\n- New/updated URL unroll designs for inside chat, including specific unrolls for the new User Profile, Community and Channel inside a Community URLs\r\n- Ability to share a URL that points to a specific channel in a community (issue #10160)\r\n- Update all address inputs to accept a user pasting a 'share URL' into the input (in addition to being able to input the raw address).  This includes: Start new chat input, send contact request input in Settings, the import community key input, etc...\r\n- Update Status Desktops URL handler so that if Status is installed on a computer, when a user clicks on a Status 'Share URL' the app is launched (if not already running) and after signing in the user is automatically taken to the entity the Share URL represented inside the app.  e.g. if a user clicks on a URL for a Status Community, the user should be taken to the home screen for that community inside the Status App\r\n\r\n**5. Mint Assets functionality**\r\n- Also includes some small improvements to the mint Collectables functionality\r\n- Noelia, GravityBlast\r\n\r\n**6. Profile showcase backend**\r\n\r\n\r\n**--- For the Wallet team ---**\r\ntldr; continue building out Ben's wallet designs\r\n\r\n1. Complete any outstanding development related to the activity screens\r\n2. All accounts overview screens\r\n3. New settings screens\r\n4. Implement 'imported key and account' syncing and transfer between devices\r\n\r\n\r\n",
    "creator": {
      "login": "iurimatias",
      "id": 176720,
      "node_id": "MDQ6VXNlcjE3NjcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iurimatias",
      "html_url": "https://github.com/iurimatias",
      "followers_url": "https://api.github.com/users/iurimatias/followers",
      "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
      "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
      "organizations_url": "https://api.github.com/users/iurimatias/orgs",
      "repos_url": "https://api.github.com/users/iurimatias/repos",
      "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iurimatias/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 157,
    "closed_issues": 30,
    "state": "open",
    "created_at": "2023-02-13T19:04:13Z",
    "updated_at": "2023-05-10T18:32:58Z",
    "due_on": "2023-06-16T07:00:00Z",
    "closed_at": null
  },
  "comments": 11,
  "created_at": "2023-05-09T06:39:04Z",
  "updated_at": "2023-05-10T22:30:06Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nLog all query times at the database layer (inside vendor/..)\r\n\r\npart of: https://github.com/status-im/status-desktop/issues/10558",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/10588/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/10588/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1540023049",
    "html_url": "https://github.com/status-im/status-desktop/issues/10588#issuecomment-1540023049",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10588",
    "id": 1540023049,
    "node_id": "IC_kwDOD5KrTM5byuMJ",
    "user": {
      "login": "osmaczko",
      "id": 33099791,
      "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osmaczko",
      "html_url": "https://github.com/osmaczko",
      "followers_url": "https://api.github.com/users/osmaczko/followers",
      "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
      "organizations_url": "https://api.github.com/users/osmaczko/orgs",
      "repos_url": "https://api.github.com/users/osmaczko/repos",
      "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osmaczko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-09T12:16:50Z",
    "updated_at": "2023-05-09T12:16:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Code used for profiling:\r\n\r\n```diff\r\ndiff --git a/vendor/github.com/mutecomm/go-sqlcipher/sqlite3.go b/vendor/github.com/mutecomm/go-sqlcipher/sqlite3.go\r\nindex da501aa72..3589811b3 100644\r\n--- a/vendor/github.com/mutecomm/go-sqlcipher/sqlite3.go\r\n+++ b/vendor/github.com/mutecomm/go-sqlcipher/sqlite3.go\r\n@@ -82,6 +82,7 @@ import (\r\n \t\"fmt\"\r\n \t\"io\"\r\n \t\"net/url\"\r\n+\t\"os\"\r\n \t\"runtime\"\r\n \t\"strconv\"\r\n \t\"strings\"\r\n@@ -109,6 +110,30 @@ var SQLiteTimestampFormats = []string{\r\n \t\"2006-01-02\",\r\n }\r\n \r\n+var csvFile *os.File\r\n+var err error\r\n+\r\n+type PerfLogger struct {\r\n+\tquery string\r\n+\targs  []driver.Value\r\n+\tstart time.Time\r\n+}\r\n+\r\n+func (pf *PerfLogger) Complete() {\r\n+\tduration := time.Since(pf.start)\r\n+\tfmt.Println(\"--- PerfLogger ---\", pf.query, pf.args, duration.Nanoseconds())\r\n+\r\n+\tquery := strings.ReplaceAll(pf.query, \"\\n\", \" \")\r\n+\targs := strings.ReplaceAll(fmt.Sprint(pf.args), \"\\n\", \" \")\r\n+\r\n+\tline := fmt.Sprintf(\"%sµ%sµ%d\\n\", query, args, duration.Nanoseconds())\r\n+\t_, err = csvFile.Write([]byte(line))\r\n+\tif err != nil {\r\n+\t\tfmt.Println(\"--- PerfLogger ---\", \"could not write to csv\", err)\r\n+\t\treturn\r\n+\t}\r\n+}\r\n+\r\n func init() {\r\n \tsql.Register(\"sqlite3\", &SQLiteDriver{})\r\n }\r\n@@ -143,6 +168,7 @@ type SQLiteStmt struct {\r\n \tc      *SQLiteConn\r\n \ts      *C.sqlite3_stmt\r\n \tt      string\r\n+\t_query string\r\n \tclosed bool\r\n \tcls    bool\r\n }\r\n@@ -204,6 +230,13 @@ func lastError(db *C.sqlite3) error {\r\n \r\n // Exec implements Execer.\r\n func (c *SQLiteConn) Exec(query string, args []driver.Value) (driver.Result, error) {\r\n+\tlogger := PerfLogger{\r\n+\t\tquery: query,\r\n+\t\targs:  args,\r\n+\t\tstart: time.Now(),\r\n+\t}\r\n+\tdefer logger.Complete()\r\n+\r\n \tlist := make([]namedValue, len(args))\r\n \tfor i, v := range args {\r\n \t\tlist[i] = namedValue{\r\n@@ -256,6 +289,13 @@ type namedValue struct {\r\n \r\n // Query implements Queryer.\r\n func (c *SQLiteConn) Query(query string, args []driver.Value) (driver.Rows, error) {\r\n+\tlogger := PerfLogger{\r\n+\t\tquery: query,\r\n+\t\targs:  args,\r\n+\t\tstart: time.Now(),\r\n+\t}\r\n+\tdefer logger.Complete()\r\n+\r\n \tlist := make([]namedValue, len(args))\r\n \tfor i, v := range args {\r\n \t\tlist[i] = namedValue{\r\n@@ -336,6 +376,11 @@ func errorString(err Error) string {\r\n //   _pragma_cipher_page_size=XXX\r\n //     Set the PRAGMA cipher_page_size to adjust the page size.\r\n func (d *SQLiteDriver) Open(dsn string) (driver.Conn, error) {\r\n+\tcsvFile, err = os.Create(\"database-perf-\" + fmt.Sprint(time.Now().Unix()) + \".csv\")\r\n+\tif err != nil {\r\n+\t\tfmt.Println(\"Can't create database perf csv:\", err)\r\n+\t}\r\n+\r\n \tif C.sqlite3_threadsafe() == 0 {\r\n \t\treturn nil, errors.New(\"sqlite library was not compiled for thread-safe operation\")\r\n \t}\r\n@@ -489,6 +534,7 @@ func (c *SQLiteConn) Close() error {\r\n \t}\r\n \tc.db = nil\r\n \truntime.SetFinalizer(c, nil)\r\n+\tcsvFile.Close()\r\n \treturn nil\r\n }\r\n \r\n@@ -510,7 +556,7 @@ func (c *SQLiteConn) prepare(ctx context.Context, query string) (driver.Stmt, er\r\n \tif tail != nil && *tail != '\\000' {\r\n \t\tt = strings.TrimSpace(C.GoString(tail))\r\n \t}\r\n-\tss := &SQLiteStmt{c: c, s: s, t: t}\r\n+\tss := &SQLiteStmt{c: c, s: s, t: t, _query: query}\r\n \truntime.SetFinalizer(ss, (*SQLiteStmt).Close)\r\n \treturn ss, nil\r\n }\r\n@@ -598,6 +644,13 @@ func (s *SQLiteStmt) bind(args []namedValue) error {\r\n \r\n // Query the statement with arguments. Return records.\r\n func (s *SQLiteStmt) Query(args []driver.Value) (driver.Rows, error) {\r\n+\tlogger := PerfLogger{\r\n+\t\tquery: s._query,\r\n+\t\targs:  args,\r\n+\t\tstart: time.Now(),\r\n+\t}\r\n+\tdefer logger.Complete()\r\n+\r\n \tlist := make([]namedValue, len(args))\r\n \tfor i, v := range args {\r\n \t\tlist[i] = namedValue{\r\n@@ -650,6 +703,13 @@ func (r *SQLiteResult) RowsAffected() (int64, error) {\r\n \r\n // Exec execute the statement with arguments. Return result object.\r\n func (s *SQLiteStmt) Exec(args []driver.Value) (driver.Result, error) {\r\n+\tlogger := PerfLogger{\r\n+\t\tquery: s._query,\r\n+\t\targs:  args,\r\n+\t\tstart: time.Now(),\r\n+\t}\r\n+\tdefer logger.Complete()\r\n+\r\n \tlist := make([]namedValue, len(args))\r\n \tfor i, v := range args {\r\n \t\tlist[i] = namedValue{\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1540023049/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1540029086",
    "html_url": "https://github.com/status-im/status-desktop/issues/10588#issuecomment-1540029086",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10588",
    "id": 1540029086,
    "node_id": "IC_kwDOD5KrTM5byvqe",
    "user": {
      "login": "osmaczko",
      "id": 33099791,
      "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osmaczko",
      "html_url": "https://github.com/osmaczko",
      "followers_url": "https://api.github.com/users/osmaczko/followers",
      "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
      "organizations_url": "https://api.github.com/users/osmaczko/orgs",
      "repos_url": "https://api.github.com/users/osmaczko/repos",
      "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osmaczko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-09T12:28:38Z",
    "updated_at": "2023-05-09T12:28:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Scenario: Reactivating an application after an extended period of inactivity, transitioning between multiple channels, and allowing each to load completely. This process is executed using a shared development account, which results in a substantial amount of data for each channel.\r\n\r\nCSV profiling data: [database-perf-1683634745.csv](https://github.com/status-im/status-desktop/files/11431003/database-perf-1683634745.csv), the separator is `µ`. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1540029086/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1540050771",
    "html_url": "https://github.com/status-im/status-desktop/issues/10588#issuecomment-1540050771",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10588",
    "id": 1540050771,
    "node_id": "IC_kwDOD5KrTM5by09T",
    "user": {
      "login": "osmaczko",
      "id": 33099791,
      "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osmaczko",
      "html_url": "https://github.com/osmaczko",
      "followers_url": "https://api.github.com/users/osmaczko/followers",
      "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
      "organizations_url": "https://api.github.com/users/osmaczko/orgs",
      "repos_url": "https://api.github.com/users/osmaczko/repos",
      "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osmaczko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-09T12:44:05Z",
    "updated_at": "2023-05-09T12:44:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Profiling results:\r\n\r\n1) All queries sorted by duration: (query, args, duration in nanosecs, duration in ms)\r\n\r\n![image](https://github.com/status-im/status-desktop/assets/33099791/41fe088e-0c61-4e21-8809-c4d948c7d082)\r\n\r\n2) Unique queries sorted by count: (query, count)\r\n\r\n![image](https://github.com/status-im/status-desktop/assets/33099791/40c453d3-9344-4172-8a13-bbf28a75dae5)\r\n\r\n3) Unique queries sorted by total duration: (query, duration in nanosecs, duration in ms)\r\n\r\n![image](https://github.com/status-im/status-desktop/assets/33099791/8111d234-155c-4abd-8634-7a56d68f169a)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1540050771/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1540182016",
    "html_url": "https://github.com/status-im/status-desktop/issues/10588#issuecomment-1540182016",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10588",
    "id": 1540182016,
    "node_id": "IC_kwDOD5KrTM5bzVAA",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-09T13:59:03Z",
    "updated_at": "2023-05-09T13:59:03Z",
    "author_association": "MEMBER",
    "body": "Is the first line \"mark all as read\"? If so, 7 seconds for that is way too long. It's probably missing an index.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1540182016/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1540194648",
    "html_url": "https://github.com/status-im/status-desktop/issues/10588#issuecomment-1540194648",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10588",
    "id": 1540194648,
    "node_id": "IC_kwDOD5KrTM5bzYFY",
    "user": {
      "login": "cammellos",
      "id": 1017008,
      "node_id": "MDQ6VXNlcjEwMTcwMDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1017008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cammellos",
      "html_url": "https://github.com/cammellos",
      "followers_url": "https://api.github.com/users/cammellos/followers",
      "following_url": "https://api.github.com/users/cammellos/following{/other_user}",
      "gists_url": "https://api.github.com/users/cammellos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cammellos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cammellos/subscriptions",
      "organizations_url": "https://api.github.com/users/cammellos/orgs",
      "repos_url": "https://api.github.com/users/cammellos/repos",
      "events_url": "https://api.github.com/users/cammellos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cammellos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-09T14:05:34Z",
    "updated_at": "2023-05-09T14:05:34Z",
    "author_association": "MEMBER",
    "body": "> Is the first line \"mark all as read\"? If so, 7 seconds for that is way too long. It's probably missing an index.\r\n\r\nwe checked, it's covered by an index to some extent (`local_chat_id`, `seen`), it might be that it has to update many messages, that would happen if you have a lot of unread messages\r\n\r\nDo discord messages count as seen/unseen? (we should make them seen if they start as `unseen`, unseen messages are more expensive to handle)",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1540194648/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1540326571",
    "html_url": "https://github.com/status-im/status-desktop/issues/10588#issuecomment-1540326571",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10588",
    "id": 1540326571,
    "node_id": "IC_kwDOD5KrTM5bz4Sr",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-09T15:04:53Z",
    "updated_at": "2023-05-09T15:04:53Z",
    "author_association": "MEMBER",
    "body": "> Do discord messages count as seen/unseen? (we should make them seen if they start as unseen, unseen messages are more expensive to handle)\r\n\r\nGood question. I agree that they should start as `seen`. Any idea @0x-r4bbit ?",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1540326571/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1540332582",
    "html_url": "https://github.com/status-im/status-desktop/issues/10588#issuecomment-1540332582",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10588",
    "id": 1540332582,
    "node_id": "IC_kwDOD5KrTM5bz5wm",
    "user": {
      "login": "osmaczko",
      "id": 33099791,
      "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osmaczko",
      "html_url": "https://github.com/osmaczko",
      "followers_url": "https://api.github.com/users/osmaczko/followers",
      "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
      "organizations_url": "https://api.github.com/users/osmaczko/orgs",
      "repos_url": "https://api.github.com/users/osmaczko/repos",
      "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osmaczko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-09T15:06:56Z",
    "updated_at": "2023-05-09T15:06:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "> > Do discord messages count as seen/unseen? (we should make them seen if they start as unseen, unseen messages are more expensive to handle)\r\n> \r\n> Good question. I agree that they should start as `seen`. Any idea @0x-r4bbit ?\r\n\r\nI will check that directly in fresh shared development account database in a sec.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1540332582/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1540364418",
    "html_url": "https://github.com/status-im/status-desktop/issues/10588#issuecomment-1540364418",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10588",
    "id": 1540364418,
    "node_id": "IC_kwDOD5KrTM5b0BiC",
    "user": {
      "login": "osmaczko",
      "id": 33099791,
      "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osmaczko",
      "html_url": "https://github.com/osmaczko",
      "followers_url": "https://api.github.com/users/osmaczko/followers",
      "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
      "organizations_url": "https://api.github.com/users/osmaczko/orgs",
      "repos_url": "https://api.github.com/users/osmaczko/repos",
      "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osmaczko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-09T15:18:15Z",
    "updated_at": "2023-05-09T15:18:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I will check that directly in fresh shared development account database in a sec.\r\n\r\n```\r\nSELECT COUNT(*) FROM user_messages WHERE seen=0 AND discord_message_id!=\"\" \r\n\r\n46223\r\n```\r\n\r\nYeah, it seems discord messages are not marked as seen when importing.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1540364418/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1540366801",
    "html_url": "https://github.com/status-im/status-desktop/issues/10588#issuecomment-1540366801",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10588",
    "id": 1540366801,
    "node_id": "IC_kwDOD5KrTM5b0CHR",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-09T15:19:07Z",
    "updated_at": "2023-05-09T15:19:07Z",
    "author_association": "MEMBER",
    "body": "Good find! That is an easy win for performance straight after an import.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1540366801/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1542581906",
    "html_url": "https://github.com/status-im/status-desktop/issues/10588#issuecomment-1542581906",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10588",
    "id": 1542581906,
    "node_id": "IC_kwDOD5KrTM5b8e6S",
    "user": {
      "login": "osmaczko",
      "id": 33099791,
      "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osmaczko",
      "html_url": "https://github.com/osmaczko",
      "followers_url": "https://api.github.com/users/osmaczko/followers",
      "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
      "organizations_url": "https://api.github.com/users/osmaczko/orgs",
      "repos_url": "https://api.github.com/users/osmaczko/repos",
      "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osmaczko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-10T17:44:31Z",
    "updated_at": "2023-05-10T17:44:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "I did a queries profiling session post https://github.com/status-im/status-desktop/issues/10600. \r\n\r\nThe queries total time seems alright now.\r\n\r\n![image](https://github.com/status-im/status-desktop/assets/33099791/39d56619-e8d4-446f-9f05-83659a95e6ff)\r\n\r\nThe first three entries are migrations. The next two entries are suspicious, but combined, they only took 4 seconds while the app ran for approximately 10 minutes, so that's negligible. Despite this, the app was still extremely laggy. I suspect we are doing something incorrect on the client side, as database queries don't block as much as we anticipated. I need to profile the app using Callgrind to see where it spends most of its time.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1542581906/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1542890917",
    "html_url": "https://github.com/status-im/status-desktop/issues/10588#issuecomment-1542890917",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10588",
    "id": 1542890917,
    "node_id": "IC_kwDOD5KrTM5b9qWl",
    "user": {
      "login": "caybro",
      "id": 5377645,
      "node_id": "MDQ6VXNlcjUzNzc2NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/caybro",
      "html_url": "https://github.com/caybro",
      "followers_url": "https://api.github.com/users/caybro/followers",
      "following_url": "https://api.github.com/users/caybro/following{/other_user}",
      "gists_url": "https://api.github.com/users/caybro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/caybro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/caybro/subscriptions",
      "organizations_url": "https://api.github.com/users/caybro/orgs",
      "repos_url": "https://api.github.com/users/caybro/repos",
      "events_url": "https://api.github.com/users/caybro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/caybro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-10T22:30:06Z",
    "updated_at": "2023-05-10T22:30:06Z",
    "author_association": "MEMBER",
    "body": "> Despite this, the app was still extremely laggy. I suspect we are doing something incorrect on the client side, as database queries don't block as much as we anticipated. I need to profile the app using Callgrind to see where it spends most of its time\r\n\r\nWell, I used hotspot and it's quite obvious where we spend most of the time, in the `sha1_compress` function (cf https://github.com/status-im/status-desktop/issues/10558#issuecomment-1535096327). I'm curious to see whether Callgrind provides different data",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1542890917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
