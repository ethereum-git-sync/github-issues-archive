{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/10094",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/10094/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/10094/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/10094/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/10094",
  "id": 1647961233,
  "node_id": "I_kwDOD5KrTM5iOeSR",
  "number": 10094,
  "title": "[Community permissions] Find a way to mitigate users buying a wallet signature \"attack\"",
  "user": {
    "login": "jrainville",
    "id": 11926403,
    "node_id": "MDQ6VXNlcjExOTI2NDAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jrainville",
    "html_url": "https://github.com/jrainville",
    "followers_url": "https://api.github.com/users/jrainville/followers",
    "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
    "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
    "organizations_url": "https://api.github.com/users/jrainville/orgs",
    "repos_url": "https://api.github.com/users/jrainville/repos",
    "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jrainville/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3047427135,
      "node_id": "MDU6TGFiZWwzMDQ3NDI3MTM1",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/feature",
      "name": "feature",
      "color": "0E8A16",
      "default": false,
      "description": ""
    },
    {
      "id": 4548141040,
      "node_id": "LA_kwDOD5KrTM8AAAABDxcf8A",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/messenger-team",
      "name": "messenger-team",
      "color": "232858",
      "default": false,
      "description": ""
    },
    {
      "id": 5745629806,
      "node_id": "LA_kwDOD5KrTM8AAAABVndabg",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Desktop%20Comm%20Perms%20and%20Minting%20MVP",
      "name": "E:Desktop Comm Perms and Minting MVP",
      "color": "c2e0c6",
      "default": false,
      "description": "Misc tasks about Community permissions that are not part of another Epic, due for the MVP"
    },
    {
      "id": 5978035322,
      "node_id": "LA_kwDOD5KrTM8AAAABZFGUeg",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Desktop%20Security%20Improvements%20MVP",
      "name": "E:Desktop Security Improvements MVP",
      "color": "f9d0c4",
      "default": false,
      "description": "Tasks to improve security for MVP"
    },
    {
      "id": 6176323312,
      "node_id": "LA_kwDOD5KrTM8AAAABcCM28A",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Desktop%20Bugfixes%200.15.5",
      "name": "E:Desktop Bugfixes 0.15.5",
      "color": "BFE9C3",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [
    {
      "login": "endulab",
      "id": 61889657,
      "node_id": "MDQ6VXNlcjYxODg5NjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/61889657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/endulab",
      "html_url": "https://github.com/endulab",
      "followers_url": "https://api.github.com/users/endulab/followers",
      "following_url": "https://api.github.com/users/endulab/following{/other_user}",
      "gists_url": "https://api.github.com/users/endulab/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/endulab/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/endulab/subscriptions",
      "organizations_url": "https://api.github.com/users/endulab/orgs",
      "repos_url": "https://api.github.com/users/endulab/repos",
      "events_url": "https://api.github.com/users/endulab/events{/privacy}",
      "received_events_url": "https://api.github.com/users/endulab/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/61",
    "html_url": "https://github.com/status-im/status-desktop/milestone/61",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/61/labels",
    "id": 8739485,
    "node_id": "MI_kwDOD5KrTM4AhVqd",
    "number": 61,
    "title": "0.16",
    "description": "**1.  Fix bug and stabilise Communities and Messaging functionality**\r\n\r\n**2.  Reduce size of community description metadata**\r\n- better compressions, less duplication\r\n\r\n**3. Use data sync layer (or other mechanism) to improve community description reliability**\r\n- Every time a new user joins the community, the Control Node updates and signs the description.\r\n- Random back off to stop it being too chatty \r\n\r\n**4. Continue work on profile showcase **\r\n\r\n\r\n\r\n**--- Wallet Team ---**\r\n\r\n1. Complete support for Community minted assets\r\n\r\n2. Complete token visibility management screens\r\n\r\n3. Continue working on WalletConnect support\r\n\r\n4. Minor updates to Asset screens\r\n\r\n5. Continue fixing bugs, making optimisations and keeping tech debt low\r\n\r\n\r\n\r\n\r\n",
    "creator": {
      "login": "iurimatias",
      "id": 176720,
      "node_id": "MDQ6VXNlcjE3NjcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iurimatias",
      "html_url": "https://github.com/iurimatias",
      "followers_url": "https://api.github.com/users/iurimatias/followers",
      "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
      "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
      "organizations_url": "https://api.github.com/users/iurimatias/orgs",
      "repos_url": "https://api.github.com/users/iurimatias/repos",
      "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iurimatias/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 178,
    "closed_issues": 50,
    "state": "open",
    "created_at": "2022-12-09T15:06:43Z",
    "updated_at": "2023-12-04T18:45:21Z",
    "due_on": "2024-01-31T08:00:00Z",
    "closed_at": null
  },
  "comments": 4,
  "created_at": "2023-03-30T16:42:07Z",
  "updated_at": "2023-12-04T17:13:17Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "# Description\r\n\r\nAs discussed in the meeting, it seems like it would be possible for a user that doesn't have access to a community, because they do not possess the required tokens, to just buy/get a wallet signature from someone who does.\r\n\r\nSince the current way to create the signature is that we sign the address with the wallet account, and then sign it with the Status account, thus linking the two, someone could actually cheat and get someone else to create the address wallet signature, get that signature and then sigh it with their own Status account. That would create a fake link between those two.\r\n\r\nWe need to find a way to either limit that or remove that possibility altogether.\r\n\r\nThis ticket is to first investigate a solution and then either close and fix in another issue or fix using this ticket.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/10094/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/10094/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1490620785",
    "html_url": "https://github.com/status-im/status-desktop/issues/10094#issuecomment-1490620785",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10094",
    "id": 1490620785,
    "node_id": "IC_kwDOD5KrTM5Y2RFx",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-30T16:50:39Z",
    "updated_at": "2023-03-30T16:50:39Z",
    "author_association": "MEMBER",
    "body": "Some brainstorm ideas, let me know if I'm saying anything that is not doable:\r\n\r\n1. Add a timestamp to both signatures and the timestamps need to be within X seconds for it to be valid (let's say 5 seconds?)\r\n    - Maybe it's still possible to fake the timestamp inside the wallet address signature, but it does seem harder to get  a \"fake\" wallet signature without the \"attackers\" having an actual software to do it for them.\r\n2. Find a way to sign at the same time with both keys\r\n    - I have no idea if this exists, but some smart cryptography expert probably has thought of something like that before\r\n    - Basically, if we had a signature method that takes both keys at the same time to create a single signature, it would solve the problem.\r\n    - I'm not sure if it's safe or doable to do on our side, but since status-go has access to all keystores, it should be doable.\r\n3. What was proposed was to limit the number of times an address can be used (validated by the owner)\r\n    - This is not great, because it's very possible that someone would have multiple Status accounts and import the same wallet address in them, so we can't just block the re-using of the same address, so any limit we use would be arbitrary\r\n    - It still would work to mitigate the problem slightly\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1490620785/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1491667853",
    "html_url": "https://github.com/status-im/status-desktop/issues/10094#issuecomment-1491667853",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10094",
    "id": 1491667853,
    "node_id": "IC_kwDOD5KrTM5Y6QuN",
    "user": {
      "login": "osmaczko",
      "id": 33099791,
      "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osmaczko",
      "html_url": "https://github.com/osmaczko",
      "followers_url": "https://api.github.com/users/osmaczko/followers",
      "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
      "organizations_url": "https://api.github.com/users/osmaczko/orgs",
      "repos_url": "https://api.github.com/users/osmaczko/repos",
      "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osmaczko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-31T10:03:21Z",
    "updated_at": "2023-03-31T10:04:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Interesting problem.\r\n\r\n> 2. Find a way to sign at the same time with both keys\r\n>    \r\n>    * I have no idea if this exists, but some smart cryptography expert probably has thought of something like that before\r\n>    * Basically, if we had a signature method that takes both keys at the same time to create a single signature, it would solve the problem.\r\n>    * I'm not sure if it's safe or doable to do on our side, but since status-go has access to all keystores, it should be doable.\r\n\r\nThis would be best. I did quick research and found this: https://github.com/hbakhtiyor/schnorr/#aggregatesignaturesprivatekeys-bigint-message-32byte-64byte-error. Although, I am not sure [how it works with secp256k1 keys](https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki).\r\n\r\n![image](https://user-images.githubusercontent.com/33099791/229090479-6f86b9c7-2b80-4f12-b815-120863405875.png)\r\n\r\nFrom my understanding with Schnorr signatures, you can create a combined signature that requires both the wallet and Status account keys simultaneously.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1491667853/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1491673459",
    "html_url": "https://github.com/status-im/status-desktop/issues/10094#issuecomment-1491673459",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10094",
    "id": 1491673459,
    "node_id": "IC_kwDOD5KrTM5Y6SFz",
    "user": {
      "login": "caybro",
      "id": 5377645,
      "node_id": "MDQ6VXNlcjUzNzc2NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/caybro",
      "html_url": "https://github.com/caybro",
      "followers_url": "https://api.github.com/users/caybro/followers",
      "following_url": "https://api.github.com/users/caybro/following{/other_user}",
      "gists_url": "https://api.github.com/users/caybro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/caybro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/caybro/subscriptions",
      "organizations_url": "https://api.github.com/users/caybro/orgs",
      "repos_url": "https://api.github.com/users/caybro/repos",
      "events_url": "https://api.github.com/users/caybro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/caybro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-31T10:07:25Z",
    "updated_at": "2023-03-31T10:07:25Z",
    "author_association": "MEMBER",
    "body": "> Interesting problem.\r\n> \r\n> > 2. Find a way to sign at the same time with both keys\r\n> >    \r\n> >    * I have no idea if this exists, but some smart cryptography expert probably has thought of something like that before\r\n> >    * Basically, if we had a signature method that takes both keys at the same time to create a single signature, it would solve the problem.\r\n> >    * I'm not sure if it's safe or doable to do on our side, but since status-go has access to all keystores, it should be doable.\r\n> \r\n> This would be best. I did quick research and found this: https://github.com/hbakhtiyor/schnorr/#aggregatesignaturesprivatekeys-bigint-message-32byte-64byte-error. Although, I am not sure [how it works with secp256k1 keys](https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki).\r\n\r\nThe very first line says:\r\n> This is a Go implementation of the standard 64-byte Schnorr signature scheme over the elliptic curve secp256k1.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1491673459/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 2,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1492094328",
    "html_url": "https://github.com/status-im/status-desktop/issues/10094#issuecomment-1492094328",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10094",
    "id": 1492094328,
    "node_id": "IC_kwDOD5KrTM5Y7414",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-31T15:13:22Z",
    "updated_at": "2023-03-31T15:13:22Z",
    "author_association": "MEMBER",
    "body": "I read the doc on that library and it seems like what we need. It would totally fix the attack vector we have. I'll wait to start implementation on this until more people can think it through and see if there are maybe edge cases we didn't consider. Also, it's not necessary for the RC.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1492094328/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
