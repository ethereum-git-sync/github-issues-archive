{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/6930",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/6930/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/6930/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/6930/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/6930",
  "id": 1333473619,
  "node_id": "I_kwDOD5KrTM5PezFT",
  "number": 6930,
  "title": "The app UI doesn't load with many `RangeError: Maximum call stack size exceeded` errors in log",
  "user": {
    "login": "igor-sirotin",
    "id": 25482501,
    "node_id": "MDQ6VXNlcjI1NDgyNTAx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25482501?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/igor-sirotin",
    "html_url": "https://github.com/igor-sirotin",
    "followers_url": "https://api.github.com/users/igor-sirotin/followers",
    "following_url": "https://api.github.com/users/igor-sirotin/following{/other_user}",
    "gists_url": "https://api.github.com/users/igor-sirotin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/igor-sirotin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/igor-sirotin/subscriptions",
    "organizations_url": "https://api.github.com/users/igor-sirotin/orgs",
    "repos_url": "https://api.github.com/users/igor-sirotin/repos",
    "events_url": "https://api.github.com/users/igor-sirotin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/igor-sirotin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2036563458,
      "node_id": "MDU6TGFiZWwyMDM2NTYzNDU4",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/bug",
      "name": "bug",
      "color": "d73a4a",
      "default": true,
      "description": "Something isn't working"
    },
    {
      "id": 3205509102,
      "node_id": "MDU6TGFiZWwzMjA1NTA5MTAy",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/priority%200:%20blocker",
      "name": "priority 0: blocker",
      "color": "B60205",
      "default": false,
      "description": "an issues that requires immediate attention and that causes the app to not work at all (e.g a crash)"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "igor-sirotin",
    "id": 25482501,
    "node_id": "MDQ6VXNlcjI1NDgyNTAx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25482501?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/igor-sirotin",
    "html_url": "https://github.com/igor-sirotin",
    "followers_url": "https://api.github.com/users/igor-sirotin/followers",
    "following_url": "https://api.github.com/users/igor-sirotin/following{/other_user}",
    "gists_url": "https://api.github.com/users/igor-sirotin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/igor-sirotin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/igor-sirotin/subscriptions",
    "organizations_url": "https://api.github.com/users/igor-sirotin/orgs",
    "repos_url": "https://api.github.com/users/igor-sirotin/repos",
    "events_url": "https://api.github.com/users/igor-sirotin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/igor-sirotin/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "igor-sirotin",
      "id": 25482501,
      "node_id": "MDQ6VXNlcjI1NDgyNTAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25482501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/igor-sirotin",
      "html_url": "https://github.com/igor-sirotin",
      "followers_url": "https://api.github.com/users/igor-sirotin/followers",
      "following_url": "https://api.github.com/users/igor-sirotin/following{/other_user}",
      "gists_url": "https://api.github.com/users/igor-sirotin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/igor-sirotin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/igor-sirotin/subscriptions",
      "organizations_url": "https://api.github.com/users/igor-sirotin/orgs",
      "repos_url": "https://api.github.com/users/igor-sirotin/repos",
      "events_url": "https://api.github.com/users/igor-sirotin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/igor-sirotin/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2022-08-09T16:01:10Z",
  "updated_at": "2022-08-11T17:47:56Z",
  "closed_at": "2022-08-11T17:47:56Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# Bug Report\r\n\r\nThis is pretty much it in the title.\r\nThe problem is somewhere around `StatusPopupMenu`.\r\n\r\nThe problem arises before loading the UI. So it doesn't matter if you put the \"problem origin component\" into the `Loader` and create it dynanically.\r\nIt seems that while loading the engine processes whole code tree and gets into some recursive loop at this step.",
  "closed_by": {
    "login": "jrainville",
    "id": 11926403,
    "node_id": "MDQ6VXNlcjExOTI2NDAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jrainville",
    "html_url": "https://github.com/jrainville",
    "followers_url": "https://api.github.com/users/jrainville/followers",
    "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
    "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
    "organizations_url": "https://api.github.com/users/jrainville/orgs",
    "repos_url": "https://api.github.com/users/jrainville/repos",
    "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jrainville/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/6930/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/6930/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1209611707",
    "html_url": "https://github.com/status-im/status-desktop/issues/6930#issuecomment-1209611707",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/6930",
    "id": 1209611707,
    "node_id": "IC_kwDOD5KrTM5IGTW7",
    "user": {
      "login": "igor-sirotin",
      "id": 25482501,
      "node_id": "MDQ6VXNlcjI1NDgyNTAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25482501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/igor-sirotin",
      "html_url": "https://github.com/igor-sirotin",
      "followers_url": "https://api.github.com/users/igor-sirotin/followers",
      "following_url": "https://api.github.com/users/igor-sirotin/following{/other_user}",
      "gists_url": "https://api.github.com/users/igor-sirotin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/igor-sirotin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/igor-sirotin/subscriptions",
      "organizations_url": "https://api.github.com/users/igor-sirotin/orgs",
      "repos_url": "https://api.github.com/users/igor-sirotin/repos",
      "events_url": "https://api.github.com/users/igor-sirotin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/igor-sirotin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-09T16:34:25Z",
    "updated_at": "2022-08-09T17:42:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "While I haven't yet found the actual origin of the problem, I decided to note my thoughts on current API of menu components.\r\nI've marked with \"⚠️\" the ones that IMO might be the reason of the problem,\r\n\r\n### `StatusMenuItemDelegate`:\r\n1. There's no reason to `action: StatusMenuItem {}`\r\nAs i understand, MenuItem's `action` is actually never used.\r\nTo create an item in `Menu`, you either create a `MenuItem` directly, or create an `Action`, which will be decorated as `delegate`.\r\n\r\n2. There's no need of `statusPopupMenu` property\r\nStandard `menu` property can be used.\r\nAlthough there's a difference: `statusPopupMenu` can be accessed at `Component.onCompleted` stage, while `menu` is `null` at this stage - it's only applied right after that.\r\n\r\n3. There should be no such special property as `subMenuIndex`\r\nThis is currently used to \r\n    - access icon in `subMenuItemIcons`\r\n    - trigger `menuItemClicked` from `StatusMenuItemDelegate.action`\r\n\r\n4. `indicator` property is too complicated ⚠️ \r\nAnd it seems that big part of it's functionality is rarely used or even not used at all.\r\n\r\n6. Mostly `action` property is accessed from inside ⚠️ \r\nLike `root.action.iconSettings` and `root.action.icon.color`.\r\nGoing this way takes away an ability to use `MenuItem`s as children of `Menu`, which is actually a default way of creating menu items. Using `Action`s is just a nice ability.\r\n\r\n7. AFAR, it's better not to use anchors for visual items of controls\r\nIf you check standard implementation of `QtQuick.Controls 2`, items are positioned with `x`/`y` there.\r\n\r\n### `StatusPopupMenu`:\r\n1. Remove `menuItemClicked` signal\r\nStandard `triggered` signals should be enough\r\n\r\n2. Remove `subMenuItemIcons` property ⚠️ \r\nFirst of all, it sounds like a strange property to me.\r\nSecondly, it's only used once. But the code is much complicated because of this property.\r\nFind a workaround for this.\r\n\r\n2. `openHandler` and `closedHandler` can be easily replaced with original `onOpened: { ... }` and `onClosed: { ... }`\r\n\r\n3. `background` property can be simplified\r\nIt seems to me that `Item` is redundant and `Rectangle` can be used directly.\r\n\r\n### Renaming\r\nAlso, as previously discussed, components should be renamed to reflect the inherited item.\r\n- `StatusMenuItem` ➡️ `StatusAction`\r\n- `StatusPopupMenu` ➡️ `StatusMenu`\r\n- `StatusMenuItemDelegate` ➡️ `StatusMenuItem`",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1209611707/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1210296397",
    "html_url": "https://github.com/status-im/status-desktop/issues/6930#issuecomment-1210296397",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/6930",
    "id": 1210296397,
    "node_id": "IC_kwDOD5KrTM5II6hN",
    "user": {
      "login": "endulab",
      "id": 61889657,
      "node_id": "MDQ6VXNlcjYxODg5NjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/61889657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/endulab",
      "html_url": "https://github.com/endulab",
      "followers_url": "https://api.github.com/users/endulab/followers",
      "following_url": "https://api.github.com/users/endulab/following{/other_user}",
      "gists_url": "https://api.github.com/users/endulab/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/endulab/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/endulab/subscriptions",
      "organizations_url": "https://api.github.com/users/endulab/orgs",
      "repos_url": "https://api.github.com/users/endulab/repos",
      "events_url": "https://api.github.com/users/endulab/events{/privacy}",
      "received_events_url": "https://api.github.com/users/endulab/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-10T07:51:36Z",
    "updated_at": "2022-08-10T08:01:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Linking this issue: https://github.com/status-im/status-desktop/issues/6742\r\n\r\n@igor-sirotin, I am wondering if the problem can be something related to import mismatching: \"import QtQuick.Dialogs 1.3\" vs \"import Qt.labs.platform 1.1\".\r\nWhen I had this problem previously, I fixed it by manipulating with imports (see #6742). The problem was with FileDialog and MessageDialog. Both are in labs and Dialogs.\r\nMenuItem is also part of labs and QtQuick.Controls 2.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1210296397/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1211755098",
    "html_url": "https://github.com/status-im/status-desktop/issues/6930#issuecomment-1211755098",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/6930",
    "id": 1211755098,
    "node_id": "IC_kwDOD5KrTM5IOepa",
    "user": {
      "login": "igor-sirotin",
      "id": 25482501,
      "node_id": "MDQ6VXNlcjI1NDgyNTAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25482501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/igor-sirotin",
      "html_url": "https://github.com/igor-sirotin",
      "followers_url": "https://api.github.com/users/igor-sirotin/followers",
      "following_url": "https://api.github.com/users/igor-sirotin/following{/other_user}",
      "gists_url": "https://api.github.com/users/igor-sirotin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/igor-sirotin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/igor-sirotin/subscriptions",
      "organizations_url": "https://api.github.com/users/igor-sirotin/orgs",
      "repos_url": "https://api.github.com/users/igor-sirotin/repos",
      "events_url": "https://api.github.com/users/igor-sirotin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/igor-sirotin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-11T09:35:47Z",
    "updated_at": "2022-08-11T09:35:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "[QML_IMPORT_TRACE.log](https://github.com/status-im/status-desktop/files/9307628/QML_IMPORT_TRACE.log)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1211755098/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1211784471",
    "html_url": "https://github.com/status-im/status-desktop/issues/6930#issuecomment-1211784471",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/6930",
    "id": 1211784471,
    "node_id": "IC_kwDOD5KrTM5IOl0X",
    "user": {
      "login": "osmaczko",
      "id": 33099791,
      "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osmaczko",
      "html_url": "https://github.com/osmaczko",
      "followers_url": "https://api.github.com/users/osmaczko/followers",
      "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
      "organizations_url": "https://api.github.com/users/osmaczko/orgs",
      "repos_url": "https://api.github.com/users/osmaczko/repos",
      "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osmaczko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-11T10:08:01Z",
    "updated_at": "2022-08-11T10:08:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "One of the causes of `Maximum call stack size exceeded` is infinite recursion, example:\r\n```qml\r\nfunction foo() { foo(); }\r\n```\r\nsee:\r\n```cpp\r\nvoid tst_QScriptEngine::infiniteRecursion()\r\n{\r\n    // Infinite recursion in JS should cause the VM to throw an error\r\n    // when the JS stack is exhausted.\r\n    // The exact error is back-end specific and subject to change.\r\n    const QString stackOverflowError = QString::fromLatin1(\"RangeError: Maximum call stack size exceeded.\");\r\n    QScriptEngine eng;\r\n    {\r\n        QScriptValue ret = eng.evaluate(\"function foo() { foo(); }; foo();\");\r\n        QCOMPARE(ret.isError(), true);\r\n        QCOMPARE(ret.toString(), stackOverflowError);\r\n    }\r\n    ...\r\n}\r\n```\r\n\r\nmaybe some smuggled qml code with infinite recursion is the root cause.. :thinking: ",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1211784471/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1211792966",
    "html_url": "https://github.com/status-im/status-desktop/issues/6930#issuecomment-1211792966",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/6930",
    "id": 1211792966,
    "node_id": "IC_kwDOD5KrTM5IOn5G",
    "user": {
      "login": "igor-sirotin",
      "id": 25482501,
      "node_id": "MDQ6VXNlcjI1NDgyNTAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25482501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/igor-sirotin",
      "html_url": "https://github.com/igor-sirotin",
      "followers_url": "https://api.github.com/users/igor-sirotin/followers",
      "following_url": "https://api.github.com/users/igor-sirotin/following{/other_user}",
      "gists_url": "https://api.github.com/users/igor-sirotin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/igor-sirotin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/igor-sirotin/subscriptions",
      "organizations_url": "https://api.github.com/users/igor-sirotin/orgs",
      "repos_url": "https://api.github.com/users/igor-sirotin/repos",
      "events_url": "https://api.github.com/users/igor-sirotin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/igor-sirotin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-11T10:15:05Z",
    "updated_at": "2022-08-11T10:15:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "By the way, it's interesting that this is happening at some early stage of QML loading.\r\nI always was able to workaround this issue by commenting out the code that wasn't even loaded.\r\n\r\nE.g., having code like this (actually, this is `StatusMenuItemDelegate`:\r\n```qml\r\nItem {\r\n   Component { \r\n      id: c1\r\n      Item { ... }\r\n   }\r\n   Component { \r\n      id: c2\r\n      Item { ... }\r\n   }\r\n   Component { \r\n      id: c3\r\n      Item { ... }\r\n   }\r\n   \r\n  Loader {\r\n    sourceComponent: c1\r\n  }\r\n}\r\n```\r\n\r\nAnd then comment out any of `c2` or `c3`, **which are not even ever loaded**, fixes the problem.\r\n:man_shrugging:",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1211792966/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1211793148",
    "html_url": "https://github.com/status-im/status-desktop/issues/6930#issuecomment-1211793148",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/6930",
    "id": 1211793148,
    "node_id": "IC_kwDOD5KrTM5IOn78",
    "user": {
      "login": "osmaczko",
      "id": 33099791,
      "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osmaczko",
      "html_url": "https://github.com/osmaczko",
      "followers_url": "https://api.github.com/users/osmaczko/followers",
      "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
      "organizations_url": "https://api.github.com/users/osmaczko/orgs",
      "repos_url": "https://api.github.com/users/osmaczko/repos",
      "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osmaczko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-11T10:15:13Z",
    "updated_at": "2022-08-11T10:15:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "We should try `QV4_CRASH_ON_STACKOVERFLOW`, see: https://doc.qt.io/qt-5/qtqml-javascript-finetuning.html",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1211793148/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1212053456",
    "html_url": "https://github.com/status-im/status-desktop/issues/6930#issuecomment-1212053456",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/6930",
    "id": 1212053456,
    "node_id": "IC_kwDOD5KrTM5IPnfQ",
    "user": {
      "login": "caybro",
      "id": 5377645,
      "node_id": "MDQ6VXNlcjUzNzc2NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/caybro",
      "html_url": "https://github.com/caybro",
      "followers_url": "https://api.github.com/users/caybro/followers",
      "following_url": "https://api.github.com/users/caybro/following{/other_user}",
      "gists_url": "https://api.github.com/users/caybro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/caybro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/caybro/subscriptions",
      "organizations_url": "https://api.github.com/users/caybro/orgs",
      "repos_url": "https://api.github.com/users/caybro/repos",
      "events_url": "https://api.github.com/users/caybro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/caybro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-11T14:19:28Z",
    "updated_at": "2022-08-11T14:19:28Z",
    "author_association": "MEMBER",
    "body": "> By the way, it's interesting that this is happening at some early stage of QML loading. I always was able to workaround this issue by commenting out the code that wasn't even loaded.\r\n> \r\n> E.g., having code like this (actually, this is `StatusMenuItemDelegate`:\r\n> \r\n> ```qml\r\n> Item {\r\n>    Component { \r\n>       id: c1\r\n>       Item { ... }\r\n>    }\r\n>    Component { \r\n>       id: c2\r\n>       Item { ... }\r\n>    }\r\n>    Component { \r\n>       id: c3\r\n>       Item { ... }\r\n>    }\r\n>    \r\n>   Loader {\r\n>     sourceComponent: c1\r\n>   }\r\n> }\r\n> ```\r\n> \r\n> And then comment out any of `c2` or `c3`, **which are not even ever loaded**, fixes the problem. man_shrugging\r\n\r\n@igor-sirotin the thing has to be \"compiled\" first I believe, it doesn't mean it gets instantiated",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1212053456/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
