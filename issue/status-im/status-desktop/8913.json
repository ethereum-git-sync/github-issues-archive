{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/8913",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/8913/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/8913/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/8913/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/8913",
  "id": 1513975955,
  "node_id": "I_kwDOD5KrTM5aPXCT",
  "number": 8913,
  "title": "Cannot return CurrencyAmount item from CurrentAccount view proc exposed to QML",
  "user": {
    "login": "dlipicar",
    "id": 11161531,
    "node_id": "MDQ6VXNlcjExMTYxNTMx",
    "avatar_url": "https://avatars.githubusercontent.com/u/11161531?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dlipicar",
    "html_url": "https://github.com/dlipicar",
    "followers_url": "https://api.github.com/users/dlipicar/followers",
    "following_url": "https://api.github.com/users/dlipicar/following{/other_user}",
    "gists_url": "https://api.github.com/users/dlipicar/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dlipicar/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dlipicar/subscriptions",
    "organizations_url": "https://api.github.com/users/dlipicar/orgs",
    "repos_url": "https://api.github.com/users/dlipicar/repos",
    "events_url": "https://api.github.com/users/dlipicar/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dlipicar/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2331339531,
      "node_id": "MDU6TGFiZWwyMzMxMzM5NTMx",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/wallet-team",
      "name": "wallet-team",
      "color": "b60205",
      "default": false,
      "description": ""
    },
    {
      "id": 2351074091,
      "node_id": "MDU6TGFiZWwyMzUxMDc0MDkx",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/refactor",
      "name": "refactor",
      "color": "ef9870",
      "default": false,
      "description": ""
    },
    {
      "id": 6014779451,
      "node_id": "LA_kwDOD5KrTM8AAAABZoJAOw",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Desktop%20misc%20refactors",
      "name": "E:Desktop misc refactors",
      "color": "A6C799",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "dlipicar",
    "id": 11161531,
    "node_id": "MDQ6VXNlcjExMTYxNTMx",
    "avatar_url": "https://avatars.githubusercontent.com/u/11161531?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dlipicar",
    "html_url": "https://github.com/dlipicar",
    "followers_url": "https://api.github.com/users/dlipicar/followers",
    "following_url": "https://api.github.com/users/dlipicar/following{/other_user}",
    "gists_url": "https://api.github.com/users/dlipicar/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dlipicar/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dlipicar/subscriptions",
    "organizations_url": "https://api.github.com/users/dlipicar/orgs",
    "repos_url": "https://api.github.com/users/dlipicar/repos",
    "events_url": "https://api.github.com/users/dlipicar/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dlipicar/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/61",
    "html_url": "https://github.com/status-im/status-desktop/milestone/61",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/61/labels",
    "id": 8739485,
    "node_id": "MI_kwDOD5KrTM4AhVqd",
    "number": 61,
    "title": "0.16",
    "description": "**1. Complete initial airdrop functionality**\r\n- Airdrop history screens\r\n- Ability to airdrop based on in-Community activity (No. of msg, No. msg in time range, joining a community, length of community membership)  Ability to combine multiple attributes into an airdrop\r\n- Ability to token gate airdrops\r\n- Live airdrop gas estimation when setting up airdrop\r\n\r\n**2. Community Admin functionality enhancements**\r\n- optional service to once a month auto-kick all members who haven't been online for between 30 and 60 days (e.g. auto-kick members whose profile information like Name, Avatar, etc... can no longer be fetched)\r\n\r\n**3.  IPFS service for community minted NFTs and other binary community assets**\r\n\r\n- In order for NFT tokens minted in our UI to be correctly displayed with all metadata on OpenSea, their assets need to be stored in IPFS (because IPFS is supported by OpenSea)\r\n\r\n- Will work something like this: IPFS pinning server is integrated into Status Desktop. When a community mints a NFT, the associated assets are IPFS pinned by the community control node.  The community control node then sends a 'user invisible message' to all other community members via Waku, and the Status Desktop installs of all community members then fetch the NFT assets and pin them as well.  This means that every member of a community that is running Status Desktop will always be 'IPFS pinning' all assets related to the community, so that as long as one community member that uses Status Desktop is online, the assets are guaranteed to be available via IPFS.\r\n\r\n- Use a similar scheme to the above could be used for other community assets (that are not related to token minting) in the future like: Community banner image, community icon, community description, etc...\r\n\r\n- Use a similar scheme to the above could be used for status user data in the future.  Status users pin assets related to their profile (banner image, avatar, showcase contents) using IPFS, and all of the user's mutual contacts also pin that user's profile data.  Must incorporate a setting so that users can opt-out of pinning their mutual contact's profile data.\r\n\r\n**4. QR scanner**\r\n- Needed for private key transfer\r\n- Ethereum key QRs (send modal triggered)\r\n- User Share URL in a QR (opens user profile dialogue) \r\n- Community and Channel inside Community URL in QRs (takes user to Community or Channel in Community)\r\n\r\n\r\n**5. Telegram history import into a single channel in an existing community**\r\n\r\n\r\n**--- Wallet Team ---**\r\n\r\n1. Total balance graphs for 'All accounts' and each individual account\r\n\r\n2. Advanced transaction signing\r\n\r\n",
    "creator": {
      "login": "iurimatias",
      "id": 176720,
      "node_id": "MDQ6VXNlcjE3NjcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iurimatias",
      "html_url": "https://github.com/iurimatias",
      "followers_url": "https://api.github.com/users/iurimatias/followers",
      "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
      "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
      "organizations_url": "https://api.github.com/users/iurimatias/orgs",
      "repos_url": "https://api.github.com/users/iurimatias/repos",
      "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iurimatias/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 47,
    "closed_issues": 0,
    "state": "open",
    "created_at": "2022-12-09T15:06:43Z",
    "updated_at": "2023-10-25T13:30:52Z",
    "due_on": "2024-01-31T08:00:00Z",
    "closed_at": null
  },
  "comments": 5,
  "created_at": "2022-12-29T18:58:14Z",
  "updated_at": "2023-10-29T08:42:21Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# Bug Report\r\n\r\n## Description\r\n\r\nSee https://github.com/status-im/status-desktop/pull/8911\r\n\r\nFor some reason, you cannot return a QVariant in a proc exposed to QML if the proc takes parameters (other than self). A compilation error occurs. \r\n\r\nThis prevented me from passing the CurrencyAmount item to `[NetworkCardsComponent.qml](https://github.com/status-im/status-desktop/pull/8911/files#diff-2e942cade3306afbdf634f1872a19f214ebec38983d2caafa2cd589277619b9c) and [NetworksSimpleRoutingView.qml](https://github.com/status-im/status-desktop/pull/8911/files#diff-e9b9caee0b5901cce7d121099d6d7ca6cf2dc106999fccafd8f1ae692d6c8842). \r\n\r\nSimilar problem in `src/app/modules/main/chat_section/view.nim`\r\n\r\nWill need to investigate the root cause.\r\n\r\nFix the root cause, and remove the workarounds\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/8913/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/8913/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1369954488",
    "html_url": "https://github.com/status-im/status-desktop/issues/8913#issuecomment-1369954488",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/8913",
    "id": 1369954488,
    "node_id": "IC_kwDOD5KrTM5Rp9i4",
    "user": {
      "login": "caybro",
      "id": 5377645,
      "node_id": "MDQ6VXNlcjUzNzc2NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/caybro",
      "html_url": "https://github.com/caybro",
      "followers_url": "https://api.github.com/users/caybro/followers",
      "following_url": "https://api.github.com/users/caybro/following{/other_user}",
      "gists_url": "https://api.github.com/users/caybro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/caybro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/caybro/subscriptions",
      "organizations_url": "https://api.github.com/users/caybro/orgs",
      "repos_url": "https://api.github.com/users/caybro/repos",
      "events_url": "https://api.github.com/users/caybro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/caybro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-03T16:13:29Z",
    "updated_at": "2023-01-03T16:13:29Z",
    "author_association": "MEMBER",
    "body": "Yeah this sucks... we have a similar thing here as well:\r\n\r\n```nim\r\n  # Since we cannot return QVariant from the proc which has arguments, so cannot have proc like this:\r\n  # prepareChatContentModuleForChatId(self: View, chatId: string): QVariant {.slot.}\r\n  # we're using combinaiton of\r\n  # prepareChatContentModuleForChatId/getChatContentModule procs\r\n  proc prepareChatContentModuleForChatId*(self: View, chatId: string) {.slot.} =\r\n    self.tmpChatId = chatId\r\n\r\n  proc getChatContentModule*(self: View): QVariant {.slot.} =\r\n    var chatContentVariant = self.delegate.getChatContentModule(self.tmpChatId)\r\n    self.tmpChatId = \"\"\r\n    if(chatContentVariant.isNil):\r\n      return newQVariant()\r\n\r\n    return chatContentVariant\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1369954488/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1370153033",
    "html_url": "https://github.com/status-im/status-desktop/issues/8913#issuecomment-1370153033",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/8913",
    "id": 1370153033,
    "node_id": "IC_kwDOD5KrTM5RquBJ",
    "user": {
      "login": "dlipicar",
      "id": 11161531,
      "node_id": "MDQ6VXNlcjExMTYxNTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/11161531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlipicar",
      "html_url": "https://github.com/dlipicar",
      "followers_url": "https://api.github.com/users/dlipicar/followers",
      "following_url": "https://api.github.com/users/dlipicar/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlipicar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlipicar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlipicar/subscriptions",
      "organizations_url": "https://api.github.com/users/dlipicar/orgs",
      "repos_url": "https://api.github.com/users/dlipicar/repos",
      "events_url": "https://api.github.com/users/dlipicar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlipicar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-03T19:37:42Z",
    "updated_at": "2023-01-03T19:37:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ohh I couldn't find references to this problem in the code, thanks!\r\nI'll replicate that workaround for now, and remove the hack when this (hopefully) gets fixed.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1370153033/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1370216790",
    "html_url": "https://github.com/status-im/status-desktop/issues/8913#issuecomment-1370216790",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/8913",
    "id": 1370216790,
    "node_id": "IC_kwDOD5KrTM5Rq9lW",
    "user": {
      "login": "caybro",
      "id": 5377645,
      "node_id": "MDQ6VXNlcjUzNzc2NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/caybro",
      "html_url": "https://github.com/caybro",
      "followers_url": "https://api.github.com/users/caybro/followers",
      "following_url": "https://api.github.com/users/caybro/following{/other_user}",
      "gists_url": "https://api.github.com/users/caybro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/caybro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/caybro/subscriptions",
      "organizations_url": "https://api.github.com/users/caybro/orgs",
      "repos_url": "https://api.github.com/users/caybro/repos",
      "events_url": "https://api.github.com/users/caybro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/caybro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-03T20:57:08Z",
    "updated_at": "2023-01-03T20:57:08Z",
    "author_association": "MEMBER",
    "body": "Well it won't be magically fixed unless someone with more nim-fu invests some time into making this work :)",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1370216790/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1371326831",
    "html_url": "https://github.com/status-im/status-desktop/issues/8913#issuecomment-1371326831",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/8913",
    "id": 1371326831,
    "node_id": "IC_kwDOD5KrTM5RvMlv",
    "user": {
      "login": "dlipicar",
      "id": 11161531,
      "node_id": "MDQ6VXNlcjExMTYxNTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/11161531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlipicar",
      "html_url": "https://github.com/dlipicar",
      "followers_url": "https://api.github.com/users/dlipicar/followers",
      "following_url": "https://api.github.com/users/dlipicar/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlipicar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlipicar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlipicar/subscriptions",
      "organizations_url": "https://api.github.com/users/dlipicar/orgs",
      "repos_url": "https://api.github.com/users/dlipicar/repos",
      "events_url": "https://api.github.com/users/dlipicar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlipicar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-04T19:23:15Z",
    "updated_at": "2023-01-04T19:23:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've seen a couple of instances where people have used JSON ser/des to pass objects to QML in such cases (see `getReplyMessageByIdAsJson`)",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1371326831/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1371533502",
    "html_url": "https://github.com/status-im/status-desktop/issues/8913#issuecomment-1371533502",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/8913",
    "id": 1371533502,
    "node_id": "IC_kwDOD5KrTM5Rv_C-",
    "user": {
      "login": "caybro",
      "id": 5377645,
      "node_id": "MDQ6VXNlcjUzNzc2NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/caybro",
      "html_url": "https://github.com/caybro",
      "followers_url": "https://api.github.com/users/caybro/followers",
      "following_url": "https://api.github.com/users/caybro/following{/other_user}",
      "gists_url": "https://api.github.com/users/caybro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/caybro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/caybro/subscriptions",
      "organizations_url": "https://api.github.com/users/caybro/orgs",
      "repos_url": "https://api.github.com/users/caybro/repos",
      "events_url": "https://api.github.com/users/caybro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/caybro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-04T23:13:19Z",
    "updated_at": "2023-01-04T23:13:19Z",
    "author_association": "MEMBER",
    "body": "> I've seen a couple of instances where people have used JSON ser/des to pass objects to QML in such cases (see `getReplyMessageByIdAsJson`)\r\n\r\nThis has a major disadvantage: in such case it's not a regular property but a plain function call -> can't turn this into a QML binding ",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1371533502/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
