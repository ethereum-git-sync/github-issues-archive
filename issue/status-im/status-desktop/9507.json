{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/9507",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/9507/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/9507/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/9507/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/9507",
  "id": 1577939712,
  "node_id": "I_kwDOD5KrTM5eDXMA",
  "number": 9507,
  "title": "measure db requets",
  "user": {
    "login": "iurimatias",
    "id": 176720,
    "node_id": "MDQ6VXNlcjE3NjcyMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/iurimatias",
    "html_url": "https://github.com/iurimatias",
    "followers_url": "https://api.github.com/users/iurimatias/followers",
    "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
    "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
    "organizations_url": "https://api.github.com/users/iurimatias/orgs",
    "repos_url": "https://api.github.com/users/iurimatias/repos",
    "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
    "received_events_url": "https://api.github.com/users/iurimatias/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-02-09T13:57:49Z",
  "updated_at": "2023-02-09T16:16:16Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nConduct profiling of SQLite requests to determine if there are any bottlenecks in the processing queue for the database requests. The goal is to identify any areas of improvement for sequential processing by SQLite.\r\n\r\n\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/9507/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/9507/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1424249776",
    "html_url": "https://github.com/status-im/status-desktop/issues/9507#issuecomment-1424249776",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9507",
    "id": 1424249776,
    "node_id": "IC_kwDOD5KrTM5U5FOw",
    "user": {
      "login": "John-44",
      "id": 22846356,
      "node_id": "MDQ6VXNlcjIyODQ2MzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/22846356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/John-44",
      "html_url": "https://github.com/John-44",
      "followers_url": "https://api.github.com/users/John-44/followers",
      "following_url": "https://api.github.com/users/John-44/following{/other_user}",
      "gists_url": "https://api.github.com/users/John-44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/John-44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/John-44/subscriptions",
      "organizations_url": "https://api.github.com/users/John-44/orgs",
      "repos_url": "https://api.github.com/users/John-44/repos",
      "events_url": "https://api.github.com/users/John-44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/John-44/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-09T14:10:00Z",
    "updated_at": "2023-02-09T15:01:11Z",
    "author_association": "NONE",
    "body": "One question: we know that SQLite can only process queries sequentially.  **If** after profiling we see that queues of db queries are sometimes forming (as a result of SQLite only being able to process queries sequentially), then it might be worth investigating the feasibility of adding support to status-go to (optionally) use a db that is capable of processing queries in parallel like PostgreSQL.  However if this is a non-issue then we wouldn't want to waste time looking into using postgres with Status Go.\r\n\r\nAnother question: is the DB a contributor to any perf. issues in the app, and if so what are these issues and how could they be mitigated?  e.g. would there be a perf. gain if we moved to having seperate DBs per app (e.g one for wallet, one for chat, etc..) or even per community (thanks @iurimatias for mentioning this). Or are there any other DB perf optimisations like improving indexes, etc.. that we should look into.\r\n\r\nBefore we start doing any DB optimisation, it's important to first understand what aspects of DB performance is contributing towards app perf issues today (if any).  Once we understand this, we can then look into what optimisations could be solutions to these defined issues.\r\n\r\nSo tldr; of this issue is: understand all the db perf bottlenecks we have in the app when it's being used in the context of dogfooding today.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1424249776/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1424423104",
    "html_url": "https://github.com/status-im/status-desktop/issues/9507#issuecomment-1424423104",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9507",
    "id": 1424423104,
    "node_id": "IC_kwDOD5KrTM5U5vjA",
    "user": {
      "login": "richard-ramos",
      "id": 1106587,
      "node_id": "MDQ6VXNlcjExMDY1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1106587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/richard-ramos",
      "html_url": "https://github.com/richard-ramos",
      "followers_url": "https://api.github.com/users/richard-ramos/followers",
      "following_url": "https://api.github.com/users/richard-ramos/following{/other_user}",
      "gists_url": "https://api.github.com/users/richard-ramos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/richard-ramos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/richard-ramos/subscriptions",
      "organizations_url": "https://api.github.com/users/richard-ramos/orgs",
      "repos_url": "https://api.github.com/users/richard-ramos/repos",
      "events_url": "https://api.github.com/users/richard-ramos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/richard-ramos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-09T15:56:52Z",
    "updated_at": "2023-02-09T15:56:52Z",
    "author_association": "MEMBER",
    "body": "Any solution we produce should take in account that the mobile app also uses status-go, unless we want this performance measurement and possible solutions to improve performance of the DB to only focus on desktop. \r\n\r\nPerhaps these measurements have been done in mobile already? those could be used as a baseline to compare desktop performance against",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1424423104/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1424451860",
    "html_url": "https://github.com/status-im/status-desktop/issues/9507#issuecomment-1424451860",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9507",
    "id": 1424451860,
    "node_id": "IC_kwDOD5KrTM5U52kU",
    "user": {
      "login": "John-44",
      "id": 22846356,
      "node_id": "MDQ6VXNlcjIyODQ2MzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/22846356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/John-44",
      "html_url": "https://github.com/John-44",
      "followers_url": "https://api.github.com/users/John-44/followers",
      "following_url": "https://api.github.com/users/John-44/following{/other_user}",
      "gists_url": "https://api.github.com/users/John-44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/John-44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/John-44/subscriptions",
      "organizations_url": "https://api.github.com/users/John-44/orgs",
      "repos_url": "https://api.github.com/users/John-44/repos",
      "events_url": "https://api.github.com/users/John-44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/John-44/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-09T16:15:33Z",
    "updated_at": "2023-02-09T16:16:16Z",
    "author_association": "NONE",
    "body": "> Any solution we produce should take in account that the mobile app also uses status-go, unless we want this performance measurement and possible solutions to improve performance of the DB to only focus on desktop.\r\n> \r\n> Perhaps these measurements have been done in mobile already? those could be used as a baseline to compare desktop performance against\r\n\r\nIdeally any db perf improvements would be beneficial for both mobile and desktop, however we shouldn't exclude the possibility that there may be some perf improvements that are only feasible or desirable on desktop, but not on mobile.  For example on Desktop we have the Discord import tool, and only Desktop clients can be owner nodes for communities (the Status Mobile client will never do these two things).  Therefor if we uncover db perf issues in any areas that are only relevant to Desktop and are not relevant for mobile, then we only need to look into ways of fixing such 'desktop only' issues for Desktop.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1424451860/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  }
]
