{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/11969",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/11969/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/11969/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/11969/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/11969",
  "id": 1859725040,
  "node_id": "I_kwDOD5KrTM5u2Sbw",
  "number": 11969,
  "title": "[Community Ownership] new Owner should ask members for addresses",
  "user": {
    "login": "osmaczko",
    "id": 33099791,
    "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/osmaczko",
    "html_url": "https://github.com/osmaczko",
    "followers_url": "https://api.github.com/users/osmaczko/followers",
    "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
    "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
    "organizations_url": "https://api.github.com/users/osmaczko/orgs",
    "repos_url": "https://api.github.com/users/osmaczko/repos",
    "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/osmaczko/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3047427135,
      "node_id": "MDU6TGFiZWwzMDQ3NDI3MTM1",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/feature",
      "name": "feature",
      "color": "0E8A16",
      "default": false,
      "description": ""
    },
    {
      "id": 4548141040,
      "node_id": "LA_kwDOD5KrTM8AAAABDxcf8A",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/messenger-team",
      "name": "messenger-team",
      "color": "232858",
      "default": false,
      "description": ""
    },
    {
      "id": 5732688644,
      "node_id": "LA_kwDOD5KrTM8AAAABVbHjBA",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Desktop%20Tokenized%20Ownership",
      "name": "E:Desktop Tokenized Ownership",
      "color": "fbca04",
      "default": false,
      "description": "Implementation of the tokenization of community ownership and transfer of said ownership"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "mprakhov",
    "id": 117639195,
    "node_id": "U_kgDOBwMIGw",
    "avatar_url": "https://avatars.githubusercontent.com/u/117639195?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mprakhov",
    "html_url": "https://github.com/mprakhov",
    "followers_url": "https://api.github.com/users/mprakhov/followers",
    "following_url": "https://api.github.com/users/mprakhov/following{/other_user}",
    "gists_url": "https://api.github.com/users/mprakhov/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mprakhov/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mprakhov/subscriptions",
    "organizations_url": "https://api.github.com/users/mprakhov/orgs",
    "repos_url": "https://api.github.com/users/mprakhov/repos",
    "events_url": "https://api.github.com/users/mprakhov/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mprakhov/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "mprakhov",
      "id": 117639195,
      "node_id": "U_kgDOBwMIGw",
      "avatar_url": "https://avatars.githubusercontent.com/u/117639195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mprakhov",
      "html_url": "https://github.com/mprakhov",
      "followers_url": "https://api.github.com/users/mprakhov/followers",
      "following_url": "https://api.github.com/users/mprakhov/following{/other_user}",
      "gists_url": "https://api.github.com/users/mprakhov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mprakhov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mprakhov/subscriptions",
      "organizations_url": "https://api.github.com/users/mprakhov/orgs",
      "repos_url": "https://api.github.com/users/mprakhov/repos",
      "events_url": "https://api.github.com/users/mprakhov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mprakhov/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/65",
    "html_url": "https://github.com/status-im/status-desktop/milestone/65",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/65/labels",
    "id": 9039509,
    "node_id": "MI_kwDOD5KrTM4Aie6V",
    "number": 65,
    "title": "0.15",
    "description": "**1. Finish anything that wasn't completed in the previous 0.14 cycle**\r\n- And fix bugs as usual. We need to keep tech. debt at a roughly fixed level as we grow out functionality, can't let it accumulate! ;-)\r\n\r\n**2. Tokenisation of community ownership**\r\n- Work needed already evaluated in spike.  Community and 'Channel in a Community' URLs don't need to be signed if this will present problems. Patryk to work on this as a continuation of the spike already done.\r\n- See priority 4 below, as this also has some implications for the tokenisation of community work.\r\n\r\n**3. Profile showcase backend**\r\n- The long-delayed profile showcase backend!  We have the UI on the desktop ready to go for this feature, and Mobile is going to need the backend for this feature as well, so let's try to get it done in 0.14 [#11081](https://github.com/status-im/status-desktop/issues/11081)\r\n\r\n**4. Community tokens visible in wallet when received by user who is not a member of that community**\r\n- Solution obvs. needs to be fully decenteralised and permissionless\r\n- Perhaps whenever a community token is A) sent from a Status Wallet to another user or B) airdropped by a community or C) retailed by a community, a M2M (invisible to the user) Waku message should be sent to the recipient's *ethereum address*?\r\n- This message could either: A) contain the metadata for the token B) tell the user that they have received token, and to check the metadata in either another Waku channel where Control Nodes periodically post Metadata OR check the metadata embedded in the token contract (embedding metadata in the token contract might be a better idea?).  \r\n- The token metadata stored in the token contract is signed by the Community's private key to ensure authenticity.  When the community's private key changes due to ownership of a community being transferred or due to the control node being moved, a transaction must be made to update this metadata so it is signed by the community's new private key.\r\n- See here for how a Waku message can be sent to and Ethereum address https://rfc.vac.dev/spec/20/\r\n\r\n**5. Discord history import into a single channel in an existing community**\r\n- Pay off any Discord history import service tech. debt first\r\n- Then build the import into a single channel functionality, designs for this are already complete\r\n\r\n**6. UI for community owner to enable manual Waku static shading for their community**\r\n- This will be off by default in 0.15\r\n- This UI is only for the Owner of a community (not TokenMasters or Admins)\r\n- Figma designs are here https://www.figma.com/file/qHfFm7C9LwtXpfdbxssCK3/Kuba%E2%8E%9CDesktop---Communities?type=design&node-id=37242%3A222352&mode=design&t=rw6q6NQYmiz3rSn2-1\r\n\r\n**7. Community chat functionality enhancements**\r\n- Ability to mark a token gated channel as 'hidden', only visible to community members with the requisite tokens\r\n\r\n\r\n\r\n\r\n\r\n**--- Wallet Team ---**\r\n\r\n1. Finish anything that wasn't completed in the previous 0.14 cycle\r\n- And fix bugs as usual. We need to keep tech. debt at a roughly fixed level as we grow out functionality, can't let it accumulate! ;-)\r\n\r\n2. Sending Community created tokens to Status users who are not members of that community\r\n- See priority 4) in the messaging priorities list above.\r\n\r\n3. Send NFT functionality\r\n\r\n4. Updated wallet settings with keypair syncing\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "creator": {
      "login": "iurimatias",
      "id": 176720,
      "node_id": "MDQ6VXNlcjE3NjcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iurimatias",
      "html_url": "https://github.com/iurimatias",
      "followers_url": "https://api.github.com/users/iurimatias/followers",
      "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
      "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
      "organizations_url": "https://api.github.com/users/iurimatias/orgs",
      "repos_url": "https://api.github.com/users/iurimatias/repos",
      "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iurimatias/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 27,
    "closed_issues": 240,
    "state": "open",
    "created_at": "2023-02-13T19:08:52Z",
    "updated_at": "2023-10-31T15:59:45Z",
    "due_on": "2023-11-09T08:00:00Z",
    "closed_at": null
  },
  "comments": 15,
  "created_at": "2023-08-21T16:23:05Z",
  "updated_at": "2023-10-31T14:20:43Z",
  "closed_at": "2023-10-31T14:20:42Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Dependent on https://github.com/status-im/status-desktop/issues/11972\r\n\r\nAt present, only the control node stores the revealed addresses of members. When ownership is transferred to a new owner, this new owner doesn't have access to these revealed addresses. To perform permissions checks, the new owner must request members to reveal their addresses again. ~~Maybe we could introduce a cool-down period, potentially 24 hours, during which members are not kicked for not having revealed their addresses immediately after an ownership transfer.~~ All members should be kicked and asked to rejoin with revealed addresses. This should happen automatically without members interaction. The community will rebuild itself silently when members become online. If control node is offline members should be informed with something like: \"The community owner has changed, you will be added back to the community when the control node goes back online\".\r\n\r\nNOTE: _Although the new owner can approach the previous owner to obtain the revealed addresses, this method poses a security risk. The former owner could send malicious addresses or may no longer be trusted._\r\n\r\n### Acceptance criteria:\r\n- [ ] new control node should kick all members and ask them to rejoin with revealed addresses\r\n    - [ ] clients should send request to join automatically without user interaction\r\n- [ ] users should be notified if they have been removed due to owner change and are waiting for control node to become online to accept their request to join\r\n~~- [ ] permissions check should be done after cool-down period, so that members have time to send addresses~~",
  "closed_by": {
    "login": "mprakhov",
    "id": 117639195,
    "node_id": "U_kgDOBwMIGw",
    "avatar_url": "https://avatars.githubusercontent.com/u/117639195?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mprakhov",
    "html_url": "https://github.com/mprakhov",
    "followers_url": "https://api.github.com/users/mprakhov/followers",
    "following_url": "https://api.github.com/users/mprakhov/following{/other_user}",
    "gists_url": "https://api.github.com/users/mprakhov/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mprakhov/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mprakhov/subscriptions",
    "organizations_url": "https://api.github.com/users/mprakhov/orgs",
    "repos_url": "https://api.github.com/users/mprakhov/repos",
    "events_url": "https://api.github.com/users/mprakhov/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mprakhov/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/11969/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/11969/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1729787089",
    "html_url": "https://github.com/status-im/status-desktop/issues/11969#issuecomment-1729787089",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11969",
    "id": 1729787089,
    "node_id": "IC_kwDOD5KrTM5nGnTR",
    "user": {
      "login": "mprakhov",
      "id": 117639195,
      "node_id": "U_kgDOBwMIGw",
      "avatar_url": "https://avatars.githubusercontent.com/u/117639195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mprakhov",
      "html_url": "https://github.com/mprakhov",
      "followers_url": "https://api.github.com/users/mprakhov/followers",
      "following_url": "https://api.github.com/users/mprakhov/following{/other_user}",
      "gists_url": "https://api.github.com/users/mprakhov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mprakhov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mprakhov/subscriptions",
      "organizations_url": "https://api.github.com/users/mprakhov/orgs",
      "repos_url": "https://api.github.com/users/mprakhov/repos",
      "events_url": "https://api.github.com/users/mprakhov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mprakhov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-21T15:13:00Z",
    "updated_at": "2023-09-21T15:13:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Discussed the proposed solution with @osmaczko, we want to change the behavior and need feedback from you\r\n\r\nTaking into account, that the new community Owner will not have a revealed address of other clients, if we use a cool-down period of 24h for clients to share their accounts, all clients will have the possibility to access the secret chats, for example (permission check must be disabled for this 24 hours)\r\n\r\nThe proposal is to kick all members (as I understand, they must stay in spectator mode) and send a specific message to the client that he was kicked. When the client receives this msg, we can:\r\n\r\n- option 1: Handle this msg and make an automatic request to join. \r\nCons: if the community was ON_REQUEST - it must be manually approved\r\n\r\n- option 2: Handle msg and show in the UI (activity notification?) that the community Owner was changed and he needs to rejoin the community\r\n\r\n@jrainville @osmaczko @John-44 @cammellos what are your thoughts?",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1729787089/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1729815517",
    "html_url": "https://github.com/status-im/status-desktop/issues/11969#issuecomment-1729815517",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11969",
    "id": 1729815517,
    "node_id": "IC_kwDOD5KrTM5nGuPd",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-21T15:28:37Z",
    "updated_at": "2023-09-21T15:28:37Z",
    "author_association": "MEMBER",
    "body": "> Taking into account, that the new community Owner will not have a revealed address of other clients, if we use a cool-down period of 24h for clients to share their accounts, all clients will have the possibility to access the secret chats, for example (permission check must be disabled for this 24 hours)\r\n\r\nI don't think every one will have access to the secret channels.\r\n\r\nI think we can just make it so that in that 24h window, the member lists don't change, nor the encryption keys for the channels. In other words, in that period, nothing changes. No new community description, apart to signal that the owner changed I guess.\r\n\r\nWe do still have the issue that some people will not be online when the change will happen, even within 24 hours, so yes, these people would end up being kicked if the community has a join permission.\r\n\r\nIMO, we should do option 1, but we could improve it further.\r\nMaybe the new control node could keep in their `requestToJoin` table the list of users that were kicked because of missing addresses. Like a new state `rejectedBecauseMissingAddresses`.\r\nThat way, when the user comes back online and it automatically sends the shared addresses (the same ones that were used previously), the control will see that this user was not kicked because of bad behaviour, but because of the change of owners. It would then auto-accept the request.\r\n\r\nWhat do you think? It's a little more work, but the UX would be way better, since not much is to be done by the user nor the owner/admins.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1729815517/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1729929138",
    "html_url": "https://github.com/status-im/status-desktop/issues/11969#issuecomment-1729929138",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11969",
    "id": 1729929138,
    "node_id": "IC_kwDOD5KrTM5nHJ-y",
    "user": {
      "login": "mprakhov",
      "id": 117639195,
      "node_id": "U_kgDOBwMIGw",
      "avatar_url": "https://avatars.githubusercontent.com/u/117639195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mprakhov",
      "html_url": "https://github.com/mprakhov",
      "followers_url": "https://api.github.com/users/mprakhov/followers",
      "following_url": "https://api.github.com/users/mprakhov/following{/other_user}",
      "gists_url": "https://api.github.com/users/mprakhov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mprakhov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mprakhov/subscriptions",
      "organizations_url": "https://api.github.com/users/mprakhov/orgs",
      "repos_url": "https://api.github.com/users/mprakhov/repos",
      "events_url": "https://api.github.com/users/mprakhov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mprakhov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-21T16:37:34Z",
    "updated_at": "2023-09-21T16:38:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "If it would be possible, I would like to have this community owner change to be more event-based without any cool-down periods for anything (it will be a complex change (and buggy), especially on status node startup)\r\nAnd keeping `requestsToJoin` and having a separate status for it looks ok to me",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1729929138/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1729996347",
    "html_url": "https://github.com/status-im/status-desktop/issues/11969#issuecomment-1729996347",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11969",
    "id": 1729996347,
    "node_id": "IC_kwDOD5KrTM5nHaY7",
    "user": {
      "login": "John-44",
      "id": 22846356,
      "node_id": "MDQ6VXNlcjIyODQ2MzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/22846356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/John-44",
      "html_url": "https://github.com/John-44",
      "followers_url": "https://api.github.com/users/John-44/followers",
      "following_url": "https://api.github.com/users/John-44/following{/other_user}",
      "gists_url": "https://api.github.com/users/John-44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/John-44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/John-44/subscriptions",
      "organizations_url": "https://api.github.com/users/John-44/orgs",
      "repos_url": "https://api.github.com/users/John-44/repos",
      "events_url": "https://api.github.com/users/John-44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/John-44/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-21T17:19:43Z",
    "updated_at": "2023-09-21T17:19:43Z",
    "author_association": "NONE",
    "body": "> Maybe the new control node could keep in their `requestToJoin` table the list of users that were kicked because of missing addresses. Like a new state `rejectedBecauseMissingAddresses`.\r\n> That way, when the user comes back online and it automatically sends the shared addresses (the same ones that were used previously), the control will see that this user was not kicked because of bad behaviour, but because of the change of owners. It would then auto-accept the request.\r\n\r\nThis seems like a good improvement.\r\n\r\n@osmaczko @mprakhov @jrainville to double check, all of the revealing addresses to the new owner would be automatic and happen without user interaction (other than one of the user's Status devices needing to be online), correct?",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1729996347/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1730045843",
    "html_url": "https://github.com/status-im/status-desktop/issues/11969#issuecomment-1730045843",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11969",
    "id": 1730045843,
    "node_id": "IC_kwDOD5KrTM5nHmeT",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-21T17:54:52Z",
    "updated_at": "2023-09-21T17:54:52Z",
    "author_association": "MEMBER",
    "body": "> @osmaczko @mprakhov @jrainville to double check, all of the revealing addresses to the new owner would be automatic and happen without user interaction (other than one of the user's Status devices needing to be online), correct?\r\n\r\nAs long as the member had shared addresses before, then yes. because members store their own shared addresses in their own database, we could just have a signal from the control node to the member saying \"give me your addresses again please\" and the member node would just send it back in the background.\r\nSo nothing to do from the user side.\r\n\r\nThe only annoying thing that might happen however is if this becomes fully async, in the case where the member and control node are never online at the same.\r\nExample:\r\n1. Control node changes owner\r\n2. Members get kicked but put in the special category of `rejectedBecauseMissingAddresses`\r\n3. Control node sends the signal to members to get the shared addresses\r\n4. Member is offline\r\n5. Control node goes offline\r\n6. Member goes online, receives the signal and sends the addresses\r\n7. Control is still offline, so the member sees they are currently out of the community\r\n\r\nFor this case, we probably need a new \"pending state\". Something saying \"The community owner has changed, you will be added back to the community when the control node goes back online\".",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1730045843/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1730097432",
    "html_url": "https://github.com/status-im/status-desktop/issues/11969#issuecomment-1730097432",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11969",
    "id": 1730097432,
    "node_id": "IC_kwDOD5KrTM5nHzEY",
    "user": {
      "login": "osmaczko",
      "id": 33099791,
      "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osmaczko",
      "html_url": "https://github.com/osmaczko",
      "followers_url": "https://api.github.com/users/osmaczko/followers",
      "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
      "organizations_url": "https://api.github.com/users/osmaczko/orgs",
      "repos_url": "https://api.github.com/users/osmaczko/repos",
      "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osmaczko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-21T18:30:31Z",
    "updated_at": "2023-09-21T18:30:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think we can just make it so that in that 24h window, the member lists don't change, nor the encryption keys for the channels. In other words, in that period, nothing changes. No new community description, apart to signal that the owner changed I guess.\r\n\r\nThat would mean the community is frozen for 24hrs. I see it problematic because of a few reasons:\r\n1) How new owner would know it can't update the community? Do we need new designs for that?\r\n2) Code-wise, freezing the community may be challenging. There are many asynchronous loops going on -CommunityDescription broadcast, periodic members reevaluation based on permissions and so on.\r\n3) It means that for 24hrs members who no longer satisfy the criteria can participate in community/channel - but that's acceptable I guess.\r\n\r\nThe most straightforward solution I see is to kick all members (if community is token-gated) and ask them to rejoin with revealed addresses. This can happen automatically without members interaction. The community will rebuild itself silently when members become online. If control node is offline members should be informed as you proposed: \"The community owner has changed, you will be added back to the community when the control node goes back online\".",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1730097432/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1730098800",
    "html_url": "https://github.com/status-im/status-desktop/issues/11969#issuecomment-1730098800",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11969",
    "id": 1730098800,
    "node_id": "IC_kwDOD5KrTM5nHzZw",
    "user": {
      "login": "osmaczko",
      "id": 33099791,
      "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osmaczko",
      "html_url": "https://github.com/osmaczko",
      "followers_url": "https://api.github.com/users/osmaczko/followers",
      "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
      "organizations_url": "https://api.github.com/users/osmaczko/orgs",
      "repos_url": "https://api.github.com/users/osmaczko/repos",
      "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osmaczko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-21T18:31:34Z",
    "updated_at": "2023-09-21T18:31:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @osmaczko @mprakhov @jrainville to double check, all of the revealing addresses to the new owner would be automatic and happen without user interaction (other than one of the user's Status devices needing to be online), correct?\r\n\r\n@John-44 this is still being discussed. Most likely we will need at least \"The community owner has changed, you will be added back to the community when the control node goes back online\" notification under certain conditions (when control node is offline).",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1730098800/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1730100929",
    "html_url": "https://github.com/status-im/status-desktop/issues/11969#issuecomment-1730100929",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11969",
    "id": 1730100929,
    "node_id": "IC_kwDOD5KrTM5nHz7B",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-21T18:33:09Z",
    "updated_at": "2023-09-21T18:33:09Z",
    "author_association": "MEMBER",
    "body": "Yeah I agree, the 24h freeze is probably too complex. Let's go with the full kick with auto-re-entry in the background",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1730100929/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1730103749",
    "html_url": "https://github.com/status-im/status-desktop/issues/11969#issuecomment-1730103749",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11969",
    "id": 1730103749,
    "node_id": "IC_kwDOD5KrTM5nH0nF",
    "user": {
      "login": "John-44",
      "id": 22846356,
      "node_id": "MDQ6VXNlcjIyODQ2MzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/22846356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/John-44",
      "html_url": "https://github.com/John-44",
      "followers_url": "https://api.github.com/users/John-44/followers",
      "following_url": "https://api.github.com/users/John-44/following{/other_user}",
      "gists_url": "https://api.github.com/users/John-44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/John-44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/John-44/subscriptions",
      "organizations_url": "https://api.github.com/users/John-44/orgs",
      "repos_url": "https://api.github.com/users/John-44/repos",
      "events_url": "https://api.github.com/users/John-44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/John-44/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-21T18:35:17Z",
    "updated_at": "2023-09-21T18:35:17Z",
    "author_association": "NONE",
    "body": "> > @osmaczko @mprakhov @jrainville to double check, all of the revealing addresses to the new owner would be automatic and happen without user interaction (other than one of the user's Status devices needing to be online), correct?\r\n> \r\n> As long as the member had shared addresses before, then yes. because members store their own shared addresses in their own database, we could just have a signal from the control node to the member saying \"give me your addresses again please\" and the member node would just send it back in the background. So nothing to do from the user side.\r\n> \r\n> The only annoying thing that might happen however is if this becomes fully async, in the case where the member and control node are never online at the same. Example:\r\n> \r\n> 1. Control node changes owner\r\n> 2. Members get kicked but put in the special category of `rejectedBecauseMissingAddresses`\r\n> 3. Control node sends the signal to members to get the shared addresses\r\n> 4. Member is offline\r\n> 5. Control node goes offline\r\n> 6. Member goes online, receives the signal and sends the addresses\r\n> 7. Control is still offline, so the member sees they are currently out of the community\r\n> \r\n> For this case, we probably need a new \"pending state\". Something saying \"The community owner has changed, you will be added back to the community when the control node goes back online\".\r\n\r\nDoes a member and the control node really both need to be online at the same time in this scenario?   Couldn't the member message to the control node be stored (like all other waku messages, as per waku protocol) on the waku store node and then be delivered to the control node when it comes back online?  And if the member is offline when the control node is online, I would have thought that also wouldn't matter because the control node's message back to the user would also be stored for 30 days on a waku store node.\r\n\r\nSo both the store node and the control node need to be online within 30 days of each other (if we can pass the required messages via waku).  Or am I missing something.  ",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1730103749/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1730106998",
    "html_url": "https://github.com/status-im/status-desktop/issues/11969#issuecomment-1730106998",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11969",
    "id": 1730106998,
    "node_id": "IC_kwDOD5KrTM5nH1Z2",
    "user": {
      "login": "osmaczko",
      "id": 33099791,
      "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osmaczko",
      "html_url": "https://github.com/osmaczko",
      "followers_url": "https://api.github.com/users/osmaczko/followers",
      "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
      "organizations_url": "https://api.github.com/users/osmaczko/orgs",
      "repos_url": "https://api.github.com/users/osmaczko/repos",
      "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osmaczko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-21T18:37:30Z",
    "updated_at": "2023-09-21T18:37:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Does a member and the control node really both need to be online at the same time in this scenario?\r\n\r\n@John-44 Of course not. As you correctly pointed out, the messages will be restored from store nodes.\r\n\r\nI think we agreed on solution: https://github.com/status-im/status-desktop/issues/11969#issuecomment-1730097432\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1730106998/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1730111308",
    "html_url": "https://github.com/status-im/status-desktop/issues/11969#issuecomment-1730111308",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11969",
    "id": 1730111308,
    "node_id": "IC_kwDOD5KrTM5nH2dM",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-21T18:40:35Z",
    "updated_at": "2023-09-21T18:40:35Z",
    "author_association": "MEMBER",
    "body": "> Does a member and the control node really both need to be online at the same time in this scenario?\r\n\r\nNo. All you said was right. We will indeed store all those messages/signals on control nodes.\r\n\r\nThe scenario I highlighted is to show that a user needs a special state/message, because if the control node is **not** online when it sends its shared addresses, it will not be auto-re-accepted in the community until the control is back.\r\nSo they need to understand what is going on.\r\n\r\nEven if they are both online, there would be a couple seconds for the exchange of messages to get the user back in the community.\r\nI guess the 30 second fake loading will take care of that, but in case the user was already logged in, they will be kicked out for a second or two.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1730111308/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1730120071",
    "html_url": "https://github.com/status-im/status-desktop/issues/11969#issuecomment-1730120071",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11969",
    "id": 1730120071,
    "node_id": "IC_kwDOD5KrTM5nH4mH",
    "user": {
      "login": "osmaczko",
      "id": 33099791,
      "node_id": "MDQ6VXNlcjMzMDk5Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33099791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osmaczko",
      "html_url": "https://github.com/osmaczko",
      "followers_url": "https://api.github.com/users/osmaczko/followers",
      "following_url": "https://api.github.com/users/osmaczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/osmaczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osmaczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osmaczko/subscriptions",
      "organizations_url": "https://api.github.com/users/osmaczko/orgs",
      "repos_url": "https://api.github.com/users/osmaczko/repos",
      "events_url": "https://api.github.com/users/osmaczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osmaczko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-21T18:47:10Z",
    "updated_at": "2023-09-21T18:47:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI: I've just updated the description of the issue.\r\n\r\n@jrainville @John-44  We'll need small design update to accommodate \"The community owner has changed, you will be added back to the community when the control node goes back online\".",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1730120071/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1733640091",
    "html_url": "https://github.com/status-im/status-desktop/issues/11969#issuecomment-1733640091",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11969",
    "id": 1733640091,
    "node_id": "IC_kwDOD5KrTM5nVT-b",
    "user": {
      "login": "benjthayer",
      "id": 110033914,
      "node_id": "U_kgDOBo77-g",
      "avatar_url": "https://avatars.githubusercontent.com/u/110033914?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjthayer",
      "html_url": "https://github.com/benjthayer",
      "followers_url": "https://api.github.com/users/benjthayer/followers",
      "following_url": "https://api.github.com/users/benjthayer/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjthayer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjthayer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjthayer/subscriptions",
      "organizations_url": "https://api.github.com/users/benjthayer/orgs",
      "repos_url": "https://api.github.com/users/benjthayer/repos",
      "events_url": "https://api.github.com/users/benjthayer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjthayer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-25T12:44:55Z",
    "updated_at": "2023-09-25T12:44:55Z",
    "author_association": "NONE",
    "body": "> FYI: I've just updated the description of the issue.\r\n> \r\n> @jrainville @John-44 We'll need small design update to accommodate \"The community owner has changed, you will be added back to the community when the control node goes back online\".\r\n\r\nWill look into this today/tomorrow and revert with designs ",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1733640091/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1734129389",
    "html_url": "https://github.com/status-im/status-desktop/issues/11969#issuecomment-1734129389",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11969",
    "id": 1734129389,
    "node_id": "IC_kwDOD5KrTM5nXLbt",
    "user": {
      "login": "benjthayer",
      "id": 110033914,
      "node_id": "U_kgDOBo77-g",
      "avatar_url": "https://avatars.githubusercontent.com/u/110033914?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjthayer",
      "html_url": "https://github.com/benjthayer",
      "followers_url": "https://api.github.com/users/benjthayer/followers",
      "following_url": "https://api.github.com/users/benjthayer/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjthayer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjthayer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjthayer/subscriptions",
      "organizations_url": "https://api.github.com/users/benjthayer/orgs",
      "repos_url": "https://api.github.com/users/benjthayer/repos",
      "events_url": "https://api.github.com/users/benjthayer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjthayer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-25T16:53:36Z",
    "updated_at": "2023-09-25T16:53:36Z",
    "author_association": "NONE",
    "body": "Hey @osmaczko @John-44 @jrainville @mprakhov I've designed this state for the kicked community member while they await the new control node coming online. I've abstained from specifically referring to the community changing hands given some community owners may be more sensitive to highlighting change in management than others but totally open to copy suggestions. Let me know what you think! \r\n\r\n<img width=\"1440\" alt=\"ControlNodeOffliine\" src=\"https://github.com/status-im/status-desktop/assets/110033914/5bdad97d-7fc5-491a-a308-53d77940996a\">\r\n\r\nFigma\r\nhttps://www.figma.com/file/qHfFm7C9LwtXpfdbxssCK3/Kuba%E2%8E%9CDesktop---Communities?type=design&node-id=40026-142516&mode=design&t=L9f3FBXoghLxinLl-4",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1734129389/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1734138228",
    "html_url": "https://github.com/status-im/status-desktop/issues/11969#issuecomment-1734138228",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11969",
    "id": 1734138228,
    "node_id": "IC_kwDOD5KrTM5nXNl0",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-25T17:00:02Z",
    "updated_at": "2023-09-25T17:00:02Z",
    "author_association": "MEMBER",
    "body": "Looks good to me. Maybe some people might ask why that is though. It sounds like a maintenance message though, so it can be acceptable as is!",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1734138228/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
