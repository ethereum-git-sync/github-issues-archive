{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/9832",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/9832/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/9832/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/9832/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/9832",
  "id": 1618821579,
  "node_id": "I_kwDOD5KrTM5gfUHL",
  "number": 9832,
  "title": "Missing caching mechanism",
  "user": {
    "login": "Khushboo-dev-cpp",
    "id": 60327365,
    "node_id": "MDQ6VXNlcjYwMzI3MzY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/60327365?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Khushboo-dev-cpp",
    "html_url": "https://github.com/Khushboo-dev-cpp",
    "followers_url": "https://api.github.com/users/Khushboo-dev-cpp/followers",
    "following_url": "https://api.github.com/users/Khushboo-dev-cpp/following{/other_user}",
    "gists_url": "https://api.github.com/users/Khushboo-dev-cpp/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Khushboo-dev-cpp/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Khushboo-dev-cpp/subscriptions",
    "organizations_url": "https://api.github.com/users/Khushboo-dev-cpp/orgs",
    "repos_url": "https://api.github.com/users/Khushboo-dev-cpp/repos",
    "events_url": "https://api.github.com/users/Khushboo-dev-cpp/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Khushboo-dev-cpp/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2331339531,
      "node_id": "MDU6TGFiZWwyMzMxMzM5NTMx",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/wallet-team",
      "name": "wallet-team",
      "color": "b60205",
      "default": false,
      "description": ""
    },
    {
      "id": 3047427135,
      "node_id": "MDU6TGFiZWwzMDQ3NDI3MTM1",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/feature",
      "name": "feature",
      "color": "0E8A16",
      "default": false,
      "description": ""
    },
    {
      "id": 5745577965,
      "node_id": "LA_kwDOD5KrTM8AAAABVnaP7Q",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:DesktopCollectibleScheduler",
      "name": "E:DesktopCollectibleScheduler",
      "color": "5BA2B2",
      "default": false,
      "description": "Implementation of the new collectible strategy fetching"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/61",
    "html_url": "https://github.com/status-im/status-desktop/milestone/61",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/61/labels",
    "id": 8739485,
    "node_id": "MI_kwDOD5KrTM4AhVqd",
    "number": 61,
    "title": "0.16",
    "description": "**1. Finish anything that wasn't completed in the previous 0.15 cycle**\r\n\r\n- And fix bugs as usual.  We need to keep tech. debt at a roughly fixed level as we grow out functionality, can't let it accumulate! ;-)\r\n\r\n**2. Discord history import into a single channel in an existing community**\r\n\r\n- Pay off any Discord history import service tech. debt first\r\n\r\n- Then build the import into a single channel functionality, designs for this are already complete\r\n\r\n**3. Binaries over Waku**\r\n- Improve transfer of binaries over waku via splitting into chunks https://github.com/status-im/status-desktop/issues/9923\r\n- Posting of small files (max size somewhere in the region of 1 to 2mb).  Requires above item before going live\r\n\r\n\r\n**4.  IPFS service for community minted NFTs and other binary community assets**\r\n\r\n- In order for NFT tokens minted in our UI to be correctly displayed with all metadata on OpenSea, their assets need to be stored in IPFS (because IPFS is supported by OpenSea)\r\n\r\n- Will work something like this: IPFS pinning server is integrated into Status Desktop. When a community mints a NFT, the associated assets are IPFS pinned by the community control node.  The community control node then sends a 'user invisible message' to all other community members via Waku, and the Status Desktop installs of all community members then fetch the NFT assets and pin them as well.  This means that every member of a community that is running Status Desktop will always be 'IPFS pinning' all assets related to the community, so that as long as one community member that uses Status Desktop is online, the assets are guaranteed to be available via IPFS.\r\n\r\n- Use a similar scheme to the above for other community assets (that are not related to token minting) like: Community banner image, community icon, community description.\r\n\r\n- Use a similar scheme to the above but for status user data.  Status users pin assets related to their profile (banner image, avatar) using IPFS, and all of the user's mutual contacts also pin that user's profile data.  Must incorporate a setting so that users can opt-out of pinning their mutual contact's profile data.\r\n\r\n**5. Automatic bandwidth test on app startup**\r\n\r\n- automatic bandwidth test on app startup, and use results to automatically configure the waku shard usage appropriately depending on the available bandwidth (at the 'user has tons of bandwidth' end of the spectrum all waku shards will use waku Relay mode, at the 'user has very little bandwidth' end of the spectrum all waku shards will use waku filter + light push mode, and in between these two ends of the spectrum the user will use a mix of waku relay mode and waku filter + light push mode for different shards).  Plus also use  the results of the bandwidth test to automatically set the bittorred throttling at an appropriate setting at the beginning of each new session.\r\n\r\n\r\n\r\n",
    "creator": {
      "login": "iurimatias",
      "id": 176720,
      "node_id": "MDQ6VXNlcjE3NjcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iurimatias",
      "html_url": "https://github.com/iurimatias",
      "followers_url": "https://api.github.com/users/iurimatias/followers",
      "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
      "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
      "organizations_url": "https://api.github.com/users/iurimatias/orgs",
      "repos_url": "https://api.github.com/users/iurimatias/repos",
      "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iurimatias/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 23,
    "closed_issues": 2,
    "state": "open",
    "created_at": "2022-12-09T15:06:43Z",
    "updated_at": "2023-07-20T06:04:57Z",
    "due_on": "2023-11-03T07:00:00Z",
    "closed_at": null
  },
  "comments": 5,
  "created_at": "2023-03-10T11:22:25Z",
  "updated_at": "2023-07-20T05:58:08Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nCaching mechanism on the go side missing for \r\n1. Values from Infura and POKT\r\n2. Collectibles\r\n3. Values from Cryptocompare and coingecko\r\n\r\nIf we make calls when the websites are down we receive error saying website is down but we should be receiving cached values on the client side.\r\n\r\n### Acceptance Criteria\r\n\r\nThe values from the above websites should be cached and stored\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/9832/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/9832/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1463852164",
    "html_url": "https://github.com/status-im/status-desktop/issues/9832#issuecomment-1463852164",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9832",
    "id": 1463852164,
    "node_id": "IC_kwDOD5KrTM5XQJyE",
    "user": {
      "login": "alaibe",
      "id": 491074,
      "node_id": "MDQ6VXNlcjQ5MTA3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/491074?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alaibe",
      "html_url": "https://github.com/alaibe",
      "followers_url": "https://api.github.com/users/alaibe/followers",
      "following_url": "https://api.github.com/users/alaibe/following{/other_user}",
      "gists_url": "https://api.github.com/users/alaibe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alaibe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alaibe/subscriptions",
      "organizations_url": "https://api.github.com/users/alaibe/orgs",
      "repos_url": "https://api.github.com/users/alaibe/repos",
      "events_url": "https://api.github.com/users/alaibe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alaibe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-10T14:05:31Z",
    "updated_at": "2023-03-10T14:05:31Z",
    "author_association": "COLLABORATOR",
    "body": "1 Values are cache for 15 minutes in client side.\r\nCaching values from Infura/Pokt => what do we want to cache exactly here?\r\n2 Collectibles could probably suffer from same inconsitency as in infura\r\n3 yes we can add daily cache here",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1463852164/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1463862479",
    "html_url": "https://github.com/status-im/status-desktop/issues/9832#issuecomment-1463862479",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9832",
    "id": 1463862479,
    "node_id": "IC_kwDOD5KrTM5XQMTP",
    "user": {
      "login": "Khushboo-dev-cpp",
      "id": 60327365,
      "node_id": "MDQ6VXNlcjYwMzI3MzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/60327365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Khushboo-dev-cpp",
      "html_url": "https://github.com/Khushboo-dev-cpp",
      "followers_url": "https://api.github.com/users/Khushboo-dev-cpp/followers",
      "following_url": "https://api.github.com/users/Khushboo-dev-cpp/following{/other_user}",
      "gists_url": "https://api.github.com/users/Khushboo-dev-cpp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Khushboo-dev-cpp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Khushboo-dev-cpp/subscriptions",
      "organizations_url": "https://api.github.com/users/Khushboo-dev-cpp/orgs",
      "repos_url": "https://api.github.com/users/Khushboo-dev-cpp/repos",
      "events_url": "https://api.github.com/users/Khushboo-dev-cpp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Khushboo-dev-cpp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-10T14:12:51Z",
    "updated_at": "2023-03-10T14:12:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "> 1 Values are cache for 15 minutes in client side. Caching values from Infura/Pokt => what do we want to cache exactly here? 2 Collectibles could probably suffer from same inconsitency as in infura 3 yes we can add daily cache here\r\n\r\nso for 1. We need to hold the old token balances etc we have with us, instead of not displaying anything in Asset list, which is what is happening currently in case we restart app with no internet connection. Nothing is shown atm. so it seems nothing is cached. Also caching should occur on go side?\r\n\r\n2. I am not sure what you mean by that?",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1463862479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1468650549",
    "html_url": "https://github.com/status-im/status-desktop/issues/9832#issuecomment-1468650549",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9832",
    "id": 1468650549,
    "node_id": "IC_kwDOD5KrTM5XidQ1",
    "user": {
      "login": "Khushboo-dev-cpp",
      "id": 60327365,
      "node_id": "MDQ6VXNlcjYwMzI3MzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/60327365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Khushboo-dev-cpp",
      "html_url": "https://github.com/Khushboo-dev-cpp",
      "followers_url": "https://api.github.com/users/Khushboo-dev-cpp/followers",
      "following_url": "https://api.github.com/users/Khushboo-dev-cpp/following{/other_user}",
      "gists_url": "https://api.github.com/users/Khushboo-dev-cpp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Khushboo-dev-cpp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Khushboo-dev-cpp/subscriptions",
      "organizations_url": "https://api.github.com/users/Khushboo-dev-cpp/orgs",
      "repos_url": "https://api.github.com/users/Khushboo-dev-cpp/repos",
      "events_url": "https://api.github.com/users/Khushboo-dev-cpp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Khushboo-dev-cpp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-14T18:50:23Z",
    "updated_at": "2023-03-14T18:50:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "We also need to make sure that in case market values are down, atleast the asset values which are still available are passed back, currently the entire list is returned as empty.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1468650549/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1468651375",
    "html_url": "https://github.com/status-im/status-desktop/issues/9832#issuecomment-1468651375",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9832",
    "id": 1468651375,
    "node_id": "IC_kwDOD5KrTM5Xiddv",
    "user": {
      "login": "Khushboo-dev-cpp",
      "id": 60327365,
      "node_id": "MDQ6VXNlcjYwMzI3MzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/60327365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Khushboo-dev-cpp",
      "html_url": "https://github.com/Khushboo-dev-cpp",
      "followers_url": "https://api.github.com/users/Khushboo-dev-cpp/followers",
      "following_url": "https://api.github.com/users/Khushboo-dev-cpp/following{/other_user}",
      "gists_url": "https://api.github.com/users/Khushboo-dev-cpp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Khushboo-dev-cpp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Khushboo-dev-cpp/subscriptions",
      "organizations_url": "https://api.github.com/users/Khushboo-dev-cpp/orgs",
      "repos_url": "https://api.github.com/users/Khushboo-dev-cpp/repos",
      "events_url": "https://api.github.com/users/Khushboo-dev-cpp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Khushboo-dev-cpp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-14T18:51:07Z",
    "updated_at": "2023-03-14T18:51:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "incase I restrictic connection to cryptocommpare, currently this error is seen when calling getWalletToken \r\n\r\nERR 2023-03-14 19:50:17.788+01:00 rpc response error                         topics=\"rpc\" tid=26395 file=core.nim:36 err=\"\\nstatus-go error [methodName:wallet_getWalletToken, code:-32000, message:fallback failed with \\'json: cannot unmarshal object into Go value of type []coingecko.GeckoMarketValues\\'. run error was \\'Get \\\"https://min-api.cryptocompare.com/data/pricemultifull?fsyms=TNT,HEZ,GNT,DCN,POWR,XEENUS,LINK,AMB,TCAD,CFI,LPT,ATM,STORJ,UBT,DGX,ABYSS,TUSD,WTC,SUB,CENTRA,LINK,EKO,STORM,ZEENUS,ELF,CSNO,COMP,LXS,CND,UPP,QRL,BLZ,EOS,MANA,NEXO,SAI,BAND,TGBP,UBI,LEND,POE,ROL,USDT,GEN,LRC,RHOC,FXC,ADI,SPIKE,HND,FUEL,XPA,QSP,POLY,DTA,BLT,MOKSHA,XRL,R,CDAI,SAN,HT,BNT,XDATA,CRV,MGO,ANT,STX,ADX,MLN,MOD,USDS,RLC,AE,BRLN,CDT,AVT,REN,SPANK,DRT,DAI,OMG,PT,KNC,TKN,FRAX,SNM,GRID,ZSC,REQ,VGX,ST,TGT,PPT,ENG,TRST,AUSDC,TRX,PAY,BTM,RDN,SNGLS,ZRX,OTN,SNX,BNB,SPN,GRT,ABT,GLM,MET,PLR,XAUR,DGD,VERI,VIB,MTL,1ST,RARE,QKC,UKG,TIME,AMPL,MCO,WBTC,MKR,SOCKS,FUN,ETH2X-FLI,WIBB,WETH,NMR,DAT,PPP,WGN,YEENUS,RCN,GNO,UNI,MFG,TAAS,SALT,KIN,EDO,ICN,PRG,CVC,APPC,MDS,OGN,USDP,RAE,EDG,NPXS,WINGS,MDA,MTH,DLT,PAXG,COB,MOC,SUSD,ICOS,VRS,AST,DNT,TAUD,USDC,BAL,LOOM,SNT,DPY,ENJ,WABI,BUFF,OXT,REP,HST,ENS,AKRO,IOST,BTU,BAT,SNT,USDD,EVX,ETH&tsyms=USD&extraParams=Status.im\\\": dial tcp 127.0.0.1:443: connect: connection refused\\' ]\\n\"\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1468651375/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1482888053",
    "html_url": "https://github.com/status-im/status-desktop/issues/9832#issuecomment-1482888053",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9832",
    "id": 1482888053,
    "node_id": "IC_kwDOD5KrTM5YYxN1",
    "user": {
      "login": "Khushboo-dev-cpp",
      "id": 60327365,
      "node_id": "MDQ6VXNlcjYwMzI3MzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/60327365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Khushboo-dev-cpp",
      "html_url": "https://github.com/Khushboo-dev-cpp",
      "followers_url": "https://api.github.com/users/Khushboo-dev-cpp/followers",
      "following_url": "https://api.github.com/users/Khushboo-dev-cpp/following{/other_user}",
      "gists_url": "https://api.github.com/users/Khushboo-dev-cpp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Khushboo-dev-cpp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Khushboo-dev-cpp/subscriptions",
      "organizations_url": "https://api.github.com/users/Khushboo-dev-cpp/orgs",
      "repos_url": "https://api.github.com/users/Khushboo-dev-cpp/repos",
      "events_url": "https://api.github.com/users/Khushboo-dev-cpp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Khushboo-dev-cpp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-24T14:23:10Z",
    "updated_at": "2023-03-24T14:23:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "We should also consider adding a way to inform UI in case the values are cached or not. we need this to show error states on the UI",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1482888053/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
