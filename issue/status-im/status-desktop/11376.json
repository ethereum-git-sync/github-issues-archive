{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/11376",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/11376/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/11376/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/11376/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/11376",
  "id": 1785968452,
  "node_id": "I_kwDOD5KrTM5qc7dE",
  "number": 11376,
  "title": "[EPIC] Exchange amounts between UI and backend using strings with base units instead of js numbers",
  "user": {
    "login": "micieslak",
    "id": 20650004,
    "node_id": "MDQ6VXNlcjIwNjUwMDA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/20650004?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/micieslak",
    "html_url": "https://github.com/micieslak",
    "followers_url": "https://api.github.com/users/micieslak/followers",
    "following_url": "https://api.github.com/users/micieslak/following{/other_user}",
    "gists_url": "https://api.github.com/users/micieslak/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/micieslak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/micieslak/subscriptions",
    "organizations_url": "https://api.github.com/users/micieslak/orgs",
    "repos_url": "https://api.github.com/users/micieslak/repos",
    "events_url": "https://api.github.com/users/micieslak/events{/privacy}",
    "received_events_url": "https://api.github.com/users/micieslak/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2036563458,
      "node_id": "MDU6TGFiZWwyMDM2NTYzNDU4",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/bug",
      "name": "bug",
      "color": "d73a4a",
      "default": true,
      "description": "Something isn't working"
    },
    {
      "id": 2087353959,
      "node_id": "MDU6TGFiZWwyMDg3MzUzOTU5",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/ui-team",
      "name": "ui-team",
      "color": "1111ff",
      "default": false,
      "description": ""
    },
    {
      "id": 2331339531,
      "node_id": "MDU6TGFiZWwyMzMxMzM5NTMx",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/wallet-team",
      "name": "wallet-team",
      "color": "b60205",
      "default": false,
      "description": ""
    },
    {
      "id": 5638877635,
      "node_id": "LA_kwDOD5KrTM8AAAABUBpxww",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/C3",
      "name": "C3",
      "color": "82866A",
      "default": false,
      "description": ""
    },
    {
      "id": 5745637395,
      "node_id": "LA_kwDOD5KrTM8AAAABVnd4Ew",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Desktop%20Community%20Bugfixes%20MVP",
      "name": "E:Desktop Community Bugfixes MVP",
      "color": "01CE46",
      "default": false,
      "description": "Misc bug fixes about communities that are due for the MVP"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "micieslak",
    "id": 20650004,
    "node_id": "MDQ6VXNlcjIwNjUwMDA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/20650004?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/micieslak",
    "html_url": "https://github.com/micieslak",
    "followers_url": "https://api.github.com/users/micieslak/followers",
    "following_url": "https://api.github.com/users/micieslak/following{/other_user}",
    "gists_url": "https://api.github.com/users/micieslak/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/micieslak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/micieslak/subscriptions",
    "organizations_url": "https://api.github.com/users/micieslak/orgs",
    "repos_url": "https://api.github.com/users/micieslak/repos",
    "events_url": "https://api.github.com/users/micieslak/events{/privacy}",
    "received_events_url": "https://api.github.com/users/micieslak/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "micieslak",
      "id": 20650004,
      "node_id": "MDQ6VXNlcjIwNjUwMDA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20650004?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/micieslak",
      "html_url": "https://github.com/micieslak",
      "followers_url": "https://api.github.com/users/micieslak/followers",
      "following_url": "https://api.github.com/users/micieslak/following{/other_user}",
      "gists_url": "https://api.github.com/users/micieslak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/micieslak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/micieslak/subscriptions",
      "organizations_url": "https://api.github.com/users/micieslak/orgs",
      "repos_url": "https://api.github.com/users/micieslak/repos",
      "events_url": "https://api.github.com/users/micieslak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/micieslak/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/61",
    "html_url": "https://github.com/status-im/status-desktop/milestone/61",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/61/labels",
    "id": 8739485,
    "node_id": "MI_kwDOD5KrTM4AhVqd",
    "number": 61,
    "title": "0.16",
    "description": "**1. Finish anything that wasn't completed in the previous 0.15 cycle**\r\n\r\n- And fix bugs as usual.  We need to keep tech. debt at a roughly fixed level as we grow out functionality, can't let it accumulate! ;-)\r\n\r\n**2. Sending tokens to other users in chat**\r\n- Rebuild this functionality, based on a new design that utilizes the profile showcase functionality\r\n\r\n**3. Complete initial airdrop functionality**\r\n- Airdrop history screens\r\n- Ability to airdrop based on in-Community activity (No. of msg, No. msg in time range, joining a community, length of community membership)  Ability to combine multiple attributes into an airdrop\r\n- Ability to token gate airdrops\r\n- Live airdrop gas estimation when setting up airdrop\r\n\r\n**4. Community Admin functionality enhancements**\r\n- optional service to once a month auto-kick all members who haven't been online for between 30 and 60 days (e.g. auto-kick members whose profile information like Name, Avatar, etc... can no longer be fetched)\r\n\r\n**5. QR scanner**\r\n- Needed for private key transfer\r\n- Ethereum key QRs (send modal triggered)\r\n- User Share URL in a QR (opens user profile dialogue) \r\n- Community and Channel inside Community URL in QRs (takes user to Community or Channel in Community)\r\n\r\n**6. Chat functionality enhancements**\r\n- Introduce @channel as a new type of global @ mention.  This @ mention only @ mention's everyone who has posted a message in a channel in the last 30 days \r\n- Introduce the ability to search the users in the right side members/users bar.  At the same time, make any adaptations needed so that the right side members/users bar can scale to 10,000 users.\r\n\r\n**7. Telegram history import into a single channel in an existing community**\r\n\r\n\r\n**--- Wallet Team ---**\r\n\r\n1. WalletConnect 2.0 support\r\n\r\n2. Total balance graphs for 'All accounts' and each individual account\r\n\r\n3. Advanced transaction signing\r\n\r\n",
    "creator": {
      "login": "iurimatias",
      "id": 176720,
      "node_id": "MDQ6VXNlcjE3NjcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iurimatias",
      "html_url": "https://github.com/iurimatias",
      "followers_url": "https://api.github.com/users/iurimatias/followers",
      "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
      "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
      "organizations_url": "https://api.github.com/users/iurimatias/orgs",
      "repos_url": "https://api.github.com/users/iurimatias/repos",
      "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iurimatias/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 51,
    "closed_issues": 5,
    "state": "open",
    "created_at": "2022-12-09T15:06:43Z",
    "updated_at": "2023-09-21T17:03:57Z",
    "due_on": "2023-12-08T08:00:00Z",
    "closed_at": null
  },
  "comments": 1,
  "created_at": "2023-07-03T11:19:19Z",
  "updated_at": "2023-09-21T17:03:15Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nCurrently in various places we pass amounts from UI to the backend as a JS number.\r\nIn most cases it works seamlessly but there are corner cases we should take into account to provide reliable solution.\r\n\r\nThe problem is that not all decimal fractions have a finite decimal representation (simply explained e.g. here: https://indepth.dev/posts/1019/the-simple-math-behind-decimal-binary-conversion-algorithms#why-not-all-fractions-can-be-finitely-represented-in-binary)\r\n\r\nE.g. decimal number `0.1` in binary system is `0.0(00110011)`, there is no finite representation.\r\n\r\nIn practice the problem can be observed on that example: https://www.mycompiler.io/view/DLtkitu1nHN\r\n\r\nEven simpler example is just:\r\n```\r\nconsole.log(0.07 * 10**18) // 70000000000000010\r\n```\r\nIt means that when user provides `0.07` as an input, the value passed to the backend as float is in fact a different number. If backend multiples that value by `10**18` to operate on basic `wei` units, it leads to distortion, the amount used is bigger then expected.\r\n\r\nAs a consequence, when the remaining supply is `0.07` (`70000000000000000`), the UI will ofc present it as `0.07`, but making airdrop via passing `0.07` float to the backend will fail because of insufficient funds.\r\n\r\nThere is also an opposite problem. When the remaining supply is is `999999999999999999` (for eth-like amounts with dp 10^18), when sent from backend to the UI as a float it would be just `1`. So defining airdrop for `1` (effectively `1000000000000000000 wei`) will fail as well.\r\n\r\nThe proposed solution is to exchange amounts (UI <-> backend, both directions) in textual form representing amount in the basic units (like `wei`s, no floating points) instead of converting it to numbers.\r\n\r\nAs a consequence:\r\n1. UI takes user input in a localized from and needs to convert it to the basic units before passing to the backend. (e.g. `0.07` or `0,07` depending on locale to `70000000000000000` when the multiplier is `10^18`). UI needs to properly perform decimal arithmetic here (not direct multiplication on binary floats). For that, the proper multiplier obtained from the backend needs to be used, 0 (10^0) for collectibles and 18 (10^18) for assets in most cases, but it may be different for some currencies like USDC.\r\n2. UI obtains amounts (like wallet balance, total supply, remaining supply) in the basic units as well. Before presenting to the user the value must be converted appropriately (using provided multiplier and number of decimals for displaying) and localized. In that approach, UI side can properly handle the situation when the amount presented to the user is slightly different than the actual one. E.g. `69999999999999999` can be presented as `<0.07` or `0.07 - ε` to inform user that the presented amount is not strictly the value kept under the hood. It may be useful when user wants to transfer all funds - there should be possibility to specify directly \"all funds\" instead of taking numeric value. It also gives possibility to reliably compare amounts on UI side.\r\n\r\n\r\nTo handle properly user input and values provided by the backend as strings, UI needs to perform decimal arithmetic properly. \r\n\r\nLibrary https://github.com/MikeMcl/big.js/ seems to be a good choice:\r\n```\r\nconst dec = new Big(\"0.07\")\r\nconst multiplier = 10**18\r\n\r\nconsole.log(dec.times(multiplier).toString()) // 70000000000000000\r\n```\r\nAn alternative is https://github.com/MikeMcl/decimal.js but it's bigger, containing a lot of functionality that is not needed for our purpose.\r\n\r\nThe UI uses localized representation of numbers. Because of that, user-provided input cannot be directly used for constructing `Big` object. First it needs to be de-localized to form produced by `Number.toString()`. Raw JS `Number` can be used as an intermediary form, assuming that conversion for user input to number is fully reversible (user input -> number -> string produces the same value), what is true when the input is limited to appropriate number of decimal digits.\r\n```\r\nconsole.log(parseFloat(\"40.00000000000001\").toString()) // 40.00000000000001 - still ok\r\nconsole.log(parseFloat(\"40.000000000000001\").toString()) // 40 - not ok\r\n```\r\nIt's worth noting that `big.js` relies on `Number.toString()` conversion instead of actual binary value when constructed from raw js number:\r\n```\r\nconst dec1 = 0.07\r\nconst dec2 = new Big(\"0.07\")\r\nconst dec3 = new Big(\"0.07\")\r\nconst multiplier = 10**18\r\n\r\nconsole.log((dec1 * multiplier).toString()) // 70000000000000010 - not ok\r\nconsole.log(dec2.times(multiplier).toString()) // 70000000000000000 - ok\r\nconsole.log(dec3.times(multiplier).toString()) // 70000000000000000 - ok\r\n```\r\n\r\nSub-tasks\r\n\r\n- [x] https://github.com/status-im/status-desktop/pull/11487\r\n- [x] https://github.com/status-im/status-desktop/pull/11862\r\n- [x] https://github.com/status-im/status-desktop/issues/12118\r\n- [x] https://github.com/status-im/status-desktop/issues/12168\r\n- [ ] https://github.com/status-im/status-desktop/issues/12217\r\n- [ ] https://github.com/status-im/status-desktop/issues/11863\r\n- [ ] https://github.com/status-im/status-desktop/issues/11489\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/11376/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/11376/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1618118657",
    "html_url": "https://github.com/status-im/status-desktop/issues/11376#issuecomment-1618118657",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11376",
    "id": 1618118657,
    "node_id": "IC_kwDOD5KrTM5gcogB",
    "user": {
      "login": "micieslak",
      "id": 20650004,
      "node_id": "MDQ6VXNlcjIwNjUwMDA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20650004?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/micieslak",
      "html_url": "https://github.com/micieslak",
      "followers_url": "https://api.github.com/users/micieslak/followers",
      "following_url": "https://api.github.com/users/micieslak/following{/other_user}",
      "gists_url": "https://api.github.com/users/micieslak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/micieslak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/micieslak/subscriptions",
      "organizations_url": "https://api.github.com/users/micieslak/orgs",
      "repos_url": "https://api.github.com/users/micieslak/repos",
      "events_url": "https://api.github.com/users/micieslak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/micieslak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-03T12:09:22Z",
    "updated_at": "2023-07-10T09:03:11Z",
    "author_association": "MEMBER",
    "body": "The alternative approach is to perform conversion to base units already on UI side (that approach is already used in wallet, but it is also vulnerable to the distortions described in the task).\r\n\r\nTo do it correctly, decimal arithmetic library could be used, e.g. https://mikemcl.github.io/decimal.js/\r\nThen we can perform multiplications sefely:\r\n```\r\nconst dec = new Decimal(\"0.07\")\r\nconst multiplier = 10**18\r\n\r\nconsole.log(dec.times(multiplier).toString()) // 70000000000000000\r\n```\r\n\r\n**Update:**\r\nAs agreed with @alaibe and @endulab this approach is the most suitable. The description has been updated, and `big.js` lib proposed as a better match than `decimal.js`.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1618118657/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
