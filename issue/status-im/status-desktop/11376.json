{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/11376",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/11376/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/11376/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/11376/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/11376",
  "id": 1785968452,
  "node_id": "I_kwDOD5KrTM5qc7dE",
  "number": 11376,
  "title": "Exchange amounts between UI and backend using strings with base units instead of js numbers",
  "user": {
    "login": "micieslak",
    "id": 20650004,
    "node_id": "MDQ6VXNlcjIwNjUwMDA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/20650004?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/micieslak",
    "html_url": "https://github.com/micieslak",
    "followers_url": "https://api.github.com/users/micieslak/followers",
    "following_url": "https://api.github.com/users/micieslak/following{/other_user}",
    "gists_url": "https://api.github.com/users/micieslak/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/micieslak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/micieslak/subscriptions",
    "organizations_url": "https://api.github.com/users/micieslak/orgs",
    "repos_url": "https://api.github.com/users/micieslak/repos",
    "events_url": "https://api.github.com/users/micieslak/events{/privacy}",
    "received_events_url": "https://api.github.com/users/micieslak/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2036563458,
      "node_id": "MDU6TGFiZWwyMDM2NTYzNDU4",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/bug",
      "name": "bug",
      "color": "d73a4a",
      "default": true,
      "description": "Something isn't working"
    },
    {
      "id": 2087353959,
      "node_id": "MDU6TGFiZWwyMDg3MzUzOTU5",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/ui-team",
      "name": "ui-team",
      "color": "1111ff",
      "default": false,
      "description": ""
    },
    {
      "id": 2331339531,
      "node_id": "MDU6TGFiZWwyMzMxMzM5NTMx",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/wallet-team",
      "name": "wallet-team",
      "color": "b60205",
      "default": false,
      "description": ""
    },
    {
      "id": 5639332268,
      "node_id": "LA_kwDOD5KrTM8AAAABUCFhrA",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/C2",
      "name": "C2",
      "color": "E15258",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "micieslak",
    "id": 20650004,
    "node_id": "MDQ6VXNlcjIwNjUwMDA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/20650004?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/micieslak",
    "html_url": "https://github.com/micieslak",
    "followers_url": "https://api.github.com/users/micieslak/followers",
    "following_url": "https://api.github.com/users/micieslak/following{/other_user}",
    "gists_url": "https://api.github.com/users/micieslak/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/micieslak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/micieslak/subscriptions",
    "organizations_url": "https://api.github.com/users/micieslak/orgs",
    "repos_url": "https://api.github.com/users/micieslak/repos",
    "events_url": "https://api.github.com/users/micieslak/events{/privacy}",
    "received_events_url": "https://api.github.com/users/micieslak/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "micieslak",
      "id": 20650004,
      "node_id": "MDQ6VXNlcjIwNjUwMDA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20650004?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/micieslak",
      "html_url": "https://github.com/micieslak",
      "followers_url": "https://api.github.com/users/micieslak/followers",
      "following_url": "https://api.github.com/users/micieslak/following{/other_user}",
      "gists_url": "https://api.github.com/users/micieslak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/micieslak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/micieslak/subscriptions",
      "organizations_url": "https://api.github.com/users/micieslak/orgs",
      "repos_url": "https://api.github.com/users/micieslak/repos",
      "events_url": "https://api.github.com/users/micieslak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/micieslak/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/57",
    "html_url": "https://github.com/status-im/status-desktop/milestone/57",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/57/labels",
    "id": 8475715,
    "node_id": "MI_kwDOD5KrTM4AgVRD",
    "number": 57,
    "title": "0.14",
    "description": "Milestone cycles:\r\n\r\n[Cycle 1](https://github.com/status-im/status-desktop/issues?q=is%3Aopen+is%3Aissue+milestone%3A0.14+label%3AC1): 7 July\r\n[Cycle 2](https://github.com/status-im/status-desktop/issues?q=is%3Aopen+is%3Aissue+milestone%3A0.14+label%3AC2): 28 July \r\n[Cycle 3](https://github.com/status-im/status-desktop/issues?q=is%3Aopen+is%3Aissue+milestone%3A0.14+label%3AC3): 18 August\r\n\r\n\r\n**--- Main focus ---**\r\n\r\n**1. Token permissions to enable control of community smart contracts**\r\n- Before a community founder can use any of the community token admin functionality, they first have to deploy Owner and Token Master contracts.\r\n- This work involves: new empty state screen for Mint and Airdrop tokens (before current empty state screen is revealed), new flow for deploying the community's Owner and Token Master contracts in a single step, a fixed uneditable permission giving anybody who holds the Token Master token admin rights for the community should be automatically created.\r\n- Only the holder of the single Owner token can access the Token Master airdrop, remote destruct, and view holders functions. Anybody who holds the Token Master token can access all token admin options, excluding those related to the Token Master token itself, as well as being and Admin of the community.\r\n- This will all be explained in more detail in the designs.\r\n\r\nBackend Epic: https://github.com/status-im/status-desktop/issues/11249\r\n\r\n**2. Updates to control node transfer and associated dialogues**\r\n- Remove ability for a Owner to leave a community on the computer that's running as that community's control node\r\n- Community Admin home screen cleanup (inc. adding at least one of the three graphs, whichever is easiest to implement).\r\n  - Graph issue: https://github.com/status-im/status-desktop/issues/11152  \r\n  - Community overview: https://github.com/status-im/status-desktop/issues/11278\r\n\r\n**3. Ability for user to select & manage accounts shared with each community control node**\r\n- This item is quite a bit of work\r\n- Touches Community settings, as well as all of the community join flows\r\n- Backend issues: \r\n  - Join API: https://github.com/status-im/status-desktop/issues/11154\r\n  - Edit API: https://github.com/status-im/status-desktop/issues/11153\r\n\r\n**4. Encryption for token gated channels that are inside Open (not token gated) communities**\r\n[#10998](https://github.com/status-im/status-desktop/issues/10998)\r\n\r\n**5. Final screens and bits and bobs needed prior to public beta**\r\n- Modal that's shown every time after login, reminding user's that Status Desktop is in Beta [#11044](https://github.com/status-im/status-desktop/issues/11044)\r\n- The bug with 'requests to join' a community not constantly arriving, or sometimes arriving after a delay, must be fixed. [#8264](https://github.com/status-im/status-desktop/issues/8264)\r\n- Anything that didn't get completed in 0.13 related to new share URL format\r\n- All the outstanding bugs and small items that got pushed into the 0.14 milestone.\r\n\r\n\r\n**--- Things that we SHOULD NOT work on during the 0.14 cycle ---**\r\n- Messaging and UI teams shouldn't work on perf. in 0.14 (but Wallet team should!)\r\n- Anything big mutual contacts related, other than fixing small bugs we find like #10497 #10498 #11120 #11121  (hopefully this functionality working good enough now!)\r\n\r\n**--- Wallet Team ---**\r\n\r\n1. Finish any outstanding work related to Activity screens (top priority - aim to have complete by July 14th)\r\n\r\n2. Updated Wallet Settings screens UI inc. account syncing functionality  *Synced information should immediately be reflected in the UI after it is received (sometimes synced info is currently only displayed after the next app restart, this needs to be fixed)*\r\n\r\n3. Wallet performance and memory consumption optimisations\r\n\r\n4. Fix bugs, clean up loose ends (to get things in a good state before the work on the Mobile wallet starts)\r\n\r\n\r\n\r\n\r\n\r\n",
    "creator": {
      "login": "iurimatias",
      "id": 176720,
      "node_id": "MDQ6VXNlcjE3NjcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iurimatias",
      "html_url": "https://github.com/iurimatias",
      "followers_url": "https://api.github.com/users/iurimatias/followers",
      "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
      "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
      "organizations_url": "https://api.github.com/users/iurimatias/orgs",
      "repos_url": "https://api.github.com/users/iurimatias/repos",
      "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iurimatias/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 112,
    "closed_issues": 108,
    "state": "open",
    "created_at": "2022-09-28T20:32:56Z",
    "updated_at": "2023-07-10T12:21:45Z",
    "due_on": "2023-08-18T07:00:00Z",
    "closed_at": null
  },
  "comments": 1,
  "created_at": "2023-07-03T11:19:19Z",
  "updated_at": "2023-07-10T09:03:11Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nCurrently in various places we pass amounts from UI to the backend as a JS number.\r\nIn most cases it works seamlessly but there are corner cases we should take into account to provide reliable solution.\r\n\r\nThe problem is that not all decimal fractions have a finite decimal representation (simply explained e.g. here: https://indepth.dev/posts/1019/the-simple-math-behind-decimal-binary-conversion-algorithms#why-not-all-fractions-can-be-finitely-represented-in-binary)\r\n\r\nE.g. decimal number `0.1` in binary system is `0.0(00110011)`, there is no finite representation.\r\n\r\nIn practice the problem can be observed on that example: https://www.mycompiler.io/view/DLtkitu1nHN\r\n\r\nEven simpler example is just:\r\n```\r\nconsole.log(0.07 * 10**18) // 70000000000000010\r\n```\r\nIt means that when user provides `0.07` as an input, the value passed to the backend as float is in fact a different number. If backend multiples that value by `10**18` to operate on basic `wei` units, it leads to distortion, the amount used is bigger then expected.\r\n\r\nAs a consequence, when the remaining supply is `0.07` (`70000000000000000`), the UI will ofc present it as `0.07`, but making airdrop via passing `0.07` float to the backend will fail because of insufficient funds.\r\n\r\nThere is also an opposite problem. When the remaining supply is is `999999999999999999` (for eth-like amounts with dp 10^18), when sent from backend to the UI as a float it would be just `1`. So defining airdrop for `1` (effectively `1000000000000000000 wei`) will fail as well.\r\n\r\nThe proposed solution is to exchange amounts (UI <-> backend, both directions) in textual form representing amount in the basic units (like `wei`s, no floating points) instead of converting it to numbers.\r\n\r\nAs a consequence:\r\n1. UI takes user input in a localized from and needs to convert it to the basic units before passing to the backend. (e.g. `0.07` or `0,07` depending on locale to `70000000000000000` when the multiplier is `10^18`). UI needs to properly perform decimal arithmetic here (not direct multiplication on binary floats). For that, the proper multiplier obtained from the backend needs to be used, 0 (10^0) for collectibles and 18 (10^18) for assets in most cases, but it may be different for some currencies like USDC.\r\n2. UI obtains amounts (like wallet balance, total supply, remaining supply) in the basic units as well. Before presenting to the user the value must be converted appropriately (using provided multiplier and number of decimals for displaying) and localized. In that approach, UI side can properly handle the situation when the amount presented to the user is slightly different than the actual one. E.g. `69999999999999999` can be presented as `<0.07` or `0.07 - ε` to inform user that the presented amount is not strictly the value kept under the hood. It may be useful when user wants to transfer all funds - there should be possibility to specify directly \"all funds\" instead of taking numeric value. It also gives possibility to reliably compare amounts on UI side.\r\n\r\n\r\nTo handle properly user input and values provided by the backend as strings, UI needs to perform decimal arithmetic properly. \r\n\r\nLibrary https://github.com/MikeMcl/big.js/ seems to be a good choice:\r\n```\r\nconst dec = new Big(\"0.07\")\r\nconst multiplier = 10**18\r\n\r\nconsole.log(dec.times(multiplier).toString()) // 70000000000000000\r\n```\r\nAn alternative is https://github.com/MikeMcl/decimal.js but it's bigger, containing a lot of functionality that is not needed for our purpose.\r\n\r\nThe UI uses localized representation of numbers. Because of that, user-provided input cannot be directly used for constructing `Big` object. First it needs to be de-localized to form produced by `Number.toString()`. Raw JS `Number` can be used as an intermediary form, assuming that conversion for user input to number is fully reversible (user input -> number -> string produces the same value), what is true when the input is limited to appropriate number of decimal digits.\r\n```\r\nconsole.log(parseFloat(\"40.00000000000001\").toString()) // 40.00000000000001 - still ok\r\nconsole.log(parseFloat(\"40.000000000000001\").toString()) // 40 - not ok\r\n```\r\nIt's worth noting that `big.js` relies on `Number.toString()` conversion instead of actual binary value when constructed from raw js number:\r\n```\r\nconst dec1 = 0.07\r\nconst dec2 = new Big(\"0.07\")\r\nconst dec3 = new Big(\"0.07\")\r\nconst multiplier = 10**18\r\n\r\nconsole.log((dec1 * multiplier).toString()) // 70000000000000010 - not ok\r\nconsole.log(dec2.times(multiplier).toString()) // 70000000000000000 - ok\r\nconsole.log(dec3.times(multiplier).toString()) // 70000000000000000 - ok\r\n```\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/11376/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/11376/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1618118657",
    "html_url": "https://github.com/status-im/status-desktop/issues/11376#issuecomment-1618118657",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11376",
    "id": 1618118657,
    "node_id": "IC_kwDOD5KrTM5gcogB",
    "user": {
      "login": "micieslak",
      "id": 20650004,
      "node_id": "MDQ6VXNlcjIwNjUwMDA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20650004?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/micieslak",
      "html_url": "https://github.com/micieslak",
      "followers_url": "https://api.github.com/users/micieslak/followers",
      "following_url": "https://api.github.com/users/micieslak/following{/other_user}",
      "gists_url": "https://api.github.com/users/micieslak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/micieslak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/micieslak/subscriptions",
      "organizations_url": "https://api.github.com/users/micieslak/orgs",
      "repos_url": "https://api.github.com/users/micieslak/repos",
      "events_url": "https://api.github.com/users/micieslak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/micieslak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-03T12:09:22Z",
    "updated_at": "2023-07-10T09:03:11Z",
    "author_association": "MEMBER",
    "body": "The alternative approach is to perform conversion to base units already on UI side (that approach is already used in wallet, but it is also vulnerable to the distortions described in the task).\r\n\r\nTo do it correctly, decimal arithmetic library could be used, e.g. https://mikemcl.github.io/decimal.js/\r\nThen we can perform multiplications sefely:\r\n```\r\nconst dec = new Decimal(\"0.07\")\r\nconst multiplier = 10**18\r\n\r\nconsole.log(dec.times(multiplier).toString()) // 70000000000000000\r\n```\r\n\r\n**Update:**\r\nAs agreed with @alaibe and @endulab this approach is the most suitable. The description has been updated, and `big.js` lib proposed as a better match than `decimal.js`.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1618118657/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
