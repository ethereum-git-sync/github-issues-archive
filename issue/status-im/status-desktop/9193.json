{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/9193",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/9193/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/9193/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/9193/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/9193",
  "id": 1549359497,
  "node_id": "I_kwDOD5KrTM5cWVmJ",
  "number": 9193,
  "title": "Investigate bootstrap performance",
  "user": {
    "login": "0x-r4bbit",
    "id": 445106,
    "node_id": "MDQ6VXNlcjQ0NTEwNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/445106?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/0x-r4bbit",
    "html_url": "https://github.com/0x-r4bbit",
    "followers_url": "https://api.github.com/users/0x-r4bbit/followers",
    "following_url": "https://api.github.com/users/0x-r4bbit/following{/other_user}",
    "gists_url": "https://api.github.com/users/0x-r4bbit/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/0x-r4bbit/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/0x-r4bbit/subscriptions",
    "organizations_url": "https://api.github.com/users/0x-r4bbit/orgs",
    "repos_url": "https://api.github.com/users/0x-r4bbit/repos",
    "events_url": "https://api.github.com/users/0x-r4bbit/events{/privacy}",
    "received_events_url": "https://api.github.com/users/0x-r4bbit/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2987757762,
      "node_id": "MDU6TGFiZWwyOTg3NzU3NzYy",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/to%20analyze",
      "name": "to analyze",
      "color": "5CC421",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "0x-r4bbit",
    "id": 445106,
    "node_id": "MDQ6VXNlcjQ0NTEwNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/445106?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/0x-r4bbit",
    "html_url": "https://github.com/0x-r4bbit",
    "followers_url": "https://api.github.com/users/0x-r4bbit/followers",
    "following_url": "https://api.github.com/users/0x-r4bbit/following{/other_user}",
    "gists_url": "https://api.github.com/users/0x-r4bbit/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/0x-r4bbit/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/0x-r4bbit/subscriptions",
    "organizations_url": "https://api.github.com/users/0x-r4bbit/orgs",
    "repos_url": "https://api.github.com/users/0x-r4bbit/repos",
    "events_url": "https://api.github.com/users/0x-r4bbit/events{/privacy}",
    "received_events_url": "https://api.github.com/users/0x-r4bbit/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "0x-r4bbit",
      "id": 445106,
      "node_id": "MDQ6VXNlcjQ0NTEwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/445106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x-r4bbit",
      "html_url": "https://github.com/0x-r4bbit",
      "followers_url": "https://api.github.com/users/0x-r4bbit/followers",
      "following_url": "https://api.github.com/users/0x-r4bbit/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x-r4bbit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x-r4bbit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x-r4bbit/subscriptions",
      "organizations_url": "https://api.github.com/users/0x-r4bbit/orgs",
      "repos_url": "https://api.github.com/users/0x-r4bbit/repos",
      "events_url": "https://api.github.com/users/0x-r4bbit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x-r4bbit/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 15,
  "created_at": "2023-01-19T15:11:22Z",
  "updated_at": "2023-03-27T13:47:17Z",
  "closed_at": "2023-03-27T13:47:17Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nIt's a known issue that Status desktop starts up quite slowly, or rather seems unresponsive after logging into the app.\r\nThis is very apparent by the loading animation which even gets stuck and doesn't continue rendering frames.\r\n\r\nThe reason for that is that there's a bunch of synchronous work/calls happening upon login.\r\n\r\nIn addition, this startup time gets worse the more messages are in the database, which is especially a problem when there's a message history imported from discord (you can easily end up with tens of thousands of message).\r\n\r\nWhen I was working on the import too I've investigated this a bit and noticed that, after login we try to fetch chat data for all communities and every single chat for every community.\r\nNot only do we unnecessarily load all of that data, we also do that sequentially. If there's 10 channels then it likely takes 10x as long.\r\nAfter further digging I noticed that most costly function in terms of perf is the `pinnedMessages` call for every chat.\r\n\r\nJust removing that call when we're fetching chats, greatly improves performance. It also turned out that the app kept functioning without this data. Pinned message data seems to be fetched at a later stage anyways.\r\n\r\nSo here are the thing we could do and should look into **assuming that the slowness/blockage is caused by the same API calls as back then**:\r\n\r\n1. First of all I don't think we need to query pinned messages per channel upfront. I tested it back then, and even if we don't load them upfront. they'll be available/fetched when you enter a channel, so no missing data in the view. Removing that query improves bootstrap speed by a lot\r\n2. I don't think we have to load all communities + all chats from the get go. We should know what the last visited view was (default to one-on-view) and should onlyh query the data we need, based on that. This should reduce the blocking call as well\r\n3. Instead of making this stuff synchronous, we should rather have an async API for that, this would unblock the UI immediately (and most likely keeps the animation spinning instead of getting it stuck), however we then need to ensure we introduce loading states/animations in chat view as data is being fetched in the background (we already have some UI components that do that)\r\n\r\nFor starters, I think doing 1) will already greatly improve the startup time and is a pretty low hanging fruit.\r\n\r\nAnother thing we can improve here:\r\nRight now the getchats calls are done sequentially for every community.\r\nWe could probably spin up multiple goroutines to get the data concurently in status-go instead.\r\nShould speed things up as well as we don't have to wait for every item to finsih one by one\r\n",
  "closed_by": {
    "login": "jrainville",
    "id": 11926403,
    "node_id": "MDQ6VXNlcjExOTI2NDAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jrainville",
    "html_url": "https://github.com/jrainville",
    "followers_url": "https://api.github.com/users/jrainville/followers",
    "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
    "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
    "organizations_url": "https://api.github.com/users/jrainville/orgs",
    "repos_url": "https://api.github.com/users/jrainville/repos",
    "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jrainville/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/9193/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/9193/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1397133215",
    "html_url": "https://github.com/status-im/status-desktop/issues/9193#issuecomment-1397133215",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9193",
    "id": 1397133215,
    "node_id": "IC_kwDOD5KrTM5TRo-f",
    "user": {
      "login": "caybro",
      "id": 5377645,
      "node_id": "MDQ6VXNlcjUzNzc2NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/caybro",
      "html_url": "https://github.com/caybro",
      "followers_url": "https://api.github.com/users/caybro/followers",
      "following_url": "https://api.github.com/users/caybro/following{/other_user}",
      "gists_url": "https://api.github.com/users/caybro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/caybro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/caybro/subscriptions",
      "organizations_url": "https://api.github.com/users/caybro/orgs",
      "repos_url": "https://api.github.com/users/caybro/repos",
      "events_url": "https://api.github.com/users/caybro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/caybro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-19T15:15:39Z",
    "updated_at": "2023-01-19T15:15:39Z",
    "author_association": "MEMBER",
    "body": "Nice analysis!\r\n\r\n> After further digging I noticed that most costly function in terms of perf is the pinnedMessages call for every chat.\r\n\r\n> Just removing that call when we're fetching chats, greatly improves performance. It also turned out that the app kept functioning without this data. Pinned message data seems to be fetched at a later stage anyways.\r\n\r\nOne thing I realized... we don't need to build that \"pinnedMessages\" model in the backend/model at _all_ imho; we already have all the messages at hand and we could just filter those having `model.pinned` role set to `true` in QML using `SortFilterProxyModel`. Wdyt?",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1397133215/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1397158708",
    "html_url": "https://github.com/status-im/status-desktop/issues/9193#issuecomment-1397158708",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9193",
    "id": 1397158708,
    "node_id": "IC_kwDOD5KrTM5TRvM0",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-19T15:30:06Z",
    "updated_at": "2023-01-19T15:30:06Z",
    "author_association": "MEMBER",
    "body": "@caybro that's a good idea in theory, but in practice the message model the Nim backend has is very limited.\r\n\r\nIt contains 20 messages on app start. So if you had a pin from the 21st oldest message, you wouldn't be able to show it.\r\n\r\nUsing a special API to get pinned messages and creating a specific model for it is the only way we have right now, as far as I can tell.\r\n\r\nPascal's idea of not fetching that on app start is a good one and easily feasible.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1397158708/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1397163647",
    "html_url": "https://github.com/status-im/status-desktop/issues/9193#issuecomment-1397163647",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9193",
    "id": 1397163647,
    "node_id": "IC_kwDOD5KrTM5TRwZ_",
    "user": {
      "login": "caybro",
      "id": 5377645,
      "node_id": "MDQ6VXNlcjUzNzc2NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/caybro",
      "html_url": "https://github.com/caybro",
      "followers_url": "https://api.github.com/users/caybro/followers",
      "following_url": "https://api.github.com/users/caybro/following{/other_user}",
      "gists_url": "https://api.github.com/users/caybro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/caybro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/caybro/subscriptions",
      "organizations_url": "https://api.github.com/users/caybro/orgs",
      "repos_url": "https://api.github.com/users/caybro/repos",
      "events_url": "https://api.github.com/users/caybro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/caybro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-19T15:32:49Z",
    "updated_at": "2023-01-19T15:32:49Z",
    "author_association": "MEMBER",
    "body": "> @caybro that's a good idea in theory, but in practice the message model the Nim backend has is very limited.\r\n> \r\n> It contains 20 messages on app start. So if you had a pin from the 21st oldest message, you wouldn't be able to show it.\r\n\r\nI see, too bad :)\r\n\r\n> Using a special API to get pinned messages and creating a specific model for it is the only way we have right now, as far as I can tell.\r\n> \r\n> Pascal's idea of not fetching that on app start is a good one and easily feasible.\r\n\r\n:+1: ",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1397163647/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1398226131",
    "html_url": "https://github.com/status-im/status-desktop/issues/9193#issuecomment-1398226131",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9193",
    "id": 1398226131,
    "node_id": "IC_kwDOD5KrTM5TVzzT",
    "user": {
      "login": "0x-r4bbit",
      "id": 445106,
      "node_id": "MDQ6VXNlcjQ0NTEwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/445106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x-r4bbit",
      "html_url": "https://github.com/0x-r4bbit",
      "followers_url": "https://api.github.com/users/0x-r4bbit/followers",
      "following_url": "https://api.github.com/users/0x-r4bbit/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x-r4bbit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x-r4bbit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x-r4bbit/subscriptions",
      "organizations_url": "https://api.github.com/users/0x-r4bbit/orgs",
      "repos_url": "https://api.github.com/users/0x-r4bbit/repos",
      "events_url": "https://api.github.com/users/0x-r4bbit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x-r4bbit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-20T11:02:30Z",
    "updated_at": "2023-01-20T11:02:30Z",
    "author_association": "MEMBER",
    "body": "Here's another thing I found out:\r\n\r\nBecause we have this rather unfortunate architecture to instantiated a `chat_content` module **per chat** (as opposed to having just one and swapping out its data), the `viewDidLoad` lifecycle callback is called many times:\r\n\r\nhttps://github.com/status-im/status-desktop/blob/ae4d59de9a213a601b7d1afc06b13890edfff268/src/app/modules/main/chat_section/chat_content/users/module.nim#L57-L63\r\n\r\nOne of the things we do here is fetching members every time this module has finished loading it's view.\r\nBecause there are many chats in a single community, this his happening as many times after login, which is essentially a series of blocking RPC calls that make our app stall.\r\n\r\nThere are a few more of these related to message reactions. Will check where those exactly come from.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1398226131/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1398310646",
    "html_url": "https://github.com/status-im/status-desktop/issues/9193#issuecomment-1398310646",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9193",
    "id": 1398310646,
    "node_id": "IC_kwDOD5KrTM5TWIb2",
    "user": {
      "login": "0x-r4bbit",
      "id": 445106,
      "node_id": "MDQ6VXNlcjQ0NTEwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/445106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x-r4bbit",
      "html_url": "https://github.com/0x-r4bbit",
      "followers_url": "https://api.github.com/users/0x-r4bbit/followers",
      "following_url": "https://api.github.com/users/0x-r4bbit/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x-r4bbit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x-r4bbit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x-r4bbit/subscriptions",
      "organizations_url": "https://api.github.com/users/0x-r4bbit/orgs",
      "repos_url": "https://api.github.com/users/0x-r4bbit/repos",
      "events_url": "https://api.github.com/users/0x-r4bbit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x-r4bbit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-20T12:24:08Z",
    "updated_at": "2023-01-20T12:52:21Z",
    "author_association": "MEMBER",
    "body": "Alright, so another thing we seem to be doing after login (and messages being loaded), is we seem to request contact details from individual contacts many many times, which also results in a series of blocking calls.\r\n\r\nThere are various places from which this happens, but most of them seem to origin from `chat_content/messages/controller` and `chat_content/controller`.\r\n\r\nWe should re-evaluate how often we want to call `getContactDetails`. Need to dig further, but the first thing that comes to mind is maybe doing a single `getContactDetailsForAllContacts` call, load the data into memory, and any subsequent call originating from messages controller ensures that it relies on cached contacts instead of reaching out to status-go.\r\n\r\nOf course, the question then is when that cache is invalidated. But I think we should for sure avoid to do so many contact detail calls right out of the bat.\r\n\r\n**UPDATE**:\r\nWe do fetch all contacts initially, and contacts are being cached and returned from cache.\r\nIt's just still the nature of the thing that, there are many users/contacts in a community we need to fetch individually (probably because they aren't added contacts yet).\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1398310646/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1398548546",
    "html_url": "https://github.com/status-im/status-desktop/issues/9193#issuecomment-1398548546",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9193",
    "id": 1398548546,
    "node_id": "IC_kwDOD5KrTM5TXChC",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-20T15:18:16Z",
    "updated_at": "2023-01-20T15:20:25Z",
    "author_association": "MEMBER",
    "body": "> It's just still the nature of the thing that, there are many users/contacts in a community we need to fetch individually (probably because they aren't added contacts yet).\r\n\r\nThe contacts API call on status-go should return all contacts/users we have seen, and not just mutual contacts.\r\nThat's why back in the day I wanted to rename `contacts` to `mutualContacts`, because status-go doesn't exactly make that distinction.\r\n\r\nAnyway, if you do find that we hit the DB each time we want to get info about a user from a community, that's an issue we need to fix. It should all be cached.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1398548546/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1398565506",
    "html_url": "https://github.com/status-im/status-desktop/issues/9193#issuecomment-1398565506",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9193",
    "id": 1398565506,
    "node_id": "IC_kwDOD5KrTM5TXGqC",
    "user": {
      "login": "0x-r4bbit",
      "id": 445106,
      "node_id": "MDQ6VXNlcjQ0NTEwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/445106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x-r4bbit",
      "html_url": "https://github.com/0x-r4bbit",
      "followers_url": "https://api.github.com/users/0x-r4bbit/followers",
      "following_url": "https://api.github.com/users/0x-r4bbit/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x-r4bbit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x-r4bbit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x-r4bbit/subscriptions",
      "organizations_url": "https://api.github.com/users/0x-r4bbit/orgs",
      "repos_url": "https://api.github.com/users/0x-r4bbit/repos",
      "events_url": "https://api.github.com/users/0x-r4bbit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x-r4bbit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-20T15:32:05Z",
    "updated_at": "2023-01-20T15:32:05Z",
    "author_association": "MEMBER",
    "body": "> Anyway, if you do find that we hit the DB each time we want to get info about a user from a community, that's an issue we need to fix. It should all be cached.\r\n\r\nStuff is cached for sure. I do see calls to status-go still originating from the community module controller. Not sure yet why those make it all the way through to status-go yet",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1398565506/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1405679566",
    "html_url": "https://github.com/status-im/status-desktop/issues/9193#issuecomment-1405679566",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9193",
    "id": 1405679566,
    "node_id": "IC_kwDOD5KrTM5TyPfO",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-26T21:29:58Z",
    "updated_at": "2023-01-26T21:29:58Z",
    "author_association": "MEMBER",
    "body": "@0x-r4bbit have you figure out if we do hit the DB for the contacts? If so, are you working on fixing it or don't have time? If the latter, I'll assign that fix to someone else.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1405679566/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1406118092",
    "html_url": "https://github.com/status-im/status-desktop/issues/9193#issuecomment-1406118092",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9193",
    "id": 1406118092,
    "node_id": "IC_kwDOD5KrTM5Tz6jM",
    "user": {
      "login": "0x-r4bbit",
      "id": 445106,
      "node_id": "MDQ6VXNlcjQ0NTEwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/445106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x-r4bbit",
      "html_url": "https://github.com/0x-r4bbit",
      "followers_url": "https://api.github.com/users/0x-r4bbit/followers",
      "following_url": "https://api.github.com/users/0x-r4bbit/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x-r4bbit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x-r4bbit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x-r4bbit/subscriptions",
      "organizations_url": "https://api.github.com/users/0x-r4bbit/orgs",
      "repos_url": "https://api.github.com/users/0x-r4bbit/repos",
      "events_url": "https://api.github.com/users/0x-r4bbit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x-r4bbit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-27T07:24:08Z",
    "updated_at": "2023-01-27T07:24:08Z",
    "author_association": "MEMBER",
    "body": "@jrainville I didn't get to following up on it here as I was busy with import tool stuff.\r\nWill look into it again today and see what I can do",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1406118092/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1406141582",
    "html_url": "https://github.com/status-im/status-desktop/issues/9193#issuecomment-1406141582",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9193",
    "id": 1406141582,
    "node_id": "IC_kwDOD5KrTM5T0ASO",
    "user": {
      "login": "0x-r4bbit",
      "id": 445106,
      "node_id": "MDQ6VXNlcjQ0NTEwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/445106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x-r4bbit",
      "html_url": "https://github.com/0x-r4bbit",
      "followers_url": "https://api.github.com/users/0x-r4bbit/followers",
      "following_url": "https://api.github.com/users/0x-r4bbit/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x-r4bbit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x-r4bbit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x-r4bbit/subscriptions",
      "organizations_url": "https://api.github.com/users/0x-r4bbit/orgs",
      "repos_url": "https://api.github.com/users/0x-r4bbit/repos",
      "events_url": "https://api.github.com/users/0x-r4bbit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x-r4bbit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-27T07:58:51Z",
    "updated_at": "2023-01-27T07:58:51Z",
    "author_association": "MEMBER",
    "body": "Will also test with https://github.com/status-im/status-desktop/pull/9306 as I think this will improve things as well.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1406141582/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1406451868",
    "html_url": "https://github.com/status-im/status-desktop/issues/9193#issuecomment-1406451868",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9193",
    "id": 1406451868,
    "node_id": "IC_kwDOD5KrTM5T1MCc",
    "user": {
      "login": "0x-r4bbit",
      "id": 445106,
      "node_id": "MDQ6VXNlcjQ0NTEwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/445106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x-r4bbit",
      "html_url": "https://github.com/0x-r4bbit",
      "followers_url": "https://api.github.com/users/0x-r4bbit/followers",
      "following_url": "https://api.github.com/users/0x-r4bbit/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x-r4bbit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x-r4bbit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x-r4bbit/subscriptions",
      "organizations_url": "https://api.github.com/users/0x-r4bbit/orgs",
      "repos_url": "https://api.github.com/users/0x-r4bbit/repos",
      "events_url": "https://api.github.com/users/0x-r4bbit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x-r4bbit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-27T12:39:07Z",
    "updated_at": "2023-01-27T12:43:29Z",
    "author_association": "MEMBER",
    "body": "Okay so quick update here: #9306 removes a lot of the chatMember calls, which is good, but it doesn' tmake for the bulk of the bootstrap time.\r\n\r\nOTOH if I remove collecting pinned messages from chat/service APIs while having a community roughly the size of Status' one, I safe about ~10 secs of processing time.\r\n\r\nThe `getContactByID` calls coming from the community module are done when the memberlists are created.\r\nSadly, even though it's many consecutive calls, it seems to take only about ~1 sec to have them all done, which is not a lot compared to the overall slowness. Obviously, this number will increase as the amount member items increase as well (member items of non-contacts, that is)\r\n\r\nThere is still a lot of other stuff / RPC calls shortly after login that cause a lot of processing and slow down the app.\r\nDigging deeper...\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1406451868/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1406500642",
    "html_url": "https://github.com/status-im/status-desktop/issues/9193#issuecomment-1406500642",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9193",
    "id": 1406500642,
    "node_id": "IC_kwDOD5KrTM5T1X8i",
    "user": {
      "login": "0x-r4bbit",
      "id": 445106,
      "node_id": "MDQ6VXNlcjQ0NTEwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/445106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x-r4bbit",
      "html_url": "https://github.com/0x-r4bbit",
      "followers_url": "https://api.github.com/users/0x-r4bbit/followers",
      "following_url": "https://api.github.com/users/0x-r4bbit/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x-r4bbit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x-r4bbit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x-r4bbit/subscriptions",
      "organizations_url": "https://api.github.com/users/0x-r4bbit/orgs",
      "repos_url": "https://api.github.com/users/0x-r4bbit/repos",
      "events_url": "https://api.github.com/users/0x-r4bbit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x-r4bbit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-27T13:18:45Z",
    "updated_at": "2023-01-27T13:18:45Z",
    "author_association": "MEMBER",
    "body": "Okay so.. I've been measuring a couple of RPC calls we're doing during startup that feel like they are taking a lot of time.\r\nMost of them hour take only about a second. \r\nHowever, as mentioned above, we do many different things after startup. So at this point I think it's really the combination of all of these RPC calls that make desktop stall because we're a) blocking the app while doing these calls and for any other calls we b) have to process many signals.\r\n\r\nIt seems like the solution here is to \"simply\" do less work. Just to give an idea, here's the amount of RPC calls we do right after login (**and this is excluding the `getContactByID` calls for each unknown member of a community**):\r\n\r\n```\r\nDBG 2023-01-27 14:01:27.473+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_startMessenger\r\nDBG 2023-01-27 14:01:27.483+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=settings_getSettings                                          \r\nDBG 2023-01-27 14:01:27.484+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=settings_getSocialLinks                                       \r\nDBG 2023-01-27 14:01:27.489+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=mailservers_getMailservers \r\nDBG 2023-01-27 14:01:27.489+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_imageServerURL                                        \r\nDBG 2023-01-27 14:01:27.490+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_contacts                                              \r\nDBG 2023-01-27 14:01:27.490+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_getReceivedVerificationRequests  \r\n\r\n# -------------- THIS ONE TOOK ABOUT 10 SECs ----------------------- #\r\nDBG 2023-01-27 14:01:27.491+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=chat_getChats  \r\n#--------------------------------------------------------------------------------------#\r\n\r\nDBG 2023-01-27 14:01:27.502+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_communityTags\r\nDBG 2023-01-27 14:01:27.502+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_joinedCommunities\r\nDBG 2023-01-27 14:01:27.507+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_pendingRequestsToJoinForCommunity\r\nDBG 2023-01-27 14:01:27.507+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_declinedRequestsToJoinForCommunity\r\nDBG 2023-01-27 14:01:27.508+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_canceledRequestsToJoinForCommunity\r\nDBG 2023-01-27 14:01:27.508+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_communities\r\n\r\n# ------------------- THIS ONE TAKES ABOUT 6 SECS --------------------- #\r\nDBG 2023-01-27 14:01:27.515+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_curatedCommunities\r\n# -----------------------------------------------------------------------------------------#\r\n\r\nDBG 2023-01-27 14:01:28.475+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_getCommunitiesSettings\r\nDBG 2023-01-27 14:01:28.476+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_myPendingRequestsToJoin\r\nDBG 2023-01-27 14:01:28.477+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=browsers_getBookmarks\r\nDBG 2023-01-27 14:01:28.478+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=permissions_getDappPermissions\r\nDBG 2023-01-27 14:01:28.479+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wallet_getEthereumChains\r\nDBG 2023-01-27 14:01:28.480+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wallet_getSavedAddresses\r\nDBG 2023-01-27 14:01:28.480+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419753 file=core.nim:27 rpc_method=wakuext_activityCenterNotifications\r\nDBG 2023-01-27 14:01:28.480+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=updates_check\r\nDBG 2023-01-27 14:01:28.480+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419752 file=core.nim:27 rpc_method=stickers_market\r\nDBG 2023-01-27 14:01:28.481+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wallet_getPendingTransactionsByChainIDs\r\nDBG 2023-01-27 14:01:28.481+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=gif_setTenorAPIKey\r\nDBG 2023-01-27 14:01:28.490+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=gif_getRecentGifs\r\nDBG 2023-01-27 14:01:28.493+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wallet_getCachedPrices\r\nDBG 2023-01-27 14:01:28.493+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=accounts_getAccounts\r\nDBG 2023-01-27 14:01:28.495+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=ens_getName\r\nDBG 2023-01-27 14:01:30.787+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_firstUnseenMessageID\r\nDBG 2023-01-27 14:01:31.849+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=accounts_getAllMigratedKeyPairs\r\nDBG 2023-01-27 14:01:32.016+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wallet_isCurrencyFiat\r\nDBG 2023-01-27 14:01:32.016+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wallet_getFiatCurrencyMinorUnit\r\nDBG 2023-01-27 14:01:32.018+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_getOurInstallations\r\nDBG 2023-01-27 14:01:32.019+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=settings_notificationsGetExMuteAllMessages\r\nDBG 2023-01-27 14:01:32.220+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=settings_notificationsGetExPersonalMentions\r\nDBG 2023-01-27 14:01:32.221+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=settings_notificationsGetExGlobalMentions\r\nDBG 2023-01-27 14:01:32.223+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=settings_notificationsGetExOtherMessages\r\nDBG 2023-01-27 14:01:32.223+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=accounts_getAccounts\r\nDBG 2023-01-27 14:01:32.225+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=accounts_getAllMigratedKeyPairs\r\nDBG 2023-01-27 14:01:32.226+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=stickers_recent\r\nDBG 2023-01-27 14:01:32.242+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419754 file=core.nim:27 rpc_method=wakuext_chatPinnedMessages\r\nDBG 2023-01-27 14:01:32.227+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=stickers_installed\r\nDBG 2023-01-27 14:01:33.149+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419754 file=core.nim:27 rpc_method=wakuext_emojiReactionsByChatID\r\nDBG 2023-01-27 14:01:33.154+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=stickers_stickerMarketAddress\r\nDBG 2023-01-27 14:01:33.158+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_peers\r\nDBG 2023-01-27 14:01:33.161+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=accounts_getAllMigratedKeyPairs\r\nDBG 2023-01-27 14:01:33.164+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wallet_getPendingTransactionsByChainIDs\r\nDBG 2023-01-27 14:01:33.164+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wallet_isCurrencyFiat\r\nDBG 2023-01-27 14:01:33.165+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wallet_fetchPrices\r\nDBG 2023-01-27 14:01:33.835+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wallet_isCurrencyFiat\r\nDBG 2023-01-27 14:01:33.841+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wallet_getCryptoOnRamps\r\nDBG 2023-01-27 14:01:33.846+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=accounts_getAllMigratedKeyPairs\r\nDBG 2023-01-27 14:01:34.088+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_getOurInstallations\r\nDBG 2023-01-27 14:01:34.089+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_getLatestVerificationRequestFrom\r\nDBG 2023-01-27 14:01:34.098+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=settings_notificationsGetVolume\r\nDBG 2023-01-27 14:01:34.098+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=settings_notificationsGetSoundEnabled\r\nDBG 2023-01-27 14:01:34.100+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_getOurInstallations\r\nDBG 2023-01-27 14:01:34.100+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_getLatestVerificationRequestFrom\r\nDBG 2023-01-27 14:01:34.108+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=stickers_installed\r\nDBG 2023-01-27 14:01:34.111+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=settings_notificationsGetVolume\r\nDBG 2023-01-27 14:01:34.112+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=settings_notificationsGetSoundEnabled\r\nDBG 2023-01-27 14:01:34.112+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_getOurInstallations\r\nDBG 2023-01-27 14:01:34.113+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_getLatestVerificationRequestFrom\r\nDBG 2023-01-27 14:01:34.635+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_getLinkPreviewWhitelist\r\nDBG 2023-01-27 14:01:34.706+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_getOurInstallations\r\nDBG 2023-01-27 14:01:34.707+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_getLatestVerificationRequestFrom\r\nDBG 2023-01-27 14:01:35.483+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_getContactByID   \r\nDBG 2023-01-27 14:01:35.782+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=stickers_pending\r\nDBG 2023-01-27 14:01:35.784+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=stickers_installed\r\nDBG 2023-01-27 14:01:35.794+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_messageByMessageID\r\nDBG 2023-01-27 14:01:35.798+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_emojiReactionsByChatIDMessageID\r\nDBG 2023-01-27 14:01:35.802+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_getContactByID\r\nDBG 2023-01-27 14:01:35.803+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_messageByMessageID\r\nDBG 2023-01-27 14:01:35.806+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_emojiReactionsByChatIDMessageID\r\nDBG 2023-01-27 14:01:35.808+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_messageByMessageID\r\nDBG 2023-01-27 14:01:35.811+01:00 NewBE_callPrivateRPC                       topics=\"rpc\" tid=419738 file=core.nim:27 rpc_method=wakuext_emojiReactionsByChatIDMessageID\r\n```\r\n\r\nRemember that, at the same time there's also plenty of async stuff happening like, fetching messages etc, which all result in signal that have to be processed/rendered as well.\r\n\r\nI suggest we go through the RPC calls evaluate whether they are really needed to render a particular screen.\r\n\r\nThe logs above were the result of logging in and being brought straight to a channel of a community.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1406500642/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1406616333",
    "html_url": "https://github.com/status-im/status-desktop/issues/9193#issuecomment-1406616333",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9193",
    "id": 1406616333,
    "node_id": "IC_kwDOD5KrTM5T10MN",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-27T14:55:27Z",
    "updated_at": "2023-01-27T14:55:27Z",
    "author_association": "MEMBER",
    "body": "Thanks for all those investigations.\r\n\r\nWhat I can see from that is that `getChats` should really be moved to an async task, since it's so long. It was something I already assumed should be done, so it's good to confirm that it's really slow.\r\n\r\n`wakuext_curatedCommunities` might be something we actually just remove altogether and just lazy load if the user opens the community portal.\r\n\r\nThose are the two big ones you found, but there probably are others we can lazy load or async latyer.\r\n\r\nGood job!",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1406616333/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1416031016",
    "html_url": "https://github.com/status-im/status-desktop/issues/9193#issuecomment-1416031016",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9193",
    "id": 1416031016,
    "node_id": "IC_kwDOD5KrTM5UZuso",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-03T15:31:07Z",
    "updated_at": "2023-02-03T15:31:07Z",
    "author_association": "MEMBER",
    "body": "I did some investigation on a test account and create a sheet with the times it took for each call.\r\n\r\nIt was a small account, so the times elapsed are small, but it still gives an idea.\r\n\r\nexcerpt (sorted by longest to shortest, only the 22 biggest ones):\r\n```\r\n10:13:01.550-05:00 | rpc_method=stickers_market | 0.003326919\r\n10:13:00.697-05:00 | rpc_method=chat_getChats | 0.001576816\r\n10:13:01.277-05:00 | rpc_method=wallet_getTokens | 0.001194669\r\n10:13:00.693-05:00 | rpc_method=wakuext_contacts | 0.000800495\r\n10:13:01.436-05:00 | rpc_method=wallet_getCryptoOnRamps | 0.000730845\r\n10:13:01.410-05:00 | rpc_method=wakuext_chatMessages | 0.000532044\r\n10:13:00.700-05:00 | rpc_method=wakuext_communities | 0.000424091\r\n10:13:01.485-05:00 | rpc_method=wakuext_unreadActivityCenterNotificationsCount | 0.000380977\r\n10:13:01.499-05:00 | rpc_method=wakuext_getOurInstallations | 0.000285804\r\n10:13:00.699-05:00 | rpc_method=wakuext_joinedCommunities | 0.000274918\r\n10:13:01.505-05:00 | rpc_method=stickers_installed | 0.000274276\r\n10:13:01.500-05:00 | rpc_method=wakuext_getLatestVerificationRequestFrom | 0.000261821\r\n10:13:01.433-05:00 | rpc_method=wakuext_peers | 0.000250449\r\n10:13:01.415-05:00 | rpc_method=wakuext_chatMessages | 0.000247965\r\n10:13:01.268-05:00 | rpc_method=wallet_getEthereumChains | 0.000244767\r\n10:13:01.428-05:00 | rpc_method=wakuext_getTrustStatus | 0.00023874\r\n10:13:01.508-05:00 | rpc_method=wakuext_getLatestVerificationRequestFrom | 0.00023427\r\n10:13:01.269-05:00 | rpc_method=wakuext_activityCenterNotifications | 0.000230708\r\n10:13:01.507-05:00 | rpc_method=settings_notificationsGetSoundEnabled | 0.000227151\r\n10:13:01.414-05:00 | rpc_method=wakuext_firstUnseenMessageID | 0.000220947\r\n10:13:01.267-05:00 | rpc_method=wakuext_getCommunitiesSettings | 0.000219591\r\n10:13:01.412-05:00 | rpc_method=wakuext_firstUnseenMessageID | 0.000201931\r\n```\r\n\r\n@alaibe I see a couple of wallet calls take a lot of time. Can we make them lazy load instead? ie only call them when we open the Wallet? In my case, the wallet wasn't even activated in settings.\r\n\r\nFull file here: \r\n[timeEval.ods](https://github.com/status-im/status-desktop/files/10580281/timeEval.ods)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1416031016/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1442254340",
    "html_url": "https://github.com/status-im/status-desktop/issues/9193#issuecomment-1442254340",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/9193",
    "id": 1442254340,
    "node_id": "IC_kwDOD5KrTM5V9w4E",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-23T18:39:52Z",
    "updated_at": "2023-02-23T18:39:52Z",
    "author_association": "MEMBER",
    "body": "I started doing some investigation as well. It seems like starting the waku v2 service is pretty slow by itself. I'll later do some more investigation with a big account\r\nhttps://hackmd.io/@status-desktop/r1vOxEr0o",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1442254340/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
