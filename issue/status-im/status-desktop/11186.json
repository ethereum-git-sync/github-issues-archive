{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/11186",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/11186/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/11186/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/11186/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/11186",
  "id": 1765331435,
  "node_id": "I_kwDOD5KrTM5pONHr",
  "number": 11186,
  "title": "Retry and Delete contracts options",
  "user": {
    "login": "endulab",
    "id": 61889657,
    "node_id": "MDQ6VXNlcjYxODg5NjU3",
    "avatar_url": "https://avatars.githubusercontent.com/u/61889657?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/endulab",
    "html_url": "https://github.com/endulab",
    "followers_url": "https://api.github.com/users/endulab/followers",
    "following_url": "https://api.github.com/users/endulab/following{/other_user}",
    "gists_url": "https://api.github.com/users/endulab/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/endulab/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/endulab/subscriptions",
    "organizations_url": "https://api.github.com/users/endulab/orgs",
    "repos_url": "https://api.github.com/users/endulab/repos",
    "events_url": "https://api.github.com/users/endulab/events{/privacy}",
    "received_events_url": "https://api.github.com/users/endulab/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3047427135,
      "node_id": "MDU6TGFiZWwzMDQ3NDI3MTM1",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/feature",
      "name": "feature",
      "color": "0E8A16",
      "default": false,
      "description": ""
    },
    {
      "id": 4548141040,
      "node_id": "LA_kwDOD5KrTM8AAAABDxcf8A",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/messenger-team",
      "name": "messenger-team",
      "color": "232858",
      "default": false,
      "description": ""
    },
    {
      "id": 5639332268,
      "node_id": "LA_kwDOD5KrTM8AAAABUCFhrA",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/C2",
      "name": "C2",
      "color": "E15258",
      "default": false,
      "description": ""
    },
    {
      "id": 5745629806,
      "node_id": "LA_kwDOD5KrTM8AAAABVndabg",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Desktop%20Comm%20Perms%20and%20Minting%20MVP",
      "name": "E:Desktop Comm Perms and Minting MVP",
      "color": "c2e0c6",
      "default": false,
      "description": "Misc tasks about Community permissions that are not part of another Epic, due for the MVP"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "endulab",
    "id": 61889657,
    "node_id": "MDQ6VXNlcjYxODg5NjU3",
    "avatar_url": "https://avatars.githubusercontent.com/u/61889657?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/endulab",
    "html_url": "https://github.com/endulab",
    "followers_url": "https://api.github.com/users/endulab/followers",
    "following_url": "https://api.github.com/users/endulab/following{/other_user}",
    "gists_url": "https://api.github.com/users/endulab/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/endulab/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/endulab/subscriptions",
    "organizations_url": "https://api.github.com/users/endulab/orgs",
    "repos_url": "https://api.github.com/users/endulab/repos",
    "events_url": "https://api.github.com/users/endulab/events{/privacy}",
    "received_events_url": "https://api.github.com/users/endulab/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "0x-r4bbit",
      "id": 445106,
      "node_id": "MDQ6VXNlcjQ0NTEwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/445106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x-r4bbit",
      "html_url": "https://github.com/0x-r4bbit",
      "followers_url": "https://api.github.com/users/0x-r4bbit/followers",
      "following_url": "https://api.github.com/users/0x-r4bbit/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x-r4bbit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x-r4bbit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x-r4bbit/subscriptions",
      "organizations_url": "https://api.github.com/users/0x-r4bbit/orgs",
      "repos_url": "https://api.github.com/users/0x-r4bbit/repos",
      "events_url": "https://api.github.com/users/0x-r4bbit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x-r4bbit/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/57",
    "html_url": "https://github.com/status-im/status-desktop/milestone/57",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/57/labels",
    "id": 8475715,
    "node_id": "MI_kwDOD5KrTM4AgVRD",
    "number": 57,
    "title": "0.14",
    "description": "Milestone cycles:\r\n\r\n[Cycle 1](https://github.com/status-im/status-desktop/issues?q=is%3Aopen+is%3Aissue+milestone%3A0.14+label%3AC1): 7 July\r\n[Cycle 2](https://github.com/status-im/status-desktop/issues?q=is%3Aopen+is%3Aissue+milestone%3A0.14+label%3AC2): 28 July \r\n[Cycle 3](https://github.com/status-im/status-desktop/issues?q=is%3Aopen+is%3Aissue+milestone%3A0.14+label%3AC3): 18 August\r\n\r\n\r\n**--- Main focus ---**\r\n\r\n**1. Token permissions to enable control of community smart contracts**\r\n- Before a community founder can use any of the community token admin functionality, they first have to deploy Owner and Token Master contracts.\r\n- This work involves: new empty state screen for Mint and Airdrop tokens (before current empty state screen is revealed), new flow for deploying the community's Owner and Token Master contracts in a single step, a fixed uneditable permission giving anybody who holds the Token Master token admin rights for the community should be automatically created.\r\n- Only the holder of the single Owner token can access the Token Master airdrop, remote destruct, and view holders functions. Anybody who holds the Token Master token can access all token admin options, excluding those related to the Token Master token itself, as well as being and Admin of the community.\r\n- This will all be explained in more detail in the designs.\r\n\r\nBackend Epic: https://github.com/status-im/status-desktop/issues/11249\r\n\r\n**2. Update Community Admin home screen inc control node transfer and associated dialogues**\r\n- Remove ability for a Owner to leave a community on the computer that's running as that community's control node\r\n- Community Admin home screen cleanup (inc. adding at least one of the three graphs, whichever is easiest to implement).\r\n  - Graph issue: https://github.com/status-im/status-desktop/issues/11152  \r\n  - Community overview: https://github.com/status-im/status-desktop/issues/11278\r\n\r\n**3. Ability for user to select & manage accounts shared with each community control node**\r\n- This item is quite a bit of work\r\n- Touches Community settings, as well as all of the community join flows\r\n- Backend issues: \r\n  - Join API: https://github.com/status-im/status-desktop/issues/11154\r\n  - Edit API: https://github.com/status-im/status-desktop/issues/11153\r\n\r\n**4. Encryption for token gated channels that are inside Open (not token gated) communities**\r\n[#10998](https://github.com/status-im/status-desktop/issues/10998)\r\n\r\n**5. Final screens and bits and bobs needed prior to public beta**\r\n- Modal that's shown every time after login, reminding user's that Status Desktop is in Beta [#11044](https://github.com/status-im/status-desktop/issues/11044)\r\n- The bug with 'requests to join' a community not constantly arriving, or sometimes arriving after a delay, must be fixed. [#8264](https://github.com/status-im/status-desktop/issues/8264)\r\n- Anything that didn't get completed in 0.13 related to new share URL format\r\n- All the outstanding bugs and small items that got pushed into the 0.14 milestone.\r\n\r\n\r\n**--- Things that we SHOULD NOT work on during the 0.14 cycle ---**\r\n- Messaging and UI teams shouldn't work on perf. in 0.14 (but Wallet team should!)\r\n- Anything big mutual contacts related, other than fixing small bugs we find like #10497 #10498 #11120 #11121  (hopefully this functionality working good enough now!)\r\n\r\n**--- Wallet Team ---**\r\n\r\n1. Finish any outstanding work related to Activity screens (top priority - aim to have complete by July 14th)\r\n\r\n2. Updated Wallet Settings screens UI inc. account syncing functionality  *Synced information should immediately be reflected in the UI after it is received (sometimes synced info is currently only displayed after the next app restart, this needs to be fixed)*\r\n\r\n3. Wallet performance and memory consumption optimisations\r\n\r\n4. Fix bugs, clean up loose ends (to get things in a good state before the work on the Mobile wallet starts)\r\n\r\n\r\n\r\n\r\n\r\n",
    "creator": {
      "login": "iurimatias",
      "id": 176720,
      "node_id": "MDQ6VXNlcjE3NjcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iurimatias",
      "html_url": "https://github.com/iurimatias",
      "followers_url": "https://api.github.com/users/iurimatias/followers",
      "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
      "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
      "organizations_url": "https://api.github.com/users/iurimatias/orgs",
      "repos_url": "https://api.github.com/users/iurimatias/repos",
      "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iurimatias/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 95,
    "closed_issues": 208,
    "state": "open",
    "created_at": "2022-09-28T20:32:56Z",
    "updated_at": "2023-07-27T12:12:36Z",
    "due_on": "2023-08-18T07:00:00Z",
    "closed_at": null
  },
  "comments": 4,
  "created_at": "2023-06-20T12:45:08Z",
  "updated_at": "2023-07-27T07:32:05Z",
  "closed_at": "2023-07-27T07:32:05Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Retry and Delete buttons were added to the design. They are already added in UI, but disabled/hidden.\r\n\r\nFigma:\r\nhttps://www.figma.com/file/17fc13UBFvInrLgNUKJJg5/Kuba%E2%8E%9CDesktop?type=design&node-id=29528-590685&t=52upMdOoworXuukv-0\r\n\r\nWhen the deployment fails, user should see his failed smart contract. He should be able to try to deploy again by pressing \"Retry\". He also should be able to delete the contract from the list by pressing \"Delete\".\r\n\r\nWe should change a bit deployContract() function. We add to the list contracts with failed state, when transaction is failed. However when status-go deployment function is failed there is an exception and the contract is not added to database. We should additionally handle this case.\r\nI think that failed contracts should not be added to waku. I see it rather as a local information. So probably we need to add a failed contract to database (in order to see it on the list), but not to waku. Then, \"Deleting\" contract will be only removing it from database.\r\n\r\nAlso we need to prevent airdropping and burning of failed contract.\r\n\r\n**Problematic issue**\r\nWe have a field in the model called \"contractUniqueKey\" which is a string \"chainId_contractAddress\" (function contractUniqueKey() in common/utils). It is used by UI and for UI - logic interaction. In case of exception we may not have contractAddress. Maybe we should put in contractAddress field something like \"failed_randomHash\" to have some random id. It's just a quick idea.",
  "closed_by": {
    "login": "0x-r4bbit",
    "id": 445106,
    "node_id": "MDQ6VXNlcjQ0NTEwNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/445106?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/0x-r4bbit",
    "html_url": "https://github.com/0x-r4bbit",
    "followers_url": "https://api.github.com/users/0x-r4bbit/followers",
    "following_url": "https://api.github.com/users/0x-r4bbit/following{/other_user}",
    "gists_url": "https://api.github.com/users/0x-r4bbit/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/0x-r4bbit/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/0x-r4bbit/subscriptions",
    "organizations_url": "https://api.github.com/users/0x-r4bbit/orgs",
    "repos_url": "https://api.github.com/users/0x-r4bbit/repos",
    "events_url": "https://api.github.com/users/0x-r4bbit/events{/privacy}",
    "received_events_url": "https://api.github.com/users/0x-r4bbit/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/11186/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/11186/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1620265364",
    "html_url": "https://github.com/status-im/status-desktop/issues/11186#issuecomment-1620265364",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11186",
    "id": 1620265364,
    "node_id": "IC_kwDOD5KrTM5gk0mU",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-04T13:35:15Z",
    "updated_at": "2023-07-04T13:35:15Z",
    "author_association": "MEMBER",
    "body": "@endulab can you add more details to this issue? Is this only to delete it or also retry?\nAlso, is there already a UI for it?",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1620265364/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1643816410",
    "html_url": "https://github.com/status-im/status-desktop/issues/11186#issuecomment-1643816410",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11186",
    "id": 1643816410,
    "node_id": "IC_kwDOD5KrTM5h-qXa",
    "user": {
      "login": "0x-r4bbit",
      "id": 445106,
      "node_id": "MDQ6VXNlcjQ0NTEwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/445106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x-r4bbit",
      "html_url": "https://github.com/0x-r4bbit",
      "followers_url": "https://api.github.com/users/0x-r4bbit/followers",
      "following_url": "https://api.github.com/users/0x-r4bbit/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x-r4bbit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x-r4bbit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x-r4bbit/subscriptions",
      "organizations_url": "https://api.github.com/users/0x-r4bbit/orgs",
      "repos_url": "https://api.github.com/users/0x-r4bbit/repos",
      "events_url": "https://api.github.com/users/0x-r4bbit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x-r4bbit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-20T12:13:55Z",
    "updated_at": "2023-07-20T12:13:55Z",
    "author_association": "MEMBER",
    "body": "Had a discussion with @endulab about this, as some of the description conflicts with what currently exists.\r\nWe've concluded the following plan of actions:\r\n\r\n1. First of all, make the call to `deployContract` (assets/collectibles) asynchronous. Currently it's synchronous and due to how the underlying API works, either the whole thing fails or not, which means, you can't really end up the error state view because the code returns early\r\n2. Once async, ensure we still create an entry in the database with tx pending state. This lets users then view/enter their currently in-deployment token\r\n3. Add tx hash to `community_tokens` table. Technically this is not necessarily an absolute requirement, but based on how the underlying deployment API works, we only get a contract address when deployment was successful. If the deployment is pending or fails, we still need a way to identify the entry in the database in case people hit retry or delete. In such cases we can make use of the tx-hash as an ID\r\n4. When \"delete\" is hit, remove the entry from the database\r\n5. When \"retry\" is hit, also remove the entry from the database, then reinitiate deployment (all async of course)",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1643816410/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1645390915",
    "html_url": "https://github.com/status-im/status-desktop/issues/11186#issuecomment-1645390915",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11186",
    "id": 1645390915,
    "node_id": "IC_kwDOD5KrTM5iEqxD",
    "user": {
      "login": "0x-r4bbit",
      "id": 445106,
      "node_id": "MDQ6VXNlcjQ0NTEwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/445106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x-r4bbit",
      "html_url": "https://github.com/0x-r4bbit",
      "followers_url": "https://api.github.com/users/0x-r4bbit/followers",
      "following_url": "https://api.github.com/users/0x-r4bbit/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x-r4bbit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x-r4bbit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x-r4bbit/subscriptions",
      "organizations_url": "https://api.github.com/users/0x-r4bbit/orgs",
      "repos_url": "https://api.github.com/users/0x-r4bbit/repos",
      "events_url": "https://api.github.com/users/0x-r4bbit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x-r4bbit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-21T10:52:42Z",
    "updated_at": "2023-07-21T10:53:02Z",
    "author_association": "MEMBER",
    "body": "I'm running into issues making the underlying API async. All of our async tasks receive their arguments as string and are then decoded, so they can be passed to RPC calls.\r\n\r\nHere's what it would roughly look like for our `deployCollectibles()` API:\r\n\r\n```nim\r\ntype\r\n  DeployCollectiblesArg = ref object of QObjectTaskArg\r\n    chainId*: int\r\n    deploymentParams*: DeploymentParameters\r\n    txData*: TransactionDataDto\r\n    password*: string\r\n\r\nconst deployCollectiblesTaskArg: Task = proc(argEncoded: string) {.gcsafe, nimcall.} =\r\n  let arg = decode[DeployCollectiblesArg](argEncoded)\r\n  try:\r\n    let response = community_tokens.deployCollectibles(arg.chainId, %arg.deploymentParams, %arg.txData, arg.password)\r\n    if not response.error.isNil:\r\n      raise newException(ValueError, \"Error deployCollectibles\" & response.error.message)\r\n    let output = %* {\r\n      \"result\": response.result,\r\n      \"error\": \"\"\r\n    }\r\n    arg.finish(output)\r\n  except Exception as e:\r\n    let output = %* {\r\n      \"result\": \"\",\r\n      \"error\": e.msg\r\n    }\r\n    arg.finish(output)\r\n```\r\n\r\n^ This pattern (define `*TaskArg` + task) is what we're currently doing for all `async*` methods.\r\n\r\nThe problem here is however that the `TransactionDataDto` has a field that uses the `Address` type of the `web3/ethtypes` package.\r\n\r\nThe code above will not compile, as the compiler will complain with:\r\n\r\n```\r\n/home/rabbit/projects/status-im/status-desktop/vendor/nim-json-serialization/json_serialization/reader.nim(669, 12) Error: Failed to convert to JSON an unsupported type: Address\r\n```\r\n\r\nThis is because the `decode()` call doesn't know how to serialize the `Address` type.\r\nLuckily, there's a `web/conversions` package, which implements `JsonReaders` and `*Writers` for `Address` as:\r\n\r\n```nim\r\nproc writeValue*(w: var JsonWriter, v: Address) =\r\n  writeHexValue w, distinctBase(v)\r\n\r\nproc readValue*(r: var JsonReader, T: type Address): T =\r\n  fromHex(T, r.readValue(string))\r\n```\r\n\r\nSo importing `web3/conversions` should fix this.\r\n\r\nUnfortunately, after doing that, the compiler now complains with:\r\n\r\n```\r\n/home/rabbit/projects/status-im/status-desktop/vendor/nim-serialization/serialization/object_serialization.nim(133, 16) Error: undeclared field: 'val' for type readValue.T [type declared in /home/rabbit/projects/status-im/status-desktop/vendor/nim-json-serialization/json_serialization/reader.nim(612, 10)]\r\n```\r\n\r\nIt looks like as if it's not even trying to use the correct reader.\r\n\r\n@arnetheduck any idea what's going on here?",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1645390915/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1649936403",
    "html_url": "https://github.com/status-im/status-desktop/issues/11186#issuecomment-1649936403",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11186",
    "id": 1649936403,
    "node_id": "IC_kwDOD5KrTM5iWAgT",
    "user": {
      "login": "0x-r4bbit",
      "id": 445106,
      "node_id": "MDQ6VXNlcjQ0NTEwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/445106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x-r4bbit",
      "html_url": "https://github.com/0x-r4bbit",
      "followers_url": "https://api.github.com/users/0x-r4bbit/followers",
      "following_url": "https://api.github.com/users/0x-r4bbit/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x-r4bbit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x-r4bbit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x-r4bbit/subscriptions",
      "organizations_url": "https://api.github.com/users/0x-r4bbit/orgs",
      "repos_url": "https://api.github.com/users/0x-r4bbit/repos",
      "events_url": "https://api.github.com/users/0x-r4bbit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x-r4bbit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-25T14:19:12Z",
    "updated_at": "2023-07-25T14:19:12Z",
    "author_association": "MEMBER",
    "body": "All of this got way simplified:\r\n\r\n1. No need to make the deploy calls async as they aren't blocking on pending transactions, they return successfully with a tx hash and a contract address. Tx state is then periodically checked to update community token's deploy state later on\r\n2. Changed logic in `AddCommunityToken()` and introduced `SaveCommunityToken()` such that we can store an entry for the to-be-deployed token in the database, and later publish it on the community description once successful (currently it optimistically publishes community tokens) https://github.com/status-im/status-go/pull/3798 and https://github.com/status-im/status-desktop/pull/11664\r\n3. Introduced an API to remove community tokens from the database (this does not remove it from the community description as we only put successfully deployed tokens there and we can't really remove them) https://github.com/status-im/status-go/pull/3794 and https://github.com/status-im/status-desktop/pull/11653\r\n4. Combined the above to put together the retry functionality https://github.com/status-im/status-desktop/pull/11668",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1649936403/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
