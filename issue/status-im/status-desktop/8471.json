{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/8471",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/8471/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/8471/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/8471/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/8471",
  "id": 1466144531,
  "node_id": "I_kwDOD5KrTM5XY5cT",
  "number": 8471,
  "title": "Chat input: Add qml tests to cover the working functionality - Part 1",
  "user": {
    "login": "alexjba",
    "id": 47811206,
    "node_id": "MDQ6VXNlcjQ3ODExMjA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alexjba",
    "html_url": "https://github.com/alexjba",
    "followers_url": "https://api.github.com/users/alexjba/followers",
    "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
    "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
    "organizations_url": "https://api.github.com/users/alexjba/orgs",
    "repos_url": "https://api.github.com/users/alexjba/repos",
    "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alexjba/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2087353959,
      "node_id": "MDU6TGFiZWwyMDg3MzUzOTU5",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/ui-team",
      "name": "ui-team",
      "color": "1111ff",
      "default": false,
      "description": ""
    },
    {
      "id": 4152389672,
      "node_id": "LA_kwDOD5KrTM73gHAo",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/ui-improvements",
      "name": "ui-improvements",
      "color": "98E78E",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "alexjba",
    "id": 47811206,
    "node_id": "MDQ6VXNlcjQ3ODExMjA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alexjba",
    "html_url": "https://github.com/alexjba",
    "followers_url": "https://api.github.com/users/alexjba/followers",
    "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
    "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
    "organizations_url": "https://api.github.com/users/alexjba/orgs",
    "repos_url": "https://api.github.com/users/alexjba/repos",
    "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alexjba/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "alexjba",
      "id": 47811206,
      "node_id": "MDQ6VXNlcjQ3ODExMjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexjba",
      "html_url": "https://github.com/alexjba",
      "followers_url": "https://api.github.com/users/alexjba/followers",
      "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
      "organizations_url": "https://api.github.com/users/alexjba/orgs",
      "repos_url": "https://api.github.com/users/alexjba/repos",
      "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexjba/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2022-11-28T10:08:00Z",
  "updated_at": "2022-12-19T13:51:41Z",
  "closed_at": "2022-12-19T13:51:41Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nWe need qml tests that will cover the currently working functionality of StatusChatInput.qml.\r\nThis is a prerequisite of #8464 and #8465\r\n\r\nThe purpose of this task is to create the qml tests configuration for ui module and add chat input tests.\r\nNice to have: Reuse storybook models for the qml tests",
  "closed_by": {
    "login": "alexjba",
    "id": 47811206,
    "node_id": "MDQ6VXNlcjQ3ODExMjA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alexjba",
    "html_url": "https://github.com/alexjba",
    "followers_url": "https://api.github.com/users/alexjba/followers",
    "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
    "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
    "organizations_url": "https://api.github.com/users/alexjba/orgs",
    "repos_url": "https://api.github.com/users/alexjba/repos",
    "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alexjba/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/8471/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/8471/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1328864455",
    "html_url": "https://github.com/status-im/status-desktop/issues/8471#issuecomment-1328864455",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/8471",
    "id": 1328864455,
    "node_id": "IC_kwDOD5KrTM5PNNzH",
    "user": {
      "login": "alexjba",
      "id": 47811206,
      "node_id": "MDQ6VXNlcjQ3ODExMjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexjba",
      "html_url": "https://github.com/alexjba",
      "followers_url": "https://api.github.com/users/alexjba/followers",
      "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
      "organizations_url": "https://api.github.com/users/alexjba/orgs",
      "repos_url": "https://api.github.com/users/alexjba/repos",
      "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexjba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-28T10:40:39Z",
    "updated_at": "2022-11-28T10:40:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nice to have before we fix other chat input bugs:\r\n#7686\r\n#7685",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1328864455/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1342763651",
    "html_url": "https://github.com/status-im/status-desktop/issues/8471#issuecomment-1342763651",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/8471",
    "id": 1342763651,
    "node_id": "IC_kwDOD5KrTM5QCPKD",
    "user": {
      "login": "alexjba",
      "id": 47811206,
      "node_id": "MDQ6VXNlcjQ3ODExMjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexjba",
      "html_url": "https://github.com/alexjba",
      "followers_url": "https://api.github.com/users/alexjba/followers",
      "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
      "organizations_url": "https://api.github.com/users/alexjba/orgs",
      "repos_url": "https://api.github.com/users/alexjba/repos",
      "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexjba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-08T13:47:25Z",
    "updated_at": "2022-12-08T13:47:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Automatically closed by PR. Reopen as it's not finished",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1342763651/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1343998062",
    "html_url": "https://github.com/status-im/status-desktop/issues/8471#issuecomment-1343998062",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/8471",
    "id": 1343998062,
    "node_id": "IC_kwDOD5KrTM5QG8hu",
    "user": {
      "login": "alexjba",
      "id": 47811206,
      "node_id": "MDQ6VXNlcjQ3ODExMjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexjba",
      "html_url": "https://github.com/alexjba",
      "followers_url": "https://api.github.com/users/alexjba/followers",
      "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
      "organizations_url": "https://api.github.com/users/alexjba/orgs",
      "repos_url": "https://api.github.com/users/alexjba/repos",
      "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexjba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-09T08:25:32Z",
    "updated_at": "2022-12-09T08:25:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "## Test scenarios\r\n\r\nText formatting scenarios from the notion page:\r\nhttps://www.notion.so/3-Chat-and-Groups-b372835c9b464aba8a9a70ec8f51a14c#66e6330b98d84f088b1d5750cd772c96\r\n\r\n### Testing keyboard input and navigation with plain text\r\n```\r\nScenario: StatusChatInput initialisation\r\nGiven a new instance of StatusChatInput\r\nWhen there is no keyboard input\r\nThen the StatucChatInput raw text is empty\r\nBut the StatusChatInput is configured to support Rich Text\r\n```\r\n```\r\nScenario: StatusChatInput will display any typed Ascii visible character\r\nGiven a new instance of StatusChatInput\r\nWhen the user is typing any Ascii visible character\r\nThen the text is displayed as it is typed\r\nAnd the input text is not modified by mentions processor\r\nAnd the input text is not modified by emoji processor\r\n```\r\n```\r\nScenario: User can navigate in chat input using keyboard\r\nGiven the user has typed text on multiple lines in StatusChatInput\r\nWhen the user hits key left, right, up, down\r\nThe cursor will move inside the text area to the left, right, up, down\r\n```\r\n```\r\nScenario: User can select text using keyboard\r\nGiven the user has typed text on multiple lines in StatusChatInput\r\nWhen the user holds shift key\r\nAnd hits key left, right, up, down\r\nThen the selected text changes according to cursor navigation\r\n```\r\n```\r\nScenario: User can select all text in StatusChatInput\r\nGiven the user has typed text in StatusChatInput\r\nWhen the user hits select all shortcut\r\nThen all the text is selected\r\n```\r\n```\r\nScenario: User can cut text in StatusChatInput\r\nGiven user has selected all text in StatusChatInput\r\nWhen the user hits cut shortcut\r\nThen all selected text is removed\r\nAnd his clipboard contains the initially selected text\r\n```\r\n```\r\nScenario: User can paste text in StatusChatInput\r\nGiven the user has copied text in clipboard\r\nWhen the user hits paste shortcut\r\nThen the text is displayed in the input field\r\nAnd the input text is not modified by mentions processor\r\nAnd the input text is not modified by emoji processor\r\n```\r\n\r\n### Testing keyboard input and navigation with mentions and emoji\r\n\r\n```\r\nScenario: User can type text, mention and emoji\r\nGiven a new instance of StatusChatInput\r\nAnd user has  <mention> as contact\r\nWhen user is typing <text>\r\nThen the text is displayed in the input field as <expectedText>\r\nAnd the <mention> is inserted in the input field\r\nAnd the <emoji> is inserted in the input field\r\nAnd the <mention> can be replaced with contact public key\r\n\r\nExamples:\r\ntext \t\t\t\t\t\t| mention \t\t                   \t| expectedText\r\n“Hello John:D”\t\t\t\t|\t\t\t\t\t| “Hello John:D “\r\n“Hello @JohnDoe”\t\t\t\t| @JohnDoe\t\t\t\t| “Hello @JohnDoe ”\r\n“Hello:D@JohnDoe“  \t\t\t| @JohnDoe\t\t\t\t| “Hello:D @JohnDoe “ \r\n“:DHello@JohnDoe”   \t\t\t| @JohnDoe \t\t\t\t| “:D Hello @JohnDoe ” \r\n“:D:D:D:D:D:D@JohnDoe:D:D:D”\t\t| @JohnDoe\t\t\t\t| “:D :D :D :D :D :D @JohnDoe:D :D :D ”\r\n“Hello:@JohnDoe1:D@JohnDoe2:D”\t| @JohnDoe1 @JohnDoe2\t\t| “Hello:@JohnDoe1 :D @JohnDoe2 :D ”\r\n“Hello:@JohnDoe1:D@JohnDoe2:D”\t| \t\t\t\t\t| “Hello:@JohnDoe1:D @JohnDoe2:D ”\r\n```\r\n```\r\nScenario: User can use keyboard to navigate text, emoji and mention\r\nGiven a new instance of StatusChatInput\r\nAnd user has  <mention> as contact\r\nAnd user has typed <text>\r\nWhen the user is pressing left\r\nThen the cursor moves to the left considering mention and emoji as single characters\r\n\r\nExamples:\r\ntext \t\t\t\t\t\t| mention \t\t                   \t| expectedText\r\n“Hello John:D”\t\t\t\t|\t\t\t\t\t| “Hello John:D “\r\n“Hello @JohnDoe”\t\t\t\t| @JohnDoe\t\t\t\t| “Hello @JohnDoe ”\r\n“Hello:D@JohnDoe“  \t\t\t| @JohnDoe\t\t\t\t| “Hello:D @JohnDoe “ \r\n“:DHello@JohnDoe”   \t\t\t| @JohnDoe \t\t\t\t| “:D Hello @JohnDoe ” \r\n“:D:D:D:D:D:D@JohnDoe:D:D:D”\t\t| @JohnDoe\t\t\t\t| “:D :D :D :D :D :D @JohnDoe:D :D :D ”\r\n“Hello:@JohnDoe1:D@JohnDoe2:D”\t| @JohnDoe1 @JohnDoe2\t\t| “Hello:@JohnDoe1 :D @JohnDoe2 :D ”\r\n“Hello:@JohnDoe1:D@JohnDoe2:D”\t| \t\t\t\t\t| “Hello:@JohnDoe1:D @JohnDoe2:D ”\r\n```\r\n```\r\nScenario: User can use keyboard to select text, emoji and mention\r\nGiven a new instance of StatusChatInput\r\nAnd user has <mention> as contact\r\nAnd user has typed <text>\r\nWhen the user is pressing shift key\r\nAnd holds left key\r\nThen the text is selected once the cursor moves left\r\n\r\nExamples:\r\ntext \t\t\t\t\t\t| mention \t\t                   \t| expectedText\r\n“Hello John:D”\t\t\t\t|\t\t\t\t\t| “Hello John:D “\r\n“Hello @JohnDoe”\t\t\t\t| @JohnDoe\t\t\t\t| “Hello @JohnDoe ”\r\n“Hello:D@JohnDoe“  \t\t\t| @JohnDoe\t\t\t\t| “Hello:D @JohnDoe “ \r\n“:DHello@JohnDoe”   \t\t\t| @JohnDoe \t\t\t\t| “:D Hello @JohnDoe ” \r\n“:D:D:D:D:D:D@JohnDoe:D:D:D”\t\t| @JohnDoe\t\t\t\t| “:D :D :D :D :D :D @JohnDoe:D :D :D ”\r\n“Hello:@JohnDoe1:D@JohnDoe2:D”\t| @JohnDoe1 @JohnDoe2\t\t| “Hello:@JohnDoe1 :D @JohnDoe2 :D ”\r\n“Hello:@JohnDoe1:D@JohnDoe2:D”\t| \t\t\t\t\t| “Hello:@JohnDoe1:D @JohnDoe2:D ”\r\n```\r\n```\r\nScenario: User can use keyboard to delete text, emoji and mention\r\nGiven a new instance of StatusChatInput\r\nAnd user has <mention> as contact\r\nAnd user has typed <text>\r\nWhen the user holds backspace key\r\nThen the text is deleted as the cursor moves left\r\n\r\nExamples:\r\ntext \t\t\t\t\t\t| mention \t\t                   \t| expectedText\r\n“Hello John:D”\t\t\t\t|\t\t\t\t\t| “Hello John:D “\r\n“Hello @JohnDoe”\t\t\t\t| @JohnDoe\t\t\t\t| “Hello @JohnDoe ”\r\n“Hello:D@JohnDoe“  \t\t\t| @JohnDoe\t\t\t\t| “Hello:D @JohnDoe “ \r\n“:DHello@JohnDoe”   \t\t\t| @JohnDoe \t\t\t\t| “:D Hello @JohnDoe ” \r\n“:D:D:D:D:D:D@JohnDoe:D:D:D”\t\t| @JohnDoe\t\t\t\t| “:D :D :D :D :D :D @JohnDoe:D :D :D ”\r\n“Hello:@JohnDoe1:D@JohnDoe2:D”\t| @JohnDoe1 @JohnDoe2\t\t| “Hello:@JohnDoe1 :D @JohnDoe2 :D ”\r\n“Hello:@JohnDoe1:D@JohnDoe2:D”\t| \t\t\t\t\t| “Hello:@JohnDoe1:D @JohnDoe2:D ”\r\n```\r\n```\r\nScenario: User can use keyboard to copy text, mention and emoji\r\nGiven user has <mention> as contact\r\nAnd has typed <text>\r\nAnd has selected entire <text>\r\nWhen the user hits copy keyboard shortcut\r\nThen the clipboard contains <expectedText>\r\n\r\nExamples:\r\ntext \t\t\t\t\t\t| mention \t\t                   \t| expectedText\r\n“Hello John:D”\t\t\t\t|\t\t\t\t\t| “Hello John:D “\r\n“Hello @JohnDoe”\t\t\t\t| @JohnDoe\t\t\t\t| “Hello @JohnDoe ”\r\n“Hello:D@JohnDoe“  \t\t\t| @JohnDoe\t\t\t\t| “Hello:D @JohnDoe “ \r\n“:DHello@JohnDoe”   \t\t\t| @JohnDoe \t\t\t\t| “:D Hello @JohnDoe ” \r\n“:D:D:D:D:D:D@JohnDoe:D:D:D”\t\t| @JohnDoe\t\t\t\t| “:D :D :D :D :D :D @JohnDoe:D :D :D ”\r\n“Hello:@JohnDoe1:D@JohnDoe2:D”\t| @JohnDoe1 @JohnDoe2\t\t| “Hello:@JohnDoe1 :D @JohnDoe2 :D ”\r\n“Hello:@JohnDoe1:D@JohnDoe2:D”\t| \t\t\t\t\t| “Hello:@JohnDoe1:D @JohnDoe2:D ”\r\n```\r\n```\r\nScenario: User can use keyboard to cut text, mention and emoji\r\nGiven user has <mention> as contact\r\nAnd has typed <text>\r\nAnd has selected entire <text>\r\nWhen user hits cut keyboard shortcut\r\nThen the clipboard contains <expectedText>\r\nAnd the text input is empty\r\n\r\nExamples:\r\ntext \t\t\t\t\t\t| mention \t\t                   \t| expectedText\r\n“Hello John:D”\t\t\t\t|\t\t\t\t\t| “Hello John:D “\r\n“Hello @JohnDoe”\t\t\t\t| @JohnDoe\t\t\t\t| “Hello @JohnDoe ”\r\n“Hello:D@JohnDoe“  \t\t\t| @JohnDoe\t\t\t\t| “Hello:D @JohnDoe “ \r\n“:DHello@JohnDoe”   \t\t\t| @JohnDoe \t\t\t\t| “:D Hello @JohnDoe ” \r\n“:D:D:D:D:D:D@JohnDoe:D:D:D”\t\t| @JohnDoe\t\t\t\t| “:D :D :D :D :D :D @JohnDoe:D :D :D ”\r\n“Hello:@JohnDoe1:D@JohnDoe2:D”\t| @JohnDoe1 @JohnDoe2\t\t| “Hello:@JohnDoe1 :D @JohnDoe2 :D ”\r\n“Hello:@JohnDoe1:D@JohnDoe2:D”\t| \t\t\t\t\t| “Hello:@JohnDoe1:D @JohnDoe2:D ”\r\n```\r\n```\r\nScenario: User can use keyboard to paste text, mention and emoji\r\nGiven user has <mention> as contact\r\nAnd has typed <text>\r\nAnd has cut text to clipboard\r\nWhen user hits paste keyboard shortcut\r\nThen the text input has <expectedText>\r\nAnd the <mention> is inserted in the input field\r\nAnd the <emoji> is inserted in the input field\r\nAnd the <mention> can be replaced with contact public key\r\n\r\nExamples:\r\nText \t\t\t\t\t\t| mention \t\t\t| emoji\r\nHello John:D\t\t\t\t\t|\t\t\t\t| :D\r\nHello @JohnDoe\t\t\t\t| @JohnDoe  \t\t|\r\nHello:D@JohnDoe   \t\t\t| @JohnDoe \t\t\t| :D\r\n:DHello@JohnDoe   \t\t\t| @JohnDoe \t\t\t| :D\r\n:D:D:D:D:D:D@JohnDoe:D:D:D\t\t|\t\t\t\t| :D:D:D:D:D:D:D:D:D\r\nHello:@JohnDoe1:D@JohnDoe2:D\t| @JohnDoe1 @JohnDoe2| :D\r\n```\r\n```\r\nScenario: Typing @ triggered mentions suggestions\r\nGiven a new instance of StatusChatInput\r\nAnd user has \"JohnDoe\" as contact\r\nWhen user is typing “@”\r\nThen mentions suggestions is opened\r\nAnd JohnDoe is in the suggestions\r\n```\r\n```\r\nScenario: Mentions suggestions remain open\r\nGiven a new instance of StatusChatInput\r\nAnd user has \"JohnDoe\" as contact\r\nWhen user is typing “@JohnDoe”\r\nThen mentions suggestions is until the user finishes the input\r\nAnd JohnDoe is in the suggestions\r\nAnd after mentions suggestion closes the mention is inserted\r\n```\r\n```\r\nScenario: Typing <emoji> triggered emoji suggestions\r\nGiven a new instance of StatusChatInput\r\nWhen user is typing <emoji>\r\nThen <emoji> suggestions is opened\r\nAnd and the emoji is in suggestions before hitting emoji end char “:”\r\n```\r\n```\r\nScenario: User can type all emoji supported\r\nGiven a new instance of StatusChatInput\r\nWhen user is typing <emoji>\r\nThen the emoji is inserted in the text input\r\nAnd the emoji can be converted to unicode\r\n```\r\n\r\n### Testing mouse input and navigation\r\n```\r\nScenario: User can move cursor by mouse click\r\n```\r\n```\r\nScenario: User can select word with double click\r\n```\r\n```\r\nScenario: User can select emoji with double click\r\n```\r\n```\r\nScenario: User can select mention with double click\r\n```\r\n```\r\nScenario: User can trigger text format modifiers popup by selecting text\r\n```\r\n```\r\nScenario: User can select mention from mention suggestions\r\n```\r\n```\r\nScenario: User can select emoji from emoji suggestions\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1343998062/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1344003930",
    "html_url": "https://github.com/status-im/status-desktop/issues/8471#issuecomment-1344003930",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/8471",
    "id": 1344003930,
    "node_id": "IC_kwDOD5KrTM5QG99a",
    "user": {
      "login": "alexjba",
      "id": 47811206,
      "node_id": "MDQ6VXNlcjQ3ODExMjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexjba",
      "html_url": "https://github.com/alexjba",
      "followers_url": "https://api.github.com/users/alexjba/followers",
      "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
      "organizations_url": "https://api.github.com/users/alexjba/orgs",
      "repos_url": "https://api.github.com/users/alexjba/repos",
      "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexjba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-09T08:31:41Z",
    "updated_at": "2022-12-09T08:31:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey @glitchminer @anastasiyaig @noeliaSD @alexandraB99 @caybro @micieslak,\r\nThis is my plan for the initial test scenarios on status chat input. I would really appreciate some thoughts on them!\r\n\r\nDo you think some are useless/needs to be improved or I'm missing some important test scenarios?",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1344003930/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1344060073",
    "html_url": "https://github.com/status-im/status-desktop/issues/8471#issuecomment-1344060073",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/8471",
    "id": 1344060073,
    "node_id": "IC_kwDOD5KrTM5QHLqp",
    "user": {
      "login": "micieslak",
      "id": 20650004,
      "node_id": "MDQ6VXNlcjIwNjUwMDA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20650004?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/micieslak",
      "html_url": "https://github.com/micieslak",
      "followers_url": "https://api.github.com/users/micieslak/followers",
      "following_url": "https://api.github.com/users/micieslak/following{/other_user}",
      "gists_url": "https://api.github.com/users/micieslak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/micieslak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/micieslak/subscriptions",
      "organizations_url": "https://api.github.com/users/micieslak/orgs",
      "repos_url": "https://api.github.com/users/micieslak/repos",
      "events_url": "https://api.github.com/users/micieslak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/micieslak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-09T09:24:39Z",
    "updated_at": "2022-12-09T09:24:39Z",
    "author_association": "MEMBER",
    "body": "> Hey @glitchminer @anastasiyaig @noeliaSD @alexandraB99 @caybro @micieslak, This is my plan for the initial test scenarios on status chat input. I would really appreciate some thoughts on them!\r\n> \r\n> Do you think some are useless/needs to be improved or I'm missing some important test scenarios?\r\n\r\nI would mention also undo/redo functionality especially that many actions should be tested if they work well with undo/redo. Generally it's a nice initial set. I would expect that further, detailed cases will come from bug reports. The case should be first covered with tests and then fixed. Once again, good job!",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1344060073/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1344149707",
    "html_url": "https://github.com/status-im/status-desktop/issues/8471#issuecomment-1344149707",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/8471",
    "id": 1344149707,
    "node_id": "IC_kwDOD5KrTM5QHhjL",
    "user": {
      "login": "noeliaSD",
      "id": 97019400,
      "node_id": "U_kgDOBchmCA",
      "avatar_url": "https://avatars.githubusercontent.com/u/97019400?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/noeliaSD",
      "html_url": "https://github.com/noeliaSD",
      "followers_url": "https://api.github.com/users/noeliaSD/followers",
      "following_url": "https://api.github.com/users/noeliaSD/following{/other_user}",
      "gists_url": "https://api.github.com/users/noeliaSD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/noeliaSD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/noeliaSD/subscriptions",
      "organizations_url": "https://api.github.com/users/noeliaSD/orgs",
      "repos_url": "https://api.github.com/users/noeliaSD/repos",
      "events_url": "https://api.github.com/users/noeliaSD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/noeliaSD/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-09T10:51:50Z",
    "updated_at": "2022-12-09T10:51:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Great job! Lots of scenarios!!\r\n\r\n**Question:**\r\n- `Scenario: StatusChatInput initialisation` --> I don't get the BUT statement here. Could you clarify?\r\n\r\n**Suggestions:**\r\n\r\n- `Scenario: User can paste text in StatusChatInput` --> Maybe we can distinguish here 2 different scenarios, paste at the end of the already written text and / or paste in the middle of an already written text.\r\n- This is just a minor minor comment but if we directly use/write your new scenarios in notion (and then maybe can be also add them in the squish project, we've agreed on writting \"the user XXX\", instead of just only \"user\" in the given/when/then statements! ;)",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1344149707/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1344163088",
    "html_url": "https://github.com/status-im/status-desktop/issues/8471#issuecomment-1344163088",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/8471",
    "id": 1344163088,
    "node_id": "IC_kwDOD5KrTM5QHk0Q",
    "user": {
      "login": "caybro",
      "id": 5377645,
      "node_id": "MDQ6VXNlcjUzNzc2NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/caybro",
      "html_url": "https://github.com/caybro",
      "followers_url": "https://api.github.com/users/caybro/followers",
      "following_url": "https://api.github.com/users/caybro/following{/other_user}",
      "gists_url": "https://api.github.com/users/caybro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/caybro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/caybro/subscriptions",
      "organizations_url": "https://api.github.com/users/caybro/orgs",
      "repos_url": "https://api.github.com/users/caybro/repos",
      "events_url": "https://api.github.com/users/caybro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/caybro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-09T11:04:55Z",
    "updated_at": "2022-12-09T11:04:55Z",
    "author_association": "MEMBER",
    "body": "- should test pasting an image works (we support that already); and that it doesn't conflict with pasting text\r\n- testing basic keyboard shortcuts (see: https://doc.qt.io/qt-5/qtextedit.html#read-only-key-bindings and https://doc.qt.io/qt-5/qtextedit.html#editing-key-bindings)",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1344163088/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1344217612",
    "html_url": "https://github.com/status-im/status-desktop/issues/8471#issuecomment-1344217612",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/8471",
    "id": 1344217612,
    "node_id": "IC_kwDOD5KrTM5QHyIM",
    "user": {
      "login": "alexjba",
      "id": 47811206,
      "node_id": "MDQ6VXNlcjQ3ODExMjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexjba",
      "html_url": "https://github.com/alexjba",
      "followers_url": "https://api.github.com/users/alexjba/followers",
      "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
      "organizations_url": "https://api.github.com/users/alexjba/orgs",
      "repos_url": "https://api.github.com/users/alexjba/repos",
      "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexjba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-09T11:57:03Z",
    "updated_at": "2022-12-09T11:57:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Cool! Thank you for your input!\r\n\r\n\r\n> I would mention also undo/redo functionality especially that many actions should be tested if they work well with undo/redo.\r\n\r\n@micieslak Good point, will add some scenarios on undo/redo functionality.\r\n\r\n> * `Scenario: StatusChatInput initialisation` --> I don't get the BUT statement here. Could you clarify?\r\n\r\n@noeliaSD Thanks! Will update the scenarios. This is what I test in StatusChatInput initialisation scenario:\r\n```\r\nThen the StatusChatInput raw text is empty \r\n-> Here we check that all APIs that are supposed to return plain text will return empty string\r\nBut the StatusChatInput is configured to support Rich Text \r\n-> But all the APIs that are supposed to return HTML text will return HTML and also the TextArea.textFormat is TextArea.RichText\r\n```\r\n\r\n@caybro I don't know yet the details of image paste, but will look into it and add a few scenarios. It's sure something to add on the list 👍. \r\nAnd the basic keyboard shortcuts are definitely something to consider, but I know some are not supported/buggy. Will add scenarios on the ones that are working. Thanks!\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1344217612/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1346288917",
    "html_url": "https://github.com/status-im/status-desktop/issues/8471#issuecomment-1346288917",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/8471",
    "id": 1346288917,
    "node_id": "IC_kwDOD5KrTM5QPr0V",
    "user": {
      "login": "glitchminer",
      "id": 50769329,
      "node_id": "MDQ6VXNlcjUwNzY5MzI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/50769329?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glitchminer",
      "html_url": "https://github.com/glitchminer",
      "followers_url": "https://api.github.com/users/glitchminer/followers",
      "following_url": "https://api.github.com/users/glitchminer/following{/other_user}",
      "gists_url": "https://api.github.com/users/glitchminer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glitchminer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glitchminer/subscriptions",
      "organizations_url": "https://api.github.com/users/glitchminer/orgs",
      "repos_url": "https://api.github.com/users/glitchminer/repos",
      "events_url": "https://api.github.com/users/glitchminer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glitchminer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-12T11:09:37Z",
    "updated_at": "2022-12-12T11:09:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey, looks good. Just a couple of notes, the scenarios will be better if they are specific about what is happening. For example, `When the user is typing any Ascii visible character` and `Given the user has typed text in StatusChatInput` don't describe specific text input which leaves some ambiguity.\r\n\r\nSimilarly, it's clearer when each step only performs one action. `When the user hits key left, right, up, down` can be split into 4 examples or multiple when/then steps (less preferred option but might reduce test time in some cases).\r\n\r\n```\r\nScenario outline: User can navigate in chat input using keyboard\r\nGiven the user has typed text on multiple lines in StatusChatInput\r\n\"\"\"\r\nthe multiline text input could \r\nbe passed from here\r\n\"\"\"\r\nWhen the user hits <direction>\r\nThe cursor will move inside the text area to the <direction>\r\n\r\nExamples:\r\n|direction|\r\n|left|\r\n|right|\r\n|up|\r\n|down|\r\n\r\nWhen the user hits \"left\"\r\nThe cursor will move inside the text area to the \"left\"\r\nWhen the user hits \"right\"\r\nThe cursor will move inside the text area to the \"right\"\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1346288917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1346314769",
    "html_url": "https://github.com/status-im/status-desktop/issues/8471#issuecomment-1346314769",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/8471",
    "id": 1346314769,
    "node_id": "IC_kwDOD5KrTM5QPyIR",
    "user": {
      "login": "alexjba",
      "id": 47811206,
      "node_id": "MDQ6VXNlcjQ3ODExMjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexjba",
      "html_url": "https://github.com/alexjba",
      "followers_url": "https://api.github.com/users/alexjba/followers",
      "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
      "organizations_url": "https://api.github.com/users/alexjba/orgs",
      "repos_url": "https://api.github.com/users/alexjba/repos",
      "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexjba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-12T11:26:42Z",
    "updated_at": "2022-12-12T11:26:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Hey, looks good. Just a couple of notes, the scenarios will be better if they are specific about what is happening. For example, `When the user is typing any Ascii visible character` and `Given the user has typed text in StatusChatInput` don't describe specific text input which leaves some ambiguity.\r\n> \r\n> Similarly, it's clearer when each step only performs one action. `When the user hits key left, right, up, down` can be split into 4 examples or multiple when/then steps (less preferred option but might reduce test time in some cases).\r\n> \r\n> ```\r\n> Scenario outline: User can navigate in chat input using keyboard\r\n> Given the user has typed text on multiple lines in StatusChatInput\r\n> \"\"\"\r\n> the multiline text input could \r\n> be passed from here\r\n> \"\"\"\r\n> When the user hits <direction>\r\n> The cursor will move inside the text area to the <direction>\r\n> \r\n> Examples:\r\n> |direction|\r\n> |left|\r\n> |right|\r\n> |up|\r\n> |down|\r\n> \r\n> When the user hits \"left\"\r\n> The cursor will move inside the text area to the \"left\"\r\n> When the user hits \"right\"\r\n> The cursor will move inside the text area to the \"right\"\r\n> ```\r\n\r\nHey @glitchminer. Good point. I will update the scenarios to be clearer.\r\nI will add you as a reviewer and the final scenarios will be defined before each test case.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1346314769/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
