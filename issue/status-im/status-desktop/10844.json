{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/10844",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/10844/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/10844/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/10844/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/10844",
  "id": 1730715984,
  "node_id": "I_kwDOD5KrTM5nKKFQ",
  "number": 10844,
  "title": "[StatusChatInput] Add qml tests to cover the working functionality - Part 2",
  "user": {
    "login": "alexjba",
    "id": 47811206,
    "node_id": "MDQ6VXNlcjQ3ODExMjA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alexjba",
    "html_url": "https://github.com/alexjba",
    "followers_url": "https://api.github.com/users/alexjba/followers",
    "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
    "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
    "organizations_url": "https://api.github.com/users/alexjba/orgs",
    "repos_url": "https://api.github.com/users/alexjba/repos",
    "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alexjba/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2087353959,
      "node_id": "MDU6TGFiZWwyMDg3MzUzOTU5",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/ui-team",
      "name": "ui-team",
      "color": "1111ff",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "alexandraB99",
    "id": 31625338,
    "node_id": "MDQ6VXNlcjMxNjI1MzM4",
    "avatar_url": "https://avatars.githubusercontent.com/u/31625338?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alexandraB99",
    "html_url": "https://github.com/alexandraB99",
    "followers_url": "https://api.github.com/users/alexandraB99/followers",
    "following_url": "https://api.github.com/users/alexandraB99/following{/other_user}",
    "gists_url": "https://api.github.com/users/alexandraB99/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alexandraB99/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alexandraB99/subscriptions",
    "organizations_url": "https://api.github.com/users/alexandraB99/orgs",
    "repos_url": "https://api.github.com/users/alexandraB99/repos",
    "events_url": "https://api.github.com/users/alexandraB99/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alexandraB99/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "alexandraB99",
      "id": 31625338,
      "node_id": "MDQ6VXNlcjMxNjI1MzM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/31625338?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexandraB99",
      "html_url": "https://github.com/alexandraB99",
      "followers_url": "https://api.github.com/users/alexandraB99/followers",
      "following_url": "https://api.github.com/users/alexandraB99/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexandraB99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexandraB99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexandraB99/subscriptions",
      "organizations_url": "https://api.github.com/users/alexandraB99/orgs",
      "repos_url": "https://api.github.com/users/alexandraB99/repos",
      "events_url": "https://api.github.com/users/alexandraB99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexandraB99/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-12-19T13:51:12Z",
  "updated_at": "2023-07-27T10:50:02Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\r\nThis is a continuation of status-im/status-desktop#8471\r\n\r\n## Test scenarios\r\n\r\nText formatting scenarios from the notion page:\r\nhttps://www.notion.so/3-Chat-and-Groups-b372835c9b464aba8a9a70ec8f51a14c#66e6330b98d84f088b1d5750cd772c96\r\n\r\n### Testing keyboard input and navigation with mentions and emoji\r\n\r\n```\r\nScenario: User can use keyboard to navigate text, emoji and mention\r\nGiven a new instance of StatusChatInput\r\nAnd user has  <mention> as contact\r\nAnd user has typed <text>\r\nWhen the user is pressing left\r\nThen the cursor moves to the left considering mention and emoji as single characters\r\n\r\nExamples:\r\ntext \t\t\t\t\t\t| mention \t\t                   \t| expectedText\r\n“Hello John:D”\t\t\t\t|\t\t\t\t\t| “Hello John:D “\r\n“Hello @JohnDoe”\t\t\t\t| @JohnDoe\t\t\t\t| “Hello @JohnDoe ”\r\n“Hello:D@JohnDoe“  \t\t\t| @JohnDoe\t\t\t\t| “Hello:D @JohnDoe “ \r\n“:DHello@JohnDoe”   \t\t\t| @JohnDoe \t\t\t\t| “:D Hello @JohnDoe ” \r\n“:D:D:D:D:D:D@JohnDoe:D:D:D”\t\t| @JohnDoe\t\t\t\t| “:D :D :D :D :D :D @JohnDoe:D :D :D ”\r\n“Hello:@JohnDoe1:D@JohnDoe2:D”\t| @JohnDoe1 @JohnDoe2\t\t| “Hello:@JohnDoe1 :D @JohnDoe2 :D ”\r\n“Hello:@JohnDoe1:D@JohnDoe2:D”\t| \t\t\t\t\t| “Hello:@JohnDoe1:D @JohnDoe2:D ”\r\n```\r\n```\r\nScenario: User can use keyboard to select text, emoji and mention\r\nGiven a new instance of StatusChatInput\r\nAnd user has <mention> as contact\r\nAnd user has typed <text>\r\nWhen the user is pressing shift key\r\nAnd holds left key\r\nThen the text is selected once the cursor moves left\r\n\r\nExamples:\r\ntext \t\t\t\t\t\t| mention \t\t                   \t| expectedText\r\n“Hello John:D”\t\t\t\t|\t\t\t\t\t| “Hello John:D “\r\n“Hello @JohnDoe”\t\t\t\t| @JohnDoe\t\t\t\t| “Hello @JohnDoe ”\r\n“Hello:D@JohnDoe“  \t\t\t| @JohnDoe\t\t\t\t| “Hello:D @JohnDoe “ \r\n“:DHello@JohnDoe”   \t\t\t| @JohnDoe \t\t\t\t| “:D Hello @JohnDoe ” \r\n“:D:D:D:D:D:D@JohnDoe:D:D:D”\t\t| @JohnDoe\t\t\t\t| “:D :D :D :D :D :D @JohnDoe:D :D :D ”\r\n“Hello:@JohnDoe1:D@JohnDoe2:D”\t| @JohnDoe1 @JohnDoe2\t\t| “Hello:@JohnDoe1 :D @JohnDoe2 :D ”\r\n“Hello:@JohnDoe1:D@JohnDoe2:D”\t| \t\t\t\t\t| “Hello:@JohnDoe1:D @JohnDoe2:D ”\r\n```\r\n```\r\nScenario: User can use keyboard to delete text, emoji and mention\r\nGiven a new instance of StatusChatInput\r\nAnd user has <mention> as contact\r\nAnd user has typed <text>\r\nWhen the user holds backspace key\r\nThen the text is deleted as the cursor moves left\r\n\r\nExamples:\r\ntext \t\t\t\t\t\t| mention \t\t                   \t| expectedText\r\n“Hello John:D”\t\t\t\t|\t\t\t\t\t| “Hello John:D “\r\n“Hello @JohnDoe”\t\t\t\t| @JohnDoe\t\t\t\t| “Hello @JohnDoe ”\r\n“Hello:D@JohnDoe“  \t\t\t| @JohnDoe\t\t\t\t| “Hello:D @JohnDoe “ \r\n“:DHello@JohnDoe”   \t\t\t| @JohnDoe \t\t\t\t| “:D Hello @JohnDoe ” \r\n“:D:D:D:D:D:D@JohnDoe:D:D:D”\t\t| @JohnDoe\t\t\t\t| “:D :D :D :D :D :D @JohnDoe:D :D :D ”\r\n“Hello:@JohnDoe1:D@JohnDoe2:D”\t| @JohnDoe1 @JohnDoe2\t\t| “Hello:@JohnDoe1 :D @JohnDoe2 :D ”\r\n“Hello:@JohnDoe1:D@JohnDoe2:D”\t| \t\t\t\t\t| “Hello:@JohnDoe1:D @JohnDoe2:D ”\r\n```\r\n```\r\nScenario: User can use keyboard to copy text, mention and emoji\r\nGiven user has <mention> as contact\r\nAnd has typed <text>\r\nAnd has selected entire <text>\r\nWhen the user hits copy keyboard shortcut\r\nThen the clipboard contains <expectedText>\r\n\r\nExamples:\r\ntext \t\t\t\t\t\t| mention \t\t                   \t| expectedText\r\n“Hello John:D”\t\t\t\t|\t\t\t\t\t| “Hello John:D “\r\n“Hello @JohnDoe”\t\t\t\t| @JohnDoe\t\t\t\t| “Hello @JohnDoe ”\r\n“Hello:D@JohnDoe“  \t\t\t| @JohnDoe\t\t\t\t| “Hello:D @JohnDoe “ \r\n“:DHello@JohnDoe”   \t\t\t| @JohnDoe \t\t\t\t| “:D Hello @JohnDoe ” \r\n“:D:D:D:D:D:D@JohnDoe:D:D:D”\t\t| @JohnDoe\t\t\t\t| “:D :D :D :D :D :D @JohnDoe:D :D :D ”\r\n“Hello:@JohnDoe1:D@JohnDoe2:D”\t| @JohnDoe1 @JohnDoe2\t\t| “Hello:@JohnDoe1 :D @JohnDoe2 :D ”\r\n“Hello:@JohnDoe1:D@JohnDoe2:D”\t| \t\t\t\t\t| “Hello:@JohnDoe1:D @JohnDoe2:D ”\r\n```\r\n```\r\nScenario: User can use keyboard to cut text, mention and emoji\r\nGiven user has <mention> as contact\r\nAnd has typed <text>\r\nAnd has selected entire <text>\r\nWhen user hits cut keyboard shortcut\r\nThen the clipboard contains <expectedText>\r\nAnd the text input is empty\r\n\r\nExamples:\r\ntext \t\t\t\t\t\t| mention \t\t                   \t| expectedText\r\n“Hello John:D”\t\t\t\t|\t\t\t\t\t| “Hello John:D “\r\n“Hello @JohnDoe”\t\t\t\t| @JohnDoe\t\t\t\t| “Hello @JohnDoe ”\r\n“Hello:D@JohnDoe“  \t\t\t| @JohnDoe\t\t\t\t| “Hello:D @JohnDoe “ \r\n“:DHello@JohnDoe”   \t\t\t| @JohnDoe \t\t\t\t| “:D Hello @JohnDoe ” \r\n“:D:D:D:D:D:D@JohnDoe:D:D:D”\t\t| @JohnDoe\t\t\t\t| “:D :D :D :D :D :D @JohnDoe:D :D :D ”\r\n“Hello:@JohnDoe1:D@JohnDoe2:D”\t| @JohnDoe1 @JohnDoe2\t\t| “Hello:@JohnDoe1 :D @JohnDoe2 :D ”\r\n“Hello:@JohnDoe1:D@JohnDoe2:D”\t| \t\t\t\t\t| “Hello:@JohnDoe1:D @JohnDoe2:D ”\r\n```\r\n```\r\nScenario: User can use keyboard to paste text, mention and emoji\r\nGiven user has <mention> as contact\r\nAnd has typed <text>\r\nAnd has cut text to clipboard\r\nWhen user hits paste keyboard shortcut\r\nThen the text input has <expectedText>\r\nAnd the <mention> is inserted in the input field\r\nAnd the <emoji> is inserted in the input field\r\nAnd the <mention> can be replaced with contact public key\r\n\r\nExamples:\r\nText \t\t\t\t\t\t| mention \t\t\t| emoji\r\nHello John:D\t\t\t\t\t|\t\t\t\t| :D\r\nHello @JohnDoe\t\t\t\t| @JohnDoe  \t\t|\r\nHello:D@JohnDoe   \t\t\t| @JohnDoe \t\t\t| :D\r\n:DHello@JohnDoe   \t\t\t| @JohnDoe \t\t\t| :D\r\n:D:D:D:D:D:D@JohnDoe:D:D:D\t\t|\t\t\t\t| :D:D:D:D:D:D:D:D:D\r\nHello:@JohnDoe1:D@JohnDoe2:D\t| @JohnDoe1 @JohnDoe2| :D\r\n```\r\n```\r\nScenario: Typing @ triggered mentions suggestions\r\nGiven a new instance of StatusChatInput\r\nAnd user has \"JohnDoe\" as contact\r\nWhen user is typing “@”\r\nThen mentions suggestions is opened\r\nAnd JohnDoe is in the suggestions\r\n```\r\n```\r\nScenario: Mentions suggestions remain open\r\nGiven a new instance of StatusChatInput\r\nAnd user has \"JohnDoe\" as contact\r\nWhen user is typing “@JohnDoe”\r\nThen mentions suggestions is until the user finishes the input\r\nAnd JohnDoe is in the suggestions\r\nAnd after mentions suggestion closes the mention is inserted\r\n```\r\n```\r\nScenario: Typing <emoji> triggered emoji suggestions\r\nGiven a new instance of StatusChatInput\r\nWhen user is typing <emoji>\r\nThen <emoji> suggestions is opened\r\nAnd and the emoji is in suggestions before hitting emoji end char “:”\r\n```\r\n```\r\nScenario: User can type all emoji supported\r\nGiven a new instance of StatusChatInput\r\nWhen user is typing <emoji>\r\nThen the emoji is inserted in the text input\r\nAnd the emoji can be converted to unicode\r\n```\r\n\r\n### Testing mouse input and navigation\r\n```\r\nScenario: User can move cursor by mouse click\r\n```\r\n```\r\nScenario: User can select word with double click\r\n```\r\n```\r\nScenario: User can select emoji with double click\r\n```\r\n```\r\nScenario: User can select mention with double click\r\n```\r\n```\r\nScenario: User can trigger text format modifiers popup by selecting text\r\n```\r\n```\r\nScenario: User can select mention from mention suggestions\r\n```\r\n```\r\nScenario: User can select emoji from emoji suggestions\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/10844/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/10844/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1567103729",
    "html_url": "https://github.com/status-im/status-desktop/issues/10844#issuecomment-1567103729",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10844",
    "id": 1567103729,
    "node_id": "IC_kwDOD5KrTM5daBrx",
    "user": {
      "login": "anastasiyaig",
      "id": 82375995,
      "node_id": "MDQ6VXNlcjgyMzc1OTk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/82375995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anastasiyaig",
      "html_url": "https://github.com/anastasiyaig",
      "followers_url": "https://api.github.com/users/anastasiyaig/followers",
      "following_url": "https://api.github.com/users/anastasiyaig/following{/other_user}",
      "gists_url": "https://api.github.com/users/anastasiyaig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anastasiyaig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anastasiyaig/subscriptions",
      "organizations_url": "https://api.github.com/users/anastasiyaig/orgs",
      "repos_url": "https://api.github.com/users/anastasiyaig/repos",
      "events_url": "https://api.github.com/users/anastasiyaig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anastasiyaig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-29T12:55:18Z",
    "updated_at": "2023-05-29T12:55:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@iurimatias this is QML tests task",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1567103729/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
