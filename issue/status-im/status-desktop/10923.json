{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/10923",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/10923/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/10923/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/10923/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/10923",
  "id": 1741663240,
  "node_id": "I_kwDOD5KrTM5nz6wI",
  "number": 10923,
  "title": "Wallet -> Colelctibles: application crash (hard to reproduce)",
  "user": {
    "login": "anastasiyaig",
    "id": 82375995,
    "node_id": "MDQ6VXNlcjgyMzc1OTk1",
    "avatar_url": "https://avatars.githubusercontent.com/u/82375995?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/anastasiyaig",
    "html_url": "https://github.com/anastasiyaig",
    "followers_url": "https://api.github.com/users/anastasiyaig/followers",
    "following_url": "https://api.github.com/users/anastasiyaig/following{/other_user}",
    "gists_url": "https://api.github.com/users/anastasiyaig/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/anastasiyaig/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/anastasiyaig/subscriptions",
    "organizations_url": "https://api.github.com/users/anastasiyaig/orgs",
    "repos_url": "https://api.github.com/users/anastasiyaig/repos",
    "events_url": "https://api.github.com/users/anastasiyaig/events{/privacy}",
    "received_events_url": "https://api.github.com/users/anastasiyaig/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2036563458,
      "node_id": "MDU6TGFiZWwyMDM2NTYzNDU4",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/bug",
      "name": "bug",
      "color": "d73a4a",
      "default": true,
      "description": "Something isn't working"
    },
    {
      "id": 2331339531,
      "node_id": "MDU6TGFiZWwyMzMxMzM5NTMx",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/wallet-team",
      "name": "wallet-team",
      "color": "b60205",
      "default": false,
      "description": ""
    },
    {
      "id": 3047396259,
      "node_id": "MDU6TGFiZWwzMDQ3Mzk2MjU5",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/crash",
      "name": "crash",
      "color": "B60205",
      "default": false,
      "description": ""
    },
    {
      "id": 3904302702,
      "node_id": "LA_kwDOD5KrTM7otu5u",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Bugfixes",
      "name": "E:Bugfixes",
      "color": "11DEC5",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/57",
    "html_url": "https://github.com/status-im/status-desktop/milestone/57",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/57/labels",
    "id": 8475715,
    "node_id": "MI_kwDOD5KrTM4AgVRD",
    "number": 57,
    "title": "0.14",
    "description": "**Must be complete by 28th June - Deploy Community Directory Curation dApp**\r\n- Deploy SNT contract to Optimism\r\n- Register SNT contract with Optimism bridge\r\n- Deploy Curation dApp smart contracts to Optimism mainnet (not testnet)\r\n- Deploy Community Directory Curation dApp UI to \"curate.status.app\" domain (task for PVL)\r\n\r\nThen create a public 'Status Test Community'\r\n- 1 SNT is required to join the community\r\n- The community contains some token gated channels\r\n- Mint soulbound remotely destructible admin token\r\n- Airdrop Admin token to everybody in Messaging, QA and UI teams + Mary, John \r\n- Setup admin permission\r\n\r\nStart vote for this community to be the first community featured in the real, mainnet Community Directory!\r\nAll the above needed for new Status website that has to be ready at end of June.\r\n\r\n\r\n**--- Main focus ---**\r\n\r\n**1. Ability for user to select & manage accounts shared with each community control node**\r\n- This item is quite a bit of work\r\n- Touches Community settings, as well as all of the community join flows\r\n\r\n**2. Updates to control node transfer dialogues**\r\n- Remove ability for a Owner to leave a community on the computer that's running as that community's control node\r\n- Community Admin home screen cleanup (inc. adding at least one of the three graphs, whichever is easiest to implement).  \r\n\r\n**3. finish anything that wasn't completed in 0.13**\r\n- Profile showcase backend\r\n- Anything that didn't get completed in 0.13 related to new share URL format\r\n- Make sure all Community token functionality *is very well tested*, fix any issues found\r\n\r\n**4. Final screens and bits and bobs needed prior to public beta**\r\n- Modal that's shown every time after login, reminding user's that Status Desktop is in Beta\r\n- The bug with 'requests to join' a community not constantly arriving, or sometimes arriving after a delay, must be fixed.\r\n- All the outstanding bugs and small items that got pushed into the 0.14 milestone.\r\n\r\n**5. QR scanner**\r\n- Needed for private key transfer\r\n- Ethereum key QRs (send modal triggered)\r\n- User Share URL in a QR (opens user profile dialogue) \r\n- Community and Channel inside Community URL in QRs (takes user to Community or Channel in Community)\r\n\r\n**6. Token permissions to enable control of community smart contracts**\r\n- So that for example, a token based permission could give multiple people the ability to mint or airdrop a single community's tokens.\r\n\r\n**--- Things that we SHOULD NOT work on during the 0.14 cycle ---**\r\n- Messaging and UI teams shouldn't work on perf. in 0.14 (but Wallet team should!)\r\n- Anything mutual contacts related, other than #10497 #10498 (hopefully this functionality working good enough now!)\r\n- Community Channel drag and drop (assuming this is now working!)\r\n\r\n**--- Wallet Team ---**\r\n\r\n1. Finish any outstanding work related to Activity screens (top priority - aim to have complete by July 14th)\r\n\r\n2. Updated Wallet Settings screens inc. account syncing functionality  *Synced information should immediately be reflected in the UI after it is received (sometimes synced info is currently only displayed after the next app restart, this needs to be fixed)*\r\n\r\n3. Fix bugs, clean up loose ends (to get things in a good state before the work on the Mobile wallet starts)\r\n\r\n4. Total balance graphs for 'All accounts' and each individual account\r\n\r\n5. Advanced transaction signing\r\n\r\n\r\n\r\n",
    "creator": {
      "login": "iurimatias",
      "id": 176720,
      "node_id": "MDQ6VXNlcjE3NjcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iurimatias",
      "html_url": "https://github.com/iurimatias",
      "followers_url": "https://api.github.com/users/iurimatias/followers",
      "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
      "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
      "organizations_url": "https://api.github.com/users/iurimatias/orgs",
      "repos_url": "https://api.github.com/users/iurimatias/repos",
      "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iurimatias/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 90,
    "closed_issues": 0,
    "state": "open",
    "created_at": "2022-09-28T20:32:56Z",
    "updated_at": "2023-06-06T06:15:35Z",
    "due_on": "2023-08-16T07:00:00Z",
    "closed_at": null
  },
  "comments": 1,
  "created_at": "2023-06-05T12:22:25Z",
  "updated_at": "2023-06-06T05:45:32Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nI have a bunch of w/o accounts added so really hard to tell which one is having the collectible we don't handle correctly, but sometimes i see the crash with the following stacktrace:\r\n\r\n```\r\nTraceback (most recent call last)\r\n/Users/anastasiya/status-desktop/src/nim_status_client.nim(193) nim_status_client\r\n/Users/anastasiya/status-desktop/src/nim_status_client.nim(190) mainProc\r\n/Users/anastasiya/status-desktop/vendor/nimqml/src/nimqml/private/qguiapplication.nim(29) exec\r\n/Users/anastasiya/status-desktop/vendor/nimqml/src/nimqml/private/qobject.nim(49) qobjectCallback\r\n/Users/anastasiya/status-desktop/vendor/nimqml/src/nimqml/private/qobject.nim(34) onSlotCalled\r\n/Users/anastasiya/status-desktop/vendor/nimbus-build-system/vendor/Nim/lib/core/macros.nim(558) onSlotCalled\r\n/Users/anastasiya/status-desktop/src/app/core/signals/signals_manager.nim(70) receiveSignal\r\n/Users/anastasiya/status-desktop/src/app/core/signals/signals_manager.nim(37) processSignal\r\n/Users/anastasiya/status-desktop/vendor/nimbus-build-system/vendor/Nim/lib/pure/json.nim(1035) parseJson\r\n/Users/anastasiya/status-desktop/vendor/nimbus-build-system/vendor/Nim/lib/pure/json.nim(951) parseJson\r\n/Users/anastasiya/status-desktop/vendor/nimbus-build-system/vendor/Nim/lib/pure/json.nim(900) parseJson\r\n/Users/anastasiya/status-desktop/vendor/nimbus-build-system/vendor/Nim/lib/pure/json.nim(900) parseJson\r\n/Users/anastasiya/status-desktop/vendor/nimbus-build-system/vendor/Nim/lib/pure/json.nim(911) parseJson\r\n/Users/anastasiya/status-desktop/vendor/nimbus-build-system/vendor/Nim/lib/pure/json.nim(900) parseJson\r\n/Users/anastasiya/status-desktop/vendor/nimbus-build-system/vendor/Nim/lib/pure/json.nim(911) parseJson\r\n/Users/anastasiya/status-desktop/vendor/nimbus-build-system/vendor/Nim/lib/pure/json.nim(901) parseJson\r\n/Users/anastasiya/status-desktop/vendor/nimbus-build-system/vendor/Nim/lib/pure/json.nim(392) []=\r\n/Users/anastasiya/status-desktop/vendor/nimbus-build-system/vendor/Nim/lib/pure/collections/tableimpl.nim(52) []=\r\n/Users/anastasiya/status-desktop/vendor/nimbus-build-system/vendor/Nim/lib/pure/collections/tableimpl.nim(22) rawInsert\r\n/Users/anastasiya/status-desktop/vendor/nimbus-build-system/vendor/Nim/lib/system/gc.nim(508) newObjRC1\r\n/Users/anastasiya/status-desktop/vendor/nimbus-build-system/vendor/Nim/lib/system/alloc.nim(735) rawAlloc\r\nSIGSEGV: Illegal storage access. (Attempt to read from nil?)\r\nmake: *** [run-macos] Segmentation fault: 11\r\n```\r\n\r\n@IvanBelyakoff also was able to reproduce it from time to time",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/10923/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/10923/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1577951730",
    "html_url": "https://github.com/status-im/status-desktop/issues/10923#issuecomment-1577951730",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10923",
    "id": 1577951730,
    "node_id": "IC_kwDOD5KrTM5eDaHy",
    "user": {
      "login": "IvanBelyakoff",
      "id": 15627093,
      "node_id": "MDQ6VXNlcjE1NjI3MDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/15627093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/IvanBelyakoff",
      "html_url": "https://github.com/IvanBelyakoff",
      "followers_url": "https://api.github.com/users/IvanBelyakoff/followers",
      "following_url": "https://api.github.com/users/IvanBelyakoff/following{/other_user}",
      "gists_url": "https://api.github.com/users/IvanBelyakoff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/IvanBelyakoff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/IvanBelyakoff/subscriptions",
      "organizations_url": "https://api.github.com/users/IvanBelyakoff/orgs",
      "repos_url": "https://api.github.com/users/IvanBelyakoff/repos",
      "events_url": "https://api.github.com/users/IvanBelyakoff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/IvanBelyakoff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-06T05:45:32Z",
    "updated_at": "2023-06-06T05:45:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\r\nTraceback (most recent call last)\r\n/src/nim_status_client.nim(193) nim_status_client\r\n/src/nim_status_client.nim(190) mainProc\r\n/vendor/nimqml/src/nimqml/private/qguiapplication.nim(29) exec\r\n/vendor/nimqml/src/nimqml/private/qobject.nim(49) qobjectCallback\r\n/vendor/nimqml/src/nimqml/private/qobject.nim(34) onSlotCalled\r\n/vendor/nimbus-build-system/vendor/Nim/lib/core/macros.nim(559) onSlotCalled\r\n/src/app_service/service/collectible/service.nim(383) onRxOwnedCollectibles\r\n/vendor/nimbus-build-system/vendor/Nim/lib/pure/json.nim(1035) parseJson\r\n/vendor/nimbus-build-system/vendor/Nim/lib/pure/json.nim(951) parseJson\r\n/vendor/nimbus-build-system/vendor/Nim/lib/pure/json.nim(900) parseJson\r\n/vendor/nimbus-build-system/vendor/Nim/lib/pure/json.nim(900) parseJson\r\n/vendor/nimbus-build-system/vendor/Nim/lib/pure/json.nim(911) parseJson\r\n/vendor/nimbus-build-system/vendor/Nim/lib/pure/json.nim(900) parseJson\r\n/vendor/nimbus-build-system/vendor/Nim/lib/pure/json.nim(900) parseJson\r\n/vendor/nimbus-build-system/vendor/Nim/lib/pure/json.nim(859) parseJson\r\n/vendor/nimbus-build-system/vendor/Nim/lib/pure/json.nim(219) newJStringMove\r\n/vendor/nimbus-build-system/vendor/Nim/lib/system/gc.nim(486) newObj\r\n/vendor/nimbus-build-system/vendor/Nim/lib/system/gc_common.nim(423) prepareDealloc\r\nSIGSEGV: Illegal storage access. (Attempt to read from nil?)\r\nmake: *** [Makefile:748: run-linux] Segmentation fault (core dumped)\r\n```\r\nIn my case it happened in a different method - **onRxOwnedCollectibles**, but I believe the bug is the same",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1577951730/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
