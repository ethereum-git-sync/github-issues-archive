{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/10863",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/10863/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/10863/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/10863/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/10863",
  "id": 1732567458,
  "node_id": "I_kwDOD5KrTM5nROGi",
  "number": 10863,
  "title": "Support new URL unfurling APIs",
  "user": {
    "login": "jrainville",
    "id": 11926403,
    "node_id": "MDQ6VXNlcjExOTI2NDAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jrainville",
    "html_url": "https://github.com/jrainville",
    "followers_url": "https://api.github.com/users/jrainville/followers",
    "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
    "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
    "organizations_url": "https://api.github.com/users/jrainville/orgs",
    "repos_url": "https://api.github.com/users/jrainville/repos",
    "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jrainville/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3047427135,
      "node_id": "MDU6TGFiZWwzMDQ3NDI3MTM1",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/feature",
      "name": "feature",
      "color": "0E8A16",
      "default": false,
      "description": ""
    },
    {
      "id": 4548141040,
      "node_id": "LA_kwDOD5KrTM8AAAABDxcf8A",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/messenger-team",
      "name": "messenger-team",
      "color": "232858",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/57",
    "html_url": "https://github.com/status-im/status-desktop/milestone/57",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/57/labels",
    "id": 8475715,
    "node_id": "MI_kwDOD5KrTM4AgVRD",
    "number": 57,
    "title": "0.14",
    "description": "**Must be complete by 28th June - Deploy Community Directory Curation dApp**\r\n- Deploy SNT contract to Optimism\r\n- Register SNT contract with Optimism bridge\r\n- Deploy Curation dApp smart contracts to Optimism mainnet (not testnet)\r\n- Deploy Community Directory Curation dApp UI to \"curate.status.app\" domain (task for PVL)\r\n\r\nThen create a public 'Status Test Community'\r\n- 1 SNT is required to join the community\r\n- The community contains some token gated channels\r\n- Mint soulbound remotely destructible admin token\r\n- Airdrop Admin token to everybody in Messaging, QA and UI teams + Mary, John \r\n- Setup admin permission\r\n\r\nStart vote for this community to be the first community featured in the real, mainnet Community Directory!\r\nAll the above needed for new Status website that has to be ready at end of June.\r\n\r\n\r\n**--- Main focus ---**\r\n\r\n**1. Token permissions to enable control of community smart contracts**\r\n- Before a community founder can use any of the community token admin functionality, they first have to deploy Owner and Token Master contracts.\r\n- This work involves: new empty state screen for Mint and Airdrop tokens (before current empty state screen is revealed), new flow for deploying the community's Owner and Token Master contracts in a single step, a fixed uneditable permission giving anybody who holds the Token Master token admin rights for the community should be automatically created.\r\n- Only the holder of the single Owner token can access the Token Master airdrop, remote destruct, and view holders functions. Anybody who holds the Token Master token can access all token admin options, excluding those related to the Token Master token itself, as well as being and Admin of the community.\r\n- This will all be explained in more detail in the designs.\r\n\r\n**2. Updates to control node transfer and associated dialogues**\r\n- Remove ability for a Owner to leave a community on the computer that's running as that community's control node\r\n- Community Admin home screen cleanup (inc. adding at least one of the three graphs, whichever is easiest to implement).  \r\n\r\n**3. Ability for user to select & manage accounts shared with each community control node**\r\n- This item is quite a bit of work\r\n- Touches Community settings, as well as all of the community join flows\r\n\r\n**4. Encryption for token gated channels that are inside Open (not token gated) communities**\r\n- Assigned to Patryk?\r\n\r\n**5. Final screens and bits and bobs needed prior to public beta**\r\n- Modal that's shown every time after login, reminding user's that Status Desktop is in Beta\r\n- The bug with 'requests to join' a community not constantly arriving, or sometimes arriving after a delay, must be fixed.\r\n- Anything that didn't get completed in 0.13 related to new share URL format\r\n- All the outstanding bugs and small items that got pushed into the 0.14 milestone.\r\n\r\n**6. Profile showcase backend**\r\n- The long-delayed profile showcase backend!  We have the UI on the desktop ready to go for this feature, and Mobile is going to need the backend for this feature as well, so let's try to get it done in 0.14\r\n\r\n\r\n\r\n**--- Things that we SHOULD NOT work on during the 0.14 cycle ---**\r\n- Messaging and UI teams shouldn't work on perf. in 0.14 (but Wallet team should!)\r\n- Anything mutual contacts related, other than #10497 #10498 (hopefully this functionality working good enough now!)\r\n- Community Channel drag and drop (assuming this is now working!)\r\n\r\n**--- Wallet Team ---**\r\n\r\n1. Finish any outstanding work related to Activity screens (top priority - aim to have complete by July 14th)\r\n\r\n2. Updated Wallet Settings screens inc. account syncing functionality  *Synced information should immediately be reflected in the UI after it is received (sometimes synced info is currently only displayed after the next app restart, this needs to be fixed)*\r\n\r\n3. Fix bugs, clean up loose ends (to get things in a good state before the work on the Mobile wallet starts)\r\n\r\n4. Total balance graphs for 'All accounts' and each individual account\r\n\r\n5. Advanced transaction signing\r\n\r\n\r\n\r\n",
    "creator": {
      "login": "iurimatias",
      "id": 176720,
      "node_id": "MDQ6VXNlcjE3NjcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iurimatias",
      "html_url": "https://github.com/iurimatias",
      "followers_url": "https://api.github.com/users/iurimatias/followers",
      "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
      "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
      "organizations_url": "https://api.github.com/users/iurimatias/orgs",
      "repos_url": "https://api.github.com/users/iurimatias/repos",
      "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iurimatias/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 52,
    "closed_issues": 0,
    "state": "open",
    "created_at": "2022-09-28T20:32:56Z",
    "updated_at": "2023-06-13T18:30:01Z",
    "due_on": "2023-08-18T07:00:00Z",
    "closed_at": null
  },
  "comments": 0,
  "created_at": "2023-05-30T16:08:15Z",
  "updated_at": "2023-06-13T18:11:30Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nThe mobile team created a new API to get the unfurling data from URLs. Instead of having the receiver fetch the data from the websites, it's the sender that fetches it, then sends it with the message. It's way better for privacy, but it also enables more websites to be unfurled.\r\n\r\nHere is the initial work with the new APIs: https://github.com/status-im/status-go/pull/3471\r\n\r\n```go\r\n\r\n// GetTextURLs parses text and returns a deduplicated and (somewhat) normalized\r\n// slice of URLs. The returned URLs can be used as cache keys by clients.\r\nfunc (api *PublicAPI) GetTextURLs(text string) []string {\r\n\treturn linkpreview.GetURLs(text)\r\n}\r\n\r\n// UnfurlURLs uses a best-effort approach to unfurl each URL. Failed URLs will\r\n// be removed from the response.\r\n//\r\n// This endpoint expects the client to send URLs normalized by GetTextURLs.\r\nfunc (api *PublicAPI) UnfurlURLs(urls []string) ([]common.LinkPreview, error) {\r\n\treturn api.service.messenger.UnfurlURLs(urls)\r\n```\r\n\r\nHere is the follow up PR that adds support to more hosts: https://github.com/status-im/status-go/pull/3530\r\n\r\nFor full context, here is the mobile issue: https://github.com/status-im/status-mobile/issues/15469\r\nand follow up one: https://github.com/status-im/status-mobile/issues/15918\r\n\r\nIf your need help, you can ask @ilmotta , who did an amazing job on this.\r\n\r\n---\r\n\r\n### Steps\r\n\r\n#### Step 1\r\nSo, the first step, is that when typing the message, when we detect a link in the input (with a debounce throttle), we call the new status-go API to get the link data.\r\n\r\nThen, when we send the message, we need to add the data to the message payload. It should also already be supported on status-go.\r\n\r\n#### Step 2\r\nThe second step is to show that new data and stop using the old `getLinkPreviewData` function, since it's no longer the receiver's responsibility to fetch that data.\r\n\r\nThis second step can be done as part of another issue and PR if needed. If that's the case, then split this issue in two, including the acceptance criterias(!!!).\r\n\r\nThis goal here is to use the data included in the Message itself as per step one and display the unfurl using that.\r\n\r\nIf possible, try to use the same unfurling component we currently have. We will have a new design later.\r\nIf not possible, too bad. Let's just stop using the old status-go function at least and we'll hook into the new design as part of another PR that will be a collaborative effort with the UI team.\r\n\r\n#### Out of scope\r\n\r\n- New design of the unfurling component (gonna be done by the UI team)\r\n- Removing the individual settings for the whitelisted sites (can be done in another PR after) (https://github.com/status-im/status-desktop/issues/10864)\r\n- adding the setting for senders to opt in to send that type of data (https://github.com/status-im/status-desktop/issues/10866)\r\n- opting out of sending the individual link data, ie choosing which links to send data for (this will need the updated design)\r\n\r\n### Acceptance Criteria\r\n\r\n- The sender is now responsible for sending the link data. What this means:\r\n  - We get the link data when creating message in the input, with a debounce\r\n  - When the message is sent, the new data is attached to it and propagated to other users\r\n- The receivers no longer fetch the data themselves\r\n  - The link will still show as normal (or not in the special cases of images only)\r\n  - The receiver uses the data directly from the Message and updates its model\r\n- The unfurled image/whatever still shows as before (some unfurls might not be pretty depending on whether or not they need the new design)\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/10863/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 1,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/10863/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
