{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/10995",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/10995/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/10995/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/10995/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/10995",
  "id": 1747926252,
  "node_id": "I_kwDOD5KrTM5oLzzs",
  "number": 10995,
  "title": "Implement \"View only\" permission for channels",
  "user": {
    "login": "jrainville",
    "id": 11926403,
    "node_id": "MDQ6VXNlcjExOTI2NDAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jrainville",
    "html_url": "https://github.com/jrainville",
    "followers_url": "https://api.github.com/users/jrainville/followers",
    "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
    "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
    "organizations_url": "https://api.github.com/users/jrainville/orgs",
    "repos_url": "https://api.github.com/users/jrainville/repos",
    "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jrainville/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2588688093,
      "node_id": "MDU6TGFiZWwyNTg4Njg4MDkz",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/Communities",
      "name": "Communities",
      "color": "3923e0",
      "default": false,
      "description": ""
    },
    {
      "id": 3047427135,
      "node_id": "MDU6TGFiZWwzMDQ3NDI3MTM1",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/feature",
      "name": "feature",
      "color": "0E8A16",
      "default": false,
      "description": ""
    },
    {
      "id": 3955125927,
      "node_id": "LA_kwDOD5KrTM7rvm6n",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Communities",
      "name": "E:Communities",
      "color": "E56631",
      "default": false,
      "description": ""
    },
    {
      "id": 4548141040,
      "node_id": "LA_kwDOD5KrTM8AAAABDxcf8A",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/messenger-team",
      "name": "messenger-team",
      "color": "232858",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "0x-r4bbit",
    "id": 445106,
    "node_id": "MDQ6VXNlcjQ0NTEwNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/445106?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/0x-r4bbit",
    "html_url": "https://github.com/0x-r4bbit",
    "followers_url": "https://api.github.com/users/0x-r4bbit/followers",
    "following_url": "https://api.github.com/users/0x-r4bbit/following{/other_user}",
    "gists_url": "https://api.github.com/users/0x-r4bbit/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/0x-r4bbit/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/0x-r4bbit/subscriptions",
    "organizations_url": "https://api.github.com/users/0x-r4bbit/orgs",
    "repos_url": "https://api.github.com/users/0x-r4bbit/repos",
    "events_url": "https://api.github.com/users/0x-r4bbit/events{/privacy}",
    "received_events_url": "https://api.github.com/users/0x-r4bbit/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "0x-r4bbit",
      "id": 445106,
      "node_id": "MDQ6VXNlcjQ0NTEwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/445106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x-r4bbit",
      "html_url": "https://github.com/0x-r4bbit",
      "followers_url": "https://api.github.com/users/0x-r4bbit/followers",
      "following_url": "https://api.github.com/users/0x-r4bbit/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x-r4bbit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x-r4bbit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x-r4bbit/subscriptions",
      "organizations_url": "https://api.github.com/users/0x-r4bbit/orgs",
      "repos_url": "https://api.github.com/users/0x-r4bbit/repos",
      "events_url": "https://api.github.com/users/0x-r4bbit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x-r4bbit/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/64",
    "html_url": "https://github.com/status-im/status-desktop/milestone/64",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/64/labels",
    "id": 9039503,
    "node_id": "MI_kwDOD5KrTM4Aie6P",
    "number": 64,
    "title": "0.13",
    "description": "Priorities **in priority order** for the 0.13 milestone:\r\n\r\n**1. Finish items started in 0.12**\r\n- Complete any outstanding issues related to pairing (for syncing) - Igor\r\n- Implement the 'Admin' role (issue #10114) - Mykhailo\r\n- Any remaining work to pay off tech. debt related to mutual contacts - Mishka\r\n- When creating/editing token based permission, ability to search for and selecting Collectables from OpenSea - MichaelC\r\n\r\n**2. Channel token permissions**\r\n- Create, edit and delete channel token permissions in the permissions admin screens\r\n- This includes the \"no tokens required to view this channel\" permission\r\n- All user facing channel token permissions functionality e.g. what happens when a user tries to access a token gated channel they don't have the required tokens to access, what happens when a user only has permissions to view a channel, etc...\r\n- If a community is an open (not token gated at the community level) community, if a channel is token gated AND if **no** \"no tokens required to view this channel\" permission for that channel exists, then the channel should be automatically encrypted.  If token gating is removed from a channel, the channel should become unencrypted.\r\n\r\n**3. DB perf improvements**\r\n- https://www.notion.so/Database-related-performance-1dbaa7ea894c461d885e55676683be07\r\n- Alex and Patryk to work on this, with help from Lukáš\r\n\r\n**4. Update app to use new 'Share URL' formats**\r\n- add functionality to status-go to generate the new 'Share URL' formats for sharing links to: User Profiles, Communities, Channel inside a Community (issue https://github.com/status-im/status-desktop/issues/10851)\r\n- Update everywhere a user can share a URL from to use the new URL format (issue https://github.com/status-im/status-desktop/issues/10852)\r\n- New/updated URL unroll designs for inside chat, including specific unrolls for the new User Profile, Community and Channel inside a Community URLs (issue https://github.com/status-im/status-desktop/issues/10585)\r\n- Ability to share a URL that points to a specific channel in a community (issue #10160)\r\n- Update all address inputs to accept a user pasting a 'share URL' into the input (in addition to being able to input the raw address).  This includes: Start new chat input, send contact request input in Settings, the import community key input, etc...\r\n- Update Status Desktops URL handler so that if Status is installed on a computer, when a user clicks on a Status 'Share URL' the app is launched (if not already running) and after signing in the user is automatically taken to the entity the Share URL represented inside the app.  e.g. if a user clicks on a URL for a Status Community, the user should be taken to the home screen for that community inside the Status App\r\n\r\n**5. Mint Assets functionality**\r\n- Also includes some small improvements to the mint Collectables functionality\r\n- Noelia, GravityBlast\r\n\r\n**6. Profile showcase backend**\r\n\r\n\r\n**--- For the Wallet team ---**\r\ntldr; continue building out Ben's wallet designs\r\n\r\n1. Complete any outstanding development related to the activity screens\r\n2. All accounts overview screens\r\n3. New settings screens\r\n4. Implement 'imported key and account' syncing and transfer between devices\r\n\r\n\r\n",
    "creator": {
      "login": "iurimatias",
      "id": 176720,
      "node_id": "MDQ6VXNlcjE3NjcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iurimatias",
      "html_url": "https://github.com/iurimatias",
      "followers_url": "https://api.github.com/users/iurimatias/followers",
      "following_url": "https://api.github.com/users/iurimatias/following{/other_user}",
      "gists_url": "https://api.github.com/users/iurimatias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iurimatias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iurimatias/subscriptions",
      "organizations_url": "https://api.github.com/users/iurimatias/orgs",
      "repos_url": "https://api.github.com/users/iurimatias/repos",
      "events_url": "https://api.github.com/users/iurimatias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iurimatias/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 57,
    "closed_issues": 202,
    "state": "open",
    "created_at": "2023-02-13T19:04:13Z",
    "updated_at": "2023-06-12T11:18:20Z",
    "due_on": "2023-06-16T07:00:00Z",
    "closed_at": null
  },
  "comments": 1,
  "created_at": "2023-06-08T13:44:00Z",
  "updated_at": "2023-06-12T07:20:09Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nPart of Epic #10598\r\n\r\nDepends on https://github.com/status-im/status-desktop/issues/10993\r\n\r\nImplement the \"View only\" permission for channels. Make it possible to create, edit and delete those permissions.\r\nOnly owners can create this permission.\r\n\r\nFigma: https://www.figma.com/file/17fc13UBFvInrLgNUKJJg5/Kuba%E2%8E%9CDesktop?type=design&node-id=22721-500627&t=czRGLCFONxOmFeu8-0\r\n\r\nThere should be a placeholder \"view only\" state for the Input implemented by Alexandra. Ask her for the details\r\n\r\nWhen there is no permission on a channel, everyone and read and write to it, but once **one** \"View only\" permission is added to a channel, only those that fulfill that permission can read from that channel. The channel still appears in the list, but it will be locked for those not fulfilling the permission.\r\n\r\nDo note the \"switch\" in the top right of the \"Who holds\" section. Unchecking that means that there is not token requirement, so \"anyone\" (everyone) fulfills the requirement. So making a channel permission when \"anyone is allowed to View only in #channel\" means that #channel becomes read-only for everyone, except admins and owners. That is essentially how announcements channels would be done.\r\n\r\nAn example of a  channel that has a \"View only\" permission with tokens, would be a vip-announcement channel, where only a subset of members can see that channel and admins and owners are still the only one being able to write.\r\n\r\nIt's also possible to mix \"View and post\" and \"View only\", meaning that only a subset would be able to write, then another subset would be able to read, of both use a token requirement, then some members will not be able to view the content of that channel. \r\n\r\n**Small details**:\r\n\r\n- **no** encryption for now. Just client handling\r\n- ignore the hidden permission setting for now\r\n- use a placeholder screen for the locked state (blurred screen). So we still show the channel, but it can be just a white Rectangle with placeholder text for now\r\n- reminder than admins and owners can ALWAYS read and write to all channels\r\n\r\n### Acceptance Criteria\r\n\r\n- Owners can create, edit and delete channel permissions for \"View only\" in the Permissions screen of the community management area\r\n- Unchecking the \"who holds\" switch makes the permission apply to everyone, making a channel read-only to everyone (except admins and owners) \r\n- Other users receive that permission and \r\n  - if they do **not** meet the requirement, a placeholder screen is shown when clicking the channel saying that they do not have access\r\n  - if they do meet the requirements, they can see the channel's content, but still can't write\r\n- Admins and owners can still see and post as normal as well, even if they do not meet the requirements\r\n\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/10995/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/10995/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1582771086",
    "html_url": "https://github.com/status-im/status-desktop/issues/10995#issuecomment-1582771086",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/10995",
    "id": 1582771086,
    "node_id": "IC_kwDOD5KrTM5eVyuO",
    "user": {
      "login": "jrainville",
      "id": 11926403,
      "node_id": "MDQ6VXNlcjExOTI2NDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11926403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrainville",
      "html_url": "https://github.com/jrainville",
      "followers_url": "https://api.github.com/users/jrainville/followers",
      "following_url": "https://api.github.com/users/jrainville/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrainville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrainville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrainville/subscriptions",
      "organizations_url": "https://api.github.com/users/jrainville/orgs",
      "repos_url": "https://api.github.com/users/jrainville/repos",
      "events_url": "https://api.github.com/users/jrainville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrainville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-08T15:08:01Z",
    "updated_at": "2023-06-08T15:08:01Z",
    "author_association": "MEMBER",
    "body": "PR for the input state https://github.com/status-im/status-desktop/pull/11001",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1582771086/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
