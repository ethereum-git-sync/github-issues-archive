{
  "url": "https://api.github.com/repos/status-im/status-desktop/issues/11203",
  "repository_url": "https://api.github.com/repos/status-im/status-desktop",
  "labels_url": "https://api.github.com/repos/status-im/status-desktop/issues/11203/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-desktop/issues/11203/comments",
  "events_url": "https://api.github.com/repos/status-im/status-desktop/issues/11203/events",
  "html_url": "https://github.com/status-im/status-desktop/issues/11203",
  "id": 1767199997,
  "node_id": "I_kwDOD5KrTM5pVVT9",
  "number": 11203,
  "title": "[StatusChatInput] Clean up StatusChatInput conditions in ChatColumnView.qml",
  "user": {
    "login": "alexandraB99",
    "id": 31625338,
    "node_id": "MDQ6VXNlcjMxNjI1MzM4",
    "avatar_url": "https://avatars.githubusercontent.com/u/31625338?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alexandraB99",
    "html_url": "https://github.com/alexandraB99",
    "followers_url": "https://api.github.com/users/alexandraB99/followers",
    "following_url": "https://api.github.com/users/alexandraB99/following{/other_user}",
    "gists_url": "https://api.github.com/users/alexandraB99/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alexandraB99/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alexandraB99/subscriptions",
    "organizations_url": "https://api.github.com/users/alexandraB99/orgs",
    "repos_url": "https://api.github.com/users/alexandraB99/repos",
    "events_url": "https://api.github.com/users/alexandraB99/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alexandraB99/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2087353959,
      "node_id": "MDU6TGFiZWwyMDg3MzUzOTU5",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/ui-team",
      "name": "ui-team",
      "color": "1111ff",
      "default": false,
      "description": ""
    },
    {
      "id": 3143640900,
      "node_id": "MDU6TGFiZWwzMTQzNjQwOTAw",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/chore",
      "name": "chore",
      "color": "5AD5E4",
      "default": false,
      "description": ""
    },
    {
      "id": 5939841887,
      "node_id": "LA_kwDOD5KrTM8AAAABYgrLXw",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Desktop%20ChatInput%20Markdown/Refactor",
      "name": "E:Desktop ChatInput Markdown/Refactor",
      "color": "9F12DB",
      "default": false,
      "description": ""
    },
    {
      "id": 6176453700,
      "node_id": "LA_kwDOD5KrTM8AAAABcCU0RA",
      "url": "https://api.github.com/repos/status-im/status-desktop/labels/E:Desktop%20Features%200.18",
      "name": "E:Desktop Features 0.18",
      "color": "E4311D",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-desktop/milestones/74",
    "html_url": "https://github.com/status-im/status-desktop/milestone/74",
    "labels_url": "https://api.github.com/repos/status-im/status-desktop/milestones/74/labels",
    "id": 9699162,
    "node_id": "MI_kwDOD5KrTM4Ak_9a",
    "number": 74,
    "title": "0.18",
    "description": "**1. Finish anything that wasn't completed in the previous 0.17 cycle**\r\n\r\n- And fix bugs as usual.  We need to keep tech. debt at a roughly fixed level as we grow out functionality, can't let it accumulate! ;-)\r\n\r\n- Ensure accounts stored on Keycard are taken into consideration for community permissions\r\n\r\n\r\n**2. Stress testing and perf**\r\n\r\n- Create a test user account with 5,000 mutual contacts. See what breaks, or if this causes poor performance. Then fix whatever found. Realistically the requirement is 'only' for the experience of having up to 2,000 mutual contacts to work well. But if we test with 5,000 mutual contacts, it will make it easier to see issues.\r\n\r\n- Create a test community that contains 20,000 members. Test, see what breaks and what perf. issues are encountered. Then fix whatever needs fixing. Member bar is probably one area that will have issues\r\n\r\n\r\n**3. Opt-in auto-update functionality**\r\n\r\n- Desktop app downloads update in the background, displays global informing user that update is available.  When user presses the 'Update' button, Status Desktop closes and simultaneously automatically launches an 'updater' app that performs the update.  When the update is complete, the 'updater app' closes itself and re-launches Status Desktop.  Or something like that ;-)\r\n\r\n\r\n**4. Message input improvements**\r\n\r\n- Fix all bugs with message input component\r\n\r\n- Needs to handle markdown entered into the message input field correctly\r\n\r\n- Add SpellChecking\r\n\r\n\r\n**5. Audio messages**\r\n\r\n- Re-enable the posting of Audio messages in 1on1, ad-hoc group chats and community chats\r\n\r\n\r\n**6. Restart work on Browser**\r\n\r\n- Start with conducting a spike to work out how can ensure we always have the latest version of Chromium in our app.  If a security critical bug is fixed in Chromium, how can we have that fix in our app in 24h to 48h?\r\n\r\n- Do we need to automate building our own fork of QtWebEngine, so we can create new builds of QtWebEngine each time a new version of Chromium is released?\r\n\r\n- Can we use the UnGoogled version of Chromium?\r\n\r\n- We need to answer the above questions before proceeding further with the browser work.\r\n\r\n\r\n**Possible items (these will probably be shifted to a subsequent milestone)**\r\n- Code Formatting\r\n- Start ENS functionality redesign/rebuild\r\n- Linking to Messages\r\n\r\n",
    "creator": {
      "login": "John-44",
      "id": 22846356,
      "node_id": "MDQ6VXNlcjIyODQ2MzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/22846356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/John-44",
      "html_url": "https://github.com/John-44",
      "followers_url": "https://api.github.com/users/John-44/followers",
      "following_url": "https://api.github.com/users/John-44/following{/other_user}",
      "gists_url": "https://api.github.com/users/John-44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/John-44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/John-44/subscriptions",
      "organizations_url": "https://api.github.com/users/John-44/orgs",
      "repos_url": "https://api.github.com/users/John-44/repos",
      "events_url": "https://api.github.com/users/John-44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/John-44/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 3,
    "closed_issues": 0,
    "state": "open",
    "created_at": "2023-07-26T10:27:53Z",
    "updated_at": "2023-09-25T16:55:53Z",
    "due_on": "2024-05-23T07:00:00Z",
    "closed_at": null
  },
  "comments": 1,
  "created_at": "2023-06-21T09:43:29Z",
  "updated_at": "2023-11-06T16:12:08Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "### Description\r\nMaybe introduce states setting properties like `enabled`, and `textInput.placeholderText` in order for the code to not grow bigger.\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/11203/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-desktop/issues/11203/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1600568920",
    "html_url": "https://github.com/status-im/status-desktop/issues/11203#issuecomment-1600568920",
    "issue_url": "https://api.github.com/repos/status-im/status-desktop/issues/11203",
    "id": 1600568920,
    "node_id": "IC_kwDOD5KrTM5fZr5Y",
    "user": {
      "login": "alexjba",
      "id": 47811206,
      "node_id": "MDQ6VXNlcjQ3ODExMjA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47811206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexjba",
      "html_url": "https://github.com/alexjba",
      "followers_url": "https://api.github.com/users/alexjba/followers",
      "following_url": "https://api.github.com/users/alexjba/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexjba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexjba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexjba/subscriptions",
      "organizations_url": "https://api.github.com/users/alexjba/orgs",
      "repos_url": "https://api.github.com/users/alexjba/repos",
      "events_url": "https://api.github.com/users/alexjba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexjba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-21T10:13:40Z",
    "updated_at": "2023-06-21T10:13:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Currently the logic is split between `RootStore` (using `isUserAllowedToSendMessage` and `chatInputPlaceHolderText`) and inline, directly in `ChatColumnView.qml` bindings. In RootStore we handle One-to-one chats and group chats and community/channels and others seems to be handled inline, in property bindings.\r\n\r\nThe RootStore properties are also used in multiple places to enable/disable other features if the user is not allowed to send messages. This might bring inconsistencies when the chat input is disabled for reasons handled elsewhere.\r\n\r\nI think we should also review all the flows where the user is currently not allowed to send messages to determine if we need to enable/disable other features like `Delete his own messages`, `View messages received before being blocked from chat`.\r\nAfter this step we can proceed on refactoring the `enabled` and `textInput.placeholderText`.\r\n\r\nWould be nice if the refactoring brings in these improvements:\r\n1. Aggregate the business logic to be clear on which conditions the chat is disabled (probably a state based mechanism would be nice here as @alexandraB99 mentioned) and what placeholder text should be used for each case.\r\n2. Make it clear what are the conditions where other features should be enabled/disabled (Eg. `Delete his own messages`, `View messages received before being blocked from chat`)",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-desktop/issues/comments/1600568920/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
