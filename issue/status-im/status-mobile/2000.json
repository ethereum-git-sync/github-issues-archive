{
  "url": "https://api.github.com/repos/status-im/status-mobile/issues/2000",
  "repository_url": "https://api.github.com/repos/status-im/status-mobile",
  "labels_url": "https://api.github.com/repos/status-im/status-mobile/issues/2000/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-mobile/issues/2000/comments",
  "events_url": "https://api.github.com/repos/status-im/status-mobile/issues/2000/events",
  "html_url": "https://github.com/status-im/status-mobile/issues/2000",
  "id": 262519530,
  "node_id": "MDU6SXNzdWUyNjI1MTk1MzA=",
  "number": 2000,
  "title": "Refactor imperative multiple dispatch usage of navigate-to",
  "user": {
    "login": "goranjovic",
    "id": 711764,
    "node_id": "MDQ6VXNlcjcxMTc2NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/711764?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/goranjovic",
    "html_url": "https://github.com/goranjovic",
    "followers_url": "https://api.github.com/users/goranjovic/followers",
    "following_url": "https://api.github.com/users/goranjovic/following{/other_user}",
    "gists_url": "https://api.github.com/users/goranjovic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/goranjovic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/goranjovic/subscriptions",
    "organizations_url": "https://api.github.com/users/goranjovic/orgs",
    "repos_url": "https://api.github.com/users/goranjovic/repos",
    "events_url": "https://api.github.com/users/goranjovic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/goranjovic/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 692308696,
      "node_id": "MDU6TGFiZWw2OTIzMDg2OTY=",
      "url": "https://api.github.com/repos/status-im/status-mobile/labels/tech-debt",
      "name": "tech-debt",
      "color": "e99695",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "janherich",
    "id": 1910609,
    "node_id": "MDQ6VXNlcjE5MTA2MDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1910609?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/janherich",
    "html_url": "https://github.com/janherich",
    "followers_url": "https://api.github.com/users/janherich/followers",
    "following_url": "https://api.github.com/users/janherich/following{/other_user}",
    "gists_url": "https://api.github.com/users/janherich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/janherich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/janherich/subscriptions",
    "organizations_url": "https://api.github.com/users/janherich/orgs",
    "repos_url": "https://api.github.com/users/janherich/repos",
    "events_url": "https://api.github.com/users/janherich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/janherich/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "janherich",
      "id": 1910609,
      "node_id": "MDQ6VXNlcjE5MTA2MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1910609?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janherich",
      "html_url": "https://github.com/janherich",
      "followers_url": "https://api.github.com/users/janherich/followers",
      "following_url": "https://api.github.com/users/janherich/following{/other_user}",
      "gists_url": "https://api.github.com/users/janherich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janherich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janherich/subscriptions",
      "organizations_url": "https://api.github.com/users/janherich/orgs",
      "repos_url": "https://api.github.com/users/janherich/repos",
      "events_url": "https://api.github.com/users/janherich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janherich/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2017-10-03T17:40:04Z",
  "updated_at": "2017-11-13T14:32:55Z",
  "closed_at": "2017-11-13T14:32:55Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "[comment]: # (Please replace ... with your information. Remove < and >)\r\n\r\n### Description\r\n\r\n[comment]: # (Feature or Bug? i.e Type: Bug)\r\n*Type*: Refactor\r\n\r\nWhen we want app to navigate to a different screen we dispatch a re-frame event `navigate-to` with the screen identifier as the parameter, e.g.\r\n\r\n```(re-frame/dispatch [:navigate-to :discover-search-results])```\r\n\r\nSo far, so good. Now, if the said screen depends on some parameter that we need to pass from the current context to its rendering function, we can't do that explicitly. Instead, we have to first change the state of app-db explicitly, then dispatch the same code as above, e.g.\r\n\r\n```\r\n(do (re-frame/dispatch [:set :discover-search-tags [tag]])\r\n    (re-frame/dispatch [:navigate-to :discover-search-results]))\r\n```\r\n\r\nAnd then screen renderer needs to use the value set by the previous dispatch.\r\n\r\nThis is inconvenient due to a few reasons:\r\n- Two dispatches instead of one, I'm assuming just one would be a tad faster\r\n- Correct behavior depends on dispatches being done in this order (probably true anyway, but still)\r\n- We lose a lot of the edge gained by functional/reactive style when we revert to imperative style with mutable global state and all.\r\n",
  "closed_by": {
    "login": "asemiankevich",
    "id": 28752642,
    "node_id": "MDQ6VXNlcjI4NzUyNjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/28752642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/asemiankevich",
    "html_url": "https://github.com/asemiankevich",
    "followers_url": "https://api.github.com/users/asemiankevich/followers",
    "following_url": "https://api.github.com/users/asemiankevich/following{/other_user}",
    "gists_url": "https://api.github.com/users/asemiankevich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/asemiankevich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/asemiankevich/subscriptions",
    "organizations_url": "https://api.github.com/users/asemiankevich/orgs",
    "repos_url": "https://api.github.com/users/asemiankevich/repos",
    "events_url": "https://api.github.com/users/asemiankevich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/asemiankevich/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/2000/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-mobile/issues/2000/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/333930648",
    "html_url": "https://github.com/status-im/status-mobile/issues/2000#issuecomment-333930648",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/2000",
    "id": 333930648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzkzMDY0OA==",
    "user": {
      "login": "jeluard",
      "id": 359723,
      "node_id": "MDQ6VXNlcjM1OTcyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/359723?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeluard",
      "html_url": "https://github.com/jeluard",
      "followers_url": "https://api.github.com/users/jeluard/followers",
      "following_url": "https://api.github.com/users/jeluard/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeluard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeluard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeluard/subscriptions",
      "organizations_url": "https://api.github.com/users/jeluard/orgs",
      "repos_url": "https://api.github.com/users/jeluard/repos",
      "events_url": "https://api.github.com/users/jeluard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeluard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-03T18:10:29Z",
    "updated_at": "2017-10-03T18:10:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "It makes sense to consider #1592 when implementing this.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/333930648/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/334015916",
    "html_url": "https://github.com/status-im/status-mobile/issues/2000#issuecomment-334015916",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/2000",
    "id": 334015916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDAxNTkxNg==",
    "user": {
      "login": "janherich",
      "id": 1910609,
      "node_id": "MDQ6VXNlcjE5MTA2MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1910609?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janherich",
      "html_url": "https://github.com/janherich",
      "followers_url": "https://api.github.com/users/janherich/followers",
      "following_url": "https://api.github.com/users/janherich/following{/other_user}",
      "gists_url": "https://api.github.com/users/janherich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janherich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janherich/subscriptions",
      "organizations_url": "https://api.github.com/users/janherich/orgs",
      "repos_url": "https://api.github.com/users/janherich/repos",
      "events_url": "https://api.github.com/users/janherich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janherich/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-04T00:17:14Z",
    "updated_at": "2017-10-04T07:57:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "I propose intermediate solution, not bringing another library in, or depending on https://reactnavigation.org/ (even if that is what we probably should do in the long run), but something which could be done in minimal effort and still solve the imperative approach which we are unfortunately currently fielding all over the app.\r\n\r\nThe case with 2-event dispatch described by @goranjovic can be currently \"solved\" by overloading `status-im.ui.screens.navigation/preload-data!` multimethod for particular view id, so in the case above `:discover-search-tags`. \r\nThe `[:set :discover-search-tags [tag]]` event can be replaced by doing the equivalent db operation in the multimethod, and as the multimethod is called in the `:navigate-to` event handler as an normal function (or rather, interceptor in the interceptor chain, but it's still synchronous call), it would actually satisfy the 3 points mentioned.\r\nBut, I think it's still not the correct approach because of the following reasons:\r\n\r\n* `enrich` middleware (that's how `preload-data!`) is expected to be pure function taking `:db` and returning new `:db`, what if we need to return some other coeffects/effects as well, as it's the case of `preload-data!` implementation for the `:chat` view ? Then we are forced to leave functional paradigm do again do imperative stuff, calling `dispatch`, saving/retrieving data from realm, etc. \r\n* although defining this preloading through multimethods may look convenient, I think it's actually obfuscating things and instead of simple following the event chain when investigating what's happening, you have to hunt for `preload-data!` implementation, whenever you want to understand what's happening when `[:navigate-to some-view]` is executed.  Multimethods are great for many things, mostly when you want to provide open dispatch and ability to extend functionality of your library to end-users who do not control the source code, but that's really not the case here. \r\n\r\nSo what I think we should do instead is to simply encapsulate navigation logic in couple of public (pure) functions in the `status-im.ui.screens.navigation` namespace, after all, it's just about changing the navigation-stack/modal/tabs data correctly in app-db. \r\nWe will also leave default event-handlers there, so if as result of some action, user needs to be just navigated to particular view without any other data change or effect, event `[:navigate-to some-view]` could be fired just as before. \r\nBut, when additional action is needed, like in the example of navigating to `:discover-search-tags`, we will just define new event for that:\r\n```clj\r\n(handlers/register-handler-db\r\n  :navigate-to-discover-search-tags\r\n  (fb [db [_ tag]]\r\n     (-> db \r\n         (navigation/navigate-to :discover-search-tags)\r\n         (assoc :discover-search-tags [tag]))))\r\n```\r\nOf course, instead of `register-handler-db`, we could use `register-handler-fx` if other coeffects/effects other then changing the db are needed. \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/334015916/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/334062197",
    "html_url": "https://github.com/status-im/status-mobile/issues/2000#issuecomment-334062197",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/2000",
    "id": 334062197,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDA2MjE5Nw==",
    "user": {
      "login": "goranjovic",
      "id": 711764,
      "node_id": "MDQ6VXNlcjcxMTc2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/711764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/goranjovic",
      "html_url": "https://github.com/goranjovic",
      "followers_url": "https://api.github.com/users/goranjovic/followers",
      "following_url": "https://api.github.com/users/goranjovic/following{/other_user}",
      "gists_url": "https://api.github.com/users/goranjovic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/goranjovic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/goranjovic/subscriptions",
      "organizations_url": "https://api.github.com/users/goranjovic/orgs",
      "repos_url": "https://api.github.com/users/goranjovic/repos",
      "events_url": "https://api.github.com/users/goranjovic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/goranjovic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-04T06:32:32Z",
    "updated_at": "2017-10-04T06:35:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "In any case, let's hold on this one. We can probably live with it for several more weeks at least.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/334062197/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
