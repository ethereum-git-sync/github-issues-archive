{
  "url": "https://api.github.com/repos/status-im/status-mobile/issues/2294",
  "repository_url": "https://api.github.com/repos/status-im/status-mobile",
  "labels_url": "https://api.github.com/repos/status-im/status-mobile/issues/2294/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-mobile/issues/2294/comments",
  "events_url": "https://api.github.com/repos/status-im/status-mobile/issues/2294/events",
  "html_url": "https://github.com/status-im/status-mobile/issues/2294",
  "id": 268010821,
  "node_id": "MDU6SXNzdWUyNjgwMTA4MjE=",
  "number": 2294,
  "title": "[RFC] Improve developper experience",
  "user": {
    "login": "yenda",
    "id": 1181225,
    "node_id": "MDQ6VXNlcjExODEyMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1181225?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/yenda",
    "html_url": "https://github.com/yenda",
    "followers_url": "https://api.github.com/users/yenda/followers",
    "following_url": "https://api.github.com/users/yenda/following{/other_user}",
    "gists_url": "https://api.github.com/users/yenda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/yenda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/yenda/subscriptions",
    "organizations_url": "https://api.github.com/users/yenda/orgs",
    "repos_url": "https://api.github.com/users/yenda/repos",
    "events_url": "https://api.github.com/users/yenda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/yenda/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "yenda",
    "id": 1181225,
    "node_id": "MDQ6VXNlcjExODEyMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1181225?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/yenda",
    "html_url": "https://github.com/yenda",
    "followers_url": "https://api.github.com/users/yenda/followers",
    "following_url": "https://api.github.com/users/yenda/following{/other_user}",
    "gists_url": "https://api.github.com/users/yenda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/yenda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/yenda/subscriptions",
    "organizations_url": "https://api.github.com/users/yenda/orgs",
    "repos_url": "https://api.github.com/users/yenda/repos",
    "events_url": "https://api.github.com/users/yenda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/yenda/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "yenda",
      "id": 1181225,
      "node_id": "MDQ6VXNlcjExODEyMjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1181225?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yenda",
      "html_url": "https://github.com/yenda",
      "followers_url": "https://api.github.com/users/yenda/followers",
      "following_url": "https://api.github.com/users/yenda/following{/other_user}",
      "gists_url": "https://api.github.com/users/yenda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yenda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yenda/subscriptions",
      "organizations_url": "https://api.github.com/users/yenda/orgs",
      "repos_url": "https://api.github.com/users/yenda/repos",
      "events_url": "https://api.github.com/users/yenda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yenda/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/status-im/status-mobile/milestones/17",
    "html_url": "https://github.com/status-im/status-mobile/milestone/17",
    "labels_url": "https://api.github.com/repos/status-im/status-mobile/milestones/17/labels",
    "id": 2850056,
    "node_id": "MDk6TWlsZXN0b25lMjg1MDA1Ng==",
    "number": 17,
    "title": "0.9.13",
    "description": "",
    "creator": {
      "login": "oskarth",
      "id": 1552237,
      "node_id": "MDQ6VXNlcjE1NTIyMzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1552237?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oskarth",
      "html_url": "https://github.com/oskarth",
      "followers_url": "https://api.github.com/users/oskarth/followers",
      "following_url": "https://api.github.com/users/oskarth/following{/other_user}",
      "gists_url": "https://api.github.com/users/oskarth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oskarth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oskarth/subscriptions",
      "organizations_url": "https://api.github.com/users/oskarth/orgs",
      "repos_url": "https://api.github.com/users/oskarth/repos",
      "events_url": "https://api.github.com/users/oskarth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oskarth/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 149,
    "state": "closed",
    "created_at": "2017-10-19T08:51:49Z",
    "updated_at": "2019-07-22T12:27:00Z",
    "due_on": null,
    "closed_at": "2018-05-17T18:15:11Z"
  },
  "comments": 3,
  "created_at": "2017-10-24T12:24:14Z",
  "updated_at": "2018-02-03T22:30:43Z",
  "closed_at": "2018-02-03T22:30:43Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "The goal of this RFC in to pinpoint the different tasks that will need to be tackled in order to improve the developer experience on the status-react project.\r\n\r\nThe idea is that each comment to this issue should be edited in that first post and once a consensus is reached we can create an epic out of this RFC.\r\n\r\n## Work on coeffects\r\n\r\n### Rationale\r\n\r\nSome coeffects are passed as function, that is not how coeffects are suppose to work, they should be passed as data.\r\n\r\nThis is important because it makes it easier to work on and debug events who gets coeffects as data rather than function. Also the fact that a coeffects actually provides a function is confusing, especially if we want to have more new  developpers joining in.\r\n\r\nhttps://github.com/status-im/status-react/blob/2e57d476a825742863bbd416862b7b69f08e3672/src/status_im/chat/events.cljs#L30-L33\r\n\r\nThere is also some coeffects that are unnecessary because the data is already in the app-db:\r\n\r\n### Execution\r\n\r\nThis repo can give exemples of how to do parametrized coeffects https://github.com/deg/re-frame-storage-fx/blob/master/src/com/degel/re_frame/storage.cljs\r\n\r\n- [ ] create issue\r\n\r\n## Finish refactoring\r\n\r\n### Rationale\r\n\r\nThis is important because right now the mix of old/new style of events is confusing and the old style is harder to test. It will enable the next step which is to have way more tests\r\n\r\n- [ ] Remove the last u/side-effects to finish transition to more idiomatic re-frame application\r\n\r\n\r\n## Refactor and update realm\r\n\r\n### Rationale\r\n\r\nIt is necessary because there is a known issue with XCode 9 and the old version of realm that we are using.\r\nAlso it is the database which is an important component of the application so it makes sense to use it properly and update it regularly to be able to quickly respond to security patches for instance.\r\n\r\n### Execution: Update realm usage \r\n\r\n- [ ]  modify, deleted data as effects\r\n- [ ]  get data as coeffect\r\n\r\nThis repo can be useful https://github.com/deg/re-frame-storage-fx/blob/master/src/com/degel/re_frame/storage.cljs\r\n\r\n### Execution: update realm \r\n\r\n- [x] Issue https://github.com/status-im/status-react/issues/1926\r\n- [x] PR https://github.com/status-im/status-react/pull/2236\r\n\r\n\r\n## Node is already running error when connecting to an account\r\n\r\n### Rationale\r\n\r\nThis is annoying because a figwheel reload is basically useless. It will be even more important once we can start the app where we want because we can then fix the red screen and figwheel reload get us back there without any further action. But until this is fixed it won't be possible when trying to connect to an account after a red screen and figwheel reload, I always get this node is already running error when connecting to an account\r\n\r\n### Execution\r\n\r\n- [ ] create issue\r\n\r\n## Improve development experience: start the app in a specific state\r\n\r\n### Rationale\r\n\r\n#### Goal\r\n\r\nAs a developer I want to be able to start the application with a specific configured state\r\na configuration file should allow me to choose the account, the screen and the initial app-db I want to work with.\r\n\r\nI can see this also being useful for onboarding, a new developper could quickly get to work on a feature if we provide him with the configuration file and mockup of the feature he has to work on.\r\n\r\n#### Current situation\r\n\r\nAs a developper I have to login and go to the screen I am working on manually everytime I restart the application\r\nIf the data is deleted I also have to recover the account and add contacts, messages and so on to recover the state I was working on.\r\n\r\n### Execution\r\n\r\n- [ ] create issue\r\n\r\n## Document the debug server\r\n\r\n### what is it ?\r\n\r\n### what can I use it for ?\r\n\r\n### How can I use it ?\r\n\r\n\r\n## Remove derived data from app-db\r\n\r\n### Rationale\r\n\r\nWe should not duplicated fields in the app-db, subscription are cached, map lookups have a negligeable cost, so duplicating a field to make it \"more accessible\" is just a potential source of potential inconsistency and additional refactoring burden\r\n\r\n### Execution\r\n\r\n- [ ] create issue\r\n \r\n## Update react/react-native and tolling\r\n\r\nThis one is last because it is huge. I have already done part of it in https://github.com/status-im/status-react/pull/2217\r\n\r\nThere is multiple issues with that upgrade\r\n\r\n### from 0.47 there is a breaking change preventing most deps from compiling\r\nthe easy fix is to upgrade them, most patched this but only in their later version, which introduces more breaking changes, for instance splash screen changed it's package name\r\n\r\n### some of status deps are owned by us and not updated yet\r\nI patched all of them to make it work and I still need to submit PRs but some are referenced by github repo iirc so that would be a issue if it is merged in their master because the builds with old react won't work, I don't think the fixes are retro compatible\r\n\r\n### nodify doesn't seem to work anymore\r\napparently we are using some modules from node which were ported in react-native with a hack and it doesn't seem to work anymore, that is the current state of my PR, stucked on an issue with the module \"child_process\"\r\n\r\n### realm need to be updated first because the latest version doesn't work anymore\r\n\r\n### realm is probably not the only library that made breaking changes\r\n\r\n### this effort could be merged with upgrade to reagent 8 and latest cljs\r\nwhen reagent 8 will be out of alpha we should upgrade. It makes uses of the latest cljs functionnality which makes it possible to require npm dependencies in the project.clj file and require the modules in the ns form which will clean up our code a bit and simplify the tooling and building of the app for newcomers.\r\n\r\n## Get devtools to work\r\n\r\nI don't know if I am the only one but when trying to use the remote dev tools I never get passed the login because it is too slow",
  "closed_by": {
    "login": "yenda",
    "id": 1181225,
    "node_id": "MDQ6VXNlcjExODEyMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1181225?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/yenda",
    "html_url": "https://github.com/yenda",
    "followers_url": "https://api.github.com/users/yenda/followers",
    "following_url": "https://api.github.com/users/yenda/following{/other_user}",
    "gists_url": "https://api.github.com/users/yenda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/yenda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/yenda/subscriptions",
    "organizations_url": "https://api.github.com/users/yenda/orgs",
    "repos_url": "https://api.github.com/users/yenda/repos",
    "events_url": "https://api.github.com/users/yenda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/yenda/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/2294/reactions",
    "total_count": 2,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-mobile/issues/2294/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/338975660",
    "html_url": "https://github.com/status-im/status-mobile/issues/2294#issuecomment-338975660",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/2294",
    "id": 338975660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODk3NTY2MA==",
    "user": {
      "login": "rasom",
      "id": 2364994,
      "node_id": "MDQ6VXNlcjIzNjQ5OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2364994?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rasom",
      "html_url": "https://github.com/rasom",
      "followers_url": "https://api.github.com/users/rasom/followers",
      "following_url": "https://api.github.com/users/rasom/following{/other_user}",
      "gists_url": "https://api.github.com/users/rasom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rasom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rasom/subscriptions",
      "organizations_url": "https://api.github.com/users/rasom/orgs",
      "repos_url": "https://api.github.com/users/rasom/repos",
      "events_url": "https://api.github.com/users/rasom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rasom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-24T12:38:30Z",
    "updated_at": "2017-10-24T12:38:30Z",
    "author_association": "MEMBER",
    "body": "> Some coeffects are passed as function, that is not how coeffects are suppose to work, they should be passed as data.\r\n\r\nplease add links to examples",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/338975660/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/338982562",
    "html_url": "https://github.com/status-im/status-mobile/issues/2294#issuecomment-338982562",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/2294",
    "id": 338982562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODk4MjU2Mg==",
    "user": {
      "login": "janherich",
      "id": 1910609,
      "node_id": "MDQ6VXNlcjE5MTA2MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1910609?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janherich",
      "html_url": "https://github.com/janherich",
      "followers_url": "https://api.github.com/users/janherich/followers",
      "following_url": "https://api.github.com/users/janherich/following{/other_user}",
      "gists_url": "https://api.github.com/users/janherich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janherich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janherich/subscriptions",
      "organizations_url": "https://api.github.com/users/janherich/orgs",
      "repos_url": "https://api.github.com/users/janherich/repos",
      "events_url": "https://api.github.com/users/janherich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janherich/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-24T13:03:46Z",
    "updated_at": "2017-10-24T13:03:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Example of `:coxf` containing function instead of data: https://github.com/status-im/status-react/blob/develop/src/status_im/chat/events.cljs#L31\r\n\r\nThe problem here is that the coeffect is dynamic, eq dependent on the event parameter/s and `inject-coeffect` middleware is executed at the event registration time.\r\n\r\nSo standard parametric coeffects can't be used in this case, because the data is looked up upon parameter unknown at the event registration time.\r\n\r\nI still think it's better to have those function coeffects rather then no coeffects, this way, at least the dependencies of the handler are stated explicitly and you don't have to mock/re-define symbols during unit testing, you just pass some deterministic function for the coeffect, instead of the \"real\" one.\r\n\r\nThe only way how I can see this could be solved is with some custom middleware for injecting coeffects and I don't know if it's worth the effort. ",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/338982562/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/339255994",
    "html_url": "https://github.com/status-im/status-mobile/issues/2294#issuecomment-339255994",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/2294",
    "id": 339255994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTI1NTk5NA==",
    "user": {
      "login": "jeluard",
      "id": 359723,
      "node_id": "MDQ6VXNlcjM1OTcyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/359723?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeluard",
      "html_url": "https://github.com/jeluard",
      "followers_url": "https://api.github.com/users/jeluard/followers",
      "following_url": "https://api.github.com/users/jeluard/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeluard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeluard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeluard/subscriptions",
      "organizations_url": "https://api.github.com/users/jeluard/orgs",
      "repos_url": "https://api.github.com/users/jeluard/repos",
      "events_url": "https://api.github.com/users/jeluard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeluard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-25T08:33:26Z",
    "updated_at": "2017-10-25T08:33:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Great plan!\r\n\r\nAbout `start the app in a specific state`: in case of exception / crash we could also dump users `app-db` and push them somewhere (if they agree).",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/339255994/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
