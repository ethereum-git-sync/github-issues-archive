{
  "url": "https://api.github.com/repos/status-im/status-mobile/issues/15552",
  "repository_url": "https://api.github.com/repos/status-im/status-mobile",
  "labels_url": "https://api.github.com/repos/status-im/status-mobile/issues/15552/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-mobile/issues/15552/comments",
  "events_url": "https://api.github.com/repos/status-im/status-mobile/issues/15552/events",
  "html_url": "https://github.com/status-im/status-mobile/issues/15552",
  "id": 1649290578,
  "node_id": "I_kwDOAx4p2c5iTi1S",
  "number": 15552,
  "title": "proper usage of :f> ",
  "user": {
    "login": "flexsurfer",
    "id": 11790366,
    "node_id": "MDQ6VXNlcjExNzkwMzY2",
    "avatar_url": "https://avatars.githubusercontent.com/u/11790366?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/flexsurfer",
    "html_url": "https://github.com/flexsurfer",
    "followers_url": "https://api.github.com/users/flexsurfer/followers",
    "following_url": "https://api.github.com/users/flexsurfer/following{/other_user}",
    "gists_url": "https://api.github.com/users/flexsurfer/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/flexsurfer/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/flexsurfer/subscriptions",
    "organizations_url": "https://api.github.com/users/flexsurfer/orgs",
    "repos_url": "https://api.github.com/users/flexsurfer/repos",
    "events_url": "https://api.github.com/users/flexsurfer/events{/privacy}",
    "received_events_url": "https://api.github.com/users/flexsurfer/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 330296931,
      "node_id": "MDU6TGFiZWwzMzAyOTY5MzE=",
      "url": "https://api.github.com/repos/status-im/status-mobile/labels/bug",
      "name": "bug",
      "color": "fc2929",
      "default": true,
      "description": null
    },
    {
      "id": 692308696,
      "node_id": "MDU6TGFiZWw2OTIzMDg2OTY=",
      "url": "https://api.github.com/repos/status-im/status-mobile/labels/tech-debt",
      "name": "tech-debt",
      "color": "e99695",
      "default": false,
      "description": null
    },
    {
      "id": 783781483,
      "node_id": "MDU6TGFiZWw3ODM3ODE0ODM=",
      "url": "https://api.github.com/repos/status-im/status-mobile/labels/performance",
      "name": "performance",
      "color": "dd3bd8",
      "default": false,
      "description": null
    },
    {
      "id": 4052480148,
      "node_id": "LA_kwDOAx4p2c7xi_CU",
      "url": "https://api.github.com/repos/status-im/status-mobile/labels/E:TechDebt",
      "name": "E:TechDebt",
      "color": "502771",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-03-31T12:42:14Z",
  "updated_at": "2023-04-24T12:38:13Z",
  "closed_at": "2023-04-24T12:38:13Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": ":f> shortcut can be used to create function components from Reagent components (functions), where both RAtoms and Hooks work.\r\n\r\nit seems like in some cases this works inefficient, investigate how to use it properly\r\n\r\nit seems like when using reagent atoms from outside, functional component will be intialized again\r\n\r\nlike\r\n\r\n```clojure\r\n(fn []\r\n  (let [atom (rf/sub [:sub]]\r\n     (fn []\r\n         [:f>\r\n             (fn []\r\n                [rn/text atom]\r\n```\r\n\r\n**SOLUTION:**\r\n\r\ndon't use anonymous inline functions\r\n\r\n\r\n\r\n\r\n```clojure\r\n(defn functional-comp []\r\n[rn/text atom])\r\n\r\n\r\n(fn []\r\n  (let [atom (rf/sub [:sub]]\r\n     (fn []\r\n         [:f>  functional-comp])))           \r\n```\r\n",
  "closed_by": {
    "login": "flexsurfer",
    "id": 11790366,
    "node_id": "MDQ6VXNlcjExNzkwMzY2",
    "avatar_url": "https://avatars.githubusercontent.com/u/11790366?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/flexsurfer",
    "html_url": "https://github.com/flexsurfer",
    "followers_url": "https://api.github.com/users/flexsurfer/followers",
    "following_url": "https://api.github.com/users/flexsurfer/following{/other_user}",
    "gists_url": "https://api.github.com/users/flexsurfer/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/flexsurfer/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/flexsurfer/subscriptions",
    "organizations_url": "https://api.github.com/users/flexsurfer/orgs",
    "repos_url": "https://api.github.com/users/flexsurfer/repos",
    "events_url": "https://api.github.com/users/flexsurfer/events{/privacy}",
    "received_events_url": "https://api.github.com/users/flexsurfer/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/15552/reactions",
    "total_count": 6,
    "+1": 6,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-mobile/issues/15552/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/1492590074",
    "html_url": "https://github.com/status-im/status-mobile/issues/15552#issuecomment-1492590074",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/15552",
    "id": 1492590074,
    "node_id": "IC_kwDOAx4p2c5Y9x36",
    "user": {
      "login": "ulisesmac",
      "id": 90291778,
      "node_id": "MDQ6VXNlcjkwMjkxNzc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/90291778?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ulisesmac",
      "html_url": "https://github.com/ulisesmac",
      "followers_url": "https://api.github.com/users/ulisesmac/followers",
      "following_url": "https://api.github.com/users/ulisesmac/following{/other_user}",
      "gists_url": "https://api.github.com/users/ulisesmac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ulisesmac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ulisesmac/subscriptions",
      "organizations_url": "https://api.github.com/users/ulisesmac/orgs",
      "repos_url": "https://api.github.com/users/ulisesmac/repos",
      "events_url": "https://api.github.com/users/ulisesmac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ulisesmac/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-31T20:47:34Z",
    "updated_at": "2023-03-31T20:48:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "That's because in this example the functional component is an inline function, so each time the component is re-rendered its body is re-executed, then Clojure redefines the functions in its body:\r\n\r\n```clojure\r\n(fn []\r\n  (let [atom (rf/sub [:sub]]\r\n     (fn []\r\n     ;; the body starts here\r\n         [:f>\r\n             (fn [] ;; <- this is the inline functional component redefined each time a render or re-render happens\r\n                [rn/text atom]\r\n```\r\n\r\nThis means instead of re-rendering the inline component we are mounting a whole new component, so hooks are reset.\r\n\r\nTo properly use hooks with ratoms we can follow this pattern:\r\n```clojure\r\n(defn my-f-component [props]\r\n  (let [my-ratom (reagent/atom nil)] ;; If we're going to use ratoms, then we create a form-2 component\r\n    (fn [props]\r\n      (let [my-hook (useSomething ,,,)] ;; Hooks you need\r\n        ;; view code where both hooks and ratoms work\r\n        ))))\r\n\r\n(defn exposed-component [props] ; It seems unnecessary to create this \"wrapper\",\r\n                                ; but it helps not to worry if this component\r\n                                ; must be called using `:f>` or not, we just use \r\n                                ; `exposed-component` as any other component\r\n  [:f> my-f-component props])\r\n```\r\n\r\nAlso we can configure the reagent compiler to always create functional components, if so, we could avoid the `:f>`, but it has a slightly slower performance.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/1492590074/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/1514436506",
    "html_url": "https://github.com/status-im/status-mobile/issues/15552#issuecomment-1514436506",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/15552",
    "id": 1514436506,
    "node_id": "IC_kwDOAx4p2c5aRHea",
    "user": {
      "login": "flexsurfer",
      "id": 11790366,
      "node_id": "MDQ6VXNlcjExNzkwMzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/11790366?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flexsurfer",
      "html_url": "https://github.com/flexsurfer",
      "followers_url": "https://api.github.com/users/flexsurfer/followers",
      "following_url": "https://api.github.com/users/flexsurfer/following{/other_user}",
      "gists_url": "https://api.github.com/users/flexsurfer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flexsurfer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flexsurfer/subscriptions",
      "organizations_url": "https://api.github.com/users/flexsurfer/orgs",
      "repos_url": "https://api.github.com/users/flexsurfer/repos",
      "events_url": "https://api.github.com/users/flexsurfer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flexsurfer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-19T09:41:45Z",
    "updated_at": "2023-04-19T09:42:37Z",
    "author_association": "MEMBER",
    "body": "yes @ulisesmac you're right, it's not about functional components or hooks, it's about an anonymous inline function\r\n\r\n```clojure\r\n(defn parent-comp []\r\n    [(fn [] [test-comp])])\r\n```\r\nin this example, `test-comp` will be initialized each time when parent component is rendered\r\n\r\n\r\nalso, i found that safe-area usage will lead to reinitialization, hope we'll replace its usage with constants soon and we won't have this problem ",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/1514436506/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
