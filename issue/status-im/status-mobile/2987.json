{
  "url": "https://api.github.com/repos/status-im/status-mobile/issues/2987",
  "repository_url": "https://api.github.com/repos/status-im/status-mobile",
  "labels_url": "https://api.github.com/repos/status-im/status-mobile/issues/2987/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-mobile/issues/2987/comments",
  "events_url": "https://api.github.com/repos/status-im/status-mobile/issues/2987/events",
  "html_url": "https://github.com/status-im/status-mobile/issues/2987",
  "id": 287337829,
  "node_id": "MDU6SXNzdWUyODczMzc4Mjk=",
  "number": 2987,
  "title": "Improve screen navigation",
  "user": {
    "login": "jeluard",
    "id": 359723,
    "node_id": "MDQ6VXNlcjM1OTcyMw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/359723?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jeluard",
    "html_url": "https://github.com/jeluard",
    "followers_url": "https://api.github.com/users/jeluard/followers",
    "following_url": "https://api.github.com/users/jeluard/following{/other_user}",
    "gists_url": "https://api.github.com/users/jeluard/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jeluard/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jeluard/subscriptions",
    "organizations_url": "https://api.github.com/users/jeluard/orgs",
    "repos_url": "https://api.github.com/users/jeluard/repos",
    "events_url": "https://api.github.com/users/jeluard/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jeluard/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 513859086,
      "node_id": "MDU6TGFiZWw1MTM4NTkwODY=",
      "url": "https://api.github.com/repos/status-im/status-mobile/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "c5def5",
      "default": true,
      "description": null
    },
    {
      "id": 523025415,
      "node_id": "MDU6TGFiZWw1MjMwMjU0MTU=",
      "url": "https://api.github.com/repos/status-im/status-mobile/labels/bounty",
      "name": "bounty",
      "color": "FAFAD2",
      "default": false,
      "description": null
    },
    {
      "id": 692308696,
      "node_id": "MDU6TGFiZWw2OTIzMDg2OTY=",
      "url": "https://api.github.com/repos/status-im/status-mobile/labels/tech-debt",
      "name": "tech-debt",
      "color": "e99695",
      "default": false,
      "description": null
    },
    {
      "id": 755561276,
      "node_id": "MDU6TGFiZWw3NTU1NjEyNzY=",
      "url": "https://api.github.com/repos/status-im/status-mobile/labels/bounty-m",
      "name": "bounty-m",
      "color": "89cbe5",
      "default": false,
      "description": ""
    },
    {
      "id": 768896403,
      "node_id": "MDU6TGFiZWw3Njg4OTY0MDM=",
      "url": "https://api.github.com/repos/status-im/status-mobile/labels/developer-xp",
      "name": "developer-xp",
      "color": "475cc6",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-01-10T07:23:57Z",
  "updated_at": "2018-02-12T15:25:06Z",
  "closed_at": "2018-02-08T10:53:24Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### User Story\r\n\r\nAs a developer, I want to easily pass arguments to screens I navigate to.\r\n\r\n### Description\r\n\r\nOur current navigation logic involves [defining](https://github.com/status-im/status-react/blob/7c4d2f2ece00838cf458e661daa468587efe533d/src/status_im/ui/screens/views.cljs#L116) a screen by a key, [dispatching](https://github.com/status-im/status-react/blob/7c8aa7572400f1e6e200511795d11ff351d07e78/src/status_im/ui/screens/network_settings/views.cljs#L48) to this key with eventual parameters and providing a separate preload [hook](https://github.com/status-im/status-react/blob/cf7a9845c6083b8c621a20187f2ed82ee6fe3a1e/src/status_im/ui/screens/network_settings/navigation.cljs#L4) that will be able to modify the `app-db` before the [view](https://github.com/status-im/status-react/blob/1657f189ba6874b547860b5d254cb2fe070c6373/src/status_im/ui/screens/network_settings/network_details/views.cljs#L24) is shown.\r\n\r\nThis is cumbersome - I want to have my view directly receive the dispatched parameters as arguments.\r\n\r\nThe proposed solution is to use a generic navigation event that takes optional parameters, stores them in a special placeholder in app-db specific for that view. Views can then use a subscription to get the passed parameters.\r\n\r\nE.g.\r\n\r\n```clojure\r\n;; The generic navigate event with optional params\r\n;; we call it the same way as regular :navigate-to except\r\n;; we also give it one extra parameter - typically a map of params\r\n;; It puts the params in app-db, namespaced per view-id\r\n(handlers/register-handler-fx\r\n  :navigate-to\r\n  (fn [{:keys [db]} [_ view-id params]]\r\n    (-> db\r\n        (assoc-in [:screen-params view-id] params)\r\n        (status-im.ui.screens.navigation/navigate-to view-id)))\r\n\r\n;; Then we have one almost generic subscription that extracts the params for us.\r\n;; Note that if we could only be sure that only current view is being rendered, \r\n;; we could remove the view-id param and just use the value of the currently \r\n;; shown view, i.e. (:view-id db)\r\n(reg-sub :view-params\r\n  (fn [db [_ view-id]]\r\n    (get-in db [:screen-params view-id])))\r\n\r\n;; Finally in the view, use the subscription to get the value of params.\r\n;; This method requires knowledge of the view-id for the current view. \r\n;; It shouldn't be too much of a hassle if we stick the the convention of \r\n;; using the same name for the view var and the navigation keyword.\r\n;;\r\n;; Again, if we can ensure that only the current view is being rendered, \r\n;; we can remove the parameter altogether.\r\n(defview some-view\r\n   (letsubs [the-params-we-want [:view-params :some-view]]\r\n     ;markup markup\r\n        ))\r\n\r\n```\r\nhttps://gist.github.com/goranjovic/e68e85fde88aa7d3a3fe38cdcb07991b\r\n\r\nSince, the outlined solution depends on the convention to use the same name for view var and navigation keyword, any refactoring to make that so retroactively is within the scope of this issue.\r\n\r\n[comment]: # (Feature or Bug? i.e Type: Bug)\r\n*Type*: Feature\r\n\r\n  ",
  "closed_by": {
    "login": "goranjovic",
    "id": 711764,
    "node_id": "MDQ6VXNlcjcxMTc2NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/711764?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/goranjovic",
    "html_url": "https://github.com/goranjovic",
    "followers_url": "https://api.github.com/users/goranjovic/followers",
    "following_url": "https://api.github.com/users/goranjovic/following{/other_user}",
    "gists_url": "https://api.github.com/users/goranjovic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/goranjovic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/goranjovic/subscriptions",
    "organizations_url": "https://api.github.com/users/goranjovic/orgs",
    "repos_url": "https://api.github.com/users/goranjovic/repos",
    "events_url": "https://api.github.com/users/goranjovic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/goranjovic/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/2987/reactions",
    "total_count": 5,
    "+1": 4,
    "-1": 1,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-mobile/issues/2987/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/356558105",
    "html_url": "https://github.com/status-im/status-mobile/issues/2987#issuecomment-356558105",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/2987",
    "id": 356558105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjU1ODEwNQ==",
    "user": {
      "login": "status-open-bounty",
      "id": 33065743,
      "node_id": "MDQ6VXNlcjMzMDY1NzQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/33065743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/status-open-bounty",
      "html_url": "https://github.com/status-open-bounty",
      "followers_url": "https://api.github.com/users/status-open-bounty/followers",
      "following_url": "https://api.github.com/users/status-open-bounty/following{/other_user}",
      "gists_url": "https://api.github.com/users/status-open-bounty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/status-open-bounty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/status-open-bounty/subscriptions",
      "organizations_url": "https://api.github.com/users/status-open-bounty/orgs",
      "repos_url": "https://api.github.com/users/status-open-bounty/repos",
      "events_url": "https://api.github.com/users/status-open-bounty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/status-open-bounty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T10:16:58Z",
    "updated_at": "2018-02-12T15:25:06Z",
    "author_association": "NONE",
    "body": "Balance: 0.000000 ETH\nTokens: SNT: 520.00\nContract address: [0xf7c1fbf14c86044f3b557c1dcf7b2d4022f214cc](https://etherscan.io/address/0xf7c1fbf14c86044f3b557c1dcf7b2d4022f214cc)\nNetwork: Mainnet\nPaid to: foopang\nVisit [https://openbounty.status.im](https://openbounty.status.im) to learn more.\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/356558105/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
