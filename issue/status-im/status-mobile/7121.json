{
  "url": "https://api.github.com/repos/status-im/status-mobile/issues/7121",
  "repository_url": "https://api.github.com/repos/status-im/status-mobile",
  "labels_url": "https://api.github.com/repos/status-im/status-mobile/issues/7121/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-mobile/issues/7121/comments",
  "events_url": "https://api.github.com/repos/status-im/status-mobile/issues/7121/events",
  "html_url": "https://github.com/status-im/status-mobile/issues/7121",
  "id": 391765942,
  "node_id": "MDU6SXNzdWUzOTE3NjU5NDI=",
  "number": 7121,
  "title": "MVP 1 Tribute to Talk",
  "user": {
    "login": "yenda",
    "id": 1181225,
    "node_id": "MDQ6VXNlcjExODEyMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1181225?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/yenda",
    "html_url": "https://github.com/yenda",
    "followers_url": "https://api.github.com/users/yenda/followers",
    "following_url": "https://api.github.com/users/yenda/following{/other_user}",
    "gists_url": "https://api.github.com/users/yenda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/yenda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/yenda/subscriptions",
    "organizations_url": "https://api.github.com/users/yenda/orgs",
    "repos_url": "https://api.github.com/users/yenda/repos",
    "events_url": "https://api.github.com/users/yenda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/yenda/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 795655580,
      "node_id": "MDU6TGFiZWw3OTU2NTU1ODA=",
      "url": "https://api.github.com/repos/status-im/status-mobile/labels/chat",
      "name": "chat",
      "color": "f70cb0",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 19,
  "created_at": "2018-12-17T15:34:29Z",
  "updated_at": "2020-09-17T10:21:14Z",
  "closed_at": "2020-09-17T10:21:14Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# Notes\nhttps://github.com/status-im/swarms/blob/master/ideas/314-tribute-to-talk.md\n\n# Design\nhttps://www.figma.com/file/aS1ct66VQ6V0cio7vSqS8UoG/Chat?node-id=1319%3A13403\n\n",
  "closed_by": {
    "login": "cammellos",
    "id": 1017008,
    "node_id": "MDQ6VXNlcjEwMTcwMDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1017008?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cammellos",
    "html_url": "https://github.com/cammellos",
    "followers_url": "https://api.github.com/users/cammellos/followers",
    "following_url": "https://api.github.com/users/cammellos/following{/other_user}",
    "gists_url": "https://api.github.com/users/cammellos/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cammellos/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cammellos/subscriptions",
    "organizations_url": "https://api.github.com/users/cammellos/orgs",
    "repos_url": "https://api.github.com/users/cammellos/repos",
    "events_url": "https://api.github.com/users/cammellos/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cammellos/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/7121/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-mobile/issues/7121/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448290467",
    "html_url": "https://github.com/status-im/status-mobile/issues/7121#issuecomment-448290467",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/7121",
    "id": 448290467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODI5MDQ2Nw==",
    "user": {
      "login": "yenda",
      "id": 1181225,
      "node_id": "MDQ6VXNlcjExODEyMjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1181225?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yenda",
      "html_url": "https://github.com/yenda",
      "followers_url": "https://api.github.com/users/yenda/followers",
      "following_url": "https://api.github.com/users/yenda/following{/other_user}",
      "gists_url": "https://api.github.com/users/yenda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yenda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yenda/subscriptions",
      "organizations_url": "https://api.github.com/users/yenda/orgs",
      "repos_url": "https://api.github.com/users/yenda/repos",
      "events_url": "https://api.github.com/users/yenda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yenda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-18T16:53:26Z",
    "updated_at": "2018-12-18T16:53:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@goranjovic do we already have a mean to watch for events emitted by a contract? The TTT contracts emits `AudienceGranted(address from, address to)` event when someone uses the `payTribute(address _to)` function.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448290467/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448290998",
    "html_url": "https://github.com/status-im/status-mobile/issues/7121#issuecomment-448290998",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/7121",
    "id": 448290998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODI5MDk5OA==",
    "user": {
      "login": "yenda",
      "id": 1181225,
      "node_id": "MDQ6VXNlcjExODEyMjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1181225?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yenda",
      "html_url": "https://github.com/yenda",
      "followers_url": "https://api.github.com/users/yenda/followers",
      "following_url": "https://api.github.com/users/yenda/following{/other_user}",
      "gists_url": "https://api.github.com/users/yenda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yenda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yenda/subscriptions",
      "organizations_url": "https://api.github.com/users/yenda/orgs",
      "repos_url": "https://api.github.com/users/yenda/repos",
      "events_url": "https://api.github.com/users/yenda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yenda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-18T16:54:52Z",
    "updated_at": "2018-12-18T16:54:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@rachelhamlin should we explain somewhere in the UX the consequences of using TTT? It's leaving an on chain proof of A reaching out to B.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448290998/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448295096",
    "html_url": "https://github.com/status-im/status-mobile/issues/7121#issuecomment-448295096",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/7121",
    "id": 448295096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODI5NTA5Ng==",
    "user": {
      "login": "rachelhamlin",
      "id": 15470435,
      "node_id": "MDQ6VXNlcjE1NDcwNDM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/15470435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rachelhamlin",
      "html_url": "https://github.com/rachelhamlin",
      "followers_url": "https://api.github.com/users/rachelhamlin/followers",
      "following_url": "https://api.github.com/users/rachelhamlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/rachelhamlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rachelhamlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rachelhamlin/subscriptions",
      "organizations_url": "https://api.github.com/users/rachelhamlin/orgs",
      "repos_url": "https://api.github.com/users/rachelhamlin/repos",
      "events_url": "https://api.github.com/users/rachelhamlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rachelhamlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-18T17:06:35Z",
    "updated_at": "2018-12-18T17:06:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@yenda is it not something we could conceal? What unique identifier would be stored on chain, Whisper ID?",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448295096/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448295553",
    "html_url": "https://github.com/status-im/status-mobile/issues/7121#issuecomment-448295553",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/7121",
    "id": 448295553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODI5NTU1Mw==",
    "user": {
      "login": "yenda",
      "id": 1181225,
      "node_id": "MDQ6VXNlcjExODEyMjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1181225?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yenda",
      "html_url": "https://github.com/yenda",
      "followers_url": "https://api.github.com/users/yenda/followers",
      "following_url": "https://api.github.com/users/yenda/following{/other_user}",
      "gists_url": "https://api.github.com/users/yenda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yenda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yenda/subscriptions",
      "organizations_url": "https://api.github.com/users/yenda/orgs",
      "repos_url": "https://api.github.com/users/yenda/repos",
      "events_url": "https://api.github.com/users/yenda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yenda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-18T17:07:52Z",
    "updated_at": "2018-12-18T17:07:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@rachelhamlin the ethereum addresses of both contacts\r\n\r\n@richard-ramos I am wondering if it is really necessary to have payTribute in the contract, couldn't paying tribute simply be a SNT transaction, indistinguishable from a normal transaction at least. The transaction-id would be sent with the contact request directly to the contact.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448295553/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448321965",
    "html_url": "https://github.com/status-im/status-mobile/issues/7121#issuecomment-448321965",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/7121",
    "id": 448321965,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODMyMTk2NQ==",
    "user": {
      "login": "richard-ramos",
      "id": 1106587,
      "node_id": "MDQ6VXNlcjExMDY1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1106587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/richard-ramos",
      "html_url": "https://github.com/richard-ramos",
      "followers_url": "https://api.github.com/users/richard-ramos/followers",
      "following_url": "https://api.github.com/users/richard-ramos/following{/other_user}",
      "gists_url": "https://api.github.com/users/richard-ramos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/richard-ramos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/richard-ramos/subscriptions",
      "organizations_url": "https://api.github.com/users/richard-ramos/orgs",
      "repos_url": "https://api.github.com/users/richard-ramos/repos",
      "events_url": "https://api.github.com/users/richard-ramos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/richard-ramos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-18T18:30:06Z",
    "updated_at": "2018-12-18T18:31:12Z",
    "author_association": "MEMBER",
    "body": "Yes, it should be possible. The contract will work in this case as a registry to only store the fee information. The advantage to having the `payTribute` function is that it emits the `AudienceGranted(_to, requester)` event that if subscribed to, could be used as a mean to notify the user that its request for audience was accepted.\r\n\r\nIf this is something that could be done without an on-chain operation, I see no issues with just handling it as a normal transfer (it would be even better for privacy purposes, since it would be seen as a SNT transfer and not as an operation related to communication between two actors), as well as making things slighty cheaper",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448321965/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448518315",
    "html_url": "https://github.com/status-im/status-mobile/issues/7121#issuecomment-448518315",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/7121",
    "id": 448518315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODUxODMxNQ==",
    "user": {
      "login": "goranjovic",
      "id": 711764,
      "node_id": "MDQ6VXNlcjcxMTc2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/711764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/goranjovic",
      "html_url": "https://github.com/goranjovic",
      "followers_url": "https://api.github.com/users/goranjovic/followers",
      "following_url": "https://api.github.com/users/goranjovic/following{/other_user}",
      "gists_url": "https://api.github.com/users/goranjovic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/goranjovic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/goranjovic/subscriptions",
      "organizations_url": "https://api.github.com/users/goranjovic/orgs",
      "repos_url": "https://api.github.com/users/goranjovic/repos",
      "events_url": "https://api.github.com/users/goranjovic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/goranjovic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-19T08:57:25Z",
    "updated_at": "2018-12-19T08:57:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@yenda yes, by parsing the event log, you can see `get-token-transfer-logs` in `status-im.models.transactions`",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448518315/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448533908",
    "html_url": "https://github.com/status-im/status-mobile/issues/7121#issuecomment-448533908",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/7121",
    "id": 448533908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODUzMzkwOA==",
    "user": {
      "login": "yenda",
      "id": 1181225,
      "node_id": "MDQ6VXNlcjExODEyMjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1181225?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yenda",
      "html_url": "https://github.com/yenda",
      "followers_url": "https://api.github.com/users/yenda/followers",
      "following_url": "https://api.github.com/users/yenda/following{/other_user}",
      "gists_url": "https://api.github.com/users/yenda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yenda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yenda/subscriptions",
      "organizations_url": "https://api.github.com/users/yenda/orgs",
      "repos_url": "https://api.github.com/users/yenda/repos",
      "events_url": "https://api.github.com/users/yenda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yenda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-19T09:47:41Z",
    "updated_at": "2018-12-19T09:47:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@richard-ramos both solution don't seem to fit the user story `I want to receive payment from the sender when I respond to their request.`. How could we achieve that? Seems difficult to determine if the recipient has responded to the message",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448533908/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448570432",
    "html_url": "https://github.com/status-im/status-mobile/issues/7121#issuecomment-448570432",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/7121",
    "id": 448570432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODU3MDQzMg==",
    "user": {
      "login": "richard-ramos",
      "id": 1106587,
      "node_id": "MDQ6VXNlcjExMDY1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1106587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/richard-ramos",
      "html_url": "https://github.com/richard-ramos",
      "followers_url": "https://api.github.com/users/richard-ramos/followers",
      "following_url": "https://api.github.com/users/richard-ramos/following{/other_user}",
      "gists_url": "https://api.github.com/users/richard-ramos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/richard-ramos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/richard-ramos/subscriptions",
      "organizations_url": "https://api.github.com/users/richard-ramos/orgs",
      "repos_url": "https://api.github.com/users/richard-ramos/repos",
      "events_url": "https://api.github.com/users/richard-ramos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/richard-ramos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-19T12:01:47Z",
    "updated_at": "2018-12-19T12:01:48Z",
    "author_association": "MEMBER",
    "body": "Yes, it's a disadvantage of autoaccepting the tribute. However, previous version of the contract has a `grantAudience` function that is supposed to be invoked by the receiver automatically when he replies back, and performs the transfer of SNT. which should fit this user story.  (https://github.com/status-im/contracts/blob/096-tribute-to-talk/contracts/communication/MessageTribute.sol#L113) \r\n\r\n@3esmit, what do you think if we move back to this version?, and then explore how to make the Tribute to Talk contract interactions use ZK to avoid revealing too much info of the interactions between participants?\r\n\r\n\n\n<blockquote><img src=\"https://avatars3.githubusercontent.com/u/11767950?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/status-im/contracts\">status-im/contracts</a></strong></div><div>Contribute to status-im/contracts development by creating an account on GitHub.</div></blockquote>",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448570432/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448578631",
    "html_url": "https://github.com/status-im/status-mobile/issues/7121#issuecomment-448578631",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/7121",
    "id": 448578631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODU3ODYzMQ==",
    "user": {
      "login": "3esmit",
      "id": 224810,
      "node_id": "MDQ6VXNlcjIyNDgxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/224810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3esmit",
      "html_url": "https://github.com/3esmit",
      "followers_url": "https://api.github.com/users/3esmit/followers",
      "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
      "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
      "organizations_url": "https://api.github.com/users/3esmit/orgs",
      "repos_url": "https://api.github.com/users/3esmit/repos",
      "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3esmit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-19T12:29:18Z",
    "updated_at": "2018-12-19T12:29:18Z",
    "author_association": "MEMBER",
    "body": "@yenda The contract allows the TtT user to set the value and automatically accept this transaction if correct value. A event is fired which can be watch. \r\n\r\nThe Tribute to talk contract don't needs to have \"deposited tokens\", users only need to approve token to it and call `payTribute`. \r\nThis function uses the allowance set to the contract to [transfer from one user to other](https://github.com/status-im/contracts/blob/9d2f9dd14ebbd59cb6b60bc25184f8aba37e8f85/contracts/communication/MessageTribute.sol#L48), so it never keeps any token, its a direct transfer guided by this contract, but its little more gas expansive because EVM need to read the value of tribute from storage and clear SNT allowance + move SNT balance, instead of simply move SNT balance.\r\n\r\nIt would be possible to remove the smart contract and set in the mailserver the value, so users can interact with this actors to process tribute to talk, or when both users are online they can interact directly. \r\n\r\n@richard-ramos If we define the specs as it is there we can use this version but I think it have unnecessary stuff. For example: captcha, the value of tribute to talk is better than captcha, but I agree its useful when tribute to talk is not used.\r\nI made the simpler version to MVP, and I agree that we can change it as we decide is better.\r\nI agree that we should think about a next interation with privacy, which possibly can be done with a variation of [miximus](https://github.com/barryWhiteHat/miximus) \r\n\r\nProbably when moving to zk, mailservers would have to participate in the process, or another data-availability methods. Another interesting thing to research is [plasma snapp](https://ethresear.ch/t/plasma-snapp-fully-verified-plasma-chain/3391)",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448578631/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448580860",
    "html_url": "https://github.com/status-im/status-mobile/issues/7121#issuecomment-448580860",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/7121",
    "id": 448580860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODU4MDg2MA==",
    "user": {
      "login": "3esmit",
      "id": 224810,
      "node_id": "MDQ6VXNlcjIyNDgxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/224810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3esmit",
      "html_url": "https://github.com/3esmit",
      "followers_url": "https://api.github.com/users/3esmit/followers",
      "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
      "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
      "organizations_url": "https://api.github.com/users/3esmit/orgs",
      "repos_url": "https://api.github.com/users/3esmit/repos",
      "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3esmit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-19T12:36:25Z",
    "updated_at": "2018-12-19T12:37:43Z",
    "author_association": "MEMBER",
    "body": "Why we need the part of \"when I respond request\"? If user set tribute to talk is because they are willing to accept invitations by that price. Who would say no? \r\nIf thats needed I can include a simple signed message answering to the requestor, the problem is that this would need mailserver syncing - as the commitment can only be done by talk requestor when talk receiver sent a signed allowance, or allow talk receiver to accept the commitment, and make the requestor send a signed allowance to receiver.\r\nI think this flow is odd, and that's why I removed it when rewriting the contract.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448580860/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448677284",
    "html_url": "https://github.com/status-im/status-mobile/issues/7121#issuecomment-448677284",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/7121",
    "id": 448677284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODY3NzI4NA==",
    "user": {
      "login": "3esmit",
      "id": 224810,
      "node_id": "MDQ6VXNlcjIyNDgxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/224810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3esmit",
      "html_url": "https://github.com/3esmit",
      "followers_url": "https://api.github.com/users/3esmit/followers",
      "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
      "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
      "organizations_url": "https://api.github.com/users/3esmit/orgs",
      "repos_url": "https://api.github.com/users/3esmit/repos",
      "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3esmit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-19T17:25:12Z",
    "updated_at": "2018-12-19T17:25:14Z",
    "author_association": "MEMBER",
    "body": "New contract as we defined @yenda  \r\nhttps://github.com/status-im/contracts/blob/314-tribute-to-talk/contracts/communication/MessageTribute.sol\n\n<blockquote><img src=\"https://avatars3.githubusercontent.com/u/11767950?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/status-im/contracts\">status-im/contracts</a></strong></div><div>Contribute to status-im/contracts development by creating an account on GitHub.</div></blockquote>",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448677284/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448730740",
    "html_url": "https://github.com/status-im/status-mobile/issues/7121#issuecomment-448730740",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/7121",
    "id": 448730740,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODczMDc0MA==",
    "user": {
      "login": "errorists",
      "id": 4932774,
      "node_id": "MDQ6VXNlcjQ5MzI3NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4932774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/errorists",
      "html_url": "https://github.com/errorists",
      "followers_url": "https://api.github.com/users/errorists/followers",
      "following_url": "https://api.github.com/users/errorists/following{/other_user}",
      "gists_url": "https://api.github.com/users/errorists/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/errorists/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/errorists/subscriptions",
      "organizations_url": "https://api.github.com/users/errorists/orgs",
      "repos_url": "https://api.github.com/users/errorists/repos",
      "events_url": "https://api.github.com/users/errorists/events{/privacy}",
      "received_events_url": "https://api.github.com/users/errorists/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-19T20:19:54Z",
    "updated_at": "2018-12-19T20:19:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Why we need the part of \"when I respond request\"? If user set tribute to talk is because they are willing to accept invitations by that price. Who would say no?\r\n\r\nI believe it's necessary for some of the use cases we're aiming for. What we're enabling here is a service that you can choose to monetise your attention, and the contract between two people should require a mutual agreement that one is willing to pay for this service and the other to actually provide it. If for some reason the recipient is currently not able to do so or otherwise doesn't feel like it, he should have the option to decline it and the tribute to be pending until his approval. So while I understand that for spam protection that may seem like overkill, for enabling services based on messaging, I see it as a good UX requirement.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448730740/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448741778",
    "html_url": "https://github.com/status-im/status-mobile/issues/7121#issuecomment-448741778",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/7121",
    "id": 448741778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODc0MTc3OA==",
    "user": {
      "login": "3esmit",
      "id": 224810,
      "node_id": "MDQ6VXNlcjIyNDgxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/224810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3esmit",
      "html_url": "https://github.com/3esmit",
      "followers_url": "https://api.github.com/users/3esmit/followers",
      "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
      "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
      "organizations_url": "https://api.github.com/users/3esmit/orgs",
      "repos_url": "https://api.github.com/users/3esmit/repos",
      "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3esmit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-19T20:59:15Z",
    "updated_at": "2018-12-19T20:59:15Z",
    "author_association": "MEMBER",
    "body": "I see that tribute to talk is actually 1-1 spam filter.\r\nRegarding providing a monetized attention service, I think that could be a different contract, as this services would probably need a periodic recharge or other rules, which might be custom to each provider. \r\nFor the case of providing service, as we are open source and extendable, should be easy to patch a client the automatically accept the TtT without any useful answer and actually not honoring the talk. . \r\n\r\nFor spam filtering the best UX would be auto-accept, as message receiver don't need to do anything different than they do now but they would see a transaction as first message from unknown contract. The message sender would be attaching a payment with the message.\r\n\r\nThe only advantage of requiring the both signatures is that prevents one user paying tribute to a \"dead\" address.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448741778/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448743570",
    "html_url": "https://github.com/status-im/status-mobile/issues/7121#issuecomment-448743570",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/7121",
    "id": 448743570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODc0MzU3MA==",
    "user": {
      "login": "errorists",
      "id": 4932774,
      "node_id": "MDQ6VXNlcjQ5MzI3NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4932774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/errorists",
      "html_url": "https://github.com/errorists",
      "followers_url": "https://api.github.com/users/errorists/followers",
      "following_url": "https://api.github.com/users/errorists/following{/other_user}",
      "gists_url": "https://api.github.com/users/errorists/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/errorists/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/errorists/subscriptions",
      "organizations_url": "https://api.github.com/users/errorists/orgs",
      "repos_url": "https://api.github.com/users/errorists/repos",
      "events_url": "https://api.github.com/users/errorists/events{/privacy}",
      "received_events_url": "https://api.github.com/users/errorists/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-19T21:05:25Z",
    "updated_at": "2018-12-19T21:05:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@rachelhamlin so should we treat the TtT work we're doing now as providing spam filtering or covering the SNT use cases outlined in the whitepaper?",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448743570/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448773733",
    "html_url": "https://github.com/status-im/status-mobile/issues/7121#issuecomment-448773733",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/7121",
    "id": 448773733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODc3MzczMw==",
    "user": {
      "login": "3esmit",
      "id": 224810,
      "node_id": "MDQ6VXNlcjIyNDgxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/224810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3esmit",
      "html_url": "https://github.com/3esmit",
      "followers_url": "https://api.github.com/users/3esmit/followers",
      "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
      "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
      "organizations_url": "https://api.github.com/users/3esmit/orgs",
      "repos_url": "https://api.github.com/users/3esmit/repos",
      "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3esmit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-19T22:51:53Z",
    "updated_at": "2018-12-20T02:17:33Z",
    "author_association": "MEMBER",
    "body": "In case we decide going to not autoaccept in this MVP, I added a option of the contracts having the needed functions that require an agreement from both parties to execute tribute to talk.\r\n\r\nI added two options:\r\n1. `sendTribute(address _to, uint256 _value, uint256 _ttl, bytes calldata _signature) ` which can be called (require tx, pays gas) by \"message sender\"\r\n2. `receiveTribute(address _from, uint256 _value, uint256 _ttl, bytes calldata _signature)` which can be called (require tx, pays gas) by \"message receiver\"\r\n\r\nWe should select one of this 2 options instead of using the both (but wont hurt to have the two functions)\r\n\r\nhttps://github.com/status-im/contracts/blob/314-tribute-to-talk-rejectable/contracts/communication/MessageTribute.sol\r\n\r\n\r\n\r\n<blockquote><img src=\"https://avatars3.githubusercontent.com/u/11767950?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/status-im/contracts\">status-im/contracts</a></strong></div><div>Contribute to status-im/contracts development by creating an account on GitHub.</div></blockquote>",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448773733/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448950894",
    "html_url": "https://github.com/status-im/status-mobile/issues/7121#issuecomment-448950894",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/7121",
    "id": 448950894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODk1MDg5NA==",
    "user": {
      "login": "oskarth",
      "id": 1552237,
      "node_id": "MDQ6VXNlcjE1NTIyMzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1552237?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oskarth",
      "html_url": "https://github.com/oskarth",
      "followers_url": "https://api.github.com/users/oskarth/followers",
      "following_url": "https://api.github.com/users/oskarth/following{/other_user}",
      "gists_url": "https://api.github.com/users/oskarth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oskarth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oskarth/subscriptions",
      "organizations_url": "https://api.github.com/users/oskarth/orgs",
      "repos_url": "https://api.github.com/users/oskarth/repos",
      "events_url": "https://api.github.com/users/oskarth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oskarth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-20T10:34:57Z",
    "updated_at": "2018-12-20T10:34:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looking at this issue description, I don't understand what the acceptance criteria for it is.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448950894/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448965105",
    "html_url": "https://github.com/status-im/status-mobile/issues/7121#issuecomment-448965105",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/7121",
    "id": 448965105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODk2NTEwNQ==",
    "user": {
      "login": "yenda",
      "id": 1181225,
      "node_id": "MDQ6VXNlcjExODEyMjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1181225?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yenda",
      "html_url": "https://github.com/yenda",
      "followers_url": "https://api.github.com/users/yenda/followers",
      "following_url": "https://api.github.com/users/yenda/following{/other_user}",
      "gists_url": "https://api.github.com/users/yenda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yenda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yenda/subscriptions",
      "organizations_url": "https://api.github.com/users/yenda/orgs",
      "repos_url": "https://api.github.com/users/yenda/repos",
      "events_url": "https://api.github.com/users/yenda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yenda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-20T11:29:00Z",
    "updated_at": "2018-12-20T11:29:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@oskarth this is just an mvp item for TTT on the chat-team epic board so that we have the little card over all others when it's our turn to work on TTT. Regarding acceptance criteria they are not defined yet as this is still in research phase and the outcome will determine the acceptance criteria of this one.\r\n\r\n@errorists the problem with pay on reply is that there is no way to enforce an actual reply. Also if receiving requires calling a contract call then there is a very clear on-chain trace of A and B having a communication.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/448965105/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/449208627",
    "html_url": "https://github.com/status-im/status-mobile/issues/7121#issuecomment-449208627",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/7121",
    "id": 449208627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTIwODYyNw==",
    "user": {
      "login": "rachelhamlin",
      "id": 15470435,
      "node_id": "MDQ6VXNlcjE1NDcwNDM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/15470435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rachelhamlin",
      "html_url": "https://github.com/rachelhamlin",
      "followers_url": "https://api.github.com/users/rachelhamlin/followers",
      "following_url": "https://api.github.com/users/rachelhamlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/rachelhamlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rachelhamlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rachelhamlin/subscriptions",
      "organizations_url": "https://api.github.com/users/rachelhamlin/orgs",
      "repos_url": "https://api.github.com/users/rachelhamlin/repos",
      "events_url": "https://api.github.com/users/rachelhamlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rachelhamlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-21T01:43:02Z",
    "updated_at": "2018-12-21T01:43:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, let's go with the simpler option—version 1 of the contract, 1:1 spam filtering. I don't feel that it really enables the use cases in the white paper, but given that we can't guarantee that User B replies to a message anyway (Whisper limitation @yenda?), it's truthfully the only option.\r\n\r\nSo basically, we drop a bunch of the screens from the MVP in support of the following @errorists:\r\n\r\n![image](https://user-images.githubusercontent.com/15470435/50319693-9b61e380-0496-11e9-8df8-a7fc21e7c86d.png)\r\n\r\nIs that right @richard-ramos @3esmit? \r\n\r\nFurther questions:\r\n\r\n1. Is a transaction required to set the tribute for User A (recipient)? \r\n\r\n2. Can we make it possible to remove someone from contacts @yenda? \r\n\r\n3. Is the contact exchange in this scenario mutual, A is added to B's contacts and B to A's? \r\n\r\n4. If we want to support an escrow contract with reply required in the future, the `receiveTribute` function makes that possible @3esmit? What about `grantAudience` which Richard mentioned? In either case, User A (recipient) would need to spend gas to confirm their reply?\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/449208627/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/449394674",
    "html_url": "https://github.com/status-im/status-mobile/issues/7121#issuecomment-449394674",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/7121",
    "id": 449394674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTM5NDY3NA==",
    "user": {
      "login": "richard-ramos",
      "id": 1106587,
      "node_id": "MDQ6VXNlcjExMDY1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1106587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/richard-ramos",
      "html_url": "https://github.com/richard-ramos",
      "followers_url": "https://api.github.com/users/richard-ramos/followers",
      "following_url": "https://api.github.com/users/richard-ramos/following{/other_user}",
      "gists_url": "https://api.github.com/users/richard-ramos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/richard-ramos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/richard-ramos/subscriptions",
      "organizations_url": "https://api.github.com/users/richard-ramos/orgs",
      "repos_url": "https://api.github.com/users/richard-ramos/repos",
      "events_url": "https://api.github.com/users/richard-ramos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/richard-ramos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-21T13:55:42Z",
    "updated_at": "2018-12-21T13:55:42Z",
    "author_association": "MEMBER",
    "body": "@rachelhamlin , yes\r\n1. Yes, since we would be using the contract as a registry for the required fees.\r\n4. Both options require gas spent by UserA",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/449394674/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
