{
  "url": "https://api.github.com/repos/status-im/status-mobile/issues/1495",
  "repository_url": "https://api.github.com/repos/status-im/status-mobile",
  "labels_url": "https://api.github.com/repos/status-im/status-mobile/issues/1495/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-mobile/issues/1495/comments",
  "events_url": "https://api.github.com/repos/status-im/status-mobile/issues/1495/events",
  "html_url": "https://github.com/status-im/status-mobile/issues/1495",
  "id": 245201795,
  "node_id": "MDU6SXNzdWUyNDUyMDE3OTU=",
  "number": 1495,
  "title": "Improve developer experience",
  "user": {
    "login": "jeluard",
    "id": 359723,
    "node_id": "MDQ6VXNlcjM1OTcyMw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/359723?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jeluard",
    "html_url": "https://github.com/jeluard",
    "followers_url": "https://api.github.com/users/jeluard/followers",
    "following_url": "https://api.github.com/users/jeluard/following{/other_user}",
    "gists_url": "https://api.github.com/users/jeluard/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jeluard/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jeluard/subscriptions",
    "organizations_url": "https://api.github.com/users/jeluard/orgs",
    "repos_url": "https://api.github.com/users/jeluard/repos",
    "events_url": "https://api.github.com/users/jeluard/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jeluard/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2017-07-24T20:37:47Z",
  "updated_at": "2017-08-09T11:23:42Z",
  "closed_at": "2017-08-09T11:23:42Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "This document details steps to improve codebase intelligibility.  Codebase should be as simple and intuitive as possible to understand and navigate.\r\nIt goes in pair with a `best practices` document that will follow.\r\n\r\nstatus: `RFC`\r\n\r\n# 6 phases\r\n\r\nTo reduce potential for regression and simplify implementation and subsequent merge into `develop` this refactoring can be split in 5 phases.\r\n\r\n## Phase #1: introduce new hierarchy\r\n\r\nReorganize folders / rename file to match new hierarchy and match `re-frame` semantic.\r\n\r\n```\r\nsrc/status-im/\r\n├── components\r\n├── data_store\r\n├── platforms\r\n├── protocol\r\n├── translations\r\n├── ui\r\n│   └── screens\r\n│       ├── account\r\n│       │   ├── login\r\n│       │   └── recover\r\n│       │       ├── core.cljs\r\n│       │       ├── db.cljs\r\n│       │       ├── events.cljs\r\n│       │       ├── subs.cljs\r\n│       │       └── views.cljs\r\n│       ├── contacts\r\n│       │   └── new_contact\r\n│       │       └── views.cljs\r\n│       └── navigation.cljs\r\n└── utils\r\n```\r\n\r\nand\r\n\r\n```\r\nresources\r\n├── default_contacts.json\r\n├── default_contacts_groups.json\r\n├── images/\r\n | └── contacts/\r\n├── bots/\r\n | ├── browse/\r\n | ├── ...\r\n | └── console/\r\n└── vendors/\r\n└── js/\r\n```\r\n\r\n## Phase #2: consolidate namespaces\r\n\r\nMerge utils namespaces and reduce files number to improve code understandability.\r\nConsolidate `android` and `ios` shared code.\r\n\r\n## Phase #3: improve modularization\r\n\r\nMake sure we don't have unwanted dependencies between namespaces (i.e. re-frame usage in non ui/ namespaces)\r\nMight require spliting files\r\n\r\n## Phase #4: normalize app-db\r\n\r\nMake sure `app-db` is properly normalized, speced and documented.\r\n\r\nFrom @janherich\r\n\r\n```\r\nCases which I find problematic:\r\n\r\nData under top level keys :chat-animations, :chat-loaded-callbacks, :chat-ui-props and :chats should me merged together, as they are all indexed by chat-id, I propose top level key :chat-by-id\r\nMessages should be kept at top level key :message-by-id, every occurrence where message is referenced (for example [:chat-by-id \"console\" :messages] will contain collection of references to particular messages, like [:message-by-id \"intro-message\"] we can then either lookup data manually in subscriptions by using reference path as simple (get-in db ...) argument, or maybe even provide some automatic denormalisation where all references (links) will be replaced be referenced data in subscriptions, I'm not sure how that's feasible in reagent subscription model.\r\n```\r\n\r\n## Phase #5: follow re-frame patterns\r\n\r\nReorganize ui code by views and follow [re-frame patterns](https://github.com/Day8/re-frame/wiki/A-Larger-App)\r\n\r\n## Phase #6: apply code convention\r\n\r\nFix code convention according to best practices.",
  "closed_by": {
    "login": "rasom",
    "id": 2364994,
    "node_id": "MDQ6VXNlcjIzNjQ5OTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2364994?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rasom",
    "html_url": "https://github.com/rasom",
    "followers_url": "https://api.github.com/users/rasom/followers",
    "following_url": "https://api.github.com/users/rasom/following{/other_user}",
    "gists_url": "https://api.github.com/users/rasom/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rasom/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rasom/subscriptions",
    "organizations_url": "https://api.github.com/users/rasom/orgs",
    "repos_url": "https://api.github.com/users/rasom/repos",
    "events_url": "https://api.github.com/users/rasom/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rasom/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/1495/reactions",
    "total_count": 2,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 1,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-mobile/issues/1495/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/317556713",
    "html_url": "https://github.com/status-im/status-mobile/issues/1495#issuecomment-317556713",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/1495",
    "id": 317556713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzU1NjcxMw==",
    "user": {
      "login": "flexsurfer",
      "id": 11790366,
      "node_id": "MDQ6VXNlcjExNzkwMzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/11790366?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flexsurfer",
      "html_url": "https://github.com/flexsurfer",
      "followers_url": "https://api.github.com/users/flexsurfer/followers",
      "following_url": "https://api.github.com/users/flexsurfer/following{/other_user}",
      "gists_url": "https://api.github.com/users/flexsurfer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flexsurfer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flexsurfer/subscriptions",
      "organizations_url": "https://api.github.com/users/flexsurfer/orgs",
      "repos_url": "https://api.github.com/users/flexsurfer/repos",
      "events_url": "https://api.github.com/users/flexsurfer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flexsurfer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-24T21:12:49Z",
    "updated_at": "2017-07-24T21:13:09Z",
    "author_association": "MEMBER",
    "body": "For the phase №6 we can consider the following guides\r\nhttps://github.com/bbatsov/clojure-style-guide\r\nhttp://tonsky.me/blog/readable-clojure/\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/317556713/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/317645057",
    "html_url": "https://github.com/status-im/status-mobile/issues/1495#issuecomment-317645057",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/1495",
    "id": 317645057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzY0NTA1Nw==",
    "user": {
      "login": "GustavoNunes",
      "id": 6423066,
      "node_id": "MDQ6VXNlcjY0MjMwNjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6423066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GustavoNunes",
      "html_url": "https://github.com/GustavoNunes",
      "followers_url": "https://api.github.com/users/GustavoNunes/followers",
      "following_url": "https://api.github.com/users/GustavoNunes/following{/other_user}",
      "gists_url": "https://api.github.com/users/GustavoNunes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GustavoNunes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GustavoNunes/subscriptions",
      "organizations_url": "https://api.github.com/users/GustavoNunes/orgs",
      "repos_url": "https://api.github.com/users/GustavoNunes/repos",
      "events_url": "https://api.github.com/users/GustavoNunes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GustavoNunes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-25T06:43:27Z",
    "updated_at": "2017-07-25T06:43:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nice @jeluard, thanks!\r\nI think we need another level between `ui` and `screens`, for the \"modules\" (contacts, drawer, wallet, discover). Something like this, what do you think?\r\nIt is possible that some screens don't even have their specific subs and events, they only use shared ones.\r\n\r\n```\r\n├── components\r\n├── data_store\r\n├── platforms\r\n├── protocol\r\n├── translations\r\n├── ui\r\n│   ├── lifecycle.cljs\r\n│   ├── wallet\r\n│   │  ├── core.cljs\r\n│   │  ├── db.cljs\r\n│   │  ├── events.cljs\r\n│   │  ├── subs.cljs\r\n│   │  └── screens\r\n│   │      ├── some-screen\r\n│   │      │   ├── core.cljs\r\n│   │      │   ├── db.cljs\r\n│   │      │   ├── events.cljs\r\n│   │      │   ├── subs.cljs\r\n│   │      │   └── views.cljs\r\n│   │      └── another-screen\r\n│   │          ├── core.cljs\r\n│   │          ├── db.cljs\r\n│   │          ├── events.cljs\r\n│   │          ├── subs.cljs\r\n│   │          └── views.cljs\r\n│   └── contacts\r\n│       ├── core.cljs\r\n│       ├── db.cljs\r\n│       ├── events.cljs\r\n│       ├── subs.cljs\r\n│       └── screens\r\n│           ├── some-screen\r\n│           │   ├── core.cljs\r\n│           │   ├── db.cljs\r\n│           │   ├── events.cljs\r\n│           │   ├── subs.cljs\r\n│           │   └── views.cljs\r\n│           └── another-screen\r\n│               ├── core.cljs\r\n│               ├── db.cljs\r\n│               ├── events.cljs\r\n│               ├── subs.cljs\r\n│               └── views.cljs\r\n└── utils\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/317645057/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/317649199",
    "html_url": "https://github.com/status-im/status-mobile/issues/1495#issuecomment-317649199",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/1495",
    "id": 317649199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzY0OTE5OQ==",
    "user": {
      "login": "flexsurfer",
      "id": 11790366,
      "node_id": "MDQ6VXNlcjExNzkwMzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/11790366?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flexsurfer",
      "html_url": "https://github.com/flexsurfer",
      "followers_url": "https://api.github.com/users/flexsurfer/followers",
      "following_url": "https://api.github.com/users/flexsurfer/following{/other_user}",
      "gists_url": "https://api.github.com/users/flexsurfer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flexsurfer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flexsurfer/subscriptions",
      "organizations_url": "https://api.github.com/users/flexsurfer/orgs",
      "repos_url": "https://api.github.com/users/flexsurfer/repos",
      "events_url": "https://api.github.com/users/flexsurfer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flexsurfer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-25T07:05:23Z",
    "updated_at": "2017-07-25T07:05:23Z",
    "author_association": "MEMBER",
    "body": "hey @GustavoNunes, tbh in your case,  screens package looks superfluous, @jeluard's option looks better. we can open only screens and can have shared files for all screens",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/317649199/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/317800734",
    "html_url": "https://github.com/status-im/status-mobile/issues/1495#issuecomment-317800734",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/1495",
    "id": 317800734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzgwMDczNA==",
    "user": {
      "login": "julienfantin",
      "id": 127283,
      "node_id": "MDQ6VXNlcjEyNzI4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/julienfantin",
      "html_url": "https://github.com/julienfantin",
      "followers_url": "https://api.github.com/users/julienfantin/followers",
      "following_url": "https://api.github.com/users/julienfantin/following{/other_user}",
      "gists_url": "https://api.github.com/users/julienfantin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/julienfantin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/julienfantin/subscriptions",
      "organizations_url": "https://api.github.com/users/julienfantin/orgs",
      "repos_url": "https://api.github.com/users/julienfantin/repos",
      "events_url": "https://api.github.com/users/julienfantin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/julienfantin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-25T16:54:37Z",
    "updated_at": "2017-07-25T16:54:37Z",
    "author_association": "NONE",
    "body": "I'm not familiar with the data model, but assuming that all entities are maps that can be identified by a single key I'd kindly suggest taking a look at https://github.com/vimsical/subgraph documentation is still sparse but we've used it in production for months and it's greatly simplified our data model. Happy to answer any questions here or in the repo's issues.\r\n\r\nA simple practice that's had a big impact on our codebase was to use fully-qualified keywords for subscription and handler ids. This lets the compiler work for you, preventing small regressions and typos. It also makes very explicit the structure of the dependencies.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/317800734/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/317819227",
    "html_url": "https://github.com/status-im/status-mobile/issues/1495#issuecomment-317819227",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/1495",
    "id": 317819227,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzgxOTIyNw==",
    "user": {
      "login": "jeluard",
      "id": 359723,
      "node_id": "MDQ6VXNlcjM1OTcyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/359723?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeluard",
      "html_url": "https://github.com/jeluard",
      "followers_url": "https://api.github.com/users/jeluard/followers",
      "following_url": "https://api.github.com/users/jeluard/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeluard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeluard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeluard/subscriptions",
      "organizations_url": "https://api.github.com/users/jeluard/orgs",
      "repos_url": "https://api.github.com/users/jeluard/repos",
      "events_url": "https://api.github.com/users/jeluard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeluard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-25T18:00:15Z",
    "updated_at": "2017-07-25T18:00:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@julienfantin Thanks for the tips! We definitively need some more detailed spec for the data model. @janherich already started working on it and I am sure he will make good use of your points.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/317819227/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/320989412",
    "html_url": "https://github.com/status-im/status-mobile/issues/1495#issuecomment-320989412",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/1495",
    "id": 320989412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDk4OTQxMg==",
    "user": {
      "login": "flexsurfer",
      "id": 11790366,
      "node_id": "MDQ6VXNlcjExNzkwMzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/11790366?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flexsurfer",
      "html_url": "https://github.com/flexsurfer",
      "followers_url": "https://api.github.com/users/flexsurfer/followers",
      "following_url": "https://api.github.com/users/flexsurfer/following{/other_user}",
      "gists_url": "https://api.github.com/users/flexsurfer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flexsurfer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flexsurfer/subscriptions",
      "organizations_url": "https://api.github.com/users/flexsurfer/orgs",
      "repos_url": "https://api.github.com/users/flexsurfer/repos",
      "events_url": "https://api.github.com/users/flexsurfer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flexsurfer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T15:20:42Z",
    "updated_at": "2017-08-08T15:20:42Z",
    "author_association": "MEMBER",
    "body": "I usually follow the next steps\r\n1)introduce new hierarchy (#1495)\r\n2)add `letsubs` macro in views\r\n3) apply code convention for views (#1495)\r\n4)move nav/preload-data! to navigation.cljs \r\n5)rewrite events using fx and cofx\r\n6)apply code convention for events (#1495)\r\n7)rewrite subs using re-frame best practice (db can be used only in extraction subscriptions)\r\n8)use ns keys in app-db\r\n9)write specs (in db.cljs, move from spec.cljs)\r\n10)write tests (using re-frame-test) ",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/320989412/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/320990681",
    "html_url": "https://github.com/status-im/status-mobile/issues/1495#issuecomment-320990681",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/1495",
    "id": 320990681,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDk5MDY4MQ==",
    "user": {
      "login": "goranjovic",
      "id": 711764,
      "node_id": "MDQ6VXNlcjcxMTc2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/711764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/goranjovic",
      "html_url": "https://github.com/goranjovic",
      "followers_url": "https://api.github.com/users/goranjovic/followers",
      "following_url": "https://api.github.com/users/goranjovic/following{/other_user}",
      "gists_url": "https://api.github.com/users/goranjovic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/goranjovic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/goranjovic/subscriptions",
      "organizations_url": "https://api.github.com/users/goranjovic/orgs",
      "repos_url": "https://api.github.com/users/goranjovic/repos",
      "events_url": "https://api.github.com/users/goranjovic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/goranjovic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T15:24:47Z",
    "updated_at": "2017-08-08T15:28:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "What do you think about adding \"write docstrings for important functions\" to the to-do list? I usually find them useful in REPL. It kind of falls under the blanket term \"good practices\", but it might be good to emphasize it.\r\n\r\nIt's annoying to write those, I know, but we'll spend more time reading that code than writing it!",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/320990681/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
