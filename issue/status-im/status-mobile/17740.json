{
  "url": "https://api.github.com/repos/status-im/status-mobile/issues/17740",
  "repository_url": "https://api.github.com/repos/status-im/status-mobile",
  "labels_url": "https://api.github.com/repos/status-im/status-mobile/issues/17740/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-mobile/issues/17740/comments",
  "events_url": "https://api.github.com/repos/status-im/status-mobile/issues/17740/events",
  "html_url": "https://github.com/status-im/status-mobile/issues/17740",
  "id": 1963491617,
  "node_id": "I_kwDOAx4p2c51CIEh",
  "number": 17740,
  "title": "Add code coverage for unit tests",
  "user": {
    "login": "J-Son89",
    "id": 22799766,
    "node_id": "MDQ6VXNlcjIyNzk5NzY2",
    "avatar_url": "https://avatars.githubusercontent.com/u/22799766?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/J-Son89",
    "html_url": "https://github.com/J-Son89",
    "followers_url": "https://api.github.com/users/J-Son89/followers",
    "following_url": "https://api.github.com/users/J-Son89/following{/other_user}",
    "gists_url": "https://api.github.com/users/J-Son89/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/J-Son89/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/J-Son89/subscriptions",
    "organizations_url": "https://api.github.com/users/J-Son89/orgs",
    "repos_url": "https://api.github.com/users/J-Son89/repos",
    "events_url": "https://api.github.com/users/J-Son89/events{/privacy}",
    "received_events_url": "https://api.github.com/users/J-Son89/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 933023569,
      "node_id": "MDU6TGFiZWw5MzMwMjM1Njk=",
      "url": "https://api.github.com/repos/status-im/status-mobile/labels/feature",
      "name": "feature",
      "color": "172b9e",
      "default": false,
      "description": "feature requests"
    },
    {
      "id": 5977069615,
      "node_id": "LA_kwDOAx4p2c8AAAABZELYLw",
      "url": "https://api.github.com/repos/status-im/status-mobile/labels/E:Mobile%20Developer%20Experience%202023",
      "name": "E:Mobile Developer Experience 2023",
      "color": "bfdadc",
      "default": false,
      "description": "All fixes for developer experience in the last stretch of the year"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "J-Son89",
    "id": 22799766,
    "node_id": "MDQ6VXNlcjIyNzk5NzY2",
    "avatar_url": "https://avatars.githubusercontent.com/u/22799766?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/J-Son89",
    "html_url": "https://github.com/J-Son89",
    "followers_url": "https://api.github.com/users/J-Son89/followers",
    "following_url": "https://api.github.com/users/J-Son89/following{/other_user}",
    "gists_url": "https://api.github.com/users/J-Son89/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/J-Son89/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/J-Son89/subscriptions",
    "organizations_url": "https://api.github.com/users/J-Son89/orgs",
    "repos_url": "https://api.github.com/users/J-Son89/repos",
    "events_url": "https://api.github.com/users/J-Son89/events{/privacy}",
    "received_events_url": "https://api.github.com/users/J-Son89/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "J-Son89",
      "id": 22799766,
      "node_id": "MDQ6VXNlcjIyNzk5NzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/22799766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/J-Son89",
      "html_url": "https://github.com/J-Son89",
      "followers_url": "https://api.github.com/users/J-Son89/followers",
      "following_url": "https://api.github.com/users/J-Son89/following{/other_user}",
      "gists_url": "https://api.github.com/users/J-Son89/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/J-Son89/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/J-Son89/subscriptions",
      "organizations_url": "https://api.github.com/users/J-Son89/orgs",
      "repos_url": "https://api.github.com/users/J-Son89/repos",
      "events_url": "https://api.github.com/users/J-Son89/events{/privacy}",
      "received_events_url": "https://api.github.com/users/J-Son89/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-10-26T12:48:08Z",
  "updated_at": "2023-11-10T19:04:42Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "The unit tests used in status mobile (`make test`) currently have no code coverage, for this reason there is no minimum threshold of test coverage.\r\n\r\nIf we can automate collecting this coverage we can then set a threshold to help prevent developers adding more subs, events, effects without adding the respective tests needed.\r\n\r\n**Acceptance Criteria:**\r\n- Research how we can automate tracking test/code coverage of the unit tests.\r\n- Implement this to get a global coverage of all tested code\r\n\r\nNice to have:\r\n- if we can separate this by sub, event, effect etc then we can have separate thresholds for each.\r\n\r\nInitial implementation should only get this data and not be added to the ci pipeline etc",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/17740/reactions",
    "total_count": 2,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 2,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-mobile/issues/17740/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/1806288308",
    "html_url": "https://github.com/status-im/status-mobile/issues/17740#issuecomment-1806288308",
    "issue_url": "https://api.github.com/repos/status-im/status-mobile/issues/17740",
    "id": 1806288308,
    "node_id": "IC_kwDOAx4p2c5rqcW0",
    "user": {
      "login": "kirked",
      "id": 382765,
      "node_id": "MDQ6VXNlcjM4Mjc2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kirked",
      "html_url": "https://github.com/kirked",
      "followers_url": "https://api.github.com/users/kirked/followers",
      "following_url": "https://api.github.com/users/kirked/following{/other_user}",
      "gists_url": "https://api.github.com/users/kirked/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kirked/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kirked/subscriptions",
      "organizations_url": "https://api.github.com/users/kirked/orgs",
      "repos_url": "https://api.github.com/users/kirked/repos",
      "events_url": "https://api.github.com/users/kirked/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kirked/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-10T19:04:42Z",
    "updated_at": "2023-11-10T19:04:42Z",
    "author_association": "NONE",
    "body": "I have been researching this, and found no good code coverage instrumentation tool for Clojurescript (cloverage doesn't). I have been looking into adding a phase into the self-hosted compiler that will instrument functions for coverage purposes. That would benefit all projects, not just ours, and all functions, not just ones called from a re-frame handler.\r\n\r\nA different solution would be to wrap handler functions in the in-project re-frame macros, and use the Javascript Istanbul project with source maps.",
    "reactions": {
      "url": "https://api.github.com/repos/status-im/status-mobile/issues/comments/1806288308/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
