{
  "url": "https://api.github.com/repos/status-im/status-mobile/issues/1875",
  "repository_url": "https://api.github.com/repos/status-im/status-mobile",
  "labels_url": "https://api.github.com/repos/status-im/status-mobile/issues/1875/labels{/name}",
  "comments_url": "https://api.github.com/repos/status-im/status-mobile/issues/1875/comments",
  "events_url": "https://api.github.com/repos/status-im/status-mobile/issues/1875/events",
  "html_url": "https://github.com/status-im/status-mobile/issues/1875",
  "id": 258456739,
  "node_id": "MDU6SXNzdWUyNTg0NTY3Mzk=",
  "number": 1875,
  "title": "Refactor message data & persistence model",
  "user": {
    "login": "janherich",
    "id": 1910609,
    "node_id": "MDQ6VXNlcjE5MTA2MDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1910609?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/janherich",
    "html_url": "https://github.com/janherich",
    "followers_url": "https://api.github.com/users/janherich/followers",
    "following_url": "https://api.github.com/users/janherich/following{/other_user}",
    "gists_url": "https://api.github.com/users/janherich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/janherich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/janherich/subscriptions",
    "organizations_url": "https://api.github.com/users/janherich/orgs",
    "repos_url": "https://api.github.com/users/janherich/repos",
    "events_url": "https://api.github.com/users/janherich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/janherich/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 692308696,
      "node_id": "MDU6TGFiZWw2OTIzMDg2OTY=",
      "url": "https://api.github.com/repos/status-im/status-mobile/labels/tech-debt",
      "name": "tech-debt",
      "color": "e99695",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "janherich",
    "id": 1910609,
    "node_id": "MDQ6VXNlcjE5MTA2MDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1910609?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/janherich",
    "html_url": "https://github.com/janherich",
    "followers_url": "https://api.github.com/users/janherich/followers",
    "following_url": "https://api.github.com/users/janherich/following{/other_user}",
    "gists_url": "https://api.github.com/users/janherich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/janherich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/janherich/subscriptions",
    "organizations_url": "https://api.github.com/users/janherich/orgs",
    "repos_url": "https://api.github.com/users/janherich/repos",
    "events_url": "https://api.github.com/users/janherich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/janherich/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "janherich",
      "id": 1910609,
      "node_id": "MDQ6VXNlcjE5MTA2MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1910609?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janherich",
      "html_url": "https://github.com/janherich",
      "followers_url": "https://api.github.com/users/janherich/followers",
      "following_url": "https://api.github.com/users/janherich/following{/other_user}",
      "gists_url": "https://api.github.com/users/janherich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janherich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janherich/subscriptions",
      "organizations_url": "https://api.github.com/users/janherich/orgs",
      "repos_url": "https://api.github.com/users/janherich/repos",
      "events_url": "https://api.github.com/users/janherich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janherich/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2017-09-18T12:07:45Z",
  "updated_at": "2017-12-19T14:10:50Z",
  "closed_at": "2017-12-19T14:10:50Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "[comment]: # (Please replace ... with your information. Remove < and >)\r\n\r\n### User Story\r\n\r\nAs a developer, I want to have single place in app, where all data uniquely tied to particular message are held, I also want to have only one (clear) way how to save/update/retrieve message data in/from realm.\r\n\r\n### Description\r\n\r\n[comment]: # (Feature or Bug? i.e Type: Bug)\r\n*Type*: Problem\r\n\r\n[comment]: # (Describe the feature you would like, or briefly summarise the bug and what you did, what you expected to happen, and what actually happens. Sections below)\r\n*Summary*: Currently, we have message data all over the place in app-db and realm. It's directly attached as an ordered sequence under `[:chats chat-id :messages]` key, then we have some data related to messages indexed by message id in `[:message-data :preview]`, `[:message-data :short-preview]`, `[:message-data :status]` and soon also in `[:handler-data]` and `[:message-id->pending-messages]`.\r\nIt's even worse for the realm persistence API, where something is held in message objects, something not (handler-data, pending-messages). \r\nEvery-time when we need to have something message-related with random access by message-id, we invent a new place in app-db where we put it, then we have to keep track of it in subscriptions, when updating messages, write boilerplate code for realm persistence, etc.\r\n\r\n### Solution\r\n[comment]: # (Please summarise the solution and provide a task list on what needs to be fixed.)\r\n*Summary*: We well move **everything** message related under `[:message-by-id]` (or `[:id->message]`) path in app-db. We will rework our realm schema, and persistence functions, eliminate boilerplate and use only handful of message related functions to do everything in regard of message persistence. \r\nUnder `[:chats chat-id :messages]` we will have (ordered) vector of message-references, such as:\r\n```clj\r\n[[:message-by-id \"id1\"]\r\n [:message-by-id \"id2\"]\r\n [:message-by-id \"id3\"]]\r\n```\r\nAs mentioned, ordering of the messages will be maintained by ordering of message references (responsibility of db functions updating `[:chats chat-id :messages]` data) and it will be job of messages subscription(s) to use the references to look-up actual message objects and return it as sequence to view layer.\r\n",
  "closed_by": {
    "login": "asemiankevich",
    "id": 28752642,
    "node_id": "MDQ6VXNlcjI4NzUyNjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/28752642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/asemiankevich",
    "html_url": "https://github.com/asemiankevich",
    "followers_url": "https://api.github.com/users/asemiankevich/followers",
    "following_url": "https://api.github.com/users/asemiankevich/following{/other_user}",
    "gists_url": "https://api.github.com/users/asemiankevich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/asemiankevich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/asemiankevich/subscriptions",
    "organizations_url": "https://api.github.com/users/asemiankevich/orgs",
    "repos_url": "https://api.github.com/users/asemiankevich/repos",
    "events_url": "https://api.github.com/users/asemiankevich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/asemiankevich/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/status-im/status-mobile/issues/1875/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/status-im/status-mobile/issues/1875/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[

]
