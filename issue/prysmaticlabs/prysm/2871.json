{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/2871",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/2871/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/2871/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/2871/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/2871",
  "id": 462350055,
  "node_id": "MDU6SXNzdWU0NjIzNTAwNTU=",
  "number": 2871,
  "title": "Process blocks / attestations from RPC before propagating",
  "user": {
    "login": "prestonvanloon",
    "id": 7246818,
    "node_id": "MDQ6VXNlcjcyNDY4MTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/prestonvanloon",
    "html_url": "https://github.com/prestonvanloon",
    "followers_url": "https://api.github.com/users/prestonvanloon/followers",
    "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
    "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
    "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
    "repos_url": "https://api.github.com/users/prestonvanloon/repos",
    "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 802129906,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDY=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Enhancement",
      "name": "Enhancement",
      "color": "84b6eb",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 934596141,
      "node_id": "MDU6TGFiZWw5MzQ1OTYxNDE=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Discussion",
      "name": "Discussion",
      "color": "f9d0c4",
      "default": false,
      "description": "Simply a thread for talking about stuff"
    },
    {
      "id": 1085357407,
      "node_id": "MDU6TGFiZWwxMDg1MzU3NDA3",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Priority:%20Medium",
      "name": "Priority: Medium",
      "color": "bbf726",
      "default": false,
      "description": "Medium priority item"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2019-06-29T23:13:59Z",
  "updated_at": "2019-09-12T04:13:30Z",
  "closed_at": "2019-09-12T04:13:29Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "After some discussion with @terencechain today, we decided we would like to revisit our strategy for newly created blocks/attestations. \r\n\r\nTo resolve this issue, we would need to outline all of the risks and benefits for each strategy. Here are some thoughts: \r\n\r\nUpon receiving a new objective via RPC. \r\n## Broadcast immediately, then validate after \r\n**Pros**\r\n- Blocks have more time to propagate throughout the network with a short slot time\r\n- Attestations have more time to propagate throughout the network with a much longer time constraint. 200 to 500ms is negligible for attestations where it is significant for blocks.  \r\n\r\n**Cons**\r\n- If blocks fail locally, they will almost certainly fail in our peers. Peers may have reputation implemented and prune \"bad\" peers.\r\n- If the beacon chain node has any slashing detection, this would be in the validation of attestations. By-passing validation for attestations means there is a higher risk of validator being slashed.\r\n",
  "closed_by": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/2871/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/2871/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/507057719",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/2871#issuecomment-507057719",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/2871",
    "id": 507057719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNzA1NzcxOQ==",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-30T18:40:34Z",
    "updated_at": "2019-06-30T18:41:56Z",
    "author_association": "MEMBER",
    "body": "Captured a few notes @djrtwo mentioned on Gitter. These are good points.\r\n\r\n_In response to Beacon node’s reputation is on the line:_\r\n`\r\nI think the idea here was a speed concern. A validator is a very privileged user wrt a beacon node (likely the owner). The validator also likely got the message (block/attestation) directly from the node, only to sign it and pass it back. To perform full block or attestation validation prior to sending would reduce the speed of the message hitting the network by a potentially not inconsequential amount. The trust relationship and requirements imo would imply sending immediately, then performing local validation and inclusion in the block tree\r\n`\r\n\r\n_In response to Peers may disconnect you if you broadcast bad blocks and attestations:_\r\n`\r\nThis is true but given the trust relationship here, a very exceptional case. If for some reason you were a BN providing attester services to untrusted attesters, it would certainly make sense to either (1) have a flag to toggle this pre-validation on/off or (2) only broadcast message that the BN previously passed out via requests (track signed_roots for messages you already validated and if you get one back signed, you know it’s safe to broadcast). Could also just do a bls_verify on the block if already seen signed_root(block) before when creating it initially\r\n`\r\n\r\nThanks Danny!",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/507057719/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/507061724",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/2871#issuecomment-507061724",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/2871",
    "id": 507061724,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNzA2MTcyNA==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-30T19:39:55Z",
    "updated_at": "2019-06-30T19:39:55Z",
    "author_association": "MEMBER",
    "body": "This could be a configuration flag. Perhaps public, unauthenticated nodes would allow anyone to submit attestations or blocks but the node would verify the processing before submitting to the network. ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/507061724/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/530656885",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/2871#issuecomment-530656885",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/2871",
    "id": 530656885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDY1Njg4NQ==",
    "user": {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-12T04:13:29Z",
    "updated_at": "2019-09-12T04:13:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "We have opted to go for the broadcast first => process after approach as the canonical way of handling this across eth2 clients. The pros of this outweigh the cons outlined above heavily and it is much preferred to get blocks out to the network ASAP than otherwise.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/530656885/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
