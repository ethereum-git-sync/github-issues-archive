{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5310",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5310/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5310/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5310/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/5310",
  "id": 594432331,
  "node_id": "MDU6SXNzdWU1OTQ0MzIzMzE=",
  "number": 5310,
  "title": "Installing Prysm on ARM Hardware - fails for armv6l (Raspberry Pi Zero W)",
  "user": {
    "login": "chrishobcroft",
    "id": 2212651,
    "node_id": "MDQ6VXNlcjIyMTI2NTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2212651?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chrishobcroft",
    "html_url": "https://github.com/chrishobcroft",
    "followers_url": "https://api.github.com/users/chrishobcroft/followers",
    "following_url": "https://api.github.com/users/chrishobcroft/following{/other_user}",
    "gists_url": "https://api.github.com/users/chrishobcroft/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chrishobcroft/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chrishobcroft/subscriptions",
    "organizations_url": "https://api.github.com/users/chrishobcroft/orgs",
    "repos_url": "https://api.github.com/users/chrishobcroft/repos",
    "events_url": "https://api.github.com/users/chrishobcroft/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chrishobcroft/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 802129906,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDY=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Enhancement",
      "name": "Enhancement",
      "color": "84b6eb",
      "default": false,
      "description": "New feature or request"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "prestonvanloon",
    "id": 7246818,
    "node_id": "MDQ6VXNlcjcyNDY4MTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/prestonvanloon",
    "html_url": "https://github.com/prestonvanloon",
    "followers_url": "https://api.github.com/users/prestonvanloon/followers",
    "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
    "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
    "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
    "repos_url": "https://api.github.com/users/prestonvanloon/repos",
    "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "SuburbanDad",
      "id": 61096102,
      "node_id": "MDQ6VXNlcjYxMDk2MTAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/61096102?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SuburbanDad",
      "html_url": "https://github.com/SuburbanDad",
      "followers_url": "https://api.github.com/users/SuburbanDad/followers",
      "following_url": "https://api.github.com/users/SuburbanDad/following{/other_user}",
      "gists_url": "https://api.github.com/users/SuburbanDad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SuburbanDad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SuburbanDad/subscriptions",
      "organizations_url": "https://api.github.com/users/SuburbanDad/orgs",
      "repos_url": "https://api.github.com/users/SuburbanDad/repos",
      "events_url": "https://api.github.com/users/SuburbanDad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SuburbanDad/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 14,
  "created_at": "2020-04-05T12:24:13Z",
  "updated_at": "2020-07-14T00:27:19Z",
  "closed_at": "2020-06-01T15:52:34Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Description of the bug\r\n\r\nI tried to install and run Prysm on a Raspberry Pi Zero W, `armv6l` chipset, running `Raspbian 10`.\r\n\r\nIt failed with the error:\r\n\r\n```\r\nStarting Prysm beacon-chain --clear-db\r\n/home/pi/prysm/dist/beacon-chain-v0.3.9-linux-armv6l: line 1: Not: command not found\r\n```\r\n\r\n## Steps to reproduce\r\n\r\n0. Environment: `armv6l` (Raspberry Pi Zero W), running `Raspbian 10` (full spec below)\r\n\r\n1. Follow these instructions: \r\n[Installing Prysm on ARM Hardware Â· Prysm 'Sapphire' Testnet.pdf](https://github.com/prysmaticlabs/prysm/files/4433546/Installing.Prysm.on.ARM.Hardware.Prysm.Sapphire.Testnet.pdf) on a Raspberry Pi Zero\r\n\r\n2. When you get to \"Run the `prysm.sh` script\", it fails with the following error:\r\n```\r\npi@raspberrypi:~/prysm $ ./prysm.sh beacon-chain --clear-db\r\nLatest Prysm version is v0.3.9.\r\nDownloading beacon chain@v0.3.9 to /home/pi/prysm/dist/beacon-chain-v0.3.9-linux-armv6l (automatically selected latest available version)\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100     9  100     9    0     0      9      0  0:00:01 --:--:--  0:00:01     9\r\nDownloading validator@v0.3.9 to /home/pi/prysm/dist/validator-v0.3.9-linux-armv6l (automatically selected latest available version)\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100     9  100     9    0     0      8      0  0:00:01  0:00:01 --:--:--     8\r\nStarting Prysm beacon-chain --clear-db\r\n/home/pi/prysm/dist/beacon-chain-v0.3.9-linux-armv6l: line 1: Not: command not found\r\n```\r\n\r\nFurther to some conversation with @nisdas and @mratsim, and some further investigation, it would appear that the `prysm.sh` script downloads two files:\r\n\r\n- `/dist/beacon-chain-v0.3.9-linux-armv6l`\r\n- `/dist/validator-v0.3.9-linux-armv6l`\r\n\r\nand then attempts to run `beacon-chain-v0.3.9-linux-armv6l`.\r\n\r\nIt fails, because the files in `/dist/*` both contain `Not Found`, presumably as a result of a failed download from a dead URL.\r\n\r\n## What I expect to happen\r\n\r\nFirst, I expected that there would be a script for `armv6l`, and that the process would run Prysm on a Raspberry Pi Zero W (I was so excited, and then disappointed!).\r\n\r\nWhen it failed, now I see that what I expect to happen is that there is an error showing that `armv6l` is not supported, per @nisdas, with a message also for @prestonvanloon :)\r\n\r\n![image](https://user-images.githubusercontent.com/2212651/78491626-4834a280-7766-11ea-90d3-4ecaf17f5957.png)\r\n\r\n## Hardware Specs\r\n\r\nRaspberry Pi Zero W (~$10):\r\n![image](https://user-images.githubusercontent.com/2212651/78486677-e32c7d00-7764-11ea-9eac-6141305f4c82.png)\r\n```\r\npi@raspberrypi:~/prysm/dist $ lscpu\r\nArchitecture:        armv6l\r\nByte Order:          Little Endian\r\nCPU(s):              1\r\nOn-line CPU(s) list: 0\r\nThread(s) per core:  1\r\nCore(s) per socket:  1\r\nSocket(s):           1\r\nVendor ID:           ARM\r\nModel:               7\r\nModel name:          ARM1176\r\nStepping:            r0p7\r\nCPU max MHz:         1000.0000\r\nCPU min MHz:         700.0000\r\nBogoMIPS:            997.08\r\nFlags:               half thumb fastmult vfp edsp java tls\r\n```\r\n```\r\npi@raspberrypi:~/prysm/dist $ lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID:\tRaspbian\r\nDescription:\tRaspbian GNU/Linux 10 (buster)\r\nRelease:\t10\r\nCodename:\tbuster\r\n```",
  "closed_by": {
    "login": "chrishobcroft",
    "id": 2212651,
    "node_id": "MDQ6VXNlcjIyMTI2NTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2212651?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chrishobcroft",
    "html_url": "https://github.com/chrishobcroft",
    "followers_url": "https://api.github.com/users/chrishobcroft/followers",
    "following_url": "https://api.github.com/users/chrishobcroft/following{/other_user}",
    "gists_url": "https://api.github.com/users/chrishobcroft/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chrishobcroft/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chrishobcroft/subscriptions",
    "organizations_url": "https://api.github.com/users/chrishobcroft/orgs",
    "repos_url": "https://api.github.com/users/chrishobcroft/repos",
    "events_url": "https://api.github.com/users/chrishobcroft/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chrishobcroft/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5310/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5310/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/609460315",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5310#issuecomment-609460315",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5310",
    "id": 609460315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwOTQ2MDMxNQ==",
    "user": {
      "login": "0xKiwi",
      "id": 6251510,
      "node_id": "MDQ6VXNlcjYyNTE1MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6251510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xKiwi",
      "html_url": "https://github.com/0xKiwi",
      "followers_url": "https://api.github.com/users/0xKiwi/followers",
      "following_url": "https://api.github.com/users/0xKiwi/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xKiwi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xKiwi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xKiwi/subscriptions",
      "organizations_url": "https://api.github.com/users/0xKiwi/orgs",
      "repos_url": "https://api.github.com/users/0xKiwi/repos",
      "events_url": "https://api.github.com/users/0xKiwi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xKiwi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-05T18:24:22Z",
    "updated_at": "2020-04-05T18:24:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hello @chrishobcroft ! Thank you for trying Prysm on your Pi Zero W haha\r\n\r\nLooks like we don't support this currently, sorry about that! @prestonvanloon is this something we can support in the future?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/609460315/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/609489693",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5310#issuecomment-609489693",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5310",
    "id": 609489693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwOTQ4OTY5Mw==",
    "user": {
      "login": "mfiumara",
      "id": 1368859,
      "node_id": "MDQ6VXNlcjEzNjg4NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1368859?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mfiumara",
      "html_url": "https://github.com/mfiumara",
      "followers_url": "https://api.github.com/users/mfiumara/followers",
      "following_url": "https://api.github.com/users/mfiumara/following{/other_user}",
      "gists_url": "https://api.github.com/users/mfiumara/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mfiumara/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mfiumara/subscriptions",
      "organizations_url": "https://api.github.com/users/mfiumara/orgs",
      "repos_url": "https://api.github.com/users/mfiumara/repos",
      "events_url": "https://api.github.com/users/mfiumara/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mfiumara/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-05T21:46:02Z",
    "updated_at": "2020-04-05T21:46:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "It looks like you'd have to add ARM32 support in order to run the client on any raspberry pi (raspberry pi model 3 is armv7, which is also a 32 bit architecture).\r\nI'm not sure how hard that is regarding this project, maybe as easy as adding the `(\"linux\", \"arm32\")` pair to `tools/binary_targets.bzl`?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/609489693/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/609550305",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5310#issuecomment-609550305",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5310",
    "id": 609550305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwOTU1MDMwNQ==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-06T03:45:50Z",
    "updated_at": "2020-04-06T03:45:50Z",
    "author_association": "MEMBER",
    "body": "Hey @mfiumara @chrishobcroft , there are certain blockers to us supporting 32-bit architectures. We currently use bolt-db as our primary key value store. Due to it being memory-mapped, can only support database sizes of up to 2gb in a 32-bit address space. For the requirements of the beacon-chain, that will never be enough. \r\n\r\nWe will need to support larger database sizes as a minimum in order to have a functional beacon node, for more clarity on this you can take a look at: \r\nhttps://github.com/boltdb/bolt/issues/280\r\n\r\nA way to unblock us would be to support an alternative database, which supports larger  database sizes on 32-bit architectures. The implementation would have to conform to this interface:\r\nhttps://github.com/prysmaticlabs/prysm/blob/master/beacon-chain/db/iface/interface.go#L130 \r\n\r\nThis would be a non-trivial task to do as you can see, as a lot of existing functionality of the beacon database would have to be ported over to the new implementation. \r\n\r\nOur BLS library previously was blocked on this too as we only supported 64 bit architectures, however with our recent improvements to it and with some additional build tooling, if I am not wrong we should be able to support `arm32`. @prestonvanloon can probably chime in as he has been mostly working on it. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/609550305/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/609778514",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5310#issuecomment-609778514",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5310",
    "id": 609778514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwOTc3ODUxNA==",
    "user": {
      "login": "mratsim",
      "id": 22738317,
      "node_id": "MDQ6VXNlcjIyNzM4MzE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/22738317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mratsim",
      "html_url": "https://github.com/mratsim",
      "followers_url": "https://api.github.com/users/mratsim/followers",
      "following_url": "https://api.github.com/users/mratsim/following{/other_user}",
      "gists_url": "https://api.github.com/users/mratsim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mratsim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mratsim/subscriptions",
      "organizations_url": "https://api.github.com/users/mratsim/orgs",
      "repos_url": "https://api.github.com/users/mratsim/repos",
      "events_url": "https://api.github.com/users/mratsim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mratsim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-06T12:59:21Z",
    "updated_at": "2020-04-06T12:59:21Z",
    "author_association": "NONE",
    "body": "Nimbus can run in 32-bit mode and but even on our side the Raspberry Pi Zero is probably stretching it ;), well it can probably run but may not support more than 1 peer due to cryptography + epoch processing + fork choice bottlenecks. Maybe Sigma-Prime @paulhauner can chime in as well since they spend the last 2 months on optimization but I'm not hopeful.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/609778514/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/609848943",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5310#issuecomment-609848943",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5310",
    "id": 609848943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwOTg0ODk0Mw==",
    "user": {
      "login": "SuburbanDad",
      "id": 61096102,
      "node_id": "MDQ6VXNlcjYxMDk2MTAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/61096102?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SuburbanDad",
      "html_url": "https://github.com/SuburbanDad",
      "followers_url": "https://api.github.com/users/SuburbanDad/followers",
      "following_url": "https://api.github.com/users/SuburbanDad/following{/other_user}",
      "gists_url": "https://api.github.com/users/SuburbanDad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SuburbanDad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SuburbanDad/subscriptions",
      "organizations_url": "https://api.github.com/users/SuburbanDad/orgs",
      "repos_url": "https://api.github.com/users/SuburbanDad/repos",
      "events_url": "https://api.github.com/users/SuburbanDad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SuburbanDad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-06T15:01:25Z",
    "updated_at": "2020-04-06T15:03:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "FWIW, the beefiest pi,  4b+ with 4gb is the least I have had any success with for beacon on the current testnet.  Things may change on the new test net, but I would be very suprised if beacon ran reliably on anything less.  \r\n\r\nValidators can run on a 2b/3b, though not with raspbian since it is 32 bit, and as @nisdas mentioned, 64bit is necessary for prysm(not just processor but the OS also).  It'd be a neat trick to see a pi zero/w work as a validator tho.  Might give pi zero a whirl with nimbus validator on the new testnet .\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/609848943/reactions",
      "total_count": 4,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 1,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/610046091",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5310#issuecomment-610046091",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5310",
    "id": 610046091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDA0NjA5MQ==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-06T21:27:10Z",
    "updated_at": "2020-04-06T21:27:31Z",
    "author_association": "NONE",
    "body": "Lighthouse (LH) doesn't support 32-bit, either. Even if we did, I think a Pi Zero is _really_ stretching it for a LH beacon node, especially one that has any importance. Running a LH validator client on it is probably quite achievable, however I certainly wouldn't stake my own ETH on it.\r\n\r\nGetting a Pi Zero beacon node to sync would be one thing but keeping it up during network instability or an attack would be a whole other thing.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/610046091/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/610141578",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5310#issuecomment-610141578",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5310",
    "id": 610141578,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDE0MTU3OA==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-07T02:43:07Z",
    "updated_at": "2020-04-07T02:43:07Z",
    "author_association": "MEMBER",
    "body": "@mfiumara Adding 32 bit ARM cross compile support involves adding another bazel toolchain. I have removed that legacy bit of starlark logic that you are referencing (https://github.com/prysmaticlabs/prysm/pull/5329). \r\n\r\n@SuburbanDad If you are interested here, could you add a toolchain and config for arm 32 bit cross compile? \r\n\r\nIn any case, we will not support running a beacon node on 32 bit architectures due to the reasons @nisdas and others have outlined above. However, it would be interesting to see the performance of a validator on rpi zero in a testnet with a remote beacon chain instance on another machine (cloud or local network).",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/610141578/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 2
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/626174170",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5310#issuecomment-626174170",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5310",
    "id": 626174170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjE3NDE3MA==",
    "user": {
      "login": "criticaltv",
      "id": 59374467,
      "node_id": "MDQ6VXNlcjU5Mzc0NDY3",
      "avatar_url": "https://avatars.githubusercontent.com/u/59374467?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/criticaltv",
      "html_url": "https://github.com/criticaltv",
      "followers_url": "https://api.github.com/users/criticaltv/followers",
      "following_url": "https://api.github.com/users/criticaltv/following{/other_user}",
      "gists_url": "https://api.github.com/users/criticaltv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/criticaltv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/criticaltv/subscriptions",
      "organizations_url": "https://api.github.com/users/criticaltv/orgs",
      "repos_url": "https://api.github.com/users/criticaltv/repos",
      "events_url": "https://api.github.com/users/criticaltv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/criticaltv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-09T13:11:55Z",
    "updated_at": "2020-05-09T13:15:18Z",
    "author_association": "NONE",
    "body": "Hey @SuburbanDad I'm ready to test on `armv6l` architecture...\r\n\r\nRunning a Validator with a remote Beacon Chain could be a very cool thing to do, for people wanting to dedicate some infrastructure to run their own staking service, and their own 32 ETH",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/626174170/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/636895513",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5310#issuecomment-636895513",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5310",
    "id": 636895513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNjg5NTUxMw==",
    "user": {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-01T14:34:55Z",
    "updated_at": "2020-06-01T14:35:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi. @criticaltv and @chrishobcroft would you consider this issue resolved? We do not aim to offer 32 bit architecture support at the moment, unfortunately.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/636895513/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/657307710",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5310#issuecomment-657307710",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5310",
    "id": 657307710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzMwNzcxMA==",
    "user": {
      "login": "alex-miller-0",
      "id": 7378490,
      "node_id": "MDQ6VXNlcjczNzg0OTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7378490?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alex-miller-0",
      "html_url": "https://github.com/alex-miller-0",
      "followers_url": "https://api.github.com/users/alex-miller-0/followers",
      "following_url": "https://api.github.com/users/alex-miller-0/following{/other_user}",
      "gists_url": "https://api.github.com/users/alex-miller-0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alex-miller-0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alex-miller-0/subscriptions",
      "organizations_url": "https://api.github.com/users/alex-miller-0/orgs",
      "repos_url": "https://api.github.com/users/alex-miller-0/repos",
      "events_url": "https://api.github.com/users/alex-miller-0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alex-miller-0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-13T01:08:13Z",
    "updated_at": "2020-07-13T01:08:13Z",
    "author_association": "NONE",
    "body": "@prestonvanloon We would love to look into running a validator (not beacon) on the @gridplus Lattice hardware wallet. We have a 32-bit MIPS architecture, though. If you were to add that toolchain we would be grateful!",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/657307710/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/657811457",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5310#issuecomment-657811457",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5310",
    "id": 657811457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzgxMTQ1Nw==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-13T21:50:54Z",
    "updated_at": "2020-07-13T21:50:54Z",
    "author_association": "MEMBER",
    "body": "@alex-miller-0 Thanks for the feedback!\r\n\r\nWould an armv6l binary work for your hardware our is there something special about compiling for mipsel? (Is it little endian or endian?)",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/657811457/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/657835690",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5310#issuecomment-657835690",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5310",
    "id": 657835690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzgzNTY5MA==",
    "user": {
      "login": "alex-miller-0",
      "id": 7378490,
      "node_id": "MDQ6VXNlcjczNzg0OTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7378490?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alex-miller-0",
      "html_url": "https://github.com/alex-miller-0",
      "followers_url": "https://api.github.com/users/alex-miller-0/followers",
      "following_url": "https://api.github.com/users/alex-miller-0/following{/other_user}",
      "gists_url": "https://api.github.com/users/alex-miller-0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alex-miller-0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alex-miller-0/subscriptions",
      "organizations_url": "https://api.github.com/users/alex-miller-0/orgs",
      "repos_url": "https://api.github.com/users/alex-miller-0/repos",
      "events_url": "https://api.github.com/users/alex-miller-0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alex-miller-0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-13T22:45:45Z",
    "updated_at": "2020-07-13T22:45:45Z",
    "author_association": "NONE",
    "body": "@prestonvanloon It is a 32bit MIPS architecture that I believe can be compiled with either BE or LE. I'm not sure if `armv6l` would work, but I suspect not, since it's not an ARM architecture. I suppose we could try it haha.\r\n\r\nHere's [some info](https://www.differencebetween.com/difference-between-mips-and-vs-arm/) on MIPS vs ARM; looks like MIPS has more registers and there are a few differences in instruction sets (which are in the same family, so mostly pretty similar).\r\n\r\nTagging @maevyn11 who is our resident Omega2+ expert.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/657835690/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/657878001",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5310#issuecomment-657878001",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5310",
    "id": 657878001,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Nzg3ODAwMQ==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-13T23:41:33Z",
    "updated_at": "2020-07-13T23:41:33Z",
    "author_association": "MEMBER",
    "body": "I think the biggest hurdle might be the BLS encryption library. Most of these have hardware accelerated assembly instructions.\r\n\r\nCurrent options are:\r\n- [Pure go implementation](https://github.com/phoreproject/bls) -- slow, may not be up to date with latest draft spec, but cross compile is a non-issue\r\n- [Herumi's library](https://github.com/herumi/bls-eth-go-binary) -- More supported architectures than blst, including armv6l\r\n- [Supranational blst](https://github.com/supranational/blst)  -- Faster than Herumi, only supports x86_64 and ARM64 at the moment\r\n\r\nNone of the above have been audited yet and only the latter two options are serious candidates for Prysm. The pure go implementation _might_ work since validator workloads are generally very lightweight.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/657878001/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/657888540",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5310#issuecomment-657888540",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5310",
    "id": 657888540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Nzg4ODU0MA==",
    "user": {
      "login": "alex-miller-0",
      "id": 7378490,
      "node_id": "MDQ6VXNlcjczNzg0OTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7378490?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alex-miller-0",
      "html_url": "https://github.com/alex-miller-0",
      "followers_url": "https://api.github.com/users/alex-miller-0/followers",
      "following_url": "https://api.github.com/users/alex-miller-0/following{/other_user}",
      "gists_url": "https://api.github.com/users/alex-miller-0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alex-miller-0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alex-miller-0/subscriptions",
      "organizations_url": "https://api.github.com/users/alex-miller-0/orgs",
      "repos_url": "https://api.github.com/users/alex-miller-0/repos",
      "events_url": "https://api.github.com/users/alex-miller-0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alex-miller-0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-13T23:56:02Z",
    "updated_at": "2020-07-14T00:27:19Z",
    "author_association": "NONE",
    "body": "Well, pure go would probably work fine. We already cross compile our daemon using `GOARCH=mipsle GOOS=linux go build`. Depending on what operations are being done, the latency may or may not be a problem. Keep in mind that our core is quite slow, so if there are a ton of operations it may be problematic.\r\n\r\nWhere is the BLS encryption used in the `validator` code? Is is just part of signing, or does the block producing stuff need BLS too? (or is there other functionality that needs it?)\r\n\r\nWe would be implementing signing in embedded C within our secure environment (I mentioned earlier how we would need to add our own signing module anyway), so if BLS is only needed for signing, we could potentially fork that requirement out of the go build. I'm not too familiar with how this all works, though.\r\n\r\nEdit: Just doing a quick scan of your `validator` codebase, it looks like `bls` is only used in the `client` package when referencing the keystore and asking for signatures via `keyManagerV2`. Again, I am a bit of a noob wrt eth2 stuff, but I believe all we are looking for is the `client` package itself (aggregating, proposing, attesting) and a hook into an external keystore (using a module that we would write). So perhaps the best strategy here is just forking out the keystore stuff and adding our own module.\r\n\r\nEdit2: Ah, there is also sig validation, obviously. So yeah, I guess we would still need the golang bls module. I'm assuming the performance constraint would be validating all the tx sigs.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/657888540/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
