{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/13003",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/13003/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/13003/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/13003/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/13003",
  "id": 1926748868,
  "node_id": "I_kwDOBvuov85y19rE",
  "number": 13003,
  "title": "Enable users to initialize a new checkpoint sync atop an existing DB",
  "user": {
    "login": "kasey",
    "id": 489222,
    "node_id": "MDQ6VXNlcjQ4OTIyMg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/489222?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kasey",
    "html_url": "https://github.com/kasey",
    "followers_url": "https://api.github.com/users/kasey/followers",
    "following_url": "https://api.github.com/users/kasey/following{/other_user}",
    "gists_url": "https://api.github.com/users/kasey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kasey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kasey/subscriptions",
    "organizations_url": "https://api.github.com/users/kasey/orgs",
    "repos_url": "https://api.github.com/users/kasey/repos",
    "events_url": "https://api.github.com/users/kasey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kasey/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "kasey",
    "id": 489222,
    "node_id": "MDQ6VXNlcjQ4OTIyMg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/489222?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kasey",
    "html_url": "https://github.com/kasey",
    "followers_url": "https://api.github.com/users/kasey/followers",
    "following_url": "https://api.github.com/users/kasey/following{/other_user}",
    "gists_url": "https://api.github.com/users/kasey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kasey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kasey/subscriptions",
    "organizations_url": "https://api.github.com/users/kasey/orgs",
    "repos_url": "https://api.github.com/users/kasey/repos",
    "events_url": "https://api.github.com/users/kasey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kasey/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "kasey",
      "id": 489222,
      "node_id": "MDQ6VXNlcjQ4OTIyMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/489222?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kasey",
      "html_url": "https://github.com/kasey",
      "followers_url": "https://api.github.com/users/kasey/followers",
      "following_url": "https://api.github.com/users/kasey/following{/other_user}",
      "gists_url": "https://api.github.com/users/kasey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kasey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kasey/subscriptions",
      "organizations_url": "https://api.github.com/users/kasey/orgs",
      "repos_url": "https://api.github.com/users/kasey/repos",
      "events_url": "https://api.github.com/users/kasey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kasey/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-10-04T18:20:42Z",
  "updated_at": "2023-10-04T18:41:53Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# ðŸš€ Feature Request\r\n\r\n### Description\r\n\r\nCurrently the beacon node will ignore the checkpoint sync flags if there is an existing db value that indicates checkpoint sync has previously written an origin state+block to the db. @potuz  has asked for a way to re-sync a checkpoint synced node and backfill to a given previous epoch in order to \"import\" the existing state.\r\n\r\nThere is a ux problem here, which is that people often keep static sets of flags on their nodes, which persist across restarts. For instance, in a config file used by systemd or the flags for a k8s pod. We don't want a restarting process to always initialize a fresh checkpoint sync, unless we're sure the user wants it.\r\n\r\nFor file-based checkpoint sync this is easy. If the roots of the given state/block don't match those found in the db, initialize checkpoint sync using the given flags.\r\n\r\nFor url-based checkpoint sync it's more tricky, because the node will fetch the newest finalized block from the given beacon api, which will almost always be a different root.\r\n\r\n### Describe the solution you'd like\r\n\r\nFor file-based syncing, check the given files to see if they match the existing origin. If they don't match, initialize a new checkpoint sync.\r\n\r\nFor URLs, we can let the user tweak the url to \"bust the cache\". This requires that we start storing the URL used for the last successful checkpoint sync in the DB. If a URL is specified and doesn't match, that means that the user wants to resync. URL fragments give us a nice tool for busting the cache without messing up the actual request - the user can specify something like `https://my-cp-sync-url/#resync-epoch-xyz` to replace the previous run of `https://my-cp-sync-url`. The flag initialization code will see the full string including the `#resync-epoch-xyz` fragment, allowing the user to force a mismatch and resync. But the fragment will be discarded by the request url builder, allowing the user to trigger the \"cache bust\" without breaking the rules of URL semantics.\r\n\r\n### Describe alternatives you've considered\r\n\r\nWe could allow the user to specify specific slots or roots to start from rather than grabbing the most recently finalized block. At startup we would check if those match the origin data in the database. An advantage of this alternative is that it could be a useful power user / dev feature. 2 disadvantages: it would create more flag bloat, and it would require more expertise in the simple case where a user wants to re-sync, but is fine with the most recently finalized block.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/13003/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/13003/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1747444008",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/13003#issuecomment-1747444008",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/13003",
    "id": 1747444008,
    "node_id": "IC_kwDOBvuov85oJ-Eo",
    "user": {
      "login": "potuz",
      "id": 16044918,
      "node_id": "MDQ6VXNlcjE2MDQ0OTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16044918?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/potuz",
      "html_url": "https://github.com/potuz",
      "followers_url": "https://api.github.com/users/potuz/followers",
      "following_url": "https://api.github.com/users/potuz/following{/other_user}",
      "gists_url": "https://api.github.com/users/potuz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/potuz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/potuz/subscriptions",
      "organizations_url": "https://api.github.com/users/potuz/orgs",
      "repos_url": "https://api.github.com/users/potuz/repos",
      "events_url": "https://api.github.com/users/potuz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/potuz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-04T18:41:53Z",
    "updated_at": "2023-10-04T18:41:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "A first impression reply here, and probably not a popular take: let the user do a fresh checkpoint sync if they forget to remove the flags on restarts. ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1747444008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
