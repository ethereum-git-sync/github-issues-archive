{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9371",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9371/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9371/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9371/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/9371",
  "id": 967928744,
  "node_id": "MDU6SXNzdWU5Njc5Mjg3NDQ=",
  "number": 9371,
  "title": "Include Golangci-lint in Our Github Actions and Resolve Lint Failures",
  "user": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 802129906,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDY=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Enhancement",
      "name": "Enhancement",
      "color": "84b6eb",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 802129907,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDc=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Help%20Wanted",
      "name": "Help Wanted",
      "color": "33aa3f",
      "default": false,
      "description": "Extra attention is needed"
    },
    {
      "id": 802129908,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDg=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Good%20First%20Issue",
      "name": "Good First Issue",
      "color": "7057ff",
      "default": false,
      "description": "Good for newcomers"
    },
    {
      "id": 1085356222,
      "node_id": "MDU6TGFiZWwxMDg1MzU2MjIy",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/CI",
      "name": "CI",
      "color": "c9bffc",
      "default": false,
      "description": "Continuous integration related items"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2021-08-12T03:16:09Z",
  "updated_at": "2021-10-05T12:50:37Z",
  "closed_at": "2021-10-05T12:50:37Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# ðŸš€ Feature Request\r\n\r\n### Description\r\n\r\nOur team currently relies on a combination of static analyzers for critical issues, shadowing, ineffectual assignment, and more. Additionally, we utilize Goland IDE's code inspection and a few other tools to improve code quality before checking in code into the repo. However, we should be leveraging linters a lot more than we do today. This issue describes what we want in terms of linters in our repo.\r\n\r\n### Describe the solution you'd like\r\n\r\nAfter some experience with various Go linters, [golangci-lint](https://golangci-lint.run/usage/configuration/) seems like the one with the most documentation, maintenance, and speed. We believe it would be a great addition to our project, and can be customized as much as we desire. We started with adding golangci-lint as a Github action in this [pull request](https://github.com/prysmaticlabs/prysm/pull/9369) #9369, however, the amount of work needed to get our repository to satisfy its rules is a lot for our team at the moment.\r\n\r\nWe are looking for help on satisfying [golangci-lint](https://golangci-lint.run/usage/configuration/) in Prysm. A PR to resolve this issue can start from the `lint-action` branch from #9369 and help us resolve all pending action items.",
  "closed_by": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9371/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9371/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/898594278",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9371#issuecomment-898594278",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9371",
    "id": 898594278,
    "node_id": "IC_kwDOBvuov841j3Xm",
    "user": {
      "login": "estensen",
      "id": 9142800,
      "node_id": "MDQ6VXNlcjkxNDI4MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9142800?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/estensen",
      "html_url": "https://github.com/estensen",
      "followers_url": "https://api.github.com/users/estensen/followers",
      "following_url": "https://api.github.com/users/estensen/following{/other_user}",
      "gists_url": "https://api.github.com/users/estensen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/estensen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/estensen/subscriptions",
      "organizations_url": "https://api.github.com/users/estensen/orgs",
      "repos_url": "https://api.github.com/users/estensen/repos",
      "events_url": "https://api.github.com/users/estensen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/estensen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-13T16:53:04Z",
    "updated_at": "2021-08-13T16:53:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi, I'd like to help with this. I can start this weekend ðŸ˜Ž ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/898594278/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/899304567",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9371#issuecomment-899304567",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9371",
    "id": 899304567,
    "node_id": "IC_kwDOBvuov841mkx3",
    "user": {
      "login": "estensen",
      "id": 9142800,
      "node_id": "MDQ6VXNlcjkxNDI4MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9142800?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/estensen",
      "html_url": "https://github.com/estensen",
      "followers_url": "https://api.github.com/users/estensen/followers",
      "following_url": "https://api.github.com/users/estensen/following{/other_user}",
      "gists_url": "https://api.github.com/users/estensen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/estensen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/estensen/subscriptions",
      "organizations_url": "https://api.github.com/users/estensen/orgs",
      "repos_url": "https://api.github.com/users/estensen/repos",
      "events_url": "https://api.github.com/users/estensen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/estensen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-16T07:58:47Z",
    "updated_at": "2021-08-16T07:58:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@rauljordan There are about 50 cases of shadowing declaration of `err`. What's the preferred way of solving that?\r\n\r\nExample\r\n```go\r\nerr := doSomething()\r\nif err != nil {\r\n\tpanic()\r\n}\r\n\r\nif err := doSomethingElse(); err != nil {\r\n\tpanic()\r\nâ€¨}\r\n```\r\n\r\nRenaming errors seems a bit ugly to me\r\n```go\r\nerr := doSomething()\r\nif err != nil {\r\n\tpanic()\r\n}\r\n\r\nif otherErr := doSomethingElse(); otherErr != nil {\r\n\tpanic()\r\nâ€¨}\r\n```\r\n\r\nTo not use the one-liner format is more verbose\r\n```go\r\nerr := doSomething()\r\nif err != nil {\r\n\tpanic()\r\n}\r\n\r\nerr = doSomethingElse()\r\nif err != nil {\r\n\tpanic()\r\nâ€¨}\r\n```\r\n\r\nOr ignore them as they're not really a problem?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/899304567/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/899569571",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9371#issuecomment-899569571",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9371",
    "id": 899569571,
    "node_id": "IC_kwDOBvuov841nlej",
    "user": {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-16T14:44:57Z",
    "updated_at": "2021-08-16T14:44:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Let's ignore that linter because we agree it is not a problem. Don't add individual ignore rules for each instance, but instead, remove that linter from golangci-lint",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/899569571/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/899737532",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9371#issuecomment-899737532",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9371",
    "id": 899737532,
    "node_id": "IC_kwDOBvuov841oOe8",
    "user": {
      "login": "rkapka",
      "id": 28876818,
      "node_id": "MDQ6VXNlcjI4ODc2ODE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/28876818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkapka",
      "html_url": "https://github.com/rkapka",
      "followers_url": "https://api.github.com/users/rkapka/followers",
      "following_url": "https://api.github.com/users/rkapka/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkapka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkapka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkapka/subscriptions",
      "organizations_url": "https://api.github.com/users/rkapka/orgs",
      "repos_url": "https://api.github.com/users/rkapka/repos",
      "events_url": "https://api.github.com/users/rkapka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkapka/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-16T18:47:16Z",
    "updated_at": "2021-08-16T18:49:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Won't that remove checking shadowing all together @rauljordan ? I agree we don't want to ignore every instance, but maybe there is a way to configure the linter so that it does not check `err` shadowing? This variable name probably covers 99.99% of all cases.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/899737532/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/899742492",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9371#issuecomment-899742492",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9371",
    "id": 899742492,
    "node_id": "IC_kwDOBvuov841oPsc",
    "user": {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-16T18:55:42Z",
    "updated_at": "2021-08-16T18:55:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "We already have a custom `errcheck` analyzer and a `shadowpredecl` analyzer that we use as an alternative, but the default one from golangci-lint checks all cases of if err := shadowing: https://github.com/prysmaticlabs/prysm/tree/develop/tools/analyzers/shadowpredecl",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/899742492/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/901231359",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9371#issuecomment-901231359",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9371",
    "id": 901231359,
    "node_id": "IC_kwDOBvuov841t7L_",
    "user": {
      "login": "estensen",
      "id": 9142800,
      "node_id": "MDQ6VXNlcjkxNDI4MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9142800?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/estensen",
      "html_url": "https://github.com/estensen",
      "followers_url": "https://api.github.com/users/estensen/followers",
      "following_url": "https://api.github.com/users/estensen/following{/other_user}",
      "gists_url": "https://api.github.com/users/estensen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/estensen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/estensen/subscriptions",
      "organizations_url": "https://api.github.com/users/estensen/orgs",
      "repos_url": "https://api.github.com/users/estensen/repos",
      "events_url": "https://api.github.com/users/estensen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/estensen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-18T15:55:42Z",
    "updated_at": "2021-08-18T15:55:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Extracting constants doesn't increase readability IMO.\r\n\r\nBefore\r\n```go\r\nif v.Validator.PublicKey != \"0x8931cd39ec3133b6ec91f26eec4de555cd7966086b1993dfe69c2b16e80adc62ce82d353b3356d8cc249e4e2d4254122\" {\r\n\tfield = \"PublicKey\"\r\n\texpected = \"0x8931cd39ec3133b6ec91f26eec4de555cd7966086b1993dfe69c2b16e80adc62ce82d353b3356d8cc249e4e2d4254122\"\r\n\tactual = v.Validator.PublicKey\r\n\tbreak\r\n}\r\n```\r\n\r\nAfter\r\n```go\r\nconst (\r\n\tpublicKey     = \"0x8931cd39ec3133b6ec91f26eec4de555cd7966086b1993dfe69c2b16e80adc62ce82d353b3356d8cc249e4e2d4254122\"\r\n\tpublicKeyName = \"PublicKey\"\r\n)\r\n...\r\nif v.Validator.PublicKey != publicKey {\r\n\tfield = publicKeyName\r\n\texpected = publicKey\r\n\tactual = v.Validator.PublicKey\r\n\tbreak\r\n}\r\n```\r\n\r\nProgress can be viewed [here](https://github.com/estensen/prysm/commits/lint-action)",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/901231359/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/901321374",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9371#issuecomment-901321374",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9371",
    "id": 901321374,
    "node_id": "IC_kwDOBvuov841uRKe",
    "user": {
      "login": "rkapka",
      "id": 28876818,
      "node_id": "MDQ6VXNlcjI4ODc2ODE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/28876818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkapka",
      "html_url": "https://github.com/rkapka",
      "followers_url": "https://api.github.com/users/rkapka/followers",
      "following_url": "https://api.github.com/users/rkapka/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkapka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkapka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkapka/subscriptions",
      "organizations_url": "https://api.github.com/users/rkapka/orgs",
      "repos_url": "https://api.github.com/users/rkapka/repos",
      "events_url": "https://api.github.com/users/rkapka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkapka/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-18T18:06:25Z",
    "updated_at": "2021-08-18T18:07:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would put these consts right next to their first usage. I think you are extracting them to package-level, no? Unless the same const is used in multiple functions, declare it inside the function.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/901321374/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/903083325",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9371#issuecomment-903083325",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9371",
    "id": 903083325,
    "node_id": "IC_kwDOBvuov8410_U9",
    "user": {
      "login": "estensen",
      "id": 9142800,
      "node_id": "MDQ6VXNlcjkxNDI4MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9142800?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/estensen",
      "html_url": "https://github.com/estensen",
      "followers_url": "https://api.github.com/users/estensen/followers",
      "following_url": "https://api.github.com/users/estensen/following{/other_user}",
      "gists_url": "https://api.github.com/users/estensen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/estensen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/estensen/subscriptions",
      "organizations_url": "https://api.github.com/users/estensen/orgs",
      "repos_url": "https://api.github.com/users/estensen/repos",
      "events_url": "https://api.github.com/users/estensen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/estensen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-21T08:39:24Z",
    "updated_at": "2021-08-21T08:39:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Some consts, like `public`, `linux` etc are used in multiple functions in multiple files in the same package. And it feels they could live in either file. Maybe extract to `const.go`?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/903083325/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/903083361",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9371#issuecomment-903083361",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9371",
    "id": 903083361,
    "node_id": "IC_kwDOBvuov8410_Vh",
    "user": {
      "login": "estensen",
      "id": 9142800,
      "node_id": "MDQ6VXNlcjkxNDI4MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9142800?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/estensen",
      "html_url": "https://github.com/estensen",
      "followers_url": "https://api.github.com/users/estensen/followers",
      "following_url": "https://api.github.com/users/estensen/following{/other_user}",
      "gists_url": "https://api.github.com/users/estensen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/estensen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/estensen/subscriptions",
      "organizations_url": "https://api.github.com/users/estensen/orgs",
      "repos_url": "https://api.github.com/users/estensen/repos",
      "events_url": "https://api.github.com/users/estensen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/estensen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-21T08:39:41Z",
    "updated_at": "2021-08-21T08:39:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "`staticcheck` warns about 25 uses of deprecated methods. A lot of them from tests. \r\nIs there a reason they're stil hanging around?\r\nShould deprecated methods just be ignored by the linter?\r\n\r\n```\r\n::error file=beacon-chain/rpc/prysm/v1alpha1/beacon/validators.go,line=679,col=40::SA1019: req.PublicKeys is deprecated: Do not use.  (staticcheck)\r\n::error file=beacon-chain/rpc/prysm/v1alpha1/beacon/validators.go,line=685,col=25::SA1019: req.PublicKeys is deprecated: Do not use.  (staticcheck)\r\n::error file=beacon-chain/rpc/prysm/v1alpha1/beacon/validators_test.go,line=1355,col=30::SA1019: res.ActivationPublicKeys is deprecated: Do not use.  (staticcheck)\r\n::error file=beacon-chain/rpc/prysm/v1alpha1/beacon/validators_test.go,line=1397,col=30::SA1019: res.ExitPublicKeys is deprecated: Do not use.  (staticcheck)\r\n::error file=beacon-chain/rpc/prysm/v1alpha1/beacon/validators_test.go,line=1406,col=25::SA1019: res.ExitPublicKeys is deprecated: Do not use.  (staticcheck)\r\n::error file=beacon-chain/rpc/prysm/v1alpha1/beacon/validators_test.go,line=1457,col=30::SA1019: res.ExitPublicKeys is deprecated: Do not use.  (staticcheck)\r\n::error file=endtoend/evaluators/slashing.go,line=127,col=23::SA1019: duties.Duties is deprecated: Do not use.  (staticcheck)\r\n::error file=endtoend/evaluators/validator.go,line=93,col=14::SA1019: participation.Participation.GlobalParticipationRate is deprecated: Do not use.  (staticcheck)\r\n::error file=shared/bls/blst/bls_benchmark_test.go,line=49,col=7::SA1019: aggregated.AggregateVerify is deprecated: Use FastAggregateVerify or use this method in spectests only.  (staticcheck)\r\n::error file=shared/bls/blst/signature_test.go,line=40,col=24::SA1019: aggSig.AggregateVerify is deprecated: Use FastAggregateVerify or use this method in spectests only.  (staticcheck)\r\n::error file=shared/cmd/password_reader.go,line=6,col=2::SA1019: package golang.org/x/crypto/ssh/terminal is deprecated: this package moved to golang.org/x/term.  (staticcheck)\r\n::error file=shared/promptutil/prompt.go,line=16,col=2::SA1019: package golang.org/x/crypto/ssh/terminal is deprecated: this package moved to golang.org/x/term.  (staticcheck)\r\n::error file=slasher/rpc/server.go,line=224,col=2::SA1019: sl.Slashable is deprecated: Do not use.  (staticcheck)\r\n::error file=slasher/rpc/server.go,line=236,col=2::SA1019: sl.Slashable is deprecated: Do not use.  (staticcheck)\r\n::error file=slasher/rpc/server_test.go,line=178,col=25::SA1019: sl.Slashable is deprecated: Do not use.  (staticcheck)\r\n::error file=spectest/general/phase0/bls/aggregate_verify_test.go,line=61,col=16::SA1019: sig.AggregateVerify is deprecated: Use FastAggregateVerify or use this method in spectests only.  (staticcheck)\r\n::error file=tools/forkchecker/forkchecker.go,line=138,col=25::SA1019: p.VotedEther is deprecated: Do not use.  (staticcheck)\r\n::error file=tools/forkchecker/forkchecker.go,line=139,col=25::SA1019: p.EligibleEther is deprecated: Do not use.  (staticcheck)\r\n::error file=tools/forkchecker/forkchecker.go,line=140,col=25::SA1019: p.GlobalParticipationRate is deprecated: Do not use.  (staticcheck)\r\n::error file=validator/client/attest.go,line=187,col=23::SA1019: v.duties.Duties is deprecated: Do not use.  (staticcheck)\r\n::error file=validator/client/validator.go,line=140,col=17::SA1019: v.validatorClient.WaitForChainStart is deprecated: Do not use.  (staticcheck)\r\n::error file=validator/client/validator.go,line=602,col=23::SA1019: v.duties.Duties is deprecated: Do not use.  (staticcheck)\r\n::error file=validator/client/validator_test.go,line=574,col=57::SA1019: v.duties.Duties is deprecated: Do not use.  (staticcheck)\r\n::error file=validator/client/validator_test.go,line=576,col=18::SA1019: resp.Duties is deprecated: Do not use.  (staticcheck)\r\n::error file=validator/client/validator_test.go,line=577,col=18::SA1019: resp.Duties is deprecated: Do not use.  (staticcheck)\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/903083361/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/904143491",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9371#issuecomment-904143491",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9371",
    "id": 904143491,
    "node_id": "IC_kwDOBvuov8415CKD",
    "user": {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-23T21:23:44Z",
    "updated_at": "2021-08-23T21:23:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @estensen, some of these are correct that they are deprecated, but still being in use in our codebase. We should audit to check which ones are incorrectly deprecated and if there is a plan to actually stop using them. In the meantime, I would advocate for removing that linter or that SA1019 at least to unblock work. We should open a tracking issue titled something like \"Audit Deprecated Uses from Staticcheck Analyzer\" so that we can properly resolve that warning\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/904143491/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/904148302",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9371#issuecomment-904148302",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9371",
    "id": 904148302,
    "node_id": "IC_kwDOBvuov8415DVO",
    "user": {
      "login": "rkapka",
      "id": 28876818,
      "node_id": "MDQ6VXNlcjI4ODc2ODE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/28876818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkapka",
      "html_url": "https://github.com/rkapka",
      "followers_url": "https://api.github.com/users/rkapka/followers",
      "following_url": "https://api.github.com/users/rkapka/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkapka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkapka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkapka/subscriptions",
      "organizations_url": "https://api.github.com/users/rkapka/orgs",
      "repos_url": "https://api.github.com/users/rkapka/repos",
      "events_url": "https://api.github.com/users/rkapka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkapka/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-23T21:32:43Z",
    "updated_at": "2021-08-23T21:32:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Some consts, like `public`, `linux` etc are used in multiple functions in multiple files in the same package. And it feels they could live in either file. Maybe extract to `const.go`?\r\n\r\nMy feeling is that this topic will be non-trivial to handle because there are a lot of possible design options. If you have an idea how you would like to extract consts, can you write an overview of your proposal before you start refactoring everything? The reason is to save you a lot of rewriting in case we decide to go in a different direction.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/904148302/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/919486583",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9371#issuecomment-919486583",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9371",
    "id": 919486583,
    "node_id": "IC_kwDOBvuov842zkB3",
    "user": {
      "login": "estensen",
      "id": 9142800,
      "node_id": "MDQ6VXNlcjkxNDI4MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9142800?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/estensen",
      "html_url": "https://github.com/estensen",
      "followers_url": "https://api.github.com/users/estensen/followers",
      "following_url": "https://api.github.com/users/estensen/following{/other_user}",
      "gists_url": "https://api.github.com/users/estensen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/estensen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/estensen/subscriptions",
      "organizations_url": "https://api.github.com/users/estensen/orgs",
      "repos_url": "https://api.github.com/users/estensen/repos",
      "events_url": "https://api.github.com/users/estensen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/estensen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-14T20:24:08Z",
    "updated_at": "2021-09-14T20:24:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've done a lot of work, but since the codebase is pretty active I fear it's going to be hell trying to merge in the latest changes and review for you.\r\nWhat about adding one linter at a time and creating one PR each time a linter is added and issues are fixed?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/919486583/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
