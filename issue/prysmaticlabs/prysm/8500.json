{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8500",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8500/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8500/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8500/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/8500",
  "id": 814031136,
  "node_id": "MDU6SXNzdWU4MTQwMzExMzY=",
  "number": 8500,
  "title": "Make Slashing Protection Export Find validator.db Automatically Inside of Wallet Directory",
  "user": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 802129907,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDc=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Help%20Wanted",
      "name": "Help Wanted",
      "color": "33aa3f",
      "default": false,
      "description": "Extra attention is needed"
    },
    {
      "id": 802129908,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDg=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Good%20First%20Issue",
      "name": "Good First Issue",
      "color": "7057ff",
      "default": false,
      "description": "Good for newcomers"
    },
    {
      "id": 1085357069,
      "node_id": "MDU6TGFiZWwxMDg1MzU3MDY5",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Priority:%20High",
      "name": "Priority: High",
      "color": "f7ea26",
      "default": false,
      "description": "High priority item"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2021-02-23T02:14:13Z",
  "updated_at": "2021-02-26T17:04:18Z",
  "closed_at": "2021-02-26T17:04:18Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# ðŸš€ Feature Request\r\n\r\n### Description\r\n\r\nCurrently, performing a slasher protection export or import requires the --datadir flag which needs to be a path to a folder containing a `validator.db` file. This is confusing and leads users to sometimes pass in a wrong folder and receive an empty slashing protection history.\r\n\r\n### Describe the solution you'd like\r\n\r\nThe import/export commands should recursively look into the folder specified for a validator.db file and check if it exists, then use it for performing their operations. This way, a user can simply pass in --datadir=/walletdir and not be concerned about getting an empty response. This will improve user experience and minimize risk of someone exporting an empty slashing protection history.\r\n",
  "closed_by": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8500/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8500/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/785111718",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/8500#issuecomment-785111718",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8500",
    "id": 785111718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTExMTcxOA==",
    "user": {
      "login": "ahadda5",
      "id": 21275079,
      "node_id": "MDQ6VXNlcjIxMjc1MDc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/21275079?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahadda5",
      "html_url": "https://github.com/ahadda5",
      "followers_url": "https://api.github.com/users/ahadda5/followers",
      "following_url": "https://api.github.com/users/ahadda5/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahadda5/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahadda5/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahadda5/subscriptions",
      "organizations_url": "https://api.github.com/users/ahadda5/orgs",
      "repos_url": "https://api.github.com/users/ahadda5/repos",
      "events_url": "https://api.github.com/users/ahadda5/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahadda5/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-24T14:25:39Z",
    "updated_at": "2021-02-24T14:26:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@rauljordan  i see adding a utility func part of the shared fileutil to recursively look for  the file name specified in `ProtectionDbFileName`  in the  specified --datadir.  \r\nThis will be called from the `ExportSlashingProtectionJSONCli `or the `ImportSlashingProtectionJSONCli  `after parsing the datadir path, with the proper error handling if the file does not exist.    I'll come back to you with changes. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/785111718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/785139001",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/8500#issuecomment-785139001",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8500",
    "id": 785139001,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTEzOTAwMQ==",
    "user": {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-24T15:04:35Z",
    "updated_at": "2021-02-24T15:04:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "That sounds exactly like the solution we have in mind @ahadda5 , thanks for the interest in this one! Appreciate your contributions",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/785139001/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/785883895",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/8500#issuecomment-785883895",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8500",
    "id": 785883895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTg4Mzg5NQ==",
    "user": {
      "login": "ahadda5",
      "id": 21275079,
      "node_id": "MDQ6VXNlcjIxMjc1MDc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/21275079?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahadda5",
      "html_url": "https://github.com/ahadda5",
      "followers_url": "https://api.github.com/users/ahadda5/followers",
      "following_url": "https://api.github.com/users/ahadda5/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahadda5/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahadda5/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahadda5/subscriptions",
      "organizations_url": "https://api.github.com/users/ahadda5/orgs",
      "repos_url": "https://api.github.com/users/ahadda5/repos",
      "events_url": "https://api.github.com/users/ahadda5/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahadda5/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-25T13:10:41Z",
    "updated_at": "2021-02-25T13:10:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "i'm trying to unit test my util func  `RecusriveFileFind`  and i'm getting this error.   Where do you start?   \r\n\r\nThe func was tested in a separate program and works. \r\n\r\n\r\n`>bazel test //shared/fileutil:go_default_test --test_output=streamed  --sandbox_debug --verbose_failures\r\n`\r\n```\r\n1614258108.302969315: src/main/tools/linux-sandbox-pid1.cc:279: remount rw: /dev/shm\r\n1614258108.303131616: src/main/tools/linux-sandbox-pid1.cc:363: calling fork...\r\n1614258108.303269417: src/main/tools/linux-sandbox-pid1.cc:393: child started with PID 2\r\nshared/fileutil/fileutil_test.go:244:10: tmpDirFnames declared but not used\r\ncompilepkg: error running subcommand external/go_sdk/pkg/tool/linux_amd64/compile: exit status 2\r\n1614258108.391016971: src/main/tools/linux-sandbox-pid1.cc:410: wait returned pid=2, status=0x100\r\n1614258108.391032271: src/main/tools/linux-sandbox-pid1.cc:428: child exited normally with code 1\r\n1614258108.457685392: src/main/tools/linux-sandbox.cc:233: child exited normally with code 1\r\nTarget //shared/fileutil:go_default_test failed to build\r\nINFO: Elapsed time: 0.542s, Critical Path: 0.31s\r\nINFO: 4 processes: 2 internal, 2 linux-sandbox.\r\nFAILED: Build did NOT complete successfully\r\n//shared/fileutil:go_default_test                               FAILED TO BUILD\r\n\r\nFAILED: Build did NOT complete successfully\r\n\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/785883895/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/785884865",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/8500#issuecomment-785884865",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8500",
    "id": 785884865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTg4NDg2NQ==",
    "user": {
      "login": "ahadda5",
      "id": 21275079,
      "node_id": "MDQ6VXNlcjIxMjc1MDc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/21275079?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahadda5",
      "html_url": "https://github.com/ahadda5",
      "followers_url": "https://api.github.com/users/ahadda5/followers",
      "following_url": "https://api.github.com/users/ahadda5/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahadda5/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahadda5/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahadda5/subscriptions",
      "organizations_url": "https://api.github.com/users/ahadda5/orgs",
      "repos_url": "https://api.github.com/users/ahadda5/repos",
      "events_url": "https://api.github.com/users/ahadda5/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahadda5/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-25T13:12:27Z",
    "updated_at": "2021-02-25T13:13:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here is the new test func\r\n// RecursiveFileFind returns true, and the path,  if a file is not a directory and exists\r\n// at  dir or any of its subdirectories.  Finds the first instant based on the Walk order and returns.\r\n// Define non-fatal error to stop the recursive directory walk\r\n\r\n```\r\nfunc TestRecursiveFileFind(t *testing.T) {\r\n\ttmpDir, tmpDirFnames := tmpDirWithContentsForRecursiveFind(t)\r\n\ttests := []struct {\r\n\t\tname  string\r\n\t\troot  string\r\n\t\tpath  string\r\n\t\tfound bool\r\n\t}{\r\n\t\t{\r\n\t\t\tname:  \"file1\",\r\n\t\t\troot:  tmpDir,\r\n\t\t\tpath:  \"subfolder1/subfolder11/file1\",\r\n\t\t\tfound: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname:  \"file2\",\r\n\t\t\troot:  tmpDir,\r\n\t\t\tpath:  \"subfolder2/file2\",\r\n\t\t\tfound: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname:  \"file1\",\r\n\t\t\troot:  tmpDir + \"/subfolder1\",\r\n\t\t\tpath:  \"subfolder11/file1\",\r\n\t\t\tfound: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname:  \"file3\",\r\n\t\t\troot:  tmpDir,\r\n\t\t\tpath:  \"file3\",\r\n\t\t\tfound: true,\r\n\t\t},\r\n\t\t/*{\r\n\t\t\tname:  \"file4\",\r\n\t\t\troot:  tmpDir,\r\n\t\t\tpath:  \"\",\r\n\t\t\tfound: false,\r\n\t\t},*/\r\n\t}\r\n\r\n\tfor _, tt := range tests {\r\n\t\tt.Run(tt.name, func(t *testing.T) {\r\n\t\t\tfound, fpath, err := fileutil.RecursiveFileFind(tt.name,tt.root)\r\n\t\t\trequire.NoError(t, err)\r\n\r\n\t\t\tassert.DeepEqual(t, tt.found, found)\r\n\t\t\tassert.DeepEqual(t, tt.path, fpath)\r\n\t\t})\r\n\t}\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/785884865/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/785987445",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/8500#issuecomment-785987445",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8500",
    "id": 785987445,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTk4NzQ0NQ==",
    "user": {
      "login": "ahadda5",
      "id": 21275079,
      "node_id": "MDQ6VXNlcjIxMjc1MDc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/21275079?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahadda5",
      "html_url": "https://github.com/ahadda5",
      "followers_url": "https://api.github.com/users/ahadda5/followers",
      "following_url": "https://api.github.com/users/ahadda5/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahadda5/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahadda5/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahadda5/subscriptions",
      "organizations_url": "https://api.github.com/users/ahadda5/orgs",
      "repos_url": "https://api.github.com/users/ahadda5/repos",
      "events_url": "https://api.github.com/users/ahadda5/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahadda5/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-25T15:30:20Z",
    "updated_at": "2021-02-25T15:30:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\r\nfunc tmpDirWithContentsForRecursiveFind(t *testing.T) (string, []string) {\r\n\tdir := t.TempDir()\r\n\tfnames := []string{\r\n\t\t\"subfolder1/subfolder11/file1\",\r\n\t\t\"subfolder2/file2\",\r\n\t\t\"file3\"\r\n\t}\r\n\trequire.NoError(t, os.MkdirAll(filepath.Join(dir, \"subfolder1\", \"subfolder11\"), 0777))\r\n\trequire.NoError(t, os.MkdirAll(filepath.Join(dir, \"subfolder2\"), 0777))\r\n\tfor _, fname := range fnames {\r\n\t\trequire.NoError(t, ioutil.WriteFile(filepath.Join(dir, fname), []byte(fname), 0777))\r\n\t}\r\n\tsort.Strings(fnames)\r\n\treturn dir, fnames\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/785987445/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/786018044",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/8500#issuecomment-786018044",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8500",
    "id": 786018044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NjAxODA0NA==",
    "user": {
      "login": "ahadda5",
      "id": 21275079,
      "node_id": "MDQ6VXNlcjIxMjc1MDc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/21275079?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahadda5",
      "html_url": "https://github.com/ahadda5",
      "followers_url": "https://api.github.com/users/ahadda5/followers",
      "following_url": "https://api.github.com/users/ahadda5/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahadda5/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahadda5/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahadda5/subscriptions",
      "organizations_url": "https://api.github.com/users/ahadda5/orgs",
      "repos_url": "https://api.github.com/users/ahadda5/repos",
      "events_url": "https://api.github.com/users/ahadda5/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahadda5/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-25T16:12:21Z",
    "updated_at": "2021-02-25T16:12:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "tmpDirFnames  was declaraed not used\r\n\r\n\r\n\r\n> Here is the new test func\r\n> // RecursiveFileFind returns true, and the path, if a file is not a directory and exists\r\n> // at dir or any of its subdirectories. Finds the first instant based on the Walk order and returns.\r\n> // Define non-fatal error to stop the recursive directory walk\r\n> \r\n> ```\r\n> func TestRecursiveFileFind(t *testing.T) {\r\n> \ttmpDir, tmpDirFnames := tmpDirWithContentsForRecursiveFind(t)\r\n> \ttests := []struct {\r\n> \t\tname  string\r\n> \t\troot  string\r\n> \t\tpath  string\r\n> \t\tfound bool\r\n> \t}{\r\n> \t\t{\r\n> \t\t\tname:  \"file1\",\r\n> \t\t\troot:  tmpDir,\r\n> \t\t\tpath:  \"subfolder1/subfolder11/file1\",\r\n> \t\t\tfound: true,\r\n> \t\t},\r\n> \t\t{\r\n> \t\t\tname:  \"file2\",\r\n> \t\t\troot:  tmpDir,\r\n> \t\t\tpath:  \"subfolder2/file2\",\r\n> \t\t\tfound: true,\r\n> \t\t},\r\n> \t\t{\r\n> \t\t\tname:  \"file1\",\r\n> \t\t\troot:  tmpDir + \"/subfolder1\",\r\n> \t\t\tpath:  \"subfolder11/file1\",\r\n> \t\t\tfound: true,\r\n> \t\t},\r\n> \t\t{\r\n> \t\t\tname:  \"file3\",\r\n> \t\t\troot:  tmpDir,\r\n> \t\t\tpath:  \"file3\",\r\n> \t\t\tfound: true,\r\n> \t\t},\r\n> \t\t/*{\r\n> \t\t\tname:  \"file4\",\r\n> \t\t\troot:  tmpDir,\r\n> \t\t\tpath:  \"\",\r\n> \t\t\tfound: false,\r\n> \t\t},*/\r\n> \t}\r\n> \r\n> \tfor _, tt := range tests {\r\n> \t\tt.Run(tt.name, func(t *testing.T) {\r\n> \t\t\tfound, fpath, err := fileutil.RecursiveFileFind(tt.name,tt.root)\r\n> \t\t\trequire.NoError(t, err)\r\n> \r\n> \t\t\tassert.DeepEqual(t, tt.found, found)\r\n> \t\t\tassert.DeepEqual(t, tt.path, fpath)\r\n> \t\t})\r\n> \t}\r\n> }\r\n> ```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/786018044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
