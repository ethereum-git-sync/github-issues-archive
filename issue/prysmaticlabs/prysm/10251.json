{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/10251",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/10251/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/10251/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/10251/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/10251",
  "id": 1139477836,
  "node_id": "I_kwDOBvuov85D6w1M",
  "number": 10251,
  "title": "question about TestProcessSyncCommittee_PerfectParticipation",
  "user": {
    "login": "maxkaneco",
    "id": 92766553,
    "node_id": "U_kgDOBYeBWQ",
    "avatar_url": "https://avatars.githubusercontent.com/u/92766553?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/maxkaneco",
    "html_url": "https://github.com/maxkaneco",
    "followers_url": "https://api.github.com/users/maxkaneco/followers",
    "following_url": "https://api.github.com/users/maxkaneco/following{/other_user}",
    "gists_url": "https://api.github.com/users/maxkaneco/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/maxkaneco/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/maxkaneco/subscriptions",
    "organizations_url": "https://api.github.com/users/maxkaneco/orgs",
    "repos_url": "https://api.github.com/users/maxkaneco/repos",
    "events_url": "https://api.github.com/users/maxkaneco/events{/privacy}",
    "received_events_url": "https://api.github.com/users/maxkaneco/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-02-16T03:23:24Z",
  "updated_at": "2022-04-18T08:03:42Z",
  "closed_at": "2022-04-18T08:03:42Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "I have a hard time understanding TestProcessSyncCommittee_PerfectParticipation. Maybe I am missing something. At the end of the test, it is checking # of balances increases is equal to params.BeaconConfig().SyncCommitteeSize. Why is it guaranteed? If the proposer is not part of the sync committee, the # of balance increases should equal to params.BeaconConfig().SyncCommitteeSize + 1? \r\n\r\nI found the committeeCache is generally reused between tests without calling helpers.ClearCache(). It could potentially hide some broken tests?\r\n\r\nThanks\r\n",
  "closed_by": {
    "login": "terencechain",
    "id": 21316537,
    "node_id": "MDQ6VXNlcjIxMzE2NTM3",
    "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/terencechain",
    "html_url": "https://github.com/terencechain",
    "followers_url": "https://api.github.com/users/terencechain/followers",
    "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
    "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
    "organizations_url": "https://api.github.com/users/terencechain/orgs",
    "repos_url": "https://api.github.com/users/terencechain/repos",
    "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
    "received_events_url": "https://api.github.com/users/terencechain/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/10251/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/10251/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1041155846",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/10251#issuecomment-1041155846",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/10251",
    "id": 1041155846,
    "node_id": "IC_kwDOBvuov84-DscG",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-16T06:35:12Z",
    "updated_at": "2022-02-16T06:35:12Z",
    "author_association": "MEMBER",
    "body": "Hey @maxkaneco , \r\n\r\nAppreciate that you are looking into our tests. The reason that it is set as `params.BeaconConfig().SyncCommitteeSize` instead as `params.BeaconConfig().SyncCommitteeSize +1` is because the proposer is also a part of the sync committee. Below is a simple check that I did to confirm it. \r\n\r\n```diff\r\ndiff --git a/beacon-chain/core/altair/block_test.go b/beacon-chain/core/altair/block_test.go\r\nindex 021c112fb..d625fce69 100644\r\n--- a/beacon-chain/core/altair/block_test.go\r\n+++ b/beacon-chain/core/altair/block_test.go\r\n@@ -78,6 +78,11 @@ func TestProcessSyncCommittee_PerfectParticipation(t *testing.T) {\r\n        require.NoError(t, err)\r\n        require.Equal(t, true, balances[proposerIndex] > balances[indices[0]])\r\n \r\n+       for _, idx := range indices {\r\n+               if idx == proposerIndex {\r\n+                       t.Errorf(\"Proposer index is also a part of the sync committee\")\r\n+               }\r\n+       }\r\n        // Sync committee should have the same profits, except you are a proposer\r\n        for i := 1; i < len(indices); i++ {\r\n                if proposerIndex == indices[i-1] || proposerIndex == indices[i] {\r\n```\r\n\r\nThe reason this holds for all test runs is because we use a deterministic genesis state therefore for each iteration of our test the same exact state and shuffling is used here. You are correct that it is not guaranteed that this will always hold true, with a larger validator set, the check would more often than not be `params.BeaconConfig().SyncCommitteeSize +1` instead. \r\n\r\nHowever given that the state is deterministic along with the shuffling in the context of the test, it is guaranteed that the value will always be `params.BeaconConfig().SyncCommitteeSize `.\r\n\r\n> I found the committeeCache is generally reused between tests without calling helpers.ClearCache(). It could potentially hide some broken tests?\r\n\r\nThat would be correct, we should be having a per test cleanup in regards to the cache here and for other tests.  Tagging @terencechain here too, as he has written this originally. ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1041155846/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1041227362",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/10251#issuecomment-1041227362",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/10251",
    "id": 1041227362,
    "node_id": "IC_kwDOBvuov84-D95i",
    "user": {
      "login": "maxkaneco",
      "id": 92766553,
      "node_id": "U_kgDOBYeBWQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/92766553?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxkaneco",
      "html_url": "https://github.com/maxkaneco",
      "followers_url": "https://api.github.com/users/maxkaneco/followers",
      "following_url": "https://api.github.com/users/maxkaneco/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxkaneco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxkaneco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxkaneco/subscriptions",
      "organizations_url": "https://api.github.com/users/maxkaneco/orgs",
      "repos_url": "https://api.github.com/users/maxkaneco/repos",
      "events_url": "https://api.github.com/users/maxkaneco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxkaneco/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-16T08:17:41Z",
    "updated_at": "2022-02-16T08:17:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for replying. That makes sense! I did some refactoring, which makes the eth1data fixed thus the seed. This causes the cache lookups in tests to hit when they used to miss.  Many tests are failing due to this. It appears a modularized cache is preferred.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1041227362/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1042483999",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/10251#issuecomment-1042483999",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/10251",
    "id": 1042483999,
    "node_id": "IC_kwDOBvuov84-Iwsf",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-17T01:43:07Z",
    "updated_at": "2022-02-17T01:43:07Z",
    "author_association": "MEMBER",
    "body": "> This causes the cache lookups in tests to hit when they used to miss. Many tests are failing due to this. It appears a modularized cache is preferred.\r\n\r\nA modularized cache would be preferred rather than the global one that we do have now, but it is difficult to do mainly because of how our core code is currently structured. ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1042483999/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1101195604",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/10251#issuecomment-1101195604",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/10251",
    "id": 1101195604,
    "node_id": "IC_kwDOBvuov85BoulU",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-18T08:03:42Z",
    "updated_at": "2022-04-18T08:03:42Z",
    "author_association": "MEMBER",
    "body": "Feel free to reopen the issue if there are still any unanswered questions ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1101195604/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
