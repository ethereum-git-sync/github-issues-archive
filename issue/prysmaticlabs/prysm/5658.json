{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5658",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5658/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5658/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5658/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/5658",
  "id": 608188709,
  "node_id": "MDU6SXNzdWU2MDgxODg3MDk=",
  "number": 5658,
  "title": "[bug/fuzzing] Incorrect validation of pre-state attestation & malformed block signature during state transition (in pcli)",
  "user": {
    "login": "pventuzelo",
    "id": 9038181,
    "node_id": "MDQ6VXNlcjkwMzgxODE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9038181?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pventuzelo",
    "html_url": "https://github.com/pventuzelo",
    "followers_url": "https://api.github.com/users/pventuzelo/followers",
    "following_url": "https://api.github.com/users/pventuzelo/following{/other_user}",
    "gists_url": "https://api.github.com/users/pventuzelo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pventuzelo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pventuzelo/subscriptions",
    "organizations_url": "https://api.github.com/users/pventuzelo/orgs",
    "repos_url": "https://api.github.com/users/pventuzelo/repos",
    "events_url": "https://api.github.com/users/pventuzelo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pventuzelo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 802129906,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDY=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Enhancement",
      "name": "Enhancement",
      "color": "84b6eb",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1085357783,
      "node_id": "MDU6TGFiZWwxMDg1MzU3Nzgz",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Priority:%20Low",
      "name": "Priority: Low",
      "color": "26f7bd",
      "default": false,
      "description": "Low priority item"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 16,
  "created_at": "2020-04-28T10:03:25Z",
  "updated_at": "2020-06-04T12:17:24Z",
  "closed_at": "2020-06-04T12:17:24Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# üêû Bug Report\r\n\r\n### Description\r\n\r\nDuring fuzzing with [beacon-fuzz](https://github.com/sigp/beacon-fuzz), I provided a set of invalid SSZ state and block to prysm using `pcli` tool.\r\nPrysm consider both pre-state and block as valid and try to process the state transition anyway.\r\n\r\nOther client/tool like `lighthouse` and `zcli` reject either the state or the block.\r\n\r\nNOTES: \r\n- `mainnet` preset (work also with `minimal`)\r\n- In case of `zcli`, process panic but @protolambda told us it should because this case should never happened.\r\n- Quick output from @protolambda, \r\n```\r\nsounds like a badly formatted attestation. The attestation bitfield has N bits as determined by deserialization, but the state always needs some specific amount of bits to match the committee size\r\nFilterParticipants does that sanity check in zrnt\r\nand it's called for attestations IN the state, not the block.\r\n```\r\n\r\n### Additional info\r\n\r\nlighthouse (mainnet and minimal):\r\n``` sh\r\n./lcli transition-blocks incorrect_ssz_validation_state_prysm.ssz incorrect_ssz_validation_block_prysm.ssz\r\n2020-04-27 23:35:33,850 INFO  [lcli::transition_blocks] Using minimal spec\r\n2020-04-27 23:35:33,850 INFO  [lcli::transition_blocks] Pre-state path: \"incorrect_ssz_validation_state_prysm.ssz\"\r\n2020-04-27 23:35:33,850 INFO  [lcli::transition_blocks] Block path: \"incorrect_ssz_validation_block_prysm.ssz\"\r\nFailed to run lcli: Failed to transition blocks: Ssz decode failed: BytesInvalid(\"Invalid Signature bytes: [186, 1, 17, 234, 51, 124, 150, 23, 84, 33, 184, 135, 189, 162, 39, 125, 121, 105, 76, 65, 49, 22, 197, 47, 148, 200, 37, 254, 10, 95, 164, 10, 43, 76, 146, 180, 219, 155, 194, 48, 19, 251, 198, 223, 156, 190, 197, 116, 188, 102, 187, 248, 0, 32, 158, 46, 109, 253, 193, 8, 161, 82, 81, 246, 215, 198, 36, 107, 127, 166, 8, 48, 99, 125, 8, 154, 157, 143, 233, 101, 207, 76, 100, 93, 138, 217, 193, 217, 196, 206, 24, 238, 77, 162, 41, 245]\")\r\n```\r\n\r\nzcli (mainnet):\r\n``` sh\r\n$ go get -tags preset_mainnet github.com/protolambda/zcli\r\n\r\n$ ./bin/zcli transition blocks incorrect_ssz_validation_block_prysm.ssz -i incorrect_ssz_validation_state_prysm.ssz \r\npanic: committee mismatch, bitfield length does not match\r\n```\r\n\r\n## üî¨ Minimal Reproduction\r\n\r\n- Download: [incorrect_ssz_validation_prysm.zip](https://github.com/prysmaticlabs/prysm/files/4544870/incorrect_ssz_validation_prysm.zip)\r\n\r\n\r\n- pcli result\r\n``` sh\r\n$ cd prysm\r\n\r\n# build pcli tool\r\n$ bazel build //tools/pcli:pcli\r\n$ cp bazel-bin/tools/pcli/linux_amd64_stripped/pcli .\r\n\r\n# timeout requiered otherwise you will need to kill manually the process\r\n$ timeout -k 5 15  ./pcli -- state-transition --pre-state-path incorrect_ssz_validation_state_prysm.ssz --block-path incorrect_ssz_validation_block_prysm.ssz \r\n[2020-04-28 11:47:38]  INFO Performing state transition with a block root of 0x0af54b869712cdd5ca8569f8bdde228b8aa6c6b15edb8d28fef2ee1a7ba5d377 and pre state root of 0x2e8e47e652c946397ca090e6b7a907c0369a1bd6f86c2097e0204b40b90af291 blockSlot=1970324836982784 preStateSlot=95\r\n```\r\n\r\nNotes: Don't know if it is related yet, but `blockSlot` value is particularly hight.\r\n\r\n## üåç  Your Environment\r\n\r\nbranch: `master`\r\ncommit: e30349d410389161a83cfeb785e5ed1d3b23b421\r\n",
  "closed_by": {
    "login": "pventuzelo",
    "id": 9038181,
    "node_id": "MDQ6VXNlcjkwMzgxODE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9038181?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pventuzelo",
    "html_url": "https://github.com/pventuzelo",
    "followers_url": "https://api.github.com/users/pventuzelo/followers",
    "following_url": "https://api.github.com/users/pventuzelo/following{/other_user}",
    "gists_url": "https://api.github.com/users/pventuzelo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pventuzelo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pventuzelo/subscriptions",
    "organizations_url": "https://api.github.com/users/pventuzelo/orgs",
    "repos_url": "https://api.github.com/users/pventuzelo/repos",
    "events_url": "https://api.github.com/users/pventuzelo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pventuzelo/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5658/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5658/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620524956",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5658#issuecomment-620524956",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5658",
    "id": 620524956,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDUyNDk1Ng==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T10:35:59Z",
    "updated_at": "2020-04-28T10:36:19Z",
    "author_association": "MEMBER",
    "body": "This seems like an issue where prysm is regarding an invalid ssz object as valid whereas lcli,zcli regard it as invalid an error accordingly. \r\n\r\nzcli: `sounds like a badly formatted attestation. The attestation bitfield has N bits as determined by deserialization, but the state always needs some specific amount of bits to match the committee size`\r\n\r\nlcli: `Failed to run lcli: Failed to transition blocks: Ssz decode failed: BytesInvalid(\"Invalid Signature bytes: [186, 1, 17, 234, 51, 124, 150, 23, 84, 33, 184, 135, 189, 162, 39, 125, 121, 105, 76, 65, 49, 22, 197, 47, 148, 200, 37, 254, 10, 95, 164, 10, 43, 76, 146, 180, 219, 155, 194, 48, 19, 251, 198, 223, 156, 190, 197, 116, 188, 102, 187, 248, 0, 32, 158, 46, 109, 253, 193, 8, 161, 82, 81, 246, 215, 198, 36, 107, 127, 166, 8, 48, 99, 125, 8, 154, 157, 143, 233, 101, 207, 76, 100, 93, 138, 217, 193, 217, 196, 206, 24, 238, 77, 162, 41, 245]\")`\r\n\r\nWhereas in both mainnet/minimal there were no ssz errors. That doesn't seem correct, we should fail when unmarshalling invalid ssz objects. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620524956/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620535280",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5658#issuecomment-620535280",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5658",
    "id": 620535280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDUzNTI4MA==",
    "user": {
      "login": "pventuzelo",
      "id": 9038181,
      "node_id": "MDQ6VXNlcjkwMzgxODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9038181?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pventuzelo",
      "html_url": "https://github.com/pventuzelo",
      "followers_url": "https://api.github.com/users/pventuzelo/followers",
      "following_url": "https://api.github.com/users/pventuzelo/following{/other_user}",
      "gists_url": "https://api.github.com/users/pventuzelo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pventuzelo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pventuzelo/subscriptions",
      "organizations_url": "https://api.github.com/users/pventuzelo/orgs",
      "repos_url": "https://api.github.com/users/pventuzelo/repos",
      "events_url": "https://api.github.com/users/pventuzelo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pventuzelo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T10:59:48Z",
    "updated_at": "2020-04-28T10:59:48Z",
    "author_association": "NONE",
    "body": "I've modify `lighthouse lcli` to use `mainnet` preset and result is the same.\r\nSame from `zcli` in both `mainnet` and `minimal`.\r\n\r\nSome new output from @protolambda:\r\n```\r\nThe pre-state has a bad attestation, causing the committee indices to not match the bits. And lighthouse instead fails earlier, because of a bad signature in the block. (Zrnt only parses that right before verification, not before doing any transition at all)\r\nSo zrnt and lighthouse are not contradictory, it's just that both the state and the block are bad\r\n``` ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620535280/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620545717",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5658#issuecomment-620545717",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5658",
    "id": 620545717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDU0NTcxNw==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T11:23:29Z",
    "updated_at": "2020-04-28T11:23:29Z",
    "author_association": "NONE",
    "body": "It's not the SSZ that is invalid, it's the bitlength of some attestation in the state that is incorrect (not matching committee size), and some malformed signature in the block. It just happens that lighthouse does the signature check earlier, while zrnt deserializes it right before verification, at which point it already hit the state format problem first.\r\n\r\nThat said, if the block actually were valid, Lighthouse should still check that their state is not invalid, unlike Prysm, which seemed to catch neither of the problems. We do have invalid-signature tests though, and the invalid pre-state is not something within reach to begin with, so I don't see this as a critical bug. Still, hardening committee retrieval from prysm/lighthouse state wouldn't hurt.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620545717/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620549687",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5658#issuecomment-620549687",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5658",
    "id": 620549687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDU0OTY4Nw==",
    "user": {
      "login": "pventuzelo",
      "id": 9038181,
      "node_id": "MDQ6VXNlcjkwMzgxODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9038181?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pventuzelo",
      "html_url": "https://github.com/pventuzelo",
      "followers_url": "https://api.github.com/users/pventuzelo/followers",
      "following_url": "https://api.github.com/users/pventuzelo/following{/other_user}",
      "gists_url": "https://api.github.com/users/pventuzelo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pventuzelo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pventuzelo/subscriptions",
      "organizations_url": "https://api.github.com/users/pventuzelo/orgs",
      "repos_url": "https://api.github.com/users/pventuzelo/repos",
      "events_url": "https://api.github.com/users/pventuzelo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pventuzelo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T11:32:35Z",
    "updated_at": "2020-04-28T11:32:35Z",
    "author_association": "NONE",
    "body": "Just updated the issue name, hope it is more clear.\r\nThanks @protolambda ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620549687/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620553738",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5658#issuecomment-620553738",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5658",
    "id": 620553738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDU1MzczOA==",
    "user": {
      "login": "pventuzelo",
      "id": 9038181,
      "node_id": "MDQ6VXNlcjkwMzgxODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9038181?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pventuzelo",
      "html_url": "https://github.com/pventuzelo",
      "followers_url": "https://api.github.com/users/pventuzelo/followers",
      "following_url": "https://api.github.com/users/pventuzelo/following{/other_user}",
      "gists_url": "https://api.github.com/users/pventuzelo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pventuzelo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pventuzelo/subscriptions",
      "organizations_url": "https://api.github.com/users/pventuzelo/orgs",
      "repos_url": "https://api.github.com/users/pventuzelo/repos",
      "events_url": "https://api.github.com/users/pventuzelo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pventuzelo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T11:42:13Z",
    "updated_at": "2020-04-28T11:43:10Z",
    "author_association": "NONE",
    "body": "[nim-beacon-chain](https://github.com/status-im/nim-beacon-chain) also validate the state and block.\r\n\r\nI just opened an issue for them as well: https://github.com/status-im/nim-beacon-chain/issues/944",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620553738/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620555005",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5658#issuecomment-620555005",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5658",
    "id": 620555005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDU1NTAwNQ==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T11:45:11Z",
    "updated_at": "2020-04-28T11:45:11Z",
    "author_association": "MEMBER",
    "body": "@protolambda \r\n`lcli` did output this though `Ssz decode failed: BytesInvalid(\"Invalid Signature bytes: [186, 1, 17, 234, 51, 124, 150, 23, 84, 33, 184, 135, 189, 162, 39, 125, 121, 105, 76, 65, 49, 22, 197, 47, 148, 200, 37, 254, 10, 95, 164, 10, 43, 76, 146, 180, 219, 155, 194, 48, 19, 251, 198, 223, 156, 190, 197, 116, 188, 102, 187, 248, 0, 32, 158, 46, 109, 253, 193, 8, 161, 82, 81, 246, 215, 198, 36, 107, 127, 166, 8, 48, 99, 125, 8, 154, 157, 143, 233, 101, 207, 76, 100, 93, 138, 217, 193, 217, 196, 206, 24, 238, 77, 162, 41, 245]\"` \r\nwouldn't that point to it being a ssz issue for lighthouse ? \r\n\r\nIf it was an invalid ssz object this should have failed for us first. ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620555005/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620558756",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5658#issuecomment-620558756",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5658",
    "id": 620558756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDU1ODc1Ng==",
    "user": {
      "login": "pventuzelo",
      "id": 9038181,
      "node_id": "MDQ6VXNlcjkwMzgxODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9038181?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pventuzelo",
      "html_url": "https://github.com/pventuzelo",
      "followers_url": "https://api.github.com/users/pventuzelo/followers",
      "following_url": "https://api.github.com/users/pventuzelo/following{/other_user}",
      "gists_url": "https://api.github.com/users/pventuzelo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pventuzelo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pventuzelo/subscriptions",
      "organizations_url": "https://api.github.com/users/pventuzelo/orgs",
      "repos_url": "https://api.github.com/users/pventuzelo/repos",
      "events_url": "https://api.github.com/users/pventuzelo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pventuzelo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T11:54:09Z",
    "updated_at": "2020-04-28T11:54:09Z",
    "author_association": "NONE",
    "body": "Block is an invalid ssz for `zcli`\r\n``` \r\n./bin/zcli pretty block incorrect_ssz_validation_block_prysm.ssz\r\ncannot load input\r\ncannot decode ssz: expected to be at 3417631015 bytes, but currently at 84\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620558756/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620561633",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5658#issuecomment-620561633",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5658",
    "id": 620561633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDU2MTYzMw==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T12:00:36Z",
    "updated_at": "2020-04-28T12:00:36Z",
    "author_association": "NONE",
    "body": "> wouldn't that point to it being a ssz issue for lighthouse ?\r\n\r\nWe enforce valid BLS points at the SSZ decoding level (except for deposits). Not technically part of the SSZ spec but it saves us from processing things that will never pass signature verification.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620561633/reactions",
      "total_count": 3,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620564516",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5658#issuecomment-620564516",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5658",
    "id": 620564516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDU2NDUxNg==",
    "user": {
      "login": "pventuzelo",
      "id": 9038181,
      "node_id": "MDQ6VXNlcjkwMzgxODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9038181?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pventuzelo",
      "html_url": "https://github.com/pventuzelo",
      "followers_url": "https://api.github.com/users/pventuzelo/followers",
      "following_url": "https://api.github.com/users/pventuzelo/following{/other_user}",
      "gists_url": "https://api.github.com/users/pventuzelo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pventuzelo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pventuzelo/subscriptions",
      "organizations_url": "https://api.github.com/users/pventuzelo/orgs",
      "repos_url": "https://api.github.com/users/pventuzelo/repos",
      "events_url": "https://api.github.com/users/pventuzelo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pventuzelo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T12:07:11Z",
    "updated_at": "2020-04-28T12:07:11Z",
    "author_association": "NONE",
    "body": "[teku](https://github.com/PegaSysEng/teku) also have the same issue.\r\n\r\nReported here: https://github.com/PegaSysEng/teku/issues/1686",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620564516/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620581630",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5658#issuecomment-620581630",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5658",
    "id": 620581630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDU4MTYzMA==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T12:42:14Z",
    "updated_at": "2020-04-28T12:42:14Z",
    "author_association": "MEMBER",
    "body": "> We enforce valid BLS points at the SSZ decoding level (except for deposits). Not technically part of the SSZ spec but it saves us from processing things that will never pass signature verification.\r\n\r\nGotcha, thanks for confirming this. So its a sig verification issue then. So trying to think of action items for this: \r\n@terencechain any ideas ? Of the top of my head.\r\n\r\n1) Perform signature verification before processing block \r\n2) Verify Pre-State\r\n\r\nOn 1) I think we are moving towards decoupling signature verification from block processing, so we could take this under that. This should prevent us from processing any bad  blocks. \r\n\r\nOn 2) , not too sure about how to approach this. `it's the bitlength of some attestation in the state that is incorrect (not matching committee size)` . In restrospect we should never have some state with invalid attestations ever saved to db. This would fail the previous state transition anyway. Not sure how common this would be to come up in runtime. It's not like we receive state over the wire or anything, so I guess this may not be as important of a check.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620581630/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620594775",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5658#issuecomment-620594775",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5658",
    "id": 620594775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDU5NDc3NQ==",
    "user": {
      "login": "pventuzelo",
      "id": 9038181,
      "node_id": "MDQ6VXNlcjkwMzgxODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9038181?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pventuzelo",
      "html_url": "https://github.com/pventuzelo",
      "followers_url": "https://api.github.com/users/pventuzelo/followers",
      "following_url": "https://api.github.com/users/pventuzelo/following{/other_user}",
      "gists_url": "https://api.github.com/users/pventuzelo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pventuzelo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pventuzelo/subscriptions",
      "organizations_url": "https://api.github.com/users/pventuzelo/orgs",
      "repos_url": "https://api.github.com/users/pventuzelo/repos",
      "events_url": "https://api.github.com/users/pventuzelo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pventuzelo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T13:07:03Z",
    "updated_at": "2020-04-28T14:27:51Z",
    "author_association": "NONE",
    "body": "Quick recap:\r\n\r\n**lighthouse**: \r\n- decode the `state` properly\r\n- detect bls signature is invalid in the `block` during ssz decoding: `Ssz decode failed: BytesInvalid(\"Invalid Signature bytes:`\r\nnotes: lighthouse is checking BLS during ssz decoding\r\n\r\n**zcli**:\r\n- decode the `state` as well\r\n- detect the block is invalid running `zcli pretty` with error: `decode ssz: expected to be at 3417631015 bytes, but currently at 84`\r\n- when running `zcli transition blocks`, we get the `commitee mismatch` error\r\n\r\n**prysm/teku/nim:**\r\n- decode the `state` as well\r\n- consider the `block` as valid and tried to process the state transition\r\n\r\nSome extra tests using states from the spec (`pre.ssz` and `post.ssz`) show that the results on **prysm** are the same whatever `state` we are using.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620594775/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620968336",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5658#issuecomment-620968336",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5658",
    "id": 620968336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDk2ODMzNg==",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-29T03:17:52Z",
    "updated_at": "2020-04-29T03:17:52Z",
    "author_association": "MEMBER",
    "body": "@pventuzelo to echo what @protolambda said:\r\n```\r\n... the invalid pre-state is not something within reach to begin with, so I don't see this as a critical bug. Still, hardening committee retrieval from prysm/lighthouse state wouldn't hurt.\r\n```\r\n\r\nGiven this is strictly a client implementation detail, it may be better to start harden it from spec's point of view (ie add this check to the beacon chain spec) then us the client implementations can follow along. What do you think?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620968336/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/621493590",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5658#issuecomment-621493590",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5658",
    "id": 621493590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTQ5MzU5MA==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-29T22:14:22Z",
    "updated_at": "2020-04-29T22:14:22Z",
    "author_association": "MEMBER",
    "body": "How long did this take to run? The input data here would run almost 2 quadrillion empty state transitions before running validation. \r\n\r\nThis isn't the normal beacon block pipeline for Prysm. This method has assumed the following:\r\n- The block is not from the future\r\n- The block has already be verified by p2p spec requirements\r\n- The state transition processing has a reasonable deadline (pcli has no deadline).\r\n\r\nI don't think your findings are correct. There is no way prysm processed 2 quadrillion empty state transitions in 15 seconds. ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/621493590/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/621497126",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5658#issuecomment-621497126",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5658",
    "id": 621497126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTQ5NzEyNg==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-29T22:22:22Z",
    "updated_at": "2020-04-29T22:22:22Z",
    "author_association": "MEMBER",
    "body": "We have implemented the spec `state_transition` pretty much exactly as it is written. If Lighthouse or other clients are doing additional behavior, then this isn't a proper test setup. Let us know what you need, otherwise this is a no-op issue.\r\n\r\nA quick recap of what pcli is doing:\r\n- Deserialize ssz objects\r\n- Take determine the roots of these objects before processing\r\n- Run state_transition as defined in the spec\r\n- Return results\r\n\r\n```python\r\ndef state_transition(state: BeaconState, signed_block: SignedBeaconBlock, validate_result: bool=True) -> BeaconState:\r\n    block = signed_block.message\r\n    # Process slots (including those with no blocks) since block\r\n    process_slots(state, block.slot)\r\n    # Verify signature\r\n    if validate_result:\r\n        assert verify_block_signature(state, signed_block)\r\n    # Process block\r\n    process_block(state, block)\r\n    # Verify state root\r\n    if validate_result:\r\n        assert block.state_root == hash_tree_root(state)\r\n    # Return post-state\r\n    return state\r\n```\r\n\r\nWith your input data, `process_slots(state, block.slot)` will take a very long time as it has to run nearly 2 quadrillion state transitions. (1970324836982784-95-1 transitions). The log you pasted in the original issue shows that Prysm is starting process_slots and you terminated it in 15s. Based on the spec, we have implemented this correctly and are doing exactly what is intended. Like i said in the previous comment, blocks would not have reached this state transition core function from any layer of the application. pcli is calling state transition directly, as intended.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/621497126/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/621519710",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5658#issuecomment-621519710",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5658",
    "id": 621519710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTUxOTcxMA==",
    "user": {
      "login": "zedt3ster",
      "id": 9854592,
      "node_id": "MDQ6VXNlcjk4NTQ1OTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9854592?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zedt3ster",
      "html_url": "https://github.com/zedt3ster",
      "followers_url": "https://api.github.com/users/zedt3ster/followers",
      "following_url": "https://api.github.com/users/zedt3ster/following{/other_user}",
      "gists_url": "https://api.github.com/users/zedt3ster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zedt3ster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zedt3ster/subscriptions",
      "organizations_url": "https://api.github.com/users/zedt3ster/orgs",
      "repos_url": "https://api.github.com/users/zedt3ster/repos",
      "events_url": "https://api.github.com/users/zedt3ster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zedt3ster/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-29T23:20:43Z",
    "updated_at": "2020-04-29T23:20:43Z",
    "author_association": "NONE",
    "body": "I think the main issue here is that we've used utilities such as `pcli`, `zcli`, and `ncli` with the assumption that they're identical to how the related client actually processes the SSZ containers, thinking that these tools include all checks and verification steps, which isn't the case as outlined by @prestonvanloon.\r\n\r\nFeel free to close this issue, we'll investigate a better/more effective way of testing these edge cases :)",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/621519710/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/621778526",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5658#issuecomment-621778526",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5658",
    "id": 621778526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTc3ODUyNg==",
    "user": {
      "login": "pventuzelo",
      "id": 9038181,
      "node_id": "MDQ6VXNlcjkwMzgxODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9038181?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pventuzelo",
      "html_url": "https://github.com/pventuzelo",
      "followers_url": "https://api.github.com/users/pventuzelo/followers",
      "following_url": "https://api.github.com/users/pventuzelo/following{/other_user}",
      "gists_url": "https://api.github.com/users/pventuzelo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pventuzelo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pventuzelo/subscriptions",
      "organizations_url": "https://api.github.com/users/pventuzelo/orgs",
      "repos_url": "https://api.github.com/users/pventuzelo/repos",
      "events_url": "https://api.github.com/users/pventuzelo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pventuzelo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T11:36:36Z",
    "updated_at": "2020-04-30T11:36:36Z",
    "author_association": "NONE",
    "body": "I've update the issue name to make it clear that it is related to pcli.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/621778526/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
