{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/477",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/477/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/477/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/477/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/477",
  "id": 357837517,
  "node_id": "MDU6SXNzdWUzNTc4Mzc1MTc=",
  "number": 477,
  "title": "Add Proposer Validity Rule for Incoming Block",
  "user": {
    "login": "terencechain",
    "id": 21316537,
    "node_id": "MDQ6VXNlcjIxMzE2NTM3",
    "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/terencechain",
    "html_url": "https://github.com/terencechain",
    "followers_url": "https://api.github.com/users/terencechain/followers",
    "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
    "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
    "organizations_url": "https://api.github.com/users/terencechain/orgs",
    "repos_url": "https://api.github.com/users/terencechain/repos",
    "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
    "received_events_url": "https://api.github.com/users/terencechain/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/milestones/1",
    "html_url": "https://github.com/prysmaticlabs/prysm/milestone/1",
    "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/milestones/1/labels",
    "id": 3141840,
    "node_id": "MDk6TWlsZXN0b25lMzE0MTg0MA==",
    "number": 1,
    "title": "Ruby - Demo",
    "description": "The Ruby Release: Local Alphanet",
    "creator": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 270,
    "state": "closed",
    "created_at": "2018-02-25T21:22:44Z",
    "updated_at": "2018-10-09T10:37:42Z",
    "due_on": "2018-10-01T07:00:00Z",
    "closed_at": "2018-10-09T10:37:42Z"
  },
  "comments": 3,
  "created_at": "2018-09-06T21:38:51Z",
  "updated_at": "2018-09-15T14:51:18Z",
  "closed_at": "2018-09-15T14:51:18Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Add proposer validation to part of block validity check. From v2.1 spec, to check whether the incoming beacon block has been signed by the correct proposer. We should perform the following check:\r\n\r\n1.) Use `parent.slot_number % len(get_indices_for_slot(crystallized_state, parent.slot_number)[0])` to figure out which validator index is the proposer whom also attested for it's own proposed block.\r\n\r\n2.) Verify the validator is in one of the `AttestationObject` of the incoming beacon block",
  "closed_by": {
    "login": "terencechain",
    "id": 21316537,
    "node_id": "MDQ6VXNlcjIxMzE2NTM3",
    "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/terencechain",
    "html_url": "https://github.com/terencechain",
    "followers_url": "https://api.github.com/users/terencechain/followers",
    "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
    "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
    "organizations_url": "https://api.github.com/users/terencechain/orgs",
    "repos_url": "https://api.github.com/users/terencechain/repos",
    "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
    "received_events_url": "https://api.github.com/users/terencechain/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/477/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/477/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/420509378",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/477#issuecomment-420509378",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/477",
    "id": 420509378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDUwOTM3OA==",
    "user": {
      "login": "rawfalafel",
      "id": 202157,
      "node_id": "MDQ6VXNlcjIwMjE1Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/202157?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rawfalafel",
      "html_url": "https://github.com/rawfalafel",
      "followers_url": "https://api.github.com/users/rawfalafel/followers",
      "following_url": "https://api.github.com/users/rawfalafel/following{/other_user}",
      "gists_url": "https://api.github.com/users/rawfalafel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rawfalafel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rawfalafel/subscriptions",
      "organizations_url": "https://api.github.com/users/rawfalafel/orgs",
      "repos_url": "https://api.github.com/users/rawfalafel/repos",
      "events_url": "https://api.github.com/users/rawfalafel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rawfalafel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-12T04:37:04Z",
    "updated_at": "2018-09-12T04:37:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is confusing, but the above description won't validate the current block's proposer, only the parent block's proposer.\r\n\r\n> In general, when a block is produced, it is broadcasted at the network layer along with the attestation from its proposer.\r\n\r\nThis means that we need to modify `BeaconBlockRequest` to also include the attestation of the block, and then validate that signature the way its described above.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/420509378/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/420646804",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/477#issuecomment-420646804",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/477",
    "id": 420646804,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDY0NjgwNA==",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-12T13:25:17Z",
    "updated_at": "2018-09-12T13:25:37Z",
    "author_association": "MEMBER",
    "body": "Why not?\r\n```\r\nSuppose there's an incoming block that looks like this\r\n{\r\n   Slot: 1\r\n   ParentHash: XXX\r\n   CrystallizedHash: XXX\r\n   ActiveHash: XXX\r\n   Attestations: {\r\n      AttestationRecord1: {\r\n           Bittfield: ProposerIndex\r\n           Signature: ProposerSignature\r\n      }\r\n     AttestationRecord2: XXX\r\n     AttestationRecord3: XXX\r\n     AttestationRecord4: XXX\r\n}\r\n}\r\n}\r\n```\r\nWe use `parent.slot_number % len(get_indices_for_slot(crystallized_state, parent.slot_number)[0])` to figure out proposer index",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/420646804/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/420651076",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/477#issuecomment-420651076",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/477",
    "id": 420651076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDY1MTA3Ng==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-12T13:37:54Z",
    "updated_at": "2018-09-12T13:37:54Z",
    "author_association": "NONE",
    "body": "The proposer signature needs to be broadcast alongside the proposer's block. The proposer proposes a block at slot N and attests to it. The attestation cannot be included until at least slot N+1.\r\n\r\nThis is why the following was added to the pre-conditions for processing a block:\r\n> An attestation from the proposer of the block (see later for definition) is included along with the block in the network message object\r\n\r\nSo I have to first see the proposer's signature floating around before I process the proposer's block.\r\n\r\nThis somewhat strange notion of validating the parent's proposer signature when validating the child, allows us to not have two different types of signatures in a block (proposer and attester) and lets us instead keep the single (and aggregatable) attestation signature.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/420651076/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
