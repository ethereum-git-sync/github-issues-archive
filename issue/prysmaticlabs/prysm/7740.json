{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/7740",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/7740/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/7740/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/7740/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/7740",
  "id": 737650462,
  "node_id": "MDU6SXNzdWU3Mzc2NTA0NjI=",
  "number": 7740,
  "title": "Security: validator account vs interactive password vs remote signer",
  "user": {
    "login": "gregbkr",
    "id": 5642000,
    "node_id": "MDQ6VXNlcjU2NDIwMDA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5642000?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gregbkr",
    "html_url": "https://github.com/gregbkr",
    "followers_url": "https://api.github.com/users/gregbkr/followers",
    "following_url": "https://api.github.com/users/gregbkr/following{/other_user}",
    "gists_url": "https://api.github.com/users/gregbkr/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gregbkr/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gregbkr/subscriptions",
    "organizations_url": "https://api.github.com/users/gregbkr/orgs",
    "repos_url": "https://api.github.com/users/gregbkr/repos",
    "events_url": "https://api.github.com/users/gregbkr/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gregbkr/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2020-11-06T10:32:06Z",
  "updated_at": "2020-11-10T18:05:20Z",
  "closed_at": "2020-11-10T05:07:00Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "<!--ðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’Ž\r\n\r\nHellooo! ðŸ˜„ \r\n\r\nTo help us tend to your issue faster, please search our currently open issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\nðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’Ž-->\r\n\r\n# ðŸ’Ž Open question on validator account security\r\n\r\n### Background\r\n\r\nSome questions following the [documentation](https://docs.prylabs.network/docs/wallet/introduction) about how to protect your validator account, understanding the consequence of a hack while running on a VPS in the cloud, or using remote signer with a raspberry at home.\r\n\r\n### Description\r\n\r\nHello,\r\n\r\nI understand that ETH2 keys can be generated on a secure device (airgapped rapsberry) with [deposit-cli](https://github.com/ethereum/eth2.0-deposit-cli) and come in two set of data to secure:\r\n- `A 24 words seed`: the master key (that control withdraw, validators creation) -> we save it to a paper, and put it in a safe: SAFE, no one may be able to withdraw our ETH.\r\n- `Validator account`: a file (`password` protected) to be moved to an active node (VPS, home raspberry) to stake ETH (hot wallet) -> security to be discussed below...\r\n\r\n1. What are the worse things an attacker could do if they get hand on `validator account` + `password`:\r\n- I can think of running several validators to volontary get slashed/burn all ETH in our wallet. Attacker wins nothing, but we lose a lot. Can someone make you burn to oblivion (until your balance goes to 0 ETH)?\r\n- Other?\r\n\r\n2. About that `validator account`:\r\n\r\n| Tag | Config | Description | Ease of use | Security \r\n-------|-----------|-----------------|-----------------|------------\r\n| 2.a | validator + password on VPS |  We could move the file to a VPS, write the `password` to `password.txt` and run staking with `prysm validator --password-file password.txt` | using systemd, we could automate staking relaunch if the server restart. | but if an attacker enter our VPS, he can get everything: `validator account` and `password`\r\n|2.b| validator + interactive password on VPS|  We could move the file to a VPS, and enter manual/interactive `password` when we run `prysm validator` then we type the password when asked | each time the daemon stop, we will need to be alerted and go manually on the server to start it + `password` input | password don't live in file which is much better, but may live in RAM somewhere to get? (not sure)\r\n| 2.c | Remote signer (VPS + home raspberry)| We could use remote-signer, your `validator account` will then live on your home raspberry (more protected) and sign request from the VPS (in the cloud, more in the front line). | not trivial to install, and now you need to take care of 2 boxes | someone entering our VPS will not find `validator account` file, but could he not run 2 `prysm validator` and voluntary \"burn/slash\" our ETH, our remote-signer would just do his job, signing anything from VPS. in this case, it is the same security as tag `2.a`.\r\n\r\nI would love to better understand the risk of each points.\r\nThank you for your help!\r\nGreg.",
  "closed_by": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/7740/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/7740/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/724454531",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/7740#issuecomment-724454531",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/7740",
    "id": 724454531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNDQ1NDUzMQ==",
    "user": {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-10T05:07:00Z",
    "updated_at": "2020-11-10T05:07:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gregbkr you summarized it perfectly. I'll add a bit more to the risks of each. \r\n\r\nFor (2.a), yes the attacker could gain your password and thereby obtain your accounts and unencrypted validating private keys. The attacker will never have your withdrawal private keys, however.\r\n\r\nFor (2.b) The decrypted accounts live in RAM so yes they could dump the RAM and still steal your accounts\r\n\r\nFor (2.c) Yes this is a potential scenario, but you could setup slashing protection via `slasher` as a middleware in a third box between the remote signer and validator client. We do not currently have guides for this, but this is the most secure setup. Even if someone dumps your RAM, there is nothing of interest as there are no keys to steal. This is as air-gapped as you can get! It is indeed difficult, and would require a custom setup and/or help from our team. Our remote signer reference implementation [here](https://github.com/prysmaticlabs/remote-signer) is not production-ready as it is only for demonstration purposes. You would have to build a better one that can fulfill these needs",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/724454531/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/724869405",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/7740#issuecomment-724869405",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/7740",
    "id": 724869405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNDg2OTQwNQ==",
    "user": {
      "login": "gregbkr",
      "id": 5642000,
      "node_id": "MDQ6VXNlcjU2NDIwMDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5642000?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gregbkr",
      "html_url": "https://github.com/gregbkr",
      "followers_url": "https://api.github.com/users/gregbkr/followers",
      "following_url": "https://api.github.com/users/gregbkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/gregbkr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gregbkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gregbkr/subscriptions",
      "organizations_url": "https://api.github.com/users/gregbkr/orgs",
      "repos_url": "https://api.github.com/users/gregbkr/repos",
      "events_url": "https://api.github.com/users/gregbkr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gregbkr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-10T18:01:08Z",
    "updated_at": "2020-11-10T18:01:08Z",
    "author_association": "NONE",
    "body": "Thank you @rauljordan for your clear answer!\r\nIs there on the roadmap any \"ledger eth2 staking app\", to protect your validator private key, similar to [tezos-baking-app](https://github.com/obsidiansystems/ledger-app-tezos)? It seems like the ultimate/efficient security solution. Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/724869405/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/724871754",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/7740#issuecomment-724871754",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/7740",
    "id": 724871754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNDg3MTc1NA==",
    "user": {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-10T18:05:20Z",
    "updated_at": "2020-11-10T18:05:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Unfortunately, no hardware wallet support is known at the moment. The best we recommend for average stakers is to keep your mnemonic always offline and safe, and only import validating keys into Prysm as you need them. For advanced stakers, remote signers are the best way, but there isn't a documented way to set one up yet for production. We are working on using a remote signer internally and after that effort is done, we can perhaps open source it or add instructions in our docs",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/724871754/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
