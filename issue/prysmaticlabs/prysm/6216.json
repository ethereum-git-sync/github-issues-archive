{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6216",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6216/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6216/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6216/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/6216",
  "id": 637149556,
  "node_id": "MDU6SXNzdWU2MzcxNDk1NTY=",
  "number": 6216,
  "title": "Convert the BeaconState to a Pure Go Data Structure for Optimal Speed and Memory Usage",
  "user": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1085357783,
      "node_id": "MDU6TGFiZWwxMDg1MzU3Nzgz",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Priority:%20Low",
      "name": "Priority: Low",
      "color": "26f7bd",
      "default": false,
      "description": "Low priority item"
    },
    {
      "id": 1241586918,
      "node_id": "MDU6TGFiZWwxMjQxNTg2OTE4",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Tracking",
      "name": "Tracking",
      "color": "d0ff7f",
      "default": false,
      "description": "Gotta Catch 'Em All"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/milestones/3",
    "html_url": "https://github.com/prysmaticlabs/prysm/milestone/3",
    "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/milestones/3/labels",
    "id": 3141844,
    "node_id": "MDk6TWlsZXN0b25lMzE0MTg0NA==",
    "number": 3,
    "title": "Diamond",
    "description": "The Diamond Release: Ethereum Mainnet",
    "creator": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 113,
    "state": "closed",
    "created_at": "2018-02-25T21:24:26Z",
    "updated_at": "2020-11-25T18:06:34Z",
    "due_on": "2020-11-20T08:00:00Z",
    "closed_at": "2020-11-25T18:06:34Z"
  },
  "comments": 5,
  "created_at": "2020-06-11T16:12:13Z",
  "updated_at": "2020-10-12T22:51:35Z",
  "closed_at": "2020-10-12T22:51:35Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "<!--ðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’Ž\r\n\r\nHellooo! ðŸ˜„ \r\n\r\nTo help us tend to your issue faster, please search our currently open issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\nðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’Ž-->\r\n\r\n# ðŸš€ Feature Request\r\n\r\n### Description\r\n\r\nThanks to @protolambda for bringing up this initiative. Currently, the beacon state in Prysm is implemented as a wrapper data structure over a protobuf for legacy reasons:\r\n\r\n```go\r\nimport pb \"github.com/prysmaticlabs/prysm/proto/beacon/p2p/v1\"\r\n\r\ntype BeaconState {\r\n  state *pb.BeaconState\r\n  ... // Other metadata, field tries, etc.\r\n}\r\n```\r\nOur native protobuf is using slices of slices to represent 32 byte array fields, which leads to massive utilization of memory and poor performance across the board compared to a simpler approach with real arrays. This leads to high mem usage of SSZ marshal/unmarshal, as well as limitations in terms of garbage collection and memory optimization.\r\n\r\n### Describe the solution you'd like\r\n\r\nIf we were to reimplement the beacon state in pure Go, we could define its fields directly as struct fields rather than using a protobuf. The state does not need to be a protobuf as it is neither sent over p2p nor RPC. This approach could help us represent certain expensive fields in more optimal ways, such as leveraging tries to some extent. This is a tracking issue for us to begin this refactor and explore its performance compared to the current baseline in memory usage, state transitions, and more.\r\n",
  "closed_by": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6216/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6216/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/642784470",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/6216#issuecomment-642784470",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6216",
    "id": 642784470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0Mjc4NDQ3MA==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-11T16:18:20Z",
    "updated_at": "2020-06-11T16:18:20Z",
    "author_association": "NONE",
    "body": "Copying my comment from discord, after benching SSZ and protobuf serialize/deserialize/htr, and optimizing zssz in some places, this is what there's to look at:\r\n\r\n- [ ] Avoid repeated Write/Read calls for small fields like zssz does. Streaming is cool, but slow when you stream every tiny field. Implement a hybrid for small fixed-length containers (Validator) that can write to a stream as a whole. Needs a scratchpad of 121 bytes at least, but very doable. Can be faster than fastssz even if done well.\r\n- [ ] Use a scratchpad for every temporary thing for 0 allocs. For offset writing/reading, for basic types converting to/from bytes, and for merkleization\r\n- [ ] In-place deserialize whenever you have a slice with enough capacity, or a non-nil pointer. Enables you to pool objects also, for 0 allocations when you just cycle through many objects with a small amount live at a time (beacon state!)\r\n- [ ] Merkleization shouldn't allocate anything either. A scratchpad with a stack of things to merge in would be sufficient. Like how zssz merkleizes, but can be better still.\r\n- [ ] Don't use slices of offsets. Compute the value size, write that, then later serialize as if you needed to. This code can be generated, I think fast-ssz does something similar already, but we can expand it to dynamic types etc. For faster block serialize/deserialize. The state has a large registry of fixed-size validators, so it's not really representative.\r\n- [ ] No reflection anywhere\r\n- [ ] Avoid slices of slices (32 bytes) in types, it results in indirection, and if they happen to be more scrambled due to transitions, it could be bad (not benched here, pretty difficult)\r\n- [ ] Introduce pooling of objects, to not pressure the GC. Note: nice for RPC and attestation pools etc., but Nishant said there were problems in the past.\r\n- [ ] Pooling of states could be great; you've reference counting anyway already. Now release the raw state back to a pool, to deserialize into when necessary. Prysm memory metrics could be more solid if done well. State is tricky though, start simple here.\r\n- [ ] Avoid copying the whole registry of validators on append. Refactoring the registry approach would help to reduce memory a lot, since it's like 90% of the state or so.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/642784470/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/651294365",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/6216#issuecomment-651294365",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6216",
    "id": 651294365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTI5NDM2NQ==",
    "user": {
      "login": "0xKiwi",
      "id": 6251510,
      "node_id": "MDQ6VXNlcjYyNTE1MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6251510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xKiwi",
      "html_url": "https://github.com/0xKiwi",
      "followers_url": "https://api.github.com/users/0xKiwi/followers",
      "following_url": "https://api.github.com/users/0xKiwi/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xKiwi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xKiwi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xKiwi/subscriptions",
      "organizations_url": "https://api.github.com/users/0xKiwi/orgs",
      "repos_url": "https://api.github.com/users/0xKiwi/repos",
      "events_url": "https://api.github.com/users/0xKiwi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xKiwi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-29T18:45:40Z",
    "updated_at": "2020-06-29T18:45:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is there anyone this can be assigned to? Should the priority be reassigned?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/651294365/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/653166630",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/6216#issuecomment-653166630",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6216",
    "id": 653166630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzE2NjYzMA==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T18:46:36Z",
    "updated_at": "2020-07-02T18:46:36Z",
    "author_association": "MEMBER",
    "body": "@rauljordan, were you interested in this?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/653166630/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/653300553",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/6216#issuecomment-653300553",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6216",
    "id": 653300553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzMwMDU1Mw==",
    "user": {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-03T02:23:35Z",
    "updated_at": "2020-07-03T02:23:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey @prestonvanloon, we are currently blocked on this until Ferran's\nfastssz supports arrays in ssz marshal/unmarshal. Waiting on @ferranbt 's\nupdate on this before preceding, but yes I am interested in this task\n\nOn Thu, Jul 2, 2020 at 1:46 PM Preston Van Loon <notifications@github.com>\nwrote:\n\n> @rauljordan <https://github.com/rauljordan>, were you interested in this?\n>\n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/prysmaticlabs/prysm/issues/6216#issuecomment-653166630>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ABKQQPPRPAMYDFUOCXU6PFTRZTIZVANCNFSM4N3RXVPA>\n> .\n>\n\n\n-- \n*Raul E. Jordan | Co-Founder, Prysmatic Labs*\nprysmaticlabs.com\nTwitter: @raulitojordan <https://twitter.com/raulitojordan>\n\ngpg --receive-keys 95452A701810FEDB\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/653300553/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/707383993",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/6216#issuecomment-707383993",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6216",
    "id": 707383993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNzM4Mzk5Mw==",
    "user": {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-12T22:51:35Z",
    "updated_at": "2020-10-12T22:51:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is out of scope given its complexity and execution risk at this point. State is already quite optimized with fastssz and copy-on-write mechanisms",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/707383993/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
