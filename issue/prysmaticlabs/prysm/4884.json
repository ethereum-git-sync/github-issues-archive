{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4884",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4884/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4884/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4884/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/4884",
  "id": 566186925,
  "node_id": "MDU6SXNzdWU1NjYxODY5MjU=",
  "number": 4884,
  "title": "API: eligibleEther != sum(valiadtorList[].validator.effectiveBalance)",
  "user": {
    "login": "guybrush",
    "id": 306324,
    "node_id": "MDQ6VXNlcjMwNjMyNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/306324?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/guybrush",
    "html_url": "https://github.com/guybrush",
    "followers_url": "https://api.github.com/users/guybrush/followers",
    "following_url": "https://api.github.com/users/guybrush/following{/other_user}",
    "gists_url": "https://api.github.com/users/guybrush/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/guybrush/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/guybrush/subscriptions",
    "organizations_url": "https://api.github.com/users/guybrush/orgs",
    "repos_url": "https://api.github.com/users/guybrush/repos",
    "events_url": "https://api.github.com/users/guybrush/events{/privacy}",
    "received_events_url": "https://api.github.com/users/guybrush/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 934596141,
      "node_id": "MDU6TGFiZWw5MzQ1OTYxNDE=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Discussion",
      "name": "Discussion",
      "color": "f9d0c4",
      "default": false,
      "description": "Simply a thread for talking about stuff"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2020-02-17T10:03:49Z",
  "updated_at": "2020-04-14T17:07:07Z",
  "closed_at": "2020-04-14T17:07:07Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "If I am understanding the API correctly `/eth/v1alpha1/validators/participation.participation.eligibleEther` should be the same as the sum of all effective balances of active validators (`/eth/v1alpha1/validators.validatorList[].validator.effectiveBalance`)?\r\n\r\nBut using this program to connect to my beacon-node it looks like that is not the case?\r\n\r\nOutput:\r\n```\r\nnodeVersion   : Prysm/Git commit: 9b2aa66667398410a33b4b2be1f4839583930b38. Built at: 2020-02-17 05:13:16+00:00\r\nheadEpoch     : 8146\r\nfinalizedEpoch: 8144\r\njustifiedEpoch: 8146\r\n==== checking epoch 8146\r\neligibleEther         : 128794500000000\r\nvotedEther            : 113351400000000\r\ntotalEffectiveBalance : 128841100000000\r\nactiveEffectiveBalance: 128819400000000\r\npendingValidators     : 0\r\nactiveValidators      : 41527\r\nexitingValidators     : 0\r\nslashingValidators    : 0\r\nexitedValidators      : 7\r\nslashedValidators     : 0\r\n==== checking epoch 8145\r\neligibleEther         : 128781700000000\r\nvotedEther            : 113000600000000\r\ntotalEffectiveBalance : 128828000000000\r\nactiveEffectiveBalance: 128806300000000\r\npendingValidators     : 0\r\nactiveValidators      : 41523\r\nexitingValidators     : 0\r\nslashingValidators    : 0\r\nexitedValidators      : 7\r\nslashedValidators     : 0\r\n```\r\n\r\n<details><summary>Program</summary>\r\n\r\n```golang\r\npackage main\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"flag\"\r\n\t\"fmt\"\r\n\t\"strconv\"\r\n\t\"strings\"\r\n\r\n\tptypesEmpty \"github.com/golang/protobuf/ptypes/empty\"\r\n\tethpb \"github.com/prysmaticlabs/ethereumapis/eth/v1alpha1\"\r\n\t\"google.golang.org/grpc\"\r\n)\r\n\r\nfunc main() {\r\n\taddrFlag := flag.String(\"addr\", \":4000\", \"address of beacon-node to connect to\")\r\n\tepochsFlag := flag.String(\"epochs\", \"\", \"comma seperated list of epochs to check, eg: \\\"2,3,4\\\" (per default only last to epochs are checked)\")\r\n\r\n\tflag.Parse()\r\n\r\n\tdialOpt := grpc.WithInsecure()\r\n\tconn, err := grpc.Dial(*addrFlag, dialOpt)\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\r\n\tnodeClient := ethpb.NewNodeClient(conn)\r\n\r\n\tversion, err := nodeClient.GetVersion(context.Background(), &ptypesEmpty.Empty{})\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\r\n\tchainClient := ethpb.NewBeaconChainClient(conn)\r\n\r\n\tchainHead, err := chainClient.GetChainHead(context.Background(), &ptypesEmpty.Empty{})\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\r\n\tfmt.Printf(\"nodeVersion   : %v\\n\", version.Version)\r\n\tfmt.Printf(\"headEpoch     : %v\\n\", chainHead.HeadEpoch)\r\n\tfmt.Printf(\"finalizedEpoch: %v\\n\", chainHead.FinalizedEpoch)\r\n\tfmt.Printf(\"justifiedEpoch: %v\\n\", chainHead.JustifiedEpoch)\r\n\r\n\tepochs := []uint64{chainHead.HeadEpoch, chainHead.HeadEpoch - 1}\r\n\r\n\tif *epochsFlag != \"\" {\r\n\t\tepochsFlagSplit := strings.Split(*epochsFlag, \",\")\r\n\t\tfor _, e := range epochsFlagSplit {\r\n\t\t\tu, err := strconv.ParseUint(e, 10, 64)\r\n\t\t\tif err != nil {\r\n\t\t\t\tpanic(err)\r\n\t\t\t}\r\n\t\t\tepochs = append(epochs, u)\r\n\t\t}\r\n\t}\r\n\r\nepochLoop:\r\n\tfor _, epoch := range epochs {\r\n\t\tfmt.Printf(\"==== checking epoch %v\\n\", epoch)\r\n\t\tvar totalEffectiveBalance uint64\r\n\t\tvar activeEffectiveBalance uint64\r\n\t\tpendingValidators := 0\r\n\t\tactiveValidators := 0\r\n\t\texitingValidators := 0\r\n\t\tslashingValidators := 0\r\n\t\texitedValidators := 0\r\n\t\tslashedValidators := 0\r\n\t\tvalidatorsResponse := &ethpb.Validators{}\r\n\t\tfor {\r\n\t\t\tvalidatorsResponse, err = chainClient.ListValidators(\r\n\t\t\t\tcontext.Background(),\r\n\t\t\t\t&ethpb.ListValidatorsRequest{\r\n\t\t\t\t\tPageToken:   validatorsResponse.NextPageToken,\r\n\t\t\t\t\tPageSize:    500,\r\n\t\t\t\t\tQueryFilter: &ethpb.ListValidatorsRequest_Epoch{Epoch: epoch},\r\n\t\t\t\t},\r\n\t\t\t)\r\n\t\t\tif err != nil {\r\n\t\t\t\tfmt.Printf(\"error chainClient.ListValidators: %v: %v\\n\", epoch, err)\r\n\t\t\t\tcontinue epochLoop\r\n\t\t\t}\r\n\t\t\tif validatorsResponse.TotalSize == 0 {\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\tfor _, v := range validatorsResponse.ValidatorList {\r\n\t\t\t\tif v.Validator.ActivationEpoch > epoch ||\r\n\t\t\t\t\tv.Validator.ActivationEligibilityEpoch > epoch {\r\n\t\t\t\t\tpendingValidators++\r\n\t\t\t\t} else if v.Validator.ExitEpoch <= epoch {\r\n\t\t\t\t\tif v.Validator.Slashed {\r\n\t\t\t\t\t\tslashedValidators++\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\texitedValidators++\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if v.Validator.Slashed {\r\n\t\t\t\t\tactiveEffectiveBalance += v.Validator.EffectiveBalance\r\n\t\t\t\t\tslashingValidators++\r\n\t\t\t\t} else {\r\n\t\t\t\t\tactiveEffectiveBalance += v.Validator.EffectiveBalance\r\n\t\t\t\t\tactiveValidators++\r\n\t\t\t\t}\r\n\t\t\t\ttotalEffectiveBalance += v.Validator.EffectiveBalance\r\n\t\t\t}\r\n\t\t\tif validatorsResponse.NextPageToken == \"\" {\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvalidatorParticipation, err := chainClient.GetValidatorParticipation(\r\n\t\t\tcontext.Background(),\r\n\t\t\t&ethpb.GetValidatorParticipationRequest{\r\n\t\t\t\tQueryFilter: &ethpb.GetValidatorParticipationRequest_Epoch{Epoch: epoch},\r\n\t\t\t},\r\n\t\t)\r\n\t\tif err != nil {\r\n\t\t\tfmt.Printf(\"error chainClient.GetValidatorParticipation: %v: %v\\n\", epoch, err)\r\n\t\t} else {\r\n\t\t\tfmt.Printf(\"eligibleEther         : %v\\n\", validatorParticipation.Participation.EligibleEther)\r\n\t\t\tfmt.Printf(\"votedEther            : %v\\n\", validatorParticipation.Participation.VotedEther)\r\n\t\t}\r\n\r\n\t\tfmt.Printf(\"totalEffectiveBalance : %v\\n\", totalEffectiveBalance)\r\n\t\tfmt.Printf(\"activeEffectiveBalance: %v\\n\", activeEffectiveBalance)\r\n\t\tfmt.Printf(\"pendingValidators     : %v\\n\", pendingValidators)\r\n\t\tfmt.Printf(\"activeValidators      : %v\\n\", activeValidators)\r\n\t\tfmt.Printf(\"exitingValidators     : %v\\n\", exitingValidators)\r\n\t\tfmt.Printf(\"slashingValidators    : %v\\n\", slashingValidators)\r\n\t\tfmt.Printf(\"exitedValidators      : %v\\n\", exitedValidators)\r\n\t\tfmt.Printf(\"slashedValidators     : %v\\n\", slashedValidators)\r\n\t}\r\n}\r\n```\r\n</details>",
  "closed_by": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4884/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4884/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/587126481",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/4884#issuecomment-587126481",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4884",
    "id": 587126481,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzEyNjQ4MQ==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-17T19:15:28Z",
    "updated_at": "2020-02-17T19:15:28Z",
    "author_association": "MEMBER",
    "body": "Hey @guybrush!\r\n\r\nThe issue here is that there are 7 exited validators and you are not excluding their effective balance in your calculation of `totalEffectiveBalance`. https://beaconcha.in/validators#exited\r\n\r\nTo put it more concisely from the Ethereum 2.0 spec. You are using logic from [get_total_balance](https://github.com/ethereum/eth2.0-specs/blob/master/specs/phase0/beacon-chain.md#get_total_balance) when you should be using [get_total_active_balance](https://github.com/ethereum/eth2.0-specs/blob/master/specs/phase0/beacon-chain.md#get_total_active_balance) to calculate the eligible ether.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/587126481/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/587340197",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/4884#issuecomment-587340197",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4884",
    "id": 587340197,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzM0MDE5Nw==",
    "user": {
      "login": "guybrush",
      "id": 306324,
      "node_id": "MDQ6VXNlcjMwNjMyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/306324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guybrush",
      "html_url": "https://github.com/guybrush",
      "followers_url": "https://api.github.com/users/guybrush/followers",
      "following_url": "https://api.github.com/users/guybrush/following{/other_user}",
      "gists_url": "https://api.github.com/users/guybrush/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guybrush/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guybrush/subscriptions",
      "organizations_url": "https://api.github.com/users/guybrush/orgs",
      "repos_url": "https://api.github.com/users/guybrush/repos",
      "events_url": "https://api.github.com/users/guybrush/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guybrush/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-18T08:31:17Z",
    "updated_at": "2020-02-19T07:51:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah sorry I did not make clear what I am trying to check with my program. \r\n\r\n`activeEffectiveBalance` should be the same as `eligibleEther`\r\n\r\n`totalEffectiveBalance` is just for debugging.\r\n\r\nI updated my program and also checked epochs which do not include exited validators:\r\n\r\nOutput:\r\n```\r\nnodeVersion   : Prysm/Git commit: 9b2aa66667398410a33b4b2be1f4839583930b38. Built at: 2020-02-17 05:13:16+00:00\r\nheadEpoch     : 8853\r\nfinalizedEpoch: 8849\r\njustifiedEpoch: 8851\r\n==== checking epoch 8852\r\nglobalParticipation     : 0.8151712\r\nvotedEther              : 105139400000000\r\neligibleEther           : 128978300000000\r\nactiveEffectiveBalance  : 128977500000000 (should be the same as eligibelEther)\r\nslashingEffectiveBalance: 0\r\nexitedEffectiveBalance  : 21700000000\r\ntotalEffectiveBalance   : 128999200000000\r\npendingValidators       : 0\r\nactiveValidators        : 41658\r\nexitingValidators       : 0\r\nslashingValidators      : 0\r\nexitedValidators        : 7\r\nslashedValidators       : 0\r\n==== checking epoch 50\r\nglobalParticipation     : 0.92924917\r\nvotedEther              : 47395800000000\r\neligibleEther           : 51004400000000\r\nactiveEffectiveBalance  : 51022800000000 (should be the same as eligibelEther)\r\nslashingEffectiveBalance: 0\r\nexitedEffectiveBalance  : 0\r\ntotalEffectiveBalance   : 51022800000000\r\npendingValidators       : 0\r\nactiveValidators        : 16459\r\nexitingValidators       : 0\r\nslashingValidators      : 0\r\nexitedValidators        : 0\r\nslashedValidators       : 0\r\n==== checking epoch 51\r\nglobalParticipation     : 0.92872405\r\nvotedEther              : 47380900000000\r\neligibleEther           : 51017200000000\r\nactiveEffectiveBalance  : 51035200000000 (should be the same as eligibelEther)\r\nslashingEffectiveBalance: 0\r\nexitedEffectiveBalance  : 0\r\ntotalEffectiveBalance   : 51035200000000\r\npendingValidators       : 0\r\nactiveValidators        : 16463\r\nexitingValidators       : 0\r\nslashingValidators      : 0\r\nexitedValidators        : 0\r\nslashedValidators       : 0\r\n```\r\n<details><summary>Program</summary>\r\n\r\n```golang\r\npackage main\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"flag\"\r\n\t\"fmt\"\r\n\t\"strconv\"\r\n\t\"strings\"\r\n\r\n\tptypesEmpty \"github.com/golang/protobuf/ptypes/empty\"\r\n\tethpb \"github.com/prysmaticlabs/ethereumapis/eth/v1alpha1\"\r\n\t\"google.golang.org/grpc\"\r\n)\r\n\r\nfunc main() {\r\n\taddrFlag := flag.String(\"addr\", \":4000\", \"address of beacon-node to connect to\")\r\n\tepochsFlag := flag.String(\"epochs\", \"\", \"comma seperated list of epochs to check, eg: \\\"2,3,4\\\" (per default only last to epochs are checked)\")\r\n\r\n\tflag.Parse()\r\n\r\n\tdialOpt := grpc.WithInsecure()\r\n\tconn, err := grpc.Dial(*addrFlag, dialOpt)\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\r\n\tnodeClient := ethpb.NewNodeClient(conn)\r\n\r\n\tversion, err := nodeClient.GetVersion(context.Background(), &ptypesEmpty.Empty{})\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\r\n\tchainClient := ethpb.NewBeaconChainClient(conn)\r\n\r\n\tchainHead, err := chainClient.GetChainHead(context.Background(), &ptypesEmpty.Empty{})\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\r\n\tfmt.Printf(\"nodeVersion   : %v\\n\", version.Version)\r\n\tfmt.Printf(\"headEpoch     : %v\\n\", chainHead.HeadEpoch)\r\n\tfmt.Printf(\"finalizedEpoch: %v\\n\", chainHead.FinalizedEpoch)\r\n\tfmt.Printf(\"justifiedEpoch: %v\\n\", chainHead.JustifiedEpoch)\r\n\r\n\tepochs := []uint64{chainHead.HeadEpoch - 1}\r\n\r\n\tif *epochsFlag != \"\" {\r\n\t\tepochsFlagSplit := strings.Split(*epochsFlag, \",\")\r\n\t\tfor _, e := range epochsFlagSplit {\r\n\t\t\tu, err := strconv.ParseUint(e, 10, 64)\r\n\t\t\tif err != nil {\r\n\t\t\t\tpanic(err)\r\n\t\t\t}\r\n\t\t\tepochs = append(epochs, u)\r\n\t\t}\r\n\t}\r\n\r\nepochLoop:\r\n\tfor _, epoch := range epochs {\r\n\t\tfmt.Printf(\"==== checking epoch %v\\n\", epoch)\r\n\t\tvar totalEffectiveBalance uint64\r\n\t\tvar activeEffectiveBalance uint64\r\n\t\tvar slashingEffectiveBalance uint64\r\n\t\tvar exitedEffectiveBalance uint64\r\n\t\tpendingValidators := 0\r\n\t\tactiveValidators := 0\r\n\t\texitingValidators := 0\r\n\t\tslashingValidators := 0\r\n\t\texitedValidators := 0\r\n\t\tslashedValidators := 0\r\n\t\tvalidatorsResponse := &ethpb.Validators{}\r\n\t\tfor {\r\n\t\t\tvalidatorsResponse, err = chainClient.ListValidators(\r\n\t\t\t\tcontext.Background(),\r\n\t\t\t\t&ethpb.ListValidatorsRequest{\r\n\t\t\t\t\tPageToken:   validatorsResponse.NextPageToken,\r\n\t\t\t\t\tPageSize:    500,\r\n\t\t\t\t\tQueryFilter: &ethpb.ListValidatorsRequest_Epoch{Epoch: epoch},\r\n\t\t\t\t},\r\n\t\t\t)\r\n\t\t\tif err != nil {\r\n\t\t\t\tfmt.Printf(\"error chainClient.ListValidators: %v: %v\\n\", epoch, err)\r\n\t\t\t\tcontinue epochLoop\r\n\t\t\t}\r\n\t\t\tif validatorsResponse.TotalSize == 0 {\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\tfor _, v := range validatorsResponse.ValidatorList {\r\n\t\t\t\tif v.Validator.ActivationEpoch > epoch ||\r\n\t\t\t\t\tv.Validator.ActivationEligibilityEpoch > epoch {\r\n\t\t\t\t\t// pending validators\r\n\t\t\t\t\tpendingValidators++\r\n\t\t\t\t} else if v.Validator.ExitEpoch <= epoch {\r\n\t\t\t\t\t// exited validators\r\n\t\t\t\t\tif v.Validator.Slashed {\r\n\t\t\t\t\t\t// forceful exit (after slashing)\r\n\t\t\t\t\t\tslashedValidators++\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// voluntary exit\r\n\t\t\t\t\t\texitedValidators++\r\n\t\t\t\t\t}\r\n\t\t\t\t\texitedEffectiveBalance += v.Validator.EffectiveBalance\r\n\t\t\t\t} else if v.Validator.Slashed {\r\n\t\t\t\t\t// slasing validators\r\n\t\t\t\t\tslashingEffectiveBalance += v.Validator.EffectiveBalance\r\n\t\t\t\t\tslashingValidators++\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// active validators\r\n\t\t\t\t\tactiveEffectiveBalance += v.Validator.EffectiveBalance\r\n\t\t\t\t\tactiveValidators++\r\n\t\t\t\t}\r\n\t\t\t\ttotalEffectiveBalance += v.Validator.EffectiveBalance\r\n\t\t\t}\r\n\t\t\tif validatorsResponse.NextPageToken == \"\" {\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvalidatorParticipation, err := chainClient.GetValidatorParticipation(\r\n\t\t\tcontext.Background(),\r\n\t\t\t&ethpb.GetValidatorParticipationRequest{\r\n\t\t\t\tQueryFilter: &ethpb.GetValidatorParticipationRequest_Epoch{Epoch: epoch},\r\n\t\t\t},\r\n\t\t)\r\n\t\tif err != nil {\r\n\t\t\tfmt.Printf(\"error chainClient.GetValidatorParticipation: %v: %v\\n\", epoch, err)\r\n\t\t} else {\r\n\t\t\tfmt.Printf(\"globalParticipation     : %v\\n\", validatorParticipation.Participation.GlobalParticipationRate)\r\n\t\t\tfmt.Printf(\"votedEther              : %v\\n\", validatorParticipation.Participation.VotedEther)\r\n\t\t\tfmt.Printf(\"eligibleEther           : %v\\n\", validatorParticipation.Participation.EligibleEther)\r\n\t\t}\r\n\t\tfmt.Printf(\"activeEffectiveBalance  : %v (should be the same as eligibelEther)\\n\", activeEffectiveBalance)\r\n\t\tfmt.Printf(\"slashingEffectiveBalance: %v\\n\", slashingEffectiveBalance)\r\n\t\tfmt.Printf(\"exitedEffectiveBalance  : %v\\n\", exitedEffectiveBalance)\r\n\t\tfmt.Printf(\"totalEffectiveBalance   : %v\\n\", totalEffectiveBalance)\r\n\t\tfmt.Printf(\"pendingValidators       : %v\\n\", pendingValidators)\r\n\t\tfmt.Printf(\"activeValidators        : %v\\n\", activeValidators)\r\n\t\tfmt.Printf(\"exitingValidators       : %v\\n\", exitingValidators)\r\n\t\tfmt.Printf(\"slashingValidators      : %v\\n\", slashingValidators)\r\n\t\tfmt.Printf(\"exitedValidators        : %v\\n\", exitedValidators)\r\n\t\tfmt.Printf(\"slashedValidators       : %v\\n\", slashedValidators)\r\n\t}\r\n}\r\n```\r\n</details>",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/587340197/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/595621594",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/4884#issuecomment-595621594",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4884",
    "id": 595621594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTYyMTU5NA==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-06T06:30:19Z",
    "updated_at": "2020-03-06T06:30:19Z",
    "author_association": "MEMBER",
    "body": "@rauljordan can you take a look at this?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/595621594/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/598447467",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/4884#issuecomment-598447467",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4884",
    "id": 598447467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODQ0NzQ2Nw==",
    "user": {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-12T22:07:43Z",
    "updated_at": "2020-03-12T22:07:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@terencechain looked deeper into this and concerned it's a deeper problem from within the core precompute package. The value mismatches we're seeing above come from there, specifically from the epoch precompute eligible balances results. What do you think?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/598447467/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/598462436",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/4884#issuecomment-598462436",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4884",
    "id": 598462436,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODQ2MjQzNg==",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-12T22:36:17Z",
    "updated_at": "2020-03-12T22:36:17Z",
    "author_association": "MEMBER",
    "body": "Hey @guybrush. The validator participation is one epoch behind. For example in `checking epoch 8852`. The `eligibleEther  128978300000000` gets accounted at the end of `8851` for epoch transitioning `8851` to `8852`.  When we query `activeEffectiveBalance` to compare, we should use epoch `8851` not `8852`\r\n\r\nIn code:\r\n```go\r\n\tparticipation = &ethpb.ValidatorParticipation{\r\n\t\tEligibleEther:           p.PrevEpoch,\r\n\t\tVotedEther:              p.PrevEpochTargetAttesters,\r\n\t\tGlobalParticipationRate: float32(p.PrevEpochTargetAttesters) / float32(p.PrevEpoch),\r\n\t}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/598462436/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/601644757",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/4884#issuecomment-601644757",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4884",
    "id": 601644757,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTY0NDc1Nw==",
    "user": {
      "login": "guybrush",
      "id": 306324,
      "node_id": "MDQ6VXNlcjMwNjMyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/306324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guybrush",
      "html_url": "https://github.com/guybrush",
      "followers_url": "https://api.github.com/users/guybrush/followers",
      "following_url": "https://api.github.com/users/guybrush/following{/other_user}",
      "gists_url": "https://api.github.com/users/guybrush/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guybrush/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guybrush/subscriptions",
      "organizations_url": "https://api.github.com/users/guybrush/orgs",
      "repos_url": "https://api.github.com/users/guybrush/repos",
      "events_url": "https://api.github.com/users/guybrush/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guybrush/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-20T11:07:27Z",
    "updated_at": "2020-03-23T12:58:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "The api from my node says that the sum of effective balances of all active validators stayed the same in these three epochs (8851, 8852, 8853), while the eligible ether changed. Even if the eligble ether returned by the api corresponds to the previous epoch, shouldn't the sum of all effective balances change aswell?\r\n\r\n```\r\nepoch  eligibleEther    activeEffectiveBalanceSum *\r\n-----  ---------------  ---------------------------\r\n8851   128978700000000  128391000000000\r\n8852   128978300000000  128391000000000\r\n8853   128977900000000  128391000000000\r\n\r\n*: activeEffectiveBalanceSum is the sum of the effective balance of all active validators\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/601644757/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/613553044",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/4884#issuecomment-613553044",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4884",
    "id": 613553044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzU1MzA0NA==",
    "user": {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-14T16:44:24Z",
    "updated_at": "2020-04-14T16:44:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@terencechain please take a look, this is related to epoch precomputes you are quite familiar with",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/613553044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/613555510",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/4884#issuecomment-613555510",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4884",
    "id": 613555510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzU1NTUxMA==",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-14T16:49:16Z",
    "updated_at": "2020-04-14T16:49:16Z",
    "author_association": "MEMBER",
    "body": "@guybrush effective balance is always round up to `EFFECTIVE_BALANCE_INCREMENT`",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/613555510/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/613565229",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/4884#issuecomment-613565229",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4884",
    "id": 613565229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzU2NTIyOQ==",
    "user": {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-14T17:07:07Z",
    "updated_at": "2020-04-14T17:07:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "We can close this, this is the intended functionality it seems - let us know if this still does not resolve your problem @guybrush ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/613565229/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
