{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8157",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8157/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8157/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8157/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/8157",
  "id": 770877614,
  "node_id": "MDU6SXNzdWU3NzA4Nzc2MTQ=",
  "number": 8157,
  "title": "SSZ marshalling and unmarshalling codestyle improvement",
  "user": {
    "login": "blazejkrzak",
    "id": 26545969,
    "node_id": "MDQ6VXNlcjI2NTQ1OTY5",
    "avatar_url": "https://avatars.githubusercontent.com/u/26545969?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/blazejkrzak",
    "html_url": "https://github.com/blazejkrzak",
    "followers_url": "https://api.github.com/users/blazejkrzak/followers",
    "following_url": "https://api.github.com/users/blazejkrzak/following{/other_user}",
    "gists_url": "https://api.github.com/users/blazejkrzak/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/blazejkrzak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/blazejkrzak/subscriptions",
    "organizations_url": "https://api.github.com/users/blazejkrzak/orgs",
    "repos_url": "https://api.github.com/users/blazejkrzak/repos",
    "events_url": "https://api.github.com/users/blazejkrzak/events{/privacy}",
    "received_events_url": "https://api.github.com/users/blazejkrzak/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 802129906,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDY=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Enhancement",
      "name": "Enhancement",
      "color": "84b6eb",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 934596141,
      "node_id": "MDU6TGFiZWw5MzQ1OTYxNDE=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Discussion",
      "name": "Discussion",
      "color": "f9d0c4",
      "default": false,
      "description": "Simply a thread for talking about stuff"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2020-12-18T13:14:07Z",
  "updated_at": "2021-01-12T16:14:25Z",
  "closed_at": "2021-01-12T16:14:25Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# ðŸš€ Feature Request\r\n\r\n### Description\r\nCurrently ssz serialization and deserialization is written in very unclear way.\r\nLets assume this code below:\r\n```go\r\nfunc (p *PendingAttestation) UnmarshalSSZ(buf []byte) error {\r\n\t...\r\n\ttail := buf\r\n\tvar o0 uint64\r\n\r\n\t// Offset (0) 'AggregationBits'\r\n\tif o0 = ssz.ReadOffset(buf[0:4]); o0 > size {\r\n\t\treturn ssz.ErrOffset\r\n\t}\r\n\r\n\t// Field (1) 'Data'\r\n\t...\r\n\tif err = p.Data.UnmarshalSSZ(buf[4:132]); err != nil {\r\n\t\treturn err\r\n\t}\r\n       ...\r\n}\r\n```\r\n\r\nRanges of buf bytes `[0:4]` `[4:132]` and so on are hardcoded and points for no clear answer if `[4:132`] or `[4:133]` is a proper one. Even though it is compatible with ssz structure it is nowhere near the go possibility to annotate strutcs.\r\n\r\n\r\n### Describe the solution you'd like\r\nSince the overal design choice is good, we are lacking clear way to annotate structs\r\nLoosely named `ssz-pointer:\"n:m\"` where `0 =< n < m`\r\nPossible code example\r\n```go\r\ntype PendingAttestation struct {\r\n\tAggregationBits      github_com_prysmaticlabs_go_bitfield.Bitlist `protobuf:\"bytes,1,opt,name=aggregation_bits,json=aggregationBits,proto3,casttype=github.com/prysmaticlabs/go-bitfield.Bitlist\" json:\"aggregation_bits,omitempty\" ssz-max:\"2048\" ssz-pointer:\"0:4\"`\r\n\tData                 *v1alpha1.AttestationData                    `protobuf:\"bytes,2,opt,name=data,proto3\" json:\"data,omitempty\" ssz-pointer:\"4:132\"`\r\n\tInclusionDelay       uint64                                       `protobuf:\"varint,3,opt,name=inclusion_delay,json=inclusionDelay,proto3\" json:\"inclusion_delay,omitempty\"`\r\n\tProposerIndex        uint64                                       `protobuf:\"varint,4,opt,name=proposer_index,json=proposerIndex,proto3\" json:\"proposer_index,omitempty\"`\r\n}\r\n```\r\n\r\n### Describe alternatives you've considered\r\n\r\nLeave it as it is, and wait for structure of ssz change, then handle all the mess.\r\n",
  "closed_by": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8157/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8157/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/753811076",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/8157#issuecomment-753811076",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8157",
    "id": 753811076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzgxMTA3Ng==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-04T07:37:22Z",
    "updated_at": "2021-01-04T07:37:22Z",
    "author_association": "MEMBER",
    "body": "Hey @blazejkrzak ,\r\n\r\nIf I am understanding correctly, you desire a way to annotate the portion of a buffer from which the fields serialized data is put in ?\r\nThe size of the buffer for a field is determined by its underlying type. Ex: `uint64` is 8 bytes , if you have a custom annotation, you risk the possibility of the serialized blob being an invalid ssz object.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/753811076/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/753890545",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/8157#issuecomment-753890545",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8157",
    "id": 753890545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1Mzg5MDU0NQ==",
    "user": {
      "login": "blazejkrzak",
      "id": 26545969,
      "node_id": "MDQ6VXNlcjI2NTQ1OTY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/26545969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blazejkrzak",
      "html_url": "https://github.com/blazejkrzak",
      "followers_url": "https://api.github.com/users/blazejkrzak/followers",
      "following_url": "https://api.github.com/users/blazejkrzak/following{/other_user}",
      "gists_url": "https://api.github.com/users/blazejkrzak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blazejkrzak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blazejkrzak/subscriptions",
      "organizations_url": "https://api.github.com/users/blazejkrzak/orgs",
      "repos_url": "https://api.github.com/users/blazejkrzak/repos",
      "events_url": "https://api.github.com/users/blazejkrzak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blazejkrzak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-04T10:22:32Z",
    "updated_at": "2021-01-04T10:22:49Z",
    "author_association": "NONE",
    "body": "If type determines size then annotation could be handled without pointers if we'd agree that order of fields in struct matter.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/753890545/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/753920210",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/8157#issuecomment-753920210",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8157",
    "id": 753920210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzkyMDIxMA==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-04T11:24:43Z",
    "updated_at": "2021-01-04T11:24:43Z",
    "author_association": "MEMBER",
    "body": "Yeap the order does matter here of fields in a struct during serialization.  A schema is required during deserialization so as to appropriately allocate the required bytes for variably sized objects from their offsets.\r\n\r\nFor a better idea you can take a look at the ssz spec:\r\nhttps://github.com/ethereum/eth2.0-specs/blob/dev/ssz/simple-serialize.md#deserialization",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/753920210/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
