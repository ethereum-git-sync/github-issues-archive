{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/164",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/164/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/164/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/164/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/164",
  "id": 330061619,
  "node_id": "MDU6SXNzdWUzMzAwNjE2MTk=",
  "number": 164,
  "title": "Implement ChainReader in Tests",
  "user": {
    "login": "nisdas",
    "id": 33201827,
    "node_id": "MDQ6VXNlcjMzMjAxODI3",
    "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nisdas",
    "html_url": "https://github.com/nisdas",
    "followers_url": "https://api.github.com/users/nisdas/followers",
    "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
    "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
    "organizations_url": "https://api.github.com/users/nisdas/orgs",
    "repos_url": "https://api.github.com/users/nisdas/repos",
    "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nisdas/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 802129906,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDY=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Enhancement",
      "name": "Enhancement",
      "color": "84b6eb",
      "default": false,
      "description": "New feature or request"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/milestones/1",
    "html_url": "https://github.com/prysmaticlabs/prysm/milestone/1",
    "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/milestones/1/labels",
    "id": 3141840,
    "node_id": "MDk6TWlsZXN0b25lMzE0MTg0MA==",
    "number": 1,
    "title": "Ruby - Demo",
    "description": "The Ruby Release: Local Alphanet",
    "creator": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 270,
    "state": "closed",
    "created_at": "2018-02-25T21:22:44Z",
    "updated_at": "2018-10-09T10:37:42Z",
    "due_on": "2018-10-01T07:00:00Z",
    "closed_at": "2018-10-09T10:37:42Z"
  },
  "comments": 6,
  "created_at": "2018-06-06T23:00:00Z",
  "updated_at": "2018-06-17T17:39:44Z",
  "closed_at": "2018-06-17T17:39:44Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Currently in our testing we do not implement the chainreader interface:\r\n```go\r\ntype ChainReader interface {\r\n\tBlockByHash(ctx context.Context, hash common.Hash) (*types.Block, error)\r\n\tBlockByNumber(ctx context.Context, number *big.Int) (*types.Block, error)\r\n\tHeaderByHash(ctx context.Context, hash common.Hash) (*types.Header, error)\r\n\tHeaderByNumber(ctx context.Context, number *big.Int) (*types.Header, error)\r\n\tTransactionCount(ctx context.Context, blockHash common.Hash) (uint, error)\r\n\tTransactionInBlock(ctx context.Context, blockHash common.Hash, index uint) (*types.Transaction, error)\r\n\r\n\t// This method subscribes to notifications about changes of the head block of\r\n\t// the canonical chain.\r\n\tSubscribeNewHead(ctx context.Context, ch chan<- *types.Header) (Subscription, error)\r\n}\r\n```\r\nThis will be needed to write and implement more expressive and complete tests. As we will need to retrieve blocks or headers using either its number or hash, and the current mock `backend` does not provide that ability. \r\n\r\nOne possible solution would be to use the reflect package to use the unexported fields in the mock backend \r\n```go\r\nval := reflect.value(backend)\r\nblkchn := val.FieldByName(\"blockchain\").Elem()\r\n```",
  "closed_by": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/164/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/164/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/395242837",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/164#issuecomment-395242837",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/164",
    "id": 395242837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTI0MjgzNw==",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-06T23:13:17Z",
    "updated_at": "2018-06-06T23:13:17Z",
    "author_association": "MEMBER",
    "body": "@nisdas is this blocking #131 ?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/395242837/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/395244173",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/164#issuecomment-395244173",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/164",
    "id": 395244173,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTI0NDE3Mw==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-06T23:21:08Z",
    "updated_at": "2018-06-06T23:21:08Z",
    "author_association": "MEMBER",
    "body": "Yeah if we want to write tests which will need access to block information, we do need to implement chainreader, or at least the required methods.  We could just stub out the test for now, until chainreader is implemented, then revisit it",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/395244173/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/395267197",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/164#issuecomment-395267197",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/164",
    "id": 395267197,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTI2NzE5Nw==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T01:51:08Z",
    "updated_at": "2018-06-07T01:51:08Z",
    "author_association": "MEMBER",
    "body": "See an example here: https://github.com/ethereum/go-ethereum/blob/90b22773e99244b37f68f3a8401c405254e0af4e/consensus/clique/snapshot_test.go#L74",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/395267197/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/395267642",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/164#issuecomment-395267642",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/164",
    "id": 395267642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTI2NzY0Mg==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T01:53:48Z",
    "updated_at": "2018-06-07T01:53:48Z",
    "author_association": "MEMBER",
    "body": "Can you add information as to why you can't use a real ChainReader with a client connected to a fake backend?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/395267642/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/395268699",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/164#issuecomment-395268699",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/164",
    "id": 395268699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTI2ODY5OQ==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T02:00:31Z",
    "updated_at": "2018-06-07T02:00:31Z",
    "author_association": "MEMBER",
    "body": "core/blockchain.go implements the ChainReader and we can see an example of this used with a fake PoW in test: https://github.com/ethereum/go-ethereum/blob/90b22773e99244b37f68f3a8401c405254e0af4e/core/blockchain_test.go#L41",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/395268699/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/395294579",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/164#issuecomment-395294579",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/164",
    "id": 395294579,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTI5NDU3OQ==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T05:08:21Z",
    "updated_at": "2018-06-07T05:08:21Z",
    "author_association": "MEMBER",
    "body": "The problem is that information `simulatedBackend` does not give access to its blockchain. \r\n```go\r\ntype SimulatedBackend struct {\r\n\tdatabase   ethdb.Database   // In memory database to store our testing data\r\n\tblockchain *core.BlockChain // Ethereum blockchain to handle the consensus\r\n\r\n\tmu           sync.Mutex\r\n\tpendingBlock *types.Block   // Currently pending block that will be imported on request\r\n\tpendingState *state.StateDB // Currently pending state that will be the active on on request\r\n\r\n\tevents *filters.EventSystem // Event system for filtering log events live\r\n\r\n\tconfig *params.ChainConfig\r\n}\r\n```\r\nIts blockchain field is unexported so we do not have any access to it. Also its methods do not give any access:\r\n```go\r\nfunc (b *SimulatedBackend) Commit() {}\r\nfunc (b *SimulatedBackend) Rollback() {} \r\nfunc (b *SimulatedBackend) rollback() {}\r\nfunc (b *SimulatedBackend) CodeAt(ctx context.Context, contract common.Address, blockNumber *big.Int) ([]byte, error) {}\r\nfunc (b *SimulatedBackend) BalanceAt(ctx context.Context, contract common.Address, blockNumber *big.Int) (*big.Int, error) {} \r\nfunc (b *SimulatedBackend) NonceAt(ctx context.Context, contract common.Address, blockNumber *big.Int) (uint64, error) {}\r\nfunc (b *SimulatedBackend) StorageAt(ctx context.Context, contract common.Address, key common.Hash, blockNumber *big.Int) ([]byte, error) {}\r\nfunc (b *SimulatedBackend) TransactionReceipt(ctx context.Context, txHash common.Hash) (*types.Receipt, error) {}\r\nfunc (b *SimulatedBackend) PendingCodeAt(ctx context.Context, contract common.Address) ([]byte, error) {}\r\nfunc (b *SimulatedBackend) CallContract(ctx context.Context, call ethereum.CallMsg, blockNumber *big.Int) ([]byte, error) {}\r\nfunc (b *SimulatedBackend) PendingCallContract(ctx context.Context, call ethereum.CallMsg) ([]byte, error) {}\r\nfunc (b *SimulatedBackend) EstimateGas(ctx context.Context, call ethereum.CallMsg) (uint64, error) {}\r\nfunc (b *SimulatedBackend) callContract(ctx context.Context, call ethereum.CallMsg, block *types.Block, statedb *state.StateDB) ([]byte, uint64, bool, error) {}\r\nfunc (b *SimulatedBackend) SendTransaction(ctx context.Context, tx *types.Transaction) error {}\r\nfunc (b *SimulatedBackend) FilterLogs(ctx context.Context, query ethereum.FilterQuery) ([]types.Log, error) {}\r\nfunc (b *SimulatedBackend) SubscribeFilterLogs(ctx context.Context, query ethereum.FilterQuery, ch chan<- types.Log) (ethereum.Subscription, error) {} \r\nfunc (b *SimulatedBackend) AdjustTime(adjustment time.Duration) error {}\r\n```\r\nI am not sure how to proceed with this, beacuse to implement chainreader we will need access to `simulatedBackend` 's blockchain",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/395294579/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
