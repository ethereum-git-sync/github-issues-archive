{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/7464",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/7464/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/7464/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/7464/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/7464",
  "id": 717181245,
  "node_id": "MDU6SXNzdWU3MTcxODEyNDU=",
  "number": 7464,
  "title": "Beacon Node Still Returns Out of Order Blocks From Range Requests",
  "user": {
    "login": "nisdas",
    "id": 33201827,
    "node_id": "MDQ6VXNlcjMzMjAxODI3",
    "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nisdas",
    "html_url": "https://github.com/nisdas",
    "followers_url": "https://api.github.com/users/nisdas/followers",
    "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
    "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
    "organizations_url": "https://api.github.com/users/nisdas/orgs",
    "repos_url": "https://api.github.com/users/nisdas/repos",
    "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nisdas/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 802129904,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDQ=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Bug",
      "name": "Bug",
      "color": "ee0701",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1085357069,
      "node_id": "MDU6TGFiZWwxMDg1MzU3MDY5",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Priority:%20High",
      "name": "Priority: High",
      "color": "f7ea26",
      "default": false,
      "description": "High priority item"
    },
    {
      "id": 2061040048,
      "node_id": "MDU6TGFiZWwyMDYxMDQwMDQ4",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Sync",
      "name": "Sync",
      "color": "5967ba",
      "default": false,
      "description": "Sync (regular, initial, checkpoint) related issues"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2020-10-08T09:33:43Z",
  "updated_at": "2020-10-22T14:33:02Z",
  "closed_at": "2020-10-22T14:33:02Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "# üêû Bug Report\r\n\r\n### Description\r\n\r\nCurrently Lighthouse Peers score Prysm Nodes down due to the fact that prysm nodes occasionally \r\nsend back out of order blocks. \r\n\r\n### Has this worked before in a previous version?\r\n\r\nSupposed to. \r\n\r\n## üî¨ Minimal Reproduction\r\n\r\nRun a Prysm Node in medalla, and after a while lighthouse nodes start banning them.\r\n\r\n## üî• Error\r\n\r\n```\r\nDEBUG sync: Peer has sent a goodbye message Reason=unknown goodbye value of 251 Received \r\n```\r\nConsistent goodbyes received from lighthouse nodes.\r\n\r\n## üåç  Your Environment\r\n\r\n**Operating System:**\r\n\r\nUbuntu\r\n\r\n**What version of Prysm are you running? (Which release)**\r\n\r\nhttps://github.com/prysmaticlabs/prysm/commit/390a589afb6a38925b2d6da25a3df3d4f84a9bf7\r\n\r\n**Anything else relevant (validator index / public key)?**\r\n\r\n",
  "closed_by": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/7464/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/7464/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/705600518",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/7464#issuecomment-705600518",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/7464",
    "id": 705600518,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTYwMDUxOA==",
    "user": {
      "login": "farazdagi",
      "id": 188194,
      "node_id": "MDQ6VXNlcjE4ODE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/188194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/farazdagi",
      "html_url": "https://github.com/farazdagi",
      "followers_url": "https://api.github.com/users/farazdagi/followers",
      "following_url": "https://api.github.com/users/farazdagi/following{/other_user}",
      "gists_url": "https://api.github.com/users/farazdagi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/farazdagi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/farazdagi/subscriptions",
      "organizations_url": "https://api.github.com/users/farazdagi/orgs",
      "repos_url": "https://api.github.com/users/farazdagi/repos",
      "events_url": "https://api.github.com/users/farazdagi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/farazdagi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-08T14:15:47Z",
    "updated_at": "2020-10-08T14:15:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nishant, are you absolutely sure that disconnects are due to out of order blocks? It seems we already deduplicate and sort the list of returned blocks:\r\nhttps://github.com/prysmaticlabs/prysm/blob/48fcb08ebc2bb0ae4686618f94b5bd5178c96477/beacon-chain/sync/rpc_beacon_blocks_by_range.go#L147-L156\r\n\r\nI've checked the implementation -- everything seems to be intact. So, I wonder whether there might be sth else resulting in descoring/banning?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/705600518/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/705879287",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/7464#issuecomment-705879287",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/7464",
    "id": 705879287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTg3OTI4Nw==",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-08T23:33:29Z",
    "updated_at": "2020-10-08T23:33:29Z",
    "author_association": "NONE",
    "body": "The responses that are sent are definitely one of the major sources that is causing issues between Lighthouse and Prysm. \r\n\r\nThe specific error we are seeing is that at least one block in the chain segment returned did not have its parent root set to the root of the prior block sent.\r\n\r\nIt may be the case the blocks are ordered and de-duplicated. After a quick skim of this code, perhaps its the case that some blocks are filtered for not being canonical. In which case you may send us a series of blocks that do not form a chain?\r\n\r\nWe are expecting a response from a blocks by range response to be a series of blocks linked together via their parent root hash in order. I think perhaps the hash linking in some cases could be broken here?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/705879287/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/705976613",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/7464#issuecomment-705976613",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/7464",
    "id": 705976613,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTk3NjYxMw==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-09T05:30:31Z",
    "updated_at": "2020-10-09T05:30:31Z",
    "author_association": "MEMBER",
    "body": "@AgeManning You are right in that is most likely the cause. @farazdagi and I discussed this offline and came to the same conclusion, the remaining issue we would probably have to figure out is why we do receive non canonical blocks from our database. In our interop efforts to debug this, the epochs requested were already finalized so technically all blocks returned should be canonical. Something we will have to continue digging at.  ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/705976613/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/705997967",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/7464#issuecomment-705997967",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/7464",
    "id": 705997967,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTk5Nzk2Nw==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-09T06:32:42Z",
    "updated_at": "2020-10-09T06:32:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Tangentially related, but regarding 'non-canonical' blocks: it would be useful if nodes kept around orphaned blocks, for data analysis purposes.  Unsure if you consider a block that was generated by the correct proposer but not part of the chain non-canonical, but if you do please either don't discard it during pruning, or have an option for same.\r\n\r\n(Unless the issue is that _receiving_ non-canonical blocks is causing problems, but I would suggest that is an issue with the receiver.)",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/705997967/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
