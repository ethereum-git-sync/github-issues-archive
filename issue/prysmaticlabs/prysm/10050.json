{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/10050",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/10050/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/10050/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/10050/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/10050",
  "id": 1093084819,
  "node_id": "I_kwDOBvuov85BJyaT",
  "number": 10050,
  "title": "Accessing the gRPC (REST) API with multiple threads breaks serialization",
  "user": {
    "login": "jclapis",
    "id": 627896,
    "node_id": "MDQ6VXNlcjYyNzg5Ng==",
    "avatar_url": "https://avatars.githubusercontent.com/u/627896?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jclapis",
    "html_url": "https://github.com/jclapis",
    "followers_url": "https://api.github.com/users/jclapis/followers",
    "following_url": "https://api.github.com/users/jclapis/following{/other_user}",
    "gists_url": "https://api.github.com/users/jclapis/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jclapis/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jclapis/subscriptions",
    "organizations_url": "https://api.github.com/users/jclapis/orgs",
    "repos_url": "https://api.github.com/users/jclapis/repos",
    "events_url": "https://api.github.com/users/jclapis/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jclapis/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 802129904,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDQ=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Bug",
      "name": "Bug",
      "color": "ee0701",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1701740543,
      "node_id": "MDU6TGFiZWwxNzAxNzQwNTQz",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/API",
      "name": "API",
      "color": "30ef13",
      "default": false,
      "description": "Api related tasks"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "rkapka",
    "id": 28876818,
    "node_id": "MDQ6VXNlcjI4ODc2ODE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/28876818?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rkapka",
    "html_url": "https://github.com/rkapka",
    "followers_url": "https://api.github.com/users/rkapka/followers",
    "following_url": "https://api.github.com/users/rkapka/following{/other_user}",
    "gists_url": "https://api.github.com/users/rkapka/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rkapka/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rkapka/subscriptions",
    "organizations_url": "https://api.github.com/users/rkapka/orgs",
    "repos_url": "https://api.github.com/users/rkapka/repos",
    "events_url": "https://api.github.com/users/rkapka/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rkapka/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "rkapka",
      "id": 28876818,
      "node_id": "MDQ6VXNlcjI4ODc2ODE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/28876818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkapka",
      "html_url": "https://github.com/rkapka",
      "followers_url": "https://api.github.com/users/rkapka/followers",
      "following_url": "https://api.github.com/users/rkapka/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkapka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkapka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkapka/subscriptions",
      "organizations_url": "https://api.github.com/users/rkapka/orgs",
      "repos_url": "https://api.github.com/users/rkapka/repos",
      "events_url": "https://api.github.com/users/rkapka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkapka/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-01-04T07:31:55Z",
  "updated_at": "2022-01-12T18:58:32Z",
  "closed_at": "2022-01-12T18:58:32Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# üêû Bug Report\r\n\r\n### Description\r\n\r\n*This is using Prysm v2.0.5. I haven't tested other versions.*\r\n\r\nWhen querying the gRPC gateway (the Beacon REST API) over HTTP, Prysm's serialization will occasionally fail if you hit multiple endpoints simultaneously in a multithreaded application.\r\n\r\nFor example, instead of returning the correct data, it will return a 500 with error messages such as the following:\r\n\r\n#### /eth/v1/beacon/states/head/finality_checkpoints:\r\n```\r\n{\"message\":\"could not process response data: could not process field 'Data': could not process field 'PreviousJustified': could not process field 'Root': illegal base64 data at input byte 64\",\"code\":500}\r\n\r\n{\"message\":\"could not process response data: could not process field 'Data': could not process field 'Finalized': could not process field 'Root': illegal base64 data at input byte 64\",\"code\":500}\r\n```\r\n\r\n#### /eth/v1/beacon/genesis:\r\n```\r\n{\"message\":\"could not process response data: could not process field 'Data': could not process field 'GenesisValidatorsRoot': illegal base64 data at input byte 64\",\"code\":500}\r\n\r\n{\"message\":\"could not process response data: could not process field 'Data': could not process field 'GenesisTime': parsing time \\\"2021-03-23\\\" as \\\"2006-01-02T15:04:05Z07:00\\\": cannot parse \\\"\\\" as \\\"T\\\"\",\"code\":500}\r\n\r\n{\"message\":\"could not process response data: could not process field 'Data': could not process field 'GenesisTime': parsing time \\\"1616508000\\\" as \\\"2006-01-02T15:04:05Z07:00\\\": cannot parse \\\"508000\\\" as \\\"-\\\"\",\"code\":500}\r\n```\r\n\r\nOccasionally, this route returns the following: `{\"data\":{\"genesis_time\":\"2021-03-23T14:00:00Z\",\"genesis_validators_root\":\"BD2w2ag4E1Ue4vM0UNI3l3V9QwkRqTIFMK2KDqvEPvs=\",\"genesis_fork_version\":\"AAAQIA==\"}}`\r\n\r\nThis is in contrast to the expected form, which is returned most of the time:\r\n\r\n`{\"data\":{\"genesis_time\":\"1616508000\",\"genesis_validators_root\":\"0x043db0d9a83813551ee2f33450d23797757d430911a9320530ad8a0eabc43efb\",\"genesis_fork_version\":\"0x00001020\"}}`\r\n\r\nVery strange. The problem certainly relates to the fact that sometimes the fields are sent as either base64 or hex numbers, and Unix time vs. RFC3339. I'm not sure why it alternates between them.\r\n\r\n\r\n## üî¨ Minimal Reproduction\r\n\r\nThis is the smallest repro I could reasonably produce that reliably causes the problem. It's basically cut and pasted from the Rocket Pool Smartnode codebase into a single file.\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"encoding/hex\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"io/ioutil\"\r\n\t\"net/http\"\r\n\t\"os\"\r\n\t\"strconv\"\r\n\r\n\t\"golang.org/x/sync/errgroup\"\r\n)\r\n\r\n// Config\r\nconst (\r\n    RequestUrlFormat = \"%s%s\"\r\n    RequestContentType = \"application/json\"\r\n    RequestGenesisPath               = \"/eth/v1/beacon/genesis\"\r\n)\r\n\r\n// Response types\r\ntype GenesisResponse struct {\r\n    Data struct {\r\n        GenesisTime uinteger                `json:\"genesis_time\"`\r\n        GenesisForkVersion byteArray        `json:\"genesis_fork_version\"`\r\n        GenesisValidatorsRoot byteArray     `json:\"genesis_validators_root\"`\r\n    }                                   `json:\"data\"`\r\n}\r\n\r\n// Add a prefix to a hex string if not present\r\nfunc AddPrefix(value string) string {\r\n    if len(value) < 2 || value[0:2] != \"0x\" {\r\n        return \"0x\" + value\r\n    }\r\n    return value\r\n}\r\n\r\n// Remove a prefix from a hex string if present\r\nfunc RemovePrefix(value string) string {\r\n    if len(value) >= 2 && value[0:2] == \"0x\" {\r\n        return value[2:]\r\n    }\r\n    return value\r\n}\r\n\r\n// Unsigned integer type\r\ntype uinteger uint64\r\nfunc (i uinteger) MarshalJSON() ([]byte, error) {\r\n    return json.Marshal(strconv.Itoa(int(i)))\r\n}\r\nfunc (i *uinteger) UnmarshalJSON(data []byte) error {\r\n\r\n    // Unmarshal string\r\n    var dataStr string\r\n    if err := json.Unmarshal(data, &dataStr); err != nil {\r\n        return err\r\n    }\r\n\r\n    // Parse integer value\r\n    value, err := strconv.ParseUint(dataStr, 10, 64)\r\n    if err != nil {\r\n        return err\r\n    }\r\n\r\n    // Set value and return\r\n    *i = uinteger(value)\r\n    return nil\r\n\r\n}\r\n\r\n// Byte array type\r\ntype byteArray []byte\r\nfunc (b byteArray) MarshalJSON() ([]byte, error) {\r\n    return json.Marshal(AddPrefix(hex.EncodeToString(b)))\r\n}\r\nfunc (b *byteArray) UnmarshalJSON(data []byte) error {\r\n\r\n    // Unmarshal string\r\n    var dataStr string\r\n    if err := json.Unmarshal(data, &dataStr); err != nil {\r\n        return err\r\n    }\r\n\r\n    // Decode hex\r\n    value, err := hex.DecodeString(RemovePrefix(dataStr))\r\n    if err != nil {\r\n        return err\r\n    }\r\n\r\n    // Set value and return\r\n    *b = value\r\n    return nil\r\n\r\n}\r\n\r\n// Prysm client\r\ntype Client struct {\r\n    providerAddress string\r\n}\r\n\r\n// Create new prysm client\r\nfunc NewClient(providerAddress string) (*Client) {\r\n    return &Client{\r\n        providerAddress: providerAddress,\r\n    }\r\n}\r\n\r\n// Get genesis information\r\nfunc (c *Client) getGenesis() (GenesisResponse, error) {\r\n    responseBody, status, err := c.getRequest(RequestGenesisPath)\r\n    if err != nil {\r\n        return GenesisResponse{}, fmt.Errorf(\"Could not get genesis data: %w\", err)\r\n    } else if status != http.StatusOK {\r\n        return GenesisResponse{}, fmt.Errorf(\"Could not get genesis data: HTTP status %d; response body: '%s'\", status, string(responseBody))\r\n    }\r\n    var genesis GenesisResponse\r\n    if err := json.Unmarshal(responseBody, &genesis); err != nil {\r\n        return GenesisResponse{}, fmt.Errorf(\"Could not decode genesis: %w; body: %s\", err, string(responseBody))\r\n    }\r\n    return genesis, nil\r\n}\r\n\r\n// Make a GET request to the beacon node\r\nfunc (c *Client) getRequest(requestPath string) ([]byte, int, error) {\r\n\r\n    // Send request\r\n    response, err := http.Get(fmt.Sprintf(RequestUrlFormat, c.providerAddress, requestPath))\r\n    if err != nil {\r\n        return []byte{}, 0, err\r\n    }\r\n    defer func() {\r\n        _ = response.Body.Close()\r\n    }()\r\n\r\n    // Get response\r\n    body, err := ioutil.ReadAll(response.Body)\r\n    if err != nil {\r\n        return []byte{}, 0, err\r\n    }\r\n\r\n    // Return\r\n    return body, response.StatusCode, nil\r\n\r\n}\r\n\r\n// Main body\r\nfunc main() {\r\n\r\n    beacon := NewClient(\"http://localhost:5052\")\r\n    var wg errgroup.Group\r\n\r\n    // Run the getter multiple times; 40 seems to pretty consistently cause the error for me\r\n    numWorkers := 40\r\n    for i := 0; i < numWorkers; i++ {\r\n        wg.Go(func() error {\r\n            _, err := beacon.getGenesis()\r\n            return err\r\n        })\r\n    }\r\n\r\n    // Wait for them all to complete and print any errors\r\n    if err := wg.Wait(); err != nil {\r\n        fmt.Printf(\"Error getting beacon head: %s\\n\", err.Error())\r\n        os.Exit(1)\r\n    }\r\n\r\n}\r\n```\r\n\r\n## üåç  Your Environment\r\n\r\n**Operating System:**\r\n\r\n<pre>\r\n  <code>\r\nUbuntu 20.04, 21.04, 21.10 x64\r\n  </code>\r\n</pre>\r\n\r\n**What version of Prysm are you running? (Which release)**\r\n\r\n<pre>\r\n  <code>\r\nv2.0.5 (specifically the Docker image prysmaticlabs/prysm-beacon-chain:HEAD-d6338f-debug)\r\n  </code>\r\n</pre>\r\n\r\n",
  "closed_by": {
    "login": "prylabs-bulldozer[bot]",
    "id": 58059840,
    "node_id": "MDM6Qm90NTgwNTk4NDA=",
    "avatar_url": "https://avatars.githubusercontent.com/in/47372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D",
    "html_url": "https://github.com/apps/prylabs-bulldozer",
    "followers_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/10050/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/10050/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1005702814",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/10050#issuecomment-1005702814",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/10050",
    "id": 1005702814,
    "node_id": "IC_kwDOBvuov8478c6e",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-05T13:51:33Z",
    "updated_at": "2022-01-05T13:51:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 on this, seeing many errors with prysm 2.0.5 in our environment using the standard REST API.  Some samples:\r\n\r\n```\r\n{\"error\":\"bitlists are different lengths\",\"level\":\"error\",\"msg\":\"Could not prepare attestations for fork choice\",\"prefix\":\"pool/attestations\",\"time\":\"2022-01-05T13:50:29Z\"}\r\n{\"error\":\"bitlists are different lengths\",\"level\":\"error\",\"msg\":\"Could not prepare attestations for fork choice\",\"prefix\":\"pool/attestations\",\"time\":\"2022-01-05T13:50:33Z\"}\r\n{\"error\":\"bitlists are different lengths\",\"level\":\"error\",\"msg\":\"Could not get unaggregated attestations\",\"prefix\":\"pool/attestations\",\"time\":\"2022-01-05T13:50:33Z\"}\r\n{\"error\":\"bitlists are different lengths\",\"level\":\"error\",\"msg\":\"Could not prepare attestations for fork choice\",\"prefix\":\"pool/attestations\",\"time\":\"2022-01-05T13:50:37Z\"}\r\n{\"error\":\"attestation is aggregated\",\"level\":\"error\",\"msg\":\"Could not handle attestation in operations service\",\"prefix\":\"rpc/beaconv1\",\"time\":\"2022-01-05T13:50:41Z\"}\r\n{\"error\":\"attestation is aggregated\",\"level\":\"error\",\"msg\":\"Could not handle attestation in operations service\",\"prefix\":\"rpc/beaconv1\",\"time\":\"2022-01-05T13:50:41Z\"}\r\n{\"error\":\"attestation is aggregated\",\"level\":\"error\",\"msg\":\"Could not handle attestation in operations service\",\"prefix\":\"rpc/beaconv1\",\"time\":\"2022-01-05T13:50:41Z\"}\r\n{\"error\":\"could not encode message: bytes array does not have the correct length\",\"level\":\"error\",\"msg\":\"Failed to broadcast attestation\",\"prefix\":\"p2p\",\"time\":\"2022-01-05T13:50:41Z\"}\r\n{\"error\":\"could not encode message: bytes array does not have the correct length\",\"level\":\"error\",\"msg\":\"Failed to broadcast attestation\",\"prefix\":\"p2p\",\"time\":\"2022-01-05T13:50:41Z\"}\r\n{\"error\":\"bitlists are different lengths\",\"level\":\"error\",\"msg\":\"Could not prepare attestations for fork choice\",\"prefix\":\"pool/attestations\",\"time\":\"2022-01-05T13:50:41Z\"}\r\n{\"error\":\"bitlists are different lengths\",\"level\":\"error\",\"msg\":\"Could not prepare attestations for fork choice\",\"prefix\":\"pool/attestations\",\"time\":\"2022-01-05T13:50:45Z\"}\r\n{\"error\":\"bitlists are different lengths\",\"level\":\"error\",\"msg\":\"Could not get unaggregated attestations\",\"prefix\":\"pool/attestations\",\"time\":\"2022-01-05T13:50:45Z\"}\r\n{\"error\":\"attestation is aggregated\",\"level\":\"error\",\"msg\":\"Could not handle attestation in operations service\",\"prefix\":\"rpc/beaconv1\",\"time\":\"2022-01-05T13:50:49Z\"}\r\n{\"error\":\"attestation is aggregated\",\"level\":\"error\",\"msg\":\"Could not handle attestation in operations service\",\"prefix\":\"rpc/beaconv1\",\"time\":\"2022-01-05T13:50:49Z\"}\r\n{\"error\":\"could not encode message: bytes array does not have the correct length\",\"level\":\"error\",\"msg\":\"Failed to broadcast attestation\",\"prefix\":\"p2p\",\"time\":\"2022-01-05T13:50:49Z\"}\r\n{\"error\":\"could not encode message: bytes array does not have the correct length\",\"level\":\"error\",\"msg\":\"Failed to broadcast attestation\",\"prefix\":\"p2p\",\"time\":\"2022-01-05T13:50:49Z\"}\r\n{\"error\":\"bitlists are different lengths\",\"level\":\"error\",\"msg\":\"Could not prepare attestations for fork choice\",\"prefix\":\"pool/attestations\",\"time\":\"2022-01-05T13:50:49Z\"}\r\n{\"error\":\"bitlists are different lengths\",\"level\":\"error\",\"msg\":\"Could not prepare attestations for fork choice\",\"prefix\":\"pool/attestations\",\"time\":\"2022-01-05T13:50:53Z\"}\r\n{\"error\":\"bitlists are different lengths\",\"level\":\"error\",\"msg\":\"Could not prepare attestations for fork choice\",\"prefix\":\"pool/attestations\",\"time\":\"2022-01-05T13:50:57Z\"}\r\n{\"error\":\"bitlists are different lengths\",\"level\":\"error\",\"msg\":\"Could not get unaggregated attestations\",\"prefix\":\"pool/attestations\",\"time\":\"2022-01-05T13:50:57Z\"}\r\n{\"error\":\"bitlists are different lengths\",\"level\":\"error\",\"msg\":\"Could not prepare attestations for fork choice\",\"prefix\":\"pool/attestations\",\"time\":\"2022-01-05T13:51:01Z\"}\r\n{\"error\":\"attestation is aggregated\",\"level\":\"error\",\"msg\":\"Could not handle attestation in operations service\",\"prefix\":\"rpc/beaconv1\",\"time\":\"2022-01-05T13:51:02Z\"}\r\n{\"error\":\"could not encode message: bytes array does not have the correct length\",\"level\":\"error\",\"msg\":\"Failed to broadcast attestation\",\"prefix\":\"p2p\",\"time\":\"2022-01-05T13:51:02Z\"}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1005702814/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1010035237",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/10050#issuecomment-1010035237",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/10050",
    "id": 1010035237,
    "node_id": "IC_kwDOBvuov848M-ol",
    "user": {
      "login": "rkapka",
      "id": 28876818,
      "node_id": "MDQ6VXNlcjI4ODc2ODE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/28876818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkapka",
      "html_url": "https://github.com/rkapka",
      "followers_url": "https://api.github.com/users/rkapka/followers",
      "following_url": "https://api.github.com/users/rkapka/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkapka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkapka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkapka/subscriptions",
      "organizations_url": "https://api.github.com/users/rkapka/orgs",
      "repos_url": "https://api.github.com/users/rkapka/repos",
      "events_url": "https://api.github.com/users/rkapka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkapka/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-11T14:47:23Z",
    "updated_at": "2022-01-11T14:47:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @mcdee , are your issues related specifically to multithreading? If no, can you please open a separate issue?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1010035237/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1010039863",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/10050#issuecomment-1010039863",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/10050",
    "id": 1010039863,
    "node_id": "IC_kwDOBvuov848M_w3",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-11T14:52:11Z",
    "updated_at": "2022-01-11T14:52:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can't guarantee it, but Vouch is multithreaded in terms of its interactions with the beacon node and I was seeing similar errors to those reported by the OP so I would suspect it has the same underlying cause.  If the fix for this issue does not address my issue I'll raise a separate issue at that point.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1010039863/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1010040259",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/10050#issuecomment-1010040259",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/10050",
    "id": 1010040259,
    "node_id": "IC_kwDOBvuov848M_3D",
    "user": {
      "login": "rkapka",
      "id": 28876818,
      "node_id": "MDQ6VXNlcjI4ODc2ODE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/28876818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkapka",
      "html_url": "https://github.com/rkapka",
      "followers_url": "https://api.github.com/users/rkapka/followers",
      "following_url": "https://api.github.com/users/rkapka/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkapka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkapka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkapka/subscriptions",
      "organizations_url": "https://api.github.com/users/rkapka/orgs",
      "repos_url": "https://api.github.com/users/rkapka/repos",
      "events_url": "https://api.github.com/users/rkapka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkapka/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-11T14:52:35Z",
    "updated_at": "2022-01-11T14:52:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sounds good, thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1010040259/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
