{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6335",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6335/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6335/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6335/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/6335",
  "id": 642742855,
  "node_id": "MDU6SXNzdWU2NDI3NDI4NTU=",
  "number": 6335,
  "title": "Audit adherence to spec feedbacks",
  "user": {
    "login": "terencechain",
    "id": 21316537,
    "node_id": "MDQ6VXNlcjIxMzE2NTM3",
    "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/terencechain",
    "html_url": "https://github.com/terencechain",
    "followers_url": "https://api.github.com/users/terencechain/followers",
    "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
    "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
    "organizations_url": "https://api.github.com/users/terencechain/orgs",
    "repos_url": "https://api.github.com/users/terencechain/repos",
    "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
    "received_events_url": "https://api.github.com/users/terencechain/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1241586918,
      "node_id": "MDU6TGFiZWwxMjQxNTg2OTE4",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Tracking",
      "name": "Tracking",
      "color": "d0ff7f",
      "default": false,
      "description": "Gotta Catch 'Em All"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "terencechain",
    "id": 21316537,
    "node_id": "MDQ6VXNlcjIxMzE2NTM3",
    "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/terencechain",
    "html_url": "https://github.com/terencechain",
    "followers_url": "https://api.github.com/users/terencechain/followers",
    "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
    "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
    "organizations_url": "https://api.github.com/users/terencechain/orgs",
    "repos_url": "https://api.github.com/users/terencechain/repos",
    "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
    "received_events_url": "https://api.github.com/users/terencechain/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2020-06-22T04:32:04Z",
  "updated_at": "2020-06-24T03:14:44Z",
  "closed_at": "2020-06-24T03:14:44Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Opening this issue to track the adherence to spec feedbacks from the Quantstamp audit\r\n\r\n- [x] 1. In beacon-chain/blockchain/process_attestation.go, the function onAttestation(), many parts of the specification for on_attestatation() delay consideration, rather than avoiding consideration. However, the function onAttestation() does not seem to ever delay - only returns (possibly with errors). Ensure that the intent of the specification is preserved.\r\n- [x] 2. In beacon-chain/blockchain/process_attestation_helpers.go#157, it may not be entirely clear why the seed impact on attestation verification is omitted from the specification.\r\n- [x] 3. Typo in beacon-chain/blockchain/process_block_helpers.go#45, “feature” -> “future”.\r\n- [x] 4. Typo in beacon-chain/blockchain/process_block_helpers.go#444, “couldn’t received” -> “couldn’t be received”.\r\n- [x] 5. In beacon-chain/blockchain/process_block_helpers.go#225, based on the definition of params.BeaconConfig().SafeSlotsToUpdateJustified, should return a false here instead of a true. We recommend clarifying the definition and/or this specific case.\r\n- [x] 6. In beacon-chain/core/validators/validator.go, although the implementation of SlashValidator() conforms to the specification, it is unclear whether BeaconState.slashings should represent per-epoch sums of slashed effective balances (i.e., balances before slashing) or only deltas (i.e., the actual slashed balances).\r\n- [x] 7. In beacon-chain/core/helpers/rewards_penalties.go#30, we check if total == 0, which relates to the max() function in the spec pseudocode. Although it should be semantically equivalent in practice, it may be best to strictly match the spec by changing the line to total < params.BeaconConfig().EffectiveBalanceIncrement.\r\n- [x] 8. In beacon-chain/core/helpers/committee.go, it is unclear how the domain of certain calls to Seed() are determined. For example, in UpdateProposerIndicesInCache() on L344 DomainBeaconAttester is used, whereas in precomputeProposerIndices() on L371 DomainBeaconProposer is used.\r\n- [x] 9. In beacon-chain/p2p/encoder/ssz.go, according to specification Encoding-dependent header: Req/Resp protocols using the ssz or ssz_snappy encoding strategies MUST encode the length of the raw SSZ bytes, encoded as an unsigned protobuf varint. On L34, the encoder contains a function Encode() that can violate the spec (as opposed to EncodeWithLength()). The function seems to be used in tests only. We suggest moving it to testing scope only and removing it from the encoder.\r\n- [x] 10. Specification pseudocode does not always exactly match the ETH2 specification, including, but not limited to the following examples:\r\n 1. In beacon-chain/core/helpers/validators.go in the pseudocode on L116, MIN_SEED_LOOKAHEAD is used instead of MAX_SEED_LOOKAHEAD.\r\n 2. In beacon-chain/core/blocks/block_operations.go in the pseudocode for process_block_header, the function call signing_root(state.latest_block_header) is used instead of hash_tree_root(state.latest_block_header).\r\n 3. In beacon-chain/core/helpers/committee.go, in the pseudocode for get_beacon_committee, we have index=epoch_offset, instead of index=(slot % SLOTS_PER_EPOCH) * committees_per_slot + index.\r\n 4. In beacon-chain/core/state/transition.go in the pseudocode for state_transition, there are several missing snippets such as if validate_result: assert verify_block_signature(state, signed_block).\r\n 5. In beacon-chain/core/validators/validator.go, after L113, the if-block is missing. There should be a line for whistleblower_index = proposer_index.\r\n 6. The type Hash is often used instead of Bytes32.\r\n 7. In beacon-chain/core/block_operations.go#626, it is unclear where the assertion assert data.index < get_committee_count_at_slot(state, data.slot) is enforced.\r\n- [x] 11. In beacon-chain/core/block_operations.go#1038, it seems the depth parameter noted in the spec pseudocode is not used. On the other hand, the depth variable is write-only in the specification. We recommend aligning the specification and code with each other, perhaps, mixing in depth into the root. beacon chain/core/blocks/block_operations.go, the comments before ProcessRandao(), VerifyIndexedAttestation(),\r\n- [x] 12. In beacon-chain/core/helpers/attestation.go, the comment before SlotSignature() does not match the specification for get_slot_signature().\r\n- [x] 13. In beacon-chain/core/helpers/committee.go, the comment before BeaconCommitteeFromState() does not match the specification.\r\n- [x] 14. In beacon-chain/core/helpers/rewards_penalties.go, the specification for get_total_balances() has a max() statement which does not appear to be faithfully implemented. In particular, if 0 < total < EffectiveBalanceIncrement, then the wrong value will be returned.\r\n- [x] 15. Typo in beacon-chain/core/helpers/validators.go#116, “MIN” -> “MAX”.",
  "closed_by": {
    "login": "prylabs-bulldozer[bot]",
    "id": 58059840,
    "node_id": "MDM6Qm90NTgwNTk4NDA=",
    "avatar_url": "https://avatars.githubusercontent.com/in/47372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D",
    "html_url": "https://github.com/apps/prylabs-bulldozer",
    "followers_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6335/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6335/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/648215160",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/6335#issuecomment-648215160",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6335",
    "id": 648215160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODIxNTE2MA==",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-23T14:52:49Z",
    "updated_at": "2020-06-23T14:52:49Z",
    "author_association": "MEMBER",
    "body": "On this today",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/648215160/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/648321076",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/6335#issuecomment-648321076",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6335",
    "id": 648321076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODMyMTA3Ng==",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-23T17:54:10Z",
    "updated_at": "2020-06-23T17:54:10Z",
    "author_association": "MEMBER",
    "body": "* Addressed 1. with code comment to clarify\r\n* Addressed 2. with a commit on removing old code\r\n* Addressed 3. and 4. with a commit on fix\r\n* For 5. The implementation is correct. We implemented according to spec. https://github.com/ethereum/eth2.0-specs/blob/dev/specs/phase0/fork-choice.md#should_update_justified_checkpoint\r\n* The feedback for 6 is confusing. Addressed 6 with code comment to clarify\r\n* Addressed 7 with a commit on code fix\r\n* Addressed 8 with a commit on code comment to clarify\r\n* Addressed 9 with a commit on code fix\r\n* Addressed 10 with a commit on code comment to clarify\r\n* Addressed 11 with a commit on code comment to clarify\r\n* Addressed 12 with a commit on code comment to clarify\r\n* Addressed 13 with a commit on code comment to clarify\r\n* 14 Same as 7\r\n* 15 is no longer relevant. The comment has been gone",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/648321076/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
