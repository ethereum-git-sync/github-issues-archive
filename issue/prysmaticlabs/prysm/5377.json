{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5377",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5377/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5377/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5377/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/5377",
  "id": 597841322,
  "node_id": "MDU6SXNzdWU1OTc4NDEzMjI=",
  "number": 5377,
  "title": "GetValidatorPerformance Returns Incorrect Data",
  "user": {
    "login": "nisdas",
    "id": 33201827,
    "node_id": "MDQ6VXNlcjMzMjAxODI3",
    "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nisdas",
    "html_url": "https://github.com/nisdas",
    "followers_url": "https://api.github.com/users/nisdas/followers",
    "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
    "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
    "organizations_url": "https://api.github.com/users/nisdas/orgs",
    "repos_url": "https://api.github.com/users/nisdas/repos",
    "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nisdas/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 802129904,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDQ=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Bug",
      "name": "Bug",
      "color": "ee0701",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 802129907,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDc=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Help%20Wanted",
      "name": "Help Wanted",
      "color": "33aa3f",
      "default": false,
      "description": "Extra attention is needed"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2020-04-10T11:26:36Z",
  "updated_at": "2020-06-05T04:41:17Z",
  "closed_at": "2020-06-05T04:41:17Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Currently we have a race condition in `GetValidatorPerformance` where we might miss the appropriate time to retrieve the validator's performance metrics. If for example we have a skip slot during an epoch boundary slot, we will retrieve the incorrect set of data. \r\n\r\nThere are also many potential edge cases to how it could be wrong. We use a global variable in the `core/epoch/precompute` package, this has high suspectibility of giving us the wrong data as it is used whenever `ProcessEpochPrecompute` is run. This method is used in a lot of places in prysm, ex: StateGen. So we could end up retrieving the epoch data from an unrelated epoch compared to the head epoch of the chain.\r\n```\r\n{\"correctlyVotedHead\":true,\"correctlyVotedSource\":true,\"correctlyVotedTarget\":true,\"epoch\":203,\"inclusionDistance\":1,\"inclusionSlot\":6453,\"level\":\"info\",\"msg\":\"Previous epoch voting summary\",\"newBalance\":32.07111076,\"oldBalance\":32.07077256,\"percentChange\":\"0.00105%\",\"prefix\":\"validator\",\"pubKey\":\"0x96ef954b331a5341\",\"time\":\"2020-04-10T06:53:29+01:00\"}\r\n{\"correctlyVotedHead\":true,\"correctlyVotedSource\":true,\"correctlyVotedTarget\":true,\"epoch\":204,\"inclusionDistance\":1,\"inclusionSlot\":6507,\"level\":\"info\",\"msg\":\"Previous epoch voting summary\",\"newBalance\":32.071778775,\"oldBalance\":32.07144896,\"percentChange\":\"0.00103%\",\"prefix\":\"validator\",\"pubKey\":\"0x96ef954b331a5341\",\"time\":\"2020-04-10T06:59:53+01:00\"}\r\n{\"correctlyVotedHead\":true,\"correctlyVotedSource\":true,\"correctlyVotedTarget\":true,\"epoch\":205,\"inclusionDistance\":1,\"inclusionSlot\":6507,\"level\":\"info\",\"msg\":\"Previous epoch voting summary\",\"newBalance\":32.07178716,\"oldBalance\":32.07144896,\"percentChange\":\"0.00105%\",\"prefix\":\"validator\",\"pubKey\":\"0x96ef954b331a5341\",\"time\":\"2020-04-10T07:06:17+01:00\"}\r\n```",
  "closed_by": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5377/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5377/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/611991315",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5377#issuecomment-611991315",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5377",
    "id": 611991315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTk5MTMxNQ==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-10T11:27:13Z",
    "updated_at": "2020-04-10T11:27:13Z",
    "author_association": "MEMBER",
    "body": "cc @mcdee ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/611991315/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/613381209",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5377#issuecomment-613381209",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5377",
    "id": 613381209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzM4MTIwOQ==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-14T11:17:14Z",
    "updated_at": "2020-04-14T11:17:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "I spent some time looking at this issue; it basically comes down to a race condition.  Simple mutexing won't help here, and a more comprehensive mutexing would cause long-lasting locks.\r\n\r\nThe validator client could be changed to wait for a bit before it fetches the stats, but the condition will always exist for whatever value of \"a bit\" we choose.  As such, I *think* the best solution at this point is to move to a push-based solution.  This would take the form of a stream that sends performance data to the validator whenever said data is ready.\r\n\r\nThe good news is that we already have an implementation that does some of this, in `ValidatorInfoStream`.  The changes that would be needed to support this would be:\r\n\r\n  - add `ValidatorSummary` to the `BlockProcessedData` struct, which is broadcast every time a block is processed\r\n  - add the information in `ValidatorSummary` to the existing infostream\r\n  - add a subscription to the infostream from the validator client\r\n\r\nThe main downside of this solution is that it adds weight to the `BlockProcessed` event for a single purpose.\r\n\r\nI'll play around with an implementation of this to see if it works in reality.  If anyone has other thoughts on if this is a poor idea, or if there are better solutions, I'd love to hear them.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/613381209/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/613392729",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5377#issuecomment-613392729",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5377",
    "id": 613392729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzM5MjcyOQ==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-14T11:43:51Z",
    "updated_at": "2020-04-14T11:43:51Z",
    "author_association": "MEMBER",
    "body": "i like this idea, and I think in general it would be a good idea to migrate to having a push based stream where we send the updated data when we receive it instead of a more brittle polling based system. \r\n\r\nAlthough I am slightly wary of doing this\r\n> add ValidatorSummary to the BlockProcessedData struct, which is broadcast every time a block is processe\r\n\r\nValidatorSummary is not lightweight, especially with a mainnet state with 16k+ validators. Doing this for every block processed might be excessive. How about instead we only send it in every epoch transition resulting from the block ? Then we can push this data to our validator clients. \r\n\r\n@prysmaticlabs/core-team does anyone have any thoughts on this ?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/613392729/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/613400736",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5377#issuecomment-613400736",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5377",
    "id": 613400736,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzQwMDczNg==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-14T12:00:05Z",
    "updated_at": "2020-04-14T12:00:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "> ValidatorSummary is not lightweight, especially with a mainnet state with 16k+ validators. Doing this for every block processed might be excessive. \r\n\r\n`ValidatorSummary` is an array of pointers, so not as bad as passing all of the structs around, but yeah agree.\r\n\r\n> How about instead we only send it in every epoch transition resulting from the block?\r\n\r\nThis would make sense, as long as we can know which block we should post it in.  What happens if we miss a block either side of the epoch boundary, for example?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/613400736/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/613403651",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5377#issuecomment-613403651",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5377",
    "id": 613403651,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzQwMzY1MQ==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-14T12:06:19Z",
    "updated_at": "2020-04-14T12:06:19Z",
    "author_association": "MEMBER",
    "body": "Ex: we have 8 slots per epoch\r\n\r\nIf my current head is in slot 6, and the next 3 slots end up being skip slots. Then we received a block at slot 10, that block would be where the epoch transition was triggered. So at slot 10, we would send our related validator summaries to our validator clients. Basically at which ever block at which we have the next epoch transition triggered. ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/613403651/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620106328",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5377#issuecomment-620106328",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5377",
    "id": 620106328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDEwNjMyOA==",
    "user": {
      "login": "shayzluf",
      "id": 5848741,
      "node_id": "MDQ6VXNlcjU4NDg3NDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5848741?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shayzluf",
      "html_url": "https://github.com/shayzluf",
      "followers_url": "https://api.github.com/users/shayzluf/followers",
      "following_url": "https://api.github.com/users/shayzluf/following{/other_user}",
      "gists_url": "https://api.github.com/users/shayzluf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shayzluf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shayzluf/subscriptions",
      "organizations_url": "https://api.github.com/users/shayzluf/orgs",
      "repos_url": "https://api.github.com/users/shayzluf/repos",
      "events_url": "https://api.github.com/users/shayzluf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shayzluf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-27T16:52:30Z",
    "updated_at": "2020-04-27T16:52:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mcdee are you still on this issue? \r\nwould you like me to assign it to someone else?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/620106328/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/639254494",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5377#issuecomment-639254494",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5377",
    "id": 639254494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzOTI1NDQ5NA==",
    "user": {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-05T04:41:17Z",
    "updated_at": "2020-06-05T04:41:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Duplicate of #6070",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/639254494/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
