{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6111",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6111/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6111/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6111/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/6111",
  "id": 630287928,
  "node_id": "MDU6SXNzdWU2MzAyODc5Mjg=",
  "number": 6111,
  "title": "Avoid a lot of increase/decrease balance locking",
  "user": {
    "login": "protolambda",
    "id": 19571989,
    "node_id": "MDQ6VXNlcjE5NTcxOTg5",
    "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/protolambda",
    "html_url": "https://github.com/protolambda",
    "followers_url": "https://api.github.com/users/protolambda/followers",
    "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
    "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
    "organizations_url": "https://api.github.com/users/protolambda/orgs",
    "repos_url": "https://api.github.com/users/protolambda/repos",
    "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/protolambda/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 802129906,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDY=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Enhancement",
      "name": "Enhancement",
      "color": "84b6eb",
      "default": false,
      "description": "New feature or request"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/milestones/3",
    "html_url": "https://github.com/prysmaticlabs/prysm/milestone/3",
    "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/milestones/3/labels",
    "id": 3141844,
    "node_id": "MDk6TWlsZXN0b25lMzE0MTg0NA==",
    "number": 3,
    "title": "Diamond",
    "description": "The Diamond Release: Ethereum Mainnet",
    "creator": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 113,
    "state": "closed",
    "created_at": "2018-02-25T21:24:26Z",
    "updated_at": "2020-11-25T18:06:34Z",
    "due_on": "2020-11-20T08:00:00Z",
    "closed_at": "2020-11-25T18:06:34Z"
  },
  "comments": 1,
  "created_at": "2020-06-03T20:03:03Z",
  "updated_at": "2020-06-06T02:50:53Z",
  "closed_at": "2020-06-06T02:50:53Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# :fast_forward: optimization\r\n\r\n### Background\r\n\r\n\r\nBalance updates are inefficient. Most balances change very little, but they do change. They need to be updated, and the Increase/Decrease code path is long, and involves locks. This happens for each validator, each epoch.\r\n\r\nAs discussed in discord:\r\n```\r\nproto Today at 9:26 PM\r\nIs Prysm using the new rewards tests? I see that attestationDelta in pre-compute package on the v0.12 branch does not yet return different values for each of the reward types. Do you sum the test vectors and compare that? The intention was to make it as transparent as possible what happens in the transition here.\r\n\r\nterence Today at 9:34 PM\r\nThe new rewards tests are in the v0.12 branch. And yes to summing the individual component then compare the total. To compare the individual component one by one requires further refactor. It's a nice to have, we'll probably do it post v0.12 launch\r\n\r\nproto Today at 9:41 PM\r\nMy strategy in zrnt was to keep the old structure, but just output multiple lists of rewards/penalties, per type. Then compare individually. And for the processing part, sum them up (and old balances), create a new balances tree, and replace the balances all at once. This avoids a lot of function calls, and some the tree-replacement is more efficient too\r\n\r\nYou're calling UpdateBalancesAtIndex for every balance mutation. So you'll be locking 30.000 times per epoch transition. While you can probably read the balances tree in one go. Create a new one, and then replace with a single lock/unlock call.\r\n```\r\n\r\n### Description\r\n\r\nThe code path is long, and involves many locks:\r\n\r\n`ProcessRewardsAndPenaltiesPrecompute` > `IncreaseBalance` + `DecreaseBalance` > `BalanceAtIndex` (read lock/unlock) + `UpdateBalancesAtIndex` (read lock/unlock + write lock/unlock after + various state checks)\r\n\r\nFor `N` validators, that is `2*2*N` read locks and unlocks, and another `2*N` write locks/unlocks. Only the first lock could be contentious, after that you fork out a copy and the next locks are useless. It's amazing Go is so fast here, but I still think this can and should be avoided.\r\n\r\nCopy over the balances (like done in other places, and it's just a single array of integers, so no biggie), then operate on that. And replace the balances subtree as a whole, as it's expected that most balances have changed (assuming most validators are active).\r\n\r\nQuick link to part of the affected code:\r\nhttps://github.com/prysmaticlabs/prysm/blob/c4afb8e2e73ba2268e2831e9010b6ddfab8a8d66/beacon-chain/core/epoch/precompute/reward_penalty.go#L44\r\n\r\n",
  "closed_by": {
    "login": "nisdas",
    "id": 33201827,
    "node_id": "MDQ6VXNlcjMzMjAxODI3",
    "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nisdas",
    "html_url": "https://github.com/nisdas",
    "followers_url": "https://api.github.com/users/nisdas/followers",
    "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
    "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
    "organizations_url": "https://api.github.com/users/nisdas/orgs",
    "repos_url": "https://api.github.com/users/nisdas/repos",
    "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nisdas/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6111/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6111/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/639963954",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/6111#issuecomment-639963954",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6111",
    "id": 639963954,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzOTk2Mzk1NA==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-06T02:50:53Z",
    "updated_at": "2020-06-06T02:50:53Z",
    "author_association": "MEMBER",
    "body": "Addressed with #6122 ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/639963954/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
