{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9972",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9972/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9972/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9972/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/9972",
  "id": 1069845794,
  "node_id": "I_kwDOBvuov84_xI0i",
  "number": 9972,
  "title": "Display Currently-Used HTTP Connection to Eth1 Node via Healthz or an API Endpoint",
  "user": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 802129907,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDc=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Help%20Wanted",
      "name": "Help Wanted",
      "color": "33aa3f",
      "default": false,
      "description": "Extra attention is needed"
    },
    {
      "id": 802129908,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDg=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Good%20First%20Issue",
      "name": "Good First Issue",
      "color": "7057ff",
      "default": false,
      "description": "Good for newcomers"
    },
    {
      "id": 1701740543,
      "node_id": "MDU6TGFiZWwxNzAxNzQwNTQz",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/API",
      "name": "API",
      "color": "30ef13",
      "default": false,
      "description": "Api related tasks"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-12-02T18:12:57Z",
  "updated_at": "2022-01-14T16:13:05Z",
  "closed_at": "2022-01-14T16:13:05Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# ðŸš€ Feature Request\r\n\r\n### Description\r\n\r\nPrysm allows users to specify a connection to an eth1 node using the `--http-web3provider` flag. Additionally, users can provide a fallback URL to connect to if the first one goes down. This is important functionality that is used by many stakers today. However, for more advanced users running cloud infrastructures or those developing user interfaces to Prysm, it would be nice to expose an API that shows the current eth1 connection information including the currently connected endpoint, the fallback providers, and whether or not there is an active error in the connections.\r\n\r\n### Describe the solution you'd like\r\n\r\nSome API endpoint in the Prysm beacon node which returns the following data:\r\n- Currently connected endpoint\r\n- List of fallback provider URLs\r\n- Any connection error \r\n\r\nThis endpoint should go under `proto/prysm/v1alpha1/node.proto`\r\n \r\n### Describe alternatives you've considered\r\nToday, the information about the currently connected endpoint is available in the prom metrics of the beacon node:\r\n```\r\n# HELP powchain_sync_eth1_connected Boolean indicating whether an eth1 endpoint is currently connected: 0=false, 1=true.\r\n# TYPE powchain_sync_eth1_connected gauge\r\npowchain_sync_eth1_connected 1\r\n# HELP powchain_sync_eth1_fallback_configured Boolean recording whether a fallback eth1 endpoint was configured: 0=false, 1=true.\r\n# TYPE powchain_sync_eth1_fallback_configured gauge\r\npowchain_sync_eth1_fallback_configured 1\r\n# HELP powchain_sync_eth1_fallback_connected Boolean indicating whether a fallback eth1 endpoint is currently connected: 0=false, 1=true.\r\n# TYPE powchain_sync_eth1_fallback_connected gauge\r\npowchain_sync_eth1_fallback_connected 0\r\n```\r\nbut there is no way to see the list of fallback providers or the currently connected URL.\r\n",
  "closed_by": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9972/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9972/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1008164435",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9972#issuecomment-1008164435",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9972",
    "id": 1008164435,
    "node_id": "IC_kwDOBvuov848F15T",
    "user": {
      "login": "michaelneuder",
      "id": 24661810,
      "node_id": "MDQ6VXNlcjI0NjYxODEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/24661810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelneuder",
      "html_url": "https://github.com/michaelneuder",
      "followers_url": "https://api.github.com/users/michaelneuder/followers",
      "following_url": "https://api.github.com/users/michaelneuder/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelneuder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelneuder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelneuder/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelneuder/orgs",
      "repos_url": "https://api.github.com/users/michaelneuder/repos",
      "events_url": "https://api.github.com/users/michaelneuder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelneuder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-08T22:21:40Z",
    "updated_at": "2022-01-08T22:24:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey Raul! \r\n\r\nThis is something I would like to take a swing at. I wanted to run my plan by you before diving too deep in case there is something obvious I am missing (highly likely). \r\n\r\nThis is how I am understanding the data flow of the URLs:\r\n1. The flags `http-web3provider` and `fallback-web3provider` are set and parsed into a slice of strings, which is passed into the beacon node options [here](https://github.com/prysmaticlabs/prysm/blob/3bce9df382d3ea5b30433e92c7264c594bc056de/cmd/beacon-chain/main.go#L244).\r\n2. Inside the node constructor, `registerPOWChainService()` is [called](https://github.com/prysmaticlabs/prysm/blob/3bce9df382d3ea5b30433e92c7264c594bc056de/beacon-chain/node/node.go#L172), which in turn passes these options into `powchain.NewService` [here](https://github.com/prysmaticlabs/prysm/blob/3bce9df382d3ea5b30433e92c7264c594bc056de/beacon-chain/node/node.go#L583).\r\n3. The options get processed inside this [function](https://github.com/prysmaticlabs/prysm/blob/3bce9df382d3ea5b30433e92c7264c594bc056de/beacon-chain/powchain/service.go#L202), and then set as the `httpEndpoints` in the [config](https://github.com/prysmaticlabs/prysm/blob/3bce9df382d3ea5b30433e92c7264c594bc056de/beacon-chain/powchain/service.go#L131) of the powchain service.\r\n4. The endpoints are then used by this service to download the chain data.\r\n\r\nOn the other end, we want to implement an RPC on the v1alpha1 node. From what I can tell:\r\n1. The `proto/prysm/v1alpha1/node.proto` RPCs are implemented in `beacon-chain/rpc/prysm/v1alpha1/node/server.go` using [this](https://github.com/prysmaticlabs/prysm/blob/3bce9df382d3ea5b30433e92c7264c594bc056de/beacon-chain/rpc/prysm/v1alpha1/node/server.go#L32) Server type. \r\n2. This server is composed into the larger beacon chain RPC service as nodeServer [here](https://github.com/prysmaticlabs/prysm/blob/3bce9df382d3ea5b30433e92c7264c594bc056de/beacon-chain/rpc/service.go#L215).\r\n\r\nGiven this, my plan to extract the HTTP endpoints and connection statuses out of the powchain service is as follows. \r\n1. Add two new methods to the `powchain.Service` struct. (a) a method to retrieve the list of http endpoints (the 0th being the default), (b) a method to check the connection status of a specific endpoint. This method will call `dialETH1Nodes` [defined here](https://github.com/prysmaticlabs/prysm/blob/3bce9df382d3ea5b30433e92c7264c594bc056de/beacon-chain/powchain/service.go#L395), and assert that there is a nil error result. \r\n2. Add a new interface to the `powchain` package, that implements the two above functions. (using the interface to copy the pattern of ChainStartFetcher for [example](https://github.com/prysmaticlabs/prysm/blob/3bce9df382d3ea5b30433e92c7264c594bc056de/beacon-chain/powchain/service.go#L80)). \r\n3. In the `nodev1alpha1.Server` add a field for the interface defined in step 2. \r\n4. In `beacon-chain/rpc/service.go`, construct the `nodev1alpha.Server`with the interface from the `powchain` package (similar to what is done for the `BlockFetcher` [here](https://github.com/prysmaticlabs/prysm/blob/3bce9df382d3ea5b30433e92c7264c594bc056de/beacon-chain/rpc/service.go#L181), which makes use of the `Chain` interface defined [in powchain](https://github.com/prysmaticlabs/prysm/blob/3bce9df382d3ea5b30433e92c7264c594bc056de/beacon-chain/powchain/service.go#L103)).\r\n\r\nI know that was a bit verbose, but since there is a good bit of plumbing I was hoping to get an overall sense of if this is a reasonable approach or if you had anything you would do significantly differently! \r\n\r\nThanks in advance for taking a look! \r\nMike\r\n\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1008164435/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1008335728",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9972#issuecomment-1008335728",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9972",
    "id": 1008335728,
    "node_id": "IC_kwDOBvuov848Gftw",
    "user": {
      "login": "michaelneuder",
      "id": 24661810,
      "node_id": "MDQ6VXNlcjI0NjYxODEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/24661810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelneuder",
      "html_url": "https://github.com/michaelneuder",
      "followers_url": "https://api.github.com/users/michaelneuder/followers",
      "following_url": "https://api.github.com/users/michaelneuder/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelneuder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelneuder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelneuder/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelneuder/orgs",
      "repos_url": "https://api.github.com/users/michaelneuder/repos",
      "events_url": "https://api.github.com/users/michaelneuder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelneuder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-09T16:58:16Z",
    "updated_at": "2022-01-09T16:58:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI I wrote up a little proof-of-concept in https://github.com/michaelneuder/prysm/pull/1. I need to add tests and clean up obviously, but I am going to pause here before getting to invested in this implementation in case the approach needs to be adjusted. ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1008335728/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1009272288",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9972#issuecomment-1009272288",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9972",
    "id": 1009272288,
    "node_id": "IC_kwDOBvuov848KEXg",
    "user": {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-10T19:30:54Z",
    "updated_at": "2022-01-10T19:30:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "> michaelneuder#1\r\n\r\nThis is an excellent description that describes the code path perfectly. Your PR is great, as it accomplishes exactly what we wanted. I believe it is almost ready for a final review and merge into Prysm. Feel free to open a pull request. We use a build system called Bazel which can be a little difficult to deal with when adding new endpoints, but I can help fix those problems in your PR after you push",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1009272288/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
