{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/148",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/148/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/148/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/148/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/148",
  "id": 328768437,
  "node_id": "MDU6SXNzdWUzMjg3Njg0Mzc=",
  "number": 148,
  "title": "Shard Node and ShardProtocolManager Design",
  "user": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 934596141,
      "node_id": "MDU6TGFiZWw5MzQ1OTYxNDE=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Discussion",
      "name": "Discussion",
      "color": "f9d0c4",
      "default": false,
      "description": "Simply a thread for talking about stuff"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/milestones/1",
    "html_url": "https://github.com/prysmaticlabs/prysm/milestone/1",
    "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/milestones/1/labels",
    "id": 3141840,
    "node_id": "MDk6TWlsZXN0b25lMzE0MTg0MA==",
    "number": 1,
    "title": "Ruby - Demo",
    "description": "The Ruby Release: Local Alphanet",
    "creator": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 270,
    "state": "closed",
    "created_at": "2018-02-25T21:22:44Z",
    "updated_at": "2018-10-09T10:37:42Z",
    "due_on": "2018-10-01T07:00:00Z",
    "closed_at": "2018-10-09T10:37:42Z"
  },
  "comments": 4,
  "created_at": "2018-06-02T18:55:14Z",
  "updated_at": "2018-06-03T01:13:01Z",
  "closed_at": "2018-06-02T19:55:58Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Hi all,\r\n\r\nMoving forward on #143, let's come up with a design for a `ShardEthereum` and `ShardProtocolManager` in line with Geth's way of doing things.\r\n\r\nFor context, refer to #143.\r\n\r\n## Entry Point\r\n\r\nWhen we call `geth sharding`, we configure a geth node using the `makeFullNode` defined in `cmd/geth/config.go`, where a function called `utils.RegisterEthService` is currently called. This function determines whether to start a full Ethereum node or a light Ethereum node. \r\n\r\n```go\r\n// RegisterEthService adds an Ethereum client to the stack.\r\nfunc RegisterEthService(stack *node.Node, cfg *eth.Config) {\r\n\tvar err error\r\n\tif cfg.SyncMode == downloader.LightSync {\r\n\t\terr = stack.Register(func(ctx *node.ServiceContext) (node.Service, error) {\r\n\t\t\treturn les.New(ctx, cfg)\r\n\t\t})\r\n\t} else {\r\n\t\terr = stack.Register(func(ctx *node.ServiceContext) (node.Service, error) {\r\n\t\t\tfullNode, err := eth.New(ctx, cfg)\r\n\t\t\tif fullNode != nil && cfg.LightServ > 0 {\r\n\t\t\t\tls, _ := les.NewLesServer(fullNode, cfg)\r\n\t\t\t\tfullNode.AddLesServer(ls)\r\n\t\t\t}\r\n\t\t\treturn fullNode, err\r\n\t\t})\r\n\t}\r\n\tif err != nil {\r\n\t\tFatalf(\"Failed to register the Ethereum service: %v\", err)\r\n\t}\r\n}\r\n```\r\n\r\nHere, we can check the config options to register either a light eth node, full node, or **shard node**. If **shard node** is in the config, we do:\r\n\r\n```\r\nerr = stack.Register(func(ctx *node.ServiceContext) (node.Service, error) {\r\n    return sharding.New(ctx, cfg)\r\n})\r\n```\r\n\r\nThe `sharding.New` func accomplishes the same as what the `les` or `eth` package's `.New` functions do, which is to setup a protocol manager and start all the responsibilities of a light/full node.\r\n\r\n## Shard Node\r\n\r\nFollowing the convention of the `les` and `eth` packages, we define the `.New` function in `sharding/backend.go` as follows:\r\n\r\n```go\r\nfunc New(ctx *node.ServiceContext, config *eth.Config) (*ShardEthereum, error) {\r\n\tchainDb, err := eth.CreateDB(ctx, config, \"shardchaindata\")\r\n\tif err != nil {\r\n\t\treturn nil, err\r\n\t}\r\n\tchainConfig, genesisHash, genesisErr := core.SetupGenesisCollation(...)\r\n\tif _, isCompat := genesisErr.(*params.ConfigCompatError); genesisErr != nil && !isCompat {\r\n\t\treturn nil, genesisErr\r\n\t}\r\n\tlog.Info(\"Initialised chain configuration\", \"config\", chainConfig)\r\n\r\n\tpeers := newPeerSet()\r\n\tquitSync := make(chan struct{})\r\n\r\n\tseth := &ShardEthereum{\r\n\t\t... // need to design this.\r\n\t}\r\n\r\n\tseth.relay = NewLesTxRelay(...)\r\n\tseth.serverPool = newServerPool(...)\r\n\tseth.retriever = newRetrieveManager(...)\r\n\tseth.odr = NewLesOdr(...)\r\n\tif leth.blockchain, err = NewShard(...); err != nil {\r\n\t\treturn nil, err\r\n\t}\r\n\r\n\tseth.txPool = NewTxPool(...)\r\n\tif seth.protocolManager, err = NewShardProtocolManager(...); err != nil {\r\n\t\treturn nil, err\r\n\t}\r\n\r\n\treturn seth, nil\r\n}\r\n```\r\n\r\nThen, the `.Start()` func of this node would be similar to what `les` or `eth` does as well:\r\n\r\n```go\r\n// Start implements node.Service, starting all internal goroutines needed by the\r\n// Ethereum protocol implementation.\r\nfunc (s *ShardEthereum) Start(srvr *p2p.Server) error {\r\n\ts.serverPool.start(...)\r\n\ts.protocolManager.Start(...)\r\n\treturn nil\r\n}\r\n```\r\n\r\n## Shard Protocol Manager\r\n\r\nThe shard protocol manager should be responsible to give us shared access methods to the shardChainDb, underlying p2p primitives, and handling of messages between actors in a sharded system.\r\n\r\n```go\r\ntype ShardProtocolManager struct {\r\n    ... // need to design this.\r\n}\r\n```\r\n\r\nThe `NewShardProtocolManager` function should attach these important shared services, but the p2p aspect of it might very well be different as we are exploring go-floodsub/gossip-sub, so I will not elaborate on that. \r\n\r\nNow that this is in place, let's talk about the specific fields we'll have in `ShardEthereum` and `ShardProtocolManager`. Once we define these specifically, I can kick off a PR that implements these entry points and we can split up the rest among a bunch of PRs. @prestonvanloon @terenc3t @nisdas.",
  "closed_by": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/148/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/148/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/394110532",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/148#issuecomment-394110532",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/148",
    "id": 394110532,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDExMDUzMg==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-02T19:20:32Z",
    "updated_at": "2018-06-02T19:20:32Z",
    "author_association": "MEMBER",
    "body": "I propose we split up this design work into the following components:\r\n\r\n\r\n- Shard server i.e. what's needed to start & bootstrap a sharded server while conforming to the geth node entrypoint.\r\n- Shard protocol manager and how the actors can utlize this to enable their behavior.  \r\n- More something else?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/394110532/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/394110748",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/148#issuecomment-394110748",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/148",
    "id": 394110748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDExMDc0OA==",
    "user": {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-02T19:23:34Z",
    "updated_at": "2018-06-02T19:23:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fair enough, @prestonvanloon wanna work on the shardprotocolmanager? Im working on the entry points to start a shard server.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/394110748/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/394113019",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/148#issuecomment-394113019",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/148",
    "id": 394113019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDExMzAxOQ==",
    "user": {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-02T19:55:58Z",
    "updated_at": "2018-06-02T19:55:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing for now as this will be explained by the design doc.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/394113019/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/394127815",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/148#issuecomment-394127815",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/148",
    "id": 394127815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDEyNzgxNQ==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-03T01:13:01Z",
    "updated_at": "2018-06-03T01:13:01Z",
    "author_association": "MEMBER",
    "body": "Discussion continued in the design doc draft: https://docs.google.com/document/d/1J4AEHTSKDGJpNzWS7ZXPqD0yEjqecb-xjdVkjGrxRMk/edit",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/394127815/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
