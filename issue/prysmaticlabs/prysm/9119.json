{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9119",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9119/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9119/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9119/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/9119",
  "id": 932726148,
  "node_id": "MDU6SXNzdWU5MzI3MjYxNDg=",
  "number": 9119,
  "title": "Public site verification to replace local password - doppelgänger enhanced feature",
  "user": {
    "login": "mrabino1",
    "id": 4902221,
    "node_id": "MDQ6VXNlcjQ5MDIyMjE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4902221?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mrabino1",
    "html_url": "https://github.com/mrabino1",
    "followers_url": "https://api.github.com/users/mrabino1/followers",
    "following_url": "https://api.github.com/users/mrabino1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mrabino1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mrabino1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mrabino1/subscriptions",
    "organizations_url": "https://api.github.com/users/mrabino1/orgs",
    "repos_url": "https://api.github.com/users/mrabino1/repos",
    "events_url": "https://api.github.com/users/mrabino1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mrabino1/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 802129906,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDY=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Enhancement",
      "name": "Enhancement",
      "color": "84b6eb",
      "default": false,
      "description": "New feature or request"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2021-06-29T14:08:38Z",
  "updated_at": "2021-08-05T10:20:38Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Challenge: Today, if a validator is using Prysm and has implemented the all of the proper services in place to cause Prysm to auto-start and auto-validate (especially if there was a power outage) that same functionality can be used against the validator unless the operator take certain precautions (e.g. removes the password or disables the service). \r\n\r\nThe above said, that doesn't protect the operator from the scenario whereby the perception is that a VPS instance has been deleted (though an operator has no way to 100% confirm this nor have certainty that the VPS vendor couldn't start it again (to which the validator would start to validate and would cause a slash-able event).  This is also true for a would be desktop operator that is traveling and believes his / her home internet is out (or there is a hardware failure). So (s)he spins up a VPS as a temp solution only to have the internet come back online, and cause a slash-able event. \r\n\r\n----\r\n\r\nRecommended solution:\r\n\r\nA hybrid between the remote signing system and a local signing solution... A remote hash of the password stored on a public website that Prysm routinely checks to ensure it is still accessible. \r\n\r\n----\r\n\r\nSimilar to how a domain can be verified by with a DNS TXT record, this would be something similar that would be need to publicly accessible on a website. This has would be generated during the vault creation process (or thereafter if the user had the password to unlock the vault). \r\n\r\nIdea being that if that remote site removes that file (or changes it), then the Prysm validator, which would checking for routine existence every few epochs, would no longer be authorized to continue validating and would stop the process. Thereafter, it would then not be able to unlock the vault, should the process attempt to relaunch. \r\n\r\nIn effect, we put a remote kill switch in place. This is an add-on to the doppelgänger feature that Prysm is working on (as if those remote keys are put in the same location, the operator can **know** that the removal of those keys can inhibit one of the validators). \r\n\r\nThe text file would point to something like https://domain.tld/prysm_32929808384_verification.txt  to which the contents of that file would just be a SHA256 (or something like it).. That file would not contain any value whatsoever. Rather its sole use and purpose would be to exist (and be accessible).",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9119/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9119/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/886483003",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9119#issuecomment-886483003",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9119",
    "id": 886483003,
    "node_id": "IC_kwDOBvuov8401qg7",
    "user": {
      "login": "mrabino1",
      "id": 4902221,
      "node_id": "MDQ6VXNlcjQ5MDIyMjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4902221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrabino1",
      "html_url": "https://github.com/mrabino1",
      "followers_url": "https://api.github.com/users/mrabino1/followers",
      "following_url": "https://api.github.com/users/mrabino1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrabino1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrabino1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrabino1/subscriptions",
      "organizations_url": "https://api.github.com/users/mrabino1/orgs",
      "repos_url": "https://api.github.com/users/mrabino1/repos",
      "events_url": "https://api.github.com/users/mrabino1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrabino1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-26T08:16:51Z",
    "updated_at": "2021-07-26T08:16:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Something to consider... we could just use the sha256 hash of the password as the public key. ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/886483003/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/893343227",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9119#issuecomment-893343227",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9119",
    "id": 893343227,
    "node_id": "IC_kwDOBvuov841P1X7",
    "user": {
      "login": "mrabino1",
      "id": 4902221,
      "node_id": "MDQ6VXNlcjQ5MDIyMjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4902221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrabino1",
      "html_url": "https://github.com/mrabino1",
      "followers_url": "https://api.github.com/users/mrabino1/followers",
      "following_url": "https://api.github.com/users/mrabino1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrabino1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrabino1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrabino1/subscriptions",
      "organizations_url": "https://api.github.com/users/mrabino1/orgs",
      "repos_url": "https://api.github.com/users/mrabino1/repos",
      "events_url": "https://api.github.com/users/mrabino1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrabino1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-05T10:20:38Z",
    "updated_at": "2021-08-05T10:20:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another way to do this.. and maybe even cleaner is to just reference the ExecCondition= within systemd for the validator service. From there, a curl external and then IF then compare also works.. \r\n\r\nExecCondition=/bin/bash -xc 'if [ $(curl -s -L \"https://dl-web.dropbox.com/s/vb8hezxw61ek9iq/secure.txt\") = \"Wci9u60ZoeUO\" ]; then exit 0; else exit 255; fi'\r\n\r\nthus if the sysadmin changes that secure.txt file on his / her local machine to anything other than Wci9u60ZoeUO in this case, the error code of 255 will be thrown.. and the service will just not start... \r\n\r\nthen.. \r\n\r\nthat mixed with a cronjob that kills a process IF that same condition isn't met also is a way mid way to kill off the process\r\n\r\n```\r\n#!/usr/bin/env bash\r\n\r\nPID=$(systemctl status prysm-mainnet-validator.service | grep Main | grep PID | awk '{print $3}')\r\n\r\n\r\nif [ $(curl -s -L \"https://dl-web.dropbox.com/s/vb8hezxw61ek9iq/secure.txt\") = \"Wci9u60ZoeUO\" ]\r\n\r\nthen \r\nexit 0\r\n\r\nelse \r\n\r\nkill $PID\r\nfi\r\n\r\nexit 0\r\n```\r\n\r\nif the above is put in the crontab .. and say ran every 10min or so..  there is now a poor man's way to have a remote \"dead man's kill switch\"\r\n\r\nthe above isn't artwork for coding but it does work. for those that are using a VPS, the above can be a potent tool to ensure that a remote box will kill an existing process for your validator and also inhibit it launching.. \r\n\r\nit is quite important that whatever site you curl that it has exceptionally high uptime. ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/893343227/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
