{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4727",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4727/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4727/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4727/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/4727",
  "id": 559193348,
  "node_id": "MDU6SXNzdWU1NTkxOTMzNDg=",
  "number": 4727,
  "title": "`--cache-proposer-indices` causes OOM for long chains at beacon startup",
  "user": {
    "login": "garyschulteog",
    "id": 30323939,
    "node_id": "MDQ6VXNlcjMwMzIzOTM5",
    "avatar_url": "https://avatars.githubusercontent.com/u/30323939?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/garyschulteog",
    "html_url": "https://github.com/garyschulteog",
    "followers_url": "https://api.github.com/users/garyschulteog/followers",
    "following_url": "https://api.github.com/users/garyschulteog/following{/other_user}",
    "gists_url": "https://api.github.com/users/garyschulteog/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/garyschulteog/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/garyschulteog/subscriptions",
    "organizations_url": "https://api.github.com/users/garyschulteog/orgs",
    "repos_url": "https://api.github.com/users/garyschulteog/repos",
    "events_url": "https://api.github.com/users/garyschulteog/events{/privacy}",
    "received_events_url": "https://api.github.com/users/garyschulteog/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2020-02-03T16:28:45Z",
  "updated_at": "2020-02-10T17:31:00Z",
  "closed_at": "2020-02-10T17:30:59Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "With a beaconchain sync'd up to about 166k slots, enabling `--cache-proposer-indices` will quickly run my node out of memory (4gb).  Running without the proposer cache, the memory requirement is stable at ~2.7gb.  On another machine without as tight a memory constraint, it appears the proposer cache gets pruned (during? after?) the initial sync and resident mem usage is <3gb.\r\n\r\n> [2020-02-03 16:10:01]  WARN flags: Enabled unsafe ssz cache\r\n[2020-02-03 16:10:01]  WARN flags: Enabled proposer index caching.\r\n[2020-02-03 16:10:01]  WARN flags: Enabled using proto array fork choice over spec fork choice.\r\n[2020-02-03 16:10:01]  INFO node: Using custom chain parameters config=demo\r\n[2020-02-03 16:10:12]  INFO node: Checking DB database-path=/home/ubuntu/.eth2/beaconchaindata\r\n[2020-02-03 16:10:12]  INFO node: Fetching testnet cluster address endpoint=https://prylabs.net/contract\r\n[2020-02-03 16:10:13]  INFO node: Starting beacon node version=Prysm/Git commit: 00a6361c66da467ae6d91fd35905e8f9968931ae. Built at: 2020-02-03T16:10:01Z\r\n...\r\n[2020-02-03 16:13:35]  INFO initial-sync: Waiting for enough suitable peers before syncing required=3 suitable=2\r\n[2020-02-03 16:13:40]  INFO initial-sync: Waiting for enough suitable peers before syncing required=3 suitable=2\r\nfatal error: runtime: out of memory\r\n.\r\nruntime stack:\r\nruntime.throw(0x14f67af, 0x16)\r\n        GOROOT/src/runtime/panic.go:774 +0x54\r\nruntime.sysMap(0x40b4000000, 0x4000000, 0x24d6098)\r\n        GOROOT/src/runtime/mem_linux.go:169 +0xbc\r\nruntime.(*mheap).sysAlloc(0x24a1b80, 0xbc0000, 0x249b010, 0x100000002)\r\n        GOROOT/src/runtime/malloc.go:701 +0x168\r\nruntime.(*mheap).grow(0x24a1b80, 0x5e0, 0xffffffff)\r\n        GOROOT/src/runtime/mheap.go:1255 +0x9c\r\nruntime.(*mheap).allocSpanLocked(0x24a1b80, 0x5e0, 0x24d60a8, 0x7f945a06d0)\r\n        GOROOT/src/runtime/mheap.go:1170 +0x230\r\nruntime.(*mheap).alloc_m(0x24a1b80, 0x5e0, 0x101, 0x7f94097778)\r\n        GOROOT/src/runtime/mheap.go:1022 +0xc0\r\nruntime.(*mheap).alloc.func1()\r\n        GOROOT/src/runtime/mheap.go:1093 +0x48\r\nruntime.(*mheap).alloc(0x24a1b80, 0x5e0, 0x7259010101, 0x401a983200)\r\n        GOROOT/src/runtime/mheap.go:1092 +0x6c\r\nruntime.largeAlloc(0xbc0000, 0x7f94090101, 0x1)\r\n        GOROOT/src/runtime/malloc.go:1138 +0x8c\r\nruntime.mallocgc.func1()\r\n        GOROOT/src/runtime/malloc.go:1033 +0x44\r\nruntime.systemstack(0x7259077930)\r\n        GOROOT/src/runtime/asm_arm64.s:237 +0xa0\r\nruntime.mstart()\r\n        GOROOT/src/runtime/proc.go:1146\r\n ",
  "closed_by": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4727/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4727/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/581505716",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/4727#issuecomment-581505716",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4727",
    "id": 581505716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MTUwNTcxNg==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-03T16:43:49Z",
    "updated_at": "2020-02-03T16:43:49Z",
    "author_association": "MEMBER",
    "body": "The offending code is here \r\nhttps://github.com/prysmaticlabs/prysm/blob/master/beacon-chain/core/helpers/committee.go#L458 .\r\n\r\nGetting all the proposers for the epoch leads to a runtime complexity of O(m *n ^2) . This is because we are still using the inefficient shuffling method here:\r\nhttps://github.com/prysmaticlabs/prysm/blob/master/beacon-chain/core/helpers/shuffle.go#L67\r\n\r\nwhen we should be using the optimised algorithm here:\r\nhttps://github.com/prysmaticlabs/prysm/blob/master/beacon-chain/core/helpers/shuffle.go#L152\r\n\r\nWith 35,000 validators it can lead to frequent OOMs, the solution for this would be to just compute the assignments for the epoch once using the optimized algorithm, and determine the proposers from that set. ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/581505716/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/581509030",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/4727#issuecomment-581509030",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4727",
    "id": 581509030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MTUwOTAzMA==",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-03T16:50:53Z",
    "updated_at": "2020-02-03T16:50:53Z",
    "author_association": "MEMBER",
    "body": "Are you suggesting `precomputeProposerIndices` to use the optimized algorithm in L152?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/581509030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/581512082",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/4727#issuecomment-581512082",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4727",
    "id": 581512082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MTUxMjA4Mg==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-03T16:57:05Z",
    "updated_at": "2020-02-03T16:57:05Z",
    "author_association": "MEMBER",
    "body": "@terencechain yeap that is correct, that should resolve this issue",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/581512082/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/581514980",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/4727#issuecomment-581514980",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4727",
    "id": 581514980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MTUxNDk4MA==",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-03T17:03:34Z",
    "updated_at": "2020-02-03T17:03:34Z",
    "author_association": "MEMBER",
    "body": "Great. Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/581514980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/581879511",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/4727#issuecomment-581879511",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4727",
    "id": 581879511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MTg3OTUxMQ==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-04T12:13:33Z",
    "updated_at": "2020-02-04T12:13:33Z",
    "author_association": "MEMBER",
    "body": "Looking at this again, I am not sure why `preComputeIndices` leads to an OOM. We do this for every epoch and have not had an OOM till slot 166,000 in the above case. While it may be inefficient in its current iteration, I do not see how there are OOMs from it. I cant reproduce the above situation. @garyschulteog Is it consistently reproducible for you ?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/581879511/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/582020162",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/4727#issuecomment-582020162",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4727",
    "id": 582020162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjAyMDE2Mg==",
    "user": {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-04T17:20:44Z",
    "updated_at": "2020-02-04T17:20:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Struggling to reproduce as well - do you get the same results without the flag @garyschulteog ?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/582020162/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/584158384",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/4727#issuecomment-584158384",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4727",
    "id": 584158384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDE1ODM4NA==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-10T14:49:12Z",
    "updated_at": "2020-02-10T14:49:12Z",
    "author_association": "MEMBER",
    "body": "I dont think this should be an issue anymore, can you confirm it is resolved now ? @garyschulteog \r\nFor this, I think I have an idea for the OOM, at slot 166,000 we had a long period without finality. So running with ```initial-sync-cache-state``` can easily lead to your node storing 1000 states in memory which would have led your node seeing that OOM. This is being tracked in #4813 ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/584158384/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/584239189",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/4727#issuecomment-584239189",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/4727",
    "id": 584239189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDIzOTE4OQ==",
    "user": {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-10T17:30:59Z",
    "updated_at": "2020-02-10T17:30:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing in favor of #4813",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/584239189/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
