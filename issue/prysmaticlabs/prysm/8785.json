{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8785",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8785/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8785/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8785/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/8785",
  "id": 861212601,
  "node_id": "MDU6SXNzdWU4NjEyMTI2MDE=",
  "number": 8785,
  "title": "State Management Improvements",
  "user": {
    "login": "nisdas",
    "id": 33201827,
    "node_id": "MDQ6VXNlcjMzMjAxODI3",
    "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nisdas",
    "html_url": "https://github.com/nisdas",
    "followers_url": "https://api.github.com/users/nisdas/followers",
    "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
    "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
    "organizations_url": "https://api.github.com/users/nisdas/orgs",
    "repos_url": "https://api.github.com/users/nisdas/repos",
    "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nisdas/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 802129906,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDY=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Enhancement",
      "name": "Enhancement",
      "color": "84b6eb",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 934596141,
      "node_id": "MDU6TGFiZWw5MzQ1OTYxNDE=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Discussion",
      "name": "Discussion",
      "color": "f9d0c4",
      "default": false,
      "description": "Simply a thread for talking about stuff"
    },
    {
      "id": 1241586918,
      "node_id": "MDU6TGFiZWwxMjQxNTg2OTE4",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Tracking",
      "name": "Tracking",
      "color": "d0ff7f",
      "default": false,
      "description": "Gotta Catch 'Em All"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "rkapka",
    "id": 28876818,
    "node_id": "MDQ6VXNlcjI4ODc2ODE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/28876818?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rkapka",
    "html_url": "https://github.com/rkapka",
    "followers_url": "https://api.github.com/users/rkapka/followers",
    "following_url": "https://api.github.com/users/rkapka/following{/other_user}",
    "gists_url": "https://api.github.com/users/rkapka/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rkapka/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rkapka/subscriptions",
    "organizations_url": "https://api.github.com/users/rkapka/orgs",
    "repos_url": "https://api.github.com/users/rkapka/repos",
    "events_url": "https://api.github.com/users/rkapka/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rkapka/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "rkapka",
      "id": 28876818,
      "node_id": "MDQ6VXNlcjI4ODc2ODE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/28876818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkapka",
      "html_url": "https://github.com/rkapka",
      "followers_url": "https://api.github.com/users/rkapka/followers",
      "following_url": "https://api.github.com/users/rkapka/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkapka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkapka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkapka/subscriptions",
      "organizations_url": "https://api.github.com/users/rkapka/orgs",
      "repos_url": "https://api.github.com/users/rkapka/repos",
      "events_url": "https://api.github.com/users/rkapka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkapka/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2021-04-19T11:33:38Z",
  "updated_at": "2023-02-01T06:20:43Z",
  "closed_at": "2023-02-01T06:20:42Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "# ðŸ’Ž Issue\r\n\r\n### Background\r\n\r\nCurrently our State Management is a critical part of Prysm, as it handles how our state is accessed across all the different services in Prysm. How our State Management runs affects the overall CPU Usage and Memory Consumed by the beacon node. We use reference counting to keep track of all the different fields that are shared across the different beacon states in prysm. By keeping track of references, we can restrict any new memory allocated to only when writing to any shared field due to Copy On Write semantics employed by our State Management.\r\n\r\n### Description\r\n\r\nOur current design allows us to make extremely cheap copies of the beacon state without ballooning memory and having wild CPU usage. This allows us to verify a large amount of individual attestations in a subnet without leading to a corresponding larger increase in memory usage. Along with shared fields, we also employ a shared field trie which is shared across states. This allows us to have a markedly faster state Hash Tree Root. \r\n\r\nAdvantages of Our Current Design:\r\n- Cheap Copies of State\r\n- Relatively Fast HTR( Hash Tree Root) in most cases compared to the non-cached HTR using fast-ssz.\r\n- Reduced Memory and CPU Usage by the beacon node.\r\n\r\nDisadvantages of Our Current Design:\r\n- Increased Complexity Of Managing Multiple States\r\n- Most methods have to be modified around managing a Shared State.\r\n- Due to the Shared Nature of the large root arrays, they almost are always copied during a state transition. \r\n- Significant amount of Memory Fragmentation due to how many slices are copied for each state. This makes it harder for the GC to identify disused regions of memory and mark them as obsolete. \r\n\r\nPotential Improvements to Make:\r\n\r\n- Improve State Management with regards to state transitions from received blocks. \r\nCurrently we have a global shared `hot state` cache. This is used for all our gossip validators, including attestation subnets and aggregate attestations. Verification of these objects usually does not require any additional state transition to be carried out, however due to how we copy our state, the relevant field tries are also copied. So when we do infact receive a new block, we usually have to copy the whole field trie before performing the  block transition. We could potentially employ a unique cache for *only* state transitions from blocks. \r\n\r\n- Cast Individual Fields By Using Fixed Size Types. \r\nThis will help the GC greatly as instead of having to clear up Slices , which are harder to keep track of, cleaning up disused arrays( without any references) are much easier. This also allows us to improve the general efficiency of state transitions as we can keep objects on the stack versus throwing them to the heap.\r\n\r\n- Improve Semantics Around Attestation Validation/Processing\r\n\r\nCurrently we fetch a copy of the state for *each* attestation, this provides a burden on the beacon node as the network grows bigger memory usage from state copies will also grow linearly. We should attempt to keep memory usage with regards to validator registry size as sub-linear if possible. \r\nThere are many potential solutions to explore here : \r\n- Batched Attestation Processing\r\n- Use a more specific cache for *only* attestation/aggregate validation. ",
  "closed_by": {
    "login": "nisdas",
    "id": 33201827,
    "node_id": "MDQ6VXNlcjMzMjAxODI3",
    "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nisdas",
    "html_url": "https://github.com/nisdas",
    "followers_url": "https://api.github.com/users/nisdas/followers",
    "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
    "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
    "organizations_url": "https://api.github.com/users/nisdas/orgs",
    "repos_url": "https://api.github.com/users/nisdas/repos",
    "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nisdas/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8785/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 1,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8785/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/932176575",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/8785#issuecomment-932176575",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8785",
    "id": 932176575,
    "node_id": "IC_kwDOBvuov843j-K_",
    "user": {
      "login": "rkapka",
      "id": 28876818,
      "node_id": "MDQ6VXNlcjI4ODc2ODE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/28876818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkapka",
      "html_url": "https://github.com/rkapka",
      "followers_url": "https://api.github.com/users/rkapka/followers",
      "following_url": "https://api.github.com/users/rkapka/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkapka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkapka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkapka/subscriptions",
      "organizations_url": "https://api.github.com/users/rkapka/orgs",
      "repos_url": "https://api.github.com/users/rkapka/repos",
      "events_url": "https://api.github.com/users/rkapka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkapka/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-01T12:14:07Z",
    "updated_at": "2021-10-01T12:15:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "## Benchmarking\r\n\r\n### Benchmark code\r\n\r\nhttps://gist.github.com/rkapka/486daa18f440262c45a9e88c00b17ce1\r\n\r\nBenchmark performed 1024 state copies both proto state (`BenchmarkProto`) and \"native\" state (`BenchmarkNative`). I created separate `copy` functions for all array sizes to make the native state's code faster.\r\n\r\n### Timing\r\n\r\nProto: **28.5s**\r\nNative: **22.5s**\r\n\r\n### Memory\r\n\r\n**Proto**\r\n\r\n![Proto state](https://user-images.githubusercontent.com/28876818/135617750-930bf95f-c365-4276-8a78-17b07379e77b.png)\r\n\r\n**Native**\r\n\r\n![obraz](https://user-images.githubusercontent.com/28876818/135617842-7a8cb537-dc06-4a9b-a436-b1ad8c2770ca.png)\r\n\r\n### Conclusion\r\n\r\nNative version runs 21% faster and uses 29% less memory.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/932176575/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1411527065",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/8785#issuecomment-1411527065",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8785",
    "id": 1411527065,
    "node_id": "IC_kwDOBvuov85UIjGZ",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-01T06:20:42Z",
    "updated_at": "2023-02-01T06:20:42Z",
    "author_association": "MEMBER",
    "body": "This has been addressed, all the planned improvements have been merged in over the last couple of years. ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1411527065/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
