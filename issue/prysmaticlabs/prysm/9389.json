{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9389",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9389/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9389/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9389/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/9389",
  "id": 971453519,
  "node_id": "MDU6SXNzdWU5NzE0NTM1MTk=",
  "number": 9389,
  "title": "Change SHA256 Library",
  "user": {
    "login": "nisdas",
    "id": 33201827,
    "node_id": "MDQ6VXNlcjMzMjAxODI3",
    "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nisdas",
    "html_url": "https://github.com/nisdas",
    "followers_url": "https://api.github.com/users/nisdas/followers",
    "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
    "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
    "organizations_url": "https://api.github.com/users/nisdas/orgs",
    "repos_url": "https://api.github.com/users/nisdas/repos",
    "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nisdas/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 802129906,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDY=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Enhancement",
      "name": "Enhancement",
      "color": "84b6eb",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 934596141,
      "node_id": "MDU6TGFiZWw5MzQ1OTYxNDE=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Discussion",
      "name": "Discussion",
      "color": "f9d0c4",
      "default": false,
      "description": "Simply a thread for talking about stuff"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-08-16T07:36:05Z",
  "updated_at": "2022-05-17T07:44:37Z",
  "closed_at": "2022-05-17T07:44:37Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "# ðŸ’Ž Issue\r\n\r\n### Background\r\n\r\n@potuz has done some extensive research into the usage of sha256 by eth2 clients. \r\nhttps://hackmd.io/@potuz/rJX9iD30u\r\n\r\nThe summary of the report:\r\n- Most SHA256 libraries are highly optimized to hash large buffers.\r\n- When computing the root of a Merkle tree, the padding block takes as much time as the data block.\r\n- Hardcoding the precomputed scheduled words of the padding block we save 40% of hashing time.\r\n\r\n\r\n### Description\r\n\r\nThere is a potential gain of 40% for clients if they do implement this optimization in their respective sha256 libraries. Unfortunately most sha256 libraries are written in assembly, and are specific for different architectures and operating\r\nsystems. Changing this to account for all the different architectures + supported instructions will be a non trivial task. \r\n\r\nPrysm currently uses this sha256 library:\r\nhttps://github.com/minio/sha256-simd\r\n\r\n\r\nUnfortunately the library currently only supports CPUs with sha extensions and AVX512. It is relevant to mention that most consumer machines do not have sha extensions or AVX512 enabled by default. The earliest release for sha extensions in consumer laptops/desktops was only in the tigerlake release for machines running intel processors. \r\n\r\nThe maintainers of the library want to reduce the scope of the library and have removed support for their AVX/SSE asm. Instead CPUs with AVX2 will simply default to the current default go sha256 library. \r\nhttps://github.com/minio/sha256-simd/issues/58\r\n\r\nTo enable this optimization of precomputing the padding, we would either need to fork minio and add it in ourselves or find any other sha256 library that has this feature.",
  "closed_by": {
    "login": "potuz",
    "id": 16044918,
    "node_id": "MDQ6VXNlcjE2MDQ0OTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/16044918?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/potuz",
    "html_url": "https://github.com/potuz",
    "followers_url": "https://api.github.com/users/potuz/followers",
    "following_url": "https://api.github.com/users/potuz/following{/other_user}",
    "gists_url": "https://api.github.com/users/potuz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/potuz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/potuz/subscriptions",
    "organizations_url": "https://api.github.com/users/potuz/orgs",
    "repos_url": "https://api.github.com/users/potuz/repos",
    "events_url": "https://api.github.com/users/potuz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/potuz/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9389/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9389/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/899346474",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9389#issuecomment-899346474",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9389",
    "id": 899346474,
    "node_id": "IC_kwDOBvuov841mvAq",
    "user": {
      "login": "potuz",
      "id": 16044918,
      "node_id": "MDQ6VXNlcjE2MDQ0OTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16044918?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/potuz",
      "html_url": "https://github.com/potuz",
      "followers_url": "https://api.github.com/users/potuz/followers",
      "following_url": "https://api.github.com/users/potuz/following{/other_user}",
      "gists_url": "https://api.github.com/users/potuz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/potuz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/potuz/subscriptions",
      "organizations_url": "https://api.github.com/users/potuz/orgs",
      "repos_url": "https://api.github.com/users/potuz/repos",
      "events_url": "https://api.github.com/users/potuz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/potuz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-16T09:03:32Z",
    "updated_at": "2021-08-16T09:03:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "My implementation of SSZ + Merkleization + SHA is live in https://github.com/potuz/mammon, the SHA assembly can easily be turned into portable, one header, library as a last resort. It currently supports Intel + AMD SSE/AVX/AVX-2/SHA-ni. It is missing ARM and SHA512 which I cannot test. I modified the assembly from https://github.com/intel/intel-ipsec-mb. Most assembly (at least all in a form that I could read) has been taken from them.  Have you thought about contacting the Intel guys directly? They may be willing to add this, and their library is actively maintained. \r\n\r\nLinking also Chainsafe's implementation https://github.com/ChainSafe/as-sha256/pull/59  https://github.com/ChainSafe/as-sha256/pull/51 \r\n\r\nAnd Nimbus open issue: https://github.com/status-im/nimbus-eth2/issues/2740\r\nYou can find some of my newer benchmarks in the latter. \r\n\r\nIt should be easy for me to port the SHA assembly as a portable ISO-C or C++ implementation since this would be low mainteinance (currently is not really portable, it only runs on linux and assumes at the very least AVX, which I think we can safely do though). But I wouldn't spend time on the bridge with fastssz, in fact, does this issue belong in prysm or does it belong in fastssz?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/899346474/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/899386488",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9389#issuecomment-899386488",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9389",
    "id": 899386488,
    "node_id": "IC_kwDOBvuov841m4x4",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-16T10:05:22Z",
    "updated_at": "2021-08-16T10:05:22Z",
    "author_association": "MEMBER",
    "body": "> My implementation of SSZ + Merkleization + SHA is live in https://github.com/potuz/mammon, the SHA assembly can easily be turned into portable, one header, library as a last resort. It currently supports Intel + AMD SSE/AVX/AVX-2/SHA-ni. It is missing ARM and SHA512 which I cannot test. \r\n\r\nWould be interested in giving that a shot with that. For ARM, you can potentially run it through qemu directly on an x86 machine, if you are interested in sanity testing it. \r\n\r\n```\r\nqemu-aarch64 -L /usr/aarch64-linux-gnu /path/to/arm/binary\r\n``` \r\n\r\n>  But I wouldn't spend time on the bridge with fastssz, in fact, does this issue belong in prysm or does it belong in fastssz?\r\n\r\nTechnically it would belong in fast-ssz, but fast-ssz also allows you to pass in a hasher for whatever object is to be hashed. So the underlying hasher is abstracted in some sense.I think its fine to have the issue here for now.\r\n\r\nI am a bit swamped right now, so I don't have the time to dedicate at the moment to explore this. But once I do get some time, I am interested in trying this out with the mammon version directly. Also fine with me for someone else to take a look at this if they have the time. ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/899386488/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1128528338",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9389#issuecomment-1128528338",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9389",
    "id": 1128528338,
    "node_id": "IC_kwDOBvuov85DQ_nS",
    "user": {
      "login": "potuz",
      "id": 16044918,
      "node_id": "MDQ6VXNlcjE2MDQ0OTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16044918?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/potuz",
      "html_url": "https://github.com/potuz",
      "followers_url": "https://api.github.com/users/potuz/followers",
      "following_url": "https://api.github.com/users/potuz/following{/other_user}",
      "gists_url": "https://api.github.com/users/potuz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/potuz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/potuz/subscriptions",
      "organizations_url": "https://api.github.com/users/potuz/orgs",
      "repos_url": "https://api.github.com/users/potuz/repos",
      "events_url": "https://api.github.com/users/potuz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/potuz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-17T07:44:37Z",
    "updated_at": "2022-05-17T07:44:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing this as included in #10286 feel free to reopen. ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1128528338/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
