{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/1565",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/1565/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/1565/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/1565/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/1565",
  "id": 409388291,
  "node_id": "MDU6SXNzdWU0MDkzODgyOTE=",
  "number": 1565,
  "title": "[Mega Tracking] Successfully Running Beacon Node + 8 Validators",
  "user": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1085358164,
      "node_id": "MDU6TGFiZWwxMDg1MzU4MTY0",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Priority:%20Critical",
      "name": "Priority: Critical",
      "color": "f7262f",
      "default": false,
      "description": "Highest, immediate priority item"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/milestones/2",
    "html_url": "https://github.com/prysmaticlabs/prysm/milestone/2",
    "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/milestones/2/labels",
    "id": 3141842,
    "node_id": "MDk6TWlsZXN0b25lMzE0MTg0Mg==",
    "number": 2,
    "title": "Sapphire",
    "description": "The Sapphire Release: Goerli Testnet",
    "creator": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 171,
    "state": "closed",
    "created_at": "2018-02-25T21:23:32Z",
    "updated_at": "2020-02-04T15:38:04Z",
    "due_on": "2019-03-30T07:00:00Z",
    "closed_at": "2019-05-24T22:12:25Z"
  },
  "comments": 3,
  "created_at": "2019-02-12T16:30:42Z",
  "updated_at": "2019-03-05T23:13:43Z",
  "closed_at": "2019-03-05T23:13:43Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "This is a tracking issue for required fixes to the repo to allow us to run a local testnet of one beacon node and 8 connected validator clients with a deposit contract deployed on goerli. This local config should successfully perform shuffling, assignments, and validators should successfully perform their responsibility. I was able to successfully do this locally after encountering many bugs and features we need to fix. This is a tracking issue for all of these required fixes so our runtime will work on the master branch.\r\n\r\n**NOTE: This local testnet does NOT include incoming deposits post ChainStart or any slashings of any kind**\r\n\r\n- [x] Beacon node should send ChainStart time to validators only _after_ the beacon state has been initialized\r\n- [x] Debug validators being assigned as proposers AND attesters in the same slot\r\n- [x] Finish integrating the real attestations pool into the validator client, as right now the system will panic given it is a stub when proposing blocks\r\n- [x] Give the validator struct access to the unlocked keystore throughout its runtime\r\n- [x] Check for 0 values when modifying config to smaller numbers, namely, in `EpochCommitteeCount`, `maxCommiteeCount` will be 0 currently if we pick a low enough shard count, given it is calculated as SHARD_COUNT / EPOCH_LENGTH, and in a custom config with 1 shard and epoch of 8, 1 / 8 returns 0\r\n- [x] Implement ETH1 data in the server side\r\n- [x] We should use tree hashing as the keys we use to store items in our DB, otherwise blocks are stored by sha3 hash but fetching the parent block by its tree hash root will return nil and our validator client will panic\r\n- [x] Sometimes, we may receive the same log twice from our ETH1 node, so we should store the last received merkle index to make sure we do not unnecessarily update our trie, which will lead to an inconsistent root with that of the contract\r\n- [x] RPC Servers such as validator, proposer had some panics due to not being passed in important properties such as chainService or powChainService during initialization\r\n- [x] BLS public key from herumi is 96 bytes, not 48 as expected by our RPC server, so our beacon node will return an error when fetching assignments\r\n- [x] Deploying the deposit contract should have a higher gas limit as it typically costs almost 3m gas\r\n- [x] Slot ticker in validator client ticks starting from 0 but it should start from params.BeaconConfig().GenesisSlot\r\n- [x] We need to fetch the very initial assignments as soon as the chain starts, so we can add a check if assignments are nil, fetch them\r\n\r\n### How to Run Local Configuration\r\n\r\nFirst, deploy our deposit contract to goerli using the command\r\n```\r\nbazel run //contracts/deposit-contract/deployContract -- --httpPath=https://goerli.prylabs.net --privKey=$(echo /path/to/private/key/file) --chainStart=8 --minDeposit=100000 --maxDeposit=3200000 --customChainstartDelay 120\r\n```\r\n\r\nThen, copy the contract address in the output above and spin up a beacon node (**MAKE SURE YOU USE A NEW DATA DIRECTORY**) with:\r\n```\r\n bazel run //beacon-chain -- --web3provider wss://goerli.prylabs.net/websocket --enable-powchain --datadir /path/to/your/datadir --deposit-contract DEPOSIT_CONTRACT_ADDRESS --demo-config\r\n```\r\n\r\nThen, create 8 validator accounts with a unique keystore path each time using the command:\r\n```\r\nbazel run //validator -- accounts create --password /path/to/passwordfile --keystore-path /path/to/unique/keystore\r\n```\r\nCopy the output hex data to your clipboard as you will need it later.\r\n\r\nNext, run 8 validator clients in separate terminal windows:\r\n```\r\n bazel run //validator -- --demo-config --password /path/to/passwordfile --keystore-path /path/to/unique/keystore\r\n```\r\n\r\nNext, using the deposit data hex string from the account creation, for each validator, add it to the javascript list called `depositData = [];` as shown below:\r\n```js\r\n/**\r\n * Useful for testing deposits with a deployed contract via metamask.\r\n *\r\n * Note: Assumes deposit contract is deployed with max deposit of 3200gwei.\r\n */\r\n\r\nvar address = \"CONTRACT_ADDRESS_HERE\"; // change me!\r\nvar d = web3.eth.contract(INSERT_ABI_HERE).at(address);\r\n\r\nvar cb = function(idk, receipt) {\r\n    console.log(\"TX = \" + receipt);\r\n};\r\n\r\n// Add a list of deposit data hex strings here\r\ndepositData = [\r\n    \"YOUR_VALIDATOR_DEPOSIT_DATA_HERE\"\r\n];\r\n\r\ndepositData.forEach(data => {\r\n    web3.eth.sendTransaction({to: d.address, value: web3.toWei(3200000, 'gwei'), data: d.deposit.getData(data), gas: 1000000}, cb);\r\n});\r\n```\r\nThen, navigate to a web3 enabled website such as etherscan.io, open the javascript console, and paste in the js from above. Metamask will ask to confirm 8 transactions. Make sure your beacon node and 8 validators are running, and then press confirm. Then, the system will begin as ChainStart will be reached and validators will begin their responsibilities!",
  "closed_by": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/1565/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/1565/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/463801608",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/1565#issuecomment-463801608",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/1565",
    "id": 463801608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzgwMTYwOA==",
    "user": {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-14T21:20:12Z",
    "updated_at": "2019-02-14T21:20:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Issue with the validators being assigned as proposer/attester in same slot is due to the [pigeonhole principle](https://en.wikipedia.org/wiki/Pigeonhole_principle) when using a committee size of 1 or 2 with a shard count of 1. In production this case will happen extremely rarely, as we will also have a higher shard count.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/463801608/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/464790263",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/1565#issuecomment-464790263",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/1565",
    "id": 464790263,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDc5MDI2Mw==",
    "user": {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-18T16:04:23Z",
    "updated_at": "2019-02-18T16:04:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Going to continue doing some local tests today to see if we can consistently reach the success scenario of validators performing their responsibility. Will identify any bugs and add any issues if necessary, if not, then we can close this.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/464790263/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/464790692",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/1565#issuecomment-464790692",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/1565",
    "id": 464790692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDc5MDY5Mg==",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-18T16:05:31Z",
    "updated_at": "2019-02-18T16:05:31Z",
    "author_association": "MEMBER",
    "body": "I'll join you with this after I wrap up operations pool work in an hour ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/464790692/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
