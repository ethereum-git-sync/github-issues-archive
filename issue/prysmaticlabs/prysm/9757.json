{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9757",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9757/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9757/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9757/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/9757",
  "id": 1020885480,
  "node_id": "I_kwDOBvuov8482Xno",
  "number": 9757,
  "title": "Prysm validator (post-merge) support for multiple override fee recipient addresses based on multiple validators",
  "user": {
    "login": "mrabino1",
    "id": 4902221,
    "node_id": "MDQ6VXNlcjQ5MDIyMjE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4902221?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mrabino1",
    "html_url": "https://github.com/mrabino1",
    "followers_url": "https://api.github.com/users/mrabino1/followers",
    "following_url": "https://api.github.com/users/mrabino1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mrabino1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mrabino1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mrabino1/subscriptions",
    "organizations_url": "https://api.github.com/users/mrabino1/orgs",
    "repos_url": "https://api.github.com/users/mrabino1/repos",
    "events_url": "https://api.github.com/users/mrabino1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mrabino1/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 802129906,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDY=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Enhancement",
      "name": "Enhancement",
      "color": "84b6eb",
      "default": false,
      "description": "New feature or request"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2021-10-08T09:24:04Z",
  "updated_at": "2022-01-17T10:07:36Z",
  "closed_at": "2021-12-23T17:53:59Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nPost \"merge\", the validator when selected to propose a block will override the execution clients coinbase address using one from the validator to have all applicable transaction fees go to that address. \r\n\r\nChallenge: Many node operators that are running multiple validators are not the economic beneficiary of the validator. \r\n\r\n### Describe the solution you'd like\r\n\r\nSimilar to how Prysm has implemented a YAML for graffiti (https://docs.prylabs.network/docs/prysm-usage/graffiti-file)\r\n\r\nIt is recommended to use a parameter for the validator process to link to a coinbase.yaml where we would indicate the directed coinbase override address based on the validator index.\r\n\r\ne.g. \r\n\r\nspecific:\r\n  163: \"0xA090e606E30bD747d4E6245a1517EbE430F0057e\"\r\n  914: \"0xA090e606E30bD747d4E6245a1517EbE430F0057e\"\r\n  546: \"0xb5d85cbf7cb3ee0d56b3bb207d5fc4b82f43f511\"\r\n  237: \"0x678467B755983d3087336D2326cB273D33e0F350\"\r\ndefault: \"0x678467B755983d3087336D2326cB273D33e0F350\"\r\n\r\n----\r\n(note: the above addresses were just randomly selected)\r\n\r\nBased on the above, the economic association could be seen that index 163 & 914 are owned by the same person but not the node operator.. and 546 is not related to anyone.. and 237 and the node operator are the same..\r\n\r\n----\r\n\r\nTBD, if no address is provided (nor a default) in the yaml, the validator should default to send the coinbase proceeds to the withdrawal address. ",
  "closed_by": {
    "login": "terencechain",
    "id": 21316537,
    "node_id": "MDQ6VXNlcjIxMzE2NTM3",
    "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/terencechain",
    "html_url": "https://github.com/terencechain",
    "followers_url": "https://api.github.com/users/terencechain/followers",
    "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
    "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
    "organizations_url": "https://api.github.com/users/terencechain/orgs",
    "repos_url": "https://api.github.com/users/terencechain/repos",
    "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
    "received_events_url": "https://api.github.com/users/terencechain/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9757/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9757/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/939415865",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9757#issuecomment-939415865",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9757",
    "id": 939415865,
    "node_id": "IC_kwDOBvuov843_lk5",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-10T06:28:33Z",
    "updated_at": "2021-10-10T06:28:33Z",
    "author_association": "MEMBER",
    "body": "This shouldn't be too difficult to do, although the current merge Engine API is still under design so things may change. Given that this feature would allow delegation of block rewards to different addresses, we would need to be able to verify that the coinbase address attached to a validator is actually the one that we do desire. So this feature needs to be audited carefully.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/939415865/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/942094729",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9757#issuecomment-942094729",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9757",
    "id": 942094729,
    "node_id": "IC_kwDOBvuov844JzmJ",
    "user": {
      "login": "mrabino1",
      "id": 4902221,
      "node_id": "MDQ6VXNlcjQ5MDIyMjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4902221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrabino1",
      "html_url": "https://github.com/mrabino1",
      "followers_url": "https://api.github.com/users/mrabino1/followers",
      "following_url": "https://api.github.com/users/mrabino1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrabino1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrabino1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrabino1/subscriptions",
      "organizations_url": "https://api.github.com/users/mrabino1/orgs",
      "repos_url": "https://api.github.com/users/mrabino1/repos",
      "events_url": "https://api.github.com/users/mrabino1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrabino1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-13T09:11:40Z",
    "updated_at": "2021-10-13T09:11:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Would there be wisdom in requiring a signed message to be included in the YAML as proof of control of the target address?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/942094729/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/942205391",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9757#issuecomment-942205391",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9757",
    "id": 942205391,
    "node_id": "IC_kwDOBvuov844KOnP",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-13T11:30:20Z",
    "updated_at": "2021-10-13T11:30:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Would this be better as an addition to the beacon node API, where the validator client can pass the desired coinbase along with its block proposal request (or a pre-proposal request)?  The beacon node is going to need some sort of nudge from the validator client to know when to tell the execution client to prepare the payload, after all.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/942205391/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/942810937",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9757#issuecomment-942810937",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9757",
    "id": 942810937,
    "node_id": "IC_kwDOBvuov844Mic5",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-14T00:07:15Z",
    "updated_at": "2021-10-14T00:07:15Z",
    "author_association": "MEMBER",
    "body": "> Would there be wisdom in requiring a signed message to be included in the YAML as proof of control of the target address?\r\n\r\nThat might be overly restrictive, I imagine there are going to be a lot of different setups that users will run. \r\n\r\n> Would this be better as an addition to the beacon node API, where the validator client can pass the desired coinbase along with its block proposal request (or a pre-proposal request)? The beacon node is going to need some sort of nudge from the validator client to know when to tell the execution client to prepare the payload, after all.\r\n\r\nI imagine that for the merge the beacon API will need to support coinbase addresses, so that the executionpayload can be returned in the whole beacon block. So it would be desired for the API to support this. ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/942810937/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/943262625",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9757#issuecomment-943262625",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9757",
    "id": 943262625,
    "node_id": "IC_kwDOBvuov844OQuh",
    "user": {
      "login": "mrabino1",
      "id": 4902221,
      "node_id": "MDQ6VXNlcjQ5MDIyMjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4902221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrabino1",
      "html_url": "https://github.com/mrabino1",
      "followers_url": "https://api.github.com/users/mrabino1/followers",
      "following_url": "https://api.github.com/users/mrabino1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrabino1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrabino1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrabino1/subscriptions",
      "organizations_url": "https://api.github.com/users/mrabino1/orgs",
      "repos_url": "https://api.github.com/users/mrabino1/repos",
      "events_url": "https://api.github.com/users/mrabino1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrabino1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-14T11:20:40Z",
    "updated_at": "2021-10-14T11:20:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nidas agreed.. it might make sense for a EOA.. however if the address is smart contract, not exactly how one would prove control. ... we should strive to make it safe.. but not over-engineered just because we can.. that said, if someone has control over that YAML they can direct the evm rewards to wherever (s)he wants. As that might sound scary, if an attacker can modify that YAML, (s)he already has control over the box anyway! ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/943262625/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/974035209",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9757#issuecomment-974035209",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9757",
    "id": 974035209,
    "node_id": "IC_kwDOBvuov846DpkJ",
    "user": {
      "login": "mrabino1",
      "id": 4902221,
      "node_id": "MDQ6VXNlcjQ5MDIyMjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4902221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrabino1",
      "html_url": "https://github.com/mrabino1",
      "followers_url": "https://api.github.com/users/mrabino1/followers",
      "following_url": "https://api.github.com/users/mrabino1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrabino1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrabino1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrabino1/subscriptions",
      "organizations_url": "https://api.github.com/users/mrabino1/orgs",
      "repos_url": "https://api.github.com/users/mrabino1/repos",
      "events_url": "https://api.github.com/users/mrabino1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrabino1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-19T12:35:45Z",
    "updated_at": "2021-11-19T12:35:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks like we need to replace coinbase in this thread with fee_recipient to conform to the CL specs.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/974035209/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/974038129",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9757#issuecomment-974038129",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9757",
    "id": 974038129,
    "node_id": "IC_kwDOBvuov846DqRx",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-19T12:40:18Z",
    "updated_at": "2021-11-19T12:40:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note also https://github.com/ethereum/beacon-APIs/pull/178 which contains details of the standard API endpoint and its operation.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/974038129/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/974280981",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9757#issuecomment-974280981",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9757",
    "id": 974280981,
    "node_id": "IC_kwDOBvuov846ElkV",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-19T17:49:56Z",
    "updated_at": "2021-11-19T17:49:56Z",
    "author_association": "MEMBER",
    "body": "> Looks like we need to replace coinbase in this thread with fee_recipient to conform to the CL specs.\r\n\r\nAlso done in #9918 ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/974280981/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1014086720",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9757#issuecomment-1014086720",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9757",
    "id": 1014086720,
    "node_id": "IC_kwDOBvuov848cbxA",
    "user": {
      "login": "kanewallmann",
      "id": 57159130,
      "node_id": "MDQ6VXNlcjU3MTU5MTMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/57159130?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kanewallmann",
      "html_url": "https://github.com/kanewallmann",
      "followers_url": "https://api.github.com/users/kanewallmann/followers",
      "following_url": "https://api.github.com/users/kanewallmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/kanewallmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kanewallmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kanewallmann/subscriptions",
      "organizations_url": "https://api.github.com/users/kanewallmann/orgs",
      "repos_url": "https://api.github.com/users/kanewallmann/repos",
      "events_url": "https://api.github.com/users/kanewallmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kanewallmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-17T02:42:45Z",
    "updated_at": "2022-01-17T02:42:45Z",
    "author_association": "NONE",
    "body": "@terencechain was this closed because it was implemented? Is it possible to set a fee recipient on a per validator basis with Pyrsm or is this issue being tracked elsewhere?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1014086720/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1014096595",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9757#issuecomment-1014096595",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9757",
    "id": 1014096595,
    "node_id": "IC_kwDOBvuov848ceLT",
    "user": {
      "login": "potuz",
      "id": 16044918,
      "node_id": "MDQ6VXNlcjE2MDQ0OTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16044918?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/potuz",
      "html_url": "https://github.com/potuz",
      "followers_url": "https://api.github.com/users/potuz/followers",
      "following_url": "https://api.github.com/users/potuz/following{/other_user}",
      "gists_url": "https://api.github.com/users/potuz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/potuz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/potuz/subscriptions",
      "organizations_url": "https://api.github.com/users/potuz/orgs",
      "repos_url": "https://api.github.com/users/potuz/repos",
      "events_url": "https://api.github.com/users/potuz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/potuz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-17T03:09:25Z",
    "updated_at": "2022-01-17T03:09:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @terencechain was this closed because it was implemented? Is it possible to set a fee recipient on a per validator basis with Pyrsm or is this issue being tracked elsewhere?\r\n\r\nThis was closed because we are forced to follow whatever the spec says about this. In the current design for the API endpoint this is specified close to what the OP requested, but it is still open, you can follow the link posted above by @mcdee ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1014096595/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1014115776",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9757#issuecomment-1014115776",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9757",
    "id": 1014115776,
    "node_id": "IC_kwDOBvuov848ci3A",
    "user": {
      "login": "kanewallmann",
      "id": 57159130,
      "node_id": "MDQ6VXNlcjU3MTU5MTMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/57159130?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kanewallmann",
      "html_url": "https://github.com/kanewallmann",
      "followers_url": "https://api.github.com/users/kanewallmann/followers",
      "following_url": "https://api.github.com/users/kanewallmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/kanewallmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kanewallmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kanewallmann/subscriptions",
      "organizations_url": "https://api.github.com/users/kanewallmann/orgs",
      "repos_url": "https://api.github.com/users/kanewallmann/repos",
      "events_url": "https://api.github.com/users/kanewallmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kanewallmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-17T03:57:28Z",
    "updated_at": "2022-01-17T03:57:28Z",
    "author_association": "NONE",
    "body": "@potuz correct me if I'm wrong, but it seems like this spec is only a matter of how a VC could tell a BN which fee recipient to use. It still requires the VC to support a per validator fee recipient which would be a VC implementation decision not one forced by the spec.\r\n\r\ne.g. a VC could have a single fee recipient config for all validator accounts and submit that value to every call to prepare_beacon_proposer. There's nothing in the spec forcing the VC to maintain a mapping of validator accounts to fee recipients.\r\n\r\nThis feature request requires that functionality in the spec, but having this functionality in the spec doesn't guarantee this feature request will be implemented in Prysm.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1014115776/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1014346443",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/9757#issuecomment-1014346443",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9757",
    "id": 1014346443,
    "node_id": "IC_kwDOBvuov848dbLL",
    "user": {
      "login": "potuz",
      "id": 16044918,
      "node_id": "MDQ6VXNlcjE2MDQ0OTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16044918?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/potuz",
      "html_url": "https://github.com/potuz",
      "followers_url": "https://api.github.com/users/potuz/followers",
      "following_url": "https://api.github.com/users/potuz/following{/other_user}",
      "gists_url": "https://api.github.com/users/potuz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/potuz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/potuz/subscriptions",
      "organizations_url": "https://api.github.com/users/potuz/orgs",
      "repos_url": "https://api.github.com/users/potuz/repos",
      "events_url": "https://api.github.com/users/potuz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/potuz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-17T10:07:36Z",
    "updated_at": "2022-01-17T10:07:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @potuz correct me if I'm wrong, but it seems like this spec is only a matter of how a VC could tell a BN which fee recipient to use. It still requires the VC to support a per validator fee recipient which would be a VC implementation decision not one forced by the spec.\r\n> \r\n> e.g. a VC could have a single fee recipient config for all validator accounts and submit that value to every call to prepare_beacon_proposer. There's nothing in the spec forcing the VC to maintain a mapping of validator accounts to fee recipients.\r\n> \r\n> This feature request requires that functionality in the spec, but having this functionality in the spec doesn't guarantee this feature request will be implemented in Prysm.\r\n\r\nThis is correct, what I meant is that not long ago this feature would have been impossible since it was being considered that only the EL would set the fee recipient. As soon as this is settled surely this will be implemented if this this is compatible with the spec (and it looks that it will be)",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1014346443/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
