{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8606",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8606/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8606/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8606/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/8606",
  "id": 831919872,
  "node_id": "MDU6SXNzdWU4MzE5MTk4NzI=",
  "number": 8606,
  "title": "Handle Early Blocks And Attestations",
  "user": {
    "login": "terencechain",
    "id": 21316537,
    "node_id": "MDQ6VXNlcjIxMzE2NTM3",
    "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/terencechain",
    "html_url": "https://github.com/terencechain",
    "followers_url": "https://api.github.com/users/terencechain/followers",
    "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
    "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
    "organizations_url": "https://api.github.com/users/terencechain/orgs",
    "repos_url": "https://api.github.com/users/terencechain/repos",
    "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
    "received_events_url": "https://api.github.com/users/terencechain/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 802129906,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDY=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Enhancement",
      "name": "Enhancement",
      "color": "84b6eb",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 934596141,
      "node_id": "MDU6TGFiZWw5MzQ1OTYxNDE=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Discussion",
      "name": "Discussion",
      "color": "f9d0c4",
      "default": false,
      "description": "Simply a thread for talking about stuff"
    },
    {
      "id": 1241586918,
      "node_id": "MDU6TGFiZWwxMjQxNTg2OTE4",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Tracking",
      "name": "Tracking",
      "color": "d0ff7f",
      "default": false,
      "description": "Gotta Catch 'Em All"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "jmozah",
    "id": 940575,
    "node_id": "MDQ6VXNlcjk0MDU3NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/940575?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jmozah",
    "html_url": "https://github.com/jmozah",
    "followers_url": "https://api.github.com/users/jmozah/followers",
    "following_url": "https://api.github.com/users/jmozah/following{/other_user}",
    "gists_url": "https://api.github.com/users/jmozah/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jmozah/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jmozah/subscriptions",
    "organizations_url": "https://api.github.com/users/jmozah/orgs",
    "repos_url": "https://api.github.com/users/jmozah/repos",
    "events_url": "https://api.github.com/users/jmozah/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jmozah/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "jmozah",
      "id": 940575,
      "node_id": "MDQ6VXNlcjk0MDU3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/940575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmozah",
      "html_url": "https://github.com/jmozah",
      "followers_url": "https://api.github.com/users/jmozah/followers",
      "following_url": "https://api.github.com/users/jmozah/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmozah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmozah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmozah/subscriptions",
      "organizations_url": "https://api.github.com/users/jmozah/orgs",
      "repos_url": "https://api.github.com/users/jmozah/repos",
      "events_url": "https://api.github.com/users/jmozah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmozah/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2021-03-15T15:21:28Z",
  "updated_at": "2021-06-17T00:17:53Z",
  "closed_at": "2021-06-17T00:17:53Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Prysm does not handle early block. A block could arrive early with respect to `MAXIMUM_GOSSIP_CLOCK_DISPARITY`, however the block could get dropped.\r\n\r\nSolutions:\r\n1. Allow importing block with a tolerance of `MAXIMUM_GOSSIP_CLOCK_DISPARITY`\r\n2. If a block is verified and it's within `MAXIMUM_GOSSIP_CLOCK_DISPARITY`, queue it to be processed at the start of the appropriate slot\r\n\r\nI personally prefer 2 over 1",
  "closed_by": {
    "login": "prylabs-bulldozer[bot]",
    "id": 58059840,
    "node_id": "MDM6Qm90NTgwNTk4NDA=",
    "avatar_url": "https://avatars.githubusercontent.com/in/47372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D",
    "html_url": "https://github.com/apps/prylabs-bulldozer",
    "followers_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8606/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8606/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/810531622",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/8606#issuecomment-810531622",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8606",
    "id": 810531622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMDUzMTYyMg==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-30T19:46:57Z",
    "updated_at": "2021-03-30T19:46:57Z",
    "author_association": "MEMBER",
    "body": "What about propagation? If we receive a block early, we should not propagate it until the slot start?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/810531622/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/810537010",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/8606#issuecomment-810537010",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8606",
    "id": 810537010,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMDUzNzAxMA==",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-30T19:56:37Z",
    "updated_at": "2021-03-30T19:57:26Z",
    "author_association": "MEMBER",
    "body": "> What about propagation? If we receive a block early, we should not propagate it until the slot start?\r\n\r\nWe should not propagate it until the block is verified (i.e. passing p2p spec's validation steps). In case 2 above, it would be not until the slot start",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/810537010/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/810538280",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/8606#issuecomment-810538280",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8606",
    "id": 810538280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMDUzODI4MA==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-30T19:58:42Z",
    "updated_at": "2021-03-30T19:58:42Z",
    "author_association": "MEMBER",
    "body": "I'm curious about the implementation details of option 2. It doesn't seem like a straight forward approach with the libp2p API and how these objects are handled from the p2p validation / pubsub layer.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/810538280/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/822423450",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/8606#issuecomment-822423450",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/8606",
    "id": 822423450,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMjQyMzQ1MA==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-19T12:20:55Z",
    "updated_at": "2021-04-19T12:20:55Z",
    "author_association": "MEMBER",
    "body": "Given that there is no straight forward way for prysm to handle early blocks/attestations, if any blocks are beyond the `MAXIMUM_GOSSIP_CLOCK_DISPARITY` limit, they are simply thrown away. We then re-request those blocks through rpc which adds in an unnecessary delay for processing them. Given that clocks are expected to be synchronized for each validator within 12 seconds of each other, the current clock disparity is excessively strict. \r\n\r\nSome potential solutions to this issue: \r\n- Modify Pending Queues to handle early blocks/attestations better. If the objects are early till an acceptable bound, we instead insert them to the pending queue. \r\n- The pending queue then follows the current slot ticker and then processes them in time. This solution would involve modifying a sensitive area of the code that is already pretty difficult to understand clearly.  \r\n- We could alternatively create a totally new queue just for early blocks/attestations, only main downside is creating a new background routine. Given that all our blocks/attestations have appropriate locks this shouldn't conflict with other active routines. ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/822423450/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
