{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/420",
  "id": 351916853,
  "node_id": "MDU6SXNzdWUzNTE5MTY4NTM=",
  "number": 420,
  "title": "Test Definition Format: (Fork Choice Immediate Message Driven GHOST)",
  "user": {
    "login": "terencechain",
    "id": 21316537,
    "node_id": "MDQ6VXNlcjIxMzE2NTM3",
    "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/terencechain",
    "html_url": "https://github.com/terencechain",
    "followers_url": "https://api.github.com/users/terencechain/followers",
    "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
    "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
    "organizations_url": "https://api.github.com/users/terencechain/orgs",
    "repos_url": "https://api.github.com/users/terencechain/repos",
    "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
    "received_events_url": "https://api.github.com/users/terencechain/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 934596141,
      "node_id": "MDU6TGFiZWw5MzQ1OTYxNDE=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Discussion",
      "name": "Discussion",
      "color": "f9d0c4",
      "default": false,
      "description": "Simply a thread for talking about stuff"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "rawfalafel",
    "id": 202157,
    "node_id": "MDQ6VXNlcjIwMjE1Nw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/202157?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rawfalafel",
    "html_url": "https://github.com/rawfalafel",
    "followers_url": "https://api.github.com/users/rawfalafel/followers",
    "following_url": "https://api.github.com/users/rawfalafel/following{/other_user}",
    "gists_url": "https://api.github.com/users/rawfalafel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rawfalafel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rawfalafel/subscriptions",
    "organizations_url": "https://api.github.com/users/rawfalafel/orgs",
    "repos_url": "https://api.github.com/users/rawfalafel/repos",
    "events_url": "https://api.github.com/users/rawfalafel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rawfalafel/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "rawfalafel",
      "id": 202157,
      "node_id": "MDQ6VXNlcjIwMjE1Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/202157?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rawfalafel",
      "html_url": "https://github.com/rawfalafel",
      "followers_url": "https://api.github.com/users/rawfalafel/followers",
      "following_url": "https://api.github.com/users/rawfalafel/following{/other_user}",
      "gists_url": "https://api.github.com/users/rawfalafel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rawfalafel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rawfalafel/subscriptions",
      "organizations_url": "https://api.github.com/users/rawfalafel/orgs",
      "repos_url": "https://api.github.com/users/rawfalafel/repos",
      "events_url": "https://api.github.com/users/rawfalafel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rawfalafel/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 19,
  "created_at": "2018-08-19T16:44:41Z",
  "updated_at": "2018-11-07T19:07:42Z",
  "closed_at": "2018-11-07T19:07:42Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "The test format for Casper fork choice rule is up for discussion [here](https://notes.ethereum.org/6ozACHyKR9i86vfkt086Ow#)\r\nAs a team, we should decide if we like the format and come up with a comprehensive design doc. It's also important we study what other client teams are doing for synchrony. (Ex: https://github.com/ethereum/beacon_chain/issues/58)\r\nThis issue is associated with #255 \r\n\r\nMore on fork choice rule here: https://ethresear.ch/t/immediate-message-driven-ghost-as-ffg-fork-choice-rule/2561",
  "closed_by": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/414143822",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/420#issuecomment-414143822",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420",
    "id": 414143822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDE0MzgyMg==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-19T17:49:52Z",
    "updated_at": "2018-08-19T17:49:52Z",
    "author_association": "MEMBER",
    "body": "What is RPJ?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/414143822/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/414152203",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/420#issuecomment-414152203",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420",
    "id": 414152203,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDE1MjIwMw==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-19T20:03:28Z",
    "updated_at": "2018-08-19T20:04:20Z",
    "author_association": "MEMBER",
    "body": "So the task is to come up with some language agnostic format for describing tests. \r\n\r\nGiven the example in the first link:\r\n\r\n```text\r\n100V,8E,32S,8M: 0-5*A, 0-5AB, 2-7AC [2]6-7AC, 0-4CD,, [=6] 0-4DE 5-7AB: E**\r\n```\r\nWe understand the the first values are the test configuration:\r\n\r\n|  Param    | Value  |\r\n|-----|-----|\r\n|validators| 100|\r\n|epoch length| 8|\r\n|shard count| 32|\r\n|minimum committee size| 8|\r\n\r\n```protobuf\r\nmessage Configuration {\r\n   int64 validator_count = 1;\r\n   int64 epoch_length = 2;\r\n   int64 shard_count = 3;\r\n   int64 minimum_committee_size = 4;\r\n}\r\n```\r\nAnd then we have a list of validator actions that should occur to test the fork choice.\r\n\r\n| Slot | Definition | Description |\r\n|-----|-----|----|\r\n| 0 |  `0-5*A` | Validators 0 through 5 vote on object `A`, a child of the genesis `*`. |\r\n| 1 | `0-5AB` | Validators 0 through 5 vote on object `B`, a child of object `A`. |\r\n| 2 |`2-7AC` | Validators 2 through 7 vote on object `C`, a child of object `A`. |\r\n| 3 | `[2]6-7AC` | Validators 6 through 7 (and validators defined in slot 2) vote on object `C`, a child of object `A`. |\r\n| 4 | `0-4CD` | Validators 0 through 4 vote on object `D`, a child of object `C`. |\r\n| 5 |  | Emply slot? |\r\n| 6 | `[=6] 0-4DE 5-7AB` | Validators 0 through 4 vote on object `E`, a child of object `D`. Validators 5 though 7 vote on object `B`, a child of object `A`. `[=6]` is meant to enforce that this particular definition is at slot 6 explicitly.|\r\n\r\nFinally, we have the chain head definition. `E**`. This is where we expect the chain head to be given that the last justified block is genesis and the last finalized block is the genesis. \r\n\r\nOpen question: \r\n\r\n* What is the significance of slot ordering? If these are merely conditions of what to vote on, why does the ordering matter? And why is there possibility for empty slots?\r\n* What is the benefit of referencing other slots rather than having denormalized data declarations? The former adds additional complexity to the test runner.\r\n\r\n```protobuf\r\nmessage ValidationVoteCondition {\r\n  repeated int64 validators = 1;\r\n  string object_id = 2;\r\n}\r\n```\r\n\r\n```protobuf \r\nmessage Object {\r\n  string id = 1;\r\n  string parent_id = 2;\r\n  bool is_genesis = 3;\r\n}\r\n```\r\n\r\n```protobuf\r\nmessage ForkChoiceTest {\r\n  Configuration config = 1;\r\n  repeated Object objects = 2;\r\n  repeated ValdiatorVoteCondition vote_conditions = 3;\r\n  string expected_head_object_id = 4;\r\n}\r\n```\r\n\r\nFull `ForkChoiceTest` definition written out in protobuf text format:\r\n\r\n```python\r\n# Test configuration\r\nconfig {\r\n  validator_count: 100\r\n  epoch_length: 8\r\n  shard_count: 32\r\n  minimum_committee_size: 8\r\n}\r\n\r\n# Object definitions\r\nobjects {\r\n  id: \"*\"\r\n  is_genesis: true\r\n}\r\n\r\nobjects {\r\n  id: \"A\"\r\n  parent_id: \"*\"\r\n}\r\n\r\nobjects {\r\n  id: \"B\"\r\n  parent_id: \"A\"\r\n}\r\n\r\nobjects {\r\n  id: \"C\"\r\n  parent_id: \"A\"\r\n}\r\n\r\nobjects {\r\n  id: \"D\"\r\n  parent_id: \"C\"\r\n}\r\n\r\nobjects {\r\n  id: \"E\"\r\n  parent_id: \"D\"\r\n}\r\n\r\n# Validator vote condition definitions\r\n\r\n# Slot 0 \r\nvote_conditions {\r\n  validators: 0\r\n  validators: 1\r\n  validators: 2\r\n  validators: 3\r\n  validators: 4\r\n  validators: 5\r\n  object_id: \"A\"\r\n}\r\n\r\n# Slot 1 \r\nvote_conditions {\r\n  validators: 0\r\n  validators: 1\r\n  validators: 2\r\n  validators: 3\r\n  validators: 4\r\n  validators: 5\r\n  object_id: \"B\"\r\n}\r\n\r\n# Slot 2\r\nvote_conditions {\r\n  validators: 2\r\n  validators: 3\r\n  validators: 4\r\n  validators: 5\r\n  validators: 6\r\n  validators: 7\r\n  object_id: \"B\"\r\n}\r\n\r\n# Slot 3\r\nvote_conditions {\r\n  validators: 2\r\n  validators: 3\r\n  validators: 4\r\n  validators: 5\r\n  validators: 6\r\n  validators: 7\r\n  validators: 6\r\n  validators: 7\r\n  object_id: \"B\"\r\n}\r\n\r\n# Slot 4 \r\nvote_conditions {\r\n  validators: 0\r\n  validators: 1\r\n  validators: 2\r\n  validators: 3\r\n  validators: 4\r\n  object_id: \"D\"\r\n}\r\n\r\n# Slot 5 is empty so not defined \r\n\r\n# Slot 6 is split into two conditions\r\n# Slot 6, condition 0\r\nvote_conditions {\r\n  validators: 0\r\n  validators: 1\r\n  validators: 2\r\n  validators: 3\r\n  validators: 4\r\n  object_id: \"E\"\r\n}\r\n# Slot 6, condition 1\r\nvote_conditions {\r\n  validators: 5\r\n  validators: 6\r\n  validators: 7\r\n  object_id: \"B\"\r\n}\r\n\r\n# Final expected head object\r\nexpected_head_object_id: \"E\"\r\n```\r\n\r\nThe above could also be represented in JSON format with the same data. I have chosen protobufs due to their type safe nature. \r\n\r\nThe key advantages here over a parsable text format is that this is already understood by most languages and a parser does not need to be implemented by each language. There might be a scenario where the parser is incorrect and gives false positives to fork choice rule tests.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/414152203/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/414155360",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/420#issuecomment-414155360",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420",
    "id": 414155360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDE1NTM2MA==",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-19T20:58:04Z",
    "updated_at": "2018-08-19T20:58:04Z",
    "author_association": "MEMBER",
    "body": "This is great. Thanks a lot for the comprehensive thoughts! @prestonvanloon\r\n\r\n>What is the significance of slot ordering? \r\n\r\n I see is slot ordering can be used for certain shorts. For example, [2] means validators defined in slot 2. [=6] means to enforce that this particular definition is at slot 6 explicitly.\r\n\r\n>Why is there possibility for empty slots?\r\nI think empty slots can happen because validators can go offline, each slot is just a 8 seconds time window.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/414155360/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/414158603",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/420#issuecomment-414158603",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420",
    "id": 414158603,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDE1ODYwMw==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-19T21:53:06Z",
    "updated_at": "2018-08-19T21:53:55Z",
    "author_association": "MEMBER",
    "body": "A slot is referring to a segment of time? Why? \r\n\r\nMy other question is why reference another slot rather than denormalize the data? These slot references or concatenations add additional complexity. \r\n\r\nI don’t see any time related functionality here. Rather we are establishing the chain state-of-the-universe for the fork choice rule to decide the head.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/414158603/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/414324041",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/420#issuecomment-414324041",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420",
    "id": 414324041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDMyNDA0MQ==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-20T13:53:21Z",
    "updated_at": "2018-08-20T13:53:21Z",
    "author_association": "MEMBER",
    "body": "@prestonvanloon \r\nIsnt that in the definition of a slot ? A period of 8s. So 6 slots would come out to a period of 48s\r\n\r\nAgree on the slot references, they needlessly complicate things and I do not really see the advantage of having them, why not just explicitly state what the data is. ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/414324041/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/414447837",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/420#issuecomment-414447837",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420",
    "id": 414447837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDQ0NzgzNw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-20T20:13:08Z",
    "updated_at": "2018-08-20T20:13:08Z",
    "author_association": "NONE",
    "body": "Slots are actually important to this construction. The current shuffling of validators (`indices_for_heights`) provides a different subset of validators for each slot in a cycle so when you say `0-5` in slot 0, it is not necessarily the same as `0-5` in slot 1.\r\n\r\nI haven't reviewed your notes in detail yet. On the run currently! Wanted to drop that piece of info in, and I'll come back with more notes later.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/414447837/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/414535834",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/420#issuecomment-414535834",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420",
    "id": 414535834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDUzNTgzNA==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-21T03:11:37Z",
    "updated_at": "2018-08-21T03:11:37Z",
    "author_association": "MEMBER",
    "body": "Maybe we could define what a slot actually is and how they are related, if at all, and why are they related?\r\n\r\nIf slots are related to shuffling, are we assured that the shuffling is deterministic? ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/414535834/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/416703602",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/420#issuecomment-416703602",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420",
    "id": 416703602,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjcwMzYwMg==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-28T19:03:14Z",
    "updated_at": "2018-08-28T19:03:14Z",
    "author_association": "NONE",
    "body": "Because of the epoch-less casper consensus rules, a validator attesting to a block at slot N is a casper vote for the block at slot N and the blocks in the previous CYCLE_LENGTH-1 slots (voting on a total of CYCLE_LENGTH slots). If there are empty blocks for some of these slots that are to be voted on by an attestation, then it is simply skipped. Note, it is _not_ the previous CYCLE_LENGTH blocks that receive votes, but instead slots.\r\n\r\nThis notion of an attestation casting votes for ancestor blocks is key in assessing both the fork choice and the rules around justification/finalization.\r\n\r\nFor the purposes of these tests, an RNG for shuffling can be assumed and is thus deterministic. The exact shuffling is unimportant, but rather the notion of only a subset of validators being able to attest at each slot is important. Say there are 100 validators and 10 slots, there are then 10 validators per slot with no overlap. So you would say, build a block B at slot 0 and have validtaors 0-9 attest. If you did the same at slot 1, the validators 0-9 attesting to slot 1 will be entirely different from the validators at slot 0. This again is important when assessing justification/finalization as you count total votes on blocks from individual validators.\r\n\r\nI'm open to alternative schemes to write these tests out in, but I am pretty certain we cannot remove the notion of slots (and empty slots for that matter). If we move toward a scheme similar to the one you have proposed, I would toward json.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/416703602/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/416704038",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/420#issuecomment-416704038",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420",
    "id": 416704038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjcwNDAzOA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-28T19:04:32Z",
    "updated_at": "2018-08-28T19:04:32Z",
    "author_association": "NONE",
    "body": "Note: ChiCheng has moved forward with the string parser for now, but we can replace the parser and tests with a different format and still keep the guts the same when we decide on a more favorable format here.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/416704038/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/416775982",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/420#issuecomment-416775982",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420",
    "id": 416775982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjc3NTk4Mg==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-28T23:44:33Z",
    "updated_at": "2018-08-28T23:44:33Z",
    "author_association": "MEMBER",
    "body": "Link to @ChihChengLiang's PR: https://github.com/ethereum/beacon_chain/pull/80\r\n\r\nWhy do we need shuffling here if this is testing the fork choice rule? \r\n\r\nMy interpretation of this test is to build a scenario for the fork choice rule to select the proper head given the information provided to the method. \r\n\r\nTo answer my earlier question: What is a slot and how are they related? @djrtwo answered offline as follows:\r\n\r\n> A slot is a period of time in which a certain validator is supposed to propose a block. For every slot there is also a committee that is supposed to attest to a block at that slot. They attest to whatever block appears to be the head of the chain during that slot. These attestations serve as votes for the consensus. See epoch-less casper for more details on that.\r\n> Because this is a simulation, the notion of time doesn't really matter, but the duties of validators (who and what they are supposed to do) is still dictated by this sequential notion of slots\r\n\r\nI don't understand why we need slots that are applied in a sequential order given that the test is to determine the final head at the end of the scenario.\r\n\r\n![image](https://user-images.githubusercontent.com/7246818/44756493-f1caa100-aaf8-11e8-9513-8715042dbeaa.png)\r\n\r\nGiven the above scenario of block heirarchy and some vote information. Example:\r\n\r\n| Vote block | Validator Index | Was Randomly Selected at Epoch/Slot | Expected FC Behavior* |\r\n|---------|-------|------|----|\r\n| A | 0 | Yes | Valid vote |\r\n| A | 1 | No | Ignore: not selected by RNG| \r\n| A | 99 | Yes | Valid vote |\r\n| B | 88 | Yes | Ignore: double vote |\r\n| C | 88 | Yes | Ignore: double vote |\r\n\r\n*Note: _Expected behavior is just for understanding and is not directly tested in this framework._ \r\n\r\nKey information for this method are whether or not the the validator was randomly selected during the epoch/slot where they should vote, what was their vote, and what is their index.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/416775982/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/417004814",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/420#issuecomment-417004814",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420",
    "id": 417004814,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzAwNDgxNA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-29T15:54:21Z",
    "updated_at": "2018-08-29T15:55:01Z",
    "author_association": "NONE",
    "body": "> Why do we need shuffling here if this is testing the fork choice rule?\r\n\r\nWe don't really need to be shuffling anything, but we do need the concept of only a subset of validators per slot (~`len(active_validator_set)/CYCLE_LENGTH`). Thus when you say I want 0-9 to attest to slot-1, we are saying the 0-9 assigned to slot-1, not the 0-9 of the total validator set. The specification of this shouldn't allow us to specify validators to attest to a slot that aren't supposed to, _and_ the specification should make it easy to select the validators that are assigned to a certain slot.\r\n\r\nThe fork choice rule is not simply based on the blocks that are built, but also on the votes the block has received. Votes come from attestations. An attestation of a block at slot N, applies votes to that block and all its ancestors that are in the previous `CYCLE_LENGTH` slots. This is at minimum a vote for one block and maximum a vote for `CYCLE_LENGTH` blocks, and could be anywhere in between depending on if any slots were skipped in the chain. It is imperative that we capture this notion of slots and the idea that slots can be skipped in this testing framework.\r\n\r\nHappy to hop on a call to explain. I think we might be having something lost in our text communication.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/417004814/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/417136977",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/420#issuecomment-417136977",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420",
    "id": 417136977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzEzNjk3Nw==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-29T23:12:20Z",
    "updated_at": "2018-08-29T23:12:20Z",
    "author_association": "NONE",
    "body": "The reason I went with a human-writable language is that it really does make life easier for a human to easily be able to crank out a test in 2 minutes without having to fiddle around with tools. I'd personally take JSON over protobuf text format, as most existing ethereum tests are in JSON; I suppose we could get the same gains as we had from the human-writable language by creating a translator? It would not be too difficult, basically the same code that clients would have had to implement to parse the language anyway.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/417136977/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/417179791",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/420#issuecomment-417179791",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420",
    "id": 417179791,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzE3OTc5MQ==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-30T03:39:24Z",
    "updated_at": "2018-08-30T03:39:24Z",
    "author_association": "MEMBER",
    "body": "I agree with JSON. My suggestion for protobuf is to provide the type safety and schema for non-type-safe languages. However, protobuf text format is... not great. It's actually quite bizzare and hard to understand initially. This suggestion might be overkill or an imposition on others. \r\n\r\nBack to JSON: I'd imagine that it would be possible to parse the originally proposed language into the JSON and then we only need one implementation of the parser. \r\n\r\nI'm interested to hear if any other team has an opinion in tomorrow's call and maybe we can clarify the specific goals of the testing framework.\r\n\r\n@djrtwo If you have time, could we schedule a short call to hash out some of my questions?\r\n\r\nSo the test data need to represent:\r\n- The indices of validators that are assigned during each slot\r\n- The votes cast by a subset of those validators\r\n\r\nIs that right? Otherwise, how are we determining which of the 100 validators are assigned to a given slot?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/417179791/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/417595246",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/420#issuecomment-417595246",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420",
    "id": 417595246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzU5NTI0Ng==",
    "user": {
      "login": "mratsim",
      "id": 22738317,
      "node_id": "MDQ6VXNlcjIyNzM4MzE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/22738317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mratsim",
      "html_url": "https://github.com/mratsim",
      "followers_url": "https://api.github.com/users/mratsim/followers",
      "following_url": "https://api.github.com/users/mratsim/following{/other_user}",
      "gists_url": "https://api.github.com/users/mratsim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mratsim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mratsim/subscriptions",
      "organizations_url": "https://api.github.com/users/mratsim/orgs",
      "repos_url": "https://api.github.com/users/mratsim/repos",
      "events_url": "https://api.github.com/users/mratsim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mratsim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-31T08:39:05Z",
    "updated_at": "2018-08-31T08:39:05Z",
    "author_association": "NONE",
    "body": "Following yesterday's call, reposting my comments from the [beacon chain repo](https://github.com/ethereum/beacon_chain/issues/58#issuecomment-415702618)\r\n\r\n> ##### Properties\r\n> Here are the properties I would find useful:\r\n>   - Comment support\r\n>       - This is important for self documentation, and also quickly disabling/re-enabling tests\r\n>       - Note that JSON does not support comment\r\n>   - Readable\r\n>       - This means white-space are insignificant so we can prettify alignment by using whitespaces\r\n>   - Can be autogenerated\r\n>       - This will be helpful to create new test cases\r\n>       - Can serve as dump format for logs or crashes for reproduction.\r\n>   - A clear distinction between input, output and exceptions\r\n>       - The exceptions expected should be properly defined as well (i.e. say integer overflow vs array indexing error)\r\n> \r\n> ##### Comments on current proposal\r\n> \r\n> It seems like inspired by CSV for input, with `:` to separate `constants: votes: result`, rules should be clear on:\r\n>   - separator allowed (only `,` and `:`)\r\n>   if ever needed:\r\n>       - quote ' \"\r\n>       - escaping quotes, comments, line breaks and the escape characters\r\n> \r\n> ##### What is needed?\r\n> \r\n> To clarify what is needed, we should probably make sure of what the lang should encode, I note:\r\n>   - Validator\r\n>   - Epoch length\r\n>   - Shard Count\r\n>   - Min Committee Size\r\n>   - numerical range of validator\r\n>   - uppercase alphabetical range of fork choice. I probably missed it but are there situation with more than 26 choices?\r\n>   - specifying empty slots\r\n>   - validators from multiple sets voting for the same fork `2-7AC [2]6-7AC`\r\n>   - asserting the slot you are in `[=6]`\r\n>   - Am I missing something?\r\n> \r\n> ##### Canonical test\r\n> \r\n> This vote part for slot 2 and 3 is a bit unclear `0-5AB, 2-7AC [2]6-7AC`\r\n> >  * In slot 2, validators 0-5 of the validator set of slot 2 vote on B, a child of A\r\n> >  * In slot 3, validators 2-7 of the validator set of slot 3 vote on C, a child of A, and validators 6-7 from the validator set of slot 2 do the same\r\n> \r\n> So we could use the following as an equivalent right?\r\n> `6-7AC [3]2-7AC, [2]0-5AB`\r\n> \r\n\r\nIn summary, human readable/writable format are good but it needs comment (which JSON doesn't support). I do prefer using a widespread format rather than a custom one we would need to write parsers for.\r\n\r\nI feel like TOML or YAML can fit all those concerns.\r\n\r\n## Comparison of TOML and YAML\r\n\r\n\r\nFrom https://gist.github.com/oconnor663/9aeb4ed56394cb013a20, with YAML fixed\r\n\r\n```TOML\r\ntitle = \"TOML Example\"\r\n\r\n[owner]\r\nname = \"Tom Preston-Werner\"\r\ndob = 1979-05-27T07:32:00-08:00\r\n\r\n[database]\r\nserver = \"192.168.1.1\"\r\nports = [ 8001, 8001, 8002 ]\r\nconnection_max = 5000\r\nenabled = true\r\n\r\n[servers]\r\n\r\n  [servers.alpha]\r\n  ip = \"10.0.0.1\"\r\n  dc = \"eqdc10\"\r\n\r\n  [servers.beta]\r\n  ip = \"10.0.0.2\"\r\n  dc = \"eqdc10\"\r\n\r\n[clients]\r\ndata = [ [\"gamma\", \"delta\"], [1, 2] ]\r\n\r\nhosts = [\r\n  \"alpha\",\r\n  \"omega\"\r\n]\r\n```\r\n\r\n```YAML\r\ntitle: YAML Example\r\n\r\nowner:\r\n  name: Tom Preston-Werner\r\n  dob: 1979-05-27T07:32:00-08:00\r\n\r\ndatabase:\r\n  server: 192.168.1.1\r\n  ports: [ 8001, 8001, 8002 ]\r\n  connection_max: 5000\r\n  enabled: true\r\n\r\nservers:\r\n\r\n  alpha:\r\n    ip: 10.0.0.1\r\n    dc: eqdc10\r\n\r\n  beta:\r\n    ip: 10.0.0.2\r\n    dc: eqdc10\r\n\r\nclients:\r\n  data: [ [gamma, delta], [1, 2] ]\r\n\r\n  hosts:\r\n    - alpha\r\n    - omega\r\n```\r\n\r\nAnd adding this [TOML quirk](http://hitchdev.com/strictyaml/why-not/toml/), from [strictyaml  documentation](http://hitchdev.com/strictyaml/why-not/toml/):\r\n\r\nTOML\r\n\r\n```toml\r\n[[fruit]]\r\nname = \"apple\"\r\n\r\n[fruit.physical]\r\ncolor = \"red\"\r\nshape = \"round\"\r\n```\r\n\r\nvs YAML\r\n\r\n```yaml\r\nfruit:\r\n  name: apple\r\n  physical:\r\n    color: red\r\n    shape: round\r\n```\r\n\r\n([StrictYAML](https://github.com/crdoconnor/strictyaml) is a type-safe restricted subset of YAML, for example strings must be quoted.)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/417595246/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/417691627",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/420#issuecomment-417691627",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420",
    "id": 417691627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzY5MTYyNw==",
    "user": {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-31T15:00:54Z",
    "updated_at": "2018-08-31T15:00:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mratsim YAML is a good compromise. +1.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/417691627/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/417722667",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/420#issuecomment-417722667",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420",
    "id": 417722667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzcyMjY2Nw==",
    "user": {
      "login": "ChihChengLiang",
      "id": 3391420,
      "node_id": "MDQ6VXNlcjMzOTE0MjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3391420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChihChengLiang",
      "html_url": "https://github.com/ChihChengLiang",
      "followers_url": "https://api.github.com/users/ChihChengLiang/followers",
      "following_url": "https://api.github.com/users/ChihChengLiang/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChihChengLiang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChihChengLiang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChihChengLiang/subscriptions",
      "organizations_url": "https://api.github.com/users/ChihChengLiang/orgs",
      "repos_url": "https://api.github.com/users/ChihChengLiang/repos",
      "events_url": "https://api.github.com/users/ChihChengLiang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChihChengLiang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-31T16:42:09Z",
    "updated_at": "2018-08-31T16:42:09Z",
    "author_association": "NONE",
    "body": "To shed some light on how this test language would be applied, let me paste here the chain test example from the deprecated hybrid Casper.\r\n- [Test examples](https://github.com/karlfloersch/pyethereum/blob/develop/ethereum/tests/hybrid_casper/test_chain.py#L152-L192)\r\n- [Test language implementation](https://github.com/karlfloersch/pyethereum/blob/develop/ethereum/tests/hybrid_casper/testing_lang.py), and the meaning of test string token defined at L73-L79.\r\n\r\nNote that in the example, the test language is agnostic to the client, database, or server. The tests focus on the chain data and usually test the consistency of the fork choice rule by [S]aving block hash, [R]everting to saved hashes, building a fork, and finally checking the desired [H]ead at the end of the string.\r\n\r\nWith the test string, it is easy and quick to write a complicate testing scenario in a one-liner.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/417722667/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/417940608",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/420#issuecomment-417940608",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420",
    "id": 417940608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzk0MDYwOA==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-02T15:57:51Z",
    "updated_at": "2018-09-02T15:57:51Z",
    "author_association": "MEMBER",
    "body": "My primary issue with the string format is that it is difficult to read or understand. \r\n\r\nIt seems reasonable to me that we could come up with some mechanism to easily create test scenarios while making it easy to read and understand. This could be writing a string language that can generate the test code in strictYAML or a GUI if someone was so inclined to do so. ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/417940608/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/417942651",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/420#issuecomment-417942651",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420",
    "id": 417942651,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzk0MjY1MQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-02T16:30:32Z",
    "updated_at": "2018-09-02T16:30:32Z",
    "author_association": "NONE",
    "body": "Agreed on YAML being a good option. @ChihChengLiang We can build and support a simple python tool that converts the string representation into yaml output.\r\n\r\nI'll write up a new proposal taking into account @prestonvanloon's and @mratsim's notes/questions.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/417942651/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/420408191",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/420#issuecomment-420408191",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/420",
    "id": 420408191,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDQwODE5MQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-11T20:09:16Z",
    "updated_at": "2018-09-11T20:21:11Z",
    "author_association": "NONE",
    "body": "Proposed YAML format: https://notes.ethereum.org/s/r11GVSBuQ\r\n\r\nLeave any comments here. We can discuss in depth at our Thursday meeting.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/420408191/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
