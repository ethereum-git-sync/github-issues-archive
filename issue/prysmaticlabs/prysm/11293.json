{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/11293",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/11293/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/11293/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/11293/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/11293",
  "id": 1348089361,
  "node_id": "I_kwDOBvuov85QWjYR",
  "number": 11293,
  "title": "Blinded block generation should not require validator registration",
  "user": {
    "login": "mcdee",
    "id": 511384,
    "node_id": "MDQ6VXNlcjUxMTM4NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mcdee",
    "html_url": "https://github.com/mcdee",
    "followers_url": "https://api.github.com/users/mcdee/followers",
    "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
    "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
    "organizations_url": "https://api.github.com/users/mcdee/orgs",
    "repos_url": "https://api.github.com/users/mcdee/repos",
    "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mcdee/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3991853008,
      "node_id": "LA_kwDOBvuov87t7tfQ",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Builder",
      "name": "Builder",
      "color": "59D5BA",
      "default": false,
      "description": "PR or issue that supports builder related work"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "terencechain",
    "id": 21316537,
    "node_id": "MDQ6VXNlcjIxMzE2NTM3",
    "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/terencechain",
    "html_url": "https://github.com/terencechain",
    "followers_url": "https://api.github.com/users/terencechain/followers",
    "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
    "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
    "organizations_url": "https://api.github.com/users/terencechain/orgs",
    "repos_url": "https://api.github.com/users/terencechain/repos",
    "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
    "received_events_url": "https://api.github.com/users/terencechain/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-08-23T14:53:28Z",
  "updated_at": "2022-08-25T17:19:18Z",
  "closed_at": "2022-08-25T17:19:18Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# üêû Bug Report\r\n\r\n### Description\r\n\r\nWhen attempting to generate a blinded beacon block prysm currently refuses to do so unless the validator has been registered.  However, in configurations with multiple beacon nodes or alternative registration systems the beacon node may not have been informed of the registration.  As such, it should not check for local knowledge of the registration as a gate to fetching blocks from the MEV relay.\r\n\r\nRelevant code: https://github.com/prysmaticlabs/prysm/blob/develop/beacon-chain/rpc/prysm/v1alpha1/validator/proposer_bellatrix.go#L45-L46\r\n\r\nIt may be desirable to carry out a check that the returned block header has a non-zero fee recipient for situations where the relay really does not know the fee recipient address. \r\n\r\n### Has this worked before in a previous version?\r\n\r\nNo.\r\n\r\n## üåç  Your Environment\r\n\r\nPrysm v3.0.0",
  "closed_by": {
    "login": "prylabs-bulldozer[bot]",
    "id": 58059840,
    "node_id": "MDM6Qm90NTgwNTk4NDA=",
    "avatar_url": "https://avatars.githubusercontent.com/in/47372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D",
    "html_url": "https://github.com/apps/prylabs-bulldozer",
    "followers_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/11293/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/11293/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1224331698",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/11293#issuecomment-1224331698",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/11293",
    "id": 1224331698,
    "node_id": "IC_kwDOBvuov85I-dGy",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-23T16:46:03Z",
    "updated_at": "2022-08-23T16:46:36Z",
    "author_association": "MEMBER",
    "body": "I'm concerned about setups like:\r\n\r\n1.) \r\nbn (`--http-mev-relay=xyz`)  <-> vc (`--enable-builder=false`)\r\n\r\nor hybrid version\r\n\r\n2.)\r\nbn (`--http-mev-relay=xyz`)  <-> vc where settings are mixture of `--enable-builder=true/false`\r\n\r\nIn such setups, the validators who prefer local ee would always call mev-boost/relayer firsthand then fall back to local EE. Even worse, a bad relayer could return a legit block even if the validators did not register.\r\n\r\n\r\nWould it be better to add a beacon node flag like skip registration check? `--skip-builder-registration-check`",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1224331698/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1224831990",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/11293#issuecomment-1224831990",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/11293",
    "id": 1224831990,
    "node_id": "IC_kwDOBvuov85JAXP2",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-23T20:30:02Z",
    "updated_at": "2022-08-23T20:30:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wouldn't a VC that had `--enable-builder=false` request beacon blocks rather than blinded beacon blocks, so that wouldn't be an issue?\r\n\r\nI'd be fine with a flag, just not sure that it's necessary.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1224831990/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1225830177",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/11293#issuecomment-1225830177",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/11293",
    "id": 1225830177,
    "node_id": "IC_kwDOBvuov85JEK8h",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-24T14:48:00Z",
    "updated_at": "2022-08-24T18:48:56Z",
    "author_association": "MEMBER",
    "body": "> Wouldn't a VC that had `--enable-builder=false` request beacon blocks rather than blinded beacon blocks, so that wouldn't be an issue?\r\n\r\nI think this is true for beacon API. For prysm API, it's a single endpoint, so we don't have a great way for separation.\r\n\r\n~~Couple options~~\r\n~~1. Caller always has to register through the beacon node before the proposal (this is not ideal)~~\r\n~~2. Add a flag to the beacon node to skip the registration check~~\r\n~~3. Fix prysm validators / prysm API to have better isolations for full block and blind block (this will take a while)~~",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1225830177/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1225833899",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/11293#issuecomment-1225833899",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/11293",
    "id": 1225833899,
    "node_id": "IC_kwDOBvuov85JEL2r",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-24T14:50:54Z",
    "updated_at": "2022-08-24T14:50:54Z",
    "author_association": "MEMBER",
    "body": "The more I look at the code, I realized `ProduceBlindedBlock` really shouldn't care whether the validator is registered. I'll study how we can refactor it better. I think this is the best option",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1225833899/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
