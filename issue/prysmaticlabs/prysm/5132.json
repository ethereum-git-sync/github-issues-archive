{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/5132",
  "id": 583969964,
  "node_id": "MDU6SXNzdWU1ODM5Njk5NjQ=",
  "number": 5132,
  "title": "Allow gRPC Client Load Balancing",
  "user": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 802129907,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDc=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Help%20Wanted",
      "name": "Help Wanted",
      "color": "33aa3f",
      "default": false,
      "description": "Extra attention is needed"
    },
    {
      "id": 802129908,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDg=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Good%20First%20Issue",
      "name": "Good First Issue",
      "color": "7057ff",
      "default": false,
      "description": "Good for newcomers"
    },
    {
      "id": 1085357783,
      "node_id": "MDU6TGFiZWwxMDg1MzU3Nzgz",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Priority:%20Low",
      "name": "Priority: Low",
      "color": "26f7bd",
      "default": false,
      "description": "Low priority item"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 19,
  "created_at": "2020-03-18T20:00:21Z",
  "updated_at": "2022-11-03T12:46:07Z",
  "closed_at": "2020-09-27T18:08:29Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Currently, we do not allow a single validator to connect to multiple beacon node backends in a round robin fashion. Ideally, we should be able to do `--beacon-rpc-provider=BEACON_NODE_IP_1,BEACON_NODE_IP_2` from the validator client, but we have to do some gRPC setup for this to work. Thanks to @mcdee, this link on stackoverflow https://stackoverflow.com/questions/50293480/dial-multiple-ip-addresses-with-golang-grpc-client can help us achieve this. This is a great first issue for anyone wishing to contribute.",
  "closed_by": {
    "login": "prylabs-bulldozer[bot]",
    "id": 58059840,
    "node_id": "MDM6Qm90NTgwNTk4NDA=",
    "avatar_url": "https://avatars.githubusercontent.com/in/47372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D",
    "html_url": "https://github.com/apps/prylabs-bulldozer",
    "followers_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132/reactions",
    "total_count": 5,
    "+1": 1,
    "-1": 0,
    "laugh": 1,
    "hooray": 1,
    "confused": 1,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/600944521",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5132#issuecomment-600944521",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132",
    "id": 600944521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDk0NDUyMQ==",
    "user": {
      "login": "xrow",
      "id": 295491,
      "node_id": "MDQ6VXNlcjI5NTQ5MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/295491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xrow",
      "html_url": "https://github.com/xrow",
      "followers_url": "https://api.github.com/users/xrow/followers",
      "following_url": "https://api.github.com/users/xrow/following{/other_user}",
      "gists_url": "https://api.github.com/users/xrow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xrow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xrow/subscriptions",
      "organizations_url": "https://api.github.com/users/xrow/orgs",
      "repos_url": "https://api.github.com/users/xrow/repos",
      "events_url": "https://api.github.com/users/xrow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xrow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-19T01:49:39Z",
    "updated_at": "2020-03-19T01:50:32Z",
    "author_association": "NONE",
    "body": "Great idea....\r\n\r\nWhat would happen if you have an lb in between? Will that work?\r\n\r\n`--beacon-rpc-provider=LB_IP`\r\n\r\n```\r\nvalidator 1  ---->|                                                    |-----> beacon 1\r\n                           | ------>    Loadbalancer  ----->   |\r\nvalidator 2  ---->|                                                    | ----> beacon 2\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/600944521/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/601038738",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5132#issuecomment-601038738",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132",
    "id": 601038738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTAzODczOA==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-19T07:57:25Z",
    "updated_at": "2020-03-19T07:57:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Depends how the load balancer would work.  Safest way would be to prefer one node over another, _e.g._:\r\n\r\n  - on validator startup shuffle the list of nodes\r\n  - connect to first beacon node\r\n  - if first node fails at any point, connect to second beacon node\r\n\r\nThis could easily be extended to multiple load balancers.\r\n\r\nThere's also a question as to if the load balancer should be a separate process or baked in to the validator.  I'd be inclined to do the latter for now, unless there's a really good reason to do otherwise.  Running additional processes can be a pain, and for the initial case this is looking to solve probably overkill.\r\n\r\nThis would change your diagram to look something like:\r\n\r\n```\r\nvalidator 1  ----> Load balancer (internal) | -----> | beacon 1\r\n                                              \\    /\r\n                                               \\  /\r\n                                                X\r\n                                               / \\\r\n                                              /   \\\r\nvalidator 2  ----> Load balancer (internal) | -----> | beacon 2\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/601038738/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/601113040",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5132#issuecomment-601113040",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132",
    "id": 601113040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTExMzA0MA==",
    "user": {
      "login": "xrow",
      "id": 295491,
      "node_id": "MDQ6VXNlcjI5NTQ5MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/295491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xrow",
      "html_url": "https://github.com/xrow",
      "followers_url": "https://api.github.com/users/xrow/followers",
      "following_url": "https://api.github.com/users/xrow/following{/other_user}",
      "gists_url": "https://api.github.com/users/xrow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xrow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xrow/subscriptions",
      "organizations_url": "https://api.github.com/users/xrow/orgs",
      "repos_url": "https://api.github.com/users/xrow/repos",
      "events_url": "https://api.github.com/users/xrow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xrow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-19T10:49:47Z",
    "updated_at": "2020-03-19T10:49:47Z",
    "author_association": "NONE",
    "body": "@mcdee Thanks for your feedback. As a side note to clearify. I have much experience with cloud native so I will simulate this case for it. An internal loadbalancer in Cloud Native would be a so called Service. A service is a dns based named endpoint like \"beacon\". Behind beacon there are multiple beacon nodes. I would estimate the current implementation is therefore sufficent if a validator 1 can talk to \"beacon 1\" on the first request and to beacon 2 on the second. Is this the case?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/601113040/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/601125706",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5132#issuecomment-601125706",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132",
    "id": 601125706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTEyNTcwNg==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-19T11:21:22Z",
    "updated_at": "2020-03-19T11:21:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@xrow It is entirely possible for beacon nodes to have different states.  What I'm unsure about is if it matters for our normal validator operations when we're carrying out multiple RPC requests that could go to different beacon nodes; perhaps Raul has some thoughts on that piece.\r\n\r\nA primary/secondary configuration would certainly be safer than a round-robin configuration, but I may be worrying unnecessarily about the impact of the latter.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/601125706/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/601497874",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5132#issuecomment-601497874",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132",
    "id": 601497874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTQ5Nzg3NA==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-20T02:16:56Z",
    "updated_at": "2020-03-20T02:16:56Z",
    "author_association": "MEMBER",
    "body": "This issue is about client side load balancing. See the examples here: https://github.com/grpc/grpc-go/tree/master/examples/features/load_balancing\r\n\r\nI think this requires a bit of careful thinking. Some RPC calls will want to load balance as a failover and others will want to load balance as a \"broadcast\".\r\n\r\nHere's an example workflow:\r\n- GetAssignments (LB=Round robin or pick first, retry failed requests to other backends)\r\n- GetBlock (LB=round robin or pick first, retry failed requests to other backends)\r\n- ProposeBlock(LB=Send to all backends, any success = success)\r\n- GetAttestation(LB=round robin or pick first, retry failed requests to other backends)\r\n- ProposeAttestation(LB=Send to all backends, any success = success)\r\n\r\nThe main idea here is that we have some sort of failover redundancy from the client. Imagine you run your own node, but IF it ever went down then you fail over to some free or managed service. This would be \"pick first\" where your node is prioritized. Additionally, some requests, like publishing new data, would go to all backends to increase propagation of the new objects.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/601497874/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/601659250",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5132#issuecomment-601659250",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132",
    "id": 601659250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTY1OTI1MA==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-20T11:46:09Z",
    "updated_at": "2020-03-20T11:46:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Dynamic attestation subnets somewhat push us away from being able to carry out simple round robin, as we could send an attestation to a beacon node that isn't subscribed to the relevant subnet.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/601659250/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/601738638",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5132#issuecomment-601738638",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132",
    "id": 601738638,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTczODYzOA==",
    "user": {
      "login": "xrow",
      "id": 295491,
      "node_id": "MDQ6VXNlcjI5NTQ5MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/295491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xrow",
      "html_url": "https://github.com/xrow",
      "followers_url": "https://api.github.com/users/xrow/followers",
      "following_url": "https://api.github.com/users/xrow/following{/other_user}",
      "gists_url": "https://api.github.com/users/xrow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xrow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xrow/subscriptions",
      "organizations_url": "https://api.github.com/users/xrow/orgs",
      "repos_url": "https://api.github.com/users/xrow/repos",
      "events_url": "https://api.github.com/users/xrow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xrow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-20T14:48:00Z",
    "updated_at": "2020-03-20T14:48:00Z",
    "author_association": "NONE",
    "body": "I don't know, if this is possible from what I read or even allowed. I in general favor a model for clients to not have any LB logic. Therefore can the logik of ProposeBlock and ProposeAttestation handled by one backend talking to other backends after the inital request? Some kind of replication....",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/601738638/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/601970743",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5132#issuecomment-601970743",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132",
    "id": 601970743,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTk3MDc0Mw==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-21T01:05:53Z",
    "updated_at": "2020-03-21T01:05:53Z",
    "author_association": "MEMBER",
    "body": "Good point about the round robin strategy and attestation subnets. You have this assumption that the beacon node backends are either always connected to appropriate subnets or can quickly discover subnets for adequate and rapid propagation of unaggregated attestations. \r\n\r\nWith that said, one can imagine that some RPC calls have different strategies such as\r\n\r\n| RPC | Strategies |\r\n|--------|-------------|\r\n| GetAttestationData | Pick first or round robin, failover | \r\n| ProposeAttestation | Broadcast * Depends on subnet subscriptions * | \r\n| GetBlock | Pick first or round robin, failover |\r\n| SubmitBlock | Broadcast |\r\n| SubmitAggregateAndProof | Broadcast * Depends on subnet subscriptions * |\r\n| ProposeExit | Broadcast |\r\n| DomainData | Pick first or round robin, failover |\r\n| GetDuties | Pick first or round robin, failover * Influences subnet subsctiptions * |\r\n| ValidatorIndex | Pick first or round robin, failover | \r\n\r\nThe two RPCs that are most affected by subnet subscriptions are ProposeAttestation where the beacon node should to be connected to the specific subnet already to propagate the attestation faster and SubmitAggregateAndProof which aggregates as many of the unaggregated attestations as possible then broadcasts to a topic that everyone is subscribed to. There is no penalty or reward for inefficiently aggregated attestations from SubmitAggregateAndProof, except for the resilience of the network. Additionally, the beacon node becomes aware of which subnets to subscribe to based on GetDuties and GetAttestationData calls. These calls should stick with the \"primary\" beacon node, but are safe for failover. ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/601970743/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/602023126",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5132#issuecomment-602023126",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132",
    "id": 602023126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjAyMzEyNg==",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-21T10:14:55Z",
    "updated_at": "2020-03-21T10:14:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is starting to morph in to a more complicated beast.  Similar to the initial suggestion and diagram posted by @xrow I'm starting to wonder if an \"Ethereum 2 proxy/router\" would be a thing.  It would basically be the piece that manages peer connections and data movement.  The beacon node could stay as it is for full functionality without the router, but this would give additional features such as the varied strategies of load balancing we're discussing here.\r\n\r\nIf standalone it would also work for all clients, which would be interesting.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/602023126/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/603015537",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5132#issuecomment-603015537",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132",
    "id": 603015537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMzAxNTUzNw==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-24T04:58:03Z",
    "updated_at": "2020-03-24T04:58:03Z",
    "author_association": "MEMBER",
    "body": "There isn't much work to do here for server side load balancing. \r\n\r\nI'd still like to consider a client side load balancer, at least for failover. ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/603015537/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/603024957",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5132#issuecomment-603024957",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132",
    "id": 603024957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMzAyNDk1Nw==",
    "user": {
      "login": "xrow",
      "id": 295491,
      "node_id": "MDQ6VXNlcjI5NTQ5MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/295491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xrow",
      "html_url": "https://github.com/xrow",
      "followers_url": "https://api.github.com/users/xrow/followers",
      "following_url": "https://api.github.com/users/xrow/following{/other_user}",
      "gists_url": "https://api.github.com/users/xrow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xrow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xrow/subscriptions",
      "organizations_url": "https://api.github.com/users/xrow/orgs",
      "repos_url": "https://api.github.com/users/xrow/repos",
      "events_url": "https://api.github.com/users/xrow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xrow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-24T05:30:18Z",
    "updated_at": "2020-03-24T05:30:18Z",
    "author_association": "NONE",
    "body": "I guess is if you have implemented retry you do not need a client side load balancer. One highly available endpoint should do the trick. You can combine dns, ip, location failover via the lb. But I rather stay clam now since I don`t understand the protocol yet. Sorry :-) \r\n\r\nI am currently working on a helm chart. With that I can demo server side lb.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/603024957/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/614426363",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5132#issuecomment-614426363",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132",
    "id": 614426363,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDQyNjM2Mw==",
    "user": {
      "login": "xrow",
      "id": 295491,
      "node_id": "MDQ6VXNlcjI5NTQ5MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/295491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xrow",
      "html_url": "https://github.com/xrow",
      "followers_url": "https://api.github.com/users/xrow/followers",
      "following_url": "https://api.github.com/users/xrow/following{/other_user}",
      "gists_url": "https://api.github.com/users/xrow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xrow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xrow/subscriptions",
      "organizations_url": "https://api.github.com/users/xrow/orgs",
      "repos_url": "https://api.github.com/users/xrow/repos",
      "events_url": "https://api.github.com/users/xrow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xrow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-16T05:38:09Z",
    "updated_at": "2020-04-16T05:38:09Z",
    "author_association": "NONE",
    "body": "Are there limits for how many validators can connect to one beacon node? I saw somewhere the figure  64 or doesn`t it matter?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/614426363/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/614428594",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5132#issuecomment-614428594",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132",
    "id": 614428594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDQyODU5NA==",
    "user": {
      "login": "xrow",
      "id": 295491,
      "node_id": "MDQ6VXNlcjI5NTQ5MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/295491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xrow",
      "html_url": "https://github.com/xrow",
      "followers_url": "https://api.github.com/users/xrow/followers",
      "following_url": "https://api.github.com/users/xrow/following{/other_user}",
      "gists_url": "https://api.github.com/users/xrow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xrow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xrow/subscriptions",
      "organizations_url": "https://api.github.com/users/xrow/orgs",
      "repos_url": "https://api.github.com/users/xrow/repos",
      "events_url": "https://api.github.com/users/xrow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xrow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-16T05:46:22Z",
    "updated_at": "2020-04-16T05:46:22Z",
    "author_association": "NONE",
    "body": "Hi,\r\n\r\nI would like to see a different meaning of `--beacon-rpc-provider=BEACON_NODE_IP_1,BEACON_NODE_IP_2` . My idead that should be just used for failover and not for loadbalancing. Maybe we can implement failover frist and then lb later. The great benefit of this is we can then live without a global loadbalancer in our setups and have only local ones per DC.\r\n\r\n`--beacon-rpc-provider=BEACON_NODE_IP_1,BEACON_NODE_IP_2 --beacon-rpc-ha-type=failover`\r\nTry BEACON_NODE_IP_1 3 times if dead discard it. Then try BEACON_NODE_IP_2 3 times if dead discard it and try next again. \r\n\r\n`--beacon-rpc-provider=BEACON_NODE_IP_1,BEACON_NODE_IP_2 --beacon-rpc-ha-type=loadbalance`\r\nRound Robin without stickyness. \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/614428594/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/623539643",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5132#issuecomment-623539643",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132",
    "id": 623539643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzUzOTY0Mw==",
    "user": {
      "login": "xrow",
      "id": 295491,
      "node_id": "MDQ6VXNlcjI5NTQ5MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/295491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xrow",
      "html_url": "https://github.com/xrow",
      "followers_url": "https://api.github.com/users/xrow/followers",
      "following_url": "https://api.github.com/users/xrow/following{/other_user}",
      "gists_url": "https://api.github.com/users/xrow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xrow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xrow/subscriptions",
      "organizations_url": "https://api.github.com/users/xrow/orgs",
      "repos_url": "https://api.github.com/users/xrow/repos",
      "events_url": "https://api.github.com/users/xrow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xrow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-04T15:39:57Z",
    "updated_at": "2020-05-04T15:46:08Z",
    "author_association": "NONE",
    "body": "Hi,\r\n\r\nI wanted to report I am running now this model and didn`t notice any issues::\r\n\r\n    [validator 1] ----> \\        / ----->  [ beacon 1 ]\r\n    .                    \\      /                                    \r\n    .                     \\    /\r\n    .                Load balancer (internal)\r\n    .                      /  \\\r\n    .                     /    \\\r\n    [validator N] ---->  /      \\  ----->  [ beacon 2 ]\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/623539643/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/623565078",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5132#issuecomment-623565078",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132",
    "id": 623565078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzU2NTA3OA==",
    "user": {
      "login": "xrow",
      "id": 295491,
      "node_id": "MDQ6VXNlcjI5NTQ5MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/295491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xrow",
      "html_url": "https://github.com/xrow",
      "followers_url": "https://api.github.com/users/xrow/followers",
      "following_url": "https://api.github.com/users/xrow/following{/other_user}",
      "gists_url": "https://api.github.com/users/xrow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xrow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xrow/subscriptions",
      "organizations_url": "https://api.github.com/users/xrow/orgs",
      "repos_url": "https://api.github.com/users/xrow/repos",
      "events_url": "https://api.github.com/users/xrow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xrow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-04T16:23:58Z",
    "updated_at": "2020-05-04T16:23:58Z",
    "author_association": "NONE",
    "body": "This is the overall picture. Please send in corrections.\r\n\r\n![Overview](https://user-images.githubusercontent.com/295491/80988842-5c86c080-8e34-11ea-853b-d310e2a96d62.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/623565078/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/623632075",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5132#issuecomment-623632075",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132",
    "id": 623632075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzYzMjA3NQ==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-04T18:33:08Z",
    "updated_at": "2020-05-04T18:33:08Z",
    "author_association": "MEMBER",
    "body": "@xrow that is server side load balancing. L4 / L7 load balancing would work well for power users, but having a client side load balancer where the validator could failover to a beacon chain node running in an entirely different data center or region would be ideal for many use cases.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/623632075/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/623649795",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5132#issuecomment-623649795",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132",
    "id": 623649795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzY0OTc5NQ==",
    "user": {
      "login": "xrow",
      "id": 295491,
      "node_id": "MDQ6VXNlcjI5NTQ5MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/295491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xrow",
      "html_url": "https://github.com/xrow",
      "followers_url": "https://api.github.com/users/xrow/followers",
      "following_url": "https://api.github.com/users/xrow/following{/other_user}",
      "gists_url": "https://api.github.com/users/xrow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xrow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xrow/subscriptions",
      "organizations_url": "https://api.github.com/users/xrow/orgs",
      "repos_url": "https://api.github.com/users/xrow/repos",
      "events_url": "https://api.github.com/users/xrow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xrow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-04T19:09:08Z",
    "updated_at": "2020-05-04T19:09:25Z",
    "author_association": "NONE",
    "body": "@prestonvanloon I was thinking about moving the validators to a different datacenter if a datacenter has downtime. Though it needs some kind of election of a leader if validators pop up somewhere else. Usually the network is down in those failure events so there is no route to connect to a failover beacon node. Client side loadbalacing is still a great choise, but can`t garantee 100% uptime of the validator. So if you think about failures validators and beacon nodes may fail.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/623649795/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1301776305",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5132#issuecomment-1301776305",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132",
    "id": 1301776305,
    "node_id": "IC_kwDOBvuov85Nl4ex",
    "user": {
      "login": "nobsu",
      "id": 3723537,
      "node_id": "MDQ6VXNlcjM3MjM1Mzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3723537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nobsu",
      "html_url": "https://github.com/nobsu",
      "followers_url": "https://api.github.com/users/nobsu/followers",
      "following_url": "https://api.github.com/users/nobsu/following{/other_user}",
      "gists_url": "https://api.github.com/users/nobsu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nobsu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nobsu/subscriptions",
      "organizations_url": "https://api.github.com/users/nobsu/orgs",
      "repos_url": "https://api.github.com/users/nobsu/repos",
      "events_url": "https://api.github.com/users/nobsu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nobsu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-03T08:26:45Z",
    "updated_at": "2022-11-03T08:26:45Z",
    "author_association": "NONE",
    "body": "At present, has server-side load balancing been implemented? ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1301776305/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1302045422",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5132#issuecomment-1302045422",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5132",
    "id": 1302045422,
    "node_id": "IC_kwDOBvuov85Nm6Lu",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-03T12:46:07Z",
    "updated_at": "2022-11-03T12:46:07Z",
    "author_association": "MEMBER",
    "body": "There are solutions for proxy load balancers, yes. These solutions aren't\nspecific to Prysm as a generic gRPC proxy load balancer would work.\n\nhttps://grpc.io/blog/grpc-load-balancing/\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1302045422/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
