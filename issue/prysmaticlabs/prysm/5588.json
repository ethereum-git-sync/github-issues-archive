{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5588",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5588/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5588/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5588/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/5588",
  "id": 605383727,
  "node_id": "MDU6SXNzdWU2MDUzODM3Mjc=",
  "number": 5588,
  "title": "Do not reject peers if --p2p-max-peers is reached",
  "user": {
    "login": "q9f",
    "id": 58883403,
    "node_id": "MDQ6VXNlcjU4ODgzNDAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/58883403?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/q9f",
    "html_url": "https://github.com/q9f",
    "followers_url": "https://api.github.com/users/q9f/followers",
    "following_url": "https://api.github.com/users/q9f/following{/other_user}",
    "gists_url": "https://api.github.com/users/q9f/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/q9f/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/q9f/subscriptions",
    "organizations_url": "https://api.github.com/users/q9f/orgs",
    "repos_url": "https://api.github.com/users/q9f/repos",
    "events_url": "https://api.github.com/users/q9f/events{/privacy}",
    "received_events_url": "https://api.github.com/users/q9f/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1028320582,
      "node_id": "MDU6TGFiZWwxMDI4MzIwNTgy",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Blocked",
      "name": "Blocked",
      "color": "f3761b",
      "default": false,
      "description": "Blocked by research or external factors"
    },
    {
      "id": 1500585773,
      "node_id": "MDU6TGFiZWwxNTAwNTg1Nzcz",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Networking",
      "name": "Networking",
      "color": "c7a5f7",
      "default": false,
      "description": "P2P related items"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2020-04-23T09:31:58Z",
  "updated_at": "2020-06-10T00:22:46Z",
  "closed_at": "2020-06-10T00:22:46Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# ðŸ’Ž Issue\r\n\r\n### Background\r\n\r\nI would suggest that `--p2p-max-peers` should be a soft limit, not a hard limit.\r\n\r\n### Description\r\n In ETH1 clients, we do something along the lines:\r\n- if `peerCount < maxPeers`: do active peer-discovery and accept incoming peers\r\n- if `peerCount >= maxPeers`: don't do active peer-discovery but still accept incoming peers\r\n\r\nThe way you could implement these limits could be along the notion of `--p2p-min-peers` and `--p2p-max-peers` where min-peers would be the soft limit, e.g., 30 peer target, and max-peers would be a hard limit.\r\n\r\nSo, the client would try to maintain 30 peers but not reject incoming peers up to a more strictly defined hard cap. Additionally, after reaching the hard limit, it would be nice to send a Goobye to inform the peer why they were kicked.\r\n",
  "closed_by": {
    "login": "prylabs-bulldozer[bot]",
    "id": 58059840,
    "node_id": "MDM6Qm90NTgwNTk4NDA=",
    "avatar_url": "https://avatars.githubusercontent.com/in/47372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D",
    "html_url": "https://github.com/apps/prylabs-bulldozer",
    "followers_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5588/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5588/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/618293812",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5588#issuecomment-618293812",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5588",
    "id": 618293812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODI5MzgxMg==",
    "user": {
      "login": "q9f",
      "id": 58883403,
      "node_id": "MDQ6VXNlcjU4ODgzNDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/58883403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/q9f",
      "html_url": "https://github.com/q9f",
      "followers_url": "https://api.github.com/users/q9f/followers",
      "following_url": "https://api.github.com/users/q9f/following{/other_user}",
      "gists_url": "https://api.github.com/users/q9f/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/q9f/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/q9f/subscriptions",
      "organizations_url": "https://api.github.com/users/q9f/orgs",
      "repos_url": "https://api.github.com/users/q9f/repos",
      "events_url": "https://api.github.com/users/q9f/events{/privacy}",
      "received_events_url": "https://api.github.com/users/q9f/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-23T09:33:07Z",
    "updated_at": "2020-04-23T09:33:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is what a Lighthouse peer observes once a Prysm node reached the max peers limit:\r\n\r\n```\r\nApr 23 11:07:56.026 WARN RPC Error                               Error: Custom(\"Protocol error: I/O error: unexpected end of file\"), request_id: 0, Peer: PeerId(\"16Uiu2HAm5RX4gAQtwqArBmuuGugUXAViKaKBx6ugDJb1L1RFcpfK\"), service: router, service: network\r\nApr 23 11:07:56.405 WARN RPC Error                               Error: Custom(\"Protocol error: I/O error: i/o error: Connection reset by peer (os error 104)\"), request_id: 0, Peer: PeerId(\"16Uiu2HAmSu8PFJfvCj2WYdEpikMRYLiNQHR3aXHa1D9dRx5vVnyU\"), service: router, service: network\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/618293812/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/618666674",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5588#issuecomment-618666674",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5588",
    "id": 618666674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODY2NjY3NA==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-23T20:58:38Z",
    "updated_at": "2020-04-23T20:58:38Z",
    "author_association": "MEMBER",
    "body": "Wouldnâ€™t that open up an attack vector? I could create thousands of nodes and your node would peer with all of them if they all dialed you? Your node would be overwhelmed with resource consumption. \r\n\r\nWith regards to disabling active discovery, I donâ€™t think this functionality is available in libp2p configuration so we havenâ€™t taken the time to add it upstream yet. cc: @nisdas ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/618666674/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/618852481",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5588#issuecomment-618852481",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5588",
    "id": 618852481,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODg1MjQ4MQ==",
    "user": {
      "login": "q9f",
      "id": 58883403,
      "node_id": "MDQ6VXNlcjU4ODgzNDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/58883403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/q9f",
      "html_url": "https://github.com/q9f",
      "followers_url": "https://api.github.com/users/q9f/followers",
      "following_url": "https://api.github.com/users/q9f/following{/other_user}",
      "gists_url": "https://api.github.com/users/q9f/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/q9f/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/q9f/subscriptions",
      "organizations_url": "https://api.github.com/users/q9f/orgs",
      "repos_url": "https://api.github.com/users/q9f/repos",
      "events_url": "https://api.github.com/users/q9f/events{/privacy}",
      "received_events_url": "https://api.github.com/users/q9f/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-24T07:29:38Z",
    "updated_at": "2020-04-24T07:29:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I could create thousands of nodes and your node would peer with all of them if they all dialed you?\r\n\r\nNo, we discussed this on discord and I'm sorry for using the terms in a confusing way. Actually, `max-peers` would not change, it would be a hard limit, e.g, 60 peers. Every incoming request beyond that limit would kindly be sent home with a \"Goodbye\". #5589 \r\n\r\nBut internally, there could be a soft-limit in place, let's call it `min-peers` and you can decide if you want to make it configurable or just derive the value from the `max-peers` value, i.e., by using 50% or 70% of `max-peers` as soft-limit. This would mean that you stop actively looking for new peers at the soft limit of 30 peers but still accept incoming connections.\r\n\r\nThe very theoretical worst-case scenario we discussed: Imagine a network with 31 nodes all connected to each other. How would a 32nd node be able to join the network if all disconnect immediately.\r\n\r\nAnd the more practical scenario we encountered: Trying to setup some local testnet nodes and manually connecting two local nodes kept failing due to the prysm node quickly filling up all 30 peer slots.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/618852481/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/618897470",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5588#issuecomment-618897470",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5588",
    "id": 618897470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODg5NzQ3MA==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-24T09:09:22Z",
    "updated_at": "2020-04-24T09:12:42Z",
    "author_association": "MEMBER",
    "body": "@prestonvanloon This would be possible with discoveryV5, it would actually be very simple so its not such a big issue. The only place we can't do this is when using kad dht, but since that is not a part of mainnet discovery spec we can ignore it. \r\n\r\nI think this is possible to achieve using libp2p's connection manager. Its just that we disabled using it before as our nodes were getting overwhelmed from a large number of peers. We needed a strict peer limit so that our nodes did not get exhausted which the connection manager did not provide. However we have had a lot of improvements to prysm and it is able to handle a larger number of peers much more easily now.  \r\n\r\nWhat the connection manager does is that it manages peers between a `low` and `high` watermark .The low watermark would be your `max peer limit` whereas your `high` watermark would be a value of upto 125% of your `max peer limit`. This will allow inbound peers to connect to with a peer at its `max limit` and not be disconnected. The connection manager will slowly prune excess peers to bring it down to the 'low' watermark. Essentially keeping the peers connected between these 2 limits.\r\n\r\nThis is in theory how the connection manager should work, however we did face a lot of issues using libp2p's connection manager in prysm. Which is why we opened issues here: \r\nhttps://github.com/libp2p/go-libp2p-core/pull/99\r\nhttps://github.com/libp2p/go-libp2p-swarm/pull/146\r\n\r\nWe did not have any way to deny active discovery using kademlia-dht in prysm previously which was our main problem, however with discoveryV5 it is much more simple to implement.  Two potential solutions to resolve this:\r\n\r\n1) Use the connection manager again to primarily handles connections with other peers instead of enforcing a hard limit. \r\n2) In the event libp2p's connection manager is difficult to use again for us, we implement a simplified version of it specifically for prysm. ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/618897470/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/618956644",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/5588#issuecomment-618956644",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/5588",
    "id": 618956644,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODk1NjY0NA==",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-24T11:29:28Z",
    "updated_at": "2020-04-24T11:29:28Z",
    "author_association": "MEMBER",
    "body": "To give an update, I tried running libp2p's connection manager with a `max limit` of 20 with a high watermark of `25` , the number of peers connected ended up ballooning to over 100... \r\n\r\nSo the connection manager is pretty much ineffective here and does not do active pruning very well. or at all for that matter. Any solution would have to be with a custom connection manager which would manage peers dynamically without any static hard limit.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/618956644/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
