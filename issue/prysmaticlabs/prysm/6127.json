{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6127",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6127/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6127/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6127/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/6127",
  "id": 630827333,
  "node_id": "MDU6SXNzdWU2MzA4MjczMzM=",
  "number": 6127,
  "title": "[bug/fuzzing] \"panic: runtime error: nil pointer dereference\" when processing ProposerSlashing",
  "user": {
    "login": "pventuzelo",
    "id": 9038181,
    "node_id": "MDQ6VXNlcjkwMzgxODE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9038181?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pventuzelo",
    "html_url": "https://github.com/pventuzelo",
    "followers_url": "https://api.github.com/users/pventuzelo/followers",
    "following_url": "https://api.github.com/users/pventuzelo/following{/other_user}",
    "gists_url": "https://api.github.com/users/pventuzelo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pventuzelo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pventuzelo/subscriptions",
    "organizations_url": "https://api.github.com/users/pventuzelo/orgs",
    "repos_url": "https://api.github.com/users/pventuzelo/repos",
    "events_url": "https://api.github.com/users/pventuzelo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pventuzelo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 802129904,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDQ=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Bug",
      "name": "Bug",
      "color": "ee0701",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 802129907,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDc=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Help%20Wanted",
      "name": "Help Wanted",
      "color": "33aa3f",
      "default": false,
      "description": "Extra attention is needed"
    },
    {
      "id": 802129908,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDg=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Good%20First%20Issue",
      "name": "Good First Issue",
      "color": "7057ff",
      "default": false,
      "description": "Good for newcomers"
    },
    {
      "id": 1911375983,
      "node_id": "MDU6TGFiZWwxOTExMzc1OTgz",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Fuzz",
      "name": "Fuzz",
      "color": "be40e5",
      "default": false,
      "description": "Anything fuzz testing related!"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2020-06-04T13:31:00Z",
  "updated_at": "2020-06-11T17:38:04Z",
  "closed_at": "2020-06-11T17:38:04Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# üêû Bug Report\r\n\r\n### Description\r\n\r\nDuring fuzzing with [beaconfuzz](https://github.com/sigp/beacon-fuzz), I found the following bug:\r\n\r\nwhat: `panic: runtime error: invalid memory address or nil pointer dereference`\r\nwhere: in `prysm`\r\nhow: triggered during `ProposerSlashing` processing.\r\n\r\nThe bug is happening mainly in `VerifyProposerSlashing` function.\r\n\r\n\r\nHere is some supposition:\r\nhttps://github.com/prysmaticlabs/prysm/blob/a0bf8cba523ea08c8d1c199ffce5a7821f789a06/beacon-chain/core/blocks/block_operations.go#L426-L432\r\n\r\n- line 426: `proposer` will be `nil` after the call to `ValidatorAtIndexReadOnly`\r\n- line 430: `IsSlashableValidatorUsingTrie` is called with proposer\r\n\r\nhttps://github.com/prysmaticlabs/prysm/blob/9a1157465e9205fbec4026299faf058b8b3bad98/beacon-chain/core/helpers/validators.go#L50-L51\r\n\r\n- line 51: `IsSlashableValidatorUsingTrie` will execute `val.Slashed()` (`val` == `proposer`)\r\n\r\nhttps://github.com/prysmaticlabs/prysm/blob/6a9112bfaede08454815a262b733b930f3cf4e22/beacon-chain/state/getters.go#L76-L79\r\n\r\n- line 78: `Slashed` try to dereference `v.validator` without having verify that `v` and `v.validator` are not `nil`\r\n\r\n\r\n## üî• Error\r\n\r\nDownload: [panic_nil_deref_prysm_proposer.zip](https://github.com/prysmaticlabs/prysm/files/4730325/panic_nil_deref_prysm_proposer.zip)\r\n\r\n\r\n``` sh\r\n./prysm_FuzzProposerSlashing2.libfuzzer panic_nil_deref_prysm_proposer.ssz\r\nINFO: Seed: 1287398888\r\n./prysm_FuzzProposerSlashing2.libfuzzer: Running 1 inputs 1 time(s) each.\r\nRunning: panic_nil_deref_prysm_proposer.ssz\r\n\r\npanic: runtime error: invalid memory address or nil pointer dereference\r\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x38 pc=0x11d0360]\r\n\r\ngoroutine 17 [running, locked to thread]:\r\ngithub.com/prysmaticlabs/prysm/beacon-chain/state.(*ReadOnlyValidator).Slashed(...)\r\n\tgithub.com/prysmaticlabs/prysm/beacon-chain/state/getters.go:78\r\ngithub.com/prysmaticlabs/prysm/beacon-chain/core/helpers.IsSlashableValidatorUsingTrie(...)\r\n\tgithub.com/prysmaticlabs/prysm/beacon-chain/core/helpers/validators.go:51\r\ngithub.com/prysmaticlabs/prysm/beacon-chain/core/blocks.VerifyProposerSlashing(0x10c000802f50, 0x10c0000edd50, 0x16, 0x10c000038fe0)\r\n\tgithub.com/prysmaticlabs/prysm/beacon-chain/core/blocks/block_operations.go:430 +0x400\r\ngithub.com/prysmaticlabs/prysm/beacon-chain/core/blocks.ProcessProposerSlashings(0x18344c0, 0x10c000138030, 0x10c000802f50, 0x10c0000edd80, 0x0, 0x0, 0x0)\r\n\tgithub.com/prysmaticlabs/prysm/beacon-chain/core/blocks/block_operations.go:396 +0x102\r\ngithub.com/prysmaticlabs/prysm.FuzzProposerSlashing(0x603000001900, 0x20, 0x20, 0x0)\r\n\tgithub.com/prysmaticlabs/prysm/fuzz.go:223 +0x1c5\r\nmain.LLVMFuzzerTestOneInput(...)\r\n\tcommand-line-arguments/main.132452089.go:21\r\nmain._cgoexpwrap_b2568cfea483_LLVMFuzzerTestOneInput(0x603000001900, 0x20, 0x5ed8ef0e)\r\n\t_cgo_gotypes.go:53 +0x56\r\n\r\n```\r\n\r\n## üî¨ Minimal Reproduction\r\n\r\nI can only reproduce the bug running my fuzzer with the previous crashing ssz file.\r\nMaybe you will succeed to reproduce with your fuzzers as well.\r\n\r\nFuzzing function:\r\n``` go\r\nfunc FuzzProposerSlashing(b []byte) int {\r\n\tparams.UseMainnetConfig()\r\n\tdata := &ethpb.ProposerSlashing{}\r\n\tif err := data.UnmarshalSSZ(b); err != nil {\r\n\t\treturn 0\r\n\t}\r\n\t// get a valid beaconstate\r\n\tst := getbeaconstate()\r\n\ts, err := stateTrie.InitializeFromProto(st)\r\n\tif err != nil {\r\n\t\t// should never happen\r\n\t\tpanic(\"stateTrie InitializeFromProto\")\r\n\t}\r\n\t// process the container\r\n\tpost, err := blocks.ProcessProposerSlashings(context.Background(), s, &ethpb.BeaconBlockBody{ProposerSlashings: []*ethpb.ProposerSlashing{data}})\r\n\tif err != nil {\r\n\t\treturn 0\r\n\t}\r\n\tif post == nil {\r\n\t\treturn 0\r\n\t}\r\n\treturn 1\r\n}\r\n```\r\n\r\nI have nevertheless fix the bug (with the following patch) and the fuzzer is not crashing anymore.\r\n\r\n\r\n## Patch \r\n\r\nA simple fix consist to check if `v` and `v.validator` are `nil` like in `WithdrawableEpoch()` and `ExitEpoch()` functions.\r\n\r\n``` go\r\n\r\n// Slashed returns the read only validator is slashed.\r\nfunc (v *ReadOnlyValidator) Slashed() bool {\r\n\tif v == nil || v.validator == nil {\r\n\t\treturn false\r\n\t}\r\n\treturn v.validator.Slashed\r\n}\r\n```\r\ninstead of: https://github.com/prysmaticlabs/prysm/blob/6a9112bfaede08454815a262b733b930f3cf4e22/beacon-chain/state/getters.go#L77-L79\r\n\r\n## üåç  Your Environment\r\n\r\n**Operating System:**\r\n\r\nOS: Ubuntu 18.04\r\nGo: Go 1.14\r\n\r\n**What version of Prysm are you running? (Which release)**\r\n\r\nmaster\r\ncommit: d152b4881576b53665ec67aa9968bb8c9d0a1660",
  "closed_by": {
    "login": "prylabs-bulldozer[bot]",
    "id": 58059840,
    "node_id": "MDM6Qm90NTgwNTk4NDA=",
    "avatar_url": "https://avatars.githubusercontent.com/in/47372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D",
    "html_url": "https://github.com/apps/prylabs-bulldozer",
    "followers_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6127/reactions",
    "total_count": 2,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6127/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/641922760",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/6127#issuecomment-641922760",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6127",
    "id": 641922760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTkyMjc2MA==",
    "user": {
      "login": "farazdagi",
      "id": 188194,
      "node_id": "MDQ6VXNlcjE4ODE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/188194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/farazdagi",
      "html_url": "https://github.com/farazdagi",
      "followers_url": "https://api.github.com/users/farazdagi/followers",
      "following_url": "https://api.github.com/users/farazdagi/following{/other_user}",
      "gists_url": "https://api.github.com/users/farazdagi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/farazdagi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/farazdagi/subscriptions",
      "organizations_url": "https://api.github.com/users/farazdagi/orgs",
      "repos_url": "https://api.github.com/users/farazdagi/repos",
      "events_url": "https://api.github.com/users/farazdagi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/farazdagi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-10T10:51:08Z",
    "updated_at": "2020-06-10T10:51:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pventuzelo thank you for such a detailed report. \r\nAs you already have a patch, will you be willing to open a PR, resolving the issue?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/641922760/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/641989776",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/6127#issuecomment-641989776",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/6127",
    "id": 641989776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTk4OTc3Ng==",
    "user": {
      "login": "pventuzelo",
      "id": 9038181,
      "node_id": "MDQ6VXNlcjkwMzgxODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9038181?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pventuzelo",
      "html_url": "https://github.com/pventuzelo",
      "followers_url": "https://api.github.com/users/pventuzelo/followers",
      "following_url": "https://api.github.com/users/pventuzelo/following{/other_user}",
      "gists_url": "https://api.github.com/users/pventuzelo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pventuzelo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pventuzelo/subscriptions",
      "organizations_url": "https://api.github.com/users/pventuzelo/orgs",
      "repos_url": "https://api.github.com/users/pventuzelo/repos",
      "events_url": "https://api.github.com/users/pventuzelo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pventuzelo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-10T12:59:21Z",
    "updated_at": "2020-06-10T12:59:21Z",
    "author_association": "NONE",
    "body": "Hi @farazdagi,\r\n\r\nThanks for the proposal but I prefer to let you choose how to fix this since it is dependent of the business logic.\r\n\r\nMy fix was just for testing to verify that the nil pointer deref was coming from this function. It's not taking care if this function should actually return false in that case, or if you should verify `v` and `v.validator` in the caller function.\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/641989776/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
