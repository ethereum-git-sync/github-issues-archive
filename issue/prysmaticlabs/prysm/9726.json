{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9726",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9726/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9726/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9726/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/9726",
  "id": 1014883681,
  "node_id": "I_kwDOBvuov848feVh",
  "number": 9726,
  "title": "Earning Query Endpoints",
  "user": {
    "login": "nyunyunyunyu",
    "id": 7581883,
    "node_id": "MDQ6VXNlcjc1ODE4ODM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7581883?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nyunyunyunyu",
    "html_url": "https://github.com/nyunyunyunyu",
    "followers_url": "https://api.github.com/users/nyunyunyunyu/followers",
    "following_url": "https://api.github.com/users/nyunyunyunyu/following{/other_user}",
    "gists_url": "https://api.github.com/users/nyunyunyunyu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nyunyunyunyu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nyunyunyunyu/subscriptions",
    "organizations_url": "https://api.github.com/users/nyunyunyunyu/orgs",
    "repos_url": "https://api.github.com/users/nyunyunyunyu/repos",
    "events_url": "https://api.github.com/users/nyunyunyunyu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nyunyunyunyu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 802129906,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDY=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Enhancement",
      "name": "Enhancement",
      "color": "84b6eb",
      "default": false,
      "description": "New feature or request"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2021-10-04T08:28:33Z",
  "updated_at": "2022-02-01T23:13:21Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "<!--💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎\r\n\r\nHellooo! 😄 \r\n\r\nTo help us tend to your issue faster, please search our currently open issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎💎-->\r\n\r\n# 🚀 Feature Request\r\n\r\n### Description\r\n\r\n<!-- ✍️--> A clear and concise description of the problem or missing capability...\r\n\r\nWe need features to:\r\n\r\n1. Query validators' actual earning and expected earning if the validator runs perfectly for a given epoch.\r\n2. Query all active and unslashed validators' average leakage rate(1-\\<actual earning\\>/\\<expected earning if the validator runs perfectly\\>) for a given epoch.\r\n\r\n#### Why?\r\nWhat do Validator runners care most? I think it's the profitability of their validators. To evaluate validator profitability, we need the metrics above. With the numbers, we can calculate the leakage rate of our validators in some time windows(e.g. 7/30/90 days). The leakage rate can tell how far our validates are from perfect.  and compare it with the average leakage rate. Then we can know if our validators' profitability is better than average or not and how much we earn more/less than average.\r\n\r\n#### Can we use existing APIs to do it?\r\nIndeed, there is a RPC endpoint, GetIndividualVotes which can tell if a validator made correct source/target/head votes, the inclusion distance of the validator's vote and other numbers impact earning calculation. But if users want to know how much a validator exactly earns by attesting/proposing a slot for a given epoch, they need to learn the complex rewards/penalties formulas inside ETH2 protocol and write lots of extra analysis codes. Since Prysm has already implemented the complex ETH2 economic, it would great if we can expose them to users then validator runners don't have to reinvent wheels. \r\n\r\n\r\n### Describe the solution you'd like\r\n\r\n<!-- ✍️--> If you have a solution in mind, please describe it.\r\nFor 1., we can put the logic into [GetIndividualVotes](https://github.com/prysmaticlabs/prysm/blob/f7845afa575963302116e673d400d2ab421252ac/proto/prysm/v1alpha1/beacon_chain.proto#L282).\r\n\r\nFor 2., we can put the logic into [GetValidatorParticipation](https://github.com/prysmaticlabs/prysm/blob/f7845afa575963302116e673d400d2ab421252ac/proto/prysm/v1alpha1/beacon_chain.proto#L247).\r\n\r\n### Describe alternatives you've considered\r\n\r\n<!-- ✍️--> Have you considered any alternative solutions or workarounds?\r\nMaybe some explorers can provide these features. But I think economic is a part of ETH2 so Node clients are supposed to have these features. ",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9726/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9726/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
