{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/11102",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/11102/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/11102/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/11102/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/11102",
  "id": 1317939872,
  "node_id": "I_kwDOBvuov85Ojiqg",
  "number": 11102,
  "title": "validator_failed_proposals apears only after first failed proposal",
  "user": {
    "login": "ghost",
    "id": 10137,
    "node_id": "MDQ6VXNlcjEwMTM3",
    "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ghost",
    "html_url": "https://github.com/ghost",
    "followers_url": "https://api.github.com/users/ghost/followers",
    "following_url": "https://api.github.com/users/ghost/following{/other_user}",
    "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
    "organizations_url": "https://api.github.com/users/ghost/orgs",
    "repos_url": "https://api.github.com/users/ghost/repos",
    "events_url": "https://api.github.com/users/ghost/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ghost/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2022-07-26T09:12:53Z",
  "updated_at": "2023-12-01T13:13:50Z",
  "closed_at": "2022-08-03T00:36:03Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# ðŸ’Ž Issue\r\n\r\n### Background\r\n\r\nI found out that `validator_failed_proposals` only appears after first fail, and it's hard to write an alert rule for that\r\n\r\n### Description\r\n\r\nThis `validator_failed_proposals` metric appears only after the first failed proposal, so `validator_failed_proposals` immediately starts showing `1` value\r\n![image](https://user-images.githubusercontent.com/87700053/180966468-f1254ea2-4dac-48c7-9682-51e666996330.png)\r\n\r\nThis is a problem because it's hard to write an alert exactly for the first fail. For others, it's elementary: we can use simple rate like `rate(validator_failed_proposals{...}[X])>0` but it skips the first one.\r\n\r\nWe need to set `0` for this metric from the start.\r\n\r\n",
  "closed_by": {
    "login": "nisdas",
    "id": 33201827,
    "node_id": "MDQ6VXNlcjMzMjAxODI3",
    "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nisdas",
    "html_url": "https://github.com/nisdas",
    "followers_url": "https://api.github.com/users/nisdas/followers",
    "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
    "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
    "organizations_url": "https://api.github.com/users/nisdas/orgs",
    "repos_url": "https://api.github.com/users/nisdas/repos",
    "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nisdas/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/11102/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/11102/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1195362782",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/11102#issuecomment-1195362782",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/11102",
    "id": 1195362782,
    "node_id": "IC_kwDOBvuov85HP8ne",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-26T11:30:12Z",
    "updated_at": "2022-07-26T11:30:12Z",
    "author_association": "MEMBER",
    "body": "Would it work if you used `absent()`? Or maybe `absent_over_time()`\r\n\r\nhttps://prometheus.io/docs/prometheus/latest/querying/functions/#absent\r\n\r\nI think it would be like `rate(absent(validator_failed_proposals{...}[X]))>0`\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1195362782/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1195452066",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/11102#issuecomment-1195452066",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/11102",
    "id": 1195452066,
    "node_id": "IC_kwDOBvuov85HQSai",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-26T13:00:34Z",
    "updated_at": "2022-07-26T13:00:34Z",
    "author_association": "NONE",
    "body": "I tried to use `absent` and `vector(0)` to trick that but unsuccessful.\r\nThe problem this absent is totally opposite to our problem: it exists only before first appear of metrics,  so it also can't be used in `rate` in that way.\r\n![image](https://user-images.githubusercontent.com/87700053/181010572-c949ebfe-a7ec-42ca-8eee-a6ec800e3a1f.png)\r\n ",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1195452066/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1195482411",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/11102#issuecomment-1195482411",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/11102",
    "id": 1195482411,
    "node_id": "IC_kwDOBvuov85HQZ0r",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-26T13:25:55Z",
    "updated_at": "2022-07-26T13:25:55Z",
    "author_association": "MEMBER",
    "body": "I see, maybe something like this?\r\n```\r\nrate(validator_failed_proposals{pubkey=\"...\"}[5m]) OR on() vector(0)\r\n```\r\n\r\nThat should show zero until the rate is available. Is this what you tried already?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1195482411/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1195561740",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/11102#issuecomment-1195561740",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/11102",
    "id": 1195561740,
    "node_id": "IC_kwDOBvuov85HQtMM",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-26T14:31:26Z",
    "updated_at": "2022-07-26T14:40:27Z",
    "author_association": "NONE",
    "body": "Unfortunately, no (it was my first attempt to resolve this issue).\r\nProblem here that at first appearance rate will be 0 because start metric value is '1':\r\n![image](https://user-images.githubusercontent.com/87700053/181029125-68e40999-e870-4643-9d4e-3640dae2b99e.png)\r\nSo, all expression value will be 0 in this situation:\r\n![image](https://user-images.githubusercontent.com/87700053/181030440-59668aca-9e65-4102-b852-e9b30a0c05da.png)\r\n\r\nIn general, we need to detect two events:\r\n* changes of `validator_failed_proposals` \r\n* first appearance of  `validator_failed_proposals` valid for some **finite time** \r\n\r\nFirst one we can do straightforward: `rate(validator_failed_proposals{...}[X])>0` which will be **valid for X window**, so we will receive alert only once.\r\nBut the second one is hard to do for finite time. We could just use something like `validator_failed_proposals{}==1` for detecting first appearance, but it will be valid until second failed block proposal, and it could take a long, long time. So, we will have a long time valid alert, and it's not a good thing.\r\n\r\nAnd the problem is exactly in detecting first appearance, I have no idea how to detect it for some X window.\r\n\r\nAnyway, setting this metric to 0 from start reduce detection problem to only one: catch changes on metric, it's simple and convenient \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1195561740/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1199010466",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/11102#issuecomment-1199010466",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/11102",
    "id": 1199010466,
    "node_id": "IC_kwDOBvuov85Hd3Ki",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-29T08:23:04Z",
    "updated_at": "2022-07-29T08:23:04Z",
    "author_association": "MEMBER",
    "body": "Thanks for the detailed response. I am hesitant to preemptively set these metrics to zero as that creates unnecessary additional influxDB ingestion/storage. As I understand it, you are trying to achieve alerts that fire on failed block proposals. There are some limitations to PromQL and alerting for this type of use case. \r\n\r\nEither your alert will fire for a long time or for only a moment. \r\n\r\n- `rate(validator_failed_proposals{pubkey=\"...\"}[5m]) > 0`  will fire for about 5 minutes then resolve itself. \r\n- `rate(validator_failed_proposals{pubkey=\"...\"}[24h]) > 0` will fire for longer, 24h, but you wouldn't receive further alerts in that time period if multiple proposals failed.\r\n\r\nIn any case, I believe that the missing metrics can be solved with the appropriate promQL statements. However, I question the usefulness of setting up alerts based on rate or delta of this metric with just PromQL and grafana. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1199010466/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1199033895",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/11102#issuecomment-1199033895",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/11102",
    "id": 1199033895,
    "node_id": "IC_kwDOBvuov85Hd84n",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-29T08:50:30Z",
    "updated_at": "2022-07-29T08:50:30Z",
    "author_association": "NONE",
    "body": "Hello!\r\nAfter two days of trying, I found how we can detect this first appearance of failed block proposal:\r\n```\r\n(validator_failed_proposals{...} unless validator_failed_proposals{...} offset X) == 1\r\n```\r\n![image](https://user-images.githubusercontent.com/87700053/181719147-e46d7679-9d02-4a27-9c58-41f03ae630ad.png)\r\n\r\nIn general, we just shift the same metric to X in timeline and remove it after that time using `unless` operator. It's a little tricky, but it works.\r\n\r\nSo, the result statement will be looking like that:\r\n```\r\n(validator_failed_proposals{...} unless validator_failed_proposals{...} offset X) == 1\r\nor rate(validator_failed_proposals{...}[X]) > 0\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1199033895/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1203351759",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/11102#issuecomment-1203351759",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/11102",
    "id": 1203351759,
    "node_id": "IC_kwDOBvuov85HubDP",
    "user": {
      "login": "nisdas",
      "id": 33201827,
      "node_id": "MDQ6VXNlcjMzMjAxODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33201827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nisdas",
      "html_url": "https://github.com/nisdas",
      "followers_url": "https://api.github.com/users/nisdas/followers",
      "following_url": "https://api.github.com/users/nisdas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nisdas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nisdas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nisdas/subscriptions",
      "organizations_url": "https://api.github.com/users/nisdas/orgs",
      "repos_url": "https://api.github.com/users/nisdas/repos",
      "events_url": "https://api.github.com/users/nisdas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nisdas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-03T00:36:02Z",
    "updated_at": "2022-08-03T00:36:02Z",
    "author_association": "MEMBER",
    "body": "Closing this issue as it appears resolved.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1203351759/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1836100220",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/11102#issuecomment-1836100220",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/11102",
    "id": 1836100220,
    "node_id": "IC_kwDOBvuov85tcKp8",
    "user": {
      "login": "thevops",
      "id": 23660445,
      "node_id": "MDQ6VXNlcjIzNjYwNDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23660445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thevops",
      "html_url": "https://github.com/thevops",
      "followers_url": "https://api.github.com/users/thevops/followers",
      "following_url": "https://api.github.com/users/thevops/following{/other_user}",
      "gists_url": "https://api.github.com/users/thevops/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thevops/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thevops/subscriptions",
      "organizations_url": "https://api.github.com/users/thevops/orgs",
      "repos_url": "https://api.github.com/users/thevops/repos",
      "events_url": "https://api.github.com/users/thevops/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thevops/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-01T13:13:49Z",
    "updated_at": "2023-12-01T13:13:49Z",
    "author_association": "NONE",
    "body": "Why a validator doesn't show this metric unless occurs? Is there any advantage of that approach?\r\n\r\nIn my opinion, such an approach makes it more difficult to create e.g. a Grafana dashboard or alerts. Working on non-existing metrics leads to overcomplicated queries for monitoring systems.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/1836100220/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
