{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9851",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9851/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9851/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9851/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/9851",
  "id": 1044056606,
  "node_id": "I_kwDOBvuov84-Owoe",
  "number": 9851,
  "title": "nil value for beacondb .State() method when root == params.BeaconConfig().ZeroHash",
  "user": {
    "login": "kasey",
    "id": 489222,
    "node_id": "MDQ6VXNlcjQ4OTIyMg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/489222?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kasey",
    "html_url": "https://github.com/kasey",
    "followers_url": "https://api.github.com/users/kasey/followers",
    "following_url": "https://api.github.com/users/kasey/following{/other_user}",
    "gists_url": "https://api.github.com/users/kasey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kasey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kasey/subscriptions",
    "organizations_url": "https://api.github.com/users/kasey/orgs",
    "repos_url": "https://api.github.com/users/kasey/repos",
    "events_url": "https://api.github.com/users/kasey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kasey/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "kasey",
    "id": 489222,
    "node_id": "MDQ6VXNlcjQ4OTIyMg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/489222?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kasey",
    "html_url": "https://github.com/kasey",
    "followers_url": "https://api.github.com/users/kasey/followers",
    "following_url": "https://api.github.com/users/kasey/following{/other_user}",
    "gists_url": "https://api.github.com/users/kasey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kasey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kasey/subscriptions",
    "organizations_url": "https://api.github.com/users/kasey/orgs",
    "repos_url": "https://api.github.com/users/kasey/repos",
    "events_url": "https://api.github.com/users/kasey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kasey/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "kasey",
      "id": 489222,
      "node_id": "MDQ6VXNlcjQ4OTIyMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/489222?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kasey",
      "html_url": "https://github.com/kasey",
      "followers_url": "https://api.github.com/users/kasey/followers",
      "following_url": "https://api.github.com/users/kasey/following{/other_user}",
      "gists_url": "https://api.github.com/users/kasey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kasey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kasey/subscriptions",
      "organizations_url": "https://api.github.com/users/kasey/orgs",
      "repos_url": "https://api.github.com/users/kasey/repos",
      "events_url": "https://api.github.com/users/kasey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kasey/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2021-11-03T19:55:21Z",
  "updated_at": "2021-11-05T18:14:37Z",
  "closed_at": "2021-11-05T18:14:37Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "# üêû Bug Report\r\n\r\n### Description\r\n\r\nThe stategen.StateManager interface defines methods to retrieve the state by root for initial sync and during regular block syncing, `StateByRoot` and `StateByRootInitialSync`. These methods both have identical logic to check if the zero root is being requested and retrieve the state from the database in that case. This happens in interop / when truly starting from genesis (not using initial sync) before the justified/finalized checkpoints have been set to roots beyond the genesis block's parent root. So in practice this is not a common problem, but the code is logically incorrect, as demonstrated by a simple program running against the database of a synced beacon node db:\r\n```\r\npackage main\r\n\r\nimport (\r\n        \"context\"\r\n\r\n        log \"github.com/sirupsen/logrus\"\r\n\r\n        \"github.com/prysmaticlabs/prysm/beacon-chain/db/kv\"\r\n        \"github.com/prysmaticlabs/prysm/config/params\"\r\n)\r\n\r\nfunc main() {\r\n        path := \"/var/lib/prysm/prater\"\r\n        ctx := context.Background()\r\n        db, err := kv.NewKVStore(ctx, path, &kv.Config{})\r\n\r\n        if err != nil {\r\n                log.Fatalf(\"error calling NewKVStore, err=%v\", err)\r\n        }\r\n        state, err := db.State(ctx, params.BeaconConfig().ZeroHash)\r\n        if err != nil {\r\n                log.Fatalf(\"error calling State() method on db, err=%v\", err)\r\n        }\r\n        if state == nil || state.IsNil() {\r\n                log.Fatalf(\"got nil state from db.State\")\r\n        }\r\n        log.Info(\"%#x\", state.FinalizedCheckpoint().Root)\r\n}\r\n```\r\n```\r\n$ go run main.go\r\nFATA[0000] got nil state from db.State                  \r\nexit status 1\r\n```\r\n\r\nHowever the state can be fetched as expected using the beacondb `GenesisState` method. Suggested solution is to change `StateByRoot`/`StateByRootInitialSync` to use this method when the zero root is detected, in place of attempting to fetch the state via the zero root.\r\n\r\n### Has this worked before in a previous version?\r\n\r\nunclear, it seems that this bug likely only occurs in edge cases, and it may be the case that something in the interop set up prevents it from happening.\r\n\r\n## üî¨ Minimal Reproduction\r\n\r\nrun the program above\r\n\r\n## üî• Error\r\n```\r\n$ go run main.go\r\nFATA[0000] got nil state from db.State                  \r\nexit status 1\r\n```\r\n\r\n**What version of Prysm are you running? (Which release)**\r\n\r\ncurrent develop branch",
  "closed_by": {
    "login": "prylabs-bulldozer[bot]",
    "id": 58059840,
    "node_id": "MDM6Qm90NTgwNTk4NDA=",
    "avatar_url": "https://avatars.githubusercontent.com/in/47372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D",
    "html_url": "https://github.com/apps/prylabs-bulldozer",
    "followers_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9851/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/9851/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[

]
