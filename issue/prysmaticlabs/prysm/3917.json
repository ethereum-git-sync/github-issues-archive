{
  "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/3917",
  "repository_url": "https://api.github.com/repos/prysmaticlabs/prysm",
  "labels_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/3917/labels{/name}",
  "comments_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/3917/comments",
  "events_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/3917/events",
  "html_url": "https://github.com/prysmaticlabs/prysm/issues/3917",
  "id": 517203529,
  "node_id": "MDU6SXNzdWU1MTcyMDM1Mjk=",
  "number": 3917,
  "title": "Implement RPC Endpoint to Retrieve Current Config Parameters",
  "user": {
    "login": "rauljordan",
    "id": 5572669,
    "node_id": "MDQ6VXNlcjU1NzI2Njk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rauljordan",
    "html_url": "https://github.com/rauljordan",
    "followers_url": "https://api.github.com/users/rauljordan/followers",
    "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
    "organizations_url": "https://api.github.com/users/rauljordan/orgs",
    "repos_url": "https://api.github.com/users/rauljordan/repos",
    "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rauljordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 802129906,
      "node_id": "MDU6TGFiZWw4MDIxMjk5MDY=",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Enhancement",
      "name": "Enhancement",
      "color": "84b6eb",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1085357783,
      "node_id": "MDU6TGFiZWwxMDg1MzU3Nzgz",
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/labels/Priority:%20Low",
      "name": "Priority: Low",
      "color": "26f7bd",
      "default": false,
      "description": "Low priority item"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2019-11-04T14:51:38Z",
  "updated_at": "2020-02-04T05:28:36Z",
  "closed_at": "2020-02-04T05:28:36Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Feature request from our users in our discord server: having a nice way to retrieve current chain configuration parameters via an RPC endpoint would be very useful to understand what sort of of node one is talking to.",
  "closed_by": {
    "login": "prylabs-bulldozer[bot]",
    "id": 58059840,
    "node_id": "MDM6Qm90NTgwNTk4NDA=",
    "avatar_url": "https://avatars.githubusercontent.com/in/47372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D",
    "html_url": "https://github.com/apps/prylabs-bulldozer",
    "followers_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/prylabs-bulldozer%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/3917/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/3917/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/549447232",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/3917#issuecomment-549447232",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/3917",
    "id": 549447232,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTQ0NzIzMg==",
    "user": {
      "login": "mkinney",
      "id": 2219838,
      "node_id": "MDQ6VXNlcjIyMTk4Mzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2219838?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkinney",
      "html_url": "https://github.com/mkinney",
      "followers_url": "https://api.github.com/users/mkinney/followers",
      "following_url": "https://api.github.com/users/mkinney/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkinney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkinney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkinney/subscriptions",
      "organizations_url": "https://api.github.com/users/mkinney/orgs",
      "repos_url": "https://api.github.com/users/mkinney/repos",
      "events_url": "https://api.github.com/users/mkinney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkinney/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-04T16:56:09Z",
    "updated_at": "2019-11-04T16:56:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "What info?\r\n\r\n1. Any exposed endpoints? (rpc, gRPC, health check, swagger, etc.)\r\n\r\n2. Anything from BeaconConfig?\r\n\r\n(list is derived from the command `find . -type f -name \\*.go -exec grep -o \"params.BeaconConfig()\\.[A-Za-z]*\" {} \\; | sort | uniq`)\r\n\r\nparams.BeaconConfig().ActivationExitDelay\r\nparams.BeaconConfig().BLSPubkeyLength\r\nparams.BeaconConfig().BLSWithdrawalPrefixByte\r\nparams.BeaconConfig().BaseRewardFactor\r\nparams.BeaconConfig().BaseRewardsPerEpoch\r\nparams.BeaconConfig().ChurnLimitQuotient\r\nparams.BeaconConfig().DefaultBufferSize\r\nparams.BeaconConfig().DefaultPageSize\r\nparams.BeaconConfig().DepositContractTreeDepth\r\nparams.BeaconConfig().DomainAttestation\r\nparams.BeaconConfig().DomainBeaconProposer\r\nparams.BeaconConfig().DomainDeposit\r\nparams.BeaconConfig().DomainRandao\r\nparams.BeaconConfig().DomainTransfer\r\nparams.BeaconConfig().DomainVoluntaryExit\r\nparams.BeaconConfig().EffectiveBalanceIncrement\r\nparams.BeaconConfig().EjectionBalance\r\nparams.BeaconConfig().EmptySignature\r\nparams.BeaconConfig().EpochsPerHistoricalVector\r\nparams.BeaconConfig().EpochsPerSlashingsVector\r\nparams.BeaconConfig().Eth\r\nparams.BeaconConfig().FarFutureEpoch\r\nparams.BeaconConfig().GenesisForkVersion\r\nparams.BeaconConfig().GoerliBlockTime\r\nparams.BeaconConfig().GweiPerEth\r\nparams.BeaconConfig().HistoricalRootsLimit\r\nparams.BeaconConfig().InactivityPenaltyQuotient\r\nparams.BeaconConfig().LogBlockDelay\r\nparams.BeaconConfig().MaxAttestations\r\nparams.BeaconConfig().MaxAttesterSlashings\r\nparams.BeaconConfig().MaxDeposits\r\nparams.BeaconConfig().MaxEffectiveBalance\r\nparams.BeaconConfig().MaxEpochsPerCrosslink\r\nparams.BeaconConfig().MaxPageSize\r\nparams.BeaconConfig().MaxProposerSlashings\r\nparams.BeaconConfig().MaxTransfers\r\nparams.BeaconConfig().MaxValidatorsPerCommittee\r\nparams.BeaconConfig().MaxVoluntaryExits\r\nparams.BeaconConfig().MinAttestationInclusionDelay\r\nparams.BeaconConfig().MinDepositAmount\r\nparams.BeaconConfig().MinEpochsToInactivityPenalty\r\nparams.BeaconConfig().MinGenesisActiveValidatorCount\r\nparams.BeaconConfig().MinGenesisTime\r\nparams.BeaconConfig().MinPerEpochChurnLimit\r\nparams.BeaconConfig().MinSeedLookahead\r\nparams.BeaconConfig().MinSlashingPenaltyQuotient\r\nparams.BeaconConfig().MinValidatorWithdrawabilityDelay\r\nparams.BeaconConfig().PersistentCommitteePeriod\r\nparams.BeaconConfig().ProposerRewardQuotient\r\nparams.BeaconConfig().PruneSlasherStoragePeriod\r\nparams.BeaconConfig().RPCSyncCheck\r\nparams.BeaconConfig().SecondsPerDay\r\nparams.BeaconConfig().SecondsPerSlot\r\nparams.BeaconConfig().ShardCount\r\nparams.BeaconConfig().ShuffleRoundCount\r\nparams.BeaconConfig().SlotsPerEpoch\r\nparams.BeaconConfig().SlotsPerEth\r\nparams.BeaconConfig().SlotsPerHistoricalRoot\r\nparams.BeaconConfig().TargetCommitteeSize\r\nparams.BeaconConfig().TestnetContractEndpoint\r\nparams.BeaconConfig().ValidatorPrivkeyFileName\r\nparams.BeaconConfig().ValidatorRegistryLimit\r\nparams.BeaconConfig().WeakSubjectivityPeriod\r\nparams.BeaconConfig().WhistleBlowerRewardQuotient\r\nparams.BeaconConfig().WithdrawalPrivkeyFileName\r\nparams.BeaconConfig().ZeroHash\r\n\r\n3. Anything from beaconState?\r\n\r\n(list is derived from: `find . -type f -name \\*.go -exec grep -o \"beaconState\\.[A-Za-z]*\" {} \\; | sort | uniq`)\r\n\r\nbeaconState.Balances\r\nbeaconState.BlockRoots\r\nbeaconState.CurrentCrosslinks\r\nbeaconState.CurrentEpochAttestations\r\nbeaconState.CurrentJustifiedCheckpoint\r\nbeaconState.Eth\r\nbeaconState.FinalizedCheckpoint\r\nbeaconState.Fork\r\nbeaconState.GenesisTime\r\nbeaconState.LatestBlockHeader\r\nbeaconState.PreviousCrosslinks\r\nbeaconState.PreviousEpochAttestations\r\nbeaconState.PreviousJustifiedCheckpoint\r\nbeaconState.RandaoMixes\r\nbeaconState.Slashings\r\nbeaconState.Slot\r\nbeaconState.StartShard\r\nbeaconState.Validators\r\n\r\n4. Anything else?\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/549447232/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/549474163",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/3917#issuecomment-549474163",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/3917",
    "id": 549474163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTQ3NDE2Mw==",
    "user": {
      "login": "mkinney",
      "id": 2219838,
      "node_id": "MDQ6VXNlcjIyMTk4Mzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2219838?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkinney",
      "html_url": "https://github.com/mkinney",
      "followers_url": "https://api.github.com/users/mkinney/followers",
      "following_url": "https://api.github.com/users/mkinney/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkinney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkinney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkinney/subscriptions",
      "organizations_url": "https://api.github.com/users/mkinney/orgs",
      "repos_url": "https://api.github.com/users/mkinney/repos",
      "events_url": "https://api.github.com/users/mkinney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkinney/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-04T18:00:26Z",
    "updated_at": "2019-11-04T18:00:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Any info on how to use/generate using protoc-gen-gogo?",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/549474163/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/549478518",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/3917#issuecomment-549478518",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/3917",
    "id": 549478518,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTQ3ODUxOA==",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-04T18:10:55Z",
    "updated_at": "2019-11-04T18:10:55Z",
    "author_association": "MEMBER",
    "body": "@mkinney just beacon chain config, not the beacon state",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/549478518/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/549549000",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/3917#issuecomment-549549000",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/3917",
    "id": 549549000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTU0OTAwMA==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-04T21:11:44Z",
    "updated_at": "2019-11-04T21:11:44Z",
    "author_association": "MEMBER",
    "body": "IMO this can be a gRPC message that is a map of all properties in the beacon config.\r\n\r\n```protobuf\r\n\r\n...\r\nrpc GetBeaconConfig(google.protobuf.Empty) returns (BeaconConfig);\r\n...\r\n\r\nmessage BeaconConfig {\r\n  map<string, Any> config = 1;\r\n}\r\n```\r\n\r\nThis would be easier than defining the beacon config as a full message. \r\nI'm not sure what the use cases are here.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/549549000/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/549641551",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/3917#issuecomment-549641551",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/3917",
    "id": 549641551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTY0MTU1MQ==",
    "user": {
      "login": "mkinney",
      "id": 2219838,
      "node_id": "MDQ6VXNlcjIyMTk4Mzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2219838?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkinney",
      "html_url": "https://github.com/mkinney",
      "followers_url": "https://api.github.com/users/mkinney/followers",
      "following_url": "https://api.github.com/users/mkinney/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkinney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkinney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkinney/subscriptions",
      "organizations_url": "https://api.github.com/users/mkinney/orgs",
      "repos_url": "https://api.github.com/users/mkinney/repos",
      "events_url": "https://api.github.com/users/mkinney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkinney/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-05T02:56:44Z",
    "updated_at": "2019-11-05T02:56:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry for my ignorance. I've been doing a bit of learning about google's protobuf stuff today. I see that the go-go stuff has reflection, so, yeah, this may be much easier than I thought it'd be. (if you know what you're doing)\r\n\r\nI think this came up in the `ethereum-api` channel:\r\n> Maybe it would be nice to have endpoint to fetch current config params? \r\n\r\nand\r\n\r\n> can you get the slots /epoch from the api somehow? otherwise  it needs to be specified for any deployment using the api, depending on network, so having an endpoint with the current epoch still seems worthwhile so you can get it programatically\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/549641551/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/549648794",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/3917#issuecomment-549648794",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/3917",
    "id": 549648794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTY0ODc5NA==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-05T03:34:57Z",
    "updated_at": "2019-11-05T03:34:57Z",
    "author_association": "MEMBER",
    "body": "For the config params, i'm suggesting a lazy way of returning generic map of the config params. \r\n\r\nFor the current slot / epoch, you can get the genesis time and determine that from the current clock time.",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/549648794/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/576367701",
    "html_url": "https://github.com/prysmaticlabs/prysm/issues/3917#issuecomment-576367701",
    "issue_url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/3917",
    "id": 576367701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NjM2NzcwMQ==",
    "user": {
      "login": "rauljordan",
      "id": 5572669,
      "node_id": "MDQ6VXNlcjU1NzI2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5572669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauljordan",
      "html_url": "https://github.com/rauljordan",
      "followers_url": "https://api.github.com/users/rauljordan/followers",
      "following_url": "https://api.github.com/users/rauljordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauljordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauljordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauljordan/subscriptions",
      "organizations_url": "https://api.github.com/users/rauljordan/orgs",
      "repos_url": "https://api.github.com/users/rauljordan/repos",
      "events_url": "https://api.github.com/users/rauljordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauljordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-20T17:22:05Z",
    "updated_at": "2020-01-20T17:22:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Agree with the lazy approach instead of specifying all of the config values as a message, will follow that approach",
    "reactions": {
      "url": "https://api.github.com/repos/prysmaticlabs/prysm/issues/comments/576367701/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
