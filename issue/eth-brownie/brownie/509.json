{
  "url": "https://api.github.com/repos/eth-brownie/brownie/issues/509",
  "repository_url": "https://api.github.com/repos/eth-brownie/brownie",
  "labels_url": "https://api.github.com/repos/eth-brownie/brownie/issues/509/labels{/name}",
  "comments_url": "https://api.github.com/repos/eth-brownie/brownie/issues/509/comments",
  "events_url": "https://api.github.com/repos/eth-brownie/brownie/issues/509/events",
  "html_url": "https://github.com/eth-brownie/brownie/issues/509",
  "id": 615209066,
  "node_id": "MDU6SXNzdWU2MTUyMDkwNjY=",
  "number": 509,
  "title": "Improvements to state machines",
  "user": {
    "login": "iamdefinitelyahuman",
    "id": 35276322,
    "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
    "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/iamdefinitelyahuman",
    "html_url": "https://github.com/iamdefinitelyahuman",
    "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
    "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
    "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
    "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
    "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
    "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1553727370,
      "node_id": "MDU6TGFiZWwxNTUzNzI3Mzcw",
      "url": "https://api.github.com/repos/eth-brownie/brownie/labels/Discussion",
      "name": "Discussion",
      "color": "555555",
      "default": false,
      "description": "Under discussion - not yet ready for implementation"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 15,
  "created_at": "2020-05-09T16:14:17Z",
  "updated_at": "2021-10-05T21:34:02Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Overview\r\nImprove the design of Brownie state machines.\r\n\r\nThis is a work in progress, if you have any ideas feel free to leave them as comments or reach out on Gitter.\r\n\r\n### Specification\r\n\r\n* Eliminate the need for an `__init__` method. Handling this as a classmethod is confusing and unintuitive. Replace it with an optional `setup_first` classmethod that achieves the same functionality (runs once prior to the snapshot).\r\n* Eliminate the need for a test that launches the state machine. Convert the `state_machine` fixture to a decorator which accepts pytest fixtures to be made available in the test.\r\n* Along with injecting strategies as arguments for rules and invariants, also inject pytest fixtures.\r\n\r\n\r\n### Example\r\nThis is a condensed version of the example state machine given in the [documentation](https://eth-brownie.readthedocs.io/en/stable/tests-hypothesis-stateful.html#basic-example):\r\n```python\r\nclass OldStateMachine:\r\n\r\n    value = strategy('uint256', max_value=\"1 ether\")\r\n    address = strategy('address')\r\n\r\n    def __init__(cls, accounts, Depositer):\r\n        # deploy the contract at the start of the test\r\n        cls.accounts = accounts\r\n        cls.contract = Depositer.deploy({'from': accounts[0]})\r\n\r\n    def setup(self):\r\n        # zero the deposit amounts at the start of each test run\r\n        self.deposits = {i: 0 for i in self.accounts}\r\n\r\n    def rule_deposit(self, address, value):\r\n        # make a deposit and adjust the local record\r\n        self.contract.deposit_for(address, {'from': self.accounts[0], 'value': value})\r\n        self.deposits[address] += value\r\n\r\n    def invariant(self):\r\n        # compare the contract deposit amounts with the local record\r\n        for address, amount in self.deposits.items():\r\n            assert self.contract.deposited(address) == amount\r\n\r\ndef test_stateful(Depositer, accounts, state_machine):\r\n    state_machine(OldStateMachine, accounts, Depositer)\r\n```\r\n\r\nHere is the same state machine, rewritten with the proposed new functionality:\r\n\r\n```python\r\n@state_machine(Depositor, accounts)\r\nclass NewStateMachine:\r\n\r\n    value = strategy('uint256', max_value=\"1 ether\")\r\n    address = strategy('address')\r\n\r\n    def setup_first(cls, accounts, Depositer):\r\n        # deploy the contract at the start of the test\r\n        cls.contract = Depositer.deploy({'from': accounts[0]})\r\n\r\n    def setup(self, accounts):\r\n        # zero the deposit amounts at the start of each test run\r\n        self.deposits = {i: 0 for i in accounts}\r\n\r\n    def rule_deposit(self, accounts, address, value):\r\n        # make a deposit and adjust the local record\r\n        self.contract.deposit_for(address, {'from': accounts[0], 'value': value})\r\n        self.deposits[address] += value\r\n\r\n    def invariant(self):\r\n        # compare the contract deposit amounts with the local record\r\n        for address, amount in self.deposits.items():\r\n            assert self.contract.deposited(address) == amount\r\n```\r\n\r\n### Dependencies\r\nBreaking change. Can happen as a part of `v2.0.0`. Also, this means plenty of time to bikeshed about the design :smile: ",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/509/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/eth-brownie/brownie/issues/509/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/626270657",
    "html_url": "https://github.com/eth-brownie/brownie/issues/509#issuecomment-626270657",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/509",
    "id": 626270657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjI3MDY1Nw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-10T04:13:18Z",
    "updated_at": "2020-05-10T04:13:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "`setup_first` is a bad name for explaining what it does. How about `create_snapshot`?",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/626270657/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/626270758",
    "html_url": "https://github.com/eth-brownie/brownie/issues/509#issuecomment-626270758",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/509",
    "id": 626270758,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjI3MDc1OA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-10T04:14:32Z",
    "updated_at": "2020-05-10T04:14:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also, injecting the fixtures is pretty magical. Is it all the fixtures that are available, or only the ones I pull in via my test case where I initialized it?",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/626270758/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/626332597",
    "html_url": "https://github.com/eth-brownie/brownie/issues/509#issuecomment-626332597",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/509",
    "id": 626332597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjMzMjU5Nw==",
    "user": {
      "login": "iamdefinitelyahuman",
      "id": 35276322,
      "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdefinitelyahuman",
      "html_url": "https://github.com/iamdefinitelyahuman",
      "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
      "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
      "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
      "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-10T14:00:23Z",
    "updated_at": "2020-05-10T14:00:23Z",
    "author_association": "MEMBER",
    "body": "It's magical, but it's the same magic that we're used to dealing with via pytest.  In my mind it moves the structure closer to that of writing a normal test.\r\n\r\nIt would have to be limited to the fixtures that were requested in the test case...  I don't think I'm able to grab a fixture outside of the local namespace of the test.",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/626332597/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/626340349",
    "html_url": "https://github.com/eth-brownie/brownie/issues/509#issuecomment-626340349",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/509",
    "id": 626340349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjM0MDM0OQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-10T14:53:50Z",
    "updated_at": "2020-05-10T14:53:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I don't think I'm able to grab a fixture outside of the local namespace of the test.\r\n\r\nHow do you think pytest knows about fixtures in the first place?",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/626340349/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/626398568",
    "html_url": "https://github.com/eth-brownie/brownie/issues/509#issuecomment-626398568",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/509",
    "id": 626398568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjM5ODU2OA==",
    "user": {
      "login": "iamdefinitelyahuman",
      "id": 35276322,
      "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdefinitelyahuman",
      "html_url": "https://github.com/iamdefinitelyahuman",
      "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
      "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
      "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
      "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-10T22:21:42Z",
    "updated_at": "2020-05-10T22:21:42Z",
    "author_association": "MEMBER",
    "body": "Per gitter convo: maybe do away with the need to have a `test_stateful` at all, and instead use a class decorator to indicate a state machine. The fixtures can be given as input args to the decorator:\r\n\r\n```python\r\n@state_machine(Depositor, accounts)\r\nclass NewStateMachine:\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/626398568/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/626684575",
    "html_url": "https://github.com/eth-brownie/brownie/issues/509#issuecomment-626684575",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/509",
    "id": 626684575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjY4NDU3NQ==",
    "user": {
      "login": "iamdefinitelyahuman",
      "id": 35276322,
      "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdefinitelyahuman",
      "html_url": "https://github.com/iamdefinitelyahuman",
      "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
      "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
      "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
      "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-11T12:56:32Z",
    "updated_at": "2020-05-11T12:56:32Z",
    "author_association": "MEMBER",
    "body": "> `setup_first` is a bad name for explaining what it does. How about `create_snapshot`?\r\n\r\nI thought `setup_first` to mirror the `teardown` and `teardown_final` methods (which maybe should be included in the example).\r\n\r\nPerhaps...\r\n\r\n* `initial_setup`\r\n* `setup`\r\n* `teardown`\r\n* `final_teardown`",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/626684575/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/626774245",
    "html_url": "https://github.com/eth-brownie/brownie/issues/509#issuecomment-626774245",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/509",
    "id": 626774245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjc3NDI0NQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-11T15:26:30Z",
    "updated_at": "2020-05-11T15:26:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "What about:\r\n* `create_snapshot`\r\n* `setup_case`\r\n* `teardown_case`\r\n* `revert_snapshot`\r\n\r\nPros:\r\n1. Creates a delineation between `snapshot`s (happens once) vs. `case`s (happens `N` times)\r\n2. Doesn't confuse the purposes of the two functions (one deploys smart contracts, the other deals with internal state)",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/626774245/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/630379169",
    "html_url": "https://github.com/eth-brownie/brownie/issues/509#issuecomment-630379169",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/509",
    "id": 630379169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDM3OTE2OQ==",
    "user": {
      "login": "iamdefinitelyahuman",
      "id": 35276322,
      "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdefinitelyahuman",
      "html_url": "https://github.com/iamdefinitelyahuman",
      "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
      "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
      "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
      "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-18T19:04:30Z",
    "updated_at": "2020-05-18T19:04:30Z",
    "author_association": "MEMBER",
    "body": "Related - it should be possible to selectively disable coverage analysis during a stateful test.  Either on a per rule/invariant basis, or a broad \"disable during invariants\".",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/630379169/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/633011371",
    "html_url": "https://github.com/eth-brownie/brownie/issues/509#issuecomment-633011371",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/509",
    "id": 633011371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMzAxMTM3MQ==",
    "user": {
      "login": "iamdefinitelyahuman",
      "id": 35276322,
      "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdefinitelyahuman",
      "html_url": "https://github.com/iamdefinitelyahuman",
      "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
      "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
      "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
      "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-23T09:07:50Z",
    "updated_at": "2020-05-23T09:07:50Z",
    "author_association": "MEMBER",
    "body": "Also related - add support for `@precondition`: https://hypothesis.readthedocs.io/en/latest/stateful.html#preconditions\r\n\r\nNot sure where this fits in with the given syntax, it might still make the most sense as a decorator.",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/633011371/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/635620502",
    "html_url": "https://github.com/eth-brownie/brownie/issues/509#issuecomment-635620502",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/509",
    "id": 635620502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTYyMDUwMg==",
    "user": {
      "login": "iamdefinitelyahuman",
      "id": 35276322,
      "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdefinitelyahuman",
      "html_url": "https://github.com/iamdefinitelyahuman",
      "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
      "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
      "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
      "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-28T21:34:04Z",
    "updated_at": "2020-05-28T21:35:17Z",
    "author_association": "MEMBER",
    "body": "Would also be useful to allow a rule to have a \"weight\", i.e. making a specific rule twice as likely to run as the others.\r\n\r\nOr a sort-of hybrid invariant/rule that executes after every rule but prior to the invariants",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/635620502/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/635632097",
    "html_url": "https://github.com/eth-brownie/brownie/issues/509#issuecomment-635632097",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/509",
    "id": 635632097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTYzMjA5Nw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-28T22:02:54Z",
    "updated_at": "2020-05-28T22:02:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was just looking at this:\r\nhttps://hypothesis.readthedocs.io/en/latest/stateful.html#hypothesis.stateful.consumes",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/635632097/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/636854800",
    "html_url": "https://github.com/eth-brownie/brownie/issues/509#issuecomment-636854800",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/509",
    "id": 636854800,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNjg1NDgwMA==",
    "user": {
      "login": "iamdefinitelyahuman",
      "id": 35276322,
      "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdefinitelyahuman",
      "html_url": "https://github.com/iamdefinitelyahuman",
      "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
      "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
      "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
      "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-01T13:15:43Z",
    "updated_at": "2020-06-01T20:23:55Z",
    "author_association": "MEMBER",
    "body": "~It should be possible to use strategies within the `setup_case` method.~\r\n\r\nIt should be possible to create a type of `initialize` rule that accepts strategies and _always_ executes, _always_ prior to any rules. This should be seperate from `setup_case` - an unhandled exception during `setup_case` indicates a failure in the state machine itself.",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/636854800/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/664050852",
    "html_url": "https://github.com/eth-brownie/brownie/issues/509#issuecomment-664050852",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/509",
    "id": 664050852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NDA1MDg1Mg==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-26T22:55:37Z",
    "updated_at": "2020-07-26T22:55:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "The ability to feature strategies based on state of a StateMachine:\r\n\r\n```python\r\nclass StateMachine:\r\n    st_account = strategy(\"accounts\")\r\n    st_amount = strategy(\"uint256\", stateful_exclude=lambda val, self: val < self.token.totalSupply())\r\n\r\n...\r\n    def rule_mint(self, a=\"st_account\", val=\"st_amount\"):\r\n         self.token.mint(a, val)\r\n\r\n    def rule_transfer(self, a1=\"st_account\", a2=\"st_account\", val=\"st_amount\"):\r\n         self.token.transfer(a2, val, {\"from\": a1})\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/664050852/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/664101302",
    "html_url": "https://github.com/eth-brownie/brownie/issues/509#issuecomment-664101302",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/509",
    "id": 664101302,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NDEwMTMwMg==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-27T03:35:13Z",
    "updated_at": "2020-07-27T03:35:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Allow printing something only when an invariant is violated (maybe some `StateMachine.display` function that executes when a falsifying example is found for each step along the way)",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/664101302/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/934878330",
    "html_url": "https://github.com/eth-brownie/brownie/issues/509#issuecomment-934878330",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/509",
    "id": 934878330,
    "node_id": "IC_kwDOCUsNcc43uRx6",
    "user": {
      "login": "nazariyv",
      "id": 13678461,
      "node_id": "MDQ6VXNlcjEzNjc4NDYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/13678461?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nazariyv",
      "html_url": "https://github.com/nazariyv",
      "followers_url": "https://api.github.com/users/nazariyv/followers",
      "following_url": "https://api.github.com/users/nazariyv/following{/other_user}",
      "gists_url": "https://api.github.com/users/nazariyv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nazariyv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nazariyv/subscriptions",
      "organizations_url": "https://api.github.com/users/nazariyv/orgs",
      "repos_url": "https://api.github.com/users/nazariyv/repos",
      "events_url": "https://api.github.com/users/nazariyv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nazariyv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-05T21:34:02Z",
    "updated_at": "2021-10-05T21:34:02Z",
    "author_association": "NONE",
    "body": "Stumbled on this issue by reading hypothesis docs and finding `precondition` and thinking it would be nifty to have that in brownie. Right now, I am hardcoding the conditions when the rule is allowed to fire in the body of the rule of the function, which must be wrong. I imagine `@precondition` in hypothesis is used to better guide the rule firing.",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/934878330/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
