{
  "url": "https://api.github.com/repos/eth-brownie/brownie/issues/1108",
  "repository_url": "https://api.github.com/repos/eth-brownie/brownie",
  "labels_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1108/labels{/name}",
  "comments_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1108/comments",
  "events_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1108/events",
  "html_url": "https://github.com/eth-brownie/brownie/issues/1108",
  "id": 912956784,
  "node_id": "MDU6SXNzdWU5MTI5NTY3ODQ=",
  "number": 1108,
  "title": "Handle new error types for solidity 0.8.4",
  "user": {
    "login": "BlinkyStitt",
    "id": 624221,
    "node_id": "MDQ6VXNlcjYyNDIyMQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/624221?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/BlinkyStitt",
    "html_url": "https://github.com/BlinkyStitt",
    "followers_url": "https://api.github.com/users/BlinkyStitt/followers",
    "following_url": "https://api.github.com/users/BlinkyStitt/following{/other_user}",
    "gists_url": "https://api.github.com/users/BlinkyStitt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/BlinkyStitt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/BlinkyStitt/subscriptions",
    "organizations_url": "https://api.github.com/users/BlinkyStitt/orgs",
    "repos_url": "https://api.github.com/users/BlinkyStitt/repos",
    "events_url": "https://api.github.com/users/BlinkyStitt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/BlinkyStitt/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/eth-brownie/brownie/milestones/13",
    "html_url": "https://github.com/eth-brownie/brownie/milestone/13",
    "labels_url": "https://api.github.com/repos/eth-brownie/brownie/milestones/13/labels",
    "id": 6870201,
    "node_id": "MDk6TWlsZXN0b25lNjg3MDIwMQ==",
    "number": 13,
    "title": "Brownie 1.15.0",
    "description": "Issues to complete for the next minor release.",
    "creator": {
      "login": "iamdefinitelyahuman",
      "id": 35276322,
      "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdefinitelyahuman",
      "html_url": "https://github.com/iamdefinitelyahuman",
      "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
      "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
      "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
      "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 3,
    "closed_issues": 9,
    "state": "open",
    "created_at": "2021-06-19T10:37:20Z",
    "updated_at": "2024-01-31T00:14:21Z",
    "due_on": null,
    "closed_at": null
  },
  "comments": 10,
  "created_at": "2021-06-06T21:49:19Z",
  "updated_at": "2024-01-31T00:14:21Z",
  "closed_at": "2024-01-31T00:14:21Z",
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "https://blog.soliditylang.org/2021/04/21/custom-errors/\r\n\r\nThis post has some example ethers js code that should be a decent guide.",
  "closed_by": {
    "login": "iamdefinitelyahuman",
    "id": 35276322,
    "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
    "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/iamdefinitelyahuman",
    "html_url": "https://github.com/iamdefinitelyahuman",
    "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
    "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
    "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
    "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
    "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
    "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/1108/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1108/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/886986789",
    "html_url": "https://github.com/eth-brownie/brownie/issues/1108#issuecomment-886986789",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1108",
    "id": 886986789,
    "node_id": "IC_kwDOCUsNcc403lgl",
    "user": {
      "login": "iamdefinitelyahuman",
      "id": 35276322,
      "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdefinitelyahuman",
      "html_url": "https://github.com/iamdefinitelyahuman",
      "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
      "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
      "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
      "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-26T20:01:32Z",
    "updated_at": "2021-07-26T20:01:32Z",
    "author_association": "MEMBER",
    "body": "Was this fixed in #1110 ?",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/886986789/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/898954105",
    "html_url": "https://github.com/eth-brownie/brownie/issues/1108#issuecomment-898954105",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1108",
    "id": 898954105,
    "node_id": "IC_kwDOCUsNcc41lPN5",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-14T20:12:33Z",
    "updated_at": "2021-08-14T20:12:33Z",
    "author_association": "NONE",
    "body": "I think that #1110 made Brownie not crash on them but did not add any way to parse the info out of them and display it to the user.",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/898954105/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/924194014",
    "html_url": "https://github.com/eth-brownie/brownie/issues/1108#issuecomment-924194014",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1108",
    "id": 924194014,
    "node_id": "IC_kwDOCUsNcc43FhTe",
    "user": {
      "login": "julianmrodri",
      "id": 56316686,
      "node_id": "MDQ6VXNlcjU2MzE2Njg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/56316686?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/julianmrodri",
      "html_url": "https://github.com/julianmrodri",
      "followers_url": "https://api.github.com/users/julianmrodri/followers",
      "following_url": "https://api.github.com/users/julianmrodri/following{/other_user}",
      "gists_url": "https://api.github.com/users/julianmrodri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/julianmrodri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/julianmrodri/subscriptions",
      "organizations_url": "https://api.github.com/users/julianmrodri/orgs",
      "repos_url": "https://api.github.com/users/julianmrodri/repos",
      "events_url": "https://api.github.com/users/julianmrodri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/julianmrodri/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-21T17:19:01Z",
    "updated_at": "2021-09-21T17:19:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "HI, im having trouble parsing custom errors in my tests. Im using solc `0.8.4` and I get the following error when trying to parse the revert reason. Is there a plan to support this in the short term? Should I be using the `brownie.reverts` in a different way? Thanks!\r\n\r\n```\r\n  with brownie.reverts(\"CustomErrorMessage()\"):\r\n        token.issue(mintAmount, {'from': owner})\r\n```       \r\nI get this error:\r\n```\r\n - AssertionError: Unexpected revert string 'typed error: 0xd9a6bff9'\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/924194014/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/937579874",
    "html_url": "https://github.com/eth-brownie/brownie/issues/1108#issuecomment-937579874",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1108",
    "id": 937579874,
    "node_id": "IC_kwDOCUsNcc434lVi",
    "user": {
      "login": "tfalencar",
      "id": 4054009,
      "node_id": "MDQ6VXNlcjQwNTQwMDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4054009?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tfalencar",
      "html_url": "https://github.com/tfalencar",
      "followers_url": "https://api.github.com/users/tfalencar/followers",
      "following_url": "https://api.github.com/users/tfalencar/following{/other_user}",
      "gists_url": "https://api.github.com/users/tfalencar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tfalencar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tfalencar/subscriptions",
      "organizations_url": "https://api.github.com/users/tfalencar/orgs",
      "repos_url": "https://api.github.com/users/tfalencar/repos",
      "events_url": "https://api.github.com/users/tfalencar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tfalencar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-07T08:40:47Z",
    "updated_at": "2021-10-07T08:40:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 for this feature. It's been almost 2 years that solidity announced Catch for custom error types: https://blog.ethereum.org/2020/01/29/solidity-0.6-try-catch/ \r\nso who knows when this will actually land. Might as well bite the bullet and do the parsing on brownie itself.\r\nThe existing helper with // dev: in brownie has been one of the decisive factors to choose brownie, so extending this for having support for custom errors is highly valuable IMO.",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/937579874/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/937741398",
    "html_url": "https://github.com/eth-brownie/brownie/issues/1108#issuecomment-937741398",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1108",
    "id": 937741398,
    "node_id": "IC_kwDOCUsNcc435MxW",
    "user": {
      "login": "julianmrodri",
      "id": 56316686,
      "node_id": "MDQ6VXNlcjU2MzE2Njg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/56316686?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/julianmrodri",
      "html_url": "https://github.com/julianmrodri",
      "followers_url": "https://api.github.com/users/julianmrodri/followers",
      "following_url": "https://api.github.com/users/julianmrodri/following{/other_user}",
      "gists_url": "https://api.github.com/users/julianmrodri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/julianmrodri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/julianmrodri/subscriptions",
      "organizations_url": "https://api.github.com/users/julianmrodri/orgs",
      "repos_url": "https://api.github.com/users/julianmrodri/repos",
      "events_url": "https://api.github.com/users/julianmrodri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/julianmrodri/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-07T12:24:07Z",
    "updated_at": "2021-10-07T12:24:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Worth to mention I found this workaround to check for custom errors in tests. Replace `YourCustomError()` with the actual error you expect to throw.\r\n\r\n```\r\n  errMsg = web3.keccak(text='YourCustomError()')[:4].hex()  \r\n  \r\n  with brownie.reverts('typed error: ' + errMsg):\r\n        ... your contract call....\r\n        \r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/937741398/reactions",
      "total_count": 10,
      "+1": 10,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/1102929102",
    "html_url": "https://github.com/eth-brownie/brownie/issues/1108#issuecomment-1102929102",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1108",
    "id": 1102929102,
    "node_id": "IC_kwDOCUsNcc5BvVzO",
    "user": {
      "login": "EdNoepel",
      "id": 46749157,
      "node_id": "MDQ6VXNlcjQ2NzQ5MTU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/46749157?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EdNoepel",
      "html_url": "https://github.com/EdNoepel",
      "followers_url": "https://api.github.com/users/EdNoepel/followers",
      "following_url": "https://api.github.com/users/EdNoepel/following{/other_user}",
      "gists_url": "https://api.github.com/users/EdNoepel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EdNoepel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EdNoepel/subscriptions",
      "organizations_url": "https://api.github.com/users/EdNoepel/orgs",
      "repos_url": "https://api.github.com/users/EdNoepel/repos",
      "events_url": "https://api.github.com/users/EdNoepel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EdNoepel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-19T17:54:31Z",
    "updated_at": "2022-04-19T17:54:31Z",
    "author_association": "NONE",
    "body": "In case it is useful, I created some sample contracts and tests surrounding this:\r\nhttps://github.com/EdNoepel/brownie-test-issues/blob/master/tests/test_errors.py\r\n\r\nNote that when a custom error is raised by an imported/library contract, the exception and callstack does not reveal details about the error.",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/1102929102/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/1378544978",
    "html_url": "https://github.com/eth-brownie/brownie/issues/1108#issuecomment-1378544978",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1108",
    "id": 1378544978,
    "node_id": "IC_kwDOCUsNcc5SKu1S",
    "user": {
      "login": "damn1",
      "id": 19439151,
      "node_id": "MDQ6VXNlcjE5NDM5MTUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/19439151?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damn1",
      "html_url": "https://github.com/damn1",
      "followers_url": "https://api.github.com/users/damn1/followers",
      "following_url": "https://api.github.com/users/damn1/following{/other_user}",
      "gists_url": "https://api.github.com/users/damn1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damn1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damn1/subscriptions",
      "organizations_url": "https://api.github.com/users/damn1/orgs",
      "repos_url": "https://api.github.com/users/damn1/repos",
      "events_url": "https://api.github.com/users/damn1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damn1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-11T10:34:31Z",
    "updated_at": "2023-01-11T11:07:59Z",
    "author_association": "NONE",
    "body": "Hey guys @julianmrodri workaround works perfect but does anybody knows how to do same thing when errors have parameters? If I have an error for example like this `error AddressNotAdmin(address addr);`, the revert message is like `typed error: 0x0888870300000000000000000000000033a4622b82d4c04a53e170c638b944ce27cffce3`. Do you how that hash is built? Thanks ",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/1378544978/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/1379300631",
    "html_url": "https://github.com/eth-brownie/brownie/issues/1108#issuecomment-1379300631",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1108",
    "id": 1379300631,
    "node_id": "IC_kwDOCUsNcc5SNnUX",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-11T18:18:05Z",
    "updated_at": "2023-01-11T18:18:05Z",
    "author_association": "NONE",
    "body": "The selector is built the same way as for functions, i.e. includes parameter types. I.e. for your `AddressNotAdmin` error the selector is created by hashing `AddressNotAdmin(address)`.",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/1379300631/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/1425774525",
    "html_url": "https://github.com/eth-brownie/brownie/issues/1108#issuecomment-1425774525",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1108",
    "id": 1425774525,
    "node_id": "IC_kwDOCUsNcc5U-5e9",
    "user": {
      "login": "michprev",
      "id": 7281754,
      "node_id": "MDQ6VXNlcjcyODE3NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7281754?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michprev",
      "html_url": "https://github.com/michprev",
      "followers_url": "https://api.github.com/users/michprev/followers",
      "following_url": "https://api.github.com/users/michprev/following{/other_user}",
      "gists_url": "https://api.github.com/users/michprev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michprev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michprev/subscriptions",
      "organizations_url": "https://api.github.com/users/michprev/orgs",
      "repos_url": "https://api.github.com/users/michprev/repos",
      "events_url": "https://api.github.com/users/michprev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michprev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-10T12:57:49Z",
    "updated_at": "2023-02-10T12:58:13Z",
    "author_association": "NONE",
    "body": "This is not exactly a solution for this issue but you should give a try to the new Python-based testing framework that was inspired by Brownie - [Woke testing framework](https://ackeeblockchain.com/woke/docs/latest/testing-framework/overview/) (spoiler alert - I am the lead developer). It handles user-defined errors in a form of dataclass exceptions. To do this, `pytypes` , Python equivalents of Solidity types with type hints, are generated which also provide autocompletions while writing tests in Python.",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/1425774525/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/1478542846",
    "html_url": "https://github.com/eth-brownie/brownie/issues/1108#issuecomment-1478542846",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1108",
    "id": 1478542846,
    "node_id": "IC_kwDOCUsNcc5YIMX-",
    "user": {
      "login": "JoaoMorais96",
      "id": 71322340,
      "node_id": "MDQ6VXNlcjcxMzIyMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/71322340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoaoMorais96",
      "html_url": "https://github.com/JoaoMorais96",
      "followers_url": "https://api.github.com/users/JoaoMorais96/followers",
      "following_url": "https://api.github.com/users/JoaoMorais96/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoaoMorais96/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoaoMorais96/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoaoMorais96/subscriptions",
      "organizations_url": "https://api.github.com/users/JoaoMorais96/orgs",
      "repos_url": "https://api.github.com/users/JoaoMorais96/repos",
      "events_url": "https://api.github.com/users/JoaoMorais96/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoaoMorais96/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-21T20:32:37Z",
    "updated_at": "2023-03-22T15:12:05Z",
    "author_association": "NONE",
    "body": "To anybody still struggling with this, I submitted a pull request.\r\nIn the meanwhile (or if it is not approved) you can use this function in your testing:\r\n```\r\nfrom eth_utils.abi import function_abi_to_4byte_selector, collapse_if_tuple\r\ndef encode_custom_error(contract_, err_name, params):\r\n\r\n    contract_abi = contract_.abi\r\n\r\n    for error in [abi for abi in contract_abi if abi[\"type\"] == \"error\"]:\r\n        # Get error signature components\r\n        name = error[\"name\"]\r\n        data_types = [collapse_if_tuple(abi_input) for abi_input in error.get(\"inputs\", [])]\r\n        error_signature_hex = function_abi_to_4byte_selector(error).hex()\r\n \r\n        if err_name == name:\r\n            encoded_params = ''\r\n            for param in params:\r\n                if(type(param)==str):\r\n                    return('typed error: 0x'+error_signature_hex+param.zfill(66)[2:])\r\n                elif(type(param)==int):\r\n                    val = \"{0:#0{1}x}\".format(param,66)\r\n                    val = val[2:]\r\n                else:\r\n                    return 'Unsupported type'\r\n                encoded_params = encoded_params + val\r\n            return('typed error: 0x'+error_signature_hex+encoded_params)\r\n        \r\n    return 'error not found'\r\n```\r\n\r\nFor example if you want to test if a function checkIfPar(uint256 num) in your contract NumberGetter throws the error numberNotPa(num), for num = 10, you would do:\r\n```\r\nwith brownie.reverts(encode_custom_error('NumberGetter', 'numberNotPar ', [10])):\r\n        NumberGetterdeploy.checkIfPar(10\r\n                                        {\"from\":accounts[0]})\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/1478542846/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
