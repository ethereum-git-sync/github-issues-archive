{
  "url": "https://api.github.com/repos/eth-brownie/brownie/issues/328",
  "repository_url": "https://api.github.com/repos/eth-brownie/brownie",
  "labels_url": "https://api.github.com/repos/eth-brownie/brownie/issues/328/labels{/name}",
  "comments_url": "https://api.github.com/repos/eth-brownie/brownie/issues/328/comments",
  "events_url": "https://api.github.com/repos/eth-brownie/brownie/issues/328/events",
  "html_url": "https://github.com/eth-brownie/brownie/issues/328",
  "id": 551668857,
  "node_id": "MDU6SXNzdWU1NTE2Njg4NTc=",
  "number": 328,
  "title": "Improvements to brownie compile",
  "user": {
    "login": "iamdefinitelyahuman",
    "id": 35276322,
    "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
    "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/iamdefinitelyahuman",
    "html_url": "https://github.com/iamdefinitelyahuman",
    "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
    "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
    "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
    "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
    "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
    "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1114236590,
      "node_id": "MDU6TGFiZWwxMTE0MjM2NTkw",
      "url": "https://api.github.com/repos/eth-brownie/brownie/labels/enhancement",
      "name": "enhancement",
      "color": "a2eeef",
      "default": true,
      "description": "New feature or request"
    },
    {
      "id": 1553727370,
      "node_id": "MDU6TGFiZWwxNTUzNzI3Mzcw",
      "url": "https://api.github.com/repos/eth-brownie/brownie/labels/Discussion",
      "name": "Discussion",
      "color": "555555",
      "default": false,
      "description": "Under discussion - not yet ready for implementation"
    },
    {
      "id": 1689665546,
      "node_id": "MDU6TGFiZWwxNjg5NjY1NTQ2",
      "url": "https://api.github.com/repos/eth-brownie/brownie/labels/cli",
      "name": "cli",
      "color": "8df46e",
      "default": false,
      "description": "Relating to the Brownie command-line interface"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2020-01-17T22:52:22Z",
  "updated_at": "2020-01-17T22:52:22Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Overview\r\nExpand the functionality of `brownie compile` to generate and output of compiler data.  Currently, obtaining this information requires navigating files within the `build/contracts` folder. It would be better to expose this cleanly via the CLI, and more strongly suggest that users avoid the build folder.\r\n\r\n### Specification\r\n```\r\nbrownie compile [<target>]\r\n\r\nArguments:\r\n [<target>]       Compiler target\r\n\r\nOptions:\r\n  -f --format     List of comma separated output types\r\n  -o --output     File to save output to (if not given, prints to stdout)\r\n```\r\n\r\n* A call to `brownie compile` should still always trigger a recompile of updated contracts, or all contracts if the `--all` flag is included. \r\n* When `<target>` is given, it should additionally output compiler data, either to stdout or to a file.\r\n\r\n### Considerations\r\n1. When using Solidity, most compiler data is contract based (the exception being ASTs). With Vyper there is no distinction between a contract and a path. Should `<target>` expect a contract name, a path, or both?\r\n2. It should be possible to use wildcards `*` to specify multiple targets. If `<target>` ends up accepting paths, this could use unix glob patterns.\r\n3. How to format the output data in the following scenarios:\r\n   1. Printing to stdout\r\n   2. Saving to a file\r\n   3. Saving when handling multiple targets and/or output formats\r\n\r\n### Dependencies\r\n#229 should also be included when implementing this.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/328/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/eth-brownie/brownie/issues/328/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
