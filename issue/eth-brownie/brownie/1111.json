{
  "url": "https://api.github.com/repos/eth-brownie/brownie/issues/1111",
  "repository_url": "https://api.github.com/repos/eth-brownie/brownie",
  "labels_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1111/labels{/name}",
  "comments_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1111/comments",
  "events_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1111/events",
  "html_url": "https://github.com/eth-brownie/brownie/issues/1111",
  "id": 917467840,
  "node_id": "MDU6SXNzdWU5MTc0Njc4NDA=",
  "number": 1111,
  "title": "fetching from remote source not working for matic",
  "user": {
    "login": "skgbanga",
    "id": 8398696,
    "node_id": "MDQ6VXNlcjgzOTg2OTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8398696?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/skgbanga",
    "html_url": "https://github.com/skgbanga",
    "followers_url": "https://api.github.com/users/skgbanga/followers",
    "following_url": "https://api.github.com/users/skgbanga/following{/other_user}",
    "gists_url": "https://api.github.com/users/skgbanga/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/skgbanga/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/skgbanga/subscriptions",
    "organizations_url": "https://api.github.com/users/skgbanga/orgs",
    "repos_url": "https://api.github.com/users/skgbanga/repos",
    "events_url": "https://api.github.com/users/skgbanga/events{/privacy}",
    "received_events_url": "https://api.github.com/users/skgbanga/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/eth-brownie/brownie/milestones/13",
    "html_url": "https://github.com/eth-brownie/brownie/milestone/13",
    "labels_url": "https://api.github.com/repos/eth-brownie/brownie/milestones/13/labels",
    "id": 6870201,
    "node_id": "MDk6TWlsZXN0b25lNjg3MDIwMQ==",
    "number": 13,
    "title": "Brownie 1.15.0",
    "description": "Issues to complete for the next minor release.",
    "creator": {
      "login": "iamdefinitelyahuman",
      "id": 35276322,
      "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdefinitelyahuman",
      "html_url": "https://github.com/iamdefinitelyahuman",
      "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
      "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
      "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
      "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "state": "open",
    "created_at": "2021-06-19T10:37:20Z",
    "updated_at": "2021-08-09T06:32:04Z",
    "due_on": null,
    "closed_at": null
  },
  "comments": 3,
  "created_at": "2021-06-10T15:19:45Z",
  "updated_at": "2021-06-20T07:07:05Z",
  "closed_at": "2021-06-20T07:07:05Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hello,\r\n\r\nI am not sure if this qualifies as 'bug' since matic is not explicitly supported. But it seems one of the cool features (fetching from remote source) is not working for matic. \r\n\r\n```\r\n>>> con = Contract.from_explorer(\"0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174\")                                                            \r\nFetching source of 0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174 from explorer-mainnet.maticvigil.com...                                     \r\n  File \"<console>\", line 1, in <module>                                                                                                   \r\n  File \"brownie/network/contract.py\", line 1090, in from_explorer                                                                         \r\n    data = _fetch_from_explorer(address, \"getsourcecode\", silent)                                                                         \r\n  File \"brownie/network/contract.py\", line 1890, in _fetch_from_explorer                                                                  \r\n    raise ConnectionError(f\"Status {response.status_code} when querying {url}: {response.text}\")                                          \r\nConnectionError: Status 503 when querying https://explorer-mainnet.maticvigil.com/: <!DOCTYPE HTML>        \r\n```\r\n\r\nThis is USDC contract.\r\n\r\n https://explorer-mainnet.maticvigil.com/address/0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174/transactions",
  "closed_by": {
    "login": "iamdefinitelyahuman",
    "id": 35276322,
    "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
    "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/iamdefinitelyahuman",
    "html_url": "https://github.com/iamdefinitelyahuman",
    "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
    "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
    "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
    "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
    "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
    "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/1111/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1111/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/858726514",
    "html_url": "https://github.com/eth-brownie/brownie/issues/1111#issuecomment-858726514",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1111",
    "id": 858726514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1ODcyNjUxNA==",
    "user": {
      "login": "skgbanga",
      "id": 8398696,
      "node_id": "MDQ6VXNlcjgzOTg2OTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8398696?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skgbanga",
      "html_url": "https://github.com/skgbanga",
      "followers_url": "https://api.github.com/users/skgbanga/followers",
      "following_url": "https://api.github.com/users/skgbanga/following{/other_user}",
      "gists_url": "https://api.github.com/users/skgbanga/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skgbanga/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skgbanga/subscriptions",
      "organizations_url": "https://api.github.com/users/skgbanga/orgs",
      "repos_url": "https://api.github.com/users/skgbanga/repos",
      "events_url": "https://api.github.com/users/skgbanga/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skgbanga/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-10T15:35:59Z",
    "updated_at": "2021-06-10T15:35:59Z",
    "author_association": "NONE",
    "body": "hmph. I tried another way. \r\n\r\nI went to https://polygonscan.com/address/0x2791bca1f2de4661ed88a30c99a7a9449aa84174#code, and clicked \"contract ABI\" and downloaded it as json.\r\n\r\nThen I did the following:\r\n\r\n```py\r\n>>> abi\r\n{\r\n    'message': \"OK\",\r\n    'result': \"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proxyTo\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_new\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_old\",\"type\":\"address\"}],\"name\":\"ProxyOwnerUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_new\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_old\",\"type\":\"address\"}],\"name\":\"ProxyUpdated\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"IMPLEMENTATION_SLOT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OWNER_SLOT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyType\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proxyTypeId\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferProxyOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newProxyTo\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"updateAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newProxyTo\",\"type\":\"address\"}],\"name\":\"updateImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]\",\r\n    'status': \"1\"\r\n}\r\n>>> con = Contract.from_abi(\"USDC\", \"0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174\", abi)\r\n  File \"<console>\", line 1, in <module>\r\n  File \"brownie/network/contract.py\", line 1004, in from_abi\r\n    _ContractBase.__init__(self, None, build, {})  # type: ignore\r\n  File \"brownie/network/contract.py\", line 68, in __init__\r\n    self.topics = _get_topics(self.abi)\r\n  File \"brownie/network/event.py\", line 191, in _get_topics\r\n    topic_map = eth_event.get_topic_map(abi)\r\n  File \"eth_event/main.py\", line 85, in get_topic_map\r\n    raise ABIError(\"Invalid ABI\")\r\nABIError: Invalid ABI\r\n```\r\n\r\nThe only documentation that I can find is that abi should be a dictionary. Is there some other way on how I should get abi of a public contract?",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/858726514/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/860087357",
    "html_url": "https://github.com/eth-brownie/brownie/issues/1111#issuecomment-860087357",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1111",
    "id": 860087357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MDA4NzM1Nw==",
    "user": {
      "login": "skgbanga",
      "id": 8398696,
      "node_id": "MDQ6VXNlcjgzOTg2OTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8398696?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skgbanga",
      "html_url": "https://github.com/skgbanga",
      "followers_url": "https://api.github.com/users/skgbanga/followers",
      "following_url": "https://api.github.com/users/skgbanga/following{/other_user}",
      "gists_url": "https://api.github.com/users/skgbanga/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skgbanga/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skgbanga/subscriptions",
      "organizations_url": "https://api.github.com/users/skgbanga/orgs",
      "repos_url": "https://api.github.com/users/skgbanga/repos",
      "events_url": "https://api.github.com/users/skgbanga/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skgbanga/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-12T17:55:15Z",
    "updated_at": "2021-06-12T17:55:15Z",
    "author_association": "NONE",
    "body": "Ok. I got the `from_abi` part working. I think some additional notes in the documentation will be really helpful. What I did was:\r\n\r\n - download abi as json file\r\n - `import json; abi = json.loads(open(<downloaded file>).read())`\r\n - pass this abi as the third argument. \r\n\r\nSuper confusing thing was this:\r\n\r\n```py\r\n        abi : dict\r\n            Contract ABI, given as a dictionary.\r\n```\r\n\r\n_However_, when I looked at the actual function signature, type trait specified is actually a `List`\r\n\r\n```py\r\n    @classmethod\r\n    def from_abi(\r\n        cls, name: str, address: str, abi: List, owner: Optional[AccountsType] = None\r\n    ) -> \"Contract\":\r\n```\r\n\r\nPlease fill free to close this issue. With `polygonscan`, I think we can make `from_explorer` work as well, but I am happy with `with_abi` right now. ",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/860087357/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/860326427",
    "html_url": "https://github.com/eth-brownie/brownie/issues/1111#issuecomment-860326427",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1111",
    "id": 860326427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MDMyNjQyNw==",
    "user": {
      "login": "cheekybastard",
      "id": 1842402,
      "node_id": "MDQ6VXNlcjE4NDI0MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1842402?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cheekybastard",
      "html_url": "https://github.com/cheekybastard",
      "followers_url": "https://api.github.com/users/cheekybastard/followers",
      "following_url": "https://api.github.com/users/cheekybastard/following{/other_user}",
      "gists_url": "https://api.github.com/users/cheekybastard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cheekybastard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cheekybastard/subscriptions",
      "organizations_url": "https://api.github.com/users/cheekybastard/orgs",
      "repos_url": "https://api.github.com/users/cheekybastard/repos",
      "events_url": "https://api.github.com/users/cheekybastard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cheekybastard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-14T02:33:43Z",
    "updated_at": "2021-06-14T02:35:26Z",
    "author_association": "NONE",
    "body": "Brownie Contract.from_explorer now works on polygon/matic with polygonscan.com as block explorer.\r\n\r\nI just changed brownie network-config.yaml (in /home/user/.brownie) and added polyscan api url to the explorer param.\r\n\r\n\r\n      - name: MATIC\r\n          networks:\r\n            - name: Mainnet (polygon)\r\n              chainid: 137\r\n              host: https://rpc-mainnet.maticvigil.com\r\n              explorer: https://api.polygonscan.com/api\r\n              id: matic\r\n              name: matic\r\n              timeout: 3600\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/860326427/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
