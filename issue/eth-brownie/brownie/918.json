{
  "url": "https://api.github.com/repos/eth-brownie/brownie/issues/918",
  "repository_url": "https://api.github.com/repos/eth-brownie/brownie",
  "labels_url": "https://api.github.com/repos/eth-brownie/brownie/issues/918/labels{/name}",
  "comments_url": "https://api.github.com/repos/eth-brownie/brownie/issues/918/comments",
  "events_url": "https://api.github.com/repos/eth-brownie/brownie/issues/918/events",
  "html_url": "https://github.com/eth-brownie/brownie/issues/918",
  "id": 777542415,
  "node_id": "MDU6SXNzdWU3Nzc1NDI0MTU=",
  "number": 918,
  "title": "IndexError raised when passing an element of brownie.accounts as the exclude argument to brownie.test.strategy ",
  "user": {
    "login": "skellet0r",
    "id": 23556333,
    "node_id": "MDQ6VXNlcjIzNTU2MzMz",
    "avatar_url": "https://avatars.githubusercontent.com/u/23556333?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/skellet0r",
    "html_url": "https://github.com/skellet0r",
    "followers_url": "https://api.github.com/users/skellet0r/followers",
    "following_url": "https://api.github.com/users/skellet0r/following{/other_user}",
    "gists_url": "https://api.github.com/users/skellet0r/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/skellet0r/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/skellet0r/subscriptions",
    "organizations_url": "https://api.github.com/users/skellet0r/orgs",
    "repos_url": "https://api.github.com/users/skellet0r/repos",
    "events_url": "https://api.github.com/users/skellet0r/events{/privacy}",
    "received_events_url": "https://api.github.com/users/skellet0r/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1114236588,
      "node_id": "MDU6TGFiZWwxMTE0MjM2NTg4",
      "url": "https://api.github.com/repos/eth-brownie/brownie/labels/bug",
      "name": "bug",
      "color": "d73a4a",
      "default": true,
      "description": "Something isn't working"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2021-01-02T23:32:16Z",
  "updated_at": "2023-01-29T13:37:03Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "### Environment information\r\n\r\n* `brownie` Version: 1.12.3, 1.12.2, 1.12.1\r\n* `ganache-cli` Version: 6.12.1\r\n* `solc` Version: 0.8.0+commit.c7dfd78e.Linux.g++\r\n* Python Version: 3.8.3, 3.9.1\r\n* OS: linux\r\n\r\n### What was wrong?\r\n\r\nCommand: `brownie test`\r\nCode that caused failure:\r\n```python\r\nfrom brownie import accounts\r\nfrom brownie.test import given, strategy\r\n\r\n@given(\r\n    amount=strategy(\"uint256\", max_value=\"1000 ether\"),\r\n    to=strategy(\"address\", exclude=accounts[0]),\r\n)\r\ndef test_transfer_success_returns_true(token, accounts, amount, to):\r\n    assert token.transfer(to, amount, {\"from\": accounts[0]}) == True\r\n```\r\nError output:\r\n```bash\r\n$ brownie test tests/test_transfer.py\r\nBrownie v1.12.3 - Python development framework for Ethereum\r\n\r\n=============================================================================================== test session starts ===============================================================================================\r\nplatform linux -- Python 3.8.3, pytest-6.0.1, py-1.10.0, pluggy-0.13.1\r\nrootdir: /home/skelletor/projects/CloudToken\r\nplugins: eth-brownie-1.12.3, hypothesis-5.41.3, forked-1.3.0, web3-5.11.1, xdist-1.34.0\r\ncollected 0 items / 1 error                                                                                                                                                                                       \r\n\r\n===================================================================================================== ERRORS ======================================================================================================\r\n_____________________________________________________________________________________ ERROR collecting tests/test_transfer.py _____________________________________________________________________________________\r\ntests/test_transfer.py:8: in <module>\r\n    to=strategy(\"address\", exclude=accounts[0]),\r\nE   IndexError: list index out of range\r\n============================================================================================= short test summary info =============================================================================================\r\nFAILED tests/test_transfer.py - IndexError: list index out of range\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n================================================================================================ 1 error in 0.15s =================================================================================================\r\n```\r\n\r\n### Extra Information\r\n\r\n- I was following @iamdefinitelyahuman's [In-Depth Guide to Testing Ethereum Smart Contracts *Part Six*][article-link], which was published on July 23, 2020. Since the test in the guide and mine are essentially the same, and assuming that the code in the guide worked when the content was published, then the bug was introduced between July 23, 2020 and now.\r\n- I've successfully recreated the error above with the v1.12.x releases.\r\n- Using slice notation (`accounts[:1]`), the IndexError doesn't get raised, however, the element `accounts[0]` is included in the sampling. This makes sense, because a slice of an empty list, will return an empty list, which is essentially excluding nothing.\r\n\r\n\r\n[article-link]: https://medium.com/@iamdefinitelyahuman/an-in-depth-guide-to-testing-ethereum-smart-contracts-2236902bf826#fa3c",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/918/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/eth-brownie/brownie/issues/918/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/790135158",
    "html_url": "https://github.com/eth-brownie/brownie/issues/918#issuecomment-790135158",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/918",
    "id": 790135158,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MDEzNTE1OA==",
    "user": {
      "login": "sabotagebeats",
      "id": 27985126,
      "node_id": "MDQ6VXNlcjI3OTg1MTI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27985126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sabotagebeats",
      "html_url": "https://github.com/sabotagebeats",
      "followers_url": "https://api.github.com/users/sabotagebeats/followers",
      "following_url": "https://api.github.com/users/sabotagebeats/following{/other_user}",
      "gists_url": "https://api.github.com/users/sabotagebeats/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sabotagebeats/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sabotagebeats/subscriptions",
      "organizations_url": "https://api.github.com/users/sabotagebeats/orgs",
      "repos_url": "https://api.github.com/users/sabotagebeats/repos",
      "events_url": "https://api.github.com/users/sabotagebeats/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sabotagebeats/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-03T23:03:03Z",
    "updated_at": "2021-03-03T23:03:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "able to recreate on v1.13.1",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/790135158/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/790137758",
    "html_url": "https://github.com/eth-brownie/brownie/issues/918#issuecomment-790137758",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/918",
    "id": 790137758,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MDEzNzc1OA==",
    "user": {
      "login": "sabotagebeats",
      "id": 27985126,
      "node_id": "MDQ6VXNlcjI3OTg1MTI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27985126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sabotagebeats",
      "html_url": "https://github.com/sabotagebeats",
      "followers_url": "https://api.github.com/users/sabotagebeats/followers",
      "following_url": "https://api.github.com/users/sabotagebeats/following{/other_user}",
      "gists_url": "https://api.github.com/users/sabotagebeats/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sabotagebeats/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sabotagebeats/subscriptions",
      "organizations_url": "https://api.github.com/users/sabotagebeats/orgs",
      "repos_url": "https://api.github.com/users/sabotagebeats/repos",
      "events_url": "https://api.github.com/users/sabotagebeats/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sabotagebeats/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-03T23:06:48Z",
    "updated_at": "2021-03-03T23:06:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "original code from the blog does have an issue confusing the `receiver` and `to` variables, but this has been resolved in the code posted above, and is not causing the specified error. ",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/790137758/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/790152035",
    "html_url": "https://github.com/eth-brownie/brownie/issues/918#issuecomment-790152035",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/918",
    "id": 790152035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MDE1MjAzNQ==",
    "user": {
      "login": "sabotagebeats",
      "id": 27985126,
      "node_id": "MDQ6VXNlcjI3OTg1MTI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27985126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sabotagebeats",
      "html_url": "https://github.com/sabotagebeats",
      "followers_url": "https://api.github.com/users/sabotagebeats/followers",
      "following_url": "https://api.github.com/users/sabotagebeats/following{/other_user}",
      "gists_url": "https://api.github.com/users/sabotagebeats/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sabotagebeats/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sabotagebeats/subscriptions",
      "organizations_url": "https://api.github.com/users/sabotagebeats/orgs",
      "repos_url": "https://api.github.com/users/sabotagebeats/repos",
      "events_url": "https://api.github.com/users/sabotagebeats/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sabotagebeats/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-03T23:36:52Z",
    "updated_at": "2021-03-03T23:36:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "`assert len(accounts) > 0` after the import statements shows `accounts` is empty which is why it fails `IndexError`\r\n\r\n```\r\n_______________________ ERROR collecting tests/test_transfer_hypothesis2.py ________________________\r\ntests/test_transfer_hypothesis2.py:5: in <module>\r\n    assert len(accounts) >0\r\nE   assert 0 > 0\r\nE    +  where 0 = len(<brownie.network.account.Accounts object at 0x7f0d9ac16c70>)\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/790152035/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/790159225",
    "html_url": "https://github.com/eth-brownie/brownie/issues/918#issuecomment-790159225",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/918",
    "id": 790159225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MDE1OTIyNQ==",
    "user": {
      "login": "sabotagebeats",
      "id": 27985126,
      "node_id": "MDQ6VXNlcjI3OTg1MTI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27985126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sabotagebeats",
      "html_url": "https://github.com/sabotagebeats",
      "followers_url": "https://api.github.com/users/sabotagebeats/followers",
      "following_url": "https://api.github.com/users/sabotagebeats/following{/other_user}",
      "gists_url": "https://api.github.com/users/sabotagebeats/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sabotagebeats/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sabotagebeats/subscriptions",
      "organizations_url": "https://api.github.com/users/sabotagebeats/orgs",
      "repos_url": "https://api.github.com/users/sabotagebeats/repos",
      "events_url": "https://api.github.com/users/sabotagebeats/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sabotagebeats/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-03T23:50:04Z",
    "updated_at": "2021-03-03T23:51:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Since the following test passes for me, I can conclude that `accounts` is empty when being fed to `strategy` within the `@given` decorator, but is populated when being fed to the function. I can also conclude that other than this, the test is working to exclude the listed value. \r\n\r\n```\r\n#!/usr/bin/python3\r\nfrom brownie import accounts\r\nfrom brownie.test import given, strategy\r\n\r\n@given(\r\n  receiver=strategy('address', exclude='0x66aB6D9362d4F35596279692F0251Db635165871'), # this is accounts[0]\r\n  amount=strategy('uint256', max_value=10**18),\r\n)\r\ndef test_transfer_adjusts_receiver_balance(accounts, token, receiver, amount):\r\n    balance = token.balanceOf(receiver)\r\n    token.transfer(receiver, amount, {'from': accounts[0]})\r\n    assert receiver != accounts[0]\r\n    assert token.balanceOf(receiver) == balance + amount\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/790159225/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/790244004",
    "html_url": "https://github.com/eth-brownie/brownie/issues/918#issuecomment-790244004",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/918",
    "id": 790244004,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MDI0NDAwNA==",
    "user": {
      "login": "sabotagebeats",
      "id": 27985126,
      "node_id": "MDQ6VXNlcjI3OTg1MTI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27985126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sabotagebeats",
      "html_url": "https://github.com/sabotagebeats",
      "followers_url": "https://api.github.com/users/sabotagebeats/followers",
      "following_url": "https://api.github.com/users/sabotagebeats/following{/other_user}",
      "gists_url": "https://api.github.com/users/sabotagebeats/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sabotagebeats/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sabotagebeats/subscriptions",
      "organizations_url": "https://api.github.com/users/sabotagebeats/orgs",
      "repos_url": "https://api.github.com/users/sabotagebeats/repos",
      "events_url": "https://api.github.com/users/sabotagebeats/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sabotagebeats/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-04T02:44:13Z",
    "updated_at": "2021-03-04T02:44:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was able to get this code successfully running by modifying as follows: \r\n\r\n```\r\n#!/usr/bin/python3\r\nfrom brownie import accounts\r\nfrom brownie.test import given, strategy\r\n\r\n\r\ndef test_transfer_adjusts_receiver_balance(accounts, token):\r\n\r\n    @given(\r\n    receiver=strategy('address', exclude=accounts[0]),\r\n    amount=strategy('uint256', max_value=10**18),\r\n    )\r\n    def run(accounts, token, receiver, amount):\r\n        balance = token.balanceOf(receiver)\r\n        token.transfer(receiver, amount, {'from': accounts[0]})\r\n        assert receiver != accounts[0]\r\n        assert token.balanceOf(receiver) == balance + amount\r\n\r\n    run(accounts, token)\r\n```\r\n\r\nThe `accounts` object is not loaded up until `pytest` initializes `brownie`, which doesn't happen until the function is ran. So I wrapped it in an additional function which then feeds the accounts to the hypothesis decorator. \r\nIf I modify my assertion operators I can see the code is now working. ",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/790244004/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/799040904",
    "html_url": "https://github.com/eth-brownie/brownie/issues/918#issuecomment-799040904",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/918",
    "id": 799040904,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5OTA0MDkwNA==",
    "user": {
      "login": "sabotagebeats",
      "id": 27985126,
      "node_id": "MDQ6VXNlcjI3OTg1MTI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27985126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sabotagebeats",
      "html_url": "https://github.com/sabotagebeats",
      "followers_url": "https://api.github.com/users/sabotagebeats/followers",
      "following_url": "https://api.github.com/users/sabotagebeats/following{/other_user}",
      "gists_url": "https://api.github.com/users/sabotagebeats/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sabotagebeats/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sabotagebeats/subscriptions",
      "organizations_url": "https://api.github.com/users/sabotagebeats/orgs",
      "repos_url": "https://api.github.com/users/sabotagebeats/repos",
      "events_url": "https://api.github.com/users/sabotagebeats/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sabotagebeats/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-15T02:05:34Z",
    "updated_at": "2021-03-15T02:06:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\r\n#!/usr/bin/python3\r\nfrom brownie import accounts\r\nfrom brownie.test import given, strategy\r\n\r\nfrom brownie import network\r\nnetwork.connect('development')\r\n\r\n@given(\r\nreceiver=strategy('address', exclude=accounts[0]),\r\namount=strategy('uint256', max_value=10**18),\r\n)\r\ndef test_transfer_adjusts_receiver_balance(accounts, token, receiver, amount):\r\n    balance = token.balanceOf(receiver)\r\n    token.transfer(receiver, amount, {'from': accounts[0]})\r\n    assert receiver != accounts[0]\r\n    assert token.balanceOf(receiver) == balance + amount\r\n```\r\n\r\nthis code works, now need to see if I can inject `network.connect('development')` as a `lambda` function, possibly in `given`, or possibly as a fixture? ",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/799040904/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/799807897",
    "html_url": "https://github.com/eth-brownie/brownie/issues/918#issuecomment-799807897",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/918",
    "id": 799807897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5OTgwNzg5Nw==",
    "user": {
      "login": "sabotagebeats",
      "id": 27985126,
      "node_id": "MDQ6VXNlcjI3OTg1MTI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27985126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sabotagebeats",
      "html_url": "https://github.com/sabotagebeats",
      "followers_url": "https://api.github.com/users/sabotagebeats/followers",
      "following_url": "https://api.github.com/users/sabotagebeats/following{/other_user}",
      "gists_url": "https://api.github.com/users/sabotagebeats/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sabotagebeats/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sabotagebeats/subscriptions",
      "organizations_url": "https://api.github.com/users/sabotagebeats/orgs",
      "repos_url": "https://api.github.com/users/sabotagebeats/repos",
      "events_url": "https://api.github.com/users/sabotagebeats/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sabotagebeats/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-15T22:53:29Z",
    "updated_at": "2021-03-15T22:53:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm able to get it to work by placing `brownie.network.connect('development')` within the `tests\\conftest.py` ",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/799807897/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/799838259",
    "html_url": "https://github.com/eth-brownie/brownie/issues/918#issuecomment-799838259",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/918",
    "id": 799838259,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5OTgzODI1OQ==",
    "user": {
      "login": "sabotagebeats",
      "id": 27985126,
      "node_id": "MDQ6VXNlcjI3OTg1MTI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27985126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sabotagebeats",
      "html_url": "https://github.com/sabotagebeats",
      "followers_url": "https://api.github.com/users/sabotagebeats/followers",
      "following_url": "https://api.github.com/users/sabotagebeats/following{/other_user}",
      "gists_url": "https://api.github.com/users/sabotagebeats/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sabotagebeats/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sabotagebeats/subscriptions",
      "organizations_url": "https://api.github.com/users/sabotagebeats/orgs",
      "repos_url": "https://api.github.com/users/sabotagebeats/repos",
      "events_url": "https://api.github.com/users/sabotagebeats/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sabotagebeats/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-15T23:53:14Z",
    "updated_at": "2021-03-15T23:53:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am still getting the error when I try to move the line to anywhere within `brownie\\test\\strategies.py` or `brownie\\test\\__init__.py` both within and outside of the address strategy function. ",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/799838259/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/800225190",
    "html_url": "https://github.com/eth-brownie/brownie/issues/918#issuecomment-800225190",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/918",
    "id": 800225190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMDIyNTE5MA==",
    "user": {
      "login": "iamdefinitelyahuman",
      "id": 35276322,
      "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdefinitelyahuman",
      "html_url": "https://github.com/iamdefinitelyahuman",
      "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
      "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
      "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
      "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-16T12:41:00Z",
    "updated_at": "2021-03-16T12:41:00Z",
    "author_association": "MEMBER",
    "body": "Took a look at this.. As you said, the problem is that test collection happens prior to connecting to the network, so `accounts` is empty.\r\n\r\nConnecting to the network is handled in [`pytest_collection_finish`](https://docs.pytest.org/en/latest/reference/reference.html#pytest.hookspec.pytest_collection_finish), in `brownie/test/runner.py`, [line 258](https://github.com/eth-brownie/brownie/blob/master/brownie/test/managers/runner.py#L257). This is a deliberate design choice for 2 reasons:\r\n\r\n1. If no tests were collected, or there is an error during collection, we don't have to wait for `ganache-cli` to launch and be killed.\r\n2. It allows for individual test suites to implement their own hook point and connect to a different network ([example](https://github.com/curvefi/curve-pool-registry/blob/master/tests/forked/conftest.py#L103))\r\n\r\nThere is no easy solution I can see here unfortunately, as the call to `strategy` happens immediatly upon importing the test module.  A hacky solution might be to allow `Accounts` to return a sort-of proxy \"promise\" object that represents the eventual `Account` that will exist at index `0` once the network has connect.  The first attempt to inspect this object would then mutate it into the actual account object, or raise if the index is out of bounds.",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/800225190/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/800679893",
    "html_url": "https://github.com/eth-brownie/brownie/issues/918#issuecomment-800679893",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/918",
    "id": 800679893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMDY3OTg5Mw==",
    "user": {
      "login": "sabotagebeats",
      "id": 27985126,
      "node_id": "MDQ6VXNlcjI3OTg1MTI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27985126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sabotagebeats",
      "html_url": "https://github.com/sabotagebeats",
      "followers_url": "https://api.github.com/users/sabotagebeats/followers",
      "following_url": "https://api.github.com/users/sabotagebeats/following{/other_user}",
      "gists_url": "https://api.github.com/users/sabotagebeats/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sabotagebeats/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sabotagebeats/subscriptions",
      "organizations_url": "https://api.github.com/users/sabotagebeats/orgs",
      "repos_url": "https://api.github.com/users/sabotagebeats/repos",
      "events_url": "https://api.github.com/users/sabotagebeats/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sabotagebeats/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-16T23:29:57Z",
    "updated_at": "2021-03-16T23:29:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was hoping to find a solution which would wrap this for the user so that they don't have to worry about it, however it seems that it's functioning as designed and so this won't be feasible? If this is the case, alternatively could we just modify the documentation for the `address` strategy in order to notate that it requires loading the accounts object first?",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/800679893/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/1407665948",
    "html_url": "https://github.com/eth-brownie/brownie/issues/918#issuecomment-1407665948",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/918",
    "id": 1407665948,
    "node_id": "IC_kwDOCUsNcc5T50cc",
    "user": {
      "login": "iluxonchik",
      "id": 4412182,
      "node_id": "MDQ6VXNlcjQ0MTIxODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4412182?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iluxonchik",
      "html_url": "https://github.com/iluxonchik",
      "followers_url": "https://api.github.com/users/iluxonchik/followers",
      "following_url": "https://api.github.com/users/iluxonchik/following{/other_user}",
      "gists_url": "https://api.github.com/users/iluxonchik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iluxonchik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iluxonchik/subscriptions",
      "organizations_url": "https://api.github.com/users/iluxonchik/orgs",
      "repos_url": "https://api.github.com/users/iluxonchik/repos",
      "events_url": "https://api.github.com/users/iluxonchik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iluxonchik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-29T13:37:02Z",
    "updated_at": "2023-01-29T13:37:02Z",
    "author_association": "NONE",
    "body": "I experienced the same problem in my test suite and found a clean workaround by altering what I am parameterizing. Instead of passing the account in the strategy, I passed the index of the account, after which I obtain the actual account through its index.",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/1407665948/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
