{
  "url": "https://api.github.com/repos/eth-brownie/brownie/issues/1003",
  "repository_url": "https://api.github.com/repos/eth-brownie/brownie",
  "labels_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1003/labels{/name}",
  "comments_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1003/comments",
  "events_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1003/events",
  "html_url": "https://github.com/eth-brownie/brownie/issues/1003",
  "id": 836039980,
  "node_id": "MDU6SXNzdWU4MzYwMzk5ODA=",
  "number": 1003,
  "title": "Add a way to access and store addresses of deployed contracts.",
  "user": {
    "login": "Maxence-L",
    "id": 56826661,
    "node_id": "MDQ6VXNlcjU2ODI2NjYx",
    "avatar_url": "https://avatars.githubusercontent.com/u/56826661?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Maxence-L",
    "html_url": "https://github.com/Maxence-L",
    "followers_url": "https://api.github.com/users/Maxence-L/followers",
    "following_url": "https://api.github.com/users/Maxence-L/following{/other_user}",
    "gists_url": "https://api.github.com/users/Maxence-L/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Maxence-L/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Maxence-L/subscriptions",
    "organizations_url": "https://api.github.com/users/Maxence-L/orgs",
    "repos_url": "https://api.github.com/users/Maxence-L/repos",
    "events_url": "https://api.github.com/users/Maxence-L/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Maxence-L/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2021-03-19T14:11:45Z",
  "updated_at": "2022-03-31T11:02:27Z",
  "closed_at": "2021-03-21T09:11:15Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Overview\r\nHi,\r\n\r\nChained deployment of contract, where you get the data from a previously deployed contract is different scripts, is currently difficult and error-prone. This is due to the fact that there is no (as far as I understand the docs) way to refer to \r\n previously deployed instances (address + contract container) when executing multiple scripts separately.\r\n\r\nThe only way I found is to copy-paste the address in the scripts. Example :\r\n\r\nWe have two contracts : tokenContract and managingContract.\r\n\r\n1_deploy_token.py\r\n```python\r\nfrom brownie import tokenContract\r\n\r\ndef main():\r\n    acct = accounts.load('dev')\r\n    tokenContract.deploy({from:acct})\r\n````\r\n\r\nAs a result we get a console print of the deployment address.\r\n```\r\nTransaction sent: [transaction hash]\r\n  Gas price: 10.0 gwei   Gas limit: 160000   Nonce: 5\r\n  tokenContract.constructor confirmed - Block: 721000   Gas used: 1427907 (90.91%)\r\n  tokenContract deployed at: \"0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee\"\r\n```\r\n\r\nThe address is seemingly saved since running `tokenContract` in the console returns :\r\n`[<tokenContract Contract '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee'>]`\r\n\r\nHowever the following code returns an error:\r\n```python\r\nprint(tokenContract.address)\r\n\r\n> File \"<console>\", line 1, in <module>\r\nAttributeError: 'ContractContainer' object has no attribute 'address'\r\n````\r\n\r\nAs a consequence, if we want to run a second script using the deployement address of the first, we need to paste it manually:\r\n\r\n2_managing_contract.py\r\n```python\r\nfrom brownie import tokenContract, managingContract\r\n\r\ndef main():\r\n    acct = accounts.load('dev')\r\n    managing = managingContract.deploy({from:acct}), \"0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee\")\r\n````\r\n\r\nThe need to copy-paste address is a source of error, especially in the following cases:\r\n- Reuse of the script (what does the address belong to ?)\r\n- Deployment of many contracts in the first script: the risk to paste the wrong address is high.\r\n\r\nBesides, there is no easy way to find back the contracts implementation if the terminal/console is shut down. We need then to browse manually through the deployment folder's jsons - again, a source of potential errors.\r\n\r\n### Specification\r\n\r\nWe need :\r\n1. A getter function for the deployment address of a ContractContainer that is stored in the deployment map. This is the standard way shown in the doc and there's no way to get the address from the deployed ContractContainer object[1], which is quite confusing since it's the main info about the instance. Here's a simple implementation:\r\n```python\r\nfrom brownie import tokenContract\r\n\r\ndef main():\r\n    acct = accounts.load('dev')\r\n    tokenContract.deploy({from:acct})\r\n    # Here's the getter function:\r\n    print(tokenContract.address)\r\n\r\n> \"0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee\"\r\n````\r\n\r\nSince the address is saved in the developement map, we should be able to do this too:\r\n```python\r\n# tokenContract has been deployed in another script run before this\r\nfrom brownie import tokenContract\r\n\r\ndef main():\r\n    print(tokenContract.address)\r\n\r\n> \"0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee\"\r\n`````\r\n\r\n2. We may not want a mismatch between ContractContainer and the deployed ContractContainer.\r\n\r\nAs a result, we can add to it a method which allows to return an instanciated version of a deployed and saved ContractContainer (As you would get with accounts.load('dev').deploy(tokenContract)). This is how Truffle does it by the way:\r\n\r\n```python\r\n# tokenContract has been deployed in another script run before this\r\nfrom brownie import tokenContract\r\n\r\n# Here's the method\r\ntoken = tokenContract.deployed()\r\nprint(token.address)\r\n\r\n> \"0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee\"\r\n```\r\n3. A nice to have would be a global `clean` command-line function, removing every instance, just like `--reset` in Truffle.\r\n\r\n[1]: Aside from copy-pasting and accessing `.address` attribute from a contract deployed with `account.load('id').deploy(TokenContract)` - which isn't persistent between sessions anyway.",
  "closed_by": {
    "login": "iamdefinitelyahuman",
    "id": 35276322,
    "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
    "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/iamdefinitelyahuman",
    "html_url": "https://github.com/iamdefinitelyahuman",
    "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
    "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
    "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
    "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
    "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
    "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/1003/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1003/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/802880435",
    "html_url": "https://github.com/eth-brownie/brownie/issues/1003#issuecomment-802880435",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1003",
    "id": 802880435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMjg4MDQzNQ==",
    "user": {
      "login": "iamdefinitelyahuman",
      "id": 35276322,
      "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdefinitelyahuman",
      "html_url": "https://github.com/iamdefinitelyahuman",
      "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
      "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
      "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
      "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-19T14:37:59Z",
    "updated_at": "2021-03-19T14:37:59Z",
    "author_association": "MEMBER",
    "body": "The object you are using to deploy is called a [`ContractContainer`](https://eth-brownie.readthedocs.io/en/stable/api-network.html#brownie.network.contract.ContractContainer). The returned object is a [`ProjectContract`](https://eth-brownie.readthedocs.io/en/stable/api-network.html#brownie.network.contract.ProjectContract).  This returned object is also added within `ContractContainer`, which is a container that holds all the objects representing specific deployments of that contract.  For example:\r\n\r\n```python\r\n>>> type(MyContract)\r\n<class 'brownie.network.contract.ContractContainer'>\r\n>>> MyContract\r\n[]  # currently empty\r\n\r\n>>> deployment = MyContract.deploy({'from': accounts[0]})\r\nTransaction sent: 0x98e9903d54aba84ec56178611043289e0b6d11877fec6da0e92cbf5a91a36748\r\n  Gas price: 0.0 gwei   Gas limit: 12000000   Nonce: 0\r\n  MyContract.constructor confirmed - Block: 1   Gas used: 438945 (3.66%)\r\n  MyContract deployed at: 0xd495633B90a237de510B4375c442C0469D3C161C\r\n\r\n>>> type(deployment)\r\n<class 'brownie.network.contract.ProjectContract'>\r\n\r\n>>> MyContract\r\n[<MyContract Contract '0xd495633B90a237de510B4375c442C0469D3C161C'>]  # now contains 1 ProjectContract\r\n>>> MyContract == deployment\r\nFalse  # the container is not the deployment\r\n>>> MyContract[0] == deployment\r\nTrue  # the first object within the container IS the deployment\r\n```\r\n\r\n\r\nIn a production environment, the `ProjectContract` objects within each `ContractContainer` object persist between sessions. So you can reference them between scripts by simply importing the container and pointing at index `-1` for the most recent deployment.\r\n\r\nMore generally, you can chain your deployment functions together within a single script so that you don't have issues with persistence when working in a local development environment:\r\n\r\n```python\r\nfrom brownie import tokenContract, managingContract\r\n\r\ndef deploy_token():\r\n    acct = accounts.load('dev')\r\n    return acct.deploy(tokenContract)\r\n\r\ndef deploy_manager():\r\n    acct = accounts.load('dev')\r\n    managing = acct.deploy(managingContract, tokenContract[-1])\r\n\r\ndef main():\r\n    deploy_token()\r\n    deploy_manager()\r\n```\r\n\r\nIf this script is saved as `example.py`, we can run the `deploy_token` function via:\r\n\r\n```\r\nbrownie run example deploy_token\r\n```\r\n\r\nIf you want to remove a deployment artifact in a persistent environment, you can use e.g. `del MyContract[0]`. Or for a more nuclear option, delete the `build/` subdirectory within your project.",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/802880435/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/802887522",
    "html_url": "https://github.com/eth-brownie/brownie/issues/1003#issuecomment-802887522",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1003",
    "id": 802887522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMjg4NzUyMg==",
    "user": {
      "login": "Maxence-L",
      "id": 56826661,
      "node_id": "MDQ6VXNlcjU2ODI2NjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/56826661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Maxence-L",
      "html_url": "https://github.com/Maxence-L",
      "followers_url": "https://api.github.com/users/Maxence-L/followers",
      "following_url": "https://api.github.com/users/Maxence-L/following{/other_user}",
      "gists_url": "https://api.github.com/users/Maxence-L/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Maxence-L/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Maxence-L/subscriptions",
      "organizations_url": "https://api.github.com/users/Maxence-L/orgs",
      "repos_url": "https://api.github.com/users/Maxence-L/repos",
      "events_url": "https://api.github.com/users/Maxence-L/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Maxence-L/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-19T14:47:49Z",
    "updated_at": "2021-03-19T14:52:29Z",
    "author_association": "NONE",
    "body": "Thanks a lot for your thorough and quick answer !\r\n\r\nMaybe we should add this to the documentation, [as it isn't mentioned as far as I know](https://eth-brownie.readthedocs.io/en/stable/search.html?q=token%5B-1%5D&check_keywords=yes&area=default). Or add a getter function which would return the [-1] value in a more pythonic and straightforward manner. I can do it if you want.\r\n\r\nAs a user feedback, multiple-scripts deployment allows to you run tests and checks between deployments. Aside from the user's peace of mind, it also saves ETH costs.\r\n\r\nAnyway, thanks again, as a Python user Brownie is very comfy for me in this world of JS code 😉",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/802887522/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/802910282",
    "html_url": "https://github.com/eth-brownie/brownie/issues/1003#issuecomment-802910282",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1003",
    "id": 802910282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMjkxMDI4Mg==",
    "user": {
      "login": "iamdefinitelyahuman",
      "id": 35276322,
      "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdefinitelyahuman",
      "html_url": "https://github.com/iamdefinitelyahuman",
      "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
      "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
      "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
      "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-19T15:20:10Z",
    "updated_at": "2021-03-19T15:20:10Z",
    "author_association": "MEMBER",
    "body": "The relationship between `ProjectContract` and `ContractContainer` is fairly well documented under [Working with Contracts](https://eth-brownie.readthedocs.io/en/stable/core-contracts.html#deploying-contracts) and also touched on during the [Quickstart](https://eth-brownie.readthedocs.io/en/stable/quickstart.html#contracts). Given `ContractContainer` is effectively a list, I don't feel that a getter method would be more pythonic than simple index access.\r\n\r\nI very much agree that splitting a deployment across multiple steps is good. But as per my previous example, you can accomplish this using a single script with multiple functions, and write it in a way that it can all execute in a single action within your test environment.\r\n\r\nAlso possibly relevant, you can use `-i` with `brownie run` to drop into a console after your test completes to verify the results immediately.  Or execute your scripts from within a console session using the [`run`](https://eth-brownie.readthedocs.io/en/stable/api-project.html#scripts.run) function, so that you can perform whatever checks are required between each step and the execute the next step within the same session.",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/802910282/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/802993562",
    "html_url": "https://github.com/eth-brownie/brownie/issues/1003#issuecomment-802993562",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1003",
    "id": 802993562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMjk5MzU2Mg==",
    "user": {
      "login": "Maxence-L",
      "id": 56826661,
      "node_id": "MDQ6VXNlcjU2ODI2NjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/56826661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Maxence-L",
      "html_url": "https://github.com/Maxence-L",
      "followers_url": "https://api.github.com/users/Maxence-L/followers",
      "following_url": "https://api.github.com/users/Maxence-L/following{/other_user}",
      "gists_url": "https://api.github.com/users/Maxence-L/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Maxence-L/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Maxence-L/subscriptions",
      "organizations_url": "https://api.github.com/users/Maxence-L/orgs",
      "repos_url": "https://api.github.com/users/Maxence-L/repos",
      "events_url": "https://api.github.com/users/Maxence-L/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Maxence-L/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-19T17:26:56Z",
    "updated_at": "2021-03-19T17:26:56Z",
    "author_association": "NONE",
    "body": "Thanks for your time and reply !",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/802993562/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/1084425244",
    "html_url": "https://github.com/eth-brownie/brownie/issues/1003#issuecomment-1084425244",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/1003",
    "id": 1084425244,
    "node_id": "IC_kwDOCUsNcc5AowQc",
    "user": {
      "login": "RunyCalmera",
      "id": 52351163,
      "node_id": "MDQ6VXNlcjUyMzUxMTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/52351163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RunyCalmera",
      "html_url": "https://github.com/RunyCalmera",
      "followers_url": "https://api.github.com/users/RunyCalmera/followers",
      "following_url": "https://api.github.com/users/RunyCalmera/following{/other_user}",
      "gists_url": "https://api.github.com/users/RunyCalmera/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RunyCalmera/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RunyCalmera/subscriptions",
      "organizations_url": "https://api.github.com/users/RunyCalmera/orgs",
      "repos_url": "https://api.github.com/users/RunyCalmera/repos",
      "events_url": "https://api.github.com/users/RunyCalmera/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RunyCalmera/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-31T11:02:27Z",
    "updated_at": "2022-03-31T11:02:27Z",
    "author_association": "NONE",
    "body": "How can I get a contract that has already been deployed on a kovan nework back in my console after I closed the concole?\n\nWhat is the code to get all the deployed contracts and the last deployed contract?",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/1084425244/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
