{
  "url": "https://api.github.com/repos/eth-brownie/brownie/issues/809",
  "repository_url": "https://api.github.com/repos/eth-brownie/brownie",
  "labels_url": "https://api.github.com/repos/eth-brownie/brownie/issues/809/labels{/name}",
  "comments_url": "https://api.github.com/repos/eth-brownie/brownie/issues/809/comments",
  "events_url": "https://api.github.com/repos/eth-brownie/brownie/issues/809/events",
  "html_url": "https://github.com/eth-brownie/brownie/issues/809",
  "id": 720502029,
  "node_id": "MDU6SXNzdWU3MjA1MDIwMjk=",
  "number": 809,
  "title": "Coverage of tests impossible to get to 100% when using function modifiers",
  "user": {
    "login": "dishmop",
    "id": 8046656,
    "node_id": "MDQ6VXNlcjgwNDY2NTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8046656?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dishmop",
    "html_url": "https://github.com/dishmop",
    "followers_url": "https://api.github.com/users/dishmop/followers",
    "following_url": "https://api.github.com/users/dishmop/following{/other_user}",
    "gists_url": "https://api.github.com/users/dishmop/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dishmop/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dishmop/subscriptions",
    "organizations_url": "https://api.github.com/users/dishmop/orgs",
    "repos_url": "https://api.github.com/users/dishmop/repos",
    "events_url": "https://api.github.com/users/dishmop/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dishmop/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1114236588,
      "node_id": "MDU6TGFiZWwxMTE0MjM2NTg4",
      "url": "https://api.github.com/repos/eth-brownie/brownie/labels/bug",
      "name": "bug",
      "color": "d73a4a",
      "default": true,
      "description": "Something isn't working"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2020-10-13T16:25:40Z",
  "updated_at": "2020-10-13T18:15:24Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Environment information\r\n\r\n* `brownie` Version: 1.11.9\r\n* `ganache-cli` Version: x.x.x\r\n* `solc` Version:  0.6.12\r\n* Python Version: 3.7.6\r\n* OS: osx/linux/win\r\n\r\n### What was wrong?\r\nWhen I use function modifiers in my solidity code which call a function in a base class (such as using HasRole in OpenZepplin's Access.sol library) - then it is impossible to get 100% coverage in the unit tests.\r\n\r\nPlease include information like:\r\n\r\nI've made a public repository with a minimal code that reproduces the issue - very quick to run and very small amount of code:\r\nhttps://github.com/dishmop/brownie_modifiers_test\r\n\r\n### How can it be fixed?\r\n\r\nI've no ideas\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/809/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/eth-brownie/brownie/issues/809/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/707905911",
    "html_url": "https://github.com/eth-brownie/brownie/issues/809#issuecomment-707905911",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/809",
    "id": 707905911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNzkwNTkxMQ==",
    "user": {
      "login": "iamdefinitelyahuman",
      "id": 35276322,
      "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdefinitelyahuman",
      "html_url": "https://github.com/iamdefinitelyahuman",
      "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
      "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
      "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
      "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-13T17:46:57Z",
    "updated_at": "2020-10-13T17:46:57Z",
    "author_association": "MEMBER",
    "body": "Interesting bug.\r\n\r\nI think the issue is related to how brownie decides _where_ a branch exists. Branches are groups according to function, but the modifier code lies outside of the offsets of any function. So it doesn't get included in any of the function branch lists.\r\n\r\nTo complicate things a bit further, modifiers are inlined.  In your example there are two copies of the bytecode for `onlySecurityGenerator`, one in `addDocHash` and one in `removeDocHash`.  So it doesn't map 1:1 with the source code.\r\n\r\nI'm surprised nobody has raised an issue about this before!  I'll have to think about it some.",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/707905911/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/707920507",
    "html_url": "https://github.com/eth-brownie/brownie/issues/809#issuecomment-707920507",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/809",
    "id": 707920507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNzkyMDUwNw==",
    "user": {
      "login": "dishmop",
      "id": 8046656,
      "node_id": "MDQ6VXNlcjgwNDY2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8046656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dishmop",
      "html_url": "https://github.com/dishmop",
      "followers_url": "https://api.github.com/users/dishmop/followers",
      "following_url": "https://api.github.com/users/dishmop/following{/other_user}",
      "gists_url": "https://api.github.com/users/dishmop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dishmop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dishmop/subscriptions",
      "organizations_url": "https://api.github.com/users/dishmop/orgs",
      "repos_url": "https://api.github.com/users/dishmop/repos",
      "events_url": "https://api.github.com/users/dishmop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dishmop/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-13T18:15:24Z",
    "updated_at": "2020-10-13T18:15:24Z",
    "author_association": "NONE",
    "body": "Thanks for responding so quickly. An interim fix might just be to have an option to ignore the code in modifiers when calculating coverage (I've no idea if this is easy or hard to do:)\r\n\r\nWhat I would like is to be able to enforce 100% coverage as part of our continuous integration workflow. I don't really mind if 100% coverage doesn't actually cover all the code - as long as it is a reasonable benchmark that can be met without jumping through a lot of hoops. ",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/707920507/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
