{
  "url": "https://api.github.com/repos/eth-brownie/brownie/issues/889",
  "repository_url": "https://api.github.com/repos/eth-brownie/brownie",
  "labels_url": "https://api.github.com/repos/eth-brownie/brownie/issues/889/labels{/name}",
  "comments_url": "https://api.github.com/repos/eth-brownie/brownie/issues/889/comments",
  "events_url": "https://api.github.com/repos/eth-brownie/brownie/issues/889/events",
  "html_url": "https://github.com/eth-brownie/brownie/issues/889",
  "id": 767742999,
  "node_id": "MDU6SXNzdWU3Njc3NDI5OTk=",
  "number": 889,
  "title": "Show solidity compiler warnings",
  "user": {
    "login": "jeffywu",
    "id": 977434,
    "node_id": "MDQ6VXNlcjk3NzQzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/977434?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jeffywu",
    "html_url": "https://github.com/jeffywu",
    "followers_url": "https://api.github.com/users/jeffywu/followers",
    "following_url": "https://api.github.com/users/jeffywu/following{/other_user}",
    "gists_url": "https://api.github.com/users/jeffywu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jeffywu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jeffywu/subscriptions",
    "organizations_url": "https://api.github.com/users/jeffywu/orgs",
    "repos_url": "https://api.github.com/users/jeffywu/repos",
    "events_url": "https://api.github.com/users/jeffywu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jeffywu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1114236590,
      "node_id": "MDU6TGFiZWwxMTE0MjM2NTkw",
      "url": "https://api.github.com/repos/eth-brownie/brownie/labels/enhancement",
      "name": "enhancement",
      "color": "a2eeef",
      "default": true,
      "description": "New feature or request"
    },
    {
      "id": 1319496835,
      "node_id": "MDU6TGFiZWwxMzE5NDk2ODM1",
      "url": "https://api.github.com/repos/eth-brownie/brownie/labels/compiler",
      "name": "compiler",
      "color": "bfd4f2",
      "default": false,
      "description": "Related to contract compilation"
    },
    {
      "id": 2834574020,
      "node_id": "MDU6TGFiZWwyODM0NTc0MDIw",
      "url": "https://api.github.com/repos/eth-brownie/brownie/labels/Help%20Wanted",
      "name": "Help Wanted",
      "color": "7702E2",
      "default": false,
      "description": "Pull requests to fix greatly appreciated!"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2020-12-15T15:57:24Z",
  "updated_at": "2021-08-14T19:51:47Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Overview\r\nI'm experimenting with brownie and the SMT checker and one thing I'm noticing is that compiler warnings don't show (SMT checker errors seem to be returned as warnings rather than errors). It looks like this is occuring on these lines:\r\nhttps://github.com/iamdefinitelyahuman/py-solc-x/blob/master/solcx/main.py#L378\r\n\r\nNot sure what happens to the return value after here:\r\nhttps://github.com/eth-brownie/brownie/blob/master/brownie/project/compiler/solidity.py#L64\r\n\r\nBut adding these lines to the above code:\r\n```\r\n...\r\n  try:\r\n        output = solcx.compile_standard(input_json, allow_paths=allow_paths,)\r\n        print('compile standard output', output['errors'])\r\n        import pprint \r\n        pp = pprint.PrettyPrinter(indent=4)\r\n        pp.pprint(output['errors'])\r\n        return output\r\n    except solcx.exceptions.SolcError as e:\r\n        raise CompilerError(e, \"solc\")\r\n...\r\n```\r\n\r\nGives me some values where the severity = 'warning':\r\n```\r\n[   {   'component': 'general',\r\n        'errorCode': '3805',\r\n        'formattedMessage': 'Warning: This is a pre-release compiler version, '\r\n                            'please do not use it in production.\\n',\r\n        'message': 'This is a pre-release compiler version, please do not use '\r\n                   'it in production.',\r\n        'severity': 'warning',\r\n        'type': 'Warning'},\r\n    {   'component': 'general',\r\n        'errorCode': '1878',\r\n        'formattedMessage': 'contracts/Test.sol: Warning: SPDX license '\r\n                            'identifier not provided in source file. Before '\r\n                            'publishing, consider adding a comment containing '\r\n                            '\"SPDX-License-Identifier: <SPDX-License>\" to each '\r\n                            'source file. Use \"SPDX-License-Identifier: '\r\n                            'UNLICENSED\" for non-open-source code. Please see '\r\n                            'https://spdx.org for more information.\\n',\r\n        'message': 'SPDX license identifier not provided in source file. '\r\n                   'Before publishing, consider adding a comment containing '\r\n                   '\"SPDX-License-Identifier: <SPDX-License>\" to each source '\r\n                   'file. Use \"SPDX-License-Identifier: UNLICENSED\" for '\r\n                   'non-open-source code. Please see https://spdx.org for more '\r\n                   'information.',\r\n        'severity': 'warning',\r\n        'sourceLocation': {   'end': -1,\r\n                              'file': 'contracts/Test.sol',\r\n                              'start': -1},\r\n        'type': 'Warning'},\r\n    {   'component': 'general',\r\n        'errorCode': '2018',\r\n        'formattedMessage': 'contracts/Test.sol:6:5: Warning: Function state '\r\n                            'mutability can be restricted to pure\\n'\r\n                            '    function smtTest(uint256 a) external {\\n'\r\n                            '    ^ (Relevant source part starts here and spans '\r\n                            'across multiple lines).\\n',\r\n        'message': 'Function state mutability can be restricted to pure',\r\n        'severity': 'warning',\r\n        'sourceLocation': {   'end': 175,\r\n                              'file': 'contracts/Test.sol',\r\n                              'start': 83},\r\n        'type': 'Warning'},\r\n    {   'component': 'general',\r\n        'errorCode': '6328',\r\n        'formattedMessage': 'contracts/Test.sol:8:9: Warning: CHC: Assertion '\r\n                            'violation happens here.\\n'\r\n                            '        assert(a < 9);\\n'\r\n                            '        ^-----------^\\n'\r\n                            'Counterexample:\\n'\r\n                            '\\n'\r\n                            'a = 11\\n'\r\n                            '\\n'\r\n                            '\\n'\r\n                            'Transaction trace:\\n'\r\n                            'constructor()\\n'\r\n                            'smtTest(11)\\n',\r\n        'message': 'CHC: Assertion violation happens here.',\r\n        'secondarySourceLocations': [   {   'message': 'Counterexample:\\n'\r\n                                                       '\\n'\r\n                                                       'a = 11\\n'\r\n                                                       '\\n'\r\n                                                       '\\n'\r\n                                                       'Transaction trace:\\n'\r\n                                                       'constructor()\\n'\r\n                                                       'smtTest(11)'}],\r\n        'severity': 'warning',\r\n        'sourceLocation': {   'end': 168,\r\n                              'file': 'contracts/Test.sol',\r\n                              'start': 155},\r\n        'type': 'Warning'}]\r\n```\r\n\r\n\r\nWould be nice to have an option to print compiler warnings and maybe fail on them. Happy to work on a PR if someone gives me some pointers on the best place to add such code.\r\n\r\n\r\n### Specification\r\nBasically a cli flag and perhaps a config file parameter to show warnings and fail on warnings, maybe allowing the user to set the severity filter in solcx 🤷🏽\r\nhttps://github.com/iamdefinitelyahuman/py-solc-x/blob/master/solcx/main.py#L378",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/889/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/eth-brownie/brownie/issues/889/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/745571543",
    "html_url": "https://github.com/eth-brownie/brownie/issues/889#issuecomment-745571543",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/889",
    "id": 745571543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTU3MTU0Mw==",
    "user": {
      "login": "iamdefinitelyahuman",
      "id": 35276322,
      "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdefinitelyahuman",
      "html_url": "https://github.com/iamdefinitelyahuman",
      "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
      "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
      "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
      "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-15T21:14:33Z",
    "updated_at": "2020-12-15T21:14:33Z",
    "author_association": "MEMBER",
    "body": "This seems like a useful feature, and shouldn't be that hard to implement :+1: ",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/745571543/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/898951977",
    "html_url": "https://github.com/eth-brownie/brownie/issues/889#issuecomment-898951977",
    "issue_url": "https://api.github.com/repos/eth-brownie/brownie/issues/889",
    "id": 898951977,
    "node_id": "IC_kwDOCUsNcc41lOsp",
    "user": {
      "login": "cameel",
      "id": 137030,
      "node_id": "MDQ6VXNlcjEzNzAzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cameel",
      "html_url": "https://github.com/cameel",
      "followers_url": "https://api.github.com/users/cameel/followers",
      "following_url": "https://api.github.com/users/cameel/following{/other_user}",
      "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cameel/subscriptions",
      "organizations_url": "https://api.github.com/users/cameel/orgs",
      "repos_url": "https://api.github.com/users/cameel/repos",
      "events_url": "https://api.github.com/users/cameel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cameel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-14T19:51:47Z",
    "updated_at": "2021-08-14T19:51:47Z",
    "author_association": "NONE",
    "body": "Just a heads up for when someone picks this issue to work on it: the Solidity compiler will soon get a new severity level (`info`) and SMTChecker will probably switch to using that for some of its messages (https://github.com/ethereum/solidity/issues/11508).",
    "reactions": {
      "url": "https://api.github.com/repos/eth-brownie/brownie/issues/comments/898951977/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
