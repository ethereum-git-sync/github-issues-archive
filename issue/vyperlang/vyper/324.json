{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/324",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/324/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/324/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/324/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/324",
  "id": 252756596,
  "node_id": "MDU6SXNzdWUyNTI3NTY1OTY=",
  "number": 324,
  "title": "FEATURE: Identifier type",
  "user": {
    "login": "fubuloubu",
    "id": 3859395,
    "node_id": "MDQ6VXNlcjM4NTkzOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fubuloubu",
    "html_url": "https://github.com/fubuloubu",
    "followers_url": "https://api.github.com/users/fubuloubu/followers",
    "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
    "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
    "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
    "repos_url": "https://api.github.com/users/fubuloubu/repos",
    "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2017-08-24T23:11:39Z",
  "updated_at": "2019-02-06T13:40:33Z",
  "closed_at": "2019-02-06T13:40:33Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "I propose an additional type `identifier` extending `sha3` (or some other acceptable hashing function with collision avoidance) to implement unique identifiers to be used in multi-party transaction logs (similar to how Firebase or other highly-scalable databases work). This would be useful for keeping track of quantities such as receipts, in-process/pending transactions, or other trackable quantities in a mapping as an alternative to a simple list, which has no collision avoidance and does not allow atomic operations on the data structure.\r\n\r\nUsage as the key in a mapping data structure is much more natural than keeping track of items in a simple list (integer index), especially in context of #323 which would allow iteration without tracking indexes.\r\n\r\nAs an example, it might be used in the following context:\r\n```python\r\nbills: {from: address, amt: wei_value}[identifier]\r\n\r\n...\r\n\r\ndef pay_bill(_id: identifier):\r\n    assert self.bills[_id] is not None\r\n    assert self.balance >= self.bills[_id].amt\r\n    send(self.bills[_id].from, self.bills[_id].amt)\r\n    del self.bills[_id] # effectively self.bills[_id] = None\r\n```",
  "closed_by": {
    "login": "jacqueswww",
    "id": 6917456,
    "node_id": "MDQ6VXNlcjY5MTc0NTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jacqueswww",
    "html_url": "https://github.com/jacqueswww",
    "followers_url": "https://api.github.com/users/jacqueswww/followers",
    "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
    "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
    "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
    "repos_url": "https://api.github.com/users/jacqueswww/repos",
    "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/324/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/324/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/325078759",
    "html_url": "https://github.com/vyperlang/vyper/issues/324#issuecomment-325078759",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/324",
    "id": 325078759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTA3ODc1OQ==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-26T03:12:20Z",
    "updated_at": "2017-08-26T03:12:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "How would the `identifier` be calculated?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/325078759/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/325228921",
    "html_url": "https://github.com/vyperlang/vyper/issues/324#issuecomment-325228921",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/324",
    "id": 325228921,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTIyODkyMQ==",
    "user": {
      "login": "DavidKnott",
      "id": 17552858,
      "node_id": "MDQ6VXNlcjE3NTUyODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17552858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DavidKnott",
      "html_url": "https://github.com/DavidKnott",
      "followers_url": "https://api.github.com/users/DavidKnott/followers",
      "following_url": "https://api.github.com/users/DavidKnott/following{/other_user}",
      "gists_url": "https://api.github.com/users/DavidKnott/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DavidKnott/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DavidKnott/subscriptions",
      "organizations_url": "https://api.github.com/users/DavidKnott/orgs",
      "repos_url": "https://api.github.com/users/DavidKnott/repos",
      "events_url": "https://api.github.com/users/DavidKnott/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DavidKnott/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-27T22:27:26Z",
    "updated_at": "2017-08-27T22:27:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fubuloubu Could you explain the advantages of using `identifier` as opposed to a list with integer indexing (it seems like the later is sufficient for avoiding collisions).   Also, as of now couldn't you use sha3 as the key in a mapping using the `uint256` data type?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/325228921/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/325473457",
    "html_url": "https://github.com/vyperlang/vyper/issues/324#issuecomment-325473457",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/324",
    "id": 325473457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTQ3MzQ1Nw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-28T20:35:27Z",
    "updated_at": "2017-08-28T20:35:39Z",
    "author_association": "MEMBER",
    "body": "@vbuterin just a psuedorandomly generated hash using parameters available when adding new data to a map (maybe `sha3` of `block.timestamp`, `msg.sender`, and the data being inserted to ensure no collisions)\r\n\r\n@DavidKnott I was thinking of the scenario when two people have added themselves to that integer indexed array around the same point in time, and then sent another transaction using that index before the block is fully confirmed. In this scenario, until the block is confirmed someone else could actually have that index instead thereby allowing undesirable behavior until that data is fully consistent. If the keys were psuedo-random, you would not have to wait until full consistency to operate on the data set. Large NoSQL databases that I have worked with use this to ensure consistency over latent distributed networks, which is why I saw it as a potentially useful concept to employ as a language primitive.\r\n\r\nI was mostly thinking about this in context of being able to iterate over keys in a map e.g. #323, so I understand if this suggestion by itself has limited utility.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/325473457/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/397240553",
    "html_url": "https://github.com/vyperlang/vyper/issues/324#issuecomment-397240553",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/324",
    "id": 397240553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzI0MDU1Mw==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T09:57:58Z",
    "updated_at": "2018-06-14T09:57:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fubuloubu can we close, maybe merge it with #323 ?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/397240553/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/397464837",
    "html_url": "https://github.com/vyperlang/vyper/issues/324#issuecomment-397464837",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/324",
    "id": 397464837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzQ2NDgzNw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T23:07:10Z",
    "updated_at": "2018-06-14T23:07:10Z",
    "author_association": "MEMBER",
    "body": "@jacqueswww\r\n\r\n#323 describes implementing iterator functionality into mappings, I'm not sure if this is an effective use-case for the mapping type. An additional datatype overlaid on mappings may make sense here. Something like a linked list.\r\n\r\nThis issue describes an identifier type, which may be useful in general for mappings as a labeled datatype used to access values in mappings. The datatype would basically be the result of the keccak256 hash that is performed to obtain the key for the hashmap, and would be a unique data type that would allow database update like functionality in a distributed database like Ethereum. This might be some sort of concatenation of the msg.sender and block.number that gave a probalistically unique identifier when you don't necessarily need to construct the key yourself in the mappings. You would obtain one when you pushed something onto a mapping, and can use it to access the entry you pushed.\r\n\r\nI'm not sure this really makes sense anymore, would suggest closing this issue.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/397464837/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
