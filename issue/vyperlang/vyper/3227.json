{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/3227",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/3227/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/3227/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/3227/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/3227",
  "id": 1530444736,
  "node_id": "I_kwDOBGDvrM5bOLvA",
  "number": 3227,
  "title": "`pop` and `append` are not reserved keywords",
  "user": {
    "login": "trocher",
    "id": 43437004,
    "node_id": "MDQ6VXNlcjQzNDM3MDA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/43437004?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/trocher",
    "html_url": "https://github.com/trocher",
    "followers_url": "https://api.github.com/users/trocher/followers",
    "following_url": "https://api.github.com/users/trocher/following{/other_user}",
    "gists_url": "https://api.github.com/users/trocher/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/trocher/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/trocher/subscriptions",
    "organizations_url": "https://api.github.com/users/trocher/orgs",
    "repos_url": "https://api.github.com/users/trocher/repos",
    "events_url": "https://api.github.com/users/trocher/events{/privacy}",
    "received_events_url": "https://api.github.com/users/trocher/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-01-12T10:10:33Z",
  "updated_at": "2023-04-08T15:02:32Z",
  "closed_at": "2023-04-08T15:02:32Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Version Information\r\n\r\n* vyper Version (output of `vyper --version`): 0.3.8+commit.ae7d6d28\r\n* OS: OSX\r\n* Python Version (output of `python --version`): 3.8.0\r\n\r\n### What's your issue about?\r\n\r\n`pop` and `append` are not Vyper reserved keywords. While the usage of `pop` happen to be restricted as it is a reserved keyword for the EVM `POP` instruction, the usage of `append` is not restricted and the compiler will try to interpret it as the dynamic array's homonymous method.\r\n\r\nFor example, trying to compile the following contract will fail with an `AssertionError`.\r\n```Vyper\r\ninterface Foo:\r\n    def append(a:uint256): payable\r\n\r\n@external\r\ndef bar(x: address):\r\n    a: Foo = Foo(x)\r\n    a.append(1)\r\n```\r\n```Bash\r\nError compiling: tests/customs/code.vy\r\nTraceback (most recent call last):\r\n  File \"/Users/trocher/Documents/thesis/vyper/venv/bin/vyper\", line 11, in <module>\r\n    load_entry_point('vyper==0.3.8', 'console_scripts', 'vyper')()\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/cli/vyper_compile.py\", line 57, in _parse_cli_args\r\n    return _parse_args(sys.argv[1:])\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/cli/vyper_compile.py\", line 154, in _parse_args\r\n    compiled = compile_files(\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/cli/vyper_compile.py\", line 294, in compile_files\r\n    compiler_data = vyper.compile_codes(\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/evm/opcodes.py\", line 226, in _wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/compiler/__init__.py\", line 141, in compile_codes\r\n    exc_handler(contract_name, exc)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/cli/vyper_compile.py\", line 189, in exc_handler\r\n    raise exception\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/compiler/__init__.py\", line 138, in compile_codes\r\n    out[contract_name][output_format] = OUTPUT_FORMATS[output_format](compiler_data)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/compiler/output.py\", line 248, in build_bytecode_output\r\n    return f\"0x{compiler_data.bytecode.hex()}\"\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/functools.py\", line 966, in __get__\r\n    val = self.func(instance)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/compiler/phases.py\", line 150, in bytecode\r\n    self.assembly, is_runtime=False, no_bytecode_metadata=self.no_bytecode_metadata\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/functools.py\", line 966, in __get__\r\n    val = self.func(instance)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/compiler/phases.py\", line 141, in assembly\r\n    return generate_assembly(self.ir_nodes, self.no_optimize)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/compiler/phases.py\", line 126, in ir_nodes\r\n    ir, ir_runtime, sigs = self._ir_output\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/functools.py\", line 966, in __get__\r\n    val = self.func(instance)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/compiler/phases.py\", line 122, in _ir_output\r\n    return generate_ir_nodes(self.global_ctx, self.no_optimize)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/compiler/phases.py\", line 258, in generate_ir_nodes\r\n    ir_nodes, ir_runtime, function_sigs = module.generate_ir_for_module(global_ctx)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/module.py\", line 165, in generate_ir_for_module\r\n    runtime, internal_functions = _runtime_ir(runtime_functions, all_sigs, global_ctx)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/module.py\", line 103, in _runtime_ir\r\n    func_ir = generate_ir_for_function(func_ast, all_sigs, global_ctx, skip_nonpayable_check)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/function_definitions/common.py\", line 62, in generate_ir_for_function\r\n    o = generate_ir_for_external_function(code, sig, context, skip_nonpayable_check)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/function_definitions/external_function.py\", line 182, in generate_ir_for_external_function\r\n    body += [parse_body(code.body, context, ensure_terminated=True)]\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/stmt.py\", line 410, in parse_body\r\n    ir = parse_stmt(stmt, context)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/stmt.py\", line 384, in parse_stmt\r\n    return Stmt(stmt, context).ir_node\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/stmt.py\", line 40, in __init__\r\n    self.ir_node = fn()\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/stmt.py\", line 50, in parse_Expr\r\n    return Stmt(self.stmt.value, self.context).ir_node\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/stmt.py\", line 40, in __init__\r\n    self.ir_node = fn()\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/stmt.py\", line 133, in parse_Call\r\n    assert isinstance(darray.typ, DArrayT)\r\nAssertionError\r\n```\r\n### How can it be fixed?\r\n\r\nAdding them as reserved keyword should be enough.",
  "closed_by": {
    "login": "charles-cooper",
    "id": 3867501,
    "node_id": "MDQ6VXNlcjM4Njc1MDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/charles-cooper",
    "html_url": "https://github.com/charles-cooper",
    "followers_url": "https://api.github.com/users/charles-cooper/followers",
    "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
    "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
    "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
    "repos_url": "https://api.github.com/users/charles-cooper/repos",
    "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
    "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/3227/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/3227/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1381003180",
    "html_url": "https://github.com/vyperlang/vyper/issues/3227#issuecomment-1381003180",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3227",
    "id": 1381003180,
    "node_id": "IC_kwDOBGDvrM5SUG-s",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T21:16:57Z",
    "updated_at": "2023-01-12T21:16:57Z",
    "author_association": "MEMBER",
    "body": "I don't think either should be reserved keywords if we can avoid it, but definitely there is a bug that `append` should be context-specific to the type of `a`",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1381003180/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
