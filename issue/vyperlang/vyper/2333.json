{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/2333",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/2333/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/2333/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/2333/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/2333",
  "id": 837617087,
  "node_id": "MDU6SXNzdWU4Mzc2MTcwODc=",
  "number": 2333,
  "title": "VIP: Add data type: `Set`",
  "user": {
    "login": "spinoch",
    "id": 73601239,
    "node_id": "MDQ6VXNlcjczNjAxMjM5",
    "avatar_url": "https://avatars.githubusercontent.com/u/73601239?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/spinoch",
    "html_url": "https://github.com/spinoch",
    "followers_url": "https://api.github.com/users/spinoch/followers",
    "following_url": "https://api.github.com/users/spinoch/following{/other_user}",
    "gists_url": "https://api.github.com/users/spinoch/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/spinoch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/spinoch/subscriptions",
    "organizations_url": "https://api.github.com/users/spinoch/orgs",
    "repos_url": "https://api.github.com/users/spinoch/repos",
    "events_url": "https://api.github.com/users/spinoch/events{/privacy}",
    "received_events_url": "https://api.github.com/users/spinoch/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 757250644,
      "node_id": "MDU6TGFiZWw3NTcyNTA2NDQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Approved",
      "name": "VIP: Approved",
      "color": "98f765",
      "default": false,
      "description": "VIP Approved"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 13,
  "created_at": "2021-03-22T11:20:11Z",
  "updated_at": "2021-03-31T15:21:09Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Simple Summary\r\nAdd a _set_ data type, which represents a collection of elements. This collection can be used to check whether an _element_ is contained in the set or not.\r\nThis data type need not support iteration over elements or indexing, and should be memory-efficient.\r\n\r\n## Motivation\r\nCurrently, to accomplish this one can use `HashMap[T, bool]` but this still requires reserving space for the `bool` data type. The proposed `Set` can use a similar implementation to the existing `HashMap` (i.e a [hash table](https://en.wikipedia.org/wiki/Hash_table)) except it would not store any _value_ for each _key_.\r\n\r\n## Specification\r\n\r\nGiven a type `T`, I would propose the following syntax: \r\n```\r\nSet[T]\r\n```\r\ne.g.\r\n```\r\n# Storage def\r\ns: Set[uint256]\r\n...\r\n# Usage\r\n4 in self.s  # returns false\r\n123 in self.s # returns true\r\n```\r\n\r\n## Backwards Compatibility\r\nN/A\r\n\r\n## Dependencies\r\nN/A\r\n\r\n## References\r\nN/A\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/2333/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/2333/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/804151258",
    "html_url": "https://github.com/vyperlang/vyper/issues/2333#issuecomment-804151258",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2333",
    "id": 804151258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNDE1MTI1OA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-22T15:26:39Z",
    "updated_at": "2021-03-22T15:26:39Z",
    "author_association": "MEMBER",
    "body": "I like this suggestion a bunch. Doing membership checks is a very common operation, and I think it could be expanded to storage successfully.\r\n\r\nHow do you propose the internals would be implemented re: \"...it would not store any value for each key.\" Are you only referring to potential use as an in-memory structure?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/804151258/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/804153508",
    "html_url": "https://github.com/vyperlang/vyper/issues/2333#issuecomment-804153508",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2333",
    "id": 804153508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNDE1MzUwOA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-22T15:29:46Z",
    "updated_at": "2021-03-22T15:29:46Z",
    "author_association": "MEMBER",
    "body": "An example of storage use:\r\n\r\n```python\r\nowners: HashSet[address]\r\n\r\ndef addOwner(owner: address):\r\n    assert msg.sender in self.owners\r\n    self.owners.add(owner)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/804153508/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/804194073",
    "html_url": "https://github.com/vyperlang/vyper/issues/2333#issuecomment-804194073",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2333",
    "id": 804194073,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNDE5NDA3Mw==",
    "user": {
      "login": "spinoch",
      "id": 73601239,
      "node_id": "MDQ6VXNlcjczNjAxMjM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/73601239?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/spinoch",
      "html_url": "https://github.com/spinoch",
      "followers_url": "https://api.github.com/users/spinoch/followers",
      "following_url": "https://api.github.com/users/spinoch/following{/other_user}",
      "gists_url": "https://api.github.com/users/spinoch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/spinoch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/spinoch/subscriptions",
      "organizations_url": "https://api.github.com/users/spinoch/orgs",
      "repos_url": "https://api.github.com/users/spinoch/repos",
      "events_url": "https://api.github.com/users/spinoch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/spinoch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-22T16:11:13Z",
    "updated_at": "2021-03-22T16:11:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "> How do you propose the internals would be implemented re: \"...it would not store any value for each key.\" Are you only referring to potential use as an in-memory structure?\r\n\r\nMaybe that wasn't very clear. What I meant is that, contrary to a HashMap, a HashSet is not a key-_value_ mapping (at least not user-facing). We will still need to store the hashes of the keys i.e. the hashes of the elements of the set.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/804194073/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/804301252",
    "html_url": "https://github.com/vyperlang/vyper/issues/2333#issuecomment-804301252",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2333",
    "id": 804301252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNDMwMTI1Mg==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-22T18:39:05Z",
    "updated_at": "2021-03-22T18:41:03Z",
    "author_association": "MEMBER",
    "body": "For a storage `HashSet`, is there a data structure that can do this more efficiently than `HashSet[T] := HashMap[T, bool]`?\r\n\r\n---\r\n\r\nEdit: in general, this is exactly how I want new Vyper types to work: define a standard API for them, and allow the implementation to fulfill those requirements, based on storage/memory/calldata. This is a great proposal, just trying to pull more implementation details out of it.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/804301252/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/804306718",
    "html_url": "https://github.com/vyperlang/vyper/issues/2333#issuecomment-804306718",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2333",
    "id": 804306718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNDMwNjcxOA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-22T18:46:15Z",
    "updated_at": "2021-03-22T18:46:15Z",
    "author_association": "MEMBER",
    "body": "One potential implementation idea: define `HashSet[T]` as a Bloom filter + `HashMap` combo. Allows for `O(1)` exclusion checks, with false positives for inclusion checks mitigated by checking the mapping. It'll mean an additional storage value created when it's added to the set, but could really improve costs down the line, if that's the most optimal behavior.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/804306718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/804500461",
    "html_url": "https://github.com/vyperlang/vyper/issues/2333#issuecomment-804500461",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2333",
    "id": 804500461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNDUwMDQ2MQ==",
    "user": {
      "login": "iamdefinitelyahuman",
      "id": 35276322,
      "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdefinitelyahuman",
      "html_url": "https://github.com/iamdefinitelyahuman",
      "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
      "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
      "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
      "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-23T00:46:02Z",
    "updated_at": "2021-03-23T00:46:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Possibly useful:\r\n\r\nhttps://ethereum.stackexchange.com/questions/77099/efficient-bit-packing/77102#77102",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/804500461/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/805418479",
    "html_url": "https://github.com/vyperlang/vyper/issues/2333#issuecomment-805418479",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2333",
    "id": 805418479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTQxODQ3OQ==",
    "user": {
      "login": "spinoch",
      "id": 73601239,
      "node_id": "MDQ6VXNlcjczNjAxMjM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/73601239?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/spinoch",
      "html_url": "https://github.com/spinoch",
      "followers_url": "https://api.github.com/users/spinoch/followers",
      "following_url": "https://api.github.com/users/spinoch/following{/other_user}",
      "gists_url": "https://api.github.com/users/spinoch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/spinoch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/spinoch/subscriptions",
      "organizations_url": "https://api.github.com/users/spinoch/orgs",
      "repos_url": "https://api.github.com/users/spinoch/repos",
      "events_url": "https://api.github.com/users/spinoch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/spinoch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-24T02:09:08Z",
    "updated_at": "2021-03-24T02:09:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "> One potential implementation idea: define HashSet[T] as a Bloom filter + HashMap combo. Allows for O(1) exclusion checks,\r\n\r\nShouldn't HashMap already be `O(1)` for exclusion checks?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/805418479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/805458405",
    "html_url": "https://github.com/vyperlang/vyper/issues/2333#issuecomment-805458405",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2333",
    "id": 805458405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTQ1ODQwNQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-24T03:26:42Z",
    "updated_at": "2021-03-24T03:26:42Z",
    "author_association": "MEMBER",
    "body": "> > One potential implementation idea: define HashSet[T] as a Bloom filter + HashMap combo. Allows for O(1) exclusion checks,\r\n> \r\n> Shouldn't HashMap already be `O(1)` for exclusion checks?\r\n\r\nYup lol, I was trying to be too clever.\r\n\r\nOverall, I see a lot more use of this for storage varaibles than I would for memory variables",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/805458405/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/809593176",
    "html_url": "https://github.com/vyperlang/vyper/issues/2333#issuecomment-809593176",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2333",
    "id": 809593176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwOTU5MzE3Ng==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-29T18:07:23Z",
    "updated_at": "2021-03-29T18:08:02Z",
    "author_association": "MEMBER",
    "body": "Meeting notes:\r\n- rename to `Set`\r\n- `Set` is syntactic sugar for `HashMap[T, bool]`\r\n- `IterableSet` which could allow iteration e.g. `for owner in self.owners: ...`",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/809593176/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/809611425",
    "html_url": "https://github.com/vyperlang/vyper/issues/2333#issuecomment-809611425",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2333",
    "id": 809611425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwOTYxMTQyNQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-29T18:28:57Z",
    "updated_at": "2021-03-29T18:28:57Z",
    "author_association": "MEMBER",
    "body": "NOTE: `IterableSet` to be defined in a new VIP",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/809611425/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/810022323",
    "html_url": "https://github.com/vyperlang/vyper/issues/2333#issuecomment-810022323",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2333",
    "id": 810022323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMDAyMjMyMw==",
    "user": {
      "login": "spinoch",
      "id": 73601239,
      "node_id": "MDQ6VXNlcjczNjAxMjM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/73601239?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/spinoch",
      "html_url": "https://github.com/spinoch",
      "followers_url": "https://api.github.com/users/spinoch/followers",
      "following_url": "https://api.github.com/users/spinoch/following{/other_user}",
      "gists_url": "https://api.github.com/users/spinoch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/spinoch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/spinoch/subscriptions",
      "organizations_url": "https://api.github.com/users/spinoch/orgs",
      "repos_url": "https://api.github.com/users/spinoch/repos",
      "events_url": "https://api.github.com/users/spinoch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/spinoch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-30T08:23:17Z",
    "updated_at": "2021-03-30T08:23:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "> `Set is syntactic sugar for HashMap[T, bool]`\r\n\r\nSpeaking out of ignorance here because I haven't looked at the implementation for HashMap in detal. But is that `bool` really necessary? We could maybe take a look at the implementation of the Rust data types `HashSet` and `HashMap`, as they are defined with similar traits as vyper\r\n\r\n> rename to Set\r\n>IterableSet which could allow iteration e.g. for owner in self.owners: ...\r\n\r\nFine by me, although I think `HashSet` hints more at the fact that it's not iterable",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/810022323/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/810434224",
    "html_url": "https://github.com/vyperlang/vyper/issues/2333#issuecomment-810434224",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2333",
    "id": 810434224,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMDQzNDIyNA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-30T17:15:10Z",
    "updated_at": "2021-03-30T17:15:10Z",
    "author_association": "MEMBER",
    "body": "> Speaking out of ignorance here because I haven't looked at the implementation for HashMap in detal. But is that `bool` really necessary? We could maybe take a look at the implementation of the Rust data types `HashSet` and `HashMap`, as they are defined with similar traits as vyper\r\n\r\nSo, we don't really have the same concept of the machine layer as Rust does. The way the EVM works, yes there is temporary memory per each frame of the call stack, but it's not really used for very long and it's relatively inexpensive to use (by a lot). What most people usually care about is storing stuff on the blockchain permanent, and the data type we are thinking of here is based on wanting to store a Set datatype permanently in a contract (say, for a set of authorized users or signing accounts in a multisig).\r\n\r\nThe data type that makes most sense to represent that in storage is `HashMap[T, bool]`. The key type `T` isn't _actually_ stored in the EVM, only the `bool` value is, which makes this effective for inclusion/exclusion checks, aka \"set membership\" (hence using `Set` as the type name). We were thinking later on we can add `IterableSet` which would instead use a more complex data type instead of `bool` to represent inclusion/exclusion, and also implement some sort of linked-list style traversal.\r\n\r\nIt seems like you are familiar with Rust, so think of the data type we are defining here as a Trait instead.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/810434224/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/811151389",
    "html_url": "https://github.com/vyperlang/vyper/issues/2333#issuecomment-811151389",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2333",
    "id": 811151389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMTE1MTM4OQ==",
    "user": {
      "login": "spinoch",
      "id": 73601239,
      "node_id": "MDQ6VXNlcjczNjAxMjM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/73601239?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/spinoch",
      "html_url": "https://github.com/spinoch",
      "followers_url": "https://api.github.com/users/spinoch/followers",
      "following_url": "https://api.github.com/users/spinoch/following{/other_user}",
      "gists_url": "https://api.github.com/users/spinoch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/spinoch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/spinoch/subscriptions",
      "organizations_url": "https://api.github.com/users/spinoch/orgs",
      "repos_url": "https://api.github.com/users/spinoch/repos",
      "events_url": "https://api.github.com/users/spinoch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/spinoch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-31T15:21:09Z",
    "updated_at": "2021-03-31T15:21:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Right, makes sense",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/811151389/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
