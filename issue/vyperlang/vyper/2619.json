{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/2619",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/2619/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/2619/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/2619/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/2619",
  "id": 1111991311,
  "node_id": "I_kwDOBGDvrM5CR6QP",
  "number": 2619,
  "title": "VIP: ERC165 support",
  "user": {
    "login": "fubuloubu",
    "id": 3859395,
    "node_id": "MDQ6VXNlcjM4NTkzOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fubuloubu",
    "html_url": "https://github.com/fubuloubu",
    "followers_url": "https://api.github.com/users/fubuloubu/followers",
    "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
    "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
    "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
    "repos_url": "https://api.github.com/users/fubuloubu/repos",
    "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 757250644,
      "node_id": "MDU6TGFiZWw3NTcyNTA2NDQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Approved",
      "name": "VIP: Approved",
      "color": "98f765",
      "default": false,
      "description": "VIP Approved"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2022-01-23T21:29:03Z",
  "updated_at": "2022-06-30T19:11:55Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Simple Summary\r\n[ERC165](https://eips.ethereum.org/EIPS/eip-165) allows contracts to quickly determine if they are able to interact with a particular contract. Deeper support into Vyper will help improve contracts that would like to implement ERC165\r\n\r\n## Motivation\r\nERC721 introduced the concept of mandatory ERC165 interface checks in order to acheive compliance with a given ERC. This has been problematic for Vyper in the past because of the missing `bytes4` type (which is also something we should add and support).\r\n\r\nUntil support is added for `bytes4`, it will not be possible to comply with ERC165 (and thus any ERCs which require ERC165 for full compliance). However, it seems like a potential solution to overload the `implements:` keyword, which currently like Vyper contracts specify what interfaces they comply to, with functionality that adds ERC165 compliance more implicitly to a contract\r\n\r\n## Specification\r\nWhen the `implements:` keyword is used in a Vyper contract with an Interface type, Vyper will add the `def supportsInterface(interface_id: bytes4) -> bool` function directly to the contract's bytecode, which returns whether or not the contract supports a given `interface_id`.\r\n\r\nERC165 specifies `interface_id` as the logical XOR of all the mandatory `method_id`s located in the defined interface. Computing these manually requires adding lines to the constructor function in order to enable it correctly, or otherwise making large view function for `supportsInterface` with lots of manual typing.\r\n\r\nA discussion point is whether these interface IDs only be limited to defined `ERC`s in Vyper's interfaces library, which would reduce clutter from using non-standardized interfaces with the `implements:` keyword\r\n\r\nLasty, any contracts which use this feature will also implicitly use the `implements: ERC165` specifier. A discussion could be had that this support would only enabled by adding this specification to a contract (e.g. a contract will not produce the `implementsInterface` function unless `implements: ERC165` is added), which would make this behavior more \"opt in\"\r\n\r\n## Backwards Compatibility\r\nAny contracts that use the `implements:` keyword currently would raise an error if the `supportsInterface` function was also defined.\r\n\r\n## Dependencies\r\nNot required for implementation, but the `bytes4` type would make implementation of this VIP likely easier.\r\n\r\n## References\r\n- ERC165 ([link](https://eips.ethereum.org/EIPS/eip-165))\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/2619/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/2619/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1020077034",
    "html_url": "https://github.com/vyperlang/vyper/issues/2619#issuecomment-1020077034",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2619",
    "id": 1020077034,
    "node_id": "IC_kwDOBGDvrM48zSPq",
    "user": {
      "login": "tserg",
      "id": 8017125,
      "node_id": "MDQ6VXNlcjgwMTcxMjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8017125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tserg",
      "html_url": "https://github.com/tserg",
      "followers_url": "https://api.github.com/users/tserg/followers",
      "following_url": "https://api.github.com/users/tserg/following{/other_user}",
      "gists_url": "https://api.github.com/users/tserg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tserg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tserg/subscriptions",
      "organizations_url": "https://api.github.com/users/tserg/orgs",
      "repos_url": "https://api.github.com/users/tserg/repos",
      "events_url": "https://api.github.com/users/tserg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tserg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-24T13:03:17Z",
    "updated_at": "2022-01-24T13:03:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think injecting the `def supportsInterface(interface_id: bytes4) -> bool` function based on the `implements:` keyword can be confusing given Vyper's goal of simplicity. I have in mind someone starting out in Vyper implementing a simple ERC20, deploying it to a testnet and then trying to verify the Vyper code on Etherscan but it fails because the compiled code includes this function but the local copy of the written contract does not. Furthermore, it also seems like a creeping in of class inheritance (of the ERC165 interface). \r\n\r\nIMO, I think it is better to require the `def supportsInterface(interface_id: bytes4) -> bool` to be expressly included in the contract, but have a built-in attribute for interfaces that provides the interface ID (e.g. Solidity has an `interfaceId` for interfaces).",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1020077034/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1020298875",
    "html_url": "https://github.com/vyperlang/vyper/issues/2619#issuecomment-1020298875",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2619",
    "id": 1020298875,
    "node_id": "IC_kwDOBGDvrM480IZ7",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-24T16:40:17Z",
    "updated_at": "2022-01-24T16:40:17Z",
    "author_association": "MEMBER",
    "body": "> I think injecting the `def supportsInterface(interface_id: bytes4) -> bool` function based on the `implements:` keyword can be confusing given Vyper's goal of simplicity. I have in mind someone starting out in Vyper implementing a simple ERC20, deploying it to a testnet and then trying to verify the Vyper code on Etherscan but it fails because the compiled code includes this function but the local copy of the written contract does not. Furthermore, it also seems like a creeping in of class inheritance (of the ERC165 interface).\r\n> \r\n> IMO, I think it is better to require the `def supportsInterface(interface_id: bytes4) -> bool` to be expressly included in the contract, but have a built-in attribute for interfaces that provides the interface ID (e.g. Solidity has an `interfaceId` for interfaces).\r\n\r\nYes, got a lot of feedback from @charles-cooper about this too. I think adding the `MyInterface.interface_id` property to an interface object would be a better way to go. Then you can just do something like this:\r\n\r\n```py\r\n@view\r\n@external\r\ndef supportsInterface(interface_id: bytes4) -> bool:\r\n    return interface_id in [\r\n        ERC20.interface_id,\r\n        ERC721.interface_id,\r\n        ...  # as many as you want to support\r\n    ]\r\n```\r\n\r\nThis has the most optimal balance of flexibility and convenience",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1020298875/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1021171179",
    "html_url": "https://github.com/vyperlang/vyper/issues/2619#issuecomment-1021171179",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2619",
    "id": 1021171179,
    "node_id": "IC_kwDOBGDvrM483dXr",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-25T13:14:14Z",
    "updated_at": "2022-01-25T13:14:14Z",
    "author_association": "MEMBER",
    "body": "Wonder if this should also add `.method_id` to method types e.g.:\r\n\r\n```py\r\n@external\r\ndef marked(amount: uint256):\r\n    ...\r\n\r\n# self.marked.method_id == 0x92e37a93\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1021171179/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1031873553",
    "html_url": "https://github.com/vyperlang/vyper/issues/2619#issuecomment-1031873553",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2619",
    "id": 1031873553,
    "node_id": "IC_kwDOBGDvrM49gSQR",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-07T20:10:07Z",
    "updated_at": "2022-02-07T20:10:07Z",
    "author_association": "COLLABORATOR",
    "body": "> Wonder if this should also add `.method_id` to method types e.g.:\r\n> \r\n> ```python\r\n> @external\r\n> def marked(amount: uint256):\r\n>     ...\r\n> \r\n> # self.marked.method_id == 0x92e37a93\r\n> ```\r\n\r\nhttps://github.com/vyperlang/vyper/issues/2098",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1031873553/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1031876799",
    "html_url": "https://github.com/vyperlang/vyper/issues/2619#issuecomment-1031876799",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2619",
    "id": 1031876799,
    "node_id": "IC_kwDOBGDvrM49gTC_",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-07T20:13:36Z",
    "updated_at": "2022-02-07T20:13:36Z",
    "author_association": "COLLABORATOR",
    "body": "meeting notes: `implements:` is too implicit, we will implement `interface_id` member (or maybe call it `erc165_id`)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1031876799/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1167616209",
    "html_url": "https://github.com/vyperlang/vyper/issues/2619#issuecomment-1167616209",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2619",
    "id": 1167616209,
    "node_id": "IC_kwDOBGDvrM5FmGjR",
    "user": {
      "login": "liam-ot",
      "id": 48032728,
      "node_id": "MDQ6VXNlcjQ4MDMyNzI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/48032728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liam-ot",
      "html_url": "https://github.com/liam-ot",
      "followers_url": "https://api.github.com/users/liam-ot/followers",
      "following_url": "https://api.github.com/users/liam-ot/following{/other_user}",
      "gists_url": "https://api.github.com/users/liam-ot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liam-ot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liam-ot/subscriptions",
      "organizations_url": "https://api.github.com/users/liam-ot/orgs",
      "repos_url": "https://api.github.com/users/liam-ot/repos",
      "events_url": "https://api.github.com/users/liam-ot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liam-ot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-27T17:02:48Z",
    "updated_at": "2022-06-30T19:11:02Z",
    "author_association": "NONE",
    "body": "Hello,\r\n\r\nFirst thanks for the work being done on vyper\r\n\r\nusing vyper v0.3.3\r\nbrownie v1.19.0\r\n\r\nI'm wondering what the state of `bytes4` is at the moment in relation to its use in implementing the ERC165 interface?\r\n\r\nI'd also like to know is if it is possible to use the standard erc-721 contract provided by vyper as it is provided? and if not is there a workaround/timeline for when it will be a usable contract?\r\n\r\nI am using the standard vyper contract [here](https://github.com/vyperlang/vyper/blob/master/examples/tokens/ERC721.vy) and the reference to a bytes4 type on line 290 (`assert returnValue == method_id(\"onERC721Received(address,address,uint256,bytes)\", output_type=bytes4)`) is causing this error on compile\r\n\r\n```\r\nBrownie v1.19.0 - Python development framework for Ethereum\r\n\r\nCompiling contracts...\r\n  Vyper version: 0.2.16\r\nCompilerError: vyper returned the following errors:\r\n\r\nNo builtin or user-defined type named 'bytes4'\r\n  contract \"contracts/nft.vy\", function \"safeTransferFrom\", line 290:103 \r\n       289         # Throws if transfer destination is a contract which does not implement 'onERC721Received'\r\n  ---> 290         assert returnValue == method_id(\"onERC721Received(address,address,uint256,bytes)\", output_type=bytes4)\r\n  ----------------------------------------------------------------------------------------------------------------^\r\n       291\r\n```\r\n\r\nattempting to make the value a `Bytes[4]` or a `bytes32` causes this:\r\n\r\n```\r\nvyper.exceptions.VyperException: Compilation failed with the following errors:vyper.exceptions.VyperException: Compilation failed with the following errors:\r\n\r\nTypeMismatch: Cannot perform equality between dislike types\r\ncontract \"nft/contracts/nft.vy\", function \"safeTransferFrom\", line 290:15\r\n289 # Throws if transfer destination is a contract which does not implement 'onERC721Received'\r\n---> 290 assert returnValue == method_id(\"onERC721Received(address,address,uint256,bytes)\", output_type=bytes32)\r\n------------------------^\r\n291\r\n\r\n\r\nUndeclaredDefinition: 'uint2str' has not been declared.\r\ncontract \"nft/contracts/nft.vy\", function \"tokenURL\", line 378:32\r\n377 def tokenURL(tokenId: uint256) -> String[132]:\r\n---> 378 return concat(self.baseURL, uint2str(tokenId))\r\n-----------------------------------------^\r\n```\r\n\r\nwhich seems wholly unrelated",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1167616209/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1167742864",
    "html_url": "https://github.com/vyperlang/vyper/issues/2619#issuecomment-1167742864",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2619",
    "id": 1167742864,
    "node_id": "IC_kwDOBGDvrM5FmleQ",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-27T18:43:23Z",
    "updated_at": "2022-06-30T19:11:19Z",
    "author_association": "COLLABORATOR",
    "body": "@liam-ot this seems to be a heisenbug wrt which version of vyper is being used, cf. https://github.com/eth-brownie/brownie/issues/1566",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1167742864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1170844543",
    "html_url": "https://github.com/vyperlang/vyper/issues/2619#issuecomment-1170844543",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2619",
    "id": 1170844543,
    "node_id": "IC_kwDOBGDvrM5Fyat_",
    "user": {
      "login": "liam-ot",
      "id": 48032728,
      "node_id": "MDQ6VXNlcjQ4MDMyNzI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/48032728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liam-ot",
      "html_url": "https://github.com/liam-ot",
      "followers_url": "https://api.github.com/users/liam-ot/followers",
      "following_url": "https://api.github.com/users/liam-ot/following{/other_user}",
      "gists_url": "https://api.github.com/users/liam-ot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liam-ot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liam-ot/subscriptions",
      "organizations_url": "https://api.github.com/users/liam-ot/orgs",
      "repos_url": "https://api.github.com/users/liam-ot/repos",
      "events_url": "https://api.github.com/users/liam-ot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liam-ot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-30T07:02:33Z",
    "updated_at": "2022-06-30T19:11:27Z",
    "author_association": "NONE",
    "body": "@charles-cooper Thanks for the response. So basically there is no way to fix it at this moment? I tried changing to another older version of Vyper with no luck. Is there any workaround for using the bytes4 type as of now?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1170844543/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1171201143",
    "html_url": "https://github.com/vyperlang/vyper/issues/2619#issuecomment-1171201143",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2619",
    "id": 1171201143,
    "node_id": "IC_kwDOBGDvrM5Fzxx3",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-30T13:10:57Z",
    "updated_at": "2022-06-30T19:11:39Z",
    "author_association": "COLLABORATOR",
    "body": "@liam-ot I'd love to help you debug this but I think this issue is not an appropriate place since it is the spec for a feature. Could we move this conversation to another issue, [the discussions board](https://github.com/vyperlang/vyper/discussions), or [discord](https://discord.gg/6tw7PTM7C2)?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1171201143/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1171576353",
    "html_url": "https://github.com/vyperlang/vyper/issues/2619#issuecomment-1171576353",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2619",
    "id": 1171576353,
    "node_id": "IC_kwDOBGDvrM5F1NYh",
    "user": {
      "login": "liam-ot",
      "id": 48032728,
      "node_id": "MDQ6VXNlcjQ4MDMyNzI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/48032728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liam-ot",
      "html_url": "https://github.com/liam-ot",
      "followers_url": "https://api.github.com/users/liam-ot/followers",
      "following_url": "https://api.github.com/users/liam-ot/following{/other_user}",
      "gists_url": "https://api.github.com/users/liam-ot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liam-ot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liam-ot/subscriptions",
      "organizations_url": "https://api.github.com/users/liam-ot/orgs",
      "repos_url": "https://api.github.com/users/liam-ot/repos",
      "events_url": "https://api.github.com/users/liam-ot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liam-ot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-30T19:08:00Z",
    "updated_at": "2022-06-30T19:11:55Z",
    "author_association": "NONE",
    "body": "yes @charles-cooper I will open a new issue, thanks a lot for being so helpful.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1171576353/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
