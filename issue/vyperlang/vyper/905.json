{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/905",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/905/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/905/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/905/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/905",
  "id": 333078945,
  "node_id": "MDU6SXNzdWUzMzMwNzg5NDU=",
  "number": 905,
  "title": "Style guide",
  "user": {
    "login": "fulldecent",
    "id": 382183,
    "node_id": "MDQ6VXNlcjM4MjE4Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fulldecent",
    "html_url": "https://github.com/fulldecent",
    "followers_url": "https://api.github.com/users/fulldecent/followers",
    "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
    "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
    "organizations_url": "https://api.github.com/users/fulldecent/orgs",
    "repos_url": "https://api.github.com/users/fulldecent/repos",
    "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fulldecent/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 479554964,
      "node_id": "MDU6TGFiZWw0Nzk1NTQ5NjQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/enhancement",
      "name": "enhancement",
      "color": "84b6eb",
      "default": true,
      "description": null
    },
    {
      "id": 684449300,
      "node_id": "MDU6TGFiZWw2ODQ0NDkzMDA=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/Easy%20Pickings",
      "name": "Easy Pickings",
      "color": "0e8a16",
      "default": false,
      "description": "Used to denote issues that should be easy to implement"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2018-06-17T17:31:39Z",
  "updated_at": "2020-01-24T02:49:54Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Add a coding style guide to Vyper and use it consistently.\r\n\r\nCurrently examples include both camel rase (https://github.com/ethereum/vyper/blob/master/docs/structure-of-a-contract.rst `storedData `) and snake case (https://github.com/ethereum/vyper/blob/235e1126c292985b98988043bad79b71bb08bb7d/examples/stock/company.v.py `total_shares `) for the same type of thing.\r\n\r\nI do not know which one is canonical and this is a distraction from writing code.\r\n\r\n# Work plan\r\n\r\n- [ ] Decide the canonical style\r\n- [ ] Document it at https://vyper.readthedocs.io/en/latest/\r\n- [ ] Update code examples to use this style\r\n- [ ] Notify external parties like https://vyper.online and request they also adopt it\r\n\r\n# Discussion\r\n\r\nFunction names, parameter names, events and public variable names are user-visible. Maybe in the future all contract calls will be hidden from the end user -- but for the foreseeable future, people will be confirming transactions on Etherscan and using MetaMask to confirm details before they click \"accept\".\r\n\r\nIn order to be consistent with other deployed contracts, I recommend we adopt from [Solidity Style Guide](https://solidity.readthedocs.io/en/v0.4.24/style-guide.html) anything that affects the end-user. This includes function names, parameter names, etc.\r\n\r\nAdditionally, having a style guide directly increases human readability of code which is a prime goal of the Vyper project.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/905/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/905/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/397893974",
    "html_url": "https://github.com/vyperlang/vyper/issues/905#issuecomment-397893974",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/905",
    "id": 397893974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Nzg5Mzk3NA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-17T17:33:09Z",
    "updated_at": "2018-06-17T17:34:18Z",
    "author_association": "MEMBER",
    "body": "Solidity uses camel case and has defined several standards. The standards' function signatures would be different if using snake case, so we may have to accept that begrudgingly",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/397893974/reactions",
      "total_count": 4,
      "+1": 1,
      "-1": 3,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/397908569",
    "html_url": "https://github.com/vyperlang/vyper/issues/905#issuecomment-397908569",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/905",
    "id": 397908569,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzkwODU2OQ==",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-17T21:44:03Z",
    "updated_at": "2018-06-17T21:44:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Solidity's style guide is based on PEP8, so converting the guide from Solidity to Vyper should be doable. \r\n\r\nI do think Vyper (and future languages) are obligated to adopt camelCase for external functions, but it seems reasonable to me that private functions, and all other names can follow Python conventions.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/397908569/reactions",
      "total_count": 3,
      "+1": 2,
      "-1": 1,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/398006306",
    "html_url": "https://github.com/vyperlang/vyper/issues/905#issuecomment-398006306",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/905",
    "id": 398006306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODAwNjMwNg==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-18T10:08:53Z",
    "updated_at": "2018-06-18T10:08:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "We can also consider to add some of the style rules to the compiler (e.g. all public function should be camelcase).\r\nThis is a feature that I believe will make it much easier for people to adopt the style :tongue: ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/398006306/reactions",
      "total_count": 4,
      "+1": 3,
      "-1": 1,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/400021206",
    "html_url": "https://github.com/vyperlang/vyper/issues/905#issuecomment-400021206",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/905",
    "id": 400021206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDAyMTIwNg==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-25T16:53:51Z",
    "updated_at": "2018-06-25T16:53:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "As discussed on https://github.com/ethereum/vyper/pull/925, we will probably have to go with camelcasing all methods like solidity. The thought process goes like:\r\n\r\n1.) Public method require it thanks to ERC's\r\n2.) To keep method casing consistent we have to match it accross internal & public functions.\r\n\r\nI still think we should only apply the hard camelcase check on public methods though.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/400021206/reactions",
      "total_count": 3,
      "+1": 2,
      "-1": 1,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/400154593",
    "html_url": "https://github.com/vyperlang/vyper/issues/905#issuecomment-400154593",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/905",
    "id": 400154593,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDE1NDU5Mw==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-26T02:12:13Z",
    "updated_at": "2018-06-26T02:12:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "For reference, here are the parts of the Solidity style guide that are visible outside just Solidity.\r\n\r\nSOURCE: https://solidity.readthedocs.io/en/v0.4.24/style-guide.html\r\n\r\n---\r\n\r\n# Style Guide [EXCERPTS]\r\n\r\n## Naming Conventions\r\n\r\nNaming conventions are powerful when adopted and used broadly. The use of different conventions can convey significant *meta* information that would otherwise not be immediately available.\r\n\r\nThe naming recommendations given here are intended to improve the readability, and thus they are not rules, but rather guidelines to try and help convey the most information through the names of things.\r\n\r\nLastly, consistency within a codebase should always supercede any conventions outlined in this document.\r\n\r\n### Naming Styles\r\n\r\nTo avoid confusion, the following names will be used to refer to different naming styles.\r\n\r\n- `b` (single lowercase letter)\r\n- `B` (single uppercase letter)\r\n- `lowercase`\r\n- `lower_case_with_underscores`\r\n- `UPPERCASE`\r\n- `UPPER_CASE_WITH_UNDERSCORES`\r\n- `CapitalizedWords` (or CapWords)\r\n- `mixedCase` (differs from CapitalizedWords by initial lowercase character!)\r\n- `Capitalized_Words_With_Underscores`\r\n\r\nNote\r\n\r\nWhen using initialisms in CapWords, capitalize all the letters of the initialisms. Thus HTTPServerError is better than HttpServerError. When using initialisms is mixedCase, capitalize all the letters of the initialisms, except keep the first one lower case if it is the beginning of the name. Thus xmlHTTPRequest is better than XMLHTTPRequest.\r\n\r\n### Names to Avoid\r\n\r\n- `l` - Lowercase letter el\r\n- `O` - Uppercase letter oh\r\n- `I` - Uppercase letter eye\r\n\r\nNever use any of these for single letter variable names. They are often indistinguishable from the numerals one and zero.\r\n\r\n### Contract and Library Names\r\n\r\nContracts and libraries should be named using the CapWords style. Examples: `SimpleToken`, `SmartBank`, `CertificateHashRepository`, `Player`.\r\n\r\n### Struct Names\r\n\r\nStructs should be named using the CapWords style. Examples: `MyCoin`, `Position`, `PositionXY`.\r\n\r\n### Event Names\r\n\r\nEvents should be named using the CapWords style. Examples: `Deposit`, `Transfer`, `Approval`, `BeforeTransfer`, `AfterTransfer`.\r\n\r\n### Function Names\r\n\r\nFunctions other than constructors should use mixedCase. Examples: `getBalance`, `transfer`, `verifyOwner`, `addMember`, `changeOwner`.\r\n\r\n### Function Argument Names\r\n\r\nFunction arguments should use mixedCase. Examples: `initialSupply`, `account`, `recipientAddress`, `senderAddress`, `newOwner`.\r\n\r\nWhen writing library functions that operate on a custom struct, the struct should be the first argument and should always be named `self`.\r\n\r\n### Local and State Variable Names\r\n\r\nUse mixedCase. Examples: `totalSupply`, `remainingSupply`, `balancesOf`, `creatorAddress`, `isPreSale`, `tokenExchangeRate`.\r\n\r\n### Constants\r\n\r\nConstants should be named with all capital letters with underscores separating words. Examples: `MAX_BLOCKS`, `TOKEN_NAME`, `TOKEN_TICKER`, `CONTRACT_VERSION`.\r\n\r\n### Enums\r\n\r\nEnums, in the style of simple type declarations, should be named using the CapWords style. Examples: `TokenGroup`, `Frame`, `HashStyle`, `CharacterLocation`.\r\n\r\n### Avoiding Naming Collisions\r\n\r\n- `single_trailing_underscore_`\r\n\r\nThis convention is suggested when the desired name collides with that of a built-in or otherwise reserved name.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/400154593/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/513850084",
    "html_url": "https://github.com/vyperlang/vyper/issues/905#issuecomment-513850084",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/905",
    "id": 513850084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzg1MDA4NA==",
    "user": {
      "login": "samajammin",
      "id": 8097623,
      "node_id": "MDQ6VXNlcjgwOTc2MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8097623?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/samajammin",
      "html_url": "https://github.com/samajammin",
      "followers_url": "https://api.github.com/users/samajammin/followers",
      "following_url": "https://api.github.com/users/samajammin/following{/other_user}",
      "gists_url": "https://api.github.com/users/samajammin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/samajammin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/samajammin/subscriptions",
      "organizations_url": "https://api.github.com/users/samajammin/orgs",
      "repos_url": "https://api.github.com/users/samajammin/repos",
      "events_url": "https://api.github.com/users/samajammin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/samajammin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-22T16:11:40Z",
    "updated_at": "2019-07-22T16:11:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thank you all for putting thought into this! \r\n\r\nCurious where this stands now? Function names and storage variables as camelCase make sense to me, given ERC requirements. Have we reached a consensus on function argument names and local variables? Looking through the example contracts in the Vyper docs, there seems to still be a mix of camelCase vs. snake_case for those. I also see the occasional underscore before the function argument names (e.g. `_beneficiary`) - any specific meaning behind the use of that?\r\n\r\nHappy to help update the docs if/once these have been established.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/513850084/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
