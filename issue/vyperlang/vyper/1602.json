{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/1602",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/1602/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/1602/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/1602/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/1602",
  "id": 490328154,
  "node_id": "MDU6SXNzdWU0OTAzMjgxNTQ=",
  "number": 1602,
  "title": "ABI decoding byte array offsets allows overflows",
  "user": {
    "login": "wadealexc",
    "id": 18387287,
    "node_id": "MDQ6VXNlcjE4Mzg3Mjg3",
    "avatar_url": "https://avatars.githubusercontent.com/u/18387287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wadealexc",
    "html_url": "https://github.com/wadealexc",
    "followers_url": "https://api.github.com/users/wadealexc/followers",
    "following_url": "https://api.github.com/users/wadealexc/following{/other_user}",
    "gists_url": "https://api.github.com/users/wadealexc/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wadealexc/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wadealexc/subscriptions",
    "organizations_url": "https://api.github.com/users/wadealexc/orgs",
    "repos_url": "https://api.github.com/users/wadealexc/repos",
    "events_url": "https://api.github.com/users/wadealexc/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wadealexc/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 14,
  "created_at": "2019-09-06T13:28:47Z",
  "updated_at": "2020-01-24T18:55:56Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Version Information\r\n\r\n* vyper Version (output of `vyper --version`): 0.1.0-beta.12\r\n\r\n### What's your issue about?\r\n\r\nThe ABI uses calldata offsets to point to the location of dynamically-sized data. Vyper does not check for overflow when evaluating these offsets. For example:\r\n\r\n```\r\n@public\r\n@constant\r\ndef temp(arr: bytes[1024]) -> bytes[1024]:\r\n    return arr\r\n```\r\n\r\nThe above contract does not correctly decode calldata provided by this Solidity contract:\r\n\r\n```\r\npragma solidity ^0.5.0;\r\n\r\ncontract Test {\r\n\r\n    bytes constant DATA = bytes(\"Hello, world!\");\r\n\r\n    function test(address _vyContract) public view returns (string memory) {\r\n        bytes memory payload \r\n            = abi.encodeWithSignature(\"temp(bytes)\", DATA);\r\n        \r\n        assembly {\r\n            let neg := sub(0, 4)\r\n            mstore(add(0x24, payload), neg) // modify offset of bytes array\r\n            let res := staticcall(gas, _vyContract, add(0x20, payload), mload(payload), 0, 0)\r\n            returndatacopy(0, 0, returndatasize)\r\n            return(0, returndatasize)\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nSpecifically, this line in the LLL contains the overflow issue: `[calldatacopy, 320, [add, 4, [calldataload, 4]], 1056]`. This is located [here](https://github.com/ethereum/vyper/blob/161acb0f811a74bb5ef9c2dd24ed21e294b1b7b5/vyper/parser/function_definitions/parse_public_function.py#L233-L234) in the code.\r\n\r\n### How can it be fixed?\r\n\r\nCheck offset calculations for overflow, or make sure offsets are pointing within the bounds of `CALLDATASIZE`\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/1602/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/1602/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/528937128",
    "html_url": "https://github.com/vyperlang/vyper/issues/1602#issuecomment-528937128",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1602",
    "id": 528937128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODkzNzEyOA==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-06T17:13:36Z",
    "updated_at": "2019-09-06T17:13:36Z",
    "author_association": "COLLABORATOR",
    "body": "Thanks for the report! I am having trouble why this is a vyper issue. What is the expected behavior when the caller provides malformed data?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/528937128/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/528944867",
    "html_url": "https://github.com/vyperlang/vyper/issues/1602#issuecomment-528944867",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1602",
    "id": 528944867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODk0NDg2Nw==",
    "user": {
      "login": "wadealexc",
      "id": 18387287,
      "node_id": "MDQ6VXNlcjE4Mzg3Mjg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/18387287?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wadealexc",
      "html_url": "https://github.com/wadealexc",
      "followers_url": "https://api.github.com/users/wadealexc/followers",
      "following_url": "https://api.github.com/users/wadealexc/following{/other_user}",
      "gists_url": "https://api.github.com/users/wadealexc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wadealexc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wadealexc/subscriptions",
      "organizations_url": "https://api.github.com/users/wadealexc/orgs",
      "repos_url": "https://api.github.com/users/wadealexc/repos",
      "events_url": "https://api.github.com/users/wadealexc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wadealexc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-06T17:34:49Z",
    "updated_at": "2019-09-06T17:34:49Z",
    "author_association": "NONE",
    "body": "The data isn't really malformed. It's valid, ABI-encoded data that points outside of the range of calldata. Vyper should detect this and revert.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/528944867/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/528958149",
    "html_url": "https://github.com/vyperlang/vyper/issues/1602#issuecomment-528958149",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1602",
    "id": 528958149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODk1ODE0OQ==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-06T18:11:05Z",
    "updated_at": "2019-09-06T18:11:05Z",
    "author_association": "COLLABORATOR",
    "body": "I guess I still don't understand. Doesn't the spec say that the offset word points to `tail(X(i))`? https://solidity.readthedocs.io/en/v0.5.3/abi-spec.html#formal-specification-of-the-encoding. I always get tripped up reading this spec so I am happy to be corrected if my understanding is incorrect.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/528958149/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/529206575",
    "html_url": "https://github.com/vyperlang/vyper/issues/1602#issuecomment-529206575",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1602",
    "id": 529206575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTIwNjU3NQ==",
    "user": {
      "login": "wadealexc",
      "id": 18387287,
      "node_id": "MDQ6VXNlcjE4Mzg3Mjg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/18387287?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wadealexc",
      "html_url": "https://github.com/wadealexc",
      "followers_url": "https://api.github.com/users/wadealexc/followers",
      "following_url": "https://api.github.com/users/wadealexc/following{/other_user}",
      "gists_url": "https://api.github.com/users/wadealexc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wadealexc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wadealexc/subscriptions",
      "organizations_url": "https://api.github.com/users/wadealexc/orgs",
      "repos_url": "https://api.github.com/users/wadealexc/repos",
      "events_url": "https://api.github.com/users/wadealexc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wadealexc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-08T14:14:52Z",
    "updated_at": "2019-09-08T14:14:52Z",
    "author_association": "NONE",
    "body": "Sorry, I don't think my initial reply was particularly clear. The example I gave shows that Vyper accepts an overflow during ABI decoding which leads to it reading the first 32 bytes of calldata and treating it as an array size. In every variation I tried, this led to the call failing because `CALLDATACOPY` inevitably reads from a massive index in calldata. While I'm not convinced this is exploitable behavior, it seems much safer to check for the overflow and explicitly revert the transaction, rather than allow the behavior and fail because of the gas limit.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/529206575/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/529232684",
    "html_url": "https://github.com/vyperlang/vyper/issues/1602#issuecomment-529232684",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1602",
    "id": 529232684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTIzMjY4NA==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-08T19:10:54Z",
    "updated_at": "2019-09-08T19:10:54Z",
    "author_association": "COLLABORATOR",
    "body": "My understanding of the spec is that the offset word must point to where the data is. If it doesn't, it is ipso facto invalid input. Unless I am misunderstanding the spec.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/529232684/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/529235556",
    "html_url": "https://github.com/vyperlang/vyper/issues/1602#issuecomment-529235556",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1602",
    "id": 529235556,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTIzNTU1Ng==",
    "user": {
      "login": "wadealexc",
      "id": 18387287,
      "node_id": "MDQ6VXNlcjE4Mzg3Mjg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/18387287?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wadealexc",
      "html_url": "https://github.com/wadealexc",
      "followers_url": "https://api.github.com/users/wadealexc/followers",
      "following_url": "https://api.github.com/users/wadealexc/following{/other_user}",
      "gists_url": "https://api.github.com/users/wadealexc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wadealexc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wadealexc/subscriptions",
      "organizations_url": "https://api.github.com/users/wadealexc/orgs",
      "repos_url": "https://api.github.com/users/wadealexc/repos",
      "events_url": "https://api.github.com/users/wadealexc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wadealexc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-08T19:49:15Z",
    "updated_at": "2019-09-08T19:49:15Z",
    "author_association": "NONE",
    "body": "That is certainly true, but my point is that (because of the overflow) Vyper is not reading from where the offset points. If there were data there (nevermind the cost of accessing it), Vyper would not read it correctly.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/529235556/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/529237392",
    "html_url": "https://github.com/vyperlang/vyper/issues/1602#issuecomment-529237392",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1602",
    "id": 529237392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTIzNzM5Mg==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-08T20:13:57Z",
    "updated_at": "2019-09-08T20:28:45Z",
    "author_association": "COLLABORATOR",
    "body": "Yes but the same would hold true if the offset pointed to any other location. I suppose that Vyper _could_ validate that all the offsets are valid (i.e., start at `dynamic_section_start`, and check `offset_n` is equal to `offset_n-1` + `len_n-1` for all offsets), but this seems like unnecessary gas to spend on something where there is no attack vector (and the entire point of ABIv2 is to have O(1) access to data instead of O(n) access). **_If_** we can construct an attack vector (and I am beginning to suspect that there are indeed vectors here) then we should definitely consider doing this validation, otherwise it seems the worst case is an inconvenience to callers who provide invalid input getting tx failure instead of revert.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/529237392/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/529239983",
    "html_url": "https://github.com/vyperlang/vyper/issues/1602#issuecomment-529239983",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1602",
    "id": 529239983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTIzOTk4Mw==",
    "user": {
      "login": "wadealexc",
      "id": 18387287,
      "node_id": "MDQ6VXNlcjE4Mzg3Mjg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/18387287?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wadealexc",
      "html_url": "https://github.com/wadealexc",
      "followers_url": "https://api.github.com/users/wadealexc/followers",
      "following_url": "https://api.github.com/users/wadealexc/following{/other_user}",
      "gists_url": "https://api.github.com/users/wadealexc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wadealexc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wadealexc/subscriptions",
      "organizations_url": "https://api.github.com/users/wadealexc/orgs",
      "repos_url": "https://api.github.com/users/wadealexc/repos",
      "events_url": "https://api.github.com/users/wadealexc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wadealexc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-08T20:44:18Z",
    "updated_at": "2019-09-08T20:44:18Z",
    "author_association": "NONE",
    "body": "What attack vectors are you beginning to suspect? I'm very curious!\r\n\r\nRegardless of the existence of a tangible attack vector - this is the type of edge-case in behavior that can exacerbate other issues. Cleaning it up allows you to make much stronger statements about the behavior of the abi decoder, which is why I recommend it!",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/529239983/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/529240533",
    "html_url": "https://github.com/vyperlang/vyper/issues/1602#issuecomment-529240533",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1602",
    "id": 529240533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTI0MDUzMw==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-08T20:51:53Z",
    "updated_at": "2019-09-08T20:52:02Z",
    "author_association": "COLLABORATOR",
    "body": "> What attack vectors are you beginning to suspect? I'm very curious!\r\n\r\nI don't have it fully fleshed out but an attacker might be able to take advantage of the offset pointing somewhere unexpected. So for example, let's say you have a contract which checks some bytearrays against some value. For instance,\r\n\r\n```python\r\ndef check_withdraw(sig1: bytes[100], sig2: bytes[100]) : \r\n  if sig1 == sig2 : \r\n    send(msg.sender, balance)\r\n```\r\n\r\nUsing the technique in this issue, an attacker could set the offset of `sig2` to be the offset of `sig1`, and then the check always evaluates to true.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/529240533/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/529241202",
    "html_url": "https://github.com/vyperlang/vyper/issues/1602#issuecomment-529241202",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1602",
    "id": 529241202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTI0MTIwMg==",
    "user": {
      "login": "wadealexc",
      "id": 18387287,
      "node_id": "MDQ6VXNlcjE4Mzg3Mjg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/18387287?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wadealexc",
      "html_url": "https://github.com/wadealexc",
      "followers_url": "https://api.github.com/users/wadealexc/followers",
      "following_url": "https://api.github.com/users/wadealexc/following{/other_user}",
      "gists_url": "https://api.github.com/users/wadealexc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wadealexc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wadealexc/subscriptions",
      "organizations_url": "https://api.github.com/users/wadealexc/orgs",
      "repos_url": "https://api.github.com/users/wadealexc/repos",
      "events_url": "https://api.github.com/users/wadealexc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wadealexc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-08T21:01:23Z",
    "updated_at": "2019-09-08T21:01:23Z",
    "author_association": "NONE",
    "body": "Yes, that's actually allowed in Solidity - and you don't need to do any overflow weirdness. Just set them to the same offset. By the ABI specification, those are the same array :)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/529241202/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/529241748",
    "html_url": "https://github.com/vyperlang/vyper/issues/1602#issuecomment-529241748",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1602",
    "id": 529241748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTI0MTc0OA==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-08T21:07:31Z",
    "updated_at": "2019-09-08T21:07:31Z",
    "author_association": "COLLABORATOR",
    "body": "Well then maybe there are some solidity contracts which are susceptible to this attack. I don't think that calldata which has the offset of `sig2` set to the offset of `sig1` is actually valid ABI-encoded data. Whether contracts check for this is a different matter. From https://solidity.readthedocs.io/en/v0.5.3/abi-spec.html#design-criteria-for-the-encoding:\r\n\r\n> The data of a variable or array element is not interleaved with other data and it is relocatable, i.e. it only uses relative “addresses”.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/529241748/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/531417984",
    "html_url": "https://github.com/vyperlang/vyper/issues/1602#issuecomment-531417984",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1602",
    "id": 531417984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMTQxNzk4NA==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-13T23:11:12Z",
    "updated_at": "2019-09-13T23:11:12Z",
    "author_association": "COLLABORATOR",
    "body": "After thinking about it some more, I don't think this would result in a serious attack vector (any more than a caller switching two variables).",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/531417984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/577978353",
    "html_url": "https://github.com/vyperlang/vyper/issues/1602#issuecomment-577978353",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1602",
    "id": 577978353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3Nzk3ODM1Mw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-24T03:36:30Z",
    "updated_at": "2020-01-24T03:36:30Z",
    "author_association": "MEMBER",
    "body": "@charles-cooper what's the outcome of this issue?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/577978353/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/578255831",
    "html_url": "https://github.com/vyperlang/vyper/issues/1602#issuecomment-578255831",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1602",
    "id": 578255831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODI1NTgzMQ==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-24T18:55:55Z",
    "updated_at": "2020-01-24T18:55:55Z",
    "author_association": "COLLABORATOR",
    "body": "@fubuloubu not sure, let's bring it up at another meeting",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/578255831/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 2
    },
    "performed_via_github_app": null
  }
]
