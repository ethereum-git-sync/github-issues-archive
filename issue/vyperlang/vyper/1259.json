{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/1259",
  "id": 412142437,
  "node_id": "MDU6SXNzdWU0MTIxNDI0Mzc=",
  "number": 1259,
  "title": "Meta Issue: Tracker for codebase cleanup",
  "user": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 32,
  "created_at": "2019-02-19T21:54:47Z",
  "updated_at": "2019-07-24T16:55:18Z",
  "closed_at": "2019-07-24T16:55:18Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "This is a tracking issue that I'm using to dump my thoughts on things that can be cleaned up in this codebase.\r\n\r\n### General\r\n\r\n- [x] convert to circle-ci\r\n- [x] make codebase pep8 compliant\r\n- [x]  add mypy\r\n- [x]   use tox\r\n- [ ]  use `enum` instead of strings for `typ` values.\r\n- [ ] use docstrings instead of comments for class definitions in `vyper.types.types`\r\n- [x] Use `functools.wraps` for decorators\r\n- [ ] Use proper semantically meaningful exception classes instead of the base `Exception`\r\n- [ ] Create `Opcodes` Enum for easier referencing opcodes.\r\n- [ ] Use of floating point values seems like a foot gun.  Maybe use `decimal.Decimal`?\r\n- [ ] Use f-strings\r\n- [ ] Use of magic string in `location == \"memory\"` should be an Enum.\r\n- [ ] Rename `sha3` to `keccak` across codebase.\r\n\r\n### Specifics\r\n\r\n- [ ] `vyper.type.types.NodeType.__eq__`\r\n\r\nchange `NodeType.__eq__` to require subclasses to implement and remove `eq` hook.\r\n\r\n- [ ] `vyper.types.types.parse_type`\r\n\r\nTakes multiple arguments like `sigs`, `custom_units`, `custom_structs` and\r\n`constants`.  Current read of the code suggests there are data structures which\r\nhave been defined in the code and thus, this gives the parser the ability to\r\nproperly parse the AST into these types.  If so, I believe this should be\r\nformalized into something akin to the WASM `Store` to wrap these data\r\nstructures up into a single wrapper for easier and less error prone\r\nportability.\r\n\r\n- [ ] `vyper.types.types.StructType`\r\n\r\nTakes a mapping of `field_name -> field_type` for `members` argument.  This\r\nrelies on dictionary ordering (which is admittedly now reliable) but also is a\r\nmore difficuult data structure to reliably type hint.  Consider using an\r\niterable of 2-tuples: `(('field_a', TypeA), ('field_b', TypeB))`.  Benefits are\r\neasier type safety through type hinting.  Cons are additional validation step\r\nto ensure field uniqueness.\r\n\r\n- [ ] `vyper.types.types.get_size_of_type`\r\n\r\nRelies on prior knowledge about types.  This should probably be an API of the\r\ntype classes.\r\n\r\n- [ ] `vyper.types.types.has_dynamic_data`\r\n\r\nRelies on prior knowledge about types to determine.  This should probably just\r\nbe an API of the type classes.\r\n\r\n- [ ] `vyper.functions.signature.signature`\r\n\r\nUses non-canonical `argz` and `kwargz` with `z` suffixes.  Convert to normal `*args, **kwargs`\r\n\r\nInner `decorator` function isn't using `functools.wraps`.\r\n\r\nMore usage of *magic* strings where an `Enum` is probably better.\r\n\r\n\r\n- [ ] `vyper.opcodes`\r\n\r\nReplace use of `list` with `NamedTuple`.\r\n\r\n\r\n- [ ] `vyper.compiler.gas_estimate`\r\n\r\nUses runtime `assert` statement which is easily disabled.  Change to explicit exception raising.\r\n\r\n- [x] `vyper.compiler.mk_full_signature`\r\n\r\nLoop uses enumerate to generate indices `idx` used to modify `abi` at that\r\nindices.  Instead, use `zip` to pair functions with their abi definitions.\r\n\r\n- [ ] `vyper.compiler.get_source_map`\r\n\r\nBuilds dict using mutation.  Vendor a version of `to_dict` decorator to remove mutation pattern.\r\n\r\n- [x] `vyper.compiler.compile_codes`\r\n\r\nUses mutable data structure as default for argument\r\n\r\nUse of **magic** strings for `output_type` should be constrained to enums.\r\n\r\n- [x] `vyper.compiler.compile_code`\r\n\r\nUses mutable data structure as default for argument\r\n\r\n- [ ] `vyper.compiler.get_asm`\r\n\r\nconstant string mutation (which actual ends up as full object copies) adds\r\noverhead.  Converting to a wrapped generator pattern that joins all of the\r\nproduced strings at the end **should** be more performant and remove mutation.\r\n\r\n\r\n- [ ] `vyper.compile_lll`\r\n\r\nUse of `next_symbol` global counter appears to be used to create a *unique*\r\nmarker in the code such as `_sym_0`, `_sym_1`.  Replace with\r\n`itertools.count()`.  Replace with `uuid.uuid4()`.  Replace with generator\r\nfunction that wraps an `itertools.count()` style counter.  Embed within an\r\nobject with a defined lifecycle that gets passed around during compilation.\r\n\r\n- [ ] `vyper.compile_lll.is_symbol`\r\n\r\nReplace use of *magic* string with something more concrete like a custom class.\r\nPotentially the custom class could handle the mechanism for generating unique\r\nsymbols.\r\n\r\n- [ ] `vyper.compile_lll.instruction`\r\n\r\n`instruction` is a class and thus should be named using common convention\r\n`Instruction`.\r\n\r\n- [x] `vyper.compile_lll.apply_line_numbers`\r\n\r\nNeeds to use `functools.wraps` for inner function.\r\n\r\n- [ ] `vyper.compile_lll.compile_to_assembly`\r\n\r\nConvert runtime `assert` statements to raise proper exceptions.\r\n\r\n- [ ] `vyper.compile_lll.compile_to_assembly`\r\n\r\nDetection of whether something is or is not an opcode is done via\r\n`isinstance(value, str) and value in opcodes`.  If we had an `Opcodes` Enum\r\nthis could be as simple as checking if `Opcodes(value)` raised an exception or\r\nnot.\r\n\r\n- [ ] `vyper.compile_lll.compile_to_assembly`\r\n\r\nUse of inlined opcode string values like `\"PUSH\"` would be better as Enum or constant values.\r\n\r\n- [ ] `vyper.compile_lll.compile_to_assembly`\r\n\r\nIndividual blocks in the `if/elif/.../else` block could be partitioned off into smaller standalone functions.\r\n\r\n- [ ] `vyper.compile_lll.compile_to_assembly`\r\n\r\nThe section that handles clamping values has an `if/elif` which is missing a\r\nfinal `else` clause allowing for undefined behavior if none of the conditions\r\nevaluates truthy\r\n\r\n- [ ] `vyper.compile_lll.assembly_to_evm`\r\n\r\nUse formal data structure for `line_number_map` instead of dictionary.\r\n\r\n- [ ] `vyper.compile_lll.assembly_to_evm`\r\n\r\nInside of the `if isinstance(item, list)`, the local value `line_number_map` is\r\noverwritten which appears to be a potentially destructive mistake as it will\r\ndestroy any state that was previously built up locally.\r\n\r\n- [ ] `vyper.optimizer.get_int_at`\r\n\r\nUses inline logic for converting a value to a signed integer.  Should be extracted into utility that is tested.\r\n\r\n- [ ] `vyper.util.is_instances`\r\n\r\nConfusingly named.  Very visually similar to `isinstance`.  Maybe rename to a `all_is_instances`\r\n\r\n- [ ] `vyper.parser.constants.Constants.unroll_constant`\r\n\r\nUse of `fail` flag is antipattern.  Restructure to allow inlined exception raising.\r\n\r\n- [x] `vyper.parser.context.Context.start_blockscope` and others\r\n\r\nThe various function pairs like `start_blockscope/end_blockscope`,\r\n`set_in_assertion`, `set_in_for_loop/remove_in_for_loop` should be converted to\r\nuse context manager pattern so that exiting the scope cannot be accidentally\r\nforgotten.\r\n\r\n- [ ] `vyper.parser.global_ctx.GlobalContext.get_item_name_and_attributes`\r\n\r\nReturns `None` for item name in final block which suggests there is either a\r\ncase where something does not have a name or that there is return value\r\nchecking occuring somewhere.\r\n\r\n- [ ] `vyper.parser.stmt.Statements._check_valid_assign`\r\n\r\nDoes not have a final `else` block allowing function to exit if none of the conditions evaluate truthy.\r\n\r\n- [ ] `vyper.parser.stmt.Statements.parse_for`\r\n\r\nUses implicit `else` for final clause type.  Should be converted to explicitely\r\ncheck that the statement is formed as expected and add a final `else` block\r\nthat raises an invariant exception.\r\n",
  "closed_by": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/1259/reactions",
    "total_count": 3,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 3,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465341076",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-465341076",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 465341076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTM0MTA3Ng==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-19T22:41:29Z",
    "updated_at": "2019-02-19T22:41:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Look into enabling doctest",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465341076/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465348330",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-465348330",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 465348330,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTM0ODMzMA==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-19T23:04:39Z",
    "updated_at": "2019-02-19T23:16:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey @pipermerriam ,\r\n\r\nI did a quick scan - looks good. Here are some quick additional notes:\r\n>* convert to circle-ci\r\n>* tox\r\n\r\nThese would be great travis is super slow (and I don't have access).\r\n\r\n> * Create `Opcodes` Enum for easier referencing opcodes.\r\n\r\n\r\nWould require all LLL statmements tho use the Opcodes Enum or have to have lookup method attached to it (all LLL function values are currently strings). Writing with strings make it easier to read / parse mentally - so I vote we keep strings in the LLL. \r\n\r\n> \r\n> Takes multiple arguments like `sigs`, `custom_units`, `custom_structs` and\r\n> `constants`. Current read of the code suggests there are data structures which\r\n> have been defined in the code and thus, this gives the parser the ability to\r\n> properly parse the AST into these types. If so, I believe this should be\r\n> formalized into something akin to the WASM `Store` to wrap these data\r\n> structures up into a single wrapper for easier and less error prone\r\n> portability.\r\n\r\nAlot of those have been refactored to be contained on GlobalContext, and mostly can be refactored to pass global_ctx through instead, so check for that.\r\nHowever there are some base layer functions that will always require one to not pass them through, for example in some scenarios (building function signatures for interfaces don't have custom_units) you don't have global context populated, and in other cases you do.\r\n\r\nAdditionally, a lot of code in `parser.py` and `parser_utils.py` can be split of into sub modules (this has been my goal since I have started and have been trying to do so when possible). `parser.py` should contain parsing steps of basically Module / Function  & Context.\r\n\r\n> * `vyper.types.types.get_size_of_type`\r\n> \r\n> Relies on prior knowledge about types. This should probably be an API of the\r\n> type classes.\r\n> \r\n> \r\n> * `vyper.types.types.has_dynamic_data`\r\n> Relies on prior knowledge about types to determine. This should probably just\r\n> be an API of the type classes.\r\n \r\n\r\nWhat is meant by API of type classes, could you elaborate? I think having something like `BaseType.get_size(unit='bytes'|''bits')` could work well.\r\n\r\n\r\nAdditional items you can add:\r\n\r\n- location should use Enum too currently uses magic strings as well.\r\n- _Context_ should probably renamed to LocalContext to be more explicit.\r\n-   GlobalContext items on Context should be removed, and ctx._global_ctx should become ctx.global_ctx instead.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465348330/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465484029",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-465484029",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 465484029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTQ4NDAyOQ==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T08:56:19Z",
    "updated_at": "2019-02-20T10:19:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pipermerriam I am currently working on a PR then I will be helping with these issues, since they potentially touch a lot of code. I'd prefer we get it all done as quickly as possible, to avoid any big branch diverges :smile: ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465484029/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465584454",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-465584454",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 465584454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTU4NDQ1NA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T13:57:00Z",
    "updated_at": "2019-02-20T13:57:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jacqueswww lets deal with that kind of thing on a case-by-case basis.  Any of these that I deal will be done in an isolated way that touches the smallest possible section of code so if they do cause any conflicts I believe they should be reasonably easy to resolve and I'm happy to either work with you to rebase your branches or to rebase them for you in the event something messy occurs.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465584454/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465588558",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-465588558",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 465588558,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTU4ODU1OA==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T14:06:29Z",
    "updated_at": "2019-02-20T14:06:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pipermerriam works for me :+1:  let's see how it goes, I checked the open PRs now, and I think we'll just deal with them as they come along.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465588558/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465753468",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-465753468",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 465753468,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTc1MzQ2OA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T21:04:47Z",
    "updated_at": "2019-02-20T21:04:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "- replace much of what is in `vyper.utils` with `eth-utils` utility functions.\r\n- rename `sha3` to `keccak` across codebase.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465753468/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465769878",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-465769878",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 465769878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTc2OTg3OA==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T21:53:38Z",
    "updated_at": "2019-02-20T21:55:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "> * replace much of what is in `vyper.utils` with `eth-utils` utility functions.\r\n\r\nI'd prefer not to pull eth-utils for 1 function, as eth-utils pulls in 4 other dependencies of only one traces back to a crypto lib for a keccak implementaiton.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465769878/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465796379",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-465796379",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 465796379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTc5NjM3OQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T23:23:50Z",
    "updated_at": "2019-02-20T23:23:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jacqueswww Minor *nitpicky* correction that it's 3 dependencies since `cytoolz/toolz` are functionally equivalent the way they are specified.\r\n\r\nThe `eth-utils` dependencies are:\r\n\r\n- `eth-hash` \r\n  - thin wrapper around what you are already doing with `pycryptodome` locally and `eth-utils` contains a `keccak` function which is a rough equivalent to the existing `vyper.utils.sha3` helper.\r\n- `eth-typing`\r\n  - Literally only contains common type hinting primatives, many of which would get duplicated in this repo at the point where type hints are added (assuming type hints get added).\r\n- `toolz/cytoolz`\r\n  - Very stable functional utility libraries that we use across the board across pretty much every python codebase.\r\n\r\nCan you elaborate on what issues or problems you see with any of these or maybe expand on your reasoning for not wanting these to end up as dependencies.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465796379/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465800915",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-465800915",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 465800915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTgwMDkxNQ==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T23:43:08Z",
    "updated_at": "2019-02-21T00:06:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pipermerriam The first reason that would be that I tend to keep to stdlib as close as possible, more of a philosophical thing. It isn't that above libraries are not stable - but more about importing unnecessary dependencies (think _left-pad_ saga).\r\n\r\nThe more pragmatic reasons are:\r\n\r\n- Vyper has to be packaged in many different ways. On of which is browser js/wasm blob,  and there is additionally maintenance in maintaining this build (and others) with additional dependencies.  \r\n- The best solution to conflict dependency hell is not having dependencies. This is especially true if Vyper is to be included into other code bases, currently it's very hard to have Vyper conflict. Perfect example is someone using twig/populus with a specific versions.\r\n- In the past research team actually had direct conflicts with `py-ethereum` #735.  py-evm is off course much better split up - but I easily see conflicts still happening (and has happened to myself a couple of times e.g. vypers' eth-typing conflicts with the one I have setup for my current test suite).\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465800915/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465859291",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-465859291",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 465859291,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTg1OTI5MQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T04:39:06Z",
    "updated_at": "2019-02-21T04:39:06Z",
    "author_association": "MEMBER",
    "body": "To add another point, we have a requirement to allow users to use the compiler with any version we have uploaded, either through a redeployment (docker, snapcraft, browser blob) or through version pining the library itself. This is so someone could test with any version of the compiler without running into dependency issues so they can validate code written with different versions.\r\n\r\nSomething to think about.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465859291/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465875870",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-465875870",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 465875870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTg3NTg3MA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T06:16:22Z",
    "updated_at": "2019-02-21T06:16:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here's my best stab at convincing you that the policy on dependencies should be more permissible, though I do fully agree that new dependencies should be evaluated thoroughly.  This isn't an argument to say that `eth-utils` should be allowed (we can debate that one separately), but an argument that we should not have a policy of *no dependencies*.\r\n\r\n> The best solution to conflict dependency hell is not having dependencies.\r\n\r\nThis feels a little like sticking our heads in the sand.  We can have dependencies without having dependency hell.  I don't think this quite qualifies as a false dichotomy but I disagree that not having dependencies is the \"best solution\".  Even [Django has dependencies these days](https://github.com/django/django/blob/21ff23bfeb4014bceaa3df27677fb68409c0634d/setup.py#L86).  So does [`requests`](https://github.com/kennethreitz/requests/blob/c9309e4c59acfa757b34619205794e18f2009c43/setup.py#L44-L50).\r\n\r\nChoosing to not have dependencies also means choosing to duplicate functionality that exists in other libraries where it is well tested, documented, and most importantly maintained as public APIs.  The end result will be vyper accruing more and more vendored utility code, all of which will receive less maintenance, attention, tests, and bugfixes than it's equivalent from the libraries exposing it as public APIs.  I'll take the occasional dependency issue over this maintenance nightmare any day.  It's worth noting that `eth-utils` exists for exactly this reason.  Most everything in that library is there because it existed in multiple codebases and ended up suffering from things forgetting to apply bug fixes from one repository to all of the others.\r\n\r\nI am absolutely on board with being **very** conservative with the dependencies we add, but I think a blanket policy is a bad idea.\r\n\r\n>  In the past research team actually had direct conflicts with `py-ethereum`\r\n\r\nThis seems to be roughly the same as the previous point, but to address it directly, we aren't in the `pyethereum` days and haven't been for a long time.  The current suite of python+ethereum tools is maintained and supported by a team of 8 full time developers and an even larger group of active third party contributors.  I get that there is still scar tissue from the old days, but times have changed.\r\n\r\n-------------------------------------------------------\r\n\r\nAs for the issue about needing to vyper to be packaged in different ways, I'd like to objectively determine if adding these packages actually reduces our options there.  Who did the js/wasm blob creation?  Lets find out how we can have our cake and eat it too, since I suspect that we can have both (js/wasm portability and dependencies).",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465875870/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465876706",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-465876706",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 465876706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTg3NjcwNg==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T06:20:23Z",
    "updated_at": "2019-02-21T06:21:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "The requirement @fubuloubu mentions is important, but I also don't believe it's an argument to not have any dependencies, but rather one more thing to think about with respect to what we add and how we specify them.  I am confident we can approach this in a way that allows us some freedom of movement when it comes to adding a dependency that has been thoroughly reviewed and evaluated to fit whatever our necessary criteria are for such things.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465876706/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465896035",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-465896035",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 465896035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTg5NjAzNQ==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T07:46:24Z",
    "updated_at": "2019-02-21T11:37:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pipermerriam I don't think that argument is that we shouldn't have dependencies. But that we shouldn't have dependencies that a.) will cause users of Vyper pip hell b.) pull in needless dependencies that we don't need, and that's why I am not keen on `eth-utils`. `eth-typing` will cause trouble in the future because every single py-evm related package will depened on it. I would more than willing to go with `eth-utils` if it had no dependencies itself. \r\n\r\nTBH I don't understand why we have to be DRY about strict typing structs (`eth-typing`). What is wrong with having a Union or type alias in the codebase that uses them. mypy is basically a fancy linter and should be part of the `test` requirements if really necessary. It just feels to me that to have a linter dictate the dependency graph of shipping code, is going to hurt. Basically I am of the opion that a linting step should not dictate dependency graphs. Replace mypy with flake8, and you'd be super confused why you can't install vyper because of flake8 (not talking tests, just the compiler), which will happen especially if you have a lot of developers working on the separate repos.\r\n\r\nI do the wasm builds, and the currently build requires us to basically export the setup requirements and make sure they can build themselves, mostly it's not a problem but anything that does C compilation can be tricky, but all manageable - and if it becomes popular some better scripts can happen here.  https://github.com/jacqueswww/vyper-in-browser/tree/master/pyodide \r\n\r\nEdit: Ha, I see this uses `pysha3` because `pycryptodome` didn't compile. This perfect example of why having a very strict dependency policy saves you.\r\n\r\nEdit2: So from my side I am on board with pulling in dependencies, but they have to be very strictly evaluated for the value they bring, for this specific case I really don't feel the upside merits the extra dependency weight. Me raising all of the above is how one has to be, to be conservative about dependencies - this comes from my personal experience (not only python specific, do you remember yum hell?).  The cost of adding a dependency into your requirements / setup.py is unfairly low - to the potential downside it can cost in the long run.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465896035/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465969107",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-465969107",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 465969107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTk2OTEwNw==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T11:42:00Z",
    "updated_at": "2019-02-21T11:43:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Off dependency topic: I really like the suggested use case for ContextManager, and I will do PR for them soon :smile_cat:  ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/465969107/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/466035203",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-466035203",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 466035203,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjAzNTIwMw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T15:09:52Z",
    "updated_at": "2019-02-21T15:09:52Z",
    "author_association": "MEMBER",
    "body": "A potential argument for `eth-typing`: we should really type annotate our codebase. Will we require eth types to do so?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/466035203/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/466039575",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-466039575",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 466039575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjAzOTU3NQ==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T15:21:20Z",
    "updated_at": "2019-02-21T15:26:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fubuloubu I would argue not, everything in `eth-typing` can be defined on their own terms, `eth-typing` is a bunch of aliases. The dependency problem with it all is that you do an _import_ statement to import the types - thereby forever binding your code to `eth-typing`. This also means you have to know what is defined in the installed package to know what the alias means (for folks who don't have fancy IDEs). I am much much more in favour of each repository like vyper use it's own defined type names, and even better to strive for standard annotations as much as possible.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/466039575/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/466053189",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-466053189",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 466053189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjA1MzE4OQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T15:55:27Z",
    "updated_at": "2019-02-21T15:55:27Z",
    "author_association": "MEMBER",
    "body": "Everything in `pycryptodome` could be defined on its own too, it's not a complicated library and really we're only using 2-ish functions from it. Should we eschew all dependencies and start maintaining all functions internally?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/466053189/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/466054391",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-466054391",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 466054391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjA1NDM5MQ==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T15:58:30Z",
    "updated_at": "2019-02-21T16:03:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fubuloubu the difference is we actually use a function there.\r\nbefore:\r\n```\r\nvyper ->keccack lib\r\n```\r\nafter:\r\n```\r\nvyper -> eth_utils -> eth_hash -> keccack lib\r\n                            -> ctoolz/toolz etc. (still not sure why there are 2 equivalent libraries here?)\r\n                            -> eth typing\r\n ```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/466054391/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/466057009",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-466057009",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 466057009,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjA1NzAwOQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T16:05:07Z",
    "updated_at": "2019-02-21T16:05:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "`eth-typing `is by no means required for type hinting.  It's just a collection of common aliases.  I'm fine leaving it out.\r\n\r\n`eth-utils` is by no means required and I'm more than fine tabling it.\r\n\r\nAs of now, I don't have any dependencies that I'm going to make a case for adding and I'm glad that we appear to be on roughly the same page and I'm fine being extra conservative about adding dependencies.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/466057009/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/466057572",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-466057572",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 466057572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjA1NzU3Mg==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T16:06:26Z",
    "updated_at": "2019-02-21T16:06:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jacqueswww the `toolz/cytoolz` auto negotiates install based on the base python architecture since `cytoolz` doesn't play nice with `pypy` but is significantly faster than `toolz` when we're in an environment that supports c-extensions.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/466057572/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/466058103",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-466058103",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 466058103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjA1ODEwMw==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T16:07:40Z",
    "updated_at": "2019-02-21T16:12:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pipermerriam ah I see! it's so it's so that py-evm can run on `pypy` make sense (and speed boost) :)\r\nWould you perhaps review my PR, https://github.com/ethereum/vyper/pull/1269, I am a bit new to context managers and I'd appreciate your feedback (when you have a chance).",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/466058103/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/466059156",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-466059156",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 466059156,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjA1OTE1Ng==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T16:10:17Z",
    "updated_at": "2019-02-21T16:10:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pipermerriam also is it ok if I put tickboxes on the above ticket so we can keep track what has been done?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/466059156/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/466203142",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-466203142",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 466203142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjIwMzE0Mg==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T22:59:56Z",
    "updated_at": "2019-02-21T23:29:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "- *consider* converting inline vyper source files in tests to be standalone vyper files: `tests/parser/syntax/test_no_none.py`",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/466203142/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/466207673",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-466207673",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 466207673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjIwNzY3Mw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T23:15:07Z",
    "updated_at": "2019-02-21T23:15:07Z",
    "author_association": "MEMBER",
    "body": "@pipermerriam that may be a tall order, we have a bunch of programs, both for functional testing and for compilation checks. I am open to this though, would just require some special setup folder or something.\r\n\r\nOur larger examples are standalone files.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/466207673/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/466214582",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-466214582",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 466214582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjIxNDU4Mg==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T23:42:16Z",
    "updated_at": "2019-02-21T23:42:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "- [ ] convert `print(..)` statements in tests to use `logging` so that output can be throttled and controlled using standard pytest CLI apis.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/466214582/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/466215066",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-466215066",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 466215066,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjIxNTA2Ng==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T23:44:25Z",
    "updated_at": "2019-02-21T23:44:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "- [ ] replace the `assert_compile_failed` with standard `with pytest.raises(...)` style failure checks.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/466215066/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/467834114",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-467834114",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 467834114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzgzNDExNA==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-27T11:54:57Z",
    "updated_at": "2019-02-27T11:59:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "> * [ ]  convert `print(..)` statements in tests to use `logging` so that output can be throttled and controlled using standard pytest CLI apis.\r\n\r\nI think we should just remove those? I have never used them, and the test file name / test structure should inform the user of what's being testing in a specific file, or alternatively use a comment - don't see why using stdout doesn't provide the same but w/o print statements. I think it was maybe when all tests was in one big file?\r\n\r\nSo I'd just move those to top level comments, as they are still useful in terms of knowing more about what is being tested.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/467834114/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/473353061",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-473353061",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 473353061,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzM1MzA2MQ==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-15T16:26:47Z",
    "updated_at": "2019-03-15T16:26:47Z",
    "author_association": "COLLABORATOR",
    "body": "Continuing off https://github.com/ethereum/vyper/pull/1351#discussion_r266033074 I think we should a) have a `CompilerPanic` exception to replace asserts which suggests to the user to file a bug report, and b) catch all exceptions that aren't Vyper exceptions (e.g. ast.NameError, ValueError, etc.) at the top level and turn them into CompilerPanic. This is to help the user experience.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/473353061/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/473354750",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-473354750",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 473354750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzM1NDc1MA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-15T16:31:13Z",
    "updated_at": "2019-03-15T16:31:13Z",
    "author_association": "MEMBER",
    "body": "Idea for doctest:\r\n1. Create a few helper templates that encapsulate example Vyper code in a vyper contract and then compiles it.\r\n2. Add some testing scaffolding that we can show the functionality of the code with in-doc examples.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/473354750/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/473684799",
    "html_url": "https://github.com/vyperlang/vyper/issues/1259#issuecomment-473684799",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1259",
    "id": 473684799,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzY4NDc5OQ==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-17T17:03:31Z",
    "updated_at": "2019-03-17T17:03:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@charles-cooper I will include this in the square root PR, since the PR is turning into a meta PR anyways.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/473684799/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
