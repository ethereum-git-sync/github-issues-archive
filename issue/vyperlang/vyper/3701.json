{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/3701",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/3701/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/3701/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/3701/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/3701",
  "id": 2049580353,
  "node_id": "I_kwDOBGDvrM56Kh1B",
  "number": 3701,
  "title": "VIP: disallow the use of `self` as an address",
  "user": {
    "login": "charles-cooper",
    "id": 3867501,
    "node_id": "MDQ6VXNlcjM4Njc1MDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/charles-cooper",
    "html_url": "https://github.com/charles-cooper",
    "followers_url": "https://api.github.com/users/charles-cooper/followers",
    "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
    "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
    "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
    "repos_url": "https://api.github.com/users/charles-cooper/repos",
    "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
    "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2023-12-19T23:21:25Z",
  "updated_at": "2023-12-26T16:47:54Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "## Simple Summary\r\nin vyper, `self` has type `address`. this VIP disallows that behavior and replaces it with `self.address` or `context.address`.\r\n\r\n## Motivation\r\ncan flesh out more but basically, it is not immediately clear what the type of `self` is (it deviates from the pattern set for other contract-like things, for interface addresses are accessed using the `.address` member).\r\n\r\n## Specification\r\nchange the type of `self` to the module type of the executing context. (not sure if this is practical because of ordering of steps in analysis, but it should look more or less like a module type). replace the current uses of `self` with `self.address` or maybe a new special variable `context.address`.\r\n\r\n## Backwards Compatibility\r\nbreaking change\r\n\r\n## Dependencies\r\nIf this VIP depends on any other VIPs being implemented, please mention them.\r\n\r\n## References\r\nAdd any references that this VIP might reference (other VIPs/issues, links to blog posts, etc.)\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/3701/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/3701/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1863817583",
    "html_url": "https://github.com/vyperlang/vyper/issues/3701#issuecomment-1863817583",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3701",
    "id": 1863817583,
    "node_id": "IC_kwDOBGDvrM5vF5lv",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-20T04:11:30Z",
    "updated_at": "2023-12-20T04:11:30Z",
    "author_association": "MEMBER",
    "body": "I'm for this\n\nWonder if `self` should have a type `Self` (which is a special module type refering to itself)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1863817583/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1867824144",
    "html_url": "https://github.com/vyperlang/vyper/issues/3701#issuecomment-1867824144",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3701",
    "id": 1867824144,
    "node_id": "IC_kwDOBGDvrM5vVLwQ",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-22T15:38:02Z",
    "updated_at": "2023-12-22T15:38:02Z",
    "author_association": "COLLABORATOR",
    "body": "> I'm for this\r\n> \r\n> Wonder if `self` should have a type `Self` (which is a special module type refering to itself)\r\n\r\nit would be more like `Self` is a special interface type refering to itself\r\n\r\nactually i wonder if we should un-ban calling external functions. especially with https://github.com/vyperlang/vyper/issues/2856, there will be a syntactic distinction between `self.internal_foo()` and `call self.external_foo()`",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1867824144/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1867960886",
    "html_url": "https://github.com/vyperlang/vyper/issues/3701#issuecomment-1867960886",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3701",
    "id": 1867960886,
    "node_id": "IC_kwDOBGDvrM5vVtI2",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-22T18:22:41Z",
    "updated_at": "2023-12-22T18:22:41Z",
    "author_association": "MEMBER",
    "body": "> > I'm for this\r\n> > Wonder if `self` should have a type `Self` (which is a special module type refering to itself)\r\n> \r\n> it would be more like `Self` is a special interface type refering to itself\r\n> \r\n> actually i wonder if we should un-ban calling external functions. especially with #2856, there will be a syntactic distinction between `self.internal_foo()` and `call self.external_foo()`\r\n\r\nDon't have a problem with this, I think originally there is just a difference between internal and external calls (especially with dynamic types) and we wanted to avoid too much complexity in internal dispatching at least until the internals were refactored significantly\r\n\r\nIn solidity there is `public` interface decorator, I think we also wanted to avoid the waste of making a function `public` if it doesn't have to be (the compiler should handle this as well as function dispatch optimization)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1867960886/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1868047885",
    "html_url": "https://github.com/vyperlang/vyper/issues/3701#issuecomment-1868047885",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3701",
    "id": 1868047885,
    "node_id": "IC_kwDOBGDvrM5vWCYN",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-22T20:26:04Z",
    "updated_at": "2023-12-22T20:26:04Z",
    "author_association": "COLLABORATOR",
    "body": "yeah i don't think we need the `public` thing -- it's pretty easy to factor code into `internal` implementation/`external` wrapper",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1868047885/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1869658614",
    "html_url": "https://github.com/vyperlang/vyper/issues/3701#issuecomment-1869658614",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3701",
    "id": 1869658614,
    "node_id": "IC_kwDOBGDvrM5vcLn2",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-26T16:47:52Z",
    "updated_at": "2023-12-26T16:47:52Z",
    "author_association": "COLLABORATOR",
    "body": "I second this. Since the context is similar, I quickly link to my issue here: https://github.com/vyperlang/vyper/issues/3279. We should generally stop doing implicit `address` assignments IMO.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1869658614/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
