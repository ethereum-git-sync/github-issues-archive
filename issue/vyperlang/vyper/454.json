{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/454",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/454/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/454/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/454/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/454",
  "id": 272807550,
  "node_id": "MDU6SXNzdWUyNzI4MDc1NTA=",
  "number": 454,
  "title": "Suggestion: add syntax for defining multiple contracts in the same file",
  "user": {
    "login": "federicobond",
    "id": 138426,
    "node_id": "MDQ6VXNlcjEzODQyNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/138426?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/federicobond",
    "html_url": "https://github.com/federicobond",
    "followers_url": "https://api.github.com/users/federicobond/followers",
    "following_url": "https://api.github.com/users/federicobond/following{/other_user}",
    "gists_url": "https://api.github.com/users/federicobond/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/federicobond/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/federicobond/subscriptions",
    "organizations_url": "https://api.github.com/users/federicobond/orgs",
    "repos_url": "https://api.github.com/users/federicobond/repos",
    "events_url": "https://api.github.com/users/federicobond/events{/privacy}",
    "received_events_url": "https://api.github.com/users/federicobond/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 705423715,
      "node_id": "MDU6TGFiZWw3MDU0MjM3MTU=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/Feature",
      "name": "Feature",
      "color": "0052cc",
      "default": false,
      "description": null
    },
    {
      "id": 751622094,
      "node_id": "MDU6TGFiZWw3NTE2MjIwOTQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Discussion",
      "name": "VIP: Discussion",
      "color": "000000",
      "default": false,
      "description": "Used to denote VIPs and more complex issues that are waiting discussion in a meeting"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2017-11-10T03:18:41Z",
  "updated_at": "2019-02-06T15:50:28Z",
  "closed_at": "2019-02-06T13:43:42Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "There are several reasons why a syntax for defining multiple contracts in the same file, like the one below, would be very useful:\r\n\r\n```python\r\ncontract Wallet:\r\n    def __init__(owner):\r\n        self.owner = owner\r\n    ....\r\n```\r\n\r\nIt will encourage decomposition once Viper supports some way to compose contract functionality together (does not have to be inheritance). Instead of having to put all the code in the same namespace, one can define multiple composable components and wire them together, referring to them with their names.\r\n\r\nIf we have to rely on the filename to refer to a contract, it will make it harder for some platforms (like Etherscan) to properly display code involving multiple components (and thus multiple files).\r\n\r\n#### Cute Animal Picture\r\n\r\n![4936617-cute-animal-pictures](https://user-images.githubusercontent.com/138426/32641725-5678a95c-c5ae-11e7-9ede-6b3bde59a4fb.jpg)\r\n",
  "closed_by": {
    "login": "jacqueswww",
    "id": 6917456,
    "node_id": "MDQ6VXNlcjY5MTc0NTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jacqueswww",
    "html_url": "https://github.com/jacqueswww",
    "followers_url": "https://api.github.com/users/jacqueswww/followers",
    "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
    "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
    "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
    "repos_url": "https://api.github.com/users/jacqueswww/repos",
    "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/454/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/454/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/343367323",
    "html_url": "https://github.com/vyperlang/vyper/issues/454#issuecomment-343367323",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/454",
    "id": 343367323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzM2NzMyMw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-10T03:49:08Z",
    "updated_at": "2017-11-10T03:49:08Z",
    "author_association": "MEMBER",
    "body": "I agree with the premise of this issue, that in order to design larger applications the ability segment out and link different functionalities implemented in separate contracts becomes very necessary. Implementation of this specific feature requires a lot of discussion to ensure a secure and correct design on our part (most hacks relate to external code linking).\r\n\r\nI'm not sure if your specific proposal of allowing encapsulation of contracts via a simple `contract MyContract: ...` would be the way to go to this end. In fact, we have external calling capabilities that, while a bit crude, enforce more strict guarantees than what is possible in Solidity, and I think that is a good thing. I've imagined how we might open up that capability in a more clear way in order to discourage too much abstraction (thereby remaining audit-friendly, a major design goal) but allow more powerful sets of Viper contracts.\r\n\r\nAs of right now, it is possible to create larger multi-file programs in Viper just from the external calling capabilities and a sophisticated deployment strategy, so let's make this issue a starting place for how we can make that process as clear, concise, secure and auditable as possible.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/343367323/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/343374190",
    "html_url": "https://github.com/vyperlang/vyper/issues/454#issuecomment-343374190",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/454",
    "id": 343374190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzM3NDE5MA==",
    "user": {
      "login": "federicobond",
      "id": 138426,
      "node_id": "MDQ6VXNlcjEzODQyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/138426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/federicobond",
      "html_url": "https://github.com/federicobond",
      "followers_url": "https://api.github.com/users/federicobond/followers",
      "following_url": "https://api.github.com/users/federicobond/following{/other_user}",
      "gists_url": "https://api.github.com/users/federicobond/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/federicobond/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/federicobond/subscriptions",
      "organizations_url": "https://api.github.com/users/federicobond/orgs",
      "repos_url": "https://api.github.com/users/federicobond/repos",
      "events_url": "https://api.github.com/users/federicobond/events{/privacy}",
      "received_events_url": "https://api.github.com/users/federicobond/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-10T04:49:48Z",
    "updated_at": "2017-11-10T04:49:48Z",
    "author_association": "NONE",
    "body": "Hi @fubuloubu, I think I found some examples of the current external calling implementation inside the tests:\r\n\r\n```python\r\nclass Foo():                                                                                                                                                                      \r\n    def array() -> bytes <= 3: pass                                                                                                                                               \r\n                                                                                                                                                                                  \r\ndef get_array(arg1: address) -> bytes <= 3:                                                                                                                                       \r\n    return Foo(arg1).array() \r\n```\r\nYou mention that this style provides more strict guarantees than what is possible in Solidity. Could you elaborate a bit on that or point me to a place where I can learn more about it? Thanks in advance.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/343374190/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/343374743",
    "html_url": "https://github.com/vyperlang/vyper/issues/454#issuecomment-343374743",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/454",
    "id": 343374743,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzM3NDc0Mw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-10T04:55:13Z",
    "updated_at": "2017-11-10T04:55:13Z",
    "author_association": "MEMBER",
    "body": "We disallow inheritance, and enforce type alignment a little better outside of runtime. @DavidKnott is still working on some things relating to it, I believe.\r\n\r\nPersonally, I prefer the mantra of \"do one thing and do it well\" which is basically enforced by only allowing one contract per file.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/343374743/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/343431272",
    "html_url": "https://github.com/vyperlang/vyper/issues/454#issuecomment-343431272",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/454",
    "id": 343431272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzQzMTI3Mg==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-10T10:05:35Z",
    "updated_at": "2017-11-10T10:10:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Currently we only support one contract effectively per file (first level indent is basically a class), at some point the discussion of defining multiple contracts per file came up, I envisioned something like this - (reads a lot more like python) :\r\n```python\r\n\r\nclass Foo(ExternalContract):\r\n\r\n    def __init__():\r\n        pass\r\n\r\n    def foo(arg1: num) -> num:\r\n        pass\r\n\r\n\r\nclass BooBoo(Contract):\r\n\r\n    baby_contracts: address[num]\r\n    contract_count: num\r\n\r\n    def make_foo(self, arg1: address, arg2: num) -> num:\r\n        new_foo = Foo(arg2)\r\n        self.baby_contracts[self.contract_count] = new_foo\r\n        self.contract_countt += 1\r\n        return new_foo\r\n\r\nclass SomeOtherContract(Contract):\r\n        ...\r\n```\r\nI am also a big proponent of having self passed into the function, because it means `self` isn't a mystery variable (and it follows the python convention).\r\nAlso +1 for not allowing inheritance, above syntax would not allow one contract to inherit from another.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/343431272/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/343446749",
    "html_url": "https://github.com/vyperlang/vyper/issues/454#issuecomment-343446749",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/454",
    "id": 343446749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzQ0Njc0OQ==",
    "user": {
      "login": "federicobond",
      "id": 138426,
      "node_id": "MDQ6VXNlcjEzODQyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/138426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/federicobond",
      "html_url": "https://github.com/federicobond",
      "followers_url": "https://api.github.com/users/federicobond/followers",
      "following_url": "https://api.github.com/users/federicobond/following{/other_user}",
      "gists_url": "https://api.github.com/users/federicobond/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/federicobond/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/federicobond/subscriptions",
      "organizations_url": "https://api.github.com/users/federicobond/orgs",
      "repos_url": "https://api.github.com/users/federicobond/repos",
      "events_url": "https://api.github.com/users/federicobond/events{/privacy}",
      "received_events_url": "https://api.github.com/users/federicobond/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-10T11:15:12Z",
    "updated_at": "2017-11-10T11:15:12Z",
    "author_association": "NONE",
    "body": "+1 on being explicit about `self`. You can also use the existence of the `self` parameter to distinguish calls that modify state from those that are pure.\r\n\r\nDo you envision some way to reuse code that is not inheritance? I mentioned to @DavidKnott during the DEVCON3 that the canonical answer to this is some mechanism for composition (see Go for an example of a language that explicitly favors composition as opposed to inheritance) but there might be some other interesting models out there.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/343446749/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/343467073",
    "html_url": "https://github.com/vyperlang/vyper/issues/454#issuecomment-343467073",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/454",
    "id": 343467073,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzQ2NzA3Mw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-10T12:59:43Z",
    "updated_at": "2017-11-10T12:59:43Z",
    "author_association": "MEMBER",
    "body": "I'm of the opposite opinion here haha. I think the classic python syntax `MyContract(OtherContract)` is asking for thinking about it as inheritance (I know we can disallow it, but like that's how python inheritance works). If I had to choose, I'd rather it be more like the original proposal, but my vote is still for one contract one file.\r\n\r\nAdditionally, if we assume one contract one file I personally don't like the `self.var` syntax at all. I don't think it is necessary because it is usually pretty clear what is a temporary variable passed as an argument (or created in a method), and therefore what is part of contract storage. From a pure aesthetic point of view, those are 5 extra characters you have to write everywhere and it drives me nuts because I don't think there's that much benefit in clarity. This opinion only holds if it's strictly one contract one file though, I think `self` is more useful to keep distinctions if multiple contracts are allowed.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/343467073/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/343468025",
    "html_url": "https://github.com/vyperlang/vyper/issues/454#issuecomment-343468025",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/454",
    "id": 343468025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzQ2ODAyNQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-10T13:04:07Z",
    "updated_at": "2017-11-10T13:04:07Z",
    "author_association": "MEMBER",
    "body": "@federicobond the GO composition idea is intriguing. I don't know much about GO, but alternative examples to inheritance are very useful. From what I could tell with the example given in the GO documentation, it's more talking about module interfaces and types. I will keep reading about it for parallels with contracts (I think of contracts as a data storage spec and the rules to manipulate it)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/343468025/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/343481437",
    "html_url": "https://github.com/vyperlang/vyper/issues/454#issuecomment-343481437",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/454",
    "id": 343481437,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzQ4MTQzNw==",
    "user": {
      "login": "federicobond",
      "id": 138426,
      "node_id": "MDQ6VXNlcjEzODQyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/138426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/federicobond",
      "html_url": "https://github.com/federicobond",
      "followers_url": "https://api.github.com/users/federicobond/followers",
      "following_url": "https://api.github.com/users/federicobond/following{/other_user}",
      "gists_url": "https://api.github.com/users/federicobond/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/federicobond/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/federicobond/subscriptions",
      "organizations_url": "https://api.github.com/users/federicobond/orgs",
      "repos_url": "https://api.github.com/users/federicobond/repos",
      "events_url": "https://api.github.com/users/federicobond/events{/privacy}",
      "received_events_url": "https://api.github.com/users/federicobond/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-10T14:03:44Z",
    "updated_at": "2017-11-10T14:03:44Z",
    "author_association": "NONE",
    "body": "I suggest you take a close look at the concept of embedding in Go. There are some interesting ideas there to provide encapsulation and separation of concerns without inheritance.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/343481437/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/351067525",
    "html_url": "https://github.com/vyperlang/vyper/issues/454#issuecomment-351067525",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/454",
    "id": 351067525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTA2NzUyNQ==",
    "user": {
      "login": "dani-jozsef",
      "id": 6108136,
      "node_id": "MDQ6VXNlcjYxMDgxMzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6108136?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dani-jozsef",
      "html_url": "https://github.com/dani-jozsef",
      "followers_url": "https://api.github.com/users/dani-jozsef/followers",
      "following_url": "https://api.github.com/users/dani-jozsef/following{/other_user}",
      "gists_url": "https://api.github.com/users/dani-jozsef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dani-jozsef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dani-jozsef/subscriptions",
      "organizations_url": "https://api.github.com/users/dani-jozsef/orgs",
      "repos_url": "https://api.github.com/users/dani-jozsef/repos",
      "events_url": "https://api.github.com/users/dani-jozsef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dani-jozsef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-12T14:30:30Z",
    "updated_at": "2017-12-12T14:30:30Z",
    "author_association": "NONE",
    "body": "One contract per file is a feature, not a bug. I'm severely against introducing _any_ form of composition at the Viper language level, and having experience with both the Java and .NET ecosystem, it is my conviction that one class (contract) per file is an _extremely_ important readability feature.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/351067525/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/461027273",
    "html_url": "https://github.com/vyperlang/vyper/issues/454#issuecomment-461027273",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/454",
    "id": 461027273,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTAyNzI3Mw==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-06T13:43:42Z",
    "updated_at": "2019-02-06T13:43:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing, if someone feels strongly about this consider open a new VIP.  But also consider that we are in the process of introducing really useful interfaces (in part #885), whilst sticking to one contract per file.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/461027273/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
