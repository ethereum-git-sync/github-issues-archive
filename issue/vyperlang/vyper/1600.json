{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/1600",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/1600/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/1600/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/1600/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/1600",
  "id": 489475042,
  "node_id": "MDU6SXNzdWU0ODk0NzUwNDI=",
  "number": 1600,
  "title": "Access to _placeholder_# generated variables can cause problems",
  "user": {
    "login": "smarx",
    "id": 35551,
    "node_id": "MDQ6VXNlcjM1NTUx",
    "avatar_url": "https://avatars.githubusercontent.com/u/35551?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/smarx",
    "html_url": "https://github.com/smarx",
    "followers_url": "https://api.github.com/users/smarx/followers",
    "following_url": "https://api.github.com/users/smarx/following{/other_user}",
    "gists_url": "https://api.github.com/users/smarx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/smarx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/smarx/subscriptions",
    "organizations_url": "https://api.github.com/users/smarx/orgs",
    "repos_url": "https://api.github.com/users/smarx/repos",
    "events_url": "https://api.github.com/users/smarx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/smarx/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2019-09-05T01:02:57Z",
  "updated_at": "2019-10-29T18:08:37Z",
  "closed_at": "2019-10-29T18:08:37Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Version Information\r\n\r\n* vyper Version (output of `vyper --version`): 0.1.0b12+commit.ab39d4e\r\n\r\n### What's your issue about?\r\n\r\nThe compiler uses `_placeholder_1`, `_placeholder_2`, etc. variables. Users are able to read from and write to those variables, which can cause significant problems.\r\n\r\nBelow is the most dramatic example I came up with. Here, the callback pointer is overwritten, causing execution to jump to the wrong place. Both `getNumber()` and `getDoubleNumber()` return `42`. (If you comment out the assignment to `_placeholder_1`, `getDoubleNumber()` returns `84` as expected:\r\n\r\n```python\r\n@private\r\n@constant\r\ndef meaningOfLife() -> uint256:\r\n    _placeholder_1 = 215\r\n    return 42\r\n    \r\n@public\r\n@constant\r\ndef getNumber() -> uint256:\r\n    return self.meaningOfLife()\r\n    \r\n@public\r\n@constant\r\ndef getDoubleNumber() -> uint256:\r\n    return self.meaningOfLife() * 2\r\n```\r\n\r\n(Note that `215` is specifically the location for the right `JUMPDEST`. If you use a different compiler version, that location might change, so you're likely to see a revert instead.)\r\n\r\n### How can it be fixed?\r\n\r\nThe most obvious fix is probably to disallow users referencing variables that start with `_placeholder_`. They shouldn't be able to declare them or access them.  When fixing this, note that there may be other special variable names that need to be protected in the same way.\r\n\r\nA better alternative might be to avoid collisions altogether. It's not clear to me why placeholder variables need names at all, or why those names have to exist in the same namespace as user-defined variables. I simply don't know the compiler code well enough to suggest a better fix, but I'm hoping there can be something more robust than naming conventions.",
  "closed_by": {
    "login": "charles-cooper",
    "id": 3867501,
    "node_id": "MDQ6VXNlcjM4Njc1MDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/charles-cooper",
    "html_url": "https://github.com/charles-cooper",
    "followers_url": "https://api.github.com/users/charles-cooper/followers",
    "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
    "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
    "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
    "repos_url": "https://api.github.com/users/charles-cooper/repos",
    "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
    "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/1600/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/1600/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/528529278",
    "html_url": "https://github.com/vyperlang/vyper/issues/1600#issuecomment-528529278",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1600",
    "id": 528529278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODUyOTI3OA==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-05T19:06:21Z",
    "updated_at": "2019-09-05T19:06:21Z",
    "author_association": "COLLABORATOR",
    "body": "@smarx thanks for the report. My idea is to block the user from accessing these variables at the parser level, as in https://github.com/ethereum/vyper/pull/1601/commits/5bb8bce2619631f217f04fe53535e6040a23f6df. Can you take a look and see if you think that will satisfactorily solve this issue?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/528529278/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/528545133",
    "html_url": "https://github.com/vyperlang/vyper/issues/1600#issuecomment-528545133",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1600",
    "id": 528545133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODU0NTEzMw==",
    "user": {
      "login": "smarx",
      "id": 35551,
      "node_id": "MDQ6VXNlcjM1NTUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35551?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smarx",
      "html_url": "https://github.com/smarx",
      "followers_url": "https://api.github.com/users/smarx/followers",
      "following_url": "https://api.github.com/users/smarx/following{/other_user}",
      "gists_url": "https://api.github.com/users/smarx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smarx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smarx/subscriptions",
      "organizations_url": "https://api.github.com/users/smarx/orgs",
      "repos_url": "https://api.github.com/users/smarx/repos",
      "events_url": "https://api.github.com/users/smarx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smarx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-05T19:34:51Z",
    "updated_at": "2019-09-05T19:34:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "That seems like a clever solution, and I mean that in both a positive and a negative way. :-)\r\n\r\nI can't think of any reason why that wouldn't work.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/528545133/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
