{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/1599",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/1599/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/1599/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/1599/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/1599",
  "id": 489466017,
  "node_id": "MDU6SXNzdWU0ODk0NjYwMTc=",
  "number": 1599,
  "title": "Off-by-one error in `zero_pad`",
  "user": {
    "login": "daejunpark",
    "id": 5491770,
    "node_id": "MDQ6VXNlcjU0OTE3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5491770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/daejunpark",
    "html_url": "https://github.com/daejunpark",
    "followers_url": "https://api.github.com/users/daejunpark/followers",
    "following_url": "https://api.github.com/users/daejunpark/following{/other_user}",
    "gists_url": "https://api.github.com/users/daejunpark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/daejunpark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/daejunpark/subscriptions",
    "organizations_url": "https://api.github.com/users/daejunpark/orgs",
    "repos_url": "https://api.github.com/users/daejunpark/repos",
    "events_url": "https://api.github.com/users/daejunpark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/daejunpark/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 14,
  "created_at": "2019-09-05T00:18:59Z",
  "updated_at": "2019-09-24T16:58:59Z",
  "closed_at": "2019-09-24T16:58:59Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Version Information\r\n\r\n* vyper Version (output of `vyper --version`): 0.1.0b12+commit.8663ac5\r\n\r\n### What's your issue about?\r\n\r\nOff-by-one error in `zero_pad()`:\r\n\r\nhttps://github.com/ethereum/vyper/blob/ab39d4e9c5168eff2646dd29e23d7212654b636d/vyper/parser/parser_utils.py#L904\r\n\r\nLogically, the loop termination condition should use `ge` instead of `gt`.\r\n\r\n### How can it be fixed?\r\n\r\nIt can be fixed by replace `gt` by `ge` in the above, but I'm not sure if such a fix does not affect others.\r\n",
  "closed_by": {
    "login": "charles-cooper",
    "id": 3867501,
    "node_id": "MDQ6VXNlcjM4Njc1MDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/charles-cooper",
    "html_url": "https://github.com/charles-cooper",
    "followers_url": "https://api.github.com/users/charles-cooper/followers",
    "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
    "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
    "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
    "repos_url": "https://api.github.com/users/charles-cooper/repos",
    "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
    "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/1599/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/1599/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/529242318",
    "html_url": "https://github.com/vyperlang/vyper/issues/1599#issuecomment-529242318",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1599",
    "id": 529242318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTI0MjMxOA==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-08T21:14:38Z",
    "updated_at": "2019-09-08T21:14:38Z",
    "author_association": "COLLABORATOR",
    "body": "@daejunpark could you please take a look at https://github.com/ethereum/vyper/pull/1605/commits/5a845710f999e07cea4ea66922b7dbd7adee4586 and let me know if you think it is a reasonable solution?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/529242318/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/530042268",
    "html_url": "https://github.com/vyperlang/vyper/issues/1599#issuecomment-530042268",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1599",
    "id": 530042268,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDA0MjI2OA==",
    "user": {
      "login": "daejunpark",
      "id": 5491770,
      "node_id": "MDQ6VXNlcjU0OTE3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5491770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daejunpark",
      "html_url": "https://github.com/daejunpark",
      "followers_url": "https://api.github.com/users/daejunpark/followers",
      "following_url": "https://api.github.com/users/daejunpark/following{/other_user}",
      "gists_url": "https://api.github.com/users/daejunpark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daejunpark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daejunpark/subscriptions",
      "organizations_url": "https://api.github.com/users/daejunpark/orgs",
      "repos_url": "https://api.github.com/users/daejunpark/repos",
      "events_url": "https://api.github.com/users/daejunpark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daejunpark/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-10T17:33:45Z",
    "updated_at": "2019-09-10T17:35:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@charles-cooper thanks for this. It is a really clever trick, and I like it (from my hacker instinct)!\r\n\r\nBut I have a concern about this kind of off-label uses of opcodes for the long term in general. For example, if people discuss the behavior change of `calldatacopy` in a future hard fork, they may be not aware of this off-label use, and fail to consider/analyze the effect of their change to this.\r\n\r\nI have a question. Is the zero padding size always less than 32? (I cannot think of a counterexample.)\r\n\r\nIf so, you may want to consider to use the `ID` precompiled for the zero padding. That is,\r\n```\r\nCALL <gas> 4 0 <src> <len> <dest> <len>\r\n```\r\nwhere `<src>` points to the zero bytes that can be preallocated in the first region of the memory.\r\nAlthough this will consume more gas than the `calldatacopy` approach, but it is an expected use case, so would be safer for the long term.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/530042268/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/530054363",
    "html_url": "https://github.com/vyperlang/vyper/issues/1599#issuecomment-530054363",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1599",
    "id": 530054363,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDA1NDM2Mw==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-10T18:05:50Z",
    "updated_at": "2019-09-10T18:07:52Z",
    "author_association": "COLLABORATOR",
    "body": "> If so, you may want to consider to use the ID precompiled for the zero padding. That is,\r\n> `CALL <gas> 4 0 <src> <len> <dest> <len>`\r\n\r\nYes, I've been thinking about this approach for awhile. In this case the zero-pad is always <32 bytes, but having this technique for zeroing arbitrary amounts of memory would be handy. So we could always guarantee that the source is a zeroed block of memory simply by reading from past-the-end of where we have allocated, or some number so large it would be impractical to write to (e.g. 2**32). But I think reasoning about where the past-the-end pointer should be for `CALLDATACOPY` is easier - it is always `CALLDATASIZE`!\r\n\r\n> But I have a concern about this kind of off-label uses of opcodes for the long term in general. For example, if people discuss the behavior change of calldatacopy in a future hard fork, they may be not aware of this off-label use, and fail to consider/analyze the effect of their change to this.\r\n\r\nI was also concerned about this. However, I feel like the existing semantics were carefully considered and were written that way for a reason. Note the difference in semantics between `CALLDATACOPY` and `CODECOPY` - `CODECOPY` issues a `STOP` if you try to read from past-the-end. So even if it may not be the \"intended\" use-case for `CALLDATACOPY`, it is not exactly \"off-label\" either! A change would be quite a significant - almost pathological - change to the EVM and would definitely break the semantics of existing programs. But in any case, I think what we can do is create a new pseudo-opcode `mzero <dst> <len>`  which zeroes out the destination block (analogously to stdlib's `bzero`) and then choose to implement it however we want. Then even if `CALLDATACOPY` is changed for whatever reason, the overhead of swapping out the implementation of `mzero` is fairly low.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/530054363/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/530074404",
    "html_url": "https://github.com/vyperlang/vyper/issues/1599#issuecomment-530074404",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1599",
    "id": 530074404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDA3NDQwNA==",
    "user": {
      "login": "daejunpark",
      "id": 5491770,
      "node_id": "MDQ6VXNlcjU0OTE3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5491770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daejunpark",
      "html_url": "https://github.com/daejunpark",
      "followers_url": "https://api.github.com/users/daejunpark/followers",
      "following_url": "https://api.github.com/users/daejunpark/following{/other_user}",
      "gists_url": "https://api.github.com/users/daejunpark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daejunpark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daejunpark/subscriptions",
      "organizations_url": "https://api.github.com/users/daejunpark/orgs",
      "repos_url": "https://api.github.com/users/daejunpark/repos",
      "events_url": "https://api.github.com/users/daejunpark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daejunpark/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-10T18:58:34Z",
    "updated_at": "2019-09-10T18:58:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@charles-cooper I agree with all of your points, but please note that the overhead of updating the `mzero` implementation may not be low from the contract owners' perspective, because they will need to redeploy the updated bytecode if that happens, and the redeployment may not be easy in certain situations.\r\n\r\n@CarlBeek what do you think about this in terms of the deposit contract operation?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/530074404/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/530082570",
    "html_url": "https://github.com/vyperlang/vyper/issues/1599#issuecomment-530082570",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1599",
    "id": 530082570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDA4MjU3MA==",
    "user": {
      "login": "daejunpark",
      "id": 5491770,
      "node_id": "MDQ6VXNlcjU0OTE3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5491770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daejunpark",
      "html_url": "https://github.com/daejunpark",
      "followers_url": "https://api.github.com/users/daejunpark/followers",
      "following_url": "https://api.github.com/users/daejunpark/following{/other_user}",
      "gists_url": "https://api.github.com/users/daejunpark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daejunpark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daejunpark/subscriptions",
      "organizations_url": "https://api.github.com/users/daejunpark/orgs",
      "repos_url": "https://api.github.com/users/daejunpark/repos",
      "events_url": "https://api.github.com/users/daejunpark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daejunpark/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-10T19:21:45Z",
    "updated_at": "2019-09-10T19:42:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI, this is also related: https://github.com/ethereum/vyper/issues/1610",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/530082570/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/530098921",
    "html_url": "https://github.com/vyperlang/vyper/issues/1599#issuecomment-530098921",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1599",
    "id": 530098921,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDA5ODkyMQ==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-10T20:08:35Z",
    "updated_at": "2019-09-10T20:08:35Z",
    "author_association": "COLLABORATOR",
    "body": "> @charles-cooper I agree with all of your points, but please note that the overhead of updating the mzero implementation may not be low from the contract owners' perspective, because they will need to redeploy the updated bytecode if that happens, and the redeployment may not be easy in certain situations.\r\n\r\nThanks for the note. My assumption was that, if the opcode semantics are ever changed, it would be as an EVM version update so that only contracts deployed after `fork_blocknum` would have the new semantics, while existing contracts would retain the old semantics.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/530098921/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/530100959",
    "html_url": "https://github.com/vyperlang/vyper/issues/1599#issuecomment-530100959",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1599",
    "id": 530100959,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDEwMDk1OQ==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-10T20:14:36Z",
    "updated_at": "2019-09-10T20:17:12Z",
    "author_association": "COLLABORATOR",
    "body": "I want to do the quick fix for the `gt` issue though since it seems more pressing. As it stands, the loop can write a `\\0` byte to one past the end of the bytearray.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/530100959/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/530129601",
    "html_url": "https://github.com/vyperlang/vyper/issues/1599#issuecomment-530129601",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1599",
    "id": 530129601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDEyOTYwMQ==",
    "user": {
      "login": "daejunpark",
      "id": 5491770,
      "node_id": "MDQ6VXNlcjU0OTE3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5491770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daejunpark",
      "html_url": "https://github.com/daejunpark",
      "followers_url": "https://api.github.com/users/daejunpark/followers",
      "following_url": "https://api.github.com/users/daejunpark/following{/other_user}",
      "gists_url": "https://api.github.com/users/daejunpark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daejunpark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daejunpark/subscriptions",
      "organizations_url": "https://api.github.com/users/daejunpark/orgs",
      "repos_url": "https://api.github.com/users/daejunpark/repos",
      "events_url": "https://api.github.com/users/daejunpark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daejunpark/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-10T21:33:34Z",
    "updated_at": "2019-09-10T21:33:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the quick fix! It will help to facilitate the deposit contract verification process.\r\n\r\nBTW, my understanding is that even a contract deployed before certain fork will be ran using the new semantics of the folk. (Or, I may misunderstood your explanation.)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/530129601/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/530133590",
    "html_url": "https://github.com/vyperlang/vyper/issues/1599#issuecomment-530133590",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1599",
    "id": 530133590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDEzMzU5MA==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-10T21:47:27Z",
    "updated_at": "2019-09-10T21:47:27Z",
    "author_association": "COLLABORATOR",
    "body": "@daejunpark there are several proposals to add versioning to the EVM https://github.com/ethereum-cat-herders/PM/issues/53. I don't believe (and this is just my educated guess) such a significant semantic change to `CALLDATALOAD` would make it in without some kind of versioning scheme.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/530133590/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/530382470",
    "html_url": "https://github.com/vyperlang/vyper/issues/1599#issuecomment-530382470",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1599",
    "id": 530382470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDM4MjQ3MA==",
    "user": {
      "login": "CarlBeek",
      "id": 12530043,
      "node_id": "MDQ6VXNlcjEyNTMwMDQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12530043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CarlBeek",
      "html_url": "https://github.com/CarlBeek",
      "followers_url": "https://api.github.com/users/CarlBeek/followers",
      "following_url": "https://api.github.com/users/CarlBeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/CarlBeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CarlBeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CarlBeek/subscriptions",
      "organizations_url": "https://api.github.com/users/CarlBeek/orgs",
      "repos_url": "https://api.github.com/users/CarlBeek/repos",
      "events_url": "https://api.github.com/users/CarlBeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CarlBeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-11T13:33:49Z",
    "updated_at": "2019-09-11T13:33:49Z",
    "author_association": "NONE",
    "body": "Initially it seemed to me that this was too off-label to be a part of compiler behaviour, but after taking a look at the yellow paper, Geth, and py-evm implementations, I agree with @charles-cooper that this would be something that would need to be specified via EVM versioning.\r\n\r\nOn the topic of longevity and redeployment, the deposit contract is intended to live until at least the death of Eth1 somewhere way in the future and thus it is vital that this be resolved in a robust manner. As mentioned above, however, I don't think that this will present a problem.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/530382470/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/531831364",
    "html_url": "https://github.com/vyperlang/vyper/issues/1599#issuecomment-531831364",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1599",
    "id": 531831364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMTgzMTM2NA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-16T15:33:56Z",
    "updated_at": "2019-09-16T15:33:56Z",
    "author_association": "MEMBER",
    "body": "Meeting: Merge #1611, then #1605 later",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/531831364/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/532072518",
    "html_url": "https://github.com/vyperlang/vyper/issues/1599#issuecomment-532072518",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1599",
    "id": 532072518,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMjA3MjUxOA==",
    "user": {
      "login": "davesque",
      "id": 791437,
      "node_id": "MDQ6VXNlcjc5MTQzNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/791437?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davesque",
      "html_url": "https://github.com/davesque",
      "followers_url": "https://api.github.com/users/davesque/followers",
      "following_url": "https://api.github.com/users/davesque/following{/other_user}",
      "gists_url": "https://api.github.com/users/davesque/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davesque/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davesque/subscriptions",
      "organizations_url": "https://api.github.com/users/davesque/orgs",
      "repos_url": "https://api.github.com/users/davesque/repos",
      "events_url": "https://api.github.com/users/davesque/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davesque/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-17T06:01:16Z",
    "updated_at": "2019-09-17T06:01:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thought I'd chime in and just say that, in my mind, the likelihood that `CALLDATALOAD` will stop yielding zeros for ranges outside of `CALLDATASIZE` any time soon is basically zero.  I'd feel pretty comfortable adding compiler features that depend on that behavior.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/532072518/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/532213758",
    "html_url": "https://github.com/vyperlang/vyper/issues/1599#issuecomment-532213758",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1599",
    "id": 532213758,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMjIxMzc1OA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-17T13:10:54Z",
    "updated_at": "2019-09-17T13:10:54Z",
    "author_association": "MEMBER",
    "body": "Note from meeting: relying on `CALLDATALOAD`  assumption is okay as long as it gets documented well.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/532213758/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/532306184",
    "html_url": "https://github.com/vyperlang/vyper/issues/1599#issuecomment-532306184",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1599",
    "id": 532306184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMjMwNjE4NA==",
    "user": {
      "login": "daejunpark",
      "id": 5491770,
      "node_id": "MDQ6VXNlcjU0OTE3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5491770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daejunpark",
      "html_url": "https://github.com/daejunpark",
      "followers_url": "https://api.github.com/users/daejunpark/followers",
      "following_url": "https://api.github.com/users/daejunpark/following{/other_user}",
      "gists_url": "https://api.github.com/users/daejunpark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daejunpark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daejunpark/subscriptions",
      "organizations_url": "https://api.github.com/users/daejunpark/orgs",
      "repos_url": "https://api.github.com/users/daejunpark/repos",
      "events_url": "https://api.github.com/users/daejunpark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daejunpark/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-17T16:52:07Z",
    "updated_at": "2019-09-17T16:52:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just to make sure, I do not have an objection to the `calldataload` approach, if it is very unlikely that the current semantics of `calldataload` will change in the future.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/532306184/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
