{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/3467",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/3467/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/3467/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/3467/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/3467",
  "id": 1729373483,
  "node_id": "I_kwDOBGDvrM5nFCUr",
  "number": 3467,
  "title": "Security Policy needs an overhaul",
  "user": {
    "login": "pcaversaccio",
    "id": 25297591,
    "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pcaversaccio",
    "html_url": "https://github.com/pcaversaccio",
    "followers_url": "https://api.github.com/users/pcaversaccio/followers",
    "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
    "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
    "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
    "repos_url": "https://api.github.com/users/pcaversaccio/repos",
    "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 895812894,
      "node_id": "MDU6TGFiZWw4OTU4MTI4OTQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/documentation",
      "name": "documentation",
      "color": "fcbdea",
      "default": true,
      "description": "Documentation"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2023-05-28T10:19:06Z",
  "updated_at": "2024-01-05T21:02:54Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "The current [Security Policy](https://github.com/vyperlang/vyper/blob/master/SECURITY.md) needs a proper overhaul imho since the content is outdated (e.g. Vyper is _not_ currently in limited beta; Yearn, Curve Finance, or Lido have conducted extensive audits on Vyper contracts). Also linking [here](https://hackmd.io/@eYTwSKriTe6ANMFaEJCuxw/HJnkTkPGh) the write-up by @fubuloubu about the \"Vyper Security Alliance\". There is no rush to update the Security Policy, but I personally would aim for a properly overhauled version for the major `0.4.0` release.\r\n\r\nInformation that needs to be included in a Security Policy is imho:\r\n- Summary of all known security vulnerabilities (link to a specific section in the docs; not only the security advisories);\r\n- List of security vulnerabilities affecting a specific version of the compiler (can be e.g. a `JSON` file);\r\n- What's the policy around patching versions? E.g. let's assume there is a bug found in Vyper `0.3.9` which is also present in `0.2.16`, does Vyper release a patch not only for the `0.3.x` series, but also `0.2.x` series?;\r\n- Is there a bounty program we can somehow include and know how to fund?;\r\n- ...\r\n\r\nI opened this issue to gather all the feedback in one place. Let me know your thoughts.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/3467/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/3467/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1878750015",
    "html_url": "https://github.com/vyperlang/vyper/issues/3467#issuecomment-1878750015",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3467",
    "id": 1878750015,
    "node_id": "IC_kwDOBGDvrM5v-3M_",
    "user": {
      "login": "MatthiasEgli",
      "id": 832688,
      "node_id": "MDQ6VXNlcjgzMjY4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/832688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MatthiasEgli",
      "html_url": "https://github.com/MatthiasEgli",
      "followers_url": "https://api.github.com/users/MatthiasEgli/followers",
      "following_url": "https://api.github.com/users/MatthiasEgli/following{/other_user}",
      "gists_url": "https://api.github.com/users/MatthiasEgli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MatthiasEgli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MatthiasEgli/subscriptions",
      "organizations_url": "https://api.github.com/users/MatthiasEgli/orgs",
      "repos_url": "https://api.github.com/users/MatthiasEgli/repos",
      "events_url": "https://api.github.com/users/MatthiasEgli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MatthiasEgli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-05T14:15:04Z",
    "updated_at": "2024-01-05T14:15:04Z",
    "author_association": "NONE",
    "body": "For the bug bounty program, I suggest to for now add that the Vyper Security Alliance would handle coordination with affected projects and any bug bounty rewards due to that would be given to the whitehat, basically adding this as an indirect bug bounty program.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1878750015/reactions",
      "total_count": 3,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1878837795",
    "html_url": "https://github.com/vyperlang/vyper/issues/3467#issuecomment-1878837795",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3467",
    "id": 1878837795,
    "node_id": "IC_kwDOBGDvrM5v_Moj",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-05T15:19:17Z",
    "updated_at": "2024-01-05T15:19:17Z",
    "author_association": "MEMBER",
    "body": "> What's the policy around patching versions? E.g. let's assume there is a bug found in Vyper `0.3.9` which is also present in `0.2.16`, does Vyper release a patch not only for the `0.3.x` series, but also `0.2.x` series?\n\nUnfortunately, we cannot patch old versions, namely because once contracts are compiled with a version of vyper, there's no way we do anything about it when a bug is found. Best we can do is advisory at that point, so people are aware of any potential issues with the version they have used to deploy with.\n\nWe have occasionally yanked releases if they are less than a few days old, but I think the practice moving forwards (@charles-cooper correct me if I'm wrong) is to do release candidates before each release to make sure the types of integration bugs we have typically found in the past which led to a yank get discovered before a formal tag is made.\n\nThe versioning guideline in the docs should also be updated to mention this",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1878837795/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1878846226",
    "html_url": "https://github.com/vyperlang/vyper/issues/3467#issuecomment-1878846226",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3467",
    "id": 1878846226,
    "node_id": "IC_kwDOBGDvrM5v_OsS",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-05T15:25:06Z",
    "updated_at": "2024-01-05T15:25:36Z",
    "author_association": "MEMBER",
    "body": "> We have occasionally yanked releases if they are less than a few days old, but I think the practice moving forwards (@charles-cooper correct me if I'm wrong) is to do release candidates before each release to make sure the types of integration bugs we have typically found in the past which led to a yank get discovered before a formal tag is made.\r\n\r\nyep -- we did this for v0.3.10 and it worked quite well for finding these kinds of integration issues pre-release",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1878846226/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1879089905",
    "html_url": "https://github.com/vyperlang/vyper/issues/3467#issuecomment-1879089905",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3467",
    "id": 1879089905,
    "node_id": "IC_kwDOBGDvrM5wAKLx",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-05T18:24:19Z",
    "updated_at": "2024-01-05T18:24:19Z",
    "author_association": "COLLABORATOR",
    "body": "> Unfortunately, we cannot patch old versions, namely because once contracts are compiled with a version of vyper, there's no way we do anything about it when a bug is found. Best we can do is advisory at that point, so people are aware of any potential issues with the version they have used to deploy with.\r\n\r\nI think I need to clarify here what I meant by _patch_: i.e. a new Vyper patch version in a `0.X.Y` series. Let's say we find a bug in the `0.3.10` version that affects a built-in function. The bug is also persistent in the old `0.2.X` versions. Now the question is do we also release a new `0.2.17` version or only a `0.3.11` version that fixes the bug? I guess we will not do the former, but we have to document this properly still.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1879089905/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1879212375",
    "html_url": "https://github.com/vyperlang/vyper/issues/3467#issuecomment-1879212375",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3467",
    "id": 1879212375,
    "node_id": "IC_kwDOBGDvrM5wAoFX",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-05T20:19:14Z",
    "updated_at": "2024-01-05T20:19:14Z",
    "author_association": "MEMBER",
    "body": "> > Unfortunately, we cannot patch old versions, namely because once contracts are compiled with a version of vyper, there's no way we do anything about it when a bug is found. Best we can do is advisory at that point, so people are aware of any potential issues with the version they have used to deploy with.\r\n> \r\n> Now the question is do we also release a new `0.2.17` version or only a `0.3.11` version that fixes the bug? I guess we will not do the former, but we have to document this properly still.\r\n\r\nCorrect, no patching older compiler versions",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1879212375/reactions",
      "total_count": 3,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
