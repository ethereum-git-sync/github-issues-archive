{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/542",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/542/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/542/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/542/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/542",
  "id": 279012725,
  "node_id": "MDU6SXNzdWUyNzkwMTI3MjU=",
  "number": 542,
  "title": "VIP: Safe External Contract Calls",
  "user": {
    "login": "DavidKnott",
    "id": 17552858,
    "node_id": "MDQ6VXNlcjE3NTUyODU4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17552858?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/DavidKnott",
    "html_url": "https://github.com/DavidKnott",
    "followers_url": "https://api.github.com/users/DavidKnott/followers",
    "following_url": "https://api.github.com/users/DavidKnott/following{/other_user}",
    "gists_url": "https://api.github.com/users/DavidKnott/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/DavidKnott/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/DavidKnott/subscriptions",
    "organizations_url": "https://api.github.com/users/DavidKnott/orgs",
    "repos_url": "https://api.github.com/users/DavidKnott/repos",
    "events_url": "https://api.github.com/users/DavidKnott/events{/privacy}",
    "received_events_url": "https://api.github.com/users/DavidKnott/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 705423715,
      "node_id": "MDU6TGFiZWw3MDU0MjM3MTU=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/Feature",
      "name": "Feature",
      "color": "0052cc",
      "default": false,
      "description": null
    },
    {
      "id": 757250644,
      "node_id": "MDU6TGFiZWw3NTcyNTA2NDQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Approved",
      "name": "VIP: Approved",
      "color": "98f765",
      "default": false,
      "description": "VIP Approved"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2017-12-04T14:22:49Z",
  "updated_at": "2018-04-03T11:50:41Z",
  "closed_at": "2018-04-03T11:50:41Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "This is the suggested template for new VIPs.\r\n\r\n## Preamble\r\n\r\n    VIP: <to be assigned>\r\n    Title: Safe External Contract Calls\r\n    Author: David\r\n    Type: Standard Track\r\n    Status: Draft\r\n    Created: 2017-12-4\r\n\r\n\r\n## Simple Summary\r\nWe can use the `STATICCALL` opcode to make external contract calls safer.\r\n\r\n## Abstract\r\nExternal contract calls (primarily those that change state) are dangerous but we can make them safer by having developers think about how they external contract calls and wether or not they want to trust the contract they're calling to.\r\n\r\n## Motivation\r\nMany attacks have involved external contract calls so it's important for us to think carefully about how we can make them as safe as possible\r\n\r\n## Specification\r\nThe `static` and `modifiable` keywords will allow developers to declare addresses that state changing external contract calls can always be made to.  If an address is `static` no state changes may be made (`STATICCALL` opcode is used), if an address is `modifiable` state changes may be made( `CALL` opcode is used).\r\n```\r\n    contract_1 = \"\"\"\r\nlucky: public(num)\r\n@public\r\ndef set_lucky(_lucky: num):\r\n    self.lucky = _lucky\r\n\"\"\"\r\n\r\n    contract_2 = \"\"\"\r\nclass Bar():\r\n    def set_lucky(_lucky: num): pass\r\nmodifiable_bar_contract: modifiable(Bar)\r\nstatic_bar_contract: static(Bar)\r\n@public\r\ndef __init__(contract_address: contract(Bar)):\r\n    self.modifiable_bar_contract = contract_address\r\n    self.static_bar_contract = contract_address\r\n\r\n@public\r\ndef trusted_set_lucky(_lucky: num):\r\n    self.modifiable_bar_contract.set_lucky(_lucky)\r\n\r\n@public\r\ndef untrusted_set_lucky(_lucky: num):\r\n    self.static_bar_contract.set_lucky(_lucky)\r\n    \"\"\"\r\n\r\n    c1 = get_contract(contract_1)\r\n    c2 = get_contract(contract_2, args=[c1.address])\r\n    c2.trusted_set_lucky(7)\r\n    assert c1.get_lucky() == 7\r\n    # Fails after attempting a state change after a call to an untrusted address\r\n    assert_tx_failed(lambda: c2.untrusted_set_lucky(5))\r\n```\r\n\r\n## Backwards Compatibility\r\nThis VIP is not backwards compatible as it will make multiple state changing external contract calls to untrusted addresses invalid.\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)",
  "closed_by": {
    "login": "jacqueswww",
    "id": 6917456,
    "node_id": "MDQ6VXNlcjY5MTc0NTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jacqueswww",
    "html_url": "https://github.com/jacqueswww",
    "followers_url": "https://api.github.com/users/jacqueswww/followers",
    "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
    "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
    "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
    "repos_url": "https://api.github.com/users/jacqueswww/repos",
    "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/542/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/542/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/350161178",
    "html_url": "https://github.com/vyperlang/vyper/issues/542#issuecomment-350161178",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/542",
    "id": 350161178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDE2MTE3OA==",
    "user": {
      "login": "DavidKnott",
      "id": 17552858,
      "node_id": "MDQ6VXNlcjE3NTUyODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17552858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DavidKnott",
      "html_url": "https://github.com/DavidKnott",
      "followers_url": "https://api.github.com/users/DavidKnott/followers",
      "following_url": "https://api.github.com/users/DavidKnott/following{/other_user}",
      "gists_url": "https://api.github.com/users/DavidKnott/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DavidKnott/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DavidKnott/subscriptions",
      "organizations_url": "https://api.github.com/users/DavidKnott/orgs",
      "repos_url": "https://api.github.com/users/DavidKnott/repos",
      "events_url": "https://api.github.com/users/DavidKnott/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DavidKnott/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-08T03:17:15Z",
    "updated_at": "2017-12-08T03:17:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fubuloubu Made the `static` and `modifiable` updates to the example.  Let me know if you've got any questions",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/350161178/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/350276667",
    "html_url": "https://github.com/vyperlang/vyper/issues/542#issuecomment-350276667",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/542",
    "id": 350276667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDI3NjY2Nw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-08T14:30:46Z",
    "updated_at": "2017-12-08T14:30:46Z",
    "author_association": "MEMBER",
    "body": "Looks good if tests are added. Personally I think the syntax could be nicer, but that requires a custom parser I believe",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/350276667/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/351947364",
    "html_url": "https://github.com/vyperlang/vyper/issues/542#issuecomment-351947364",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/542",
    "id": 351947364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTk0NzM2NA==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-15T08:44:56Z",
    "updated_at": "2017-12-15T08:45:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@DavidKnott @fubuloubu so one question I had here that we have to make sure... Is there a scenario were one would want to declare per-method *static* or *modifiable* instead ? Or can we safely assume we want this only on a contract level?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/351947364/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/351950814",
    "html_url": "https://github.com/vyperlang/vyper/issues/542#issuecomment-351950814",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/542",
    "id": 351950814,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTk1MDgxNA==",
    "user": {
      "login": "DavidKnott",
      "id": 17552858,
      "node_id": "MDQ6VXNlcjE3NTUyODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17552858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DavidKnott",
      "html_url": "https://github.com/DavidKnott",
      "followers_url": "https://api.github.com/users/DavidKnott/followers",
      "following_url": "https://api.github.com/users/DavidKnott/following{/other_user}",
      "gists_url": "https://api.github.com/users/DavidKnott/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DavidKnott/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DavidKnott/subscriptions",
      "organizations_url": "https://api.github.com/users/DavidKnott/orgs",
      "repos_url": "https://api.github.com/users/DavidKnott/repos",
      "events_url": "https://api.github.com/users/DavidKnott/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DavidKnott/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-15T09:00:29Z",
    "updated_at": "2017-12-15T09:00:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "There are definitely situations where we'd want to do it on a by method basis.  Like if someone's interacting with an ERC20 token it'll have one address and checking the allowance should be `static` but `transferFrom` should be `modifiable`.  It'll add quite a bit of verbosity but we could consider implementing static/modifiable at the external contract definition level or on a case by case basis at the function call level.\r\n``` python\r\n# External contract level\r\nclass Bar():\r\n    def set_lucky(_lucky: num): modifiable\r\n    def get_luck(): static\r\n\r\n# Case by case on function call\r\nmodifiable(bar_contract.set_lucky(7))\r\nstatic(bar_contract.get_luck())\r\n```\r\nDoing it at the external contract level seems like a good balance to me.\r\n\r\nI'd also think we should not allow `modifiable` contracts to change state more than once in any given function (switching from `CALL` to `STATICCALL` after one state changing call).",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/351950814/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/351952746",
    "html_url": "https://github.com/vyperlang/vyper/issues/542#issuecomment-351952746",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/542",
    "id": 351952746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTk1Mjc0Ng==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-15T09:09:22Z",
    "updated_at": "2017-12-15T09:09:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Something to think about! using `static` and `modifiable` at that level will also solve the problem of having `pass` there the whole time :) I actually really like that idea.  And then we perhaps drop marking the whole contract as modifiable & static ?\r\nSo yes, I vote for only implementing the first example ;)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/351952746/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/351999414",
    "html_url": "https://github.com/vyperlang/vyper/issues/542#issuecomment-351999414",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/542",
    "id": 351999414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTk5OTQxNA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-15T12:56:39Z",
    "updated_at": "2017-12-15T12:56:39Z",
    "author_association": "MEMBER",
    "body": ":+1: for getting of `pass` lol",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/351999414/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
