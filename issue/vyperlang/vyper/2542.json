{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/2542",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/2542/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/2542/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/2542/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/2542",
  "id": 1065123229,
  "node_id": "I_kwDOBGDvrM4_fH2d",
  "number": 2542,
  "title": "ABI v3",
  "user": {
    "login": "charles-cooper",
    "id": 3867501,
    "node_id": "MDQ6VXNlcjM4Njc1MDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/charles-cooper",
    "html_url": "https://github.com/charles-cooper",
    "followers_url": "https://api.github.com/users/charles-cooper/followers",
    "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
    "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
    "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
    "repos_url": "https://api.github.com/users/charles-cooper/repos",
    "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
    "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 15,
  "created_at": "2021-11-27T20:13:47Z",
  "updated_at": "2023-08-14T21:44:34Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "stub issue, some ideas for reducing calldata as EIP 4488 introduces a calldata limit. plus with rollups, transactions are getting more calldata heavy anyways.\r\n\r\n- Introduce a version byte into the beginning of all encoded data, starting from `0x00`.\r\n- Differentiate from ABIv2 by enforcing that calldata length cannot be multiple of 32 + 4 (ABIv2 encoded data is guaranteed to satisfy `(calldatasize - 4) % 32 == 0`. (If calldata length is multiple of 32 + 4, add a trailing zero byte)\r\n- To avoid expensive extcodesize checks, all functions return data. We could introduce a new \"unit\" type `()` to represent this.\r\n- For function selector calculation, remove all types from ABI. We only need a flag to represent \"static\" vs \"dynamic\" and number of bytes (minimum number of bytes in the case of dynamic types). So for instance, `uint256` could be `s32`, and `bytes` could be `d32`.\r\n- Variable length ints. Runtime representation is 1 byte for the number of nonzero bytes + nonzero bytes. For instance, `0x0123` would be encoded as `0x02` + `0x0123`. Worst case is 33 bytes to represent a uint256.\r\n- Drop zero-padding for ints which are smaller than 256 bits. For instance, uint8 only occupies 1 byte.\r\n- Offsets are encoded using 2 bytes (maybe 3, is >64KB of calldata possible?)\r\n- No zero-padding for bytes. \"abc\" is encoded as `0x616263` instead of `0x6162630000000000000000000000000000000000000000000000000000000000`\r\n- Use dynamic end-of-buffer instead of dynamic offsets. This allows you to elide one offset, lengths also go away because you can calculate them as the difference between two adjacent offsets. In the common case where there is a single dynamic bytestring, the offset word goes away. ex. the `(string, string)` `(\"abcd\", \"efg\")` is currently encoded as\r\n```\r\n0x0000000000000000000000000000000000000000000000000000000000000040 # offset of \"abcd\" in dynamic section\r\n0x0000000000000000000000000000000000000000000000000000000000000080 # offset of \"efg\" in dynamic section\r\n0x0000000000000000000000000000000000000000000000000000000000000004 # length of \"abcd\" element\r\n0x6162636400000000000000000000000000000000000000000000000000000000 # zero-padded \"abcd\"\r\n0x0000000000000000000000000000000000000000000000000000000000000003 # length of \"efg\"\r\n0x6566670000000000000000000000000000000000000000000000000000000000 # zero-padded \"efg\"\r\n```\r\nUnder this proposal,\r\n```\r\n0x0008 # 8, end of \"abcd\" data\r\n0x000b # 11, end of \"efg\" data, also could drop since it is equal to calldatasize\r\n0x61626364 # \"abcd\" data\r\n0x656667 # \"efg\" data\r\n```\r\nThis has some weird effects like to encode efficiently you might need to evaluate bytestrings backwards. We could get most of the benefit just by allowing dynamic offsets and lengths of the current spec to be encoded using 16-bit integers and drop the zero-padding requirement. This encoding uses 174 fewer bytes, which under current (London) gas costs is 716 gas(!). Under EIP 4488, the encoding would still use 522 less gas.\r\n\r\n## References\r\nEIP 4488\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/2542/reactions",
    "total_count": 4,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 3
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/2542/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/984999809",
    "html_url": "https://github.com/vyperlang/vyper/issues/2542#issuecomment-984999809",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2542",
    "id": 984999809,
    "node_id": "IC_kwDOBGDvrM46teeB",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-02T21:04:35Z",
    "updated_at": "2021-12-02T21:04:35Z",
    "author_association": "COLLABORATOR",
    "body": "Related to reducing calldata cost: https://github.com/ethereum-optimism/optimistic-specs/issues/10",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/984999809/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/990305962",
    "html_url": "https://github.com/vyperlang/vyper/issues/2542#issuecomment-990305962",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2542",
    "id": 990305962,
    "node_id": "IC_kwDOBGDvrM47Bt6q",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-09T21:47:01Z",
    "updated_at": "2021-12-09T21:47:01Z",
    "author_association": "NONE",
    "body": "This ought to be an EIP itself. So much would have to change to support this, and it seems very risky for Vyper to adopt this without larger community buy-in.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/990305962/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/990352056",
    "html_url": "https://github.com/vyperlang/vyper/issues/2542#issuecomment-990352056",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2542",
    "id": 990352056,
    "node_id": "IC_kwDOBGDvrM47B5K4",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-09T22:28:24Z",
    "updated_at": "2021-12-09T22:28:24Z",
    "author_association": "COLLABORATOR",
    "body": "> This ought to be an EIP itself. So much would have to change to support this, and it seems very risky for Vyper to adopt this without larger community buy-in.\r\n\r\nThat's a great point. I mean this is definitely in the idea phase and we would not want to undertake this without larger community buy-in. Would you be interested in helping us to draft and shepherd through the EIP process?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/990352056/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/990503791",
    "html_url": "https://github.com/vyperlang/vyper/issues/2542#issuecomment-990503791",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2542",
    "id": 990503791,
    "node_id": "IC_kwDOBGDvrM47CeNv",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-10T01:33:42Z",
    "updated_at": "2021-12-10T01:33:42Z",
    "author_association": "NONE",
    "body": "> Would you be interested in helping us to draft and shepherd through the EIP process?\r\n\r\nSure, absolutely! Also happy to reach out to Solidity folks. Would be nice if we could coordinate so languages don't end up having competing interface standards. ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/990503791/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1002797851",
    "html_url": "https://github.com/vyperlang/vyper/issues/2542#issuecomment-1002797851",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2542",
    "id": 1002797851,
    "node_id": "IC_kwDOBGDvrM47xXsb",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-29T22:25:09Z",
    "updated_at": "2021-12-29T22:25:09Z",
    "author_association": "MEMBER",
    "body": "> > Would you be interested in helping us to draft and shepherd through the EIP process?\r\n> \r\n> Also happy to reach out to Solidity folks.\r\n\r\nDid you happen to connect with them on this?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1002797851/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1123735765",
    "html_url": "https://github.com/vyperlang/vyper/issues/2542#issuecomment-1123735765",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2542",
    "id": 1123735765,
    "node_id": "IC_kwDOBGDvrM5C-tjV",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-11T13:04:25Z",
    "updated_at": "2022-05-11T13:04:25Z",
    "author_association": "NONE",
    "body": "So what's your current plans around this (since we had at least a very brief discussion about this at devconnect)?\r\nIn general, the ABI should really be specified as a proper cross-language standard - the worst thing that could happen would be to fragment over this. So we should probably think about how best to organize this. In case you want to go ahead with this soon, we should probably try to schedule a call about it in the near future?\r\n\r\nI'm also tagging some people from Fe as well: @g-r-a-n-t, @cburgdorf \r\nBut we should also probably think about whom else to reach out to.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1123735765/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1123761181",
    "html_url": "https://github.com/vyperlang/vyper/issues/2542#issuecomment-1123761181",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2542",
    "id": 1123761181,
    "node_id": "IC_kwDOBGDvrM5C-zwd",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-11T13:26:31Z",
    "updated_at": "2022-05-11T13:26:31Z",
    "author_association": "COLLABORATOR",
    "body": "I'm not in a particular rush! But @gnidan and I were talking about putting together an EIP for this.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1123761181/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1173878041",
    "html_url": "https://github.com/vyperlang/vyper/issues/2542#issuecomment-1173878041",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2542",
    "id": 1173878041,
    "node_id": "IC_kwDOBGDvrM5F9_UZ",
    "user": {
      "login": "esaulpaugh",
      "id": 11620990,
      "node_id": "MDQ6VXNlcjExNjIwOTkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11620990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esaulpaugh",
      "html_url": "https://github.com/esaulpaugh",
      "followers_url": "https://api.github.com/users/esaulpaugh/followers",
      "following_url": "https://api.github.com/users/esaulpaugh/following{/other_user}",
      "gists_url": "https://api.github.com/users/esaulpaugh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esaulpaugh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esaulpaugh/subscriptions",
      "organizations_url": "https://api.github.com/users/esaulpaugh/orgs",
      "repos_url": "https://api.github.com/users/esaulpaugh/repos",
      "events_url": "https://api.github.com/users/esaulpaugh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esaulpaugh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-04T14:21:45Z",
    "updated_at": "2022-07-04T16:20:14Z",
    "author_association": "NONE",
    "body": "Does this have an advantage over using RLP? ABI arguments and return values can be represented as RLP right now.\r\n\r\nTuples and Arrays are represented by RLPList and everything else as RLPString: https://github.com/esaulpaugh/headlong-cli#decode\r\n\r\nFor example:\r\n\r\n`java -jar headlong-cli-1.1-SNAPSHOT.jar -me \"(function[2][][],bytes24,string[1][1],address[],uint72,(uint8),(int16)[2][][1],(int32)[],uint40,(int48)[],(uint),bool,string,bool[2],int24[],uint40[1])\" \"f4f3f298191c766e29a65787b7155dd05f41292438467db93420cade98191c766e29a65787b7155dd05f41292438467db93420cade98191c766e29a65787b7155dd05f41292438467db93420cadec2c17ad594ff00ee01dd02cc03cafebabe990688077708660989fdfffffffffffffe04c107c8c7c6c109c382fff5c8c111c584ffffffed85fca527923bcac17ec786ffffffffff82c10a01866661726f7574c20101c6031483fffffac584fffffffe\"`\r\n\r\nSee also https://github.com/esaulpaugh/headlong/blob/master/src/main/java/com/esaulpaugh/headlong/util/SuperSerial.java\r\n\r\nHandling negative numbers (something traditional RLP can't address because it doesn't have a schema like ABI does) has proved tricky, but I believe I have it all working correctly and fairly well tested. I know RLP is no longer the most fashionable thing, but it achieves its original design goal of space efficiency respectably, and if it ain't broke...\r\n\r\nIn RLP, the original example `(string, string)` `(\"abcd\", \"efg\")` would be: `0x846162636483656667`, nine bytes.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1173878041/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1284497894",
    "html_url": "https://github.com/vyperlang/vyper/issues/2542#issuecomment-1284497894",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2542",
    "id": 1284497894,
    "node_id": "IC_kwDOBGDvrM5Mj-Hm",
    "user": {
      "login": "esaulpaugh",
      "id": 11620990,
      "node_id": "MDQ6VXNlcjExNjIwOTkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11620990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esaulpaugh",
      "html_url": "https://github.com/esaulpaugh",
      "followers_url": "https://api.github.com/users/esaulpaugh/followers",
      "following_url": "https://api.github.com/users/esaulpaugh/following{/other_user}",
      "gists_url": "https://api.github.com/users/esaulpaugh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esaulpaugh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esaulpaugh/subscriptions",
      "organizations_url": "https://api.github.com/users/esaulpaugh/orgs",
      "repos_url": "https://api.github.com/users/esaulpaugh/repos",
      "events_url": "https://api.github.com/users/esaulpaugh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esaulpaugh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-19T19:50:36Z",
    "updated_at": "2022-10-19T19:50:36Z",
    "author_association": "NONE",
    "body": "@charles-cooper I have a proof-of-concept https://github.com/esaulpaugh/abiv3\r\n\r\nWe should collaborate.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1284497894/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1294475722",
    "html_url": "https://github.com/vyperlang/vyper/issues/2542#issuecomment-1294475722",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2542",
    "id": 1294475722,
    "node_id": "IC_kwDOBGDvrM5NKCHK",
    "user": {
      "login": "esaulpaugh",
      "id": 11620990,
      "node_id": "MDQ6VXNlcjExNjIwOTkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11620990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esaulpaugh",
      "html_url": "https://github.com/esaulpaugh",
      "followers_url": "https://api.github.com/users/esaulpaugh/followers",
      "following_url": "https://api.github.com/users/esaulpaugh/following{/other_user}",
      "gists_url": "https://api.github.com/users/esaulpaugh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esaulpaugh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esaulpaugh/subscriptions",
      "organizations_url": "https://api.github.com/users/esaulpaugh/orgs",
      "repos_url": "https://api.github.com/users/esaulpaugh/repos",
      "events_url": "https://api.github.com/users/esaulpaugh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esaulpaugh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-28T05:26:58Z",
    "updated_at": "2022-10-28T06:00:16Z",
    "author_association": "NONE",
    "body": "The admittedly limited feedback I've received from experienced Solidity contract developers indicates that gas usage is their first, last, and only concern with respect to calldata, and that manual bit level hacking will always be cheaper. There also appears to be a strong bias towards compatibility with existing contracts as opposed to compatibility among future contracts.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1294475722/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1298060822",
    "html_url": "https://github.com/vyperlang/vyper/issues/2542#issuecomment-1298060822",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2542",
    "id": 1298060822,
    "node_id": "IC_kwDOBGDvrM5NXtYW",
    "user": {
      "login": "esaulpaugh",
      "id": 11620990,
      "node_id": "MDQ6VXNlcjExNjIwOTkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11620990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esaulpaugh",
      "html_url": "https://github.com/esaulpaugh",
      "followers_url": "https://api.github.com/users/esaulpaugh/followers",
      "following_url": "https://api.github.com/users/esaulpaugh/following{/other_user}",
      "gists_url": "https://api.github.com/users/esaulpaugh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esaulpaugh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esaulpaugh/subscriptions",
      "organizations_url": "https://api.github.com/users/esaulpaugh/orgs",
      "repos_url": "https://api.github.com/users/esaulpaugh/repos",
      "events_url": "https://api.github.com/users/esaulpaugh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esaulpaugh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-01T05:51:56Z",
    "updated_at": "2022-11-01T05:51:56Z",
    "author_association": "NONE",
    "body": "I have no idea what I'm doing python-wise but an attempt was made: https://github.com/esaulpaugh/abiv3/tree/master/python\r\n\r\nWork in progress.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1298060822/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1332872481",
    "html_url": "https://github.com/vyperlang/vyper/issues/2542#issuecomment-1332872481",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2542",
    "id": 1332872481,
    "node_id": "IC_kwDOBGDvrM5PcgUh",
    "user": {
      "login": "esaulpaugh",
      "id": 11620990,
      "node_id": "MDQ6VXNlcjExNjIwOTkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11620990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esaulpaugh",
      "html_url": "https://github.com/esaulpaugh",
      "followers_url": "https://api.github.com/users/esaulpaugh/followers",
      "following_url": "https://api.github.com/users/esaulpaugh/following{/other_user}",
      "gists_url": "https://api.github.com/users/esaulpaugh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esaulpaugh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esaulpaugh/subscriptions",
      "organizations_url": "https://api.github.com/users/esaulpaugh/orgs",
      "repos_url": "https://api.github.com/users/esaulpaugh/repos",
      "events_url": "https://api.github.com/users/esaulpaugh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esaulpaugh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-30T23:27:38Z",
    "updated_at": "2022-11-30T23:27:38Z",
    "author_association": "NONE",
    "body": "@gnidan @charles-cooper \r\n\r\nI've got Java and Python prototypes set up to use an unsigned integer as the function selector instead of a hash, to save space. Integer arrays can also encode elements fixed-width or variable-width as desired, and both are equally valid.\r\n\r\nFixed-width enables constant-time random access to array elements which is useful for very large arrays. And it can be more space-efficient in some cases too because values are padded only to the width of the widest element and not to the width of the datatype. And they don't require an RLP prefix per-element.\r\n\r\nI'd be interested to know what y'all think and whether anyone wants to jump on a call about an EIP. I'm @esaulpaugh on telegram.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1332872481/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1636899658",
    "html_url": "https://github.com/vyperlang/vyper/issues/2542#issuecomment-1636899658",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2542",
    "id": 1636899658,
    "node_id": "IC_kwDOBGDvrM5hkRtK",
    "user": {
      "login": "esaulpaugh",
      "id": 11620990,
      "node_id": "MDQ6VXNlcjExNjIwOTkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11620990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esaulpaugh",
      "html_url": "https://github.com/esaulpaugh",
      "followers_url": "https://api.github.com/users/esaulpaugh/followers",
      "following_url": "https://api.github.com/users/esaulpaugh/following{/other_user}",
      "gists_url": "https://api.github.com/users/esaulpaugh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esaulpaugh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esaulpaugh/subscriptions",
      "organizations_url": "https://api.github.com/users/esaulpaugh/orgs",
      "repos_url": "https://api.github.com/users/esaulpaugh/repos",
      "events_url": "https://api.github.com/users/esaulpaugh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esaulpaugh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-15T22:10:35Z",
    "updated_at": "2023-07-15T22:10:35Z",
    "author_association": "NONE",
    "body": "I plan on submitting an ABIv3 draft EIP soon, so if anyone wants to help author it, let me know. I'm also working on some reference code in Yul to demonstrate decoding in the EVM.\r\n\r\n@gnidan @charles-cooper ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1636899658/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1646693715",
    "html_url": "https://github.com/vyperlang/vyper/issues/2542#issuecomment-1646693715",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2542",
    "id": 1646693715,
    "node_id": "IC_kwDOBGDvrM5iJo1T",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-22T23:55:09Z",
    "updated_at": "2023-07-22T23:55:09Z",
    "author_association": "COLLABORATOR",
    "body": "one interesting thing i realized while chatting with @esaulpaugh is that \"calldata\" is comparatively cheaper for inter-contract calls. so it might be worth having a more compressed encoding for calldata from eoa-initiated txns and an unpacked encoding (which is easier to decode) for inter-contract calls.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1646693715/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1678115746",
    "html_url": "https://github.com/vyperlang/vyper/issues/2542#issuecomment-1678115746",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2542",
    "id": 1678115746,
    "node_id": "IC_kwDOBGDvrM5kBgOi",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-14T21:44:22Z",
    "updated_at": "2023-08-14T21:44:34Z",
    "author_association": "COLLABORATOR",
    "body": "> Does this have an advantage over using RLP? ABI arguments and return values can be represented as RLP right now.\r\n\r\nUsing RLP is pretty much a non-starter here as it is very inefficient from an encoding/decoding perspective. It is also not simple, which is important when we consider implementation correctness. For instance, to decode an RLP int, the pseudocode looks something like\r\n```\r\nint = shr 248 (calldataload ptr)\r\nlen = 1\r\nif (int_byte) > 0x80:\r\n    len = add(len, sub(int, 80))\r\n    int = shr(sub(32, mul(8, sub(int_byte, 80)), calldataload( add (1, ptr)))\r\nptr = add(ptr, len)\r\n```\r\nthis is already like a couple dozen instructions / 100 gas, as compared to the proposed alternatives of small/packed ints (shift and mask after calldataload) or varints with a length byte (two shifts and masks after calldataload). In other words, efficiency and simplicity of the encoder/decoder need to be considered as well.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1678115746/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
