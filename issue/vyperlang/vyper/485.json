{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/485",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/485/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/485/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/485/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/485",
  "id": 275215229,
  "node_id": "MDU6SXNzdWUyNzUyMTUyMjk=",
  "number": 485,
  "title": "VIP: ABI Method in contracts",
  "user": {
    "login": "fubuloubu",
    "id": 3859395,
    "node_id": "MDQ6VXNlcjM4NTkzOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fubuloubu",
    "html_url": "https://github.com/fubuloubu",
    "followers_url": "https://api.github.com/users/fubuloubu/followers",
    "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
    "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
    "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
    "repos_url": "https://api.github.com/users/fubuloubu/repos",
    "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2017-11-20T01:47:56Z",
  "updated_at": "2020-06-21T23:22:40Z",
  "closed_at": "2020-06-21T23:22:31Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "This is the suggested template for new VIPs.\r\n\r\n## Preamble\r\n\r\nVIP: 485\r\nTitle: ABI Method in contracts\r\nAuthor: @fubuloubu\r\nType: Standard Track\r\nStatus: Draft\r\nCreated: 2017-11-19\r\n\r\n## Simple Summary\r\nHave Viper create an additional ABI method that returns the ABI on-demand and is deployed with the contract.\r\n\r\n## Abstract\r\nYou create a smart contract, deploy it to the Ethereum blockchain and want to share it with the world! Now all you have to do is share your ABI (or get users to generate it themselves) so that web3 can interact with it. Wouldn't it be awesome if there were a standard method (proposal `get_abi() -> bytesN:`) that was auto-magically generated by the compiler and added to your contract, so that other tools could directly query this to get the interface? I think so\r\n\r\n## Motivation\r\nThis would make it simpler for for development integration, and for third-party/dynamic applications to interact with contracts on the Ethereum blockchain by being able to query the ABI.\r\n\r\n## Specification\r\nPretty simple, just create a method called `get_abi()` in every contract that returns the result of the abi processor in whatever format makes the most sense (JSON, Native, etc.). Have it be configurable in the compiler so if someone doesn't want it, they can opt-out. It might need an additional `get_abi_gas_cost() -> num:` method in order to get the gas estimation for the `get_abi()` method itself (as it will be different between contracts and we need it to run the method).\r\n\r\nHere's something really cool this could enable (if we decide this sticks with Viper's principles): Stateful gas calculation. We could compute gas costs for methods with non-constant variables (strings, var_lists, etc.) by simply figuring out the correct linear sequence (`methodGasCost = G1*global1.length + G2*global2.length + ... + G3*globalN.length + G_constant`) and putting it in this method before returning the ABI with the gas estimates based on current state. This might be a much further off kind of idea, but I think it would be really cool.\r\n\r\n## Backwards Compatibility\r\nBackwards compatible as long as no one used the `get_abi()`/`get_abi_gas_cost()` method, which is probably okay.\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n",
  "closed_by": {
    "login": "fubuloubu",
    "id": 3859395,
    "node_id": "MDQ6VXNlcjM4NTkzOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fubuloubu",
    "html_url": "https://github.com/fubuloubu",
    "followers_url": "https://api.github.com/users/fubuloubu/followers",
    "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
    "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
    "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
    "repos_url": "https://api.github.com/users/fubuloubu/repos",
    "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/485/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/485/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/345579625",
    "html_url": "https://github.com/vyperlang/vyper/issues/485#issuecomment-345579625",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/485",
    "id": 345579625,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTU3OTYyNQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-20T03:05:37Z",
    "updated_at": "2017-11-20T03:15:47Z",
    "author_association": "MEMBER",
    "body": "Also, if this were enacted, `contract` types could have their ABI checked during init/runtime setting by first querying the ABI from the contract being retreived (if that contract contains that `get_abi()` method) and then testing against the expected method signature provided e.g.:\r\n\r\n```python\r\ndef set_lucky(arg1: contract, arg2: num):\r\n    arg1.set_lucky(arg2)\r\n```\r\nwhich would perform something like this behind the scenes (or after processor):\r\n```python\r\ndef set_lucky(arg1: contract, arg2: num):\r\n    # Below is generated by compiler\r\n    if address.get_abi is not None:\r\n        contract_abi = address.get_abi()\r\n        assert contract_abi['set_lucky'] is not None\r\n        assert contract_abi['set_lucky']['inputs'] is { _lucky : num }\r\n        assert contract_abi['set_lucky']['outputs'] is None\r\n        assert contract_abi['set_lucky']['gas'] <= msg.gas + CALLCODE_GAS\r\n    # NOTE: above is not valid Viper syntax, but I hope you get the idea\r\n    arg1.set_lucky(arg2)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/345579625/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/345724094",
    "html_url": "https://github.com/vyperlang/vyper/issues/485#issuecomment-345724094",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/485",
    "id": 345724094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTcyNDA5NA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-20T15:10:22Z",
    "updated_at": "2017-11-20T15:10:22Z",
    "author_association": "MEMBER",
    "body": "TODO:\r\nBenchmark the increased cost for this",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/345724094/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/383245233",
    "html_url": "https://github.com/vyperlang/vyper/issues/485#issuecomment-383245233",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/485",
    "id": 383245233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzI0NTIzMw==",
    "user": {
      "login": "ericssonaxel",
      "id": 3268707,
      "node_id": "MDQ6VXNlcjMyNjg3MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3268707?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericssonaxel",
      "html_url": "https://github.com/ericssonaxel",
      "followers_url": "https://api.github.com/users/ericssonaxel/followers",
      "following_url": "https://api.github.com/users/ericssonaxel/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericssonaxel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericssonaxel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericssonaxel/subscriptions",
      "organizations_url": "https://api.github.com/users/ericssonaxel/orgs",
      "repos_url": "https://api.github.com/users/ericssonaxel/repos",
      "events_url": "https://api.github.com/users/ericssonaxel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericssonaxel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-20T23:14:36Z",
    "updated_at": "2018-04-20T23:14:36Z",
    "author_association": "NONE",
    "body": "The standard interface for in-contract abi strings should probably be proposed through the EIP track, and then implemented by both Solidity and Vyper.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/383245233/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/647194798",
    "html_url": "https://github.com/vyperlang/vyper/issues/485#issuecomment-647194798",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/485",
    "id": 647194798,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzE5NDc5OA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-21T23:22:31Z",
    "updated_at": "2020-06-21T23:22:31Z",
    "author_association": "MEMBER",
    "body": "Withdrawn. Relevant resources:\r\n- https://eips.ethereum.org/EIPS/eip-205\r\n- https://www.ethpm.com/",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/647194798/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
