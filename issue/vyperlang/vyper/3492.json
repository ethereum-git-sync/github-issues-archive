{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/3492",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/3492/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/3492/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/3492/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/3492",
  "id": 1792322350,
  "node_id": "I_kwDOBGDvrM5q1Ksu",
  "number": 3492,
  "title": "Tried to vyper compile on etherscan for verify and publish (already deployed to goerli via remixIDE) and received error which said to notify developers",
  "user": {
    "login": "snarflakes",
    "id": 75555569,
    "node_id": "MDQ6VXNlcjc1NTU1NTY5",
    "avatar_url": "https://avatars.githubusercontent.com/u/75555569?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/snarflakes",
    "html_url": "https://github.com/snarflakes",
    "followers_url": "https://api.github.com/users/snarflakes/followers",
    "following_url": "https://api.github.com/users/snarflakes/following{/other_user}",
    "gists_url": "https://api.github.com/users/snarflakes/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/snarflakes/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/snarflakes/subscriptions",
    "organizations_url": "https://api.github.com/users/snarflakes/orgs",
    "repos_url": "https://api.github.com/users/snarflakes/repos",
    "events_url": "https://api.github.com/users/snarflakes/events{/privacy}",
    "received_events_url": "https://api.github.com/users/snarflakes/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-07-06T21:55:46Z",
  "updated_at": "2023-07-06T21:56:33Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Version Information\r\nremixIDE: 0.2.16\r\ntried different versions on etherscan vyper compiler: errors on 0.2.0, 0.2.1, 0.2.2\r\n\r\noriginally compiled and deployed on windows remix IDE vyper (0.2.16)\r\nhttps://goerli.etherscan.io/address/0x1ce9094ee686b78f0077a40f8adc82d55114036a\r\n\r\n### What's your issue about?\r\n\r\nBug error emitted when trying to publish and verify.  And then again on using etherscan vyper compiler:\r\n\r\n\r\nvyper.exceptions.TypeCheckFailure: Compare node did not produce LLL\r\n\r\nThis is an unhandled internal compiler error. Please create an issue on Github to notify the developers.\r\nhttps://github.com/vyperlang/vyper/issues/new?template=bug.md\r\nErr. RefID: vyper-in-FcVBAtcLg1qGXUZ.vy\r\n\r\n\r\n\r\n\r\n\r\nFull Vyper Code I was trying to compile:\r\n\r\n# @version ^0.2.0\r\n# @title CryptoDashforCash\r\n# @author nftydaze\r\n\r\n#**\r\n#* Copyright nftydaze 2023\r\n#*\r\n#* Permission is hereby granted, free of charge, to any person obtaining a copy \r\n#* of this software and associated documentation files (the \"Software\"), to deal\r\n#* in the Software without restriction, including without limitation the rights \r\n#* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell \r\n#* copies of the Software, and to permit persons to whom the Software is furnished to \r\n#* do so, subject to the following conditions:\r\n#*\r\n#* The above copyright notice and this permission notice shall be included in all \r\n#* copies or substantial portions of the Software.\r\n#*\r\n#* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n#* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n#* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n#* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n#* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN \r\n#* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n#**\r\n\r\n# Variables\r\nowner: public(address)\r\nemployee: public(address)\r\nrecipients: public(address[100])\r\namounts: public(uint256[4])\r\nprobabilities: public(uint256[4])\r\nrecipient_count: public(uint256)\r\nlast_claimed: public(HashMap[address, uint256])\r\nwaiting_period: constant(uint256) = 7 * 24 * 60 * 60  # 7 days in seconds\r\n\r\n# Events\r\nevent Transfer:\r\n    recipient: indexed(address)\r\n    amount: uint256\r\n\r\nevent Deposit:\r\n    sender: indexed(address)\r\n    amount: uint256 \r\n\r\n# Constructor\r\n@external\r\ndef __init__():\r\n    self.owner = msg.sender\r\n\r\n# Set employee\r\n@external\r\ndef setEmployee(new_employee: address):\r\n    assert msg.sender == self.owner, \"Only the owner can set the employee\"\r\n    self.employee = new_employee\r\n\r\n# Set recipients\r\n@external\r\ndef setRecipients(_recipients: address[100], count: uint256):\r\n    assert msg.sender == self.owner or msg.sender == self.employee, \"Not authorized\"\r\n    assert 2 <= count and count <= 100, \"Number of recipients must be between 2 and 100\"\r\n    self.recipients = _recipients\r\n    self.recipient_count = count\r\n\r\n# Set amounts and probabilities\r\n@external\r\ndef setAmountsAndProbabilities(_amounts: uint256[4], _probabilities: uint256[4]):\r\n    assert msg.sender == self.owner or msg.sender == self.employee, \"Not authorized\"\r\n    self.amounts = _amounts\r\n    self.probabilities = _probabilities\r\n\r\n# Send funds\r\n@external\r\ndef sendFunds():\r\n    recipient_found: bool = False\r\n    for i in range(100):\r\n        if i >= self.recipient_count:\r\n            break\r\n        if self.recipients[i] == msg.sender:\r\n            recipient_found = True\r\n            current_time: uint256 = block.timestamp\r\n            last_claim_time: uint256 = self.last_claimed[msg.sender]\r\n\r\n            assert current_time >= last_claim_time + waiting_period, \"Must wait 7 days between claims\"\r\n\r\n            # Random payout selection\r\n            rand_value: uint256 = convert(keccak256(convert(current_time, bytes32)), uint256) % 100\r\n            payout_amount: uint256 = 0\r\n            probability_sum: uint256 = 0\r\n\r\n            for j in range(4):\r\n                probability_sum += self.probabilities[j]\r\n                if rand_value < probability_sum:\r\n                    payout_amount = self.amounts[j]\r\n                    break\r\n\r\n            send(msg.sender, payout_amount)\r\n\r\n            log Transfer(msg.sender, payout_amount)\r\n            self.last_claimed[msg.sender] = current_time\r\n            break\r\n\r\n    assert recipient_found, \"Caller is not a recipient\"\r\n\r\n# Transfer ownership\r\n@external\r\ndef transferOwnership(newOwner: address):\r\n    assert msg.sender == self.owner, \"Only the current owner can transfer ownership\"\r\n    self.owner = newOwner\r\n\r\n# Reset waiting period for a specific recipient\r\n@external\r\ndef resetWaitingPeriodForRecipient(recipient: address):\r\n    assert msg.sender == self.owner or msg.sender == self.employee, \"Not authorized\"\r\n    self.last_claimed[recipient] = 0\r\n\r\n# Handle direct Ether transfers\r\n@payable\r\n@external\r\ndef __default__():\r\n    # Handle incoming ETH deposits\r\n    if msg.value > 0:\r\n        log Deposit(msg.sender, msg.value)\r\n    else:\r\n        assert False, \"Invalid transaction\"\r\n\r\n\r\n### How can it be fixed?\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/3492/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/3492/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
