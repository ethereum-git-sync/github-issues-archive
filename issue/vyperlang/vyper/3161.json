{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/3161",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/3161/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/3161/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/3161/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/3161",
  "id": 1468136808,
  "node_id": "I_kwDOBGDvrM5Xgf1o",
  "number": 3161,
  "title": "Calls to functions with higher mutability not prevented",
  "user": {
    "login": "trocher",
    "id": 43437004,
    "node_id": "MDQ6VXNlcjQzNDM3MDA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/43437004?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/trocher",
    "html_url": "https://github.com/trocher",
    "followers_url": "https://api.github.com/users/trocher/followers",
    "following_url": "https://api.github.com/users/trocher/following{/other_user}",
    "gists_url": "https://api.github.com/users/trocher/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/trocher/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/trocher/subscriptions",
    "organizations_url": "https://api.github.com/users/trocher/orgs",
    "repos_url": "https://api.github.com/users/trocher/repos",
    "events_url": "https://api.github.com/users/trocher/events{/privacy}",
    "received_events_url": "https://api.github.com/users/trocher/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4038639649,
      "node_id": "LA_kwDOBGDvrM7wuMAh",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/bug%20-%20typechecker",
      "name": "bug - typechecker",
      "color": "51B431",
      "default": false,
      "description": "issue with typechecker"
    },
    {
      "id": 4038663662,
      "node_id": "LA_kwDOBGDvrM7wuR3u",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/bug%20-%20type%201",
      "name": "bug - type 1",
      "color": "f41348",
      "default": false,
      "description": "bug which results in incorrect codegen"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-11-29T14:14:19Z",
  "updated_at": "2022-12-05T17:14:39Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Version Information\r\n\r\n* vyper Version (output of `vyper --version`): 0.3.8+commit.6020b8bb\r\n* OS: OSX\r\n* Python Version (output of `python --version`): 3.8.0\r\n\r\n### What's your issue about?\r\n\r\nWhen a `pure` (respectively `view`) function tries to call a function with a higher mutability, the compiler should fail. This is well enforced when such call is embedded directly in a `Expr` statement (the return value is not used). However when the call is not directly a statement, the compiler behave differently:\r\n\r\n1. For a `pure` function calling a `view` function, the second case will compile successfully. For example here, while `ContractB` will fail to compile due to a `StateAccessViolation` (`Cannot call non-pure function from a pure function`),  `ContractA` will compile successfully although `test`, a `pure` function is calling a `view` function.\r\n\r\n`ContractA`:\r\n``` Vyper\r\ninterface A:\r\n    def bar() -> uint16: view\r\n@external\r\n@pure\r\ndef test(to:address):\r\n    a:A = A(to)\r\n    x:uint16 = a.bar()\r\n```\r\n`ContractB`:\r\n``` Vyper\r\ninterface A:\r\n    def bar() -> uint16: view\r\n@external\r\n@pure\r\ndef test(to:address):\r\n    a:A = A(to)\r\n    a.bar()\r\n```\r\n\r\n2. For a `pure` or a `view` function calling a `nonpayable` or a `payable` function, the second case will fail to compile with an assertion error. For example here, while `ContractD` will fail to compile due to a `StateAccessViolation` (`Cannot call a mutating function from a view function`),  `ContractC` will fail as well with the given assertion error.\r\n\r\n`ContractC`:\r\n``` Vyper\r\ninterface A:\r\n    def bar() -> uint16: nonpayable\r\n@external\r\n@view\r\ndef test(to:address):\r\n    a:A = A(to)\r\n    x:uint16 = a.bar()\r\n```\r\n`ContractD`:\r\n``` Vyper\r\ninterface A:\r\n    def bar() -> uint16: nonpayable\r\n@external\r\n@view\r\ndef test(to:address):\r\n    a:A = A(to)\r\n    a.bar()\r\n```\r\nOutput of compiling `ContractC`:\r\n```\r\nError compiling: tests/customs/code.vy\r\nTraceback (most recent call last):\r\n  File \"/Users/trocher/Documents/thesis/vyper/venv/bin/vyper\", line 11, in <module>\r\n    load_entry_point('vyper==0.3.8', 'console_scripts', 'vyper')()\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/cli/vyper_compile.py\", line 57, in _parse_cli_args\r\n    return _parse_args(sys.argv[1:])\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/cli/vyper_compile.py\", line 154, in _parse_args\r\n    compiled = compile_files(\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/cli/vyper_compile.py\", line 294, in compile_files\r\n    compiler_data = vyper.compile_codes(\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/evm/opcodes.py\", line 226, in _wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/compiler/__init__.py\", line 141, in compile_codes\r\n    exc_handler(contract_name, exc)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/cli/vyper_compile.py\", line 189, in exc_handler\r\n    raise exception\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/compiler/__init__.py\", line 138, in compile_codes\r\n    out[contract_name][output_format] = OUTPUT_FORMATS[output_format](compiler_data)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/compiler/output.py\", line 79, in build_ir_output\r\n    return compiler_data.ir_nodes\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/compiler/phases.py\", line 126, in ir_nodes\r\n    ir, ir_runtime, sigs = self._ir_output\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/functools.py\", line 966, in __get__\r\n    val = self.func(instance)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/compiler/phases.py\", line 122, in _ir_output\r\n    return generate_ir_nodes(self.global_ctx, self.no_optimize)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/compiler/phases.py\", line 279, in generate_ir_nodes\r\n    ir_nodes, ir_runtime, function_sigs = module.generate_ir_for_module(global_ctx)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/module.py\", line 209, in generate_ir_for_module\r\n    runtime, internal_functions = _runtime_ir(runtime_functions, all_sigs, global_ctx)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/module.py\", line 145, in _runtime_ir\r\n    func_ir = generate_ir_for_function(func_ast, all_sigs, global_ctx, skip_nonpayable_check)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/function_definitions/common.py\", line 62, in generate_ir_for_function\r\n    o = generate_ir_for_external_function(code, sig, context, skip_nonpayable_check)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/function_definitions/external_function.py\", line 182, in generate_ir_for_external_function\r\n    body += [parse_body(code.body, context, ensure_terminated=True)]\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/stmt.py\", line 424, in parse_body\r\n    ir = parse_stmt(stmt, context)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/stmt.py\", line 398, in parse_stmt\r\n    return Stmt(stmt, context).ir_node\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/stmt.py\", line 40, in __init__\r\n    self.ir_node = fn()\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/stmt.py\", line 68, in parse_AnnAssign\r\n    sub = Expr(self.stmt.value, self.context).ir_node\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/expr.py\", line 75, in __init__\r\n    self.ir_node = fn()\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/expr.py\", line 682, in parse_Call\r\n    return external_call.ir_for_external_call(self.expr, self.context)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/external_call.py\", line 241, in ir_for_external_call\r\n    _external_call_helper(contract_address, args_ir, call_kwargs, call_expr, context)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/external_call.py\", line 214, in _external_call_helper\r\n    assert use_staticcall, \"typechecker missed this\"\r\n```\r\n### How can it be fixed?\r\n\r\nMy guess is that the issue comes from the fact that the semantics validation performed in `visit_Expr` are not performed for calls that are not directly in `Expr` AST nodes. \r\nhttps://github.com/vyperlang/vyper/blob/6020b8bbf66b062d299d87bc7e4eddc4c9d1c157/vyper/semantics/validation/local.py#L472-L511\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/3161/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/3161/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1337765838",
    "html_url": "https://github.com/vyperlang/vyper/issues/3161#issuecomment-1337765838",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3161",
    "id": 1337765838,
    "node_id": "IC_kwDOBGDvrM5PvK_O",
    "user": {
      "login": "trocher",
      "id": 43437004,
      "node_id": "MDQ6VXNlcjQzNDM3MDA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/43437004?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trocher",
      "html_url": "https://github.com/trocher",
      "followers_url": "https://api.github.com/users/trocher/followers",
      "following_url": "https://api.github.com/users/trocher/following{/other_user}",
      "gists_url": "https://api.github.com/users/trocher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trocher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trocher/subscriptions",
      "organizations_url": "https://api.github.com/users/trocher/orgs",
      "repos_url": "https://api.github.com/users/trocher/repos",
      "events_url": "https://api.github.com/users/trocher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trocher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-05T17:14:39Z",
    "updated_at": "2022-12-05T17:14:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "For completeness, adding to this issue that calling a method attached to a type that have a return value (To my knowledge the only one currently is `DynArray.pop()`) in a `view` function leads to the same behavior:\r\n```Vyper\r\na:DynArray[uint16,3]\r\n@external\r\ndef __init__():\r\n    self.a = [1,2,3]\r\n@view\r\n@external\r\ndef bar()->DynArray[uint16,3]:\r\n    x:uint16 = self.a.pop()\r\n    return self.a # return [1,2]\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1337765838/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
