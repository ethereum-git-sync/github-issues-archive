{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/397",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/397/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/397/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/397/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/397",
  "id": 265047936,
  "node_id": "MDU6SXNzdWUyNjUwNDc5MzY=",
  "number": 397,
  "title": "FEATURE: Audit Module",
  "user": {
    "login": "fubuloubu",
    "id": 3859395,
    "node_id": "MDQ6VXNlcjM4NTkzOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fubuloubu",
    "html_url": "https://github.com/fubuloubu",
    "followers_url": "https://api.github.com/users/fubuloubu/followers",
    "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
    "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
    "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
    "repos_url": "https://api.github.com/users/fubuloubu/repos",
    "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2017-10-12T18:52:34Z",
  "updated_at": "2019-02-06T15:56:56Z",
  "closed_at": "2019-01-24T18:35:42Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "It would be really awesome if Viper had some sort of internal auditing capabilities that could warn you if/when/under what conditions certain methods could fail. Additionally, to be able to add rules to the source file (that do not get compiled) dictating what non-exceptional scenarios constitute a failure. Suggested keyword (from #370) is `should`, but I think `#invariant` or `#assume` would be better.\r\n\r\nAs an example, the `company.v.py` example has two different scenarios I could envision this working with:\r\n```python\r\ndef sell_stock(sell_order: currency_value):\r\n    assert self.holding[msg.sender] >= sell_order\r\n    assert self.balance >= (sell_order * self.price)\r\n    self.holdings[msg.sender] -= sell_order\r\n    self.holdings[self.company] += sell_order\r\n    send(msg.sender, sell_order * self.price)\r\n```\r\nmight produce something like this:\r\n```bash\r\nAuditWarning: A value for 'sell_order' in the range '[-2**127, 0)'\r\n              would cause an exception 'NegativeWeiTransfer'\r\n              when executing 'send(msg.sender, sell_order * self.price)'\r\n              in method 'sell_stock()'\r\n```\r\n\r\nAdding a `#invariant` should check if that condition is ever possible\r\n```python\r\n# Part of the audit assertions (that don't get compiled)\r\n#invariant holding[any(address)] >= 0 # Should never have negative stock\r\n\r\ndef transfer_stock(receiver: address, transfer_order: currency_value):\r\n    assert self.holding[msg.sender] >= transfer_order\r\n    self.holdings[msg.sender] -= transfer_order\r\n    self.holdings[receiver] += transfer_order\r\n    should self.holdings[receiver] + transfer_order == self.holdings[msg.sender]\r\n```\r\nwhich might produce something like:\r\n```bash\r\nAuditWarning: A value for 'transfer_order' in the range '[-2**127, 0)'\r\n              would fail invariant 'holding[any(address)] >= 0'\r\n              given 'self.holdings[receiver] = 0'\r\n              in method 'transfer_stock()'\r\n```\r\n\r\nAlerting you to the fact that you should add an assertion to `transfer_stock()` to ensure `transfer_order` is never negative, which has the additional side effect of allowing someone to steal stock from another person (this is not necessarily caught in this example, but the fact the Audit Module caught one weird scenario can help alert you to the bigger problem).\r\n\r\nWhile this is not a good substitute for an audit by a human for potential functional issues (like being able to steal stock), it does provide a cool guarentee that you can audit code written in variable against commonly employed attacks (basically whatever we build in to the Audit Module). Viper is currently simple enough (no inheritance, limited support for arrays, limited types, etc.) that this is possible to implement, and it can also help alert us to issues in the underlying compiler over time.\r\n\r\n![smile](http://bandocats.org/blog/wp-content/uploads/2010/05/P1010300.jpg)\r\n",
  "closed_by": {
    "login": "fubuloubu",
    "id": 3859395,
    "node_id": "MDQ6VXNlcjM4NTkzOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fubuloubu",
    "html_url": "https://github.com/fubuloubu",
    "followers_url": "https://api.github.com/users/fubuloubu/followers",
    "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
    "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
    "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
    "repos_url": "https://api.github.com/users/fubuloubu/repos",
    "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/397/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/397/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336451255",
    "html_url": "https://github.com/vyperlang/vyper/issues/397#issuecomment-336451255",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/397",
    "id": 336451255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjQ1MTI1NQ==",
    "user": {
      "login": "DustinWehr",
      "id": 1623534,
      "node_id": "MDQ6VXNlcjE2MjM1MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1623534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DustinWehr",
      "html_url": "https://github.com/DustinWehr",
      "followers_url": "https://api.github.com/users/DustinWehr/followers",
      "following_url": "https://api.github.com/users/DustinWehr/following{/other_user}",
      "gists_url": "https://api.github.com/users/DustinWehr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DustinWehr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DustinWehr/subscriptions",
      "organizations_url": "https://api.github.com/users/DustinWehr/orgs",
      "repos_url": "https://api.github.com/users/DustinWehr/repos",
      "events_url": "https://api.github.com/users/DustinWehr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DustinWehr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-13T13:23:57Z",
    "updated_at": "2017-10-13T13:24:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 for `#invariant`",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336451255/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336486861",
    "html_url": "https://github.com/vyperlang/vyper/issues/397#issuecomment-336486861",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/397",
    "id": 336486861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjQ4Njg2MQ==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-13T15:32:00Z",
    "updated_at": "2017-10-13T15:32:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "I support this. Examples of things that this could be useful for:\r\n\r\n1. In a currency, verify that balances cannot go below zero.\r\n2. In a currency, verify that no function except for `issue` affects the total supply\r\n3. In an on-chain market maker, verify that the invariant of holdings of asset A vs holdings of asset B holds true (useful for Bancor or things like [this](https://www.reddit.com/r/ethereum/comments/55m04x/lets_run_onchain_decentralized_exchanges_the_way/))\r\n4. Verify that the balance of address `x` can only decrease in a function call if `msg.sender = x`\r\n5. Verify that there always exists some sequence of transactions through which the set of participants in a contract could collude to take the money out\r\n6. Verify that taking any funds out of a multisig actually requires 3/5 permission\r\n\r\nI'd love to see a longer list of motivating examples put together to help point anyone trying to make fuzz testing, model checking, symbolic execution or formal verification tools in the right direction.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336486861/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336493209",
    "html_url": "https://github.com/vyperlang/vyper/issues/397#issuecomment-336493209",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/397",
    "id": 336493209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjQ5MzIwOQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-13T15:55:08Z",
    "updated_at": "2017-10-13T15:55:08Z",
    "author_association": "MEMBER",
    "body": "For 4. (balance can only decrease in a function call for a given address x) how does a syntax like this look?\r\n`#invariant self.balance[x] >= funName(sender=x) then self.balance[x], where x = any(address) `",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336493209/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336494666",
    "html_url": "https://github.com/vyperlang/vyper/issues/397#issuecomment-336494666",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/397",
    "id": 336494666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjQ5NDY2Ng==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-13T16:00:36Z",
    "updated_at": "2017-10-13T16:08:14Z",
    "author_association": "MEMBER",
    "body": "5. seems very hard to reason about, but maybe revise that to something like \"only participants x, y, z can get money out of this contract's balance using any one method\"\r\ne.g. `#invariant a.balance < any(method) then a.balance, where a not in [x, y, z]`\r\n\r\nWhere `any(method)` just means any callable function inside the contract, and assume `a` is the sender.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336494666/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336508695",
    "html_url": "https://github.com/vyperlang/vyper/issues/397#issuecomment-336508695",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/397",
    "id": 336508695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjUwODY5NQ==",
    "user": {
      "login": "DustinWehr",
      "id": 1623534,
      "node_id": "MDQ6VXNlcjE2MjM1MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1623534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DustinWehr",
      "html_url": "https://github.com/DustinWehr",
      "followers_url": "https://api.github.com/users/DustinWehr/followers",
      "following_url": "https://api.github.com/users/DustinWehr/following{/other_user}",
      "gists_url": "https://api.github.com/users/DustinWehr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DustinWehr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DustinWehr/subscriptions",
      "organizations_url": "https://api.github.com/users/DustinWehr/orgs",
      "repos_url": "https://api.github.com/users/DustinWehr/repos",
      "events_url": "https://api.github.com/users/DustinWehr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DustinWehr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-13T16:56:28Z",
    "updated_at": "2017-10-13T16:56:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think 5 and 6 would be a job for an interactive theorem prover. @pirapira you're interested in proving dapp level correctness properties, right? Or are you focused on compiler correctness? \r\n\r\n@fubuloubu is this the issue you suggested making for the `should` keyword? It seems to have expanded to a larger scope.\r\n\r\nAs I imagined it, `should` is a *very* user friendly and easy to implement, but relatively limited way of communicating intent to any theorem prover. The syntax is exactly the same as `assert`, except you restrict the expression to be side effect free. To a theorem prover it is a goal and, once proved, a lemma.\r\n\r\nA major use would be to express some complex precondition on a private helper function that can't be expressed using the type system. \r\n\r\nCould also be used for optimization. A concrete (but trivial) example from one of the few contracts I've written, [our suggested fix for the delegating voting example (still untested)](https://gist.github.com/DustinWehr/98c9310afab793588aa8e031f1d79aec): the function `forward_weight` gets called both internally/privately (by `delegate`) and externally/publicly (forgive me for not knowing the Solidity terminology). For the internal call, the two `assert` statements could be skipped. Communicate that to the compiler by expressing both assertions as invariants before the call to `forward_weight` on line 103.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336508695/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336547252",
    "html_url": "https://github.com/vyperlang/vyper/issues/397#issuecomment-336547252",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/397",
    "id": 336547252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjU0NzI1Mg==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-13T19:33:33Z",
    "updated_at": "2017-10-13T19:33:33Z",
    "author_association": "NONE",
    "body": "I first want a Viper interpreter in a theorem prover.  Then I can test the Viper definition in the theorem provers against their actual behavior.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336547252/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/457307561",
    "html_url": "https://github.com/vyperlang/vyper/issues/397#issuecomment-457307561",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/397",
    "id": 457307561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzMwNzU2MQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T18:35:40Z",
    "updated_at": "2019-01-24T18:35:40Z",
    "author_association": "MEMBER",
    "body": "Deprecated in favor of #711 ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/457307561/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
