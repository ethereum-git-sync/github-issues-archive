{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/563/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/563/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/563/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/563",
  "id": 280566141,
  "node_id": "MDU6SXNzdWUyODA1NjYxNDE=",
  "number": 563,
  "title": "VIP: Custom Parser",
  "user": {
    "login": "fubuloubu",
    "id": 3859395,
    "node_id": "MDQ6VXNlcjM4NTkzOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fubuloubu",
    "html_url": "https://github.com/fubuloubu",
    "followers_url": "https://api.github.com/users/fubuloubu/followers",
    "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
    "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
    "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
    "repos_url": "https://api.github.com/users/fubuloubu/repos",
    "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 751622094,
      "node_id": "MDU6TGFiZWw3NTE2MjIwOTQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Discussion",
      "name": "VIP: Discussion",
      "color": "000000",
      "default": false,
      "description": "Used to denote VIPs and more complex issues that are waiting discussion in a meeting"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 27,
  "created_at": "2017-12-08T17:44:09Z",
  "updated_at": "2019-04-04T14:09:18Z",
  "closed_at": "2019-04-04T09:38:59Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Preamble\r\nVIP: 563\r\nTitle: Custom Parser\r\nAuthor: @fubuloubu @DavidKnott @jacqueswww \r\nType: Standard\r\nStatus: Draft\r\nCreated: 2017-12-08\r\n\r\n\r\n## Simple Summary\r\nImplement a custom parser for Viper that doesn't directly tie us to Python-only syntax, enabling a more focused grammer for our langauge\r\n\r\n## Abstract\r\nWe've been discussing this for a while. A custom parser would allow us to define our syntax more precisely rather than leveraging Python syntax and being tied to only what Python's syntax can provide. We will continue to use Python as a template due to it's clarity and ease of reading, but we need to make decisions that diverge from Python and a custom Parse will enable that.\r\n\r\n## Motivation\r\nThere are specific things that have been discussed where this is necessary:\r\n* Clarifying the external contract type\r\n* Changing the mapping type for greater clarity\r\n* Custom Types\r\n* etc...\r\n\r\n## Specification\r\nWe may be able to leverage a Python-compatible lex/yacc library like [ply](https://github.com/dabeaz/ply). We should also leverage some of the work the [k-framework](https://github.com/kframework/viper-semantics) guys are doing in order to infer a grammar that is consistent and free of formalized conflicts\r\n\r\n## Backwards Compatibility\r\nTry to maintain backwards compatibility initially, however some of the VIPs this one will enable will be breaking changes in the syntax.\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n",
  "closed_by": {
    "login": "jacqueswww",
    "id": 6917456,
    "node_id": "MDQ6VXNlcjY5MTc0NTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jacqueswww",
    "html_url": "https://github.com/jacqueswww",
    "followers_url": "https://api.github.com/users/jacqueswww/followers",
    "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
    "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
    "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
    "repos_url": "https://api.github.com/users/jacqueswww/repos",
    "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/563/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/563/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/351068180",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-351068180",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 351068180,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTA2ODE4MA==",
    "user": {
      "login": "dani-jozsef",
      "id": 6108136,
      "node_id": "MDQ6VXNlcjYxMDgxMzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6108136?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dani-jozsef",
      "html_url": "https://github.com/dani-jozsef",
      "followers_url": "https://api.github.com/users/dani-jozsef/followers",
      "following_url": "https://api.github.com/users/dani-jozsef/following{/other_user}",
      "gists_url": "https://api.github.com/users/dani-jozsef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dani-jozsef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dani-jozsef/subscriptions",
      "organizations_url": "https://api.github.com/users/dani-jozsef/orgs",
      "repos_url": "https://api.github.com/users/dani-jozsef/repos",
      "events_url": "https://api.github.com/users/dani-jozsef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dani-jozsef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-12T14:32:48Z",
    "updated_at": "2017-12-12T14:32:48Z",
    "author_association": "NONE",
    "body": "Please don't. Let's not turn this into another Solidity. :(",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/351068180/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/351245021",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-351245021",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 351245021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTI0NTAyMQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T00:51:33Z",
    "updated_at": "2017-12-13T00:51:33Z",
    "author_association": "MEMBER",
    "body": "We're already running into limitations of the underlying python syntax, and for future growth there will be a need to violate the syntax in subtle and not-so-subtle ways. Viper is definitely a different language from Python, we will try to stick to the syntax as closely as possible but there are different situations that we need a custom parser to handle.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/351245021/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/351305471",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-351305471",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 351305471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTMwNTQ3MQ==",
    "user": {
      "login": "DavidKnott",
      "id": 17552858,
      "node_id": "MDQ6VXNlcjE3NTUyODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17552858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DavidKnott",
      "html_url": "https://github.com/DavidKnott",
      "followers_url": "https://api.github.com/users/DavidKnott/followers",
      "following_url": "https://api.github.com/users/DavidKnott/following{/other_user}",
      "gists_url": "https://api.github.com/users/DavidKnott/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DavidKnott/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DavidKnott/subscriptions",
      "organizations_url": "https://api.github.com/users/DavidKnott/orgs",
      "repos_url": "https://api.github.com/users/DavidKnott/repos",
      "events_url": "https://api.github.com/users/DavidKnott/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DavidKnott/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T07:22:03Z",
    "updated_at": "2017-12-13T07:22:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think having a custom parser will negatively effect clarity, given how different writing smart contract code is to python code (particularly in terms of security) it would be helpful to customize certain parts of the parser.  Here are a couple examples where a customer parser could come in handy:\r\n1) Using a more descriptive keyword than `class` for defining external\r\n2) Changing the syntax of logging to make it clearer, as `MyLog: __log__({arg1: num})` is limited by python syntax",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/351305471/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/352027135",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-352027135",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 352027135,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjAyNzEzNQ==",
    "user": {
      "login": "tmke8",
      "id": 7741417,
      "node_id": "MDQ6VXNlcjc3NDE0MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7741417?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tmke8",
      "html_url": "https://github.com/tmke8",
      "followers_url": "https://api.github.com/users/tmke8/followers",
      "following_url": "https://api.github.com/users/tmke8/following{/other_user}",
      "gists_url": "https://api.github.com/users/tmke8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tmke8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tmke8/subscriptions",
      "organizations_url": "https://api.github.com/users/tmke8/orgs",
      "repos_url": "https://api.github.com/users/tmke8/repos",
      "events_url": "https://api.github.com/users/tmke8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tmke8/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-15T15:01:58Z",
    "updated_at": "2017-12-15T15:01:58Z",
    "author_association": "NONE",
    "body": "The danger of a custom parser is bugs. (There were 8 critical bugs in the Serpent compiler when Augur ordered an audit...)\r\n\r\nExternal contracts could be nicely specified if [this suggestion](https://github.com/ethereum/viper/issues/454#issuecomment-343431272) was implemented. You could say that you can only inherit from Contract and ExternalContract and there can only be one Contract per file. The inheritance would basically do nothing.\r\n\r\nMore descriptive keywords could be realized by the preprocessor that is mentioned in [this proposal](https://github.com/ethereum/viper/issues/472).\r\n\r\nFor the mapping syntax, something like this should be possible: `Mapping[KeyType, ValueType]`.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/352027135/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/352330275",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-352330275",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 352330275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjMzMDI3NQ==",
    "user": {
      "login": "mslipper",
      "id": 67953,
      "node_id": "MDQ6VXNlcjY3OTUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/67953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mslipper",
      "html_url": "https://github.com/mslipper",
      "followers_url": "https://api.github.com/users/mslipper/followers",
      "following_url": "https://api.github.com/users/mslipper/following{/other_user}",
      "gists_url": "https://api.github.com/users/mslipper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mslipper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mslipper/subscriptions",
      "organizations_url": "https://api.github.com/users/mslipper/orgs",
      "repos_url": "https://api.github.com/users/mslipper/repos",
      "events_url": "https://api.github.com/users/mslipper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mslipper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-18T05:33:16Z",
    "updated_at": "2017-12-18T05:33:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "One potential solution is to copy the existing Python grammar, modify it to match the Viper language, then generate a parser from that grammar using a tool like [ANTLR](http://www.antlr.org/). This confers a number of benefits:\r\n\r\n- Generated parsers have been around forever and are used regularly in security-critical applications.\r\n- Development is simplified considerably. The Viper team can focus on the language's syntax and features without spending time maintaining a bespoke parser.\r\n- Parser generators favor a grammar-first development workflow. The grammar won't be just another document to maintain - it'll be an integral part of the language. Having an up-to-date grammar simplifies third-party tool development (i.e., static analysis tools, syntax highlighters, etc.) considerably.\r\n\r\nIf there's interest, I'd be happy to build a small prototype.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/352330275/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/352442321",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-352442321",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 352442321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjQ0MjMyMQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-18T14:34:38Z",
    "updated_at": "2017-12-18T14:34:38Z",
    "author_association": "MEMBER",
    "body": "@mslipper :+1: I think this is the approach we were getting at. Thanks for suggesting a tool!\r\n\r\nIs there an easy way to integrate this with our Python flow (e.g. ANTLR wrapper module) so that the build process could be managed 100% in Python? ANTLR is a Java program, but I see some evidence that this is possible [here](https://github.com/antlr/antlr4/blob/master/doc/python-target.md)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/352442321/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/352462006",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-352462006",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 352462006,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjQ2MjAwNg==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-18T15:34:28Z",
    "updated_at": "2017-12-18T15:34:28Z",
    "author_association": "MEMBER",
    "body": "Meeting Minutes:\r\n\r\n1. Can we use custom keywords in the Python AST module?\r\n2. Is there a better way to segment/streamline work with an external Module to handle Lexing/Parsing",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/352462006/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/352548790",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-352548790",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 352548790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjU0ODc5MA==",
    "user": {
      "login": "mslipper",
      "id": 67953,
      "node_id": "MDQ6VXNlcjY3OTUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/67953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mslipper",
      "html_url": "https://github.com/mslipper",
      "followers_url": "https://api.github.com/users/mslipper/followers",
      "following_url": "https://api.github.com/users/mslipper/following{/other_user}",
      "gists_url": "https://api.github.com/users/mslipper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mslipper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mslipper/subscriptions",
      "organizations_url": "https://api.github.com/users/mslipper/orgs",
      "repos_url": "https://api.github.com/users/mslipper/repos",
      "events_url": "https://api.github.com/users/mslipper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mslipper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-18T20:30:28Z",
    "updated_at": "2017-12-18T20:30:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fubuloubu ANTLR is written in Java, but it'll generate a parser in any language it supports. The `python-target` you linked is the exact solution you're looking for 😄. For build flow, I'd suggest adding a target to your `Makefile` that runs ANTLR prior to making the egg and running tests. That way there is no Java dependency for Viper's users, only developers.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/352548790/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/352559011",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-352559011",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 352559011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjU1OTAxMQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-18T21:13:09Z",
    "updated_at": "2017-12-18T21:13:09Z",
    "author_association": "MEMBER",
    "body": "We were discussing this along with a few other things in the call we had today. I think we're still a little reluctant to move to a custom solution fully. We were trying to figure out if there was a way to modify or extend the AST module to get what we're looking for, I think to do that we need a summary of the changes we are looking to make.\r\n\r\nFrom the original post above, these are (with examples):\r\n1. Clarifying the external contract type #541\r\n```python\r\nmy_contract: contract(\r\n    foo(),\r\n    bar() -> num,\r\n)\r\n```\r\n2. Changing the mapping syntax #564\r\n```python\r\nmy_map: map(basetype1 -> basetype2)\r\n```\r\n3. Allowing custom types/type aliasing #300\r\n```python\r\nwei := num(\"wei\")\r\nfee: wei\r\n```\r\n\r\nWe also chatted a bit today about #584, and I believe my proposed solution may be able to sidestep all of this by changing how types are handled a bit. I think most of our reasons for wanting a custom parser have more to do with being able to specify and easily work with different kinds of globals. Check out the bottom of that issue and feel free to add to the discussion.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/352559011/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/407845974",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-407845974",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 407845974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzg0NTk3NA==",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-25T18:10:16Z",
    "updated_at": "2018-07-25T18:10:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've started working on [defining the grammar in ANTLR](https://github.com/maurelian/solidity-antlr4/blob/master/Vyper.g4). I'm following a similar approach used to create a [js-solidity parser](https://github.com/federicobond/solidity-parser-antlr).\r\n\r\nThis will enable us to generate a parser to use in our [Surya](https://github.com/ConsenSys/surya/issues/15) tool. \r\n\r\nSo far I've just been extracting the grammar from documentation and examples, but if the vyper project itself might make use of it in the future, it would be better to ensure the names and structure of nodes is similarly defined. Would someone from the core team be willing to spend 30 minutes walking me through the parser code, or even collaborate on defining the grammar?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/407845974/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/407855908",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-407855908",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 407855908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzg1NTkwOA==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-25T18:44:02Z",
    "updated_at": "2018-07-25T18:44:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@maurelian sure, glad to help - we can arrange a call time on gitter.\r\n\r\nThis will be a good start to define a grammer: https://github.com/python/cpython/blob/master/Parser/Python.asdl\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/407855908/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/407874561",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-407874561",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 407874561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzg3NDU2MQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-25T19:52:22Z",
    "updated_at": "2018-07-25T19:52:44Z",
    "author_association": "MEMBER",
    "body": "One approach I've been wanting to take is a conversion step from the Python AST to a Vyper-specific AST. This can be defined in a friendly way for ANTLR or the K framework.\r\n\r\n```python\r\nfrom vyper import ast\r\n# Parses with Python ast, then Vyper ast\r\nprint('Vyper AST:', ast.parse(code))\r\n# Prints out the grammer, perhaps in an ANTLR/K friendly format\r\nprint('Vyper AST Grammer rules:', ast._grammer)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/407874561/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/442276065",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-442276065",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 442276065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjI3NjA2NQ==",
    "user": {
      "login": "jakerockland",
      "id": 8602661,
      "node_id": "MDQ6VXNlcjg2MDI2NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8602661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakerockland",
      "html_url": "https://github.com/jakerockland",
      "followers_url": "https://api.github.com/users/jakerockland/followers",
      "following_url": "https://api.github.com/users/jakerockland/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakerockland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakerockland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakerockland/subscriptions",
      "organizations_url": "https://api.github.com/users/jakerockland/orgs",
      "repos_url": "https://api.github.com/users/jakerockland/repos",
      "events_url": "https://api.github.com/users/jakerockland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakerockland/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-28T00:50:30Z",
    "updated_at": "2018-11-28T00:53:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Arrived here from what I've been following in #300. Curious on what the status is for the pathway to implementing this. From previous calls/conversations was the consensus on moving forward with a solution built with [Sly](https://github.com/dabeaz/sly) @fubuloubu? That's what it seemed from the convo with @charles-cooper on #300, which makes sense to me but was also curious if/why the parser generator route had been ruled out.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/442276065/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/442315621",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-442315621",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 442315621,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjMxNTYyMQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-28T04:28:13Z",
    "updated_at": "2018-11-28T04:31:29Z",
    "author_association": "MEMBER",
    "body": "@jakerockland we can discuss it for sure at the next meeting. If people want to take on this challenge, it may be the time to do it.\r\n\r\nA few things to note:\r\n1. Writing a compiler front end is difficult. This will take at least 1 person-months to get right.\r\n2. Any good front end should be formally verified to avoid the risk of really insidious bugs. K framework can help.\r\n3. You will probably have to refactor a substantial portion of the compiler. That might not be the worst idea from a readability/maintainability perspective.\r\n\r\nIn regards to refactoring our current codebase, that is something @davesque was exploring. The current codebase mixes too many things from parsing into code generation. It would be nicer to see all compiler stages as separate modules with distinct interfaces between the stages, more akin to how you build compilers with functional languages like OCaml (which has an excellent set of libraries for that). I have a really, really, really old example of how that might be done here: https://github.com/fubuloubu/blocktract/blob/master/blocktract/ast.py\r\n\r\nThe idea is that each stage would be formalized in separate modules e.g. `tokens.py`, `grammar.py`, `ast.py`, a `types/` directory, `optimization/`, etc. When adding new features or types, it would be pretty obvious how to do that, and there could be an [auto-registration function](https://github.com/fubuloubu/blocktract/blob/master/blocktract/ast.py#L244) that makes it trivial to register these new features with the overall compiler pipeline. That makes it easy to traverse through the stages and see how the code forms and morphs between each stage, making it really easy to debug when things go wrong and also easy to work on each step in series as you progress. Finally, the compiler interface should make it easy to hook into each stage and configure how the stages work together, which is important for handling optimzation correctly. Example of that [here](https://github.com/fubuloubu/blocktract/blob/master/blocktract/compiler.py#L12)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/442315621/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/442366936",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-442366936",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 442366936,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjM2NjkzNg==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-28T08:48:32Z",
    "updated_at": "2018-11-28T09:05:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think a custom parser at this point is a good idea, we can plan this for the 0.2 release. But at this stage there is plenty of other \"not as flashy\" issues to work on. Using the tokeniser for class isn't the most elegant solution, but can be done without too much trouble. There is a reason we want to keep vyper parsable by the python ast, and that is that it will always stay firmly rooted in python.\r\n\r\nTo me the codebase isn't ready for a custom parser (yet), and needs refactoring, whereafter one probably does not need the custom parser :P\r\n\r\nHappy to discuss further on the next call.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/442366936/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/442483144",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-442483144",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 442483144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjQ4MzE0NA==",
    "user": {
      "login": "jakerockland",
      "id": 8602661,
      "node_id": "MDQ6VXNlcjg2MDI2NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8602661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakerockland",
      "html_url": "https://github.com/jakerockland",
      "followers_url": "https://api.github.com/users/jakerockland/followers",
      "following_url": "https://api.github.com/users/jakerockland/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakerockland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakerockland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakerockland/subscriptions",
      "organizations_url": "https://api.github.com/users/jakerockland/orgs",
      "repos_url": "https://api.github.com/users/jakerockland/repos",
      "events_url": "https://api.github.com/users/jakerockland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakerockland/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-28T15:16:54Z",
    "updated_at": "2018-11-28T15:16:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fubuloubu @jacqueswww Thank you both for all the input here! Would be great to loop back on this on the next call but definitely doesn't have to be a deep dive as there are a lot of hotter button issues that need to be resolved. Was mostly just curious what the state of this issue was 😄 👍 ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/442483144/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/442532767",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-442532767",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 442532767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjUzMjc2Nw==",
    "user": {
      "login": "davesque",
      "id": 791437,
      "node_id": "MDQ6VXNlcjc5MTQzNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/791437?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davesque",
      "html_url": "https://github.com/davesque",
      "followers_url": "https://api.github.com/users/davesque/followers",
      "following_url": "https://api.github.com/users/davesque/following{/other_user}",
      "gists_url": "https://api.github.com/users/davesque/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davesque/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davesque/subscriptions",
      "organizations_url": "https://api.github.com/users/davesque/orgs",
      "repos_url": "https://api.github.com/users/davesque/repos",
      "events_url": "https://api.github.com/users/davesque/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davesque/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-28T17:26:36Z",
    "updated_at": "2018-11-28T17:26:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jakerockland I also had some thoughts about using a custom parser when I originally started looking at Vyper.  However, I think I agree with @jacqueswww that there are higher priorities.  Of course, I'm still learning a lot about the entire codebase so my opinion is tastier with salt. 😄 ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/442532767/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/471587519",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-471587519",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 471587519,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTU4NzUxOQ==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-11T15:29:15Z",
    "updated_at": "2019-03-11T15:29:15Z",
    "author_association": "COLLABORATOR",
    "body": "A resource for researching different parser generators and tools https://wiki.python.org/moin/LanguageParsing",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/471587519/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/471668405",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-471668405",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 471668405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTY2ODQwNQ==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-11T18:39:28Z",
    "updated_at": "2019-03-11T18:39:28Z",
    "author_association": "COLLABORATOR",
    "body": "Of the options in the above link, the following seem reasonably modern/maintained, and also use grammars defined as some variant of EBNF (rather than python code):\r\nhttps://github.com/erikrose/parsimonious\r\nhttps://github.com/lark-parser/lark/\r\nhttps://github.com/neogeny/TatSu/\r\nhttps://github.com/pyparsing/pyparsing/\r\n\r\nlark, pyparsing and tatsu have pre-written python grammar examples:\r\n[lark example](https://github.com/lark-parser/lark/blob/4e6f92b03bfef56fc83260f539d763f1dea3496e/examples/python3.lark)\r\n[tatsu example](https://github.com/neogeny/TatSu/blob/0e8d806f51eb01ad9d78ebdde346df594238f246/examples/g2e/python.ebnf)\r\n[pyparsing example](https://github.com/pyparsing/pyparsing/blob/ed2f5ec744ddc25242f947be8ba798d9fca6a674/examples/pythonGrammarParser.py)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/471668405/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/471691154",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-471691154",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 471691154,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTY5MTE1NA==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-11T19:37:26Z",
    "updated_at": "2019-03-11T19:37:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "We have been using https://github.com/erikrose/parsimonious for `eth-abi` for a bit and I'm in the process of using it to define the grammar for the s-expression format of webassembly.  My experience thus far is quite positive, though I have little to compare it to. The library is quite small and simple and the manner in which the parsing happens has been easy to reason about.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/471691154/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/474485478",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-474485478",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 474485478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDQ4NTQ3OA==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T17:35:22Z",
    "updated_at": "2019-03-19T17:35:22Z",
    "author_association": "COLLABORATOR",
    "body": "I'm kind of liking tatsu, it lets us create our VyperAST module by just annotating the grammar (https://tatsu.readthedocs.io/en/stable/mini-tutorial.html#object-models) and it has abstractions for ast traversal (https://tatsu.readthedocs.io/en/stable/mini-tutorial.html#one-rule-per-expression-type) and code generation (https://tatsu.readthedocs.io/en/stable/mini-tutorial.html#code-generation). Not sure how powerful the latter is but I can see its potential.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/474485478/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/474491005",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-474491005",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 474491005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDQ5MTAwNQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T17:45:00Z",
    "updated_at": "2019-03-19T17:45:00Z",
    "author_association": "MEMBER",
    "body": "Just noticed TatSu is a refactor of [Grako](https://pypi.org/project/grako/3.99.9/), so it has a LOT more pedigree than the GitHub would lead you to believe!",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/474491005/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/474584445",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-474584445",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 474584445,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDU4NDQ0NQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T21:06:11Z",
    "updated_at": "2019-03-19T21:06:11Z",
    "author_association": "MEMBER",
    "body": "Also, to summarize a discussion we had, this PR will be split into a few \"stages\". The stages of this VIP concerning actually replacing the use of the AST module is beyond the scope of the v0.1 release, but the early stages will prepare for this to make it as seamless as possible.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/474584445/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/479826272",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-479826272",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 479826272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTgyNjI3Mg==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-04T09:38:56Z",
    "updated_at": "2019-04-04T09:38:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing in favour of #1363. ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/479826272/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/479910155",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-479910155",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 479910155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTkxMDE1NQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-04T14:02:56Z",
    "updated_at": "2019-04-04T14:09:13Z",
    "author_association": "MEMBER",
    "body": "Can we make #1363 a VIP then? Capture the important bits of this one? ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/479910155/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/479911110",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-479911110",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 479911110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTkxMTExMA==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-04T14:05:15Z",
    "updated_at": "2019-04-04T14:09:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fubuloubu We can, but we haven't really ever had to do a VIP for internal before? (or have we?)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/479911110/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/479912603",
    "html_url": "https://github.com/vyperlang/vyper/issues/563#issuecomment-479912603",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/563",
    "id": 479912603,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTkxMjYwMw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-04T14:08:50Z",
    "updated_at": "2019-04-04T14:08:50Z",
    "author_association": "MEMBER",
    "body": "That's true! If it doesn't change syntax, than it's just a refactor. If there are any syntax changes, we should make sure to capture those separately as VIPs so people can stay informed.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/479912603/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
