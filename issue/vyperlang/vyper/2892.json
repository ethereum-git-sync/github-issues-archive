{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/2892",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/2892/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/2892/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/2892/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/2892",
  "id": 1260947256,
  "node_id": "I_kwDOBGDvrM5LKIc4",
  "number": 2892,
  "title": "VIP: witness storage",
  "user": {
    "login": "charles-cooper",
    "id": 3867501,
    "node_id": "MDQ6VXNlcjM4Njc1MDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/charles-cooper",
    "html_url": "https://github.com/charles-cooper",
    "followers_url": "https://api.github.com/users/charles-cooper/followers",
    "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
    "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
    "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
    "repos_url": "https://api.github.com/users/charles-cooper/repos",
    "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
    "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 751622094,
      "node_id": "MDU6TGFiZWw3NTE2MjIwOTQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Discussion",
      "name": "VIP: Discussion",
      "color": "000000",
      "default": false,
      "description": "Used to denote VIPs and more complex issues that are waiting discussion in a meeting"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2022-06-05T03:10:16Z",
  "updated_at": "2022-06-06T16:41:16Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "## Simple Summary\r\nProvide a `witness()` keyword which only stores the hash of a complex type. To \"read\" the struct from storage, it must be provided as a calldata \"proof\" and the hash of the proof must match the stored value.\r\n\r\n## Motivation\r\nA common pattern is to hash a struct the first time it's seen, then after that, require it to be provided in calldata, and check that its hash matches the stored value. This keyword would abstract the pattern. This is an alternative optimization to struct packing and would generally perform better when \"most\" of the struct is accessed, but may perform less well when no-more-than-one-word of the packed struct is accessed.\r\n\r\n## Specification\r\nspecification by example:\r\n```vyper\r\nmy_struct: witness(MyStruct)  # stored as bytes32 value\r\nsome_other_struct: witness(MyStruct)\r\n\r\ndef foo(proof: self.my_struct.Proof):\r\n    # compiler inserts test that keccak256(proof) == self.my_struct\r\n    foo: MyStruct = proof  # proof has type MyStruct\r\n\r\n    baz: MyStruct = self.some_other_struct  # banned - the proof is not in the calldata\r\n\r\n    foo.bar = ...  # modify foo\r\n    self.my_struct = foo  # generated code: self.my_struct = keccak256(foo)\r\n```\r\n\r\n## Backwards Compatibility\r\nNew feature, backwards compatible\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/2892/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/2892/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1146732553",
    "html_url": "https://github.com/vyperlang/vyper/issues/2892#issuecomment-1146732553",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2892",
    "id": 1146732553,
    "node_id": "IC_kwDOBGDvrM5EWcAJ",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-05T03:17:34Z",
    "updated_at": "2022-06-05T03:17:34Z",
    "author_association": "MEMBER",
    "body": "This proposal is pretty unclear in it's current format. Is it a set of `MyStruct` objects stored? Just one? What is the size of the type stored in storage? how does `foo: MyStruct = proof: witness[MyStruct]` work? Can I configure the hash function used? Can I read values from `self.my_struct` without a proof?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1146732553/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1146736872",
    "html_url": "https://github.com/vyperlang/vyper/issues/2892#issuecomment-1146736872",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2892",
    "id": 1146736872,
    "node_id": "IC_kwDOBGDvrM5EWdDo",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-05T03:59:46Z",
    "updated_at": "2022-06-05T04:00:07Z",
    "author_association": "COLLABORATOR",
    "body": "> Is it a set of `MyStruct` objects stored? Just one?\r\n\r\nin this example - just one. `witness()` is a keyword used like `immutable()` or `public()` - so, ex. an array of `MyStruct` would be `witness(MyStruct[10])`\r\n\r\n> What is the size of the type stored in storage?\r\n\r\n32 bytes - the output of the keccak256 hash function\r\n\r\n> how does `foo: MyStruct = proof: witness[MyStruct]` work?\r\n\r\n`proof` has physical data in it. so `foo: MyStruct = proof` would just be a bytes copy.\r\n\r\n> Can I configure the hash function used?\r\n\r\nno\r\n\r\n> Can I read values from `self.my_struct` without a proof?\r\n\r\nno, will clarify",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1146736872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1146737368",
    "html_url": "https://github.com/vyperlang/vyper/issues/2892#issuecomment-1146737368",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2892",
    "id": 1146737368,
    "node_id": "IC_kwDOBGDvrM5EWdLY",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-05T04:05:25Z",
    "updated_at": "2022-06-05T04:05:25Z",
    "author_association": "COLLABORATOR",
    "body": "i guess one open question is, do we assign from the proof or the witness?\r\n```vyper\r\n# only allowed if a proof is allowed in calldata; bytes are copied from calldata\r\nfoo: MyStruct = self.my_struct\r\n```\r\nvs\r\n```vyper\r\nfoo: MyStruct = proof\r\n```\r\nonly one should be allowed.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1146737368/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1146740703",
    "html_url": "https://github.com/vyperlang/vyper/issues/2892#issuecomment-1146740703",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2892",
    "id": 1146740703,
    "node_id": "IC_kwDOBGDvrM5EWd_f",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-05T04:43:48Z",
    "updated_at": "2022-06-05T04:43:48Z",
    "author_association": "MEMBER",
    "body": "> i guess one open question is, do we assign from the proof or the witness?\n> ```vyper\n> # only allowed if a proof is allowed in calldata; bytes are copied from calldata\n> foo: MyStruct = self.my_struct\n> ```\n> vs\n> ```vyper\n> foo: MyStruct = proof\n> ```\n> only one should be allowed.\n\nTbh, both of these are pretty confusing. Should probably be something more like:\n\n```vyper\nfoo: MyStruct = self.my_struct.validate(proof)\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1146740703/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1146741680",
    "html_url": "https://github.com/vyperlang/vyper/issues/2892#issuecomment-1146741680",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2892",
    "id": 1146741680,
    "node_id": "IC_kwDOBGDvrM5EWeOw",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-05T04:54:58Z",
    "updated_at": "2022-06-05T04:54:58Z",
    "author_association": "COLLABORATOR",
    "body": "\n> Tbh, both of these are pretty confusing. Should probably be something more like:\n> \n> ```vyper\n> foo: MyStruct = self.my_struct.validate(proof)\n> ```\n\nWhoa, that's pretty slick\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1146741680/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1147651816",
    "html_url": "https://github.com/vyperlang/vyper/issues/2892#issuecomment-1147651816",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2892",
    "id": 1147651816,
    "node_id": "IC_kwDOBGDvrM5EZ8bo",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-06T16:39:02Z",
    "updated_at": "2022-06-06T16:41:16Z",
    "author_association": "COLLABORATOR",
    "body": "meeting notes: should be generic type, punt until module system is more fleshed out",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1147651816/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
