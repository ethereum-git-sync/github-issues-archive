{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/3556",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/3556/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/3556/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/3556/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/3556",
  "id": 1839688031,
  "node_id": "I_kwDOBGDvrM5tp2lf",
  "number": 3556,
  "title": "VIP: override storage slots using @ slot annotations",
  "user": {
    "login": "banteg",
    "id": 4562643,
    "node_id": "MDQ6VXNlcjQ1NjI2NDM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4562643?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/banteg",
    "html_url": "https://github.com/banteg",
    "followers_url": "https://api.github.com/users/banteg/followers",
    "following_url": "https://api.github.com/users/banteg/following{/other_user}",
    "gists_url": "https://api.github.com/users/banteg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/banteg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/banteg/subscriptions",
    "organizations_url": "https://api.github.com/users/banteg/orgs",
    "repos_url": "https://api.github.com/users/banteg/repos",
    "events_url": "https://api.github.com/users/banteg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/banteg/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-08-07T15:14:08Z",
  "updated_at": "2023-08-16T10:37:09Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Simple Summary\r\n- deprecate `--storage-layout-file` option in favor of storage slot override syntax\r\n- introduce `name: type @ slot` syntax for storage slot override\r\n\r\n## Motivation\r\n- overriding all storage slots is cumbersome and rarely needed. partially overriding storage slots can make it possible to support certain eips like [eip-1967](https://eips.ethereum.org/EIPS/eip-1967) that require certain positions in a very clear manner.\r\n- `--storage-layout-file` is little known and has poor tool support. neither of vyper's own standard json input (until recently), etherscan verification, ape-vyper or vvm have support for it. having it in the contract itself makes the support from upstream tools follow naturally.\r\n\r\n## Specification\r\n- deprecate `--storage-layout-file` option of the compiler\r\n- introduce new syntax to partially override storage layout using the `@` aka `matmul` operator, which doesn't require any special parsing since it's a native python operator. the slot value must be a `uint256` literal value.\r\n\r\n## Example usage\r\n```python\r\nimplementation: public(address) @ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\r\nadmin: public(address) @ 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\r\n```\r\n\r\n## Alternatives considered\r\none of the rejected alternatives was supporting a common convention of `uint256(keccak256(\"text\")) - 1` natively.\r\nnote that this example needs either parenthesis or special handling from the compiler because `@` has higher precedence than `-`.\r\n```python\r\nimplementation: public(address) @ (keccak256(\"eip1967.proxy.implementation\") - 1) \r\nadmin: public(address) @ (keccak256(\"eip1967.proxy.admin\") - 1) \r\n```\r\n\r\n## Backwards Compatibility\r\nthis vip deprecates functionality in favor of new design. it doesn't introduce backwards incompatibility for contracts that don't use storage slot overrides.\r\n\r\n## Dependencies\r\nthis vip doesn't have any dependencies blocking it.\r\n\r\n## References\r\nthis vip supersedes https://github.com/vyperlang/vyper/issues/2572\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/3556/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/3556/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1680365332",
    "html_url": "https://github.com/vyperlang/vyper/issues/3556#issuecomment-1680365332",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3556",
    "id": 1680365332,
    "node_id": "IC_kwDOBGDvrM5kKFcU",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-16T10:37:09Z",
    "updated_at": "2023-08-16T10:37:09Z",
    "author_association": "COLLABORATOR",
    "body": "my biggest concern here is \"partially overriding storage slots\". it seems like a footgun, where some slots are overridden (ostensibly for the purpose of making a contract upgradeable) and some other slots are not, and then they get trampled during a contract upgrade.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1680365332/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
