{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/347",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/347/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/347/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/347/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/347",
  "id": 256704818,
  "node_id": "MDU6SXNzdWUyNTY3MDQ4MTg=",
  "number": 347,
  "title": "External Contract Calls / References",
  "user": {
    "login": "DavidKnott",
    "id": 17552858,
    "node_id": "MDQ6VXNlcjE3NTUyODU4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17552858?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/DavidKnott",
    "html_url": "https://github.com/DavidKnott",
    "followers_url": "https://api.github.com/users/DavidKnott/followers",
    "following_url": "https://api.github.com/users/DavidKnott/following{/other_user}",
    "gists_url": "https://api.github.com/users/DavidKnott/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/DavidKnott/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/DavidKnott/subscriptions",
    "organizations_url": "https://api.github.com/users/DavidKnott/orgs",
    "repos_url": "https://api.github.com/users/DavidKnott/repos",
    "events_url": "https://api.github.com/users/DavidKnott/events{/privacy}",
    "received_events_url": "https://api.github.com/users/DavidKnott/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2017-09-11T13:35:56Z",
  "updated_at": "2018-01-18T18:56:45Z",
  "closed_at": "2018-01-18T18:56:45Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### What's your issue about?\r\nThis issue is a continuation of #297 (Please see it for context) and #335 for the current implementation.\r\n\r\n#### Cute Animal Picture\r\n![image](https://user-images.githubusercontent.com/17552858/30277016-d0c9fafe-96c3-11e7-89e3-44cff6646316.png)\r\n\r\n",
  "closed_by": {
    "login": "DavidKnott",
    "id": 17552858,
    "node_id": "MDQ6VXNlcjE3NTUyODU4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17552858?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/DavidKnott",
    "html_url": "https://github.com/DavidKnott",
    "followers_url": "https://api.github.com/users/DavidKnott/followers",
    "following_url": "https://api.github.com/users/DavidKnott/following{/other_user}",
    "gists_url": "https://api.github.com/users/DavidKnott/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/DavidKnott/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/DavidKnott/subscriptions",
    "organizations_url": "https://api.github.com/users/DavidKnott/orgs",
    "repos_url": "https://api.github.com/users/DavidKnott/repos",
    "events_url": "https://api.github.com/users/DavidKnott/events{/privacy}",
    "received_events_url": "https://api.github.com/users/DavidKnott/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/347/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/347/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/328632053",
    "html_url": "https://github.com/vyperlang/vyper/issues/347#issuecomment-328632053",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/347",
    "id": 328632053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODYzMjA1Mw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-11T19:22:00Z",
    "updated_at": "2017-09-11T20:38:27Z",
    "author_association": "MEMBER",
    "body": "To summarize, our current suggestion is to implement contract references as a new type `contract` (extended from `address`, e.g. address of a contract) where the required methods are supplied for the type.\r\n\r\nSome examples:\r\nbasic usage\r\n```python\r\nitem: contract {\r\n    foo(bool) -> bool\r\n}\r\ndef __init__(_item: contract):\r\n    self.item = _item\r\n\r\ndef change_item(_item: contract):\r\n    self.item = _item\r\n```\r\n\r\nlists/maps (this contract is deployed 1 per account and inter-contract communication happens)\r\n```python\r\nfriends: contract {\r\n    receive_message(bytes <= 192)\r\n}[num]\r\nnum_friends: num\r\nmessages: (bytes <= 192)[num]\r\nnum_messages: num\r\n\r\ndef add_friend(_friend: contract):\r\n    self.friends[self.num_friends] = _friend\r\n    self.num_friends += 1\r\n\r\ndef send_message(friend_num: num, message: bytes <= 192):\r\n    self.friends[friend_num].receive_message(message)\r\n\r\ndef receive_message(_message: bytes <= 192):\r\n    self.messages[self.num_messages] = _message\r\n    self.num_messages += 1\r\n```\r\n\r\nFurther suggestions are:\r\n1. Type checking a contract's required methods when assigned/re-assigned to avoid lock-outs of methods in contract calls due to purposely improper assignments.\r\n2. Ensuring a contract type is assigned on `init` to ensure all methods are available (similar to 1)\r\n3. Moving explicit contract type checking (writing at the top of a contract) to implicit, compiler-based scanning to reduce potential errors",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/328632053/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/328648024",
    "html_url": "https://github.com/vyperlang/vyper/issues/347#issuecomment-328648024",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/347",
    "id": 328648024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODY0ODAyNA==",
    "user": {
      "login": "JackieXu",
      "id": 571054,
      "node_id": "MDQ6VXNlcjU3MTA1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/571054?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JackieXu",
      "html_url": "https://github.com/JackieXu",
      "followers_url": "https://api.github.com/users/JackieXu/followers",
      "following_url": "https://api.github.com/users/JackieXu/following{/other_user}",
      "gists_url": "https://api.github.com/users/JackieXu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JackieXu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JackieXu/subscriptions",
      "organizations_url": "https://api.github.com/users/JackieXu/orgs",
      "repos_url": "https://api.github.com/users/JackieXu/repos",
      "events_url": "https://api.github.com/users/JackieXu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JackieXu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-11T20:24:41Z",
    "updated_at": "2017-09-11T20:24:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "The explicit type checking at the top stays very much in line with Viper's design philosophy of being easy on the reader, I like that.\r\n\r\nI wouldn't move that explicitness away into a scan later, as per suggestion 3. But, I do like suggestion 1 very much as a type of safety net and I feel this is actually a must, as else it would leave the reader open to be fooled, would it not?\r\n\r\nAlso, could we add the small bit of context here that  `contract` means the `address` of a contract? ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/328648024/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/328662925",
    "html_url": "https://github.com/vyperlang/vyper/issues/347#issuecomment-328662925",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/347",
    "id": 328662925,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODY2MjkyNQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-11T21:24:19Z",
    "updated_at": "2017-09-11T21:24:19Z",
    "author_association": "MEMBER",
    "body": "Well, I both agree and disagree with you that point. I think it is clearer now to see what the explicit types are you are checking for, plus it makes the compiler's job easier. But in the end, I believe the reader is more interested in the method name and where it is used, and the ancillary work of figuring out if the external contract method's types work with the one in the contract they might be less interested in, thereby willing to offload that work to the compiler/runtime environment. For now, as most of the functionality is unimplemented, I believe explicit is better.\r\n\r\nYes, I think there is a potentially insidious attack that can be performed here if you create a reference to a contract that does not implement part of the methods specified, thereby \"shutting down\" access to methods other users might require (e.g. imagine a `withdraw` method that breaks because the contract owner updated some reference contract maliciously, now they can keep all your money.\r\n\r\nP.S. I updated to top comment to state that. Basically, `contract` is of type `address` (or at least how I see it) so you could \"typecast\" an address to a contract in some way, if that's not too opaque.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/328662925/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/328663613",
    "html_url": "https://github.com/vyperlang/vyper/issues/347#issuecomment-328663613",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/347",
    "id": 328663613,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODY2MzYxMw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-11T21:27:14Z",
    "updated_at": "2017-09-11T21:31:53Z",
    "author_association": "MEMBER",
    "body": "Also, another thing that is enabled by implicit type checking via `assert`s is that if you wanted to use a method from a contract without saving the reference, you could do that as long as the types check out e.g.\r\n```python\r\ndef get_currency_of(item: contract) -> currency_value:\r\n    return item.get_currency() # Type check occurs to ensure this meshes with return type\r\n```\r\n\r\nSince `item` is not a global, I wouldn't be able to do this with explicit typing\r\n\r\nI don't believe this adds any additional vectors of attack beyond whats already possible.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/328663613/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/358746308",
    "html_url": "https://github.com/vyperlang/vyper/issues/347#issuecomment-358746308",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/347",
    "id": 358746308,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODc0NjMwOA==",
    "user": {
      "login": "DavidKnott",
      "id": 17552858,
      "node_id": "MDQ6VXNlcjE3NTUyODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17552858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DavidKnott",
      "html_url": "https://github.com/DavidKnott",
      "followers_url": "https://api.github.com/users/DavidKnott/followers",
      "following_url": "https://api.github.com/users/DavidKnott/following{/other_user}",
      "gists_url": "https://api.github.com/users/DavidKnott/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DavidKnott/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DavidKnott/subscriptions",
      "organizations_url": "https://api.github.com/users/DavidKnott/orgs",
      "repos_url": "https://api.github.com/users/DavidKnott/repos",
      "events_url": "https://api.github.com/users/DavidKnott/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DavidKnott/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-18T18:56:45Z",
    "updated_at": "2018-01-18T18:56:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing as this has extern contract calling has been implemented.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/358746308/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
