{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/711/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/711/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/711/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/711",
  "id": 307328933,
  "node_id": "MDU6SXNzdWUzMDczMjg5MzM=",
  "number": 711,
  "title": "VIP: Enable Dynamic Analysis/Symbolic Execution Checks",
  "user": {
    "login": "pirapira",
    "id": 44281,
    "node_id": "MDQ6VXNlcjQ0Mjgx",
    "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pirapira",
    "html_url": "https://github.com/pirapira",
    "followers_url": "https://api.github.com/users/pirapira/followers",
    "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
    "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
    "organizations_url": "https://api.github.com/users/pirapira/orgs",
    "repos_url": "https://api.github.com/users/pirapira/repos",
    "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pirapira/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 751622094,
      "node_id": "MDU6TGFiZWw3NTE2MjIwOTQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Discussion",
      "name": "VIP: Discussion",
      "color": "000000",
      "default": false,
      "description": "Used to denote VIPs and more complex issues that are waiting discussion in a meeting"
    },
    {
      "id": 757250644,
      "node_id": "MDU6TGFiZWw3NTcyNTA2NDQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Approved",
      "name": "VIP: Approved",
      "color": "98f765",
      "default": false,
      "description": "VIP Approved"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "fubuloubu",
    "id": 3859395,
    "node_id": "MDQ6VXNlcjM4NTkzOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fubuloubu",
    "html_url": "https://github.com/fubuloubu",
    "followers_url": "https://api.github.com/users/fubuloubu/followers",
    "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
    "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
    "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
    "repos_url": "https://api.github.com/users/fubuloubu/repos",
    "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 42,
  "created_at": "2018-03-21T16:47:20Z",
  "updated_at": "2019-05-24T10:56:23Z",
  "closed_at": "2019-05-24T10:56:23Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Preamble\r\n\r\n    VIP: <to be assigned>\r\n    Title: assertions that should never-ever fail\r\n    Author: Yoichi Hirai <yoichi@ethereum.org>\r\n    Type: Standard Track\r\n    Status: Draft\r\n    Created: 2018-03-21\r\n\r\n## Simple Summary\r\n\r\nAdd a special type of assertion that should never ever fail.  When a static analyzer can fire it, the program surely has a bug.\r\n\r\n## Abstract\r\n\r\nStatic analyzers can detect bugs, but only when the desired properties are specified.  The easiest way is to insert a \"never-to-fail\" assertions in the program.\r\n\r\n## Motivation\r\n\r\nMythril has [a feature to detect when 0xfe is somehow reachable](https://github.com/b-mueller/mythril/blob/master/security_checks.md).  KEVM can soon do that.\r\n\r\n`assert` in vyper is expected to fail sometimes, and it is compiled to `REVERT`.  `REVERT` might indicate a mistake of the caller, a mistake of the programmer, or a mistake of the compiler.  So, static analyzers cannot shout \"this is a bug\".\r\n\r\nInstead, if Vyper has a never-to-fail assertion that translates to `INVALID (0xfe)`, static analyzers can confidently shout \"this is a bug. See, this execution reaches `INVALID`\".\r\n\r\nAlternatives are specially formatted comments like [ACSL](https://frama-c.com/acsl.html) or [JML](https://en.wikipedia.org/wiki/Java_Modeling_Language), but they are hard to learn.\r\n\r\n## Specification\r\n\r\nAdd a additional custom constant to the `assert` statement:\r\n\r\n```python\r\n    assert amount != 0, UNREACHABLE\r\n```\r\nas well as\r\n```python\r\n    raise UNREACHABLE\r\n```\r\n## Backwards Compatibility\r\n\r\nA program containing a name `assure` will cause compillation errors.\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n",
  "closed_by": {
    "login": "jacqueswww",
    "id": 6917456,
    "node_id": "MDQ6VXNlcjY5MTc0NTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jacqueswww",
    "html_url": "https://github.com/jacqueswww",
    "followers_url": "https://api.github.com/users/jacqueswww/followers",
    "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
    "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
    "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
    "repos_url": "https://api.github.com/users/jacqueswww/repos",
    "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/711/reactions",
    "total_count": 3,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 3,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/711/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375013428",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375013428",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375013428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTAxMzQyOA==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-21T16:48:23Z",
    "updated_at": "2018-03-21T16:48:23Z",
    "author_association": "NONE",
    "body": "Pinging @daejunpark and @ehildenb.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375013428/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375056260",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375056260",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375056260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTA1NjI2MA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-21T18:50:34Z",
    "updated_at": "2018-12-22T23:09:30Z",
    "author_association": "MEMBER",
    "body": "We were talking about this a few months back. The only difference is we were talking about a special comment type for analysis. I think everyone was on board with the concept, but this particular implementation is interesting.\r\n\r\nI think a more succinct way to do it is to include valid Python syntax that basically won't compile to anything in \"normal\" mode, and in static analysis mode would add extra asserts to the bytecode used for analysis, throwing the special opcode as you pointed out.\r\n\r\nWe would love to leverage this kind of analysis as a tool for our compiler. Perhaps this specification can be leveraged as a standard for any EVM language, and we can build toolsets that make this kind of analysis easier within a language-agnostic framework?\r\n\r\nI think with all of our langauges targeting the EVM, we should be thinking much more about toolsets that leverage that layer so we're not duplicating work in every compiler.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375056260/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375227717",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375227717",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375227717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTIyNzcxNw==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-22T09:13:08Z",
    "updated_at": "2018-03-22T09:13:08Z",
    "author_association": "NONE",
    "body": "Yes, a common convention would save work.  Solidity took the approach \"`INVALID` means never-to-be-executed-if-program-is-sane\".\r\n\r\nhttp://solidity.readthedocs.io/en/v0.4.21/control-structures.html#error-handling-assert-require-revert-and-exceptions\r\n\r\n> Properly functioning code should never reach a failing assert statement; if this happens there is a bug in your contract which you should fix.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375227717/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375351737",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375351737",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375351737,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTM1MTczNw==",
    "user": {
      "login": "ehildenb",
      "id": 12721972,
      "node_id": "MDQ6VXNlcjEyNzIxOTcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/12721972?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ehildenb",
      "html_url": "https://github.com/ehildenb",
      "followers_url": "https://api.github.com/users/ehildenb/followers",
      "following_url": "https://api.github.com/users/ehildenb/following{/other_user}",
      "gists_url": "https://api.github.com/users/ehildenb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ehildenb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ehildenb/subscriptions",
      "organizations_url": "https://api.github.com/users/ehildenb/orgs",
      "repos_url": "https://api.github.com/users/ehildenb/repos",
      "events_url": "https://api.github.com/users/ehildenb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ehildenb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-22T15:38:27Z",
    "updated_at": "2018-03-22T15:38:27Z",
    "author_association": "NONE",
    "body": "I'm in favor of the `INVALID` opcode means \"never to be executed, if so then program has bug\". It might not be so with legacy contracts, but I think it makes sense moving forward.\r\n\r\nAlternative is making some explicit `ASSERTION_FAILURE` opcode, but if it would have same runtime behaviour as `INVALID` I don't see the benefit. If we can think of a different runtime behaviour for it, then it should be considered.\r\n\r\nAnother alternative is using some unused opcode as the de-facto `ASSERTION_FAILURE` opcode. This will have the same runtime behaviour as `INVALID` though, and may not be future-proof.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375351737/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375534533",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375534533",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375534533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTUzNDUzMw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T03:36:01Z",
    "updated_at": "2018-03-23T03:36:01Z",
    "author_association": "MEMBER",
    "body": "Yeah, that's a toughy.\r\n\r\nPerhaps the code gets added when compiled for FV mode (in either language) and the json assests file contains a listing of those bytecode locations that should trigger analysis failures if reached.\r\n\r\nThat would start to get into the need to formalize the assets file spec to leverage in different tools (e.g. `solc --standard-json`/`vyper -f json`) so that bytecode and metadata could get imported into tools in a standard way.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375534533/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375537605",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375537605",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375537605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTUzNzYwNQ==",
    "user": {
      "login": "ehildenb",
      "id": 12721972,
      "node_id": "MDQ6VXNlcjEyNzIxOTcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/12721972?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ehildenb",
      "html_url": "https://github.com/ehildenb",
      "followers_url": "https://api.github.com/users/ehildenb/followers",
      "following_url": "https://api.github.com/users/ehildenb/following{/other_user}",
      "gists_url": "https://api.github.com/users/ehildenb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ehildenb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ehildenb/subscriptions",
      "organizations_url": "https://api.github.com/users/ehildenb/orgs",
      "repos_url": "https://api.github.com/users/ehildenb/repos",
      "events_url": "https://api.github.com/users/ehildenb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ehildenb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T03:59:04Z",
    "updated_at": "2018-03-23T03:59:04Z",
    "author_association": "NONE",
    "body": "What's wrong with just generating `INVALID` when the code has an `assert ...` (or `sure ...` as @pirapira has above)? I suppose you could only insert it when in FV mode, but I think you would actually want to *always* insert it, even in production mode. If an `assert ...` failure is triggered at runtime, you want the contract to throw because people may take advantage of the bug the `assert ...` is guarding from.\r\n\r\nI don't see the need for reading extra metadata, the tools can just analyze \"is `INVALID` ever reachable?\", which is a fairly simple query to make for a symbolic execution engine, and I think most static analysis tools should also be able to do something for that style of query.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375537605/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375625856",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375625856",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375625856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTYyNTg1Ng==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T11:10:16Z",
    "updated_at": "2018-03-23T11:10:16Z",
    "author_association": "NONE",
    "body": "(I saw `assert` was already taken, so I sidestepped.)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375625856/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375672462",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375672462",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375672462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTY3MjQ2Mg==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T13:55:40Z",
    "updated_at": "2018-03-23T13:55:40Z",
    "author_association": "MEMBER",
    "body": "@ehildenb It's a suggestion. Some peoople don't want extra code to pollute their contracts, hence having a separate FV-only statement that would get dropped in normal compilation because you've \"proved\" it's not possible. We could definitely argue whether to give the person the option to include them in their final bytecode.\r\n\r\n As far as metadata, it's more a UI thing. Yes the execution engine can tell when it hits a certain statement, but \"there's a problem\" is more opaque than \"there's a problem L17, C40\" or \"your FVassert statement on line 17 failed\"",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375672462/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375675605",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375675605",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375675605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTY3NTYwNQ==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T14:05:19Z",
    "updated_at": "2018-03-23T14:05:19Z",
    "author_association": "NONE",
    "body": "@fubuloubu well, programmers have the choice whether or not to use the new `sure` statements.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375675605/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375676175",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375676175",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375676175,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTY3NjE3NQ==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T14:07:15Z",
    "updated_at": "2018-03-23T14:07:15Z",
    "author_association": "NONE",
    "body": "If some programmers go for\r\n```\r\n    # @static-assert balance > 0\r\n```\r\nthat's their choice.\r\n\r\n`sure x` --> `INVALID` is just one way, very easy for static analyzers to understand.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375676175/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375680486",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375680486",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375680486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTY4MDQ4Ng==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T14:21:02Z",
    "updated_at": "2018-03-23T14:21:02Z",
    "author_association": "MEMBER",
    "body": "Well, in that case, wouldn't it make sense to have `assure` use the `ASSERT` under the hood and additionally generate the `@static-assert` for FV. That way we have three options:\r\n1. `assert` -> always check\r\n2. `assure` -> always in bytecode, **should** never happen, FV mode switches this to `INVALID` for analysis\r\n3. `#@static-assert` -> never check, FV only, FV mode adds `INVALID` for analysis",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375680486/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375682166",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375682166",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375682166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTY4MjE2Ng==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T14:26:31Z",
    "updated_at": "2018-03-23T14:27:23Z",
    "author_association": "NONE",
    "body": "@fubuloubu well, `#@static-assert` is a comment, so it should never translate to any instruction.  However, `#@static-assert x` can be translated into some sort of metadata, which is out of scope of my proposal.  My point is that designing a common format of such metadata is hard, while it's easy to set up tools to detect `INVALID`.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375682166/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375682738",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375682738",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375682738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTY4MjczOA==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T14:28:17Z",
    "updated_at": "2018-03-23T14:28:17Z",
    "author_association": "NONE",
    "body": "@fubuloubu I won't believe that the FV mode and non-FV mode behave the same, so if I analyze the FV mode code, I would just deploy the FV mode code.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375682738/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375683086",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375683086",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375683086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTY4MzA4Ng==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T14:29:21Z",
    "updated_at": "2018-03-23T14:39:08Z",
    "author_association": "NONE",
    "body": "@fubuloubu so, I think it's safer to have `assure` or not to have `assure`. ~disable `assure` keyword in the non-FV mode.  The compiler should error out (\"error: `assure` keyword is only available in the FV-mode\").~",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375683086/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375683773",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375683773",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375683773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTY4Mzc3Mw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T14:31:26Z",
    "updated_at": "2018-03-23T14:31:26Z",
    "author_association": "MEMBER",
    "body": "Then you have two copies of the same code (one with the statement and one without), and that's a no-no to me. I think maybe make it more obvious that they're different, and that `@assure` will be removed in non-FV mode.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375683773/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375684231",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375684231",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375684231,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTY4NDIzMQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T14:32:52Z",
    "updated_at": "2018-03-23T14:32:52Z",
    "author_association": "MEMBER",
    "body": "Well actually, I screwed that up. `assure` would always generate bytecode, just use two different opcodes depending on mode, `#@static-assert` would only get generated in FV-mode",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375684231/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375684311",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375684311",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375684311,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTY4NDMxMQ==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T14:33:10Z",
    "updated_at": "2018-03-23T14:37:43Z",
    "author_association": "NONE",
    "body": "I will only have one copy of the code with `assure`, and I only use ~the FV~ (EDIT) one mode.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375684311/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375684485",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375684485",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375684485,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTY4NDQ4NQ==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T14:33:45Z",
    "updated_at": "2018-03-23T14:33:45Z",
    "author_association": "NONE",
    "body": "I'm not going to use `#@static-assert` because I don't know what it does.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375684485/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375684895",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375684895",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375684895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTY4NDg5NQ==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T14:35:00Z",
    "updated_at": "2018-03-23T14:35:00Z",
    "author_association": "NONE",
    "body": "@fubuloubu if `assure` generates different opcodes depending on mode, I won't trust that the two different versions of the generated code behave the same.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375684895/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375685147",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375685147",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375685147,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTY4NTE0Nw==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T14:35:48Z",
    "updated_at": "2018-03-23T14:35:48Z",
    "author_association": "NONE",
    "body": "So I'm against any mode thing.  That ambiguates the semantics of Vyper.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375685147/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375685297",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375685297",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375685297,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTY4NTI5Nw==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T14:36:18Z",
    "updated_at": "2018-03-23T14:36:18Z",
    "author_association": "NONE",
    "body": "If a programmer doesn't like `INVALID`, they don't use `assure`.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375685297/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375705653",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375705653",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375705653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTcwNTY1Mw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T15:35:42Z",
    "updated_at": "2018-03-23T15:35:42Z",
    "author_association": "MEMBER",
    "body": "Hmm, that's a good counterargument re: style. Don't make it complicated right? So people use it correctly.\r\n\r\n`INVALID` strikes me as a bit of a kludge though. Perhaps Vyper generates metadata for the FV tool about which asserts are to be used for what purpose?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375705653/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375707236",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375707236",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375707236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTcwNzIzNg==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T15:40:12Z",
    "updated_at": "2018-03-23T15:40:12Z",
    "author_association": "NONE",
    "body": "> Perhaps Vyper generates metadata for the FV tool about which asserts are to be used for what purpose?\r\n\r\nThat sounds like the ultimate right thing to do.  The proposal here is made for impatient developers of static analyzers who want to try out their techniques today.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375707236/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375708747",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375708747",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375708747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTcwODc0Nw==",
    "user": {
      "login": "ehildenb",
      "id": 12721972,
      "node_id": "MDQ6VXNlcjEyNzIxOTcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/12721972?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ehildenb",
      "html_url": "https://github.com/ehildenb",
      "followers_url": "https://api.github.com/users/ehildenb/followers",
      "following_url": "https://api.github.com/users/ehildenb/following{/other_user}",
      "gists_url": "https://api.github.com/users/ehildenb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ehildenb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ehildenb/subscriptions",
      "organizations_url": "https://api.github.com/users/ehildenb/orgs",
      "repos_url": "https://api.github.com/users/ehildenb/repos",
      "events_url": "https://api.github.com/users/ehildenb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ehildenb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T15:44:29Z",
    "updated_at": "2018-03-23T15:44:29Z",
    "author_association": "NONE",
    "body": "Well, I'm not sure extra meta-data will be necessary. @pirapira is it the case that Solidity will only generate `INVALID` for failing asserts? And right now Vyper doesn't generate `INVALID` at all. So if it's never used for anything else, then it seems like a natural use case.\r\n\r\nBut, I think either way, we should move forward with generated `INVALID`, then see how the tools can take advantage of it and how they are limited by not knowing the reason for the `INVALID` (though, I also think this won't be true, with KEVM you will just be able to look at the resulting final state and see the reason for the most part, and I think other symbolic execution engines will be similar). But if there are limitations uncovered, then we will have data supporting how to structure metadata around the invalids.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375708747/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375710486",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375710486",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375710486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTcxMDQ4Ng==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T15:49:50Z",
    "updated_at": "2018-03-23T15:50:35Z",
    "author_association": "NONE",
    "body": "@fubuloubu by the way, never-failing `INVALID` is cheaper than never-failing `REVERT`.\r\n\r\nYes, the runtime cost of `INVALID` is higher (if executed) because `INVALID` depletes all remaining gas, but remember that never happens.  So, the runtime cost is equal (these instructions are never executed, so zero).\r\n\r\nThe deployment cost is cheaper with `INVALID` because `INVALID` takes no inputs, and the program is shorter.  `REVERT` takes two stack elements, so you need to `PUSH` those on the stack, so the program is longer.  So, the deployment cost is more expensive with `REVERT`.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375710486/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375711381",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375711381",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375711381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTcxMTM4MQ==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T15:52:38Z",
    "updated_at": "2018-03-23T15:52:38Z",
    "author_association": "NONE",
    "body": "@ehildenb yeah, Solidity generates `INVALID` for failing asserts.  @chriseth sounded glad you're going to use it.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375711381/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375727471",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375727471",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375727471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTcyNzQ3MQ==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T16:42:15Z",
    "updated_at": "2018-03-23T16:43:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Interesting discussion, so I prefer only having a single assert type statement in the base language. It feels like we are altering the base language just to accommodate static analysers? If that is the case, I opt for perhaps a secondary parameter to assert that convert the assert to use invalid opcode. Something like `assert False, 'invalid'` and additionally we bury the use case somewhere deep in the documentation so no newcomers accidentally use it. But `assure` or `sure` also works just fine - as long as we don't really advertise it's usage for newcomers.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375727471/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375728811",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375728811",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375728811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTcyODgxMQ==",
    "user": {
      "login": "ehildenb",
      "id": 12721972,
      "node_id": "MDQ6VXNlcjEyNzIxOTcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/12721972?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ehildenb",
      "html_url": "https://github.com/ehildenb",
      "followers_url": "https://api.github.com/users/ehildenb/followers",
      "following_url": "https://api.github.com/users/ehildenb/following{/other_user}",
      "gists_url": "https://api.github.com/users/ehildenb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ehildenb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ehildenb/subscriptions",
      "organizations_url": "https://api.github.com/users/ehildenb/orgs",
      "repos_url": "https://api.github.com/users/ehildenb/repos",
      "events_url": "https://api.github.com/users/ehildenb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ehildenb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T16:46:36Z",
    "updated_at": "2018-03-23T16:46:36Z",
    "author_association": "NONE",
    "body": "I think this misses the point though. The `sure ...` statement (or whatever it ends up being called), is never to be reached, and if it is reached then something has gone horribly wrong and state should be reverted. This is useful in production code in its own right, without even thinking about symbolic execution or static analysis engines. The fact that it makes it easier to feed queries into these engines is just an added bonus (which admittedly, is what prompted @pirapira and I to begin discussing it).",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375728811/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375729754",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375729754",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375729754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTcyOTc1NA==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T16:49:42Z",
    "updated_at": "2018-03-23T16:50:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ehildenb I am probably missing something (very very likely :stuck_out_tongue_winking_eye:), but as far as I understand these never-to-be-reached if statement could just as well use assert?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375729754/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375730627",
    "html_url": "https://github.com/vyperlang/vyper/issues/711#issuecomment-375730627",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/711",
    "id": 375730627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTczMDYyNw==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-23T16:52:28Z",
    "updated_at": "2018-03-23T16:52:28Z",
    "author_association": "NONE",
    "body": "@jacqueswww good point.  There have been confusions around `assert()` and `require()` in Solidity.  For me, a less advertised syntax works.  If the static analyzers prove themselves useful, users will ask for more convenient syntax.  The important thing for me right now is to give some chance for static analyzers to demonstrate their usefulness.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/375730627/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
