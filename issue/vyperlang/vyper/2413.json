{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/2413",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/2413/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/2413/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/2413/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/2413",
  "id": 965207065,
  "node_id": "MDU6SXNzdWU5NjUyMDcwNjU=",
  "number": 2413,
  "title": "VIP: allow msg.data to be used with extract32",
  "user": {
    "login": "skellet0r",
    "id": 23556333,
    "node_id": "MDQ6VXNlcjIzNTU2MzMz",
    "avatar_url": "https://avatars.githubusercontent.com/u/23556333?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/skellet0r",
    "html_url": "https://github.com/skellet0r",
    "followers_url": "https://api.github.com/users/skellet0r/followers",
    "following_url": "https://api.github.com/users/skellet0r/following{/other_user}",
    "gists_url": "https://api.github.com/users/skellet0r/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/skellet0r/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/skellet0r/subscriptions",
    "organizations_url": "https://api.github.com/users/skellet0r/orgs",
    "repos_url": "https://api.github.com/users/skellet0r/repos",
    "events_url": "https://api.github.com/users/skellet0r/events{/privacy}",
    "received_events_url": "https://api.github.com/users/skellet0r/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 479554964,
      "node_id": "MDU6TGFiZWw0Nzk1NTQ5NjQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/enhancement",
      "name": "enhancement",
      "color": "84b6eb",
      "default": true,
      "description": null
    },
    {
      "id": 684449300,
      "node_id": "MDU6TGFiZWw2ODQ0NDkzMDA=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/Easy%20Pickings",
      "name": "Easy Pickings",
      "color": "0e8a16",
      "default": false,
      "description": "Used to denote issues that should be easy to implement"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2021-08-10T17:59:39Z",
  "updated_at": "2021-08-19T16:15:33Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### What's your issue about?\r\n\r\nCurrently `msg.data` is only allowed with the `len` and `slice` functions, it would be nice to allow `extract32` usage.\r\n\r\nA very oversimplified example would be:\r\n\r\n```python\r\ndef foo(_value: uint256) -> uint256:\r\n    bar: bytes32 = extract32(msg.data, 4)\r\n    return convert(bar, uint256)\r\n```\r\n\r\nA more useful scenario, particularly with [relayers](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/9fbc1d71c0ed4c68a0bc160c69df1f85e94d2d8e/contracts/metatx/MinimalForwarder.sol#L49-L51), is extracting information (like an address) that was appended to the calldata:\r\n\r\n```python\r\ndef pretend_to_be_someone(_value: uint256) -> uint256:\r\n    msg_sender: address = msg.sender\r\n    if msg.sender == MAGIC_CALLER:\r\n        msg_sender = extract32(msg.data, -20, output_type=address)\r\n    # do something now impersonated\r\n```\r\n\r\n### How can it be fixed?\r\n\r\n1. Function level validation should allow `msg.data` to be used with `extract32` as well as the previously allowed `len` and `slice` functions. [Link to source](https://github.com/vyperlang/vyper/blob/31dd77671f7cfa29af496334373a11429422226c/vyper/semantics/validation/local.py#L186-L197)\r\n\r\nIt should be changed to something like this:\r\n\r\n```python\r\n    def visit_Attribute(self, node):\r\n        if node.get(\"value.id\") == \"msg\" and node.attr == \"data\":\r\n            parent = node.get_ancestor()\r\n            if parent.get(\"func.id\") not in (\"slice\", \"len\", \"extract32\"):\r\n                raise SyntaxException(\r\n                    \"Invalid usage of msg.data, acceptable functions are (slice, len, extract32)\",\r\n                    node.node_source_code,\r\n                    node.lineno,\r\n                    node.col_offset,\r\n                )\r\n```\r\n\r\n2. In the `vyper/old_codegen/expr.py` file, [here](https://github.com/vyperlang/vyper/blob/master/vyper/old_codegen/expr.py#L377-L396), my simple brain says, to just return an LLLNode which extracts the whole calldata ... but that also doesn't sound good since, calldata can be huge, and we really only want one piece of it. In which case we can extract to memory just the portion needed, from 0 to start + 32, but again also could be arbitrarily large. Alternative is to return None ? ... and then in the class [`Extract32`](https://github.com/vyperlang/vyper/blob/31dd77671f7cfa29af496334373a11429422226c/vyper/builtin_functions/functions.py#L804) identify the fact that we are interacting with calldata instead of storage or memory, to then copy the portion requested (start, start + 32) to memory and then take it from there converting to the appropriate type.\r\n\r\nSide note: Annotation visitor `visit_Attribute` [here](https://github.com/vyperlang/vyper/blob/master/vyper/semantics/validation/annotation.py#L57-L63), could probably get scraped since in `expr.py` we can access the metadata we are storing via the `_parent` attribute of the `expr` object/argument. But that's more of a refactoring issue.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/2413/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/2413/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/896199757",
    "html_url": "https://github.com/vyperlang/vyper/issues/2413#issuecomment-896199757",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2413",
    "id": 896199757,
    "node_id": "IC_kwDOBGDvrM41auxN",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-10T18:02:21Z",
    "updated_at": "2021-08-10T18:02:21Z",
    "author_association": "MEMBER",
    "body": "I'd support this! `extract32` is basically `convert(slice(n, 32), bytes32)`",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/896199757/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/896201741",
    "html_url": "https://github.com/vyperlang/vyper/issues/2413#issuecomment-896201741",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2413",
    "id": 896201741,
    "node_id": "IC_kwDOBGDvrM41avQN",
    "user": {
      "login": "skellet0r",
      "id": 23556333,
      "node_id": "MDQ6VXNlcjIzNTU2MzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/23556333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skellet0r",
      "html_url": "https://github.com/skellet0r",
      "followers_url": "https://api.github.com/users/skellet0r/followers",
      "following_url": "https://api.github.com/users/skellet0r/following{/other_user}",
      "gists_url": "https://api.github.com/users/skellet0r/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skellet0r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skellet0r/subscriptions",
      "organizations_url": "https://api.github.com/users/skellet0r/orgs",
      "repos_url": "https://api.github.com/users/skellet0r/repos",
      "events_url": "https://api.github.com/users/skellet0r/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skellet0r/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-10T18:05:07Z",
    "updated_at": "2021-08-10T18:05:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah! Thinking some more about it, definitely does feel like modifying the `Extract32` class and adding a new `_calldata_element_getter`, seems like the best route",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/896201741/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/896202796",
    "html_url": "https://github.com/vyperlang/vyper/issues/2413#issuecomment-896202796",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2413",
    "id": 896202796,
    "node_id": "IC_kwDOBGDvrM41avgs",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-10T18:06:31Z",
    "updated_at": "2021-08-10T18:06:31Z",
    "author_association": "MEMBER",
    "body": "> Yeah! Thinking some more about it, definitely does feel like modifying the `Extract32` class and adding a new `_calldata_element_getter`, seems like the best route\r\n\r\nPRs accepted :smile: ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/896202796/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/896204436",
    "html_url": "https://github.com/vyperlang/vyper/issues/2413#issuecomment-896204436",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2413",
    "id": 896204436,
    "node_id": "IC_kwDOBGDvrM41av6U",
    "user": {
      "login": "skellet0r",
      "id": 23556333,
      "node_id": "MDQ6VXNlcjIzNTU2MzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/23556333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skellet0r",
      "html_url": "https://github.com/skellet0r",
      "followers_url": "https://api.github.com/users/skellet0r/followers",
      "following_url": "https://api.github.com/users/skellet0r/following{/other_user}",
      "gists_url": "https://api.github.com/users/skellet0r/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skellet0r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skellet0r/subscriptions",
      "organizations_url": "https://api.github.com/users/skellet0r/orgs",
      "repos_url": "https://api.github.com/users/skellet0r/repos",
      "events_url": "https://api.github.com/users/skellet0r/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skellet0r/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-10T18:08:41Z",
    "updated_at": "2021-08-10T18:08:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "lol, on it @fubuloubu 💪",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/896204436/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/902046392",
    "html_url": "https://github.com/vyperlang/vyper/issues/2413#issuecomment-902046392",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2413",
    "id": 902046392,
    "node_id": "IC_kwDOBGDvrM41xCK4",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-19T16:15:33Z",
    "updated_at": "2021-08-19T16:15:33Z",
    "author_association": "COLLABORATOR",
    "body": "@skellet0r brought up a semantics issue, which is what should happen if the user calls extract32 near the boundary of calldatasize?\r\n\r\nHere's an example:\r\n```\r\n@external\r\ndef foo():\r\n    bar: bytes32 = extract32(msg.data, 0)\r\n\r\n---- IR ---- HEAD\r\n[with, _sub, 0, [calldataload, [mul, 32, [div, [clample, 0, [sub, [add, calldatasize, 32], 32]], 32]]]],\r\n---- 02ca5375f45db53f39078ae99c8c743d3e86520c\r\n[with, _sub, 0, [calldataload, [mul, 32, [div, [clample, 0, [sub, calldatasize, 32]], 32]]]],\r\n```\r\n\r\nIn this case, calldatasize is 4. The first IR will return `method_id(\"foo()\")` right padded with 28 zeroes. The second IR will revert. The question is which behavior we want.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/902046392/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
