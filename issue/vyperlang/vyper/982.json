{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/982",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/982/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/982/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/982/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/982",
  "id": 348043886,
  "node_id": "MDU6SXNzdWUzNDgwNDM4ODY=",
  "number": 982,
  "title": "Allow an optional \"end\" ",
  "user": {
    "login": "rocky",
    "id": 8851,
    "node_id": "MDQ6VXNlcjg4NTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8851?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rocky",
    "html_url": "https://github.com/rocky",
    "followers_url": "https://api.github.com/users/rocky/followers",
    "following_url": "https://api.github.com/users/rocky/following{/other_user}",
    "gists_url": "https://api.github.com/users/rocky/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rocky/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rocky/subscriptions",
    "organizations_url": "https://api.github.com/users/rocky/orgs",
    "repos_url": "https://api.github.com/users/rocky/repos",
    "events_url": "https://api.github.com/users/rocky/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rocky/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1723982050,
      "node_id": "MDU6TGFiZWwxNzIzOTgyMDUw",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Deferred",
      "name": "VIP: Deferred",
      "color": "c5def5",
      "default": false,
      "description": "VIP is not scheduled to move forward at this time"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 16,
  "created_at": "2018-08-06T19:00:02Z",
  "updated_at": "2021-11-01T19:49:42Z",
  "closed_at": "2021-11-01T19:49:42Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Simple Summary\r\n\r\nAnd an optional block terminator.\r\n\r\n## Abstract\r\n\r\nI was encouraged to learn of Vyper's focus on provability and correctness. A lot of that enthusiasm was damped when I learned it uses a weakness of  Python syntax - lack of a block terminator. \r\n\r\nCould one be added, even if optionally? \r\n\r\n## Motivation\r\n\r\nAside from the countless time spent in fixing  mistakes that Python programmers face when moving blocks of code around, there have been to other very serious flaws with the lack of having a terminator. \r\n\r\nThe first situation where this terminator is sorely needed is in printed code. Invariably something gets messed up with spacing. A common situation is that a proportional-space font is used when a monospace font was intended. Since there is no redundancy provided by the block terminator, it can be difficult to impossible to figure out the intended meaning.\r\n\r\nThe second area is when code is embeded in a templating system. So where as in say Ruby the templaters escaple direclty to the code of the programming langauge, in Python you need to have a _separate_ programming language like jinja2. \r\n\r\n## Specification\r\n\r\nThe simplest an least abtrusive way to address is to use \"pass\" as the block terminator, if \"pass\" is a statement of vyper. Better though is to use a reserved word, and in these kinds of languages where the opener is not a brace, `end` with or without the corresponding block name, e.g. `endif`, `endfor` is often used. \r\n\r\n## Backwards Compatibility\r\n\r\nOld should programs will work with the new grammar. Programs only familiar with old grammar won't work. However the block end could be added as a meta comment, for this. \r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n",
  "closed_by": {
    "login": "fubuloubu",
    "id": 3859395,
    "node_id": "MDQ6VXNlcjM4NTkzOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fubuloubu",
    "html_url": "https://github.com/fubuloubu",
    "followers_url": "https://api.github.com/users/fubuloubu/followers",
    "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
    "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
    "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
    "repos_url": "https://api.github.com/users/fubuloubu/repos",
    "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/982/reactions",
    "total_count": 2,
    "+1": 1,
    "-1": 1,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/982/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/410895950",
    "html_url": "https://github.com/vyperlang/vyper/issues/982#issuecomment-410895950",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/982",
    "id": 410895950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDg5NTk1MA==",
    "user": {
      "login": "Meai",
      "id": 649922,
      "node_id": "MDQ6VXNlcjY0OTkyMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649922?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Meai",
      "html_url": "https://github.com/Meai",
      "followers_url": "https://api.github.com/users/Meai/followers",
      "following_url": "https://api.github.com/users/Meai/following{/other_user}",
      "gists_url": "https://api.github.com/users/Meai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Meai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Meai/subscriptions",
      "organizations_url": "https://api.github.com/users/Meai/orgs",
      "repos_url": "https://api.github.com/users/Meai/repos",
      "events_url": "https://api.github.com/users/Meai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Meai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-07T00:40:25Z",
    "updated_at": "2018-08-07T00:40:25Z",
    "author_association": "NONE",
    "body": "Especially in a security focused language there really isnt any excuse to allow such an obvious way to let mistakes happen. Just one wrong indentation at the wrong spot and you just changed the entire logic of the program in possibly fatal ways. \r\nI think we should not spare the feelings of python programmers here, this is a security flaw and should not be tolerated. \r\nI personally find how Julialang does it with their 'end' keyword very readable.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/410895950/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/410904459",
    "html_url": "https://github.com/vyperlang/vyper/issues/982#issuecomment-410904459",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/982",
    "id": 410904459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDkwNDQ1OQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-07T01:36:45Z",
    "updated_at": "2018-08-07T01:36:45Z",
    "author_association": "MEMBER",
    "body": "So first off, I would not confuse \"propensity for making a mistake\" as a security error. I think that's a stretch that should not be made.\r\n\r\nSecondly, smart contracts cannot typically invoke many nested loops without exceeding gas usage limits, so I think the likelihood of constructing a smart contract with this kind of propensity for error is fairly unlikely, although definitely possible.\r\n\r\nThird, the degree of testing that a smart contract **should** go through in order to be released must be fairly high. If you did not catch a MAJOR logic change with your test suite (probably because you didn't have one) that is on you, not the language designers.\r\n\r\n---\r\n\r\nGiven the above, I think the best way to solve this issue is to make a style guide recommendation to demarcate closures for `if` and `for` blocks. If a contract method has complex enough code to potentially encounter this error, it would be the recommendation of the style guide to add a comment denoting the end of that block.\r\n\r\nHere are the most complex examples we have in our `examples/` directory exemplifying nested logic:\r\n\r\nhttps://github.com/ethereum/vyper/blob/a9021c0d74b0c9a72c59550b020e83cfe2e71475/examples/wallet/wallet.vy#L13-L17\r\n\r\nhttps://github.com/ethereum/vyper/blob/a9021c0d74b0c9a72c59550b020e83cfe2e71475/examples/voting/ballot.vy#L43-L51\r\n\r\nhttps://github.com/ethereum/vyper/blob/a9021c0d74b0c9a72c59550b020e83cfe2e71475/examples/voting/ballot.vy#L140-L147\r\n\r\nNone of them are complex enough where you cannot visually trace the end of the loop back to the start of it. I think a familiarity with Python is somewhat of a prerequisite for writing Vyper code, so you should be able to read the code pretty well in these cases.\r\n\r\nAn additional comment in one or two of these may help with readability and understanding, but I don't think an active keyword would do much more to mitgate it vs. a simple comment. In my personal opinion, the level of complexity involved in implementing this request would exceed it's utility, and a simple suggestion in the style guide to aid in readability of the contract (where deemed necessary) is very useful.\r\n\r\n---\r\n\r\nAs a sidenote, I think suggestions like this occur from an understanding of software being written from an iterative perspective. Smart contracts do not lend themselves well to the iterative approach, at least not as frequently as traditional software, as they implement a lot of critical logic in very few lines of code. This requires well-documented and well-tested code for others to read and maintain that code into the future.\r\n\r\nThis is my personal opinion of course, but I think as smart contracts develop this intuition will be more apparent with time.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/410904459/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/411097384",
    "html_url": "https://github.com/vyperlang/vyper/issues/982#issuecomment-411097384",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/982",
    "id": 411097384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTA5NzM4NA==",
    "user": {
      "login": "rocky",
      "id": 8851,
      "node_id": "MDQ6VXNlcjg4NTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8851?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rocky",
      "html_url": "https://github.com/rocky",
      "followers_url": "https://api.github.com/users/rocky/followers",
      "following_url": "https://api.github.com/users/rocky/following{/other_user}",
      "gists_url": "https://api.github.com/users/rocky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rocky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rocky/subscriptions",
      "organizations_url": "https://api.github.com/users/rocky/orgs",
      "repos_url": "https://api.github.com/users/rocky/repos",
      "events_url": "https://api.github.com/users/rocky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rocky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-07T15:27:24Z",
    "updated_at": "2018-08-11T10:52:39Z",
    "author_association": "NONE",
    "body": "With respect to programming language design, here is something old but still I come back to;  Larry Wall's [Laziness, Impatiece and Hubris](http://threevirtues.com/).  It posits the idea that burden shouild be put on the computer, not the programmer.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/411097384/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/411112870",
    "html_url": "https://github.com/vyperlang/vyper/issues/982#issuecomment-411112870",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/982",
    "id": 411112870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTExMjg3MA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-07T16:11:27Z",
    "updated_at": "2018-08-07T16:11:27Z",
    "author_association": "MEMBER",
    "body": "If we hear more complaints about problems with ambiguous block closures in practice, we will be sure to take this into account. I haven't heard a single complaint so far personally, I think most python programmers get very used to this very quickly and as stated above most Vyper programs will not require the depth of indentation that a general Python program encounters.\r\n\r\nWe have so far avoided modifying the python ast directly (we do some renamings, but that does not affect the ast) so my inclination is to avoid opening that pandora's box unless we go all in on a vyper-specific front-end parser that does not leverage the terrific efforts Python devs have gone through to build a robust front-end.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/411112870/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/411119016",
    "html_url": "https://github.com/vyperlang/vyper/issues/982#issuecomment-411119016",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/982",
    "id": 411119016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTExOTAxNg==",
    "user": {
      "login": "rocky",
      "id": 8851,
      "node_id": "MDQ6VXNlcjg4NTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8851?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rocky",
      "html_url": "https://github.com/rocky",
      "followers_url": "https://api.github.com/users/rocky/followers",
      "following_url": "https://api.github.com/users/rocky/following{/other_user}",
      "gists_url": "https://api.github.com/users/rocky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rocky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rocky/subscriptions",
      "organizations_url": "https://api.github.com/users/rocky/orgs",
      "repos_url": "https://api.github.com/users/rocky/repos",
      "events_url": "https://api.github.com/users/rocky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rocky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-07T16:29:28Z",
    "updated_at": "2018-08-07T16:33:28Z",
    "author_association": "NONE",
    "body": "> avoided modifying the python ast directly \r\n\r\nThis has nothing to do with Python's (or Vyper's) AST.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/411119016/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/411122626",
    "html_url": "https://github.com/vyperlang/vyper/issues/982#issuecomment-411122626",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/982",
    "id": 411122626,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTEyMjYyNg==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-07T16:41:12Z",
    "updated_at": "2018-08-07T16:41:12Z",
    "author_association": "MEMBER",
    "body": "So, we would pre-process and enforce block terminators (if found), before processing with Python `ast.parse`?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/411122626/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/411163845",
    "html_url": "https://github.com/vyperlang/vyper/issues/982#issuecomment-411163845",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/982",
    "id": 411163845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTE2Mzg0NQ==",
    "user": {
      "login": "rocky",
      "id": 8851,
      "node_id": "MDQ6VXNlcjg4NTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8851?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rocky",
      "html_url": "https://github.com/rocky",
      "followers_url": "https://api.github.com/users/rocky/followers",
      "following_url": "https://api.github.com/users/rocky/following{/other_user}",
      "gists_url": "https://api.github.com/users/rocky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rocky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rocky/subscriptions",
      "organizations_url": "https://api.github.com/users/rocky/orgs",
      "repos_url": "https://api.github.com/users/rocky/repos",
      "events_url": "https://api.github.com/users/rocky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rocky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-07T18:55:10Z",
    "updated_at": "2018-08-07T18:55:10Z",
    "author_association": "NONE",
    "body": "I'm just saying it has nothing to do with any AST.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/411163845/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/411686851",
    "html_url": "https://github.com/vyperlang/vyper/issues/982#issuecomment-411686851",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/982",
    "id": 411686851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTY4Njg1MQ==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-09T08:54:55Z",
    "updated_at": "2018-08-09T09:01:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note: I am still mulling this over.\r\n\r\nFrom a practical/implementation point of view:\r\n\r\n@fubuloubu we would be able to at an `end` statement check, it would look something like so, if we do go this route I would make it a 'strict' feature?\r\n\r\n```python\r\n def winning_proposal() -> int128: \r\n     winning_vote_count: int128 = 0 \r\n     winning_proposal: int128 = 0 \r\n     for i in range(2): \r\n         if self.proposals[i].vote_count > winning_vote_count: \r\n             winning_vote_count = self.proposals[i].vote_count \r\n             winning_proposal = i \r\n         else:\r\n             pass\r\n         endif\r\n     endfor\r\n     return winning_proposal \r\n```\r\nI would definitely go for end{if,for} because it reads clearer. Having end is a similar problem, as you don't know which end goes to which statement. Which is the exact same problem you have with using brackets, there are just too many and you don't know which belong where.\r\n\r\nThe important thing the check would do, is ensure indentations and end{if,for} match, ~with no statements allowed after the end keywords.~\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/411686851/reactions",
      "total_count": 4,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/411718081",
    "html_url": "https://github.com/vyperlang/vyper/issues/982#issuecomment-411718081",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/982",
    "id": 411718081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTcxODA4MQ==",
    "user": {
      "login": "rocky",
      "id": 8851,
      "node_id": "MDQ6VXNlcjg4NTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8851?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rocky",
      "html_url": "https://github.com/rocky",
      "followers_url": "https://api.github.com/users/rocky/followers",
      "following_url": "https://api.github.com/users/rocky/following{/other_user}",
      "gists_url": "https://api.github.com/users/rocky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rocky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rocky/subscriptions",
      "organizations_url": "https://api.github.com/users/rocky/orgs",
      "repos_url": "https://api.github.com/users/rocky/repos",
      "events_url": "https://api.github.com/users/rocky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rocky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-09T10:52:10Z",
    "updated_at": "2018-08-09T10:53:44Z",
    "author_association": "NONE",
    "body": "The bad thing about using indentation, is that it becomes ungainly when the language is embedded inside some sort of templating system. Again, think trying to replace jinja2 using Python as a language instead. \r\n\r\nGiven you are thinking about noting this via some sort of \"strict\" indicator, perhaps that could also be extended to allow for loose indentation. \r\n\r\n(To make it clear that the looseness is there to allow templating or embedding, the option name could be geared more towards that effect: \"templated\" vs \"loose spacing\".)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/411718081/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/411719925",
    "html_url": "https://github.com/vyperlang/vyper/issues/982#issuecomment-411719925",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/982",
    "id": 411719925,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTcxOTkyNQ==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-09T11:00:08Z",
    "updated_at": "2018-08-09T11:00:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "In what scenario would one want to template vyper? Given that the onchain factory mechanics are a lot more useful and secure?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/411719925/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/411720685",
    "html_url": "https://github.com/vyperlang/vyper/issues/982#issuecomment-411720685",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/982",
    "id": 411720685,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTcyMDY4NQ==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-09T11:03:27Z",
    "updated_at": "2018-08-09T11:03:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "I do think strict indentation is a benefit for readibility, and would not consider removing that from vyper. Removing indentation requirements makes it much easier to write under handed code.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/411720685/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/411726415",
    "html_url": "https://github.com/vyperlang/vyper/issues/982#issuecomment-411726415",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/982",
    "id": 411726415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTcyNjQxNQ==",
    "user": {
      "login": "rocky",
      "id": 8851,
      "node_id": "MDQ6VXNlcjg4NTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8851?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rocky",
      "html_url": "https://github.com/rocky",
      "followers_url": "https://api.github.com/users/rocky/followers",
      "following_url": "https://api.github.com/users/rocky/following{/other_user}",
      "gists_url": "https://api.github.com/users/rocky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rocky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rocky/subscriptions",
      "organizations_url": "https://api.github.com/users/rocky/orgs",
      "repos_url": "https://api.github.com/users/rocky/repos",
      "events_url": "https://api.github.com/users/rocky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rocky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-09T11:29:37Z",
    "updated_at": "2018-08-09T11:37:41Z",
    "author_association": "NONE",
    "body": "Numerous times I have noticed a tool I have written used in a very different manner than what I had imagined its uses would be. Nevertheless, used in a perfectly valid and reasonable way, if not novel, or game changing.\r\n\r\nHere is something analogous. Ruby had followed Perl in its decision to allow parenthesis to be optional in a function call when the parenthesis is not needed to disambiguate. (Perl had extended the POSIX shell convention in that it allowed _optional_ parenthesis where as in POSIX shell you couldn't use parenthesis to enclose command arguments from the command name). \r\n\r\nAs a result, someone later realized that Ruby would make a good language to implement a DSL in. I doubt though that Matz specifically had that in mind. As a result, for a while Ruby got a big uptick in use.\r\n\r\nAs a user of a language, I personally would opt for a language that doesn't  proscribe what the kinds of things that a the language is to be used for, but  instead is built on solid principles, stearing clear of known pitfalls.\r\n\r\nWe know that indentation causes a problem in templating systems  (if not also in printing). Why limit yourself based on whether you or I can currently imagine Vyper's use in one?  \r\n\r\nPerhaps others may want to offer situations, but I don't want to go down that rabbit hole. I propose something then all of a sudden we are discussing the merit of that and so on. \r\n\r\n> I do think strict indentation is a benefit for readibility,\r\n\r\nI never said it didn't. In fact, I agree it does. \r\n\r\n I am just saying that there are some situations where it is inappropriate. So when the intent is clearly indicated, for example, \"I am am using vypper here as an embedded language so please skip the indentation check\", then  what's the harm? ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/411726415/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/411745929",
    "html_url": "https://github.com/vyperlang/vyper/issues/982#issuecomment-411745929",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/982",
    "id": 411745929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTc0NTkyOQ==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-09T12:49:58Z",
    "updated_at": "2018-08-09T13:20:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I do concede that, yes in other scenarios letting go of the tighter requirements as some type of opt-in would seem like a nice option, and I also agree that one can not tell how a language will be used in the future. Full disclosure: I am also a big fan of not having too many \"strict\" toggles at this stage - I think we should try and build the most audit able/readable language by default first. We can not envision how contracts will be written (or if  they will be :tongue:) written in the future, and for those use cases we will definitely have to evaluate the trade offs between usability and security on a case by case basis (that's why I was asking about current use cases for templating).\r\n\r\nInterestingly enough Vyper is basically a DSL of python3.6, and it's core focus is writing secure and audit-able contracts. It's our primary goal make decision around those core goals, \"it should be maximally difficult to write underhanded code\" (if I have to make a saying up on the spot hehe). Hence why I also prefer the 'do one thing and do on thing well' approach, because if there is only one way to for example indent or show block logic ending, one will not have to adapt to different styles when reading contracts.\r\n\r\nIn terms of audit-ability/readability/security  of not clearly reading the end of a block is valid concern, and is the one I think we should focus in terms of this VIP, we are having our bi-weekly call on Monday 13th Aug 14:00 UTC, and the VIP will be on the agenda, please feel free to drop by and say hello and participate :) (note anyone reading this: it's an open call, everyone is invited).\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/411745929/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/412243566",
    "html_url": "https://github.com/vyperlang/vyper/issues/982#issuecomment-412243566",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/982",
    "id": 412243566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjI0MzU2Ng==",
    "user": {
      "login": "rocky",
      "id": 8851,
      "node_id": "MDQ6VXNlcjg4NTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8851?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rocky",
      "html_url": "https://github.com/rocky",
      "followers_url": "https://api.github.com/users/rocky/followers",
      "following_url": "https://api.github.com/users/rocky/following{/other_user}",
      "gists_url": "https://api.github.com/users/rocky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rocky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rocky/subscriptions",
      "organizations_url": "https://api.github.com/users/rocky/orgs",
      "repos_url": "https://api.github.com/users/rocky/repos",
      "events_url": "https://api.github.com/users/rocky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rocky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-11T02:02:35Z",
    "updated_at": "2018-08-13T16:27:19Z",
    "author_association": "NONE",
    "body": "If you want to post a link, I  may just be able to make it. \r\n\r\n> not clearly reading the end of a block is valid concern, and is the one I think we should focus in terms of this VIP\r\n\r\nIt would be awesome if just this aspect and adding and ENDIF/ENDFOR were added. I probably shouldn't volunteer time, but I might be able to adjust the grammar (if things go satisfactorily that way). \r\n\r\nI agree that putting of the embedding and printing issues can be as you say put off. Just note though that Python syntax, is problematic here.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/412243566/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/412816723",
    "html_url": "https://github.com/vyperlang/vyper/issues/982#issuecomment-412816723",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/982",
    "id": 412816723,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjgxNjcyMw==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-14T09:47:22Z",
    "updated_at": "2018-08-14T09:47:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Approved as an opt in.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/412816723/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/956537878",
    "html_url": "https://github.com/vyperlang/vyper/issues/982#issuecomment-956537878",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/982",
    "id": 956537878,
    "node_id": "IC_kwDOBGDvrM45A5wW",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-01T19:49:42Z",
    "updated_at": "2021-11-01T19:49:42Z",
    "author_association": "MEMBER",
    "body": "This VIP will not be implemented",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/956537878/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
