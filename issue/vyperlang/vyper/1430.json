{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/1430",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/1430/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/1430/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/1430/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/1430",
  "id": 442780340,
  "node_id": "MDU6SXNzdWU0NDI3ODAzNDA=",
  "number": 1430,
  "title": "Struct constants do not parse correctly",
  "user": {
    "login": "fubuloubu",
    "id": 3859395,
    "node_id": "MDQ6VXNlcjM4NTkzOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fubuloubu",
    "html_url": "https://github.com/fubuloubu",
    "followers_url": "https://api.github.com/users/fubuloubu/followers",
    "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
    "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
    "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
    "repos_url": "https://api.github.com/users/fubuloubu/repos",
    "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 479554962,
      "node_id": "MDU6TGFiZWw0Nzk1NTQ5NjI=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/bug",
      "name": "bug",
      "color": "ee0701",
      "default": true,
      "description": "Bug that shouldn't change language semantics when fixed."
    },
    {
      "id": 684449300,
      "node_id": "MDU6TGFiZWw2ODQ0NDkzMDA=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/Easy%20Pickings",
      "name": "Easy Pickings",
      "color": "0e8a16",
      "default": false,
      "description": "Used to denote issues that should be easy to implement"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2019-05-10T15:39:56Z",
  "updated_at": "2022-03-19T01:43:52Z",
  "closed_at": "2022-03-19T01:43:52Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Version Information\r\n* vyper Version (output of `vyper --version`): 0.1.0b9\r\n* OS: linux\r\n* Python Version (output of `python --version`): Python 3.6.6\r\n* Environment (output of `pip freeze`):\r\n```\r\nflake8==3.5.0\r\nmccabe==0.6.1\r\npycodestyle==2.3.1\r\npycryptodome==3.6.6\r\npyflakes==1.6.0\r\n```\r\n\r\n### What's your issue about?\r\n\r\nIt seems like the struct literal processing works differently for constants versus memory variables:\r\n```python\r\nstruct Foo:\r\n    a: uint256\r\n    b: uint256\r\n\r\n# raises vyper.exceptions.TypeMismatchException:\r\n#   Invalid value for constant type, expected struct Foo: {a: uint256, b: uint256}\r\n#                                    got struct Foo: {a: int128, b: int128} instead\r\nCONST_BAR: constant(Foo) = Foo({a: 1, b: 2})\r\n\r\n@public\r\ndef baz():\r\n    bar: Foo = Foo({a: 1, b: 2})  # Works fine!\r\n```\r\n\r\n### How can it be fixed?\r\nNot sure, this seems weird, but these should work in a similar way IMO.",
  "closed_by": {
    "login": "charles-cooper",
    "id": 3867501,
    "node_id": "MDQ6VXNlcjM4Njc1MDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/charles-cooper",
    "html_url": "https://github.com/charles-cooper",
    "followers_url": "https://api.github.com/users/charles-cooper/followers",
    "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
    "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
    "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
    "repos_url": "https://api.github.com/users/charles-cooper/repos",
    "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
    "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/1430/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/1430/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/491686213",
    "html_url": "https://github.com/vyperlang/vyper/issues/1430#issuecomment-491686213",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1430",
    "id": 491686213,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTY4NjIxMw==",
    "user": {
      "login": "balajipachai",
      "id": 32358081,
      "node_id": "MDQ6VXNlcjMyMzU4MDgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/32358081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/balajipachai",
      "html_url": "https://github.com/balajipachai",
      "followers_url": "https://api.github.com/users/balajipachai/followers",
      "following_url": "https://api.github.com/users/balajipachai/following{/other_user}",
      "gists_url": "https://api.github.com/users/balajipachai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/balajipachai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/balajipachai/subscriptions",
      "organizations_url": "https://api.github.com/users/balajipachai/orgs",
      "repos_url": "https://api.github.com/users/balajipachai/repos",
      "events_url": "https://api.github.com/users/balajipachai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/balajipachai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-13T05:58:53Z",
    "updated_at": "2019-05-13T05:58:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I did the following changes to the existing code, and I was able to get rid of the TypeMismatchException error:\r\n```\r\nstruct Foo:\r\n    a: uint256\r\n    b: uint256\r\n\r\nc: constant(uint256) = 1\r\nd: constant(uint256) = 2\r\n\r\nCONST_BAR: constant(Foo) = Foo({a: c, b: d})\r\n\r\n@public\r\ndef baz():\r\n    bar: Foo = Foo({a: 1, b: 2})  # Works fine!\r\n\r\n```\r\n\r\nThe reason why we need to cast 1 & 2 to uint256:\r\n[By default integer literals are interpreted as int128](https://vyper.readthedocs.io/en/v0.1.0-beta.7/types.html?highlight=constant#id4)\r\nHowever, the above statement holds true in case of constants, otherwise, it works fine for non-constant types, consider, `def baz()`.\r\n\r\nThings that I tried out:\r\nWhenever you declare a constant, the flow in the code is as follows:\r\n`From constants.py -> Expr.parse_value_expr() gets invoked which in turn invokes parser_utils.py's unwrap_loaction().`\r\n\r\n> Here, I observed that the **orig** function argument's location is none and **orig.typ** is int128, thus this function directly returns an int128 (my understanding may be wrong, anybody do correct me in such a case)\r\n\r\n> Also, there, are 2 types `annotation_type & expr type`, the point worth noting is that `annotation_type` gets the exact values such as uint256 whereas expr gets int128 values\r\n\r\nThus, I feel, when we use `constant` and if there is integer involved (in structure type) whose type is other than **int128** then:\r\n```\r\n\r\n- Either we type cast it to constant(desired data type) \r\n   OR\r\n- There has to be a mechanism in either constants.py OR expr.py OR parser_utils.py to do this\r\n\r\n```\r\n\r\nP.S. Being a newbie to Python and Vyper my understanding may be incorrect, above were the findings that I got mostly by logging the values onto the console.\r\n\r\nI am keen to add this functionality (if at all it is needed), I just need pointers in the right direction.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/491686213/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/491687274",
    "html_url": "https://github.com/vyperlang/vyper/issues/1430#issuecomment-491687274",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1430",
    "id": 491687274,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTY4NzI3NA==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-13T06:04:10Z",
    "updated_at": "2019-05-13T06:04:10Z",
    "author_association": "COLLABORATOR",
    "body": "@balajipachai nice finds! I think you are on the right path. If you search for the error message in the code you should find https://github.com/ethereum/vyper/blob/da88d6d18aa92a0e838ae4f3544802382e8c16ae/vyper/parser/constants.py#L76. I think if you can add generic cases for tuples/structs to the `unroll_constant` function you should be able to resolve this issue.\r\n\r\nAt the same time, it would be ideal to reify this with other type-checking code which handles literals, but it might add significant scope.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/491687274/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/491694398",
    "html_url": "https://github.com/vyperlang/vyper/issues/1430#issuecomment-491694398",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1430",
    "id": 491694398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTY5NDM5OA==",
    "user": {
      "login": "balajipachai",
      "id": 32358081,
      "node_id": "MDQ6VXNlcjMyMzU4MDgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/32358081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/balajipachai",
      "html_url": "https://github.com/balajipachai",
      "followers_url": "https://api.github.com/users/balajipachai/followers",
      "following_url": "https://api.github.com/users/balajipachai/following{/other_user}",
      "gists_url": "https://api.github.com/users/balajipachai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/balajipachai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/balajipachai/subscriptions",
      "organizations_url": "https://api.github.com/users/balajipachai/orgs",
      "repos_url": "https://api.github.com/users/balajipachai/repos",
      "events_url": "https://api.github.com/users/balajipachai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/balajipachai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-13T06:37:34Z",
    "updated_at": "2019-05-13T06:37:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@charles-cooper Thank you, for the inputs, I'll look into it.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/491694398/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/491854479",
    "html_url": "https://github.com/vyperlang/vyper/issues/1430#issuecomment-491854479",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1430",
    "id": 491854479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTg1NDQ3OQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-13T14:49:36Z",
    "updated_at": "2019-05-13T14:49:36Z",
    "author_association": "MEMBER",
    "body": "Sounds like the resolution here would include making sure all valid memory data types (such as structs, but not including maps) can have associated constants that parse correctly.\r\n\r\n@balajipachai your additional example of other constants used within a constant struct is more interesting.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/491854479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/491932227",
    "html_url": "https://github.com/vyperlang/vyper/issues/1430#issuecomment-491932227",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1430",
    "id": 491932227,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTkzMjIyNw==",
    "user": {
      "login": "balajipachai",
      "id": 32358081,
      "node_id": "MDQ6VXNlcjMyMzU4MDgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/32358081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/balajipachai",
      "html_url": "https://github.com/balajipachai",
      "followers_url": "https://api.github.com/users/balajipachai/followers",
      "following_url": "https://api.github.com/users/balajipachai/following{/other_user}",
      "gists_url": "https://api.github.com/users/balajipachai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/balajipachai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/balajipachai/subscriptions",
      "organizations_url": "https://api.github.com/users/balajipachai/orgs",
      "repos_url": "https://api.github.com/users/balajipachai/repos",
      "events_url": "https://api.github.com/users/balajipachai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/balajipachai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-13T18:21:37Z",
    "updated_at": "2019-05-13T18:21:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I noticed that:\r\n```\r\n expr.typ is struct Foo: {a: int128, b: int128} \r\n whereas \r\n annotation_type is struct Foo: {a: uint256, b: uint256} \r\n```\r\nI was thinking about:\r\n\r\n- Check if annotation_type is of the type struct\r\n- Check if annotation_type contains a data member, of type int\r\n- If Yes\r\n    `Check the type of int (can be uint256, int128 etc)`\r\n    `Check if expr.typ's int data member is of the same type of that of the annotation_type`\r\n    `if expr.typ's int data member is not of the same type, then type cast into annotation_type's int data member` \r\n- If No\r\n    `There shouldn't be any problem`\r\n**annotation_type**\r\n`Annotation type:  struct Foo: {a: uint256, b: uint256}`\r\n**expr.typ**\r\n`expr.typ struct Foo: {a: int128, b: int128}`\r\n\r\n**Unknowns**\r\nHow to access struct's data members in constants.py file? (unknown being a newbie)\r\nWhat is:\r\n\r\n- `unroll_constant: const  <_ast.AnnAssign object at 0x7fbfa5951f60>`\r\n- `unroll_constant: expr  [multi, 1, 2]`\r\n- `const.annotation.args[0] <_ast.Name object at 0x7fbfa5946320>`\r\n\r\nGetting to know the unknows will help in coming up with a better solution.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/491932227/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/491938891",
    "html_url": "https://github.com/vyperlang/vyper/issues/1430#issuecomment-491938891",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1430",
    "id": 491938891,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTkzODg5MQ==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-13T18:41:19Z",
    "updated_at": "2019-05-13T18:42:52Z",
    "author_association": "COLLABORATOR",
    "body": "@balajipachai for some examples of accessing struct member types, check out vyper/parser/parser_utils.py. Basically what you can do is check if typ is `TupleLike`, and then iterate over `typ.members`, and for each element of `typ.members`, do the same check as https://github.com/ethereum/vyper/blob/da88d6d18aa92a0e838ae4f3544802382e8c16ae/vyper/parser/constants.py#L57-L72. I recommend factoring out that block into a separate function to avoid repeating code. Thanks for working on this!\r\n\r\nEDIT: That function that you factor out might need to be recursive to handle nested types.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/491938891/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/491939905",
    "html_url": "https://github.com/vyperlang/vyper/issues/1430#issuecomment-491939905",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1430",
    "id": 491939905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTkzOTkwNQ==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-13T18:44:24Z",
    "updated_at": "2019-05-13T18:44:24Z",
    "author_association": "COLLABORATOR",
    "body": "It also occurred to me that list constants might not typecheck as well. So you could check if the constant is of `ListType` and if so, perform the same check as above on `typ.subtype`.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/491939905/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/491941281",
    "html_url": "https://github.com/vyperlang/vyper/issues/1430#issuecomment-491941281",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1430",
    "id": 491941281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTk0MTI4MQ==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-13T18:48:28Z",
    "updated_at": "2019-05-13T18:48:28Z",
    "author_association": "COLLABORATOR",
    "body": "Note for future maintainers. Currently similar typechecks are spread across `parser.stmt:_check_valid_assign`, `parser.parser_utils:make_setter` and the function in this issue, `parser.constants:unroll_constant`. It would be nice to factor that into a common function in `types/types.py` or `types/typechecker.py`.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/491941281/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/492901850",
    "html_url": "https://github.com/vyperlang/vyper/issues/1430#issuecomment-492901850",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1430",
    "id": 492901850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjkwMTg1MA==",
    "user": {
      "login": "balajipachai",
      "id": 32358081,
      "node_id": "MDQ6VXNlcjMyMzU4MDgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/32358081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/balajipachai",
      "html_url": "https://github.com/balajipachai",
      "followers_url": "https://api.github.com/users/balajipachai/followers",
      "following_url": "https://api.github.com/users/balajipachai/following{/other_user}",
      "gists_url": "https://api.github.com/users/balajipachai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/balajipachai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/balajipachai/subscriptions",
      "organizations_url": "https://api.github.com/users/balajipachai/orgs",
      "repos_url": "https://api.github.com/users/balajipachai/repos",
      "events_url": "https://api.github.com/users/balajipachai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/balajipachai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-16T03:23:37Z",
    "updated_at": "2019-05-16T03:23:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@charles-cooper @fubuloubu Could you please go through #1438 and let me know the changes that need to be done for the the SizeLimits.in_bound() function to accept arg2 in a generic manner?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/492901850/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/577972625",
    "html_url": "https://github.com/vyperlang/vyper/issues/1430#issuecomment-577972625",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1430",
    "id": 577972625,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3Nzk3MjYyNQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-24T03:04:23Z",
    "updated_at": "2020-01-24T03:04:23Z",
    "author_association": "MEMBER",
    "body": "Still an issue, #1438 may fix, just need someone to pull in @balajipachai's work and fix the linter errors",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/577972625/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
