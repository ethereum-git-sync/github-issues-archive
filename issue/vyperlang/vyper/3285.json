{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/3285",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/3285",
  "id": 1587617267,
  "node_id": "I_kwDOBGDvrM5eoR3z",
  "number": 3285,
  "title": "VIP: Support Non-Default `enum` Behaviours",
  "user": {
    "login": "pcaversaccio",
    "id": 25297591,
    "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pcaversaccio",
    "html_url": "https://github.com/pcaversaccio",
    "followers_url": "https://api.github.com/users/pcaversaccio/followers",
    "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
    "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
    "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
    "repos_url": "https://api.github.com/users/pcaversaccio/repos",
    "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 21,
  "created_at": "2023-02-16T12:47:03Z",
  "updated_at": "2023-02-26T07:00:07Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**Original Issue Text (Before Refactoring into a VIP)**:\r\n\r\nEnums are treated differently in Solidity and Vyper. `uint8` (in Solidity) vs. `uint256` (in Vyper) & simple increments and starting from 0 (in Solidity) vs. `2**n` and starting from 1 (in Vyper). I think it would be good to have the possibility to set custom numbers to get the Solidity-style behavior and leave the default to the Vyper method. One implementation issue I currently see is the `uint8` vs `uint256` difference.\r\n\r\n---\r\n\r\n## Simple Summary\r\n\r\nSupport non-Vyper `enum` behaviours. One example is Solidity, which uses normal integer-based enums.\r\n\r\n## Motivation\r\n\r\nEnums are treated differently in Solidity and other languages, and cross-language consistency is sometimes a desirable feature to have (e.g. testing Vyper contracts with Foundry or writing a smart contract system using Solidity and Vyper, in order to leverage inline assembly for certain optimisations).\r\n\r\n## Specification\r\n\r\nIntroduce a new decorator `nondefault` that takes as argument `solidity` (and can later be extended to further other languages). This decorator will switch the default Vyper behavior in the form of `2**n`, where `n` is the index of the member in the range `0 <= n <= 255`, to normal integer-based enums supported by Solidity. Generally, this decorator can later also be used for other cross-language anomalies to ensure consistency if needed/desired.\r\n\r\n```\r\n@nondefault(solidity)\r\nenum MyEnum:\r\n    ADMIN # starts at 0 since we got the `@nondefault` behavior\r\n    MINTER # increments the enum `uint8` index to 1\r\n    MANAGER # ...\r\n    USER #...\r\n    ...\r\n    # Cannot define more than 256 elements in an enum def (this should raise)\r\n```\r\n\r\n## Backwards Compatibility\r\n\r\nIt was possible for Solidity versions `<0.8.0` to define more than 255 (`max_value(uint8)`) enum members. The here-introduced feature will not support more members than 255 and therefore is not backward-compatible with older (i.e. `<0.8.0`) Solidity versions.\r\n\r\n## Dependencies\r\n\r\nN/A.\r\n\r\n## References\r\n\r\n- https://docs.soliditylang.org/en/latest/types.html#enums\r\n\r\n## Copyright\r\n\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0).\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/3285/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1433780836",
    "html_url": "https://github.com/vyperlang/vyper/issues/3285#issuecomment-1433780836",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285",
    "id": 1433780836,
    "node_id": "IC_kwDOBGDvrM5VdcJk",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-16T22:07:04Z",
    "updated_at": "2023-02-16T22:07:40Z",
    "author_association": "MEMBER",
    "body": "> Enums are treated differently in Solidity and Vyper. `uint8` (in Solidity) vs. `uint256` (in Vyper) & simple increments and starting from 0 (in Solidity) vs. `2**n` and starting from 1 (in Vyper). I think it would be good to have the possibility to set custom numbers to get the Solidity-style behavior and leave the default to the Vyper method.\r\n\r\nOne way I think we can make this easy is to implement the following spec for \"normal integer\"-based enums:\r\n\r\n```vyper\r\nenum MyEnum:\r\n    VAL0 = 0  # setting *any* enum value stops the default numbering that uses 2**n order\r\n    # NOTE: this removes certain \"flag enum\" methods e.g. `x is MyEnum....`\r\n    VAL1  # it's not necessary to number all the values (useful for ease of use)\r\n    VAL3 = 3  # setting a number that's greater than the next number in the series skips ahead\r\n    VAL2 = 2  # Enum def must be in order, and cannot be defined as a number equal or less than the previous (this should raise)\r\n    ...\r\n    VAL256  # Still cannot define more than 256 elements in an enum def (this should raise)\r\n```\r\n\r\n> One implementation issue I currently see is the `uint8` vs `uint256` difference.\r\n\r\nThis isn't really a concern since ABI encoding always encodes `uint8` values the same as `uint256`",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1433780836/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434354519",
    "html_url": "https://github.com/vyperlang/vyper/issues/3285#issuecomment-1434354519",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285",
    "id": 1434354519,
    "node_id": "IC_kwDOBGDvrM5VfoNX",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-17T09:14:22Z",
    "updated_at": "2023-02-17T09:16:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "> One way I think we can make this easy is to implement the following spec for \"normal integer\"-based enums:\r\n> \r\n> ```vyper\r\n> enum MyEnum:\r\n>     VAL0 = 0  # setting *any* enum value stops the default numbering that uses 2**n order\r\n>     # NOTE: this removes certain \"flag enum\" methods e.g. `x is MyEnum....`\r\n>     VAL1  # it's not necessary to number all the values (useful for ease of use)\r\n>     VAL3 = 3  # setting a number that's greater than the next number in the series skips ahead\r\n>     VAL2 = 2  # Enum def must be in order, and cannot be defined as a number equal or less than the previous (this should raise)\r\n>     ...\r\n>     VAL256  # Still cannot define more than 256 elements in an enum def (this should raise)\r\n> ```\r\n\r\nAt first sight, it looks good, but after rethinking it's probably not the best solution wrt readability since the behavior is somehow implied and not explicit, and we want to have max clarity for Vyper. So I would maybe suggest adding a decorator (with a param, see below why this could be powerful at some point) called `@nondefault(solidity)` or similar to increase the transparency about the behavior.\r\n\r\n```vyper\r\n@nondefault(solidity)\r\nenum MyEnum:\r\n    ADMIN # starts at 0 since we got the `@nondefault` behavior\r\n    MINTER # increments the enum `uint8` index  to 1\r\n    MANAGER # ...\r\n    USER #...\r\n    ...\r\n    # Cannot define more than 256 elements in an enum def (this should raise)\r\n```\r\n\r\nMaybe we could reuse this `nondefault` decorator for similar behavior we might see for Fe, Sway etc. in the future...\r\n\r\n> This isn't really a concern since ABI encoding always encodes uint8 values the same as uint256\r\n\r\nFair enough, but my point was more that before solc `0.8.0` it was possible to define more than 255 enum members, so it won't be backward-compatible, which is a non-issue if simply document it quickly.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434354519/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434742376",
    "html_url": "https://github.com/vyperlang/vyper/issues/3285#issuecomment-1434742376",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285",
    "id": 1434742376,
    "node_id": "IC_kwDOBGDvrM5VhG5o",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-17T14:42:08Z",
    "updated_at": "2023-02-17T14:42:08Z",
    "author_association": "MEMBER",
    "body": "> > This isn't really a concern since ABI encoding always encodes uint8 values the same as uint256\n> \n> Fair enough, but my point was more that before solc `0.8.0` it was possible to define more than 255 enum members, so it won't be backward-compatible, which is a non-issue if simply document it quickly.\n\nI was meaning in terms of passing it through the ABI boundary, a `uint8` value is functionally identical to a `uint256 ` value, and doesn't even impact method selectors when it's passed as a return value. ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434742376/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434760099",
    "html_url": "https://github.com/vyperlang/vyper/issues/3285#issuecomment-1434760099",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285",
    "id": 1434760099,
    "node_id": "IC_kwDOBGDvrM5VhLOj",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-17T14:56:02Z",
    "updated_at": "2023-02-17T14:56:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, I have to say (sorry kinda off-topic, but came to my mind since we're talking about the `uint` types lol): Thank you Vyper for not introducing `uint` as an alias for `uint256`.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434760099/reactions",
      "total_count": 4,
      "+1": 1,
      "-1": 0,
      "laugh": 1,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434765734",
    "html_url": "https://github.com/vyperlang/vyper/issues/3285#issuecomment-1434765734",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285",
    "id": 1434765734,
    "node_id": "IC_kwDOBGDvrM5VhMmm",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-17T14:59:38Z",
    "updated_at": "2023-02-17T14:59:38Z",
    "author_association": "MEMBER",
    "body": "Can you refactor this issue into a VIP based on this discussion? Feels like a VIP",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434765734/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434792068",
    "html_url": "https://github.com/vyperlang/vyper/issues/3285#issuecomment-1434792068",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285",
    "id": 1434792068,
    "node_id": "IC_kwDOBGDvrM5VhTCE",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-17T15:17:49Z",
    "updated_at": "2023-02-17T15:17:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok I refactored it - please take a look and adjust if needed.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434792068/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434820311",
    "html_url": "https://github.com/vyperlang/vyper/issues/3285#issuecomment-1434820311",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285",
    "id": 1434820311,
    "node_id": "IC_kwDOBGDvrM5VhZ7X",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-17T15:39:26Z",
    "updated_at": "2023-02-17T15:39:26Z",
    "author_association": "MEMBER",
    "body": "As an aside, it's definitely very useful to be able to \"skip\" unused items in an enum, in order to leave space for future growth or accommodate unusual behaviors.\n\nTypically in a language that supports it, it would look like the following:\n\n```vyper\nenum Stage:\n    UNCLAIMED = 0\n    # skip ahead, leaving space for future steps\n    CLAIMED = 3\n```\n\n---\n\nAdditionally, something that's very useful for int-like enums is comparison, e.g. `assert self.stage < Stage.CLAIMED`, which is very clear (and not something that we support for flag-style enums since the set-style syntax makes more sense for other types of checks) ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434820311/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434845804",
    "html_url": "https://github.com/vyperlang/vyper/issues/3285#issuecomment-1434845804",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285",
    "id": 1434845804,
    "node_id": "IC_kwDOBGDvrM5VhgJs",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-17T15:59:58Z",
    "updated_at": "2023-02-17T15:59:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "> As an aside, it's definitely very useful to be able to \"skip\" unused items in an enum, in order to leave space for future growth or accommodate unusual behaviors.\r\n\r\nI definitely see the benefit here, but as a caveat, I feel like this skipping behavior can lead to integration issues since the spacing/increments are unclear from the outside.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434845804/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434876408",
    "html_url": "https://github.com/vyperlang/vyper/issues/3285#issuecomment-1434876408",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285",
    "id": 1434876408,
    "node_id": "IC_kwDOBGDvrM5Vhnn4",
    "user": {
      "login": "arjunaskykok",
      "id": 32124593,
      "node_id": "MDQ6VXNlcjMyMTI0NTkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/32124593?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arjunaskykok",
      "html_url": "https://github.com/arjunaskykok",
      "followers_url": "https://api.github.com/users/arjunaskykok/followers",
      "following_url": "https://api.github.com/users/arjunaskykok/following{/other_user}",
      "gists_url": "https://api.github.com/users/arjunaskykok/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arjunaskykok/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arjunaskykok/subscriptions",
      "organizations_url": "https://api.github.com/users/arjunaskykok/orgs",
      "repos_url": "https://api.github.com/users/arjunaskykok/repos",
      "events_url": "https://api.github.com/users/arjunaskykok/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arjunaskykok/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-17T16:24:34Z",
    "updated_at": "2023-02-17T17:26:09Z",
    "author_association": "NONE",
    "body": "Now that we want to open a can of worms, can we support other non-defaults as well? Python has enum `Flag`.\r\n\r\nhttps://docs.python.org/3/library/enum.html#enum.Flag\r\nhttps://dev.to/bjarnemagnussen/enum-vs-flag-for-bitmasks-in-python-2ig8\r\n\r\n```python\r\n@nondefault(flag)\r\nenum Color:\r\n    RED\r\n    GREEN\r\n    BLUE\r\n...\r\npurple = Color.RED | Color.BLUE\r\nColor.BLUE in purple => True\r\nColor.GREEN in purple => False\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434876408/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434880917",
    "html_url": "https://github.com/vyperlang/vyper/issues/3285#issuecomment-1434880917",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285",
    "id": 1434880917,
    "node_id": "IC_kwDOBGDvrM5VhouV",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-17T16:28:21Z",
    "updated_at": "2023-02-17T17:26:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "what's the benefit over the existing flag attributes behavior?\r\n\r\n```vyper\r\nenum Roles:\r\n    MANAGER\r\n    ADMIN\r\n    USER\r\n\r\n@external\r\ndef foo(a: Roles) -> bool:\r\n    return a in (Roles.MANAGER | Roles.USER)\r\n\r\n@external\r\ndef bar(a: Roles) -> bool:\r\n    return a not in (Roles.MANAGER | Roles.USER)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434880917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434907543",
    "html_url": "https://github.com/vyperlang/vyper/issues/3285#issuecomment-1434907543",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285",
    "id": 1434907543,
    "node_id": "IC_kwDOBGDvrM5VhvOX",
    "user": {
      "login": "arjunaskykok",
      "id": 32124593,
      "node_id": "MDQ6VXNlcjMyMTI0NTkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/32124593?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arjunaskykok",
      "html_url": "https://github.com/arjunaskykok",
      "followers_url": "https://api.github.com/users/arjunaskykok/followers",
      "following_url": "https://api.github.com/users/arjunaskykok/following{/other_user}",
      "gists_url": "https://api.github.com/users/arjunaskykok/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arjunaskykok/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arjunaskykok/subscriptions",
      "organizations_url": "https://api.github.com/users/arjunaskykok/orgs",
      "repos_url": "https://api.github.com/users/arjunaskykok/repos",
      "events_url": "https://api.github.com/users/arjunaskykok/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arjunaskykok/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-17T16:49:34Z",
    "updated_at": "2023-02-17T17:27:15Z",
    "author_association": "NONE",
    "body": "Enum `Flag` in Python is much more flexible.\r\n\r\n```python\r\n>>> from enum import Flag, auto\r\n>>> class Color(Flag):\r\n...   RED = auto()\r\n...   GREEN = auto()\r\n...   BLUE = auto()\r\n... \r\n>>> white = Color.RED | Color.GREEN | Color.BLUE\r\n>>> bool(white)\r\nTrue\r\n>>> Color.RED\r\n<Color.RED: 1>\r\n>>> black = Color(0)\r\n>>> bool(black)\r\nFalse\r\n>>> len(Color)\r\n3\r\n>>> black in Color\r\nFalse\r\n>>> white\r\n<Color.BLUE|GREEN|RED: 7>\r\n>>> Color.BLUE in white\r\nTrue\r\n```\r\n\r\nYou cannot do this with the traditional enum.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434907543/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434913003",
    "html_url": "https://github.com/vyperlang/vyper/issues/3285#issuecomment-1434913003",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285",
    "id": 1434913003,
    "node_id": "IC_kwDOBGDvrM5Vhwjr",
    "user": {
      "login": "arjunaskykok",
      "id": 32124593,
      "node_id": "MDQ6VXNlcjMyMTI0NTkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/32124593?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arjunaskykok",
      "html_url": "https://github.com/arjunaskykok",
      "followers_url": "https://api.github.com/users/arjunaskykok/followers",
      "following_url": "https://api.github.com/users/arjunaskykok/following{/other_user}",
      "gists_url": "https://api.github.com/users/arjunaskykok/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arjunaskykok/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arjunaskykok/subscriptions",
      "organizations_url": "https://api.github.com/users/arjunaskykok/orgs",
      "repos_url": "https://api.github.com/users/arjunaskykok/repos",
      "events_url": "https://api.github.com/users/arjunaskykok/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arjunaskykok/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-17T16:54:37Z",
    "updated_at": "2023-02-17T17:27:02Z",
    "author_association": "NONE",
    "body": "I understand that enum in Vyper is modeled after enum Flag. But there are some missing behaviors like converting enum to bool which is not supported right now on Vyper.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434913003/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434920097",
    "html_url": "https://github.com/vyperlang/vyper/issues/3285#issuecomment-1434920097",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285",
    "id": 1434920097,
    "node_id": "IC_kwDOBGDvrM5VhySh",
    "user": {
      "login": "arjunaskykok",
      "id": 32124593,
      "node_id": "MDQ6VXNlcjMyMTI0NTkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/32124593?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arjunaskykok",
      "html_url": "https://github.com/arjunaskykok",
      "followers_url": "https://api.github.com/users/arjunaskykok/followers",
      "following_url": "https://api.github.com/users/arjunaskykok/following{/other_user}",
      "gists_url": "https://api.github.com/users/arjunaskykok/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arjunaskykok/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arjunaskykok/subscriptions",
      "organizations_url": "https://api.github.com/users/arjunaskykok/orgs",
      "repos_url": "https://api.github.com/users/arjunaskykok/repos",
      "events_url": "https://api.github.com/users/arjunaskykok/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arjunaskykok/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-17T16:58:20Z",
    "updated_at": "2023-02-17T17:26:55Z",
    "author_association": "NONE",
    "body": "Forget what I have said about enum Flag, I should direct my complaint to another ticket. Sorry for the inconvenience.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434920097/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434978294",
    "html_url": "https://github.com/vyperlang/vyper/issues/3285#issuecomment-1434978294",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285",
    "id": 1434978294,
    "node_id": "IC_kwDOBGDvrM5ViAf2",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-17T17:25:36Z",
    "updated_at": "2023-02-17T17:26:33Z",
    "author_association": "COLLABORATOR",
    "body": "(for readability, hiding the side discussion into comparison with enum Flags, please see https://github.com/vyperlang/vyper/issues/3289 to follow that side discussion)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434978294/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434996016",
    "html_url": "https://github.com/vyperlang/vyper/issues/3285#issuecomment-1434996016",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285",
    "id": 1434996016,
    "node_id": "IC_kwDOBGDvrM5ViE0w",
    "user": {
      "login": "z80dev",
      "id": 83730246,
      "node_id": "MDQ6VXNlcjgzNzMwMjQ2",
      "avatar_url": "https://avatars.githubusercontent.com/u/83730246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/z80dev",
      "html_url": "https://github.com/z80dev",
      "followers_url": "https://api.github.com/users/z80dev/followers",
      "following_url": "https://api.github.com/users/z80dev/following{/other_user}",
      "gists_url": "https://api.github.com/users/z80dev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/z80dev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/z80dev/subscriptions",
      "organizations_url": "https://api.github.com/users/z80dev/orgs",
      "repos_url": "https://api.github.com/users/z80dev/repos",
      "events_url": "https://api.github.com/users/z80dev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/z80dev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-17T17:32:07Z",
    "updated_at": "2023-02-26T07:00:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this would add a lot of complexity, specially when considering (as mentioned in the VIP) further expansion later to support enum formats from other languages beyond solidity. \r\n\r\nif I was facing this problem today, I would define uint8 constants with values mirroring the enums from the solidity side. this approach would also work for other languages beyond solidity\r\n\r\nthat would let you accomplish the same thing, without adding a whole other layer of complexity to the enum implementation in the compiler.\r\n\r\nedit: adding example of constant uint8\r\n\r\n```python\r\nSolEnum_One: constant(uint8) = 0\r\nSolEnum_Two: constant(uint8) = 1\r\nSolEnum_Three: constant(uint8) = 2\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434996016/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434997246",
    "html_url": "https://github.com/vyperlang/vyper/issues/3285#issuecomment-1434997246",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285",
    "id": 1434997246,
    "node_id": "IC_kwDOBGDvrM5ViFH-",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-17T17:32:32Z",
    "updated_at": "2023-02-17T17:32:32Z",
    "author_association": "COLLABORATOR",
    "body": "the issue with having non-default enum values is that it breaks a lot of semantics, including bitwise operations. to be safe, it would need to be a different type. we could maybe have two different kinds of enum types, `enum` and `flag`, but think that would be confusing.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1434997246/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1435060749",
    "html_url": "https://github.com/vyperlang/vyper/issues/3285#issuecomment-1435060749",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285",
    "id": 1435060749,
    "node_id": "IC_kwDOBGDvrM5ViUoN",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-17T18:16:31Z",
    "updated_at": "2023-02-17T18:23:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "> it would need to be a different type\r\n\r\nouf, that would be really confusing since the type is called usually `enum` cross-language. I see your points (& the ones from @z80dev), but if you do something in a _non-default_ way (such as `unsafe` operations as well) you should be aware of the implications (e.g. in this case flag enum methods would work anymore). Doing something a _non-default_ way should issue a warning as well imho, so people are aware that there might be a footgun. There might be other languages that use even another approach, e.g. Fe, for which it would be nice to have interoperability. To be clear, it's solvable in the current state using constants, but I just don't think it's a nice solution. Just imagine you are forced to implement an `enum` type because of an EIP interface where you can't use `uint8` constants.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1435060749/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1435466469",
    "html_url": "https://github.com/vyperlang/vyper/issues/3285#issuecomment-1435466469",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285",
    "id": 1435466469,
    "node_id": "IC_kwDOBGDvrM5Vj3rl",
    "user": {
      "login": "arjunaskykok",
      "id": 32124593,
      "node_id": "MDQ6VXNlcjMyMTI0NTkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/32124593?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arjunaskykok",
      "html_url": "https://github.com/arjunaskykok",
      "followers_url": "https://api.github.com/users/arjunaskykok/followers",
      "following_url": "https://api.github.com/users/arjunaskykok/following{/other_user}",
      "gists_url": "https://api.github.com/users/arjunaskykok/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arjunaskykok/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arjunaskykok/subscriptions",
      "organizations_url": "https://api.github.com/users/arjunaskykok/orgs",
      "repos_url": "https://api.github.com/users/arjunaskykok/repos",
      "events_url": "https://api.github.com/users/arjunaskykok/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arjunaskykok/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-18T02:50:54Z",
    "updated_at": "2023-02-18T02:51:17Z",
    "author_association": "NONE",
    "body": "One question.\r\n\r\nWhy do we use a decorator instead of a constructor?\r\n\r\n```python\r\n@nondefault(solidity)\r\nenum MyEnum:\r\n  One\r\n  Two\r\n```\r\n\r\nIn Python, we use a constructor.\r\n\r\n```python\r\nclass MyEnum(IntFlag):\r\n  One = auto()\r\n  Two = auto()\r\n```\r\n\r\nDo we use a decorator because we want to emphasize  `nondefault`?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1435466469/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1435564755",
    "html_url": "https://github.com/vyperlang/vyper/issues/3285#issuecomment-1435564755",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285",
    "id": 1435564755,
    "node_id": "IC_kwDOBGDvrM5VkPrT",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-18T10:00:11Z",
    "updated_at": "2023-02-18T10:00:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Why do we use a decorator instead of a constructor?\r\n\r\nBecause of the design principles of Vyper (and the EVM if you will) - the constructor within a smart contract (called [`__init__`](https://docs.vyperlang.org/en/stable/control-structures.html?highlight=decorator#the-init-function) - similar to Python - in Vyper) is called during the contract creation transaction (e.g. to initialise `immutable` variables) and should not be confused with the constructor used in Python. The object we want to instantiate in Vyper is the runtime bytecode of the contract, and imho the type behavior should be clear at _compile-time_ and not at construction-time. Therefore, it makes sense, at least to me, to use a decorator for such an approach.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1435564755/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1435650118",
    "html_url": "https://github.com/vyperlang/vyper/issues/3285#issuecomment-1435650118",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285",
    "id": 1435650118,
    "node_id": "IC_kwDOBGDvrM5VkkhG",
    "user": {
      "login": "arjunaskykok",
      "id": 32124593,
      "node_id": "MDQ6VXNlcjMyMTI0NTkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/32124593?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arjunaskykok",
      "html_url": "https://github.com/arjunaskykok",
      "followers_url": "https://api.github.com/users/arjunaskykok/followers",
      "following_url": "https://api.github.com/users/arjunaskykok/following{/other_user}",
      "gists_url": "https://api.github.com/users/arjunaskykok/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arjunaskykok/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arjunaskykok/subscriptions",
      "organizations_url": "https://api.github.com/users/arjunaskykok/orgs",
      "repos_url": "https://api.github.com/users/arjunaskykok/repos",
      "events_url": "https://api.github.com/users/arjunaskykok/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arjunaskykok/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-18T11:42:44Z",
    "updated_at": "2023-02-18T11:42:44Z",
    "author_association": "NONE",
    "body": "If we're going to take the decorator path, maybe we should find another name for the decorator. `nondefault` indicates that this is one time case. But in the future, we might add other cases for enum types. For example:\r\n\r\n```python\r\n@enumtype(soliditycompat)\r\nenum MyEnum:\r\n  One\r\n  Two\r\n\r\nMyEnum.One => 0\r\n\r\n@enumtype(string)\r\nenum MyEnum:\r\n  One\r\n  Two\r\n\r\nMyEnum.Two => \"Two\"\r\n```\r\nI'm not saying `enumtype` is a good name though.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1435650118/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1435653008",
    "html_url": "https://github.com/vyperlang/vyper/issues/3285#issuecomment-1435653008",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3285",
    "id": 1435653008,
    "node_id": "IC_kwDOBGDvrM5VklOQ",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-18T11:58:48Z",
    "updated_at": "2023-02-18T11:58:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think before we decide about the name of anything, we should decide if we want to go that path at all. That's step 1 imho. ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1435653008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
