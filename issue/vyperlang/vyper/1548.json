{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/1548",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/1548/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/1548/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/1548/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/1548",
  "id": 472339979,
  "node_id": "MDU6SXNzdWU0NzIzMzk5Nzk=",
  "number": 1548,
  "title": "VIP: Implement delegate_call for contract interfaces",
  "user": {
    "login": "brockelmore",
    "id": 31553173,
    "node_id": "MDQ6VXNlcjMxNTUzMTcz",
    "avatar_url": "https://avatars.githubusercontent.com/u/31553173?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/brockelmore",
    "html_url": "https://github.com/brockelmore",
    "followers_url": "https://api.github.com/users/brockelmore/followers",
    "following_url": "https://api.github.com/users/brockelmore/following{/other_user}",
    "gists_url": "https://api.github.com/users/brockelmore/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/brockelmore/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brockelmore/subscriptions",
    "organizations_url": "https://api.github.com/users/brockelmore/orgs",
    "repos_url": "https://api.github.com/users/brockelmore/repos",
    "events_url": "https://api.github.com/users/brockelmore/events{/privacy}",
    "received_events_url": "https://api.github.com/users/brockelmore/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1723982050,
      "node_id": "MDU6TGFiZWwxNzIzOTgyMDUw",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Deferred",
      "name": "VIP: Deferred",
      "color": "c5def5",
      "default": false,
      "description": "VIP is not scheduled to move forward at this time"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 16,
  "created_at": "2019-07-24T15:10:58Z",
  "updated_at": "2020-01-24T03:21:05Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Simple Summary\r\nAllow contract interface functions to be called as `DELEGATECALL` instead of just staticcall or call\r\n\r\n## Abstract\r\nImplement an optional argument to external_contract_call that allows developers to specify whether the external function should be called as delegate_call.\r\n\r\n## Motivation\r\nTo allow for use of proxy contracts without having to raw_call and deal with the hassles around that.\r\n\r\n## Specification\r\nLooking at [https://github.com/ethereum/vyper/blob/master/vyper/parser/external_call.py](url), way to do this would be something like this:\r\n```\r\ndef external_contract_call(node,\r\n                           context,\r\n                           contract_name,\r\n                           contract_address,\r\n                           pos,\r\n                           value=None,\r\n                           gas=None,\r\n                           delegate_call=None):\r\n```\r\nWhere default would be false and the call stays as non-delegate.\r\n\r\nI think we would just need to add something comparable to what is currently used in raw_call [https://github.com/ethereum/vyper/blob/f890abe1907d9c4329950c400f348f9102a5263b/vyper/functions/functions.py#L667](url)\r\n\r\n```\r\n    if delegate_call.value == 1:\r\n        z = LLLnode.from_list(\r\n            [\r\n                'seq',\r\n                copier,\r\n                [\r\n                    'assert',\r\n                    [\r\n                        'delegatecall',\r\n                        gas,\r\n                        to,\r\n                        ['add', placeholder_node, 32],\r\n                        ['mload', placeholder_node],\r\n                        ['add', output_node, 32],\r\n                        outsize,\r\n                    ],\r\n                ],\r\n                ['mstore', output_node, outsize],\r\n                output_node,\r\n            ],\r\n            typ=ByteArrayType(outsize),\r\n            location='memory',\r\n            pos=getpos(expr),\r\n        )\r\n```\r\nFrom what I can tell, here are the functions that would need to change and how to change them potentially. I don't have full knowledge of underlying functions so these are best guesses.\r\n```\r\ndef get_external_contract_keywords(stmt_expr, context):\r\n    from vyper.parser.expr import Expr\r\n    value, gas = None, None\r\n    for kw in stmt_expr.keywords:\r\n        if kw.arg not in ('value', 'gas', 'delegate_call'):\r\n            raise TypeMismatchException(\r\n                'Invalid keyword argument, only \"gas\", :\"value\", and \"delegate_call\" supported.',\r\n                stmt_expr,\r\n            )\r\n        elif kw.arg == 'gas':\r\n            gas = Expr.parse_value_expr(kw.value, context)\r\n        elif kw.arg == 'value':\r\n            value = Expr.parse_value_expr(kw.value, context)\r\n        elif kw.arg == 'delegate_call':\r\n            delegate_call = Expr.parse_value_expr(kw.value, context)\r\n    return value, gas, delegate_call\r\n```\r\n```\r\ndef external_contract_call(node,\r\n                           context,\r\n                           contract_name,\r\n                           contract_address,\r\n                           pos,\r\n                           value=None,\r\n                           gas=None,\r\n                           delegate_call=None):\r\n    from vyper.parser.expr import (\r\n        Expr,\r\n    )\r\n    if value is None:\r\n        value = 0\r\n    if gas is None:\r\n        gas = 'gas'\r\n    if delegate_call is None:\r\n        delegate_call = False\r\n    if not contract_name:\r\n        raise StructureException(\r\n            f'Invalid external contract call \"{node.func.attr}\".',\r\n            node\r\n        )\r\n    if contract_name not in context.sigs:\r\n        raise VariableDeclarationException(\r\n            f'Contract \"{contract_name}\" not declared yet',\r\n            node\r\n        )\r\n    method_name = node.func.attr\r\n    if method_name not in context.sigs[contract_name]:\r\n        raise FunctionDeclarationException(\r\n            (\r\n                \"Function not declared yet: %s (reminder: \"\r\n                \"function must be declared in the correct contract)\"\r\n                \" The available methods are: %s\"\r\n            ) % (method_name, \",\".join(context.sigs[contract_name].keys())),\r\n            node.func\r\n        )\r\n    sig = context.sigs[contract_name][method_name]\r\n    inargs, inargsize, _ = pack_arguments(\r\n        sig,\r\n        [Expr(arg, context).lll_node for arg in node.args],\r\n        context,\r\n        pos=pos,\r\n    )\r\n    output_placeholder, output_size, returner = get_external_contract_call_output(sig, context)\r\n    sub = [\r\n        'seq',\r\n        ['assert', ['extcodesize', contract_address]],\r\n        ['assert', ['ne', 'address', contract_address]],\r\n    ]\r\n    # NOTE: I don't know how accurate this change is, I am just guessing based on raw_call\r\n    if delegate_call == True:\r\n        sub.append(\r\n            [\r\n                'seq',\r\n                copier,\r\n                [\r\n                    'assert',\r\n                    [\r\n                        'delegatecall',\r\n                        gas,\r\n                        contract_address,\r\n                        ['add', placeholder_node, 32],\r\n                        ['mload', placeholder_node],\r\n                        ['add', output_node, 32],\r\n                        outsize,\r\n                    ],\r\n                ],\r\n                ['mstore', output_node, outsize],\r\n                output_node,\r\n            ]\r\n        )\r\n    elif context.is_constant() or sig.const:\r\n        sub.append([\r\n            'assert',\r\n            [\r\n                'staticcall',\r\n                gas, contract_address, inargs, inargsize, output_placeholder, output_size,\r\n            ]\r\n        ])\r\n    else:\r\n        sub.append([\r\n            'assert',\r\n            [\r\n                'call',\r\n                gas, contract_address, value, inargs, inargsize, output_placeholder, output_size,\r\n            ]\r\n        ])\r\n    sub.extend(returner)\r\n    o = LLLnode.from_list(sub, typ=sig.output_type, location='memory', pos=getpos(node))\r\n    return o\r\n```\r\n\r\nAnd I am not sure what changes would need to be made to `make_external_call(stmt_expr, context)`\r\n## Backwards Compatibility\r\nFully compatible as far as I am aware of, but not sure\r\n\r\n## Dependencies\r\nNone that I am aware of.\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/1548/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/1548/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/514677891",
    "html_url": "https://github.com/vyperlang/vyper/issues/1548#issuecomment-514677891",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1548",
    "id": 514677891,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDY3Nzg5MQ==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T15:20:47Z",
    "updated_at": "2019-07-24T15:20:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@brockelmore raw_call does have support for delegate call.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/514677891/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/514678517",
    "html_url": "https://github.com/vyperlang/vyper/issues/1548#issuecomment-514678517",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1548",
    "id": 514678517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDY3ODUxNw==",
    "user": {
      "login": "brockelmore",
      "id": 31553173,
      "node_id": "MDQ6VXNlcjMxNTUzMTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31553173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brockelmore",
      "html_url": "https://github.com/brockelmore",
      "followers_url": "https://api.github.com/users/brockelmore/followers",
      "following_url": "https://api.github.com/users/brockelmore/following{/other_user}",
      "gists_url": "https://api.github.com/users/brockelmore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brockelmore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brockelmore/subscriptions",
      "organizations_url": "https://api.github.com/users/brockelmore/orgs",
      "repos_url": "https://api.github.com/users/brockelmore/repos",
      "events_url": "https://api.github.com/users/brockelmore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brockelmore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T15:22:17Z",
    "updated_at": "2019-07-24T15:22:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @brockelmore raw_call does have support for delegate call.\r\n\r\nI know - this is to allow contract interfaces to be called as delegate_call so that as a developer I don't have to use raw_call and all the hassles that come with it",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/514678517/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/514678658",
    "html_url": "https://github.com/vyperlang/vyper/issues/1548#issuecomment-514678658",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1548",
    "id": 514678658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDY3ODY1OA==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T15:22:37Z",
    "updated_at": "2019-07-24T15:22:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah I see, my bad.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/514678658/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/514684323",
    "html_url": "https://github.com/vyperlang/vyper/issues/1548#issuecomment-514684323",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1548",
    "id": 514684323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDY4NDMyMw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T15:36:21Z",
    "updated_at": "2019-07-24T15:36:21Z",
    "author_association": "MEMBER",
    "body": "I like this proposal, but I'm curious if supporting it in a different way might be clearer:\r\n\r\n```python\r\ncontract MyInterface:\r\n    def static_call():    constant   # Uses STATICCALL\r\n    def normal_call():    modifying  # Uses CALL\r\n    def delegated_call(): delgating  # Uses DELGATECALL\r\n```\r\n\r\nWhat do you guys think of this instead?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/514684323/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/514685175",
    "html_url": "https://github.com/vyperlang/vyper/issues/1548#issuecomment-514685175",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1548",
    "id": 514685175,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDY4NTE3NQ==",
    "user": {
      "login": "brockelmore",
      "id": 31553173,
      "node_id": "MDQ6VXNlcjMxNTUzMTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31553173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brockelmore",
      "html_url": "https://github.com/brockelmore",
      "followers_url": "https://api.github.com/users/brockelmore/followers",
      "following_url": "https://api.github.com/users/brockelmore/following{/other_user}",
      "gists_url": "https://api.github.com/users/brockelmore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brockelmore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brockelmore/subscriptions",
      "organizations_url": "https://api.github.com/users/brockelmore/orgs",
      "repos_url": "https://api.github.com/users/brockelmore/repos",
      "events_url": "https://api.github.com/users/brockelmore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brockelmore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T15:38:30Z",
    "updated_at": "2019-07-24T15:38:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I like this proposal, but I'm curious if supporting it in a different way might be clearer:\r\n> \r\n> ```python\r\n> contract MyInterface:\r\n>     def static_call():    constant   # Uses STATICCALL\r\n>     def normal_call():    modifying  # Uses CALL\r\n>     def delegated_call(): delgating  # Uses DELGATECALL\r\n> ```\r\n> \r\n> What do you guys think of this instead?\r\n\r\nLove this, thought briefly about implementing this way but not well versed enough to know how it might be done",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/514685175/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/514685851",
    "html_url": "https://github.com/vyperlang/vyper/issues/1548#issuecomment-514685851",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1548",
    "id": 514685851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDY4NTg1MQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T15:40:09Z",
    "updated_at": "2019-07-24T15:40:09Z",
    "author_association": "MEMBER",
    "body": "Yeah, not sure if it is flexible enough but I think it would be clearer than sneaking a `delgatecall=True` into a call. Still 50-50 on which is best. Will have to discuss in the next meeting! #1541",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/514685851/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/514687201",
    "html_url": "https://github.com/vyperlang/vyper/issues/1548#issuecomment-514687201",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1548",
    "id": 514687201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDY4NzIwMQ==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T15:43:29Z",
    "updated_at": "2019-07-24T15:45:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Applying on the interface is definitely cleaner, but wold make the risky call less clear - at the point in the code where one calls the function. Also using delegatecall=True as kwarg would allow CALL/DELEGATECALL using the same function signature - or would specific functions always be delegated functions ?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/514687201/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/514707194",
    "html_url": "https://github.com/vyperlang/vyper/issues/1548#issuecomment-514707194",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1548",
    "id": 514707194,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDcwNzE5NA==",
    "user": {
      "login": "brockelmore",
      "id": 31553173,
      "node_id": "MDQ6VXNlcjMxNTUzMTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31553173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brockelmore",
      "html_url": "https://github.com/brockelmore",
      "followers_url": "https://api.github.com/users/brockelmore/followers",
      "following_url": "https://api.github.com/users/brockelmore/following{/other_user}",
      "gists_url": "https://api.github.com/users/brockelmore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brockelmore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brockelmore/subscriptions",
      "organizations_url": "https://api.github.com/users/brockelmore/orgs",
      "repos_url": "https://api.github.com/users/brockelmore/repos",
      "events_url": "https://api.github.com/users/brockelmore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brockelmore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T16:36:17Z",
    "updated_at": "2019-07-24T16:36:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "In my mind, I can't think of when I would want one function to sometimes be delegating and sometimes not, but the use case may be out there. If it is implemented as kwarg, then it inherently can be called as both, although I don't know if that is the best and maybe should be locked down? If we can think of a use case, it may make sense to allow both call/delegatecall\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/514707194/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/514840285",
    "html_url": "https://github.com/vyperlang/vyper/issues/1548#issuecomment-514840285",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1548",
    "id": 514840285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDg0MDI4NQ==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T23:48:22Z",
    "updated_at": "2019-07-24T23:48:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "The problem with delegating a function is that you end up overwriting locally defined globals _super easily_.\r\nFor a proxy contract we would need to implement `msg.data`.\r\nIf you want to proxy we have `create_forwarder_to` that helps with the factory pattern.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/514840285/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/514840668",
    "html_url": "https://github.com/vyperlang/vyper/issues/1548#issuecomment-514840668",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1548",
    "id": 514840668,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDg0MDY2OA==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T23:50:29Z",
    "updated_at": "2019-07-24T23:51:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I.e. for every variable slot in the calling contract you would need an empty spacer slot in the called contact.\r\nOr else you end up corrupting the calling contract.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/514840668/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/514888078",
    "html_url": "https://github.com/vyperlang/vyper/issues/1548#issuecomment-514888078",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1548",
    "id": 514888078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDg4ODA3OA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-25T04:12:20Z",
    "updated_at": "2019-07-25T04:12:20Z",
    "author_association": "MEMBER",
    "body": "This one's definitely going to take some talking through, but we'll figure out a good, safe solution",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/514888078/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/518719264",
    "html_url": "https://github.com/vyperlang/vyper/issues/1548#issuecomment-518719264",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1548",
    "id": 518719264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODcxOTI2NA==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-06T15:25:38Z",
    "updated_at": "2019-08-06T15:25:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not accepted, in favour of exposing `msg.data` https://github.com/ethereum/vyper/issues/1181 instead - allowing you to implement proxy pattern in your default function.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/518719264/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/518720785",
    "html_url": "https://github.com/vyperlang/vyper/issues/1548#issuecomment-518720785",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1548",
    "id": 518720785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODcyMDc4NQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-06T15:29:18Z",
    "updated_at": "2019-08-06T15:29:18Z",
    "author_association": "MEMBER",
    "body": "A little further explanation: there is a difficultly when implementing more general delegated call patterns where target and source storage slots may conflict, and can lead to subtle security bugs we do not want to introduce to the language. #1181 should allow you to get the majority of the functionality you require, at the expense of a little more complexity in how you configure this pattern.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/518720785/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/518722533",
    "html_url": "https://github.com/vyperlang/vyper/issues/1548#issuecomment-518722533",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1548",
    "id": 518722533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODcyMjUzMw==",
    "user": {
      "login": "brockelmore",
      "id": 31553173,
      "node_id": "MDQ6VXNlcjMxNTUzMTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31553173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brockelmore",
      "html_url": "https://github.com/brockelmore",
      "followers_url": "https://api.github.com/users/brockelmore/followers",
      "following_url": "https://api.github.com/users/brockelmore/following{/other_user}",
      "gists_url": "https://api.github.com/users/brockelmore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brockelmore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brockelmore/subscriptions",
      "organizations_url": "https://api.github.com/users/brockelmore/orgs",
      "repos_url": "https://api.github.com/users/brockelmore/repos",
      "events_url": "https://api.github.com/users/brockelmore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brockelmore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-06T15:33:22Z",
    "updated_at": "2019-08-06T15:33:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Not accepted, in favour of exposing `msg.data` #1181 instead - allowing you to implement proxy pattern in your default function.\r\n\r\nShould I go ahead and close then?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/518722533/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/518725210",
    "html_url": "https://github.com/vyperlang/vyper/issues/1548#issuecomment-518725210",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1548",
    "id": 518725210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODcyNTIxMA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-06T15:39:39Z",
    "updated_at": "2019-08-06T15:39:39Z",
    "author_association": "MEMBER",
    "body": "I think we keep VIPs open if they're being passed on for now, because they could be implemented in the future, and we want to make it easy to search for.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/518725210/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/518734734",
    "html_url": "https://github.com/vyperlang/vyper/issues/1548#issuecomment-518734734",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1548",
    "id": 518734734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODczNDczNA==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-06T16:02:46Z",
    "updated_at": "2019-08-06T16:02:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@brockelmore we can keep it open until #1181 gets implemented.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/518734734/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
