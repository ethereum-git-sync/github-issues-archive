{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/3648",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/3648/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/3648/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/3648/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/3648",
  "id": 1943106435,
  "node_id": "I_kwDOBGDvrM5z0XOD",
  "number": 3648,
  "title": "Allow non-literal values as default arguments",
  "user": {
    "login": "pcaversaccio",
    "id": 25297591,
    "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pcaversaccio",
    "html_url": "https://github.com/pcaversaccio",
    "followers_url": "https://api.github.com/users/pcaversaccio/followers",
    "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
    "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
    "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
    "repos_url": "https://api.github.com/users/pcaversaccio/repos",
    "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-10-14T09:07:31Z",
  "updated_at": "2023-10-14T09:13:57Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "I think it would be a nice feature to allow non-literal values as default arguments.\r\n\r\n## Example Use Case\r\n\r\n```vy\r\n# pragma version ^0.3.10\r\n\r\n\r\n_COLLISION_OFFSET: constant(bytes1) = 0xFF\r\n\r\n\r\n@external\r\n@pure\r\ndef compute_address(salt: bytes32, bytecode_hash: bytes32, deployer: address=self) -> address:\r\n    \"\"\"\r\n    @dev Returns the address where a contract will be stored if\r\n         deployed via `deployer` using the `CREATE2` opcode.\r\n         Any change in the `bytecode_hash` or `salt` values will\r\n         result in a new destination address.\r\n    @param salt The 32-byte random value used to create the contract\r\n           address.\r\n    @param bytecode_hash The 32-byte bytecode digest of the contract\r\n           creation bytecode.\r\n    @return address The 20-byte address where a contract will be stored.\r\n    \"\"\"\r\n    data: bytes32 = keccak256(concat(_COLLISION_OFFSET, convert(deployer, bytes20), salt, bytecode_hash))\r\n    return convert(convert(data, uint256) & convert(max_value(uint160), uint256), address)\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/3648/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/3648/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
