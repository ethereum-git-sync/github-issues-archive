{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/1966",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/1966/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/1966/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/1966/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/1966",
  "id": 617195389,
  "node_id": "MDU6SXNzdWU2MTcxOTUzODk=",
  "number": 1966,
  "title": "No compilation error raised when Map in Struct",
  "user": {
    "login": "henry-hz",
    "id": 1010008,
    "node_id": "MDQ6VXNlcjEwMTAwMDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1010008?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/henry-hz",
    "html_url": "https://github.com/henry-hz",
    "followers_url": "https://api.github.com/users/henry-hz/followers",
    "following_url": "https://api.github.com/users/henry-hz/following{/other_user}",
    "gists_url": "https://api.github.com/users/henry-hz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/henry-hz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/henry-hz/subscriptions",
    "organizations_url": "https://api.github.com/users/henry-hz/orgs",
    "repos_url": "https://api.github.com/users/henry-hz/repos",
    "events_url": "https://api.github.com/users/henry-hz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/henry-hz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 479554962,
      "node_id": "MDU6TGFiZWw0Nzk1NTQ5NjI=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/bug",
      "name": "bug",
      "color": "ee0701",
      "default": true,
      "description": "Bug that shouldn't change language semantics when fixed."
    },
    {
      "id": 895812894,
      "node_id": "MDU6TGFiZWw4OTU4MTI4OTQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/documentation",
      "name": "documentation",
      "color": "fcbdea",
      "default": true,
      "description": "Documentation"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/vyperlang/vyper/milestones/1",
    "html_url": "https://github.com/vyperlang/vyper/milestone/1",
    "labels_url": "https://api.github.com/repos/vyperlang/vyper/milestones/1/labels",
    "id": 5566144,
    "node_id": "MDk6TWlsZXN0b25lNTU2NjE0NA==",
    "number": 1,
    "title": "v0.2.0 Release",
    "description": "",
    "creator": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 39,
    "state": "closed",
    "created_at": "2020-06-21T23:16:54Z",
    "updated_at": "2020-07-06T18:38:03Z",
    "due_on": "2020-07-05T07:00:00Z",
    "closed_at": "2020-07-06T18:38:03Z"
  },
  "comments": 7,
  "created_at": "2020-05-13T06:59:56Z",
  "updated_at": "2020-06-25T21:42:33Z",
  "closed_at": "2020-06-25T21:42:32Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Version Information\r\n\r\n* vyper Version (output of `vyper --version`): 0.1.0b17+commit.eaa6754\r\n* OS: Debian GNU/Linux 10 (buster)\r\n* Python Version - 3.6.2\r\n* Environment (output of `pip freeze`):\r\n\r\nasttokens==2.0.3\r\npkg-resources==0.0.0\r\npycryptodome==3.9.7\r\nsix==1.14.0\r\nvyper==0.1.0b17\r\n\r\n\r\n### What's your issue about?\r\n\r\nCan't populate a single struct without adding an inside mapping when using a struct declaration variable inside a function\r\n\r\n```\r\nstruct Teddy:\r\n    id: uint256\r\n    year: uint256\r\n    component: map(uint256, uint256)\r\n\r\nteddies: map(uint256, Teddy)\r\n\r\n@public\r\ndef __init__():\r\n    self.teddies[0].id = 0\r\n    self.teddies[0].year = 2019\r\n\r\n@public\r\ndef create_teddy(teddy_name: string[20]):\r\n  teddy: Teddy = Teddy({\r\n        id: 3,\r\n        year: 1922\r\n      })\r\n```\r\n\r\noutput:\r\n```\r\nvyper.exceptions.InvalidType: line 4:15 No mappings allowed for in-memory types, only fixed-size arrays\r\n     3     year: uint256\r\n---> 4     component: map(uint256, uint256)\r\n----------------------^\r\n```\r\n\r\n### How can it be fixed?\r\n\r\ntip: strange, cleaning the function 'create_teddy' you just compile it... the context is affecting how the compiler 'understand' the struct declaration. I also tried to:\r\n\r\n```\r\n self.teddies[0] = Teddy({\r\n        id: 3,\r\n        year: 1922\r\n      })\r\n```\r\n\r\nbut got a \r\n```\r\nvyper.exceptions.TypeMismatch: line 15:2 Keys don't match for structs, missing component\r\n```\r\n\r\n\r\n\r\n\r\n",
  "closed_by": {
    "login": "iamdefinitelyahuman",
    "id": 35276322,
    "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
    "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/iamdefinitelyahuman",
    "html_url": "https://github.com/iamdefinitelyahuman",
    "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
    "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
    "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
    "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
    "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
    "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/1966/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/1966/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/627948506",
    "html_url": "https://github.com/vyperlang/vyper/issues/1966#issuecomment-627948506",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1966",
    "id": 627948506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNzk0ODUwNg==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-13T12:27:29Z",
    "updated_at": "2020-05-13T12:27:29Z",
    "author_association": "MEMBER",
    "body": "I'm not sure I understand the issue.\r\n\r\nIt is true that we currently disallow a struct from containing an inner mapping, so the `vyper.exceptions.InvalidType` error makes sense. It is also true that you cannot initialize a struct without all of it's members present, so the `vyper.exceptions.TypeMismatch` also makes sense.\r\n\r\nIs your bug about the relative ordering of these two issues, and how they change when you add a new function? Ordering of error reporting is not guaranteed if you change the contents of the source file, certain checks happen in different stages so one may occur earlier than another check.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/627948506/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/628051625",
    "html_url": "https://github.com/vyperlang/vyper/issues/1966#issuecomment-628051625",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1966",
    "id": 628051625,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODA1MTYyNQ==",
    "user": {
      "login": "henry-hz",
      "id": 1010008,
      "node_id": "MDQ6VXNlcjEwMTAwMDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1010008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/henry-hz",
      "html_url": "https://github.com/henry-hz",
      "followers_url": "https://api.github.com/users/henry-hz/followers",
      "following_url": "https://api.github.com/users/henry-hz/following{/other_user}",
      "gists_url": "https://api.github.com/users/henry-hz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/henry-hz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/henry-hz/subscriptions",
      "organizations_url": "https://api.github.com/users/henry-hz/orgs",
      "repos_url": "https://api.github.com/users/henry-hz/repos",
      "events_url": "https://api.github.com/users/henry-hz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/henry-hz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-13T15:03:51Z",
    "updated_at": "2020-05-13T15:37:54Z",
    "author_association": "NONE",
    "body": "Thanks for the answer,\r\ninteresting, seems that it's not clear in the docs, and people think that inner mapping is okay:\r\nhttps://ethereum.stackexchange.com/questions/74467/vyper-mapping-inside-a-struct\r\n\r\nIn fact I do compile without all members, the error only appear when more conditions are in the same time:\r\n1. struct with inner map\r\n2. populate the struct using MyStruct({bla: bla})\r\n\r\nbut if I don't use inner map, or if I use the myStruct[key] = value way, the compilers gives me an okay to move ahead, as in the example below. If it's not a bug, it is at least ambiguous.\r\n\r\n```\r\nstruct Policy:                                                       \r\n  name:             string[20]                                                            \r\n  designer:         address               \r\n  premium:          uint256\r\n  agreed:           uint256                    \r\n  payback_peridod:  uint256               \r\n  accepted_delay:   uint256             \r\n         \r\n\r\n@public\r\ndef create_policy(name: string[20], premium: uint256, agreed: uint256) -> bytes32:\r\n  hash: bytes32 = keccak256(name)\r\n  self.policies[hash] = Policy({\r\n        name: name,\r\n        designer: msg.sender,\r\n        premium: premium,\r\n        agreed: agreed\r\n      })\r\n  return hash                                        \r\n```\r\n\r\nPlease, also notice that 'Computable' is indeed using inner map [here](https://github.com/computablelabs/computable/blob/master/contracts/Voting.vy)\r\n```\r\nstakes: map(address, map(bytes32, wei_value)) # user -> candidate -> $\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/628051625/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/628077121",
    "html_url": "https://github.com/vyperlang/vyper/issues/1966#issuecomment-628077121",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1966",
    "id": 628077121,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODA3NzEyMQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-13T15:44:36Z",
    "updated_at": "2020-05-13T15:44:54Z",
    "author_association": "MEMBER",
    "body": "So, a few things:\r\n1. Maps of maps are fine (e.g. the Computable Labs example)\r\n2. Your example with `Policy` is fine, `string[20]` can be a member of a struct as it has a defined size (e.g. 20 bytes)\r\n3. When you set something indirectly via `myStruct[key] = value` it will indeed not cause a problem because you are not trying to initialize a struct containing unsized data\r\n4. It is indeed a bug that a `map` can be a member of a struct, we didn't have a check for that but we are working on a refactor where we can add a check\r\n5. I agree that there are ambiguities to this that should be addressed in the documentation so people are aware of what works and what doesn't",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/628077121/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/628571967",
    "html_url": "https://github.com/vyperlang/vyper/issues/1966#issuecomment-628571967",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1966",
    "id": 628571967,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODU3MTk2Nw==",
    "user": {
      "login": "henry-hz",
      "id": 1010008,
      "node_id": "MDQ6VXNlcjEwMTAwMDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1010008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/henry-hz",
      "html_url": "https://github.com/henry-hz",
      "followers_url": "https://api.github.com/users/henry-hz/followers",
      "following_url": "https://api.github.com/users/henry-hz/following{/other_user}",
      "gists_url": "https://api.github.com/users/henry-hz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/henry-hz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/henry-hz/subscriptions",
      "organizations_url": "https://api.github.com/users/henry-hz/orgs",
      "repos_url": "https://api.github.com/users/henry-hz/repos",
      "events_url": "https://api.github.com/users/henry-hz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/henry-hz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-14T11:29:23Z",
    "updated_at": "2020-05-14T11:30:02Z",
    "author_association": "NONE",
    "body": "Thanks for the feedback @fubuloubu . In fact, I will miss the feature that \"a map can't be a member of a struct\"... that is found in solidity. If you can, please, could you explain me what was the design decision to leave it out, and how would you rewrite the, for example,   '    mapping(address => uint256) balances; ' nested in the struct below [in solidity] ?\r\n```\r\n  struct Circle {\r\n    address owner;\r\n    string name;\r\n    address[] members;\r\n    uint256 currentIndex;\r\n    uint256 depositAmount;\r\n    address tokenAddress;\r\n    uint256 timestamp;\r\n    mapping(address => uint256) balances;\r\n  }\r\n```\r\n in [this](https://github.com/celo-org/savings-circle-demo/blob/master/contracts/SavingsCircle.sol) contract ?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/628571967/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/628653320",
    "html_url": "https://github.com/vyperlang/vyper/issues/1966#issuecomment-628653320",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1966",
    "id": 628653320,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODY1MzMyMA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-14T13:55:58Z",
    "updated_at": "2020-05-14T13:55:58Z",
    "author_association": "MEMBER",
    "body": "Allowing a member of undefined size (a mapping) in a struct makes it unsized, meaning it cannot be used for operations that require a known size such as using it as a function argument, event arg, etc. To allow structs to have undefined size members, we would have to add a lot of complex checking around _how_ the struct would be used, throwing if it were used in any one of these scenarios (hopefully referencing the original definition so it's clear to the user what needs to be fixed). It has an easy work around, so it's not been a priority to add this functionality, although you're more than welcome to submit a PR. In your example:\r\n```python\r\nstruct Circle:\r\n    owner: address\r\n    string name: string[N]  # You need to specify N \r\n    # we don't have a way of specifying dynamic arrays yet\r\n    members: address[N]  # You need to specify N\r\n    currentIndex: uint256\r\n    depositAmount: uint256\r\n    tokenAddress: address\r\n    timestamp: uint256\r\n\r\n# Key of this mapping is Circle.owner\r\ncircleBalances: map(address, uint256)\r\n```\r\n\r\nThe trick is to use an important, unique member of the `Circle` struct to serve as the lookup key in `circleBalances`. It requires a bit of thought, but you can probably shave a lot of the extra members in `Circle` with a bit of thought on how they're used.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/628653320/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/629771042",
    "html_url": "https://github.com/vyperlang/vyper/issues/1966#issuecomment-629771042",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1966",
    "id": 629771042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTc3MTA0Mg==",
    "user": {
      "login": "henry-hz",
      "id": 1010008,
      "node_id": "MDQ6VXNlcjEwMTAwMDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1010008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/henry-hz",
      "html_url": "https://github.com/henry-hz",
      "followers_url": "https://api.github.com/users/henry-hz/followers",
      "following_url": "https://api.github.com/users/henry-hz/following{/other_user}",
      "gists_url": "https://api.github.com/users/henry-hz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/henry-hz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/henry-hz/subscriptions",
      "organizations_url": "https://api.github.com/users/henry-hz/orgs",
      "repos_url": "https://api.github.com/users/henry-hz/repos",
      "events_url": "https://api.github.com/users/henry-hz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/henry-hz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-17T09:47:28Z",
    "updated_at": "2020-05-17T09:47:28Z",
    "author_association": "NONE",
    "body": "Thanks @fubuloubu for dedicating time to help me, I will stick with this approach you suggested.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/629771042/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/649832548",
    "html_url": "https://github.com/vyperlang/vyper/issues/1966#issuecomment-649832548",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1966",
    "id": 649832548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTgzMjU0OA==",
    "user": {
      "login": "iamdefinitelyahuman",
      "id": 35276322,
      "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdefinitelyahuman",
      "html_url": "https://github.com/iamdefinitelyahuman",
      "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
      "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
      "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
      "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-25T21:42:32Z",
    "updated_at": "2020-06-25T21:42:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closed in #2027 ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/649832548/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
