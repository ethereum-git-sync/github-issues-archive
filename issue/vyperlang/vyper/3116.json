{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/3116",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/3116/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/3116/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/3116/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/3116",
  "id": 1397617411,
  "node_id": "I_kwDOBGDvrM5TTfMD",
  "number": 3116,
  "title": "VIP: Implement `EXTCODESIZE` check for `raw_call`",
  "user": {
    "login": "pcaversaccio",
    "id": 25297591,
    "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pcaversaccio",
    "html_url": "https://github.com/pcaversaccio",
    "followers_url": "https://api.github.com/users/pcaversaccio/followers",
    "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
    "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
    "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
    "repos_url": "https://api.github.com/users/pcaversaccio/repos",
    "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-10-05T11:04:53Z",
  "updated_at": "2022-10-05T14:31:39Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Simple Summary\r\n\r\nAdd a new kwarg `is_contract` to `raw_call` that performs an `EXTCODESIZE` check for the `to` address. By default, this is `False`. Also, we need to highlight that this check will return `False` for a `to` address in construction.\r\n\r\n## Motivation\r\n\r\nGenerally, the low-level functions `call`, `delegatecall` and `staticcall` return `true` as their first return value if the account called is non-existent, as part of the design of the EVM. For certain use cases, it could be useful to enforce that the called `to` address is checked for existing code, and reverted if this requirement is not met.\r\n\r\nCurrently, if I would like to ensure such a check I could use the address member `is_contract` to do so:\r\n\r\n```vyper\r\naddr: address = to\r\nif (to.is_contract):\r\n    raw_call(to, ...)\r\n```\r\n\r\nI think a built-in kwarg for `raw_call` is much cleaner.\r\n\r\n## Specification\r\n\r\n```vyper\r\nraw_call(to: address, data: Bytes, max_outsize: int = 0, gas: uint256 = gasLeft,\r\nvalue: uint256 = 0, is_delegate_call: bool = False, is_static_call: bool = False,\r\nrevert_on_failure: bool = True, is_contract: bool = False)â†’ Bytes[max_outsize]\r\n```\r\n\r\n## Backwards Compatibility\r\n\r\nNo issues known since we set the default to `False`.\r\n\r\n## Dependencies\r\n\r\nNo known dependencies.\r\n\r\n## References\r\n\r\nNot that I'm aware of.\r\n\r\n## Copyright\r\n\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/3116/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/3116/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
