{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/884",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/884/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/884/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/884/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/884",
  "id": 330881997,
  "node_id": "MDU6SXNzdWUzMzA4ODE5OTc=",
  "number": 884,
  "title": "VIP: Function overloading for interface compatibility",
  "user": {
    "login": "maurelian",
    "id": 23033765,
    "node_id": "MDQ6VXNlcjIzMDMzNzY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/maurelian",
    "html_url": "https://github.com/maurelian",
    "followers_url": "https://api.github.com/users/maurelian/followers",
    "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
    "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
    "organizations_url": "https://api.github.com/users/maurelian/orgs",
    "repos_url": "https://api.github.com/users/maurelian/repos",
    "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
    "received_events_url": "https://api.github.com/users/maurelian/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 751622094,
      "node_id": "MDU6TGFiZWw3NTE2MjIwOTQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Discussion",
      "name": "VIP: Discussion",
      "color": "000000",
      "default": false,
      "description": "Used to denote VIPs and more complex issues that are waiting discussion in a meeting"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2018-06-09T12:15:04Z",
  "updated_at": "2018-09-02T11:09:35Z",
  "closed_at": "2018-09-02T11:09:35Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "\r\n## Simple Summary\r\n\r\nFunction name overloading appears to be a necessity for compatibility in this ecosystem\r\n\r\n## Abstract\r\n\r\n* Solidity (being the dominant language) is used to define standard contract interfaces\r\n* Solidity allows function overloading, so that two functions can have the same name, but take different arguments\r\n* Per the abi spec, function identifiers are determined by the name and arguments\r\n\r\nTherefore, any solidity interface containing multiple functions with the same name is impossible to implement in Vyper\r\n\r\n## Motivation\r\n\r\nTo achieve adoption, popular contract standards must be possible to implement in Vyper. For example, [ERC721](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md) contains both: \r\n\r\n1. `function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes data) external payable;`\r\n2. `function safeTransferFrom(address _from, address _to, uint256 _tokenId) external payable;`\r\n\r\nCompiling a vyper file containing that interface will throw: `vyper.exceptions.VariableDeclarationException: Duplicate function or event name: safeTransferFrom`\r\n\r\n\r\n## Specification\r\n\r\n* Change the `Duplicate function or event name` error to a warning\r\n* Other?\r\n\r\n## Backwards Compatibility\r\n\r\nI don't think there are any such issues, given that this expands the allowable source code space.\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n",
  "closed_by": {
    "login": "jacqueswww",
    "id": 6917456,
    "node_id": "MDQ6VXNlcjY5MTc0NTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jacqueswww",
    "html_url": "https://github.com/jacqueswww",
    "followers_url": "https://api.github.com/users/jacqueswww/followers",
    "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
    "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
    "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
    "repos_url": "https://api.github.com/users/jacqueswww/repos",
    "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/884/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/884/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/395968388",
    "html_url": "https://github.com/vyperlang/vyper/issues/884#issuecomment-395968388",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/884",
    "id": 395968388,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTk2ODM4OA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-09T13:15:29Z",
    "updated_at": "2018-06-09T13:15:29Z",
    "author_association": "MEMBER",
    "body": "This should be possible to allow. The check for duplicate definition should maybe check the function signature hash instead of the function name.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/395968388/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/396046014",
    "html_url": "https://github.com/vyperlang/vyper/issues/884#issuecomment-396046014",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/884",
    "id": 396046014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjA0NjAxNA==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-10T12:40:57Z",
    "updated_at": "2018-06-10T12:57:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would caution this, overloading functions is one of our core principals we have stated we want to avoid.\r\nAnd I do believe it just introduces confusion in understanding and using a smart contract. I mean would would renaming the one function to `safeTransferFromCallData` or `safeTransferFromWithData` be such a big problem? \r\nWe could perhaps have a need for `strict` mode by default, that you can disable it via a pragma tag?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/396046014/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/396046612",
    "html_url": "https://github.com/vyperlang/vyper/issues/884#issuecomment-396046612",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/884",
    "id": 396046612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjA0NjYxMg==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-10T12:48:48Z",
    "updated_at": "2018-06-10T12:49:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@maurelian on a side note. Started reading that spec, it's even more confusing as to why there is a `safeTransferFrom` and a `transferFrom` ? I would assume one would only allow the `safe` kind :stuck_out_tongue: ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/396046612/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/396058774",
    "html_url": "https://github.com/vyperlang/vyper/issues/884#issuecomment-396058774",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/884",
    "id": 396058774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjA1ODc3NA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-10T15:40:56Z",
    "updated_at": "2018-06-10T15:40:56Z",
    "author_association": "MEMBER",
    "body": "I do agree that overloading is confusing and reduces readability.\r\n\r\nI guess the answer to this question is a political one: do we refuse to support less readable standard proposals (or optional behaviors like this)\r\n\r\nOr do we allow it by requiring a compiler flag? I'm not sure I like littering code with pragmas, a compiler flag would do just as well turning errors of experimental features into warnings to allow it to compile.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/396058774/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/396060436",
    "html_url": "https://github.com/vyperlang/vyper/issues/884#issuecomment-396060436",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/884",
    "id": 396060436,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjA2MDQzNg==",
    "user": {
      "login": "ben-kaufman",
      "id": 10667901,
      "node_id": "MDQ6VXNlcjEwNjY3OTAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/10667901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ben-kaufman",
      "html_url": "https://github.com/ben-kaufman",
      "followers_url": "https://api.github.com/users/ben-kaufman/followers",
      "following_url": "https://api.github.com/users/ben-kaufman/following{/other_user}",
      "gists_url": "https://api.github.com/users/ben-kaufman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ben-kaufman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ben-kaufman/subscriptions",
      "organizations_url": "https://api.github.com/users/ben-kaufman/orgs",
      "repos_url": "https://api.github.com/users/ben-kaufman/repos",
      "events_url": "https://api.github.com/users/ben-kaufman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ben-kaufman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-10T16:03:17Z",
    "updated_at": "2018-06-10T16:03:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just reminding we already discussed that in regards to ERC827 and agreed the standard should be changed. I don’t think it’s such an issue because there is no *approved* EIP with function overloading afaik.\r\nI think it’s good to keep the discussion open but in my opinion the problems overloading may cause are bigger than its benefits.\r\nI think changing these draft stage standards to use clear explicit names instead of confusing overloading would be much better for both Solidity and Vyper.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/396060436/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/396071860",
    "html_url": "https://github.com/vyperlang/vyper/issues/884#issuecomment-396071860",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/884",
    "id": 396071860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjA3MTg2MA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-10T18:47:06Z",
    "updated_at": "2018-06-10T18:47:06Z",
    "author_association": "MEMBER",
    "body": "Thanks @ben-kaufman for summing that up very well!",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/396071860/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/397764105",
    "html_url": "https://github.com/vyperlang/vyper/issues/884#issuecomment-397764105",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/884",
    "id": 397764105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Nzc2NDEwNQ==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-15T23:11:10Z",
    "updated_at": "2018-06-15T23:11:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here is a separate proposed specification that I believe is compatible with Vyper values.\r\n\r\n# MOTIVATION:\r\n\r\n* Vyper is currently incompatible with certain EVM features. This is a deficiency.\r\n* A motivation for disallowing function overloading is listed in README.md as \"Another problem with function overloading is that it makes the code much harder to search through as you have to keep track on which call refers to which function.\"\r\n\r\n# SPECIFICATION:\r\n\r\n1. Allow a new syntax for defining functions:\r\n\r\n```vyper\r\ndef transfer_stock{3}(receiver: address, transfer_order: uint256(currency_value)):\r\ndef transfer_stock{4}(receiver: address, transfer_order: uint256(currency_value), something: bool):\r\n```\r\n\r\nThe additional `{x}` note is a insignificant from the code-generation perspective.\r\n\r\n2. Require the note for function calls:\r\n\r\n```vyper\r\n    self.transfer_stock{4}(an_address, a_value, a_bool)\r\n    self.transfer_stock{3}(an_address, a_value)\r\n```\r\n\r\n3. It is a compiler error to have two functions with the same name + note\r\n\r\n4. Optional: throw a warning or error if function notes are used for non-overloaded functions\r\n\r\n# DISCUSSION\r\n\r\nIn this way, it is now simple to search through to find which call refers to which function. This resolves the original motivation for disallowing function overloading.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/397764105/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/397767879",
    "html_url": "https://github.com/vyperlang/vyper/issues/884#issuecomment-397767879",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/884",
    "id": 397767879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Nzc2Nzg3OQ==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-15T23:41:54Z",
    "updated_at": "2018-06-16T00:22:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Vyper is currently incompatible with certain EVM features. This is a deficiency.\r\n\r\nI vehemently disagree with statement, the ABI allows function overloading - yes. The EVM doesn't define any rules with regards to the ABI. But this doesn't mean it should be encouraged.\r\nIt's vyper job, to make maximally difficult for a programmer to write misleading code, and I think it's quite clear that function overloading supports a devious programmer in doing so.\r\n\r\nIn web3.js it's also extra work / and actually quite difficult to consume overloaded functions.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/397767879/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/397800625",
    "html_url": "https://github.com/vyperlang/vyper/issues/884#issuecomment-397800625",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/884",
    "id": 397800625,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzgwMDYyNQ==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-16T09:33:37Z",
    "updated_at": "2018-06-16T09:34:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "As discussed on gitter if we end up having to support function overloading I suggest the following:\r\n\r\n1.) We only allow overloaded functions to be grouped together when defined, ie. they have to follow each other.\r\n2.) We add an override decorator.\r\n\r\n```python\r\n@allow_overload\r\n@public\r\ndef safeTransfer():\r\n    pass\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/397800625/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/397891495",
    "html_url": "https://github.com/vyperlang/vyper/issues/884#issuecomment-397891495",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/884",
    "id": 397891495,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Nzg5MTQ5NQ==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-17T16:51:33Z",
    "updated_at": "2018-06-17T16:52:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hello everyone, please see #903.\r\n\r\nThat considers only a limited scope of function overloads. I think that is a feature that Vyper ACTUALLY wants, not just something to be begrudgingly accepted.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/397891495/reactions",
      "total_count": 3,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/417922567",
    "html_url": "https://github.com/vyperlang/vyper/issues/884#issuecomment-417922567",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/884",
    "id": 417922567,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzkyMjU2Nw==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-02T11:09:35Z",
    "updated_at": "2018-09-02T11:09:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "As #903 has been merged, I am also closing this issue ;)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/417922567/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
