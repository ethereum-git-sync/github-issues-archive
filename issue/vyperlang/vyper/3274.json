{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/3274",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/3274/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/3274/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/3274/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/3274",
  "id": 1582015494,
  "node_id": "I_kwDOBGDvrM5eS6QG",
  "number": 3274,
  "title": "`TypeCheckFailure` when zeroing with a smaller `DynArray` type.",
  "user": {
    "login": "trocher",
    "id": 43437004,
    "node_id": "MDQ6VXNlcjQzNDM3MDA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/43437004?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/trocher",
    "html_url": "https://github.com/trocher",
    "followers_url": "https://api.github.com/users/trocher/followers",
    "following_url": "https://api.github.com/users/trocher/following{/other_user}",
    "gists_url": "https://api.github.com/users/trocher/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/trocher/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/trocher/subscriptions",
    "organizations_url": "https://api.github.com/users/trocher/orgs",
    "repos_url": "https://api.github.com/users/trocher/repos",
    "events_url": "https://api.github.com/users/trocher/events{/privacy}",
    "received_events_url": "https://api.github.com/users/trocher/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4038639649,
      "node_id": "LA_kwDOBGDvrM7wuMAh",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/bug%20-%20typechecker",
      "name": "bug - typechecker",
      "color": "51B431",
      "default": false,
      "description": "issue with typechecker"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-02-13T09:57:14Z",
  "updated_at": "2023-02-21T20:08:13Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Version Information\r\n\r\n* vyper Version (output of `vyper --version`): 0.3.8+commit.d76c6ed2\r\n* OS: OSX\r\n* Python Version (output of `python --version`): 3.8.0\r\n\r\n### What's your issue about?\r\n\r\nWhen trying to use `empty(DynArray[TYPE,x])` where `DynArray[TYPE,y]` is expected given `x<y`, the compiler emits a `TypeCheckFailure` instead of exiting with a nice error.\r\n\r\n```Vyper\r\na:DynArray[uint256,4]\r\n@external\r\ndef foo():\r\n    self.a = empty(DynArray[uint256,3])\r\n```\r\n\r\n```Bash\r\nError compiling: tests/customs/code.vy\r\nTraceback (most recent call last):\r\n  File \"/Users/trocher/Documents/thesis/vyper/venv/bin/vyper\", line 11, in <module>\r\n    load_entry_point('vyper==0.3.8', 'console_scripts', 'vyper')()\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/cli/vyper_compile.py\", line 57, in _parse_cli_args\r\n    return _parse_args(sys.argv[1:])\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/cli/vyper_compile.py\", line 154, in _parse_args\r\n    compiled = compile_files(\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/cli/vyper_compile.py\", line 294, in compile_files\r\n    compiler_data = vyper.compile_codes(\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/evm/opcodes.py\", line 226, in _wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/compiler/__init__.py\", line 141, in compile_codes\r\n    exc_handler(contract_name, exc)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/cli/vyper_compile.py\", line 189, in exc_handler\r\n    raise exception\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/compiler/__init__.py\", line 138, in compile_codes\r\n    out[contract_name][output_format] = OUTPUT_FORMATS[output_format](compiler_data)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/compiler/output.py\", line 82, in build_ir_output\r\n    return compiler_data.ir_nodes\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/compiler/phases.py\", line 126, in ir_nodes\r\n    ir, ir_runtime, sigs = self._ir_output\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/functools.py\", line 966, in __get__\r\n    val = self.func(instance)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/compiler/phases.py\", line 122, in _ir_output\r\n    return generate_ir_nodes(self.global_ctx, self.no_optimize)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/compiler/phases.py\", line 258, in generate_ir_nodes\r\n    ir_nodes, ir_runtime, function_sigs = module.generate_ir_for_module(global_ctx)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/module.py\", line 162, in generate_ir_for_module\r\n    runtime, internal_functions = _runtime_ir(runtime_functions, all_sigs, global_ctx)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/module.py\", line 103, in _runtime_ir\r\n    func_ir = generate_ir_for_function(func_ast, all_sigs, global_ctx, skip_nonpayable_check)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/function_definitions/common.py\", line 62, in generate_ir_for_function\r\n    o = generate_ir_for_external_function(code, sig, context, skip_nonpayable_check)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/function_definitions/external_function.py\", line 199, in generate_ir_for_external_function\r\n    body += [parse_body(code.body, context, ensure_terminated=True)]\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/stmt.py\", line 414, in parse_body\r\n    ir = parse_stmt(stmt, context)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/stmt.py\", line 388, in parse_stmt\r\n    return Stmt(stmt, context).ir_node\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/stmt.py\", line 40, in __init__\r\n    self.ir_node = fn()\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/stmt.py\", line 78, in parse_Assign\r\n    ir_node = make_setter(target, sub)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/core.py\", line 819, in make_setter\r\n    check_assign(left, right)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/core.py\", line 767, in check_assign\r\n    _check_assign_list(left, right)\r\n  File \"/Users/trocher/Documents/thesis/vyper/vyper/codegen/core.py\", line 713, in _check_assign_list\r\n    raise TypeCheckFailure(\r\nvyper.exceptions.TypeCheckFailure: Bad type for clearing bytes: expected DynArray[uint256, 4] but got DynArray[uint256, 3]\r\n\r\nThis is an unhandled internal compiler error. Please create an issue on Github to notify the developers.\r\nhttps://github.com/vyperlang/vyper/issues/new?template=bug.md\r\n```\r\n### How can it be fixed?\r\n\r\nI would guess that raising `TypeMismatch` would be more appropriate given that the same behaviour for `String` and `Bytes` make use of it.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/3274/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/3274/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1433087281",
    "html_url": "https://github.com/vyperlang/vyper/issues/3274#issuecomment-1433087281",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3274",
    "id": 1433087281,
    "node_id": "IC_kwDOBGDvrM5Vay0x",
    "user": {
      "login": "tserg",
      "id": 8017125,
      "node_id": "MDQ6VXNlcjgwMTcxMjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8017125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tserg",
      "html_url": "https://github.com/tserg",
      "followers_url": "https://api.github.com/users/tserg/followers",
      "following_url": "https://api.github.com/users/tserg/following{/other_user}",
      "gists_url": "https://api.github.com/users/tserg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tserg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tserg/subscriptions",
      "organizations_url": "https://api.github.com/users/tserg/orgs",
      "repos_url": "https://api.github.com/users/tserg/repos",
      "events_url": "https://api.github.com/users/tserg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tserg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-16T13:26:34Z",
    "updated_at": "2023-02-16T13:26:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "I took a look into this. This should have been caught in the semantics analysis phase in `visit_Assign` (or `visit_AnnAssign`) where we validate that the value is of the expected type - e.g.:\r\nhttps://github.com/vyperlang/vyper/blob/187ab0eec8efbe19ed5046e4e947249e9d43141c/vyper/semantics/analysis/local.py#L244-L254\r\n\r\nThe reason dynamic arrays of a shorter length are not called is because of the `compare_type()` implementation for `DArrayT`, where a dynamic array value is considered of the same type if it is of a shorter length (see L269):\r\nhttps://github.com/vyperlang/vyper/blob/187ab0eec8efbe19ed5046e4e947249e9d43141c/vyper/semantics/types/subscriptable.py#L264-L271 \r\n\r\nThese are my findings so far, but I do not have a good handle on what an appropriate fix is yet. I still think this should be handled at the typechecking phase.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1433087281/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1439031027",
    "html_url": "https://github.com/vyperlang/vyper/issues/3274#issuecomment-1439031027",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3274",
    "id": 1439031027,
    "node_id": "IC_kwDOBGDvrM5Vxd7z",
    "user": {
      "login": "trocher",
      "id": 43437004,
      "node_id": "MDQ6VXNlcjQzNDM3MDA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/43437004?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trocher",
      "html_url": "https://github.com/trocher",
      "followers_url": "https://api.github.com/users/trocher/followers",
      "following_url": "https://api.github.com/users/trocher/following{/other_user}",
      "gists_url": "https://api.github.com/users/trocher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trocher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trocher/subscriptions",
      "organizations_url": "https://api.github.com/users/trocher/orgs",
      "repos_url": "https://api.github.com/users/trocher/repos",
      "events_url": "https://api.github.com/users/trocher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trocher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-21T20:08:12Z",
    "updated_at": "2023-02-21T20:08:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note that the `TypeMismatch` emitted for `String` and `Bytes` in the same case is in fact emitted from `_check_assign_bytes` in the codegen, so even if the exception looks nicer, this probably should also have been caught at type-checking",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1439031027/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
