{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/2465",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/2465/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/2465/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/2465/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/2465",
  "id": 1012935615,
  "node_id": "I_kwDOBGDvrM48YCu_",
  "number": 2465,
  "title": "VIP: Automatically set function decorators",
  "user": {
    "login": "spinoch",
    "id": 73601239,
    "node_id": "MDQ6VXNlcjczNjAxMjM5",
    "avatar_url": "https://avatars.githubusercontent.com/u/73601239?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/spinoch",
    "html_url": "https://github.com/spinoch",
    "followers_url": "https://api.github.com/users/spinoch/followers",
    "following_url": "https://api.github.com/users/spinoch/following{/other_user}",
    "gists_url": "https://api.github.com/users/spinoch/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/spinoch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/spinoch/subscriptions",
    "organizations_url": "https://api.github.com/users/spinoch/orgs",
    "repos_url": "https://api.github.com/users/spinoch/repos",
    "events_url": "https://api.github.com/users/spinoch/events{/privacy}",
    "received_events_url": "https://api.github.com/users/spinoch/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-10-01T06:04:36Z",
  "updated_at": "2021-10-04T19:12:25Z",
  "closed_at": "2021-10-04T19:12:25Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Simple Summary\r\nIt seems like Vyper's compiler can automatically infer the kind of state interaction of a function, and external/internal functions must follow certain syntax requirements, so let's have the compiler set these attributes for us. \r\n\r\n## Motivation\r\nThis would make iteration for the developer faster as they can just write their functions and vyper will tell them the expected state transitions and whether it's external/internal.\r\n\r\n## Specification\r\nTBD. This could live in a separate package from vyper or could be part of the compiler.\r\ne.g.\r\nlet `example.vy` be\r\n```\r\ndef externalView() -> uint256:\r\n\treturn self.x * 2\r\n```\r\nThen after calling `vyper --infer-decorators example.vy` we have\r\n```\r\n@view\r\n@external\r\ndef externalView() -> uint256:\r\n\treturn self.x * 2\r\n```\r\n\r\nWhat can be inferred:\r\n- Mutability\r\n- Visibility, `\"@internal\" if f.startswith(\"_\") and f not in [\"__init__\", \"__default__\"] else \"@external\"`\r\n-  payable/nonpayable may also be inferred by looking at whether msg.value is used in a function\r\n\r\n## Backwards Compatibility\r\nN/A\r\n\r\n## Dependencies\r\nN/A\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n",
  "closed_by": {
    "login": "fubuloubu",
    "id": 3859395,
    "node_id": "MDQ6VXNlcjM4NTkzOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fubuloubu",
    "html_url": "https://github.com/fubuloubu",
    "followers_url": "https://api.github.com/users/fubuloubu/followers",
    "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
    "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
    "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
    "repos_url": "https://api.github.com/users/fubuloubu/repos",
    "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/2465/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/2465/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/933776237",
    "html_url": "https://github.com/vyperlang/vyper/issues/2465#issuecomment-933776237",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2465",
    "id": 933776237,
    "node_id": "IC_kwDOBGDvrM43qEtt",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-04T19:12:21Z",
    "updated_at": "2021-10-04T19:12:21Z",
    "author_association": "MEMBER",
    "body": "Meeting notes: this seems like a good use case for an external tool that might be used to infer and repair code in place, helping writers write proper vyper.\r\n\r\nsee https://github.com/vyperlang/blackadder",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/933776237/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
