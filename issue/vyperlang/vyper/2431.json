{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/2431",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/2431/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/2431/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/2431/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/2431",
  "id": 979624919,
  "node_id": "MDU6SXNzdWU5Nzk2MjQ5MTk=",
  "number": 2431,
  "title": "VIP: Library Modules",
  "user": {
    "login": "charles-cooper",
    "id": 3867501,
    "node_id": "MDQ6VXNlcjM4Njc1MDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/charles-cooper",
    "html_url": "https://github.com/charles-cooper",
    "followers_url": "https://api.github.com/users/charles-cooper/followers",
    "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
    "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
    "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
    "repos_url": "https://api.github.com/users/charles-cooper/repos",
    "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
    "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 757250644,
      "node_id": "MDU6TGFiZWw3NTcyNTA2NDQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Approved",
      "name": "VIP: Approved",
      "color": "98f765",
      "default": false,
      "description": "VIP Approved"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2021-08-25T21:12:13Z",
  "updated_at": "2023-12-16T16:16:16Z",
  "closed_at": "2023-12-16T16:16:16Z",
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "## Simple Summary\r\n\r\nAllow contracts to be imported into other contracts and used like python modules.\r\n\r\n## Motivation\r\n\r\nIt's important to be able to break up contracts into logical sections, or have reusable modules which can be shared across deployed contracts. Several proposals have been created for Vyper, but they all get stuck on one of several points\r\n- Conflate storage layout with inheritance. This causes a readability problem because an imported module can alter a contract's state.\r\n- Introducing new syntax for importing modules. This creates syntactical and practical overhead, since a programmer has to use different syntax when writing a contract vs an importable module.\r\n\r\nA lot of problems with readability go away if we assume that imported modules cannot alter the contract's storage - or at least can only do so explicitly.\r\n\r\nSimilarly, I think Python's zero-syntactic-overhead for modules is a good thing to keep here.\r\n\r\nOne clear deficiency of this proposal is that it does not address the use case of reusable-code-which-can-operate-on-storage-variables (e.g. stack/queue). I think that this can be solved by allowing storage variables to be passed by reference and mutated by internal functions, which could be another VIP.\r\n\r\n## Specification\r\n\r\nAn importable module is structurally the same as a regular Vyper contract. It is automatically able to be imported as a module so long as it satisfies the following properties:\r\n- no external functions\r\n- no storage variables\r\n\r\nImportantly, there is no syntactic overhead to using an importable module. It can be thought of as just a bunch of internal function definitions and struct/event/interface definitions. Implementation-wise, all these definitions just get imported in the module namespace. Here's an example\r\n\r\n```python\r\n# workhorse.vy\r\nstruct MyStruct:\r\n    addr: address\r\n\r\ninterface UseStruct:\r\n    def use_struct(x: MyStruct): nonpayable\r\n\r\n@internal\r\ndef utility_function1(x: uint256, y: uint256):\r\n    return x + y\r\n\r\n@internal\r\ndef utility_function2(addr: UseStruct):\r\n    addr.use_struct(MyStruct({x: self}))\r\n```\r\n```python\r\nimport workhorse\r\n\r\n@external\r\ndef foo():\r\n    workhorse.utility_function2(msg.sender)\r\n```\r\n\r\n## Backwards Compatibility\r\nN/A\r\n\r\n## Dependencies\r\n\r\n## References\r\nhttps://github.com/vyperlang/vyper/issues/484 \r\nhttps://github.com/vyperlang/vyper/issues/584\r\nhttps://github.com/vyperlang/vyper/issues/1954\r\nhttps://github.com/vyperlang/vyper/issues/2273\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n",
  "closed_by": {
    "login": "charles-cooper",
    "id": 3867501,
    "node_id": "MDQ6VXNlcjM4Njc1MDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/charles-cooper",
    "html_url": "https://github.com/charles-cooper",
    "followers_url": "https://api.github.com/users/charles-cooper/followers",
    "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
    "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
    "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
    "repos_url": "https://api.github.com/users/charles-cooper/repos",
    "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
    "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/2431/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/2431/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/905928234",
    "html_url": "https://github.com/vyperlang/vyper/issues/2431#issuecomment-905928234",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2431",
    "id": 905928234,
    "node_id": "IC_kwDOBGDvrM41_14q",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-25T22:52:57Z",
    "updated_at": "2021-08-25T22:52:57Z",
    "author_association": "MEMBER",
    "body": "A \"Safe\" ERC20 built-in library could be a good example here\r\n\r\n`safe_erc20.vy`:\r\n```python\r\ndef transfer(token: ERC20, receiver: address, amount: uint256):\r\n    # Handle call return data inconsistencies in implementations...\r\n\r\ndef transferFrom(...):\r\n    ...\r\n```\r\n\r\nUsage:\r\n```python\r\nfrom vyper import safe_erc20\r\n\r\n...\r\n\r\nsafe_erc20.transfer(self.token, msg.sender, self.token.balanceOf(msg.sender))\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/905928234/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/908641546",
    "html_url": "https://github.com/vyperlang/vyper/issues/2431#issuecomment-908641546",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2431",
    "id": 908641546,
    "node_id": "IC_kwDOBGDvrM42KMUK",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-30T19:51:26Z",
    "updated_at": "2021-08-30T19:51:26Z",
    "author_association": "MEMBER",
    "body": "An importable module can define:\r\n- struct\r\n- interface\r\n- constant\r\n- function (that does not access storage e.g. \"pure\")",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/908641546/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/910912296",
    "html_url": "https://github.com/vyperlang/vyper/issues/2431#issuecomment-910912296",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2431",
    "id": 910912296,
    "node_id": "IC_kwDOBGDvrM42S2so",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-01T23:48:28Z",
    "updated_at": "2021-09-01T23:48:28Z",
    "author_association": "COLLABORATOR",
    "body": "Events blocked initially and then we can revisit",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/910912296/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1132802579",
    "html_url": "https://github.com/vyperlang/vyper/issues/2431#issuecomment-1132802579",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2431",
    "id": 1132802579,
    "node_id": "IC_kwDOBGDvrM5DhTIT",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-20T11:43:38Z",
    "updated_at": "2022-05-20T11:45:04Z",
    "author_association": "COLLABORATOR",
    "body": "i want to extend this proposal with an idea based on https://github.com/vyperlang/vyper/pull/2852#issuecomment-1128115146. we could allow importing events, and even storage variables(!) from a library, and in storage allocation / interface generation, only export those that are used. for instance\r\n\r\n```vyper\r\n# token_library.vy\r\nbalances: HashMap[address, uint256]\r\nsome_random_variable: public(uint256)\r\n\r\n@internal\r\ndef _transfer(...):\r\n    self.balances[sender] -= amount\r\n    self.balances[receiver] += amount\r\n    log Transfer(...)\r\n\r\n@internal\r\ndef _mint(...):\r\n    self.totalSupply += amount\r\n    self.balances[receiver] += amount\r\n    log Mint(...)\r\n    \r\n@external\r\ndef mint(...):\r\n    self._mint(...)\r\n```\r\n```vyper\r\nimport token_library as token\r\n\r\n@external\r\ndef transfer(...):\r\n    token._transfer(...)  # balances are pulled into this contract, so is the `Transfer` event\r\n    \r\n# no function that touches `token.some_random_variable` is referenced,\r\n# so it does not get allocated in this contract.\r\n\r\n@external\r\ndef burn(...):  # custom burn function\r\n    # note ability to stomp all over token members\r\n    token.totalSupply -= amount  # totalSupply is brought into scope here, it gets a storage slot\r\n    token.balances[sender] -= amount\r\n\r\n# maybe to make it easy to re-export external function signatures:\r\nfrom token export mint, totalSupply, balances\r\n```\r\n\r\nnote this results in no name collisions or reference ambiguities, since everything is namespaced.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1132802579/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1606310635",
    "html_url": "https://github.com/vyperlang/vyper/issues/2431#issuecomment-1606310635",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2431",
    "id": 1606310635,
    "node_id": "IC_kwDOBGDvrM5fvlrr",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-25T23:06:07Z",
    "updated_at": "2023-06-25T23:06:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "What is imported surely can be explicitly exported? \r\n\r\nhave type production and type test pls to make which imports are relevant and help reduce unnecessary bloat.\r\n\r\nalso if we can have import map such that \r\n\r\n\r\n(erc20lib)://(erc20lib@3.0.0)\r\n(erc20lib)://(erc20lib@sha256hash)\r\n\r\nfor explicit version support or git tag maybe",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1606310635/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1646563039",
    "html_url": "https://github.com/vyperlang/vyper/issues/2431#issuecomment-1646563039",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2431",
    "id": 1646563039,
    "node_id": "IC_kwDOBGDvrM5iJI7f",
    "user": {
      "login": "scherrey",
      "id": 878591,
      "node_id": "MDQ6VXNlcjg3ODU5MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/878591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scherrey",
      "html_url": "https://github.com/scherrey",
      "followers_url": "https://api.github.com/users/scherrey/followers",
      "following_url": "https://api.github.com/users/scherrey/following{/other_user}",
      "gists_url": "https://api.github.com/users/scherrey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scherrey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scherrey/subscriptions",
      "organizations_url": "https://api.github.com/users/scherrey/orgs",
      "repos_url": "https://api.github.com/users/scherrey/repos",
      "events_url": "https://api.github.com/users/scherrey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scherrey/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-22T11:34:16Z",
    "updated_at": "2023-07-22T11:34:16Z",
    "author_association": "NONE",
    "body": "Any thoughts on priority/timeframe for this? I'm starting to see some layer2 EVMs that extend the VM by adding new built-in contract primitives. So they have Solidity functions that do asm calls against them. For Vyper we could wrap them in raw_calls it appears but we would, presently, have to put all those primitives in the same source file as our contract. Modules supporting types and stateless functions would make it much nicer to add Vyper support for these alternative chains. One in particular that I'm dealing with is providing homomorphic encrypted computations and is pretty interesting. Would love to make coding in Vyper practical on these kinds of platforms.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1646563039/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
