{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/3392",
  "id": 1700100750,
  "node_id": "I_kwDOBGDvrM5lVXqO",
  "number": 3392,
  "title": "natspec validation fails to parse example vyper code with `@external` modifier",
  "user": {
    "login": "pcaversaccio",
    "id": 25297591,
    "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pcaversaccio",
    "html_url": "https://github.com/pcaversaccio",
    "followers_url": "https://api.github.com/users/pcaversaccio/followers",
    "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
    "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
    "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
    "repos_url": "https://api.github.com/users/pcaversaccio/repos",
    "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 27,
  "created_at": "2023-05-08T11:48:11Z",
  "updated_at": "2023-05-13T17:59:40Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Version Information\r\n\r\n* vyper Version (output of `vyper --version`): `0.3.7`\r\n* OS: linux\r\n* Python Version (output of `python --version`): `3.10.10`\r\n\r\n### What's your issue about?\r\n\r\nMany Vyper toolings use `vyper-json` instead of `vyper` to compile contracts. If you want to, e.g., compile my [snekmate](https://github.com/pcaversaccio/snekmate) contracts using `ape compile`, it will throw multiple errors. I debugged and identified what is exactly raising these errors. To be clear, `vyper` compiles without any issues and this is also my expected behaviour for `vyper-json`.\r\n\r\n**Issue 1:** It does not allow for comments like `@external` as part of the NatSpec description. [Example](https://github.com/pcaversaccio/snekmate/blob/main/src/auth/AccessControl.vy#L19):\r\n\r\n```vyper\r\n# @version ^0.3.7\r\n\"\"\"\r\n@title Multi-Role-Based Access Control Functions\r\n@license GNU Affero General Public License v3.0\r\n@author pcaversaccio\r\n@notice These functions can be used to implement role-based access\r\n        control mechanisms. Roles are referred to by their `bytes32`\r\n        identifier. These should be exposed in the external API and\r\n        be unique. The best way to achieve this is by using `public\r\n        constant` hash digests:\r\n        ```vy\r\n        MY_ROLE: public(constant(bytes32)) = keccak256(\"MY_ROLE\");\r\n        ```\r\n\r\n        Roles can be used to represent a set of permissions. To restrict\r\n        access to a function call, use the `external` function `hasRole`\r\n        or the `internal` function `_check_role`:\r\n        ```vy\r\n        @external\r\n        def foo():\r\n            assert self.hasRole[MY_ROLE][msg.sender], \"AccessControl: account is missing role\"\r\n            ...\r\n\r\n        OR\r\n\r\n        @external\r\n        def foo():\r\n            self._check_role(MY_ROLE, msg.sender)\r\n            ...\r\n        ```\r\n``` \r\n\r\nThe warning thrown is:\r\n\r\n```bash\r\nERROR: (VyperCompileError) auth/AccessControl.vy\r\nNatSpecSyntaxException:Unknown NatSpec field '@external'\r\n```\r\n\r\n**Issue 2:** It does not allow for a `custom` tag as part of the NatSpec comments. I use [`custom:coauthor`](https://github.com/pcaversaccio/snekmate/blob/main/src/utils/Math.vy#L6) and [`custom:security`](https://github.com/pcaversaccio/snekmate/blob/main/src/utils/ECDSA.vy#L12). The reasoning behind my choice here is consistency with the Solidity NatSpec tags that support custom for exactly such cases & to make an important emphasise on a certain topic (in my case security or co-authors) if this is really needed.\r\n\r\nThe warning thrown is:\r\n\r\n```bash\r\nERROR: (VyperCompileError) extensions/ERC4626.vy\r\nNatSpecSyntaxException:Unknown NatSpec field '@custom:security'\r\n```\r\n\r\nor\r\n\r\n```vyper\r\nERROR: (VyperCompileError) tokens/ERC1155.vy\r\nNatSpecSyntaxException:Unknown NatSpec field '@custom:coauthor'\r\n```\r\n\r\n**Issue 3:** Path resolution of certain interface imports fail. I use the following import (which compiles using `vyper`) [here](https://github.com/pcaversaccio/snekmate/blob/main/src/extensions/ERC4626.vy#L67):\r\n\r\n```vyper\r\nimport src.tokens.interfaces.IERC20Permit as IERC20Permit\r\nimplements: IERC20Permit\r\n``` \r\n\r\nIt will throw the following error (the same happens if I put it into a dedicated `contracts` folder):\r\n\r\n```\r\nERROR: (VyperCompileError) extensions/ERC4626.vy\r\nFileNotFoundError: Cannot locate interface 'src/tokens/interfaces/IERC20Permit{.vy,.json}'\r\n```\r\n\r\nAfter fixing these 3 issues locally (removing the comments and using an interface from the same folder for `ERC4626`) `vyper-json` compiles as intended.\r\n\r\n### How can it be fixed?\r\n\r\n`vyper-json` should compile successfully as `vyper` does now. I hope someone finds the bandwidth to fix this for the Vyper `0.3.8` release.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/3392/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1544435415",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1544435415",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1544435415,
    "node_id": "IC_kwDOBGDvrM5cDjbX",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-11T17:50:47Z",
    "updated_at": "2023-05-11T17:50:59Z",
    "author_association": "COLLABORATOR",
    "body": "i think this is not exactly a difference between vyper and vyper-json tools. i can reproduce the exception as follows:\r\n```bash\r\n$ vyper -f devdoc src/auth/AccessControl.vy \r\nError compiling: src/auth/AccessControl.vy\r\nvyper.exceptions.NatSpecSyntaxException: Unknown NatSpec field '@external'\r\n  line 19:9 \r\n       18         ```vy\r\n  ---> 19         @external\r\n  -----------------^\r\n       20         def foo():\r\n```\r\n\r\nso the issue here is presumably that ape is asking for the `devdoc` and `userdoc` outputs.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1544435415/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1544476350",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1544476350",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1544476350,
    "node_id": "IC_kwDOBGDvrM5cDta-",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-11T18:22:52Z",
    "updated_at": "2023-05-11T18:22:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fubuloubu so seems like it's an ape \"issue\". Why does `ape compile` need `devdoc` and/or `userdoc` exactly? Is there maybe an easy way to circumvent it, like `ape compile --skip-docgen` which would allow to compile snekmate's current code?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1544476350/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1544577585",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1544577585",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1544577585,
    "node_id": "IC_kwDOBGDvrM5cEGIx",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-11T19:42:53Z",
    "updated_at": "2023-05-11T19:42:53Z",
    "author_association": "MEMBER",
    "body": "> @fubuloubu so seems like it's an ape \"issue\". Why does `ape compile` need `devdoc` and/or `userdoc` exactly? Is there maybe an easy way to circumvent it, like `ape compile --skip-docgen` which would allow to compile snekmate's current code?\r\n\r\nThe issue is definitely with Vyper, it raises a Vyper exception. If Vyper wants to add support for these types of fields, it can (per this issue). If it wants to relax validation of these fields, it can.\r\n\r\nI don't think it's tenable to have it not compile with `-f devdoc` flag if the intent is to support devdoc natspec. At best it's a workaround to skip this in Ape, since it enables some other features. I think either Vyper adds support or relaxes validation, or you remove the offending tags from your docstrings since they won't compile with Vyper.\r\n\r\nProbably a bigger issue is a lack of standardization of these fields, but that's outside of this discussion.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1544577585/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1544725825",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1544725825",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1544725825,
    "node_id": "IC_kwDOBGDvrM5cEqVB",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-11T21:47:15Z",
    "updated_at": "2023-05-11T21:47:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@charles-cooper what's your opinion on this? Can we relax the validation and allow for the `custom` tags (i.e. `custom:coauthor` and `custom:security`), as well as fix the parsing of NatSpec comments that use `@` labels? In any case, I think having the NatSpec tag `@custom:...` is a good idea since maybe there will be other use cases such as `@custom:audit` or `@custom:contact` etc. that can be beneficial.\r\n\r\nOne small thing, in this PR here I fixed a spelling error for the license tag: https://github.com/vyperlang/vyper/commit/50ee0787de72e854443275175c6cc57fae6c2ea7. So it could be that people have used the wrong license tag (i.e. `@licence`) which would also throw if compiled with `devdoc` and `userdoc`.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1544725825/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1544768675",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1544768675",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1544768675,
    "node_id": "IC_kwDOBGDvrM5cE0yj",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-11T22:22:09Z",
    "updated_at": "2023-05-11T22:22:09Z",
    "author_association": "MEMBER",
    "body": "I think there's two issues:\r\n1. Vyper is a little aggressive with detecting natspec fields from within other natspec fields (e.g. it needs to track indentation in the docstring to ensure that it isn't catching something like in your example where you have an example inside of the docstring that contains something that looks like a natspec field)\r\n2. Vyper should add support for, or ignore, unsupported/experimental natspec fields\r\n\r\nI would separate those two issues. 1. is a bug that should be fixed, 2. is a feature vyper should support with it's natspec parser",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1544768675/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1544770631",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1544770631",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1544770631,
    "node_id": "IC_kwDOBGDvrM5cE1RH",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-11T22:23:46Z",
    "updated_at": "2023-05-11T22:28:46Z",
    "author_association": "COLLABORATOR",
    "body": "i vote for just relaxing the validation. i am not a huge fan of having to support natspec (which is an entirely separate language!) inside the compiler in the first place.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1544770631/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1544785573",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1544785573",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1544785573,
    "node_id": "IC_kwDOBGDvrM5cE46l",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-11T22:43:21Z",
    "updated_at": "2023-05-11T22:43:21Z",
    "author_association": "COLLABORATOR",
    "body": "for the `@custom:` tags, see https://github.com/vyperlang/vyper/pull/3403",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1544785573/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 2,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1544808476",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1544808476",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1544808476,
    "node_id": "IC_kwDOBGDvrM5cE-gc",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-11T23:08:12Z",
    "updated_at": "2023-05-11T23:08:12Z",
    "author_association": "MEMBER",
    "body": "> for the `@custom:` tags, see https://github.com/vyperlang/vyper/pull/3403\n\nThis is perfect, works for me\n\nStill think the other issue is the bug with aggressive checking for natspec tags. It should basically detect whatever indentation the first tag is at, and all tags must be at that level. If you indent further it gets treated as whitespace to be normalized into a space or newline char (see his example). Could add additional handling for triple back ticks although maybe overkill",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1544808476/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1544827786",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1544827786",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1544827786,
    "node_id": "IC_kwDOBGDvrM5cFDOK",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-11T23:31:34Z",
    "updated_at": "2023-05-11T23:31:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "> for the `@custom:` tags, see #3403\r\n\r\nawesome, I like! I quickly made a PR to cover the docs: https://github.com/vyperlang/vyper/pull/3404.\r\n\r\n> Still think the other issue is the bug with aggressive checking for natspec tags. It should basically detect whatever indentation the first tag is at, and all tags must be at that level. If you indent further it gets treated as whitespace to be normalized into a space or newline char (see his example). Could add additional handling for triple back ticks although maybe overkill\r\n\r\nI like this, since it's consistent with the Vyper docs that state the following: \r\n![image](https://github.com/vyperlang/vyper/assets/25297591/dac70f8c-bb99-47fd-9bcb-dacfe86a01bd)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1544827786/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1545609044",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1545609044",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1545609044,
    "node_id": "IC_kwDOBGDvrM5cIB9U",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-12T11:39:37Z",
    "updated_at": "2023-05-12T11:39:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is there a smart quick fix that doesn't introduce any technical debt which would allow me to compile my example with `@external` and could be shipped in `0.3.8`? Later on, we can revisit this issue for a more robust solution for `0.4.0`. I don't consider relaxing the validation btw as a security risk.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1545609044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1545768359",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1545768359",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1545768359,
    "node_id": "IC_kwDOBGDvrM5cIo2n",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-12T13:39:46Z",
    "updated_at": "2023-05-12T13:39:46Z",
    "author_association": "MEMBER",
    "body": "> Is there a smart quick fix that doesn't introduce any technical debt which would allow me to compile my example with `@external` and could be shipped in `0.3.8`? Later on, we can revisit this issue for a more robust solution for `0.4.0`. I don't consider relaxing the validation btw as a security risk.\n\nI don't think so, you'll have to fix the parser as per our previous conversation. I don't think it'd be a lot of work though",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1545768359/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1545861046",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1545861046",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1545861046,
    "node_id": "IC_kwDOBGDvrM5cI_e2",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-12T14:46:43Z",
    "updated_at": "2023-05-12T14:46:43Z",
    "author_association": "COLLABORATOR",
    "body": "Relaxing the validator to ignore unknown tags would be \"low debt\". We can also change the parser, but we would essentially be creating \"natspec vyper\", and correct me if I'm wrong, but I don't think anybody really wants to have multiple natspec dialects floating around.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1545861046/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1545891364",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1545891364",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1545891364,
    "node_id": "IC_kwDOBGDvrM5cJG4k",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-12T15:06:17Z",
    "updated_at": "2023-05-12T15:06:17Z",
    "author_association": "MEMBER",
    "body": "> Relaxing the validator to ignore unknown tags would be \"low debt\". We can also change the parser, but we would essentially be creating \"natspec vyper\", and correct me if I'm wrong, but I don't think anybody really wants to have multiple natspec dialects floating around.\r\n\r\nthe problem isn't really that `@external` is an unknown natspec tag, the problem is it's interpreting a code example he gave in the dev comment as the start of a new field, when really it's not\r\n\r\nand yes I agree, we did sort of commit to maintaining a natspec parser in vyper",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1545891364/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1545894345",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1545894345",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1545894345,
    "node_id": "IC_kwDOBGDvrM5cJHnJ",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-12T15:08:10Z",
    "updated_at": "2023-05-12T15:08:10Z",
    "author_association": "COLLABORATOR",
    "body": "Well right - the natspec spec does not (IIRC) have any carveouts for code examples inside of dev comments",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1545894345/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1545905091",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1545905091",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1545905091,
    "node_id": "IC_kwDOBGDvrM5cJKPD",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-12T15:15:09Z",
    "updated_at": "2023-05-12T15:15:09Z",
    "author_association": "MEMBER",
    "body": "> Well right - the natspec spec does not (IIRC) have any carveouts for code examples inside of dev comments\n\nAlso true\n\n@pcaversaccio triggered undefined behavior",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1545905091/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1545944553",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1545944553",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1545944553,
    "node_id": "IC_kwDOBGDvrM5cJT3p",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-12T15:44:02Z",
    "updated_at": "2023-05-12T15:44:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "> the problem isn't really that @external is an unknown natspec tag, the problem is it's interpreting a code example he gave in the dev comment as the start of a new field, when really it's not\r\n\r\nExactly - so how about we protect markdown code inside NatSpec comments that starts with ` ``` ` (and maybe inline backticks as well)?\r\n\r\n>  Well right - the natspec spec does not (IIRC) have any carveouts for code examples inside of dev comments\r\n\r\ncorrect :)\r\n![image](https://github.com/vyperlang/vyper/assets/25297591/ff4146b2-df5c-4ae6-a58f-a84bed439fb7)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1545944553/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1546006309",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1546006309",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1546006309,
    "node_id": "IC_kwDOBGDvrM5cJi8l",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-12T16:34:57Z",
    "updated_at": "2023-05-12T16:34:57Z",
    "author_association": "MEMBER",
    "body": "> > the problem isn't really that @external is an unknown natspec tag, the problem is it's interpreting a code example he gave in the dev comment as the start of a new field, when really it's not\r\n> \r\n> Exactly - so how about we protect markdown code inside NatSpec comments that starts with `` ``` `` (and maybe inline backticks as well)?\r\n> \r\n\r\nProbably solidity doesn't have this problem because it doesn't use `@` when defining modifiers :rofl: ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1546006309/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1546021415",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1546021415",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1546021415,
    "node_id": "IC_kwDOBGDvrM5cJmon",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-12T16:49:40Z",
    "updated_at": "2023-05-12T16:49:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Probably solidity doesn't have this problem because it doesn't use @ when defining modifiers 🤣\r\n\r\nWell, you can have comments like\r\n```\r\n@notice Please follow the instructions:\r\n              ```\r\n              npm install @openzeppelin/contracts\r\n              ```\r\n              ...\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1546021415/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1546031282",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1546031282",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1546031282,
    "node_id": "IC_kwDOBGDvrM5cJpCy",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-12T16:59:07Z",
    "updated_at": "2023-05-12T16:59:07Z",
    "author_association": "MEMBER",
    "body": "> > Probably solidity doesn't have this problem because it doesn't use @ when defining modifiers rofl\r\n> \r\n> Well, you can have comments like\r\n> \r\n> ```\r\n> @notice Please follow the instructions:\r\n>               ```\r\n>               npm install @openzeppelin/contracts\r\n>               ```\r\n>               ...\r\n> ```\r\n\r\nBut that's not at the beginning of the sentence ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1546031282/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1546033905",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1546033905",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1546033905,
    "node_id": "IC_kwDOBGDvrM5cJprx",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-12T17:01:26Z",
    "updated_at": "2023-05-12T17:01:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "right, that's fair 🤣",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1546033905/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1546116754",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1546116754",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1546116754,
    "node_id": "IC_kwDOBGDvrM5cJ96S",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-12T18:20:43Z",
    "updated_at": "2023-05-12T18:20:43Z",
    "author_association": "COLLABORATOR",
    "body": "yea i mean i want to point out that the fact that solidity currently allows `@external` in some places (it, by the way, does *not* handle markdown consistently) is already breaking from their own natspec specification. so the natspec supported by solc is actually already \"natspec solc\" and not strict natspec. so by adding our own special rules we are really just compounding the problem.\r\n\r\nwhich if we are going to make our own dialect, we might as well go all the way and make our own full-on documentation language :).\r\n\r\n(mostly joking)\r\n\r\ni also want to point out that another other option is to drop natspec entirely and just have people use doxygen's python dialect, or sphinx, or really any number of purpose-built inline documentation tools.\r\n\r\nbtw just to make sure my position is clear - i'm not against adding the markdown rules. i think that is probably the most pragmatic path forward here. but i just want to make sure everybody understands that introducing a new natspec dialect is not a trivial choice to make, and will almost definitely create issues in the future (\"why does my natspec work with vyper and not solc\" or vice versa - the flip of which we are currently already seeing due to solidity creating their own undocumented natspec dialect).",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1546116754/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1546606724",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1546606724",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1546606724,
    "node_id": "IC_kwDOBGDvrM5cL1iE",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-13T09:27:52Z",
    "updated_at": "2023-05-13T09:29:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "per offline discussion with @charles-cooper, I will quickly fix the `@external` comments, for now, (maybe will use an emoji for the `@` symbol lol) to make it compile using Vyper `0.3.8`. We must revisit this discussion after the release. Generally, my position is pretty clear: support the Solidity NatSpec rules in order to ensure interoperability, as well as have a few exceptions due to Python/Vyper syntax (e.g. relaxing validation for markdowns or inline code comments) and document this properly. If properly documented, folks will understand very quickly why something might not compile.\r\n\r\n@fubuloubu could you quickly check the \"issue 3\" I raised above when using ape? Also, can you confirm that by using the latest Vyper version and removing the `@external` tag in `AccessControl.vy`, you can successfully compile _all_ snekmate contracts?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1546606724/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1546696869",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1546696869",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1546696869,
    "node_id": "IC_kwDOBGDvrM5cMLil",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-13T15:52:06Z",
    "updated_at": "2023-05-13T15:52:06Z",
    "author_association": "MEMBER",
    "body": "> per offline discussion with @charles-cooper, I will quickly fix the `@external` comments, for now, (maybe will use an emoji for the `@` symbol lol) to make it compile using Vyper `0.3.8`. We must revisit this discussion after the release. Generally, my position is pretty clear: support the Solidity NatSpec rules in order to ensure interoperability, as well as have a few exceptions due to Python/Vyper syntax (e.g. relaxing validation for markdowns or inline code comments) and document this properly. If properly documented, folks will understand very quickly why something might not compile.\r\n> \r\n> @fubuloubu could you quickly check the \"issue 3\" I raised above when using ape? Also, can you confirm that by using the latest Vyper version and removing the `@external` tag in `AccessControl.vy`, you can successfully compile _all_ snekmate contracts?\r\n\r\nRemove `src`",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1546696869/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1546696990",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1546696990",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1546696990,
    "node_id": "IC_kwDOBGDvrM5cMLke",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-13T15:52:39Z",
    "updated_at": "2023-05-13T15:52:39Z",
    "author_association": "MEMBER",
    "body": ">  Also, can you confirm that by using the latest Vyper version and removing the `@external` tag in `AccessControl.vy`, you can successfully compile _all_ snekmate contracts?\r\n\r\nI really don't have time at the moment to do this",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1546696990/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1546718407",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1546718407",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1546718407,
    "node_id": "IC_kwDOBGDvrM5cMQzH",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-13T17:45:06Z",
    "updated_at": "2023-05-13T17:45:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "well in order to compile it with Vyper, I need to have either the full path:\r\n\r\n```vyper\r\nimport src.tokens.interfaces.IERC20Permit as IERC20Permit\r\nimplements: IERC20Permit\r\n```\r\n\r\nor a relative import\r\n\r\n```vyper\r\nfrom ..tokens.interfaces.IERC20Permit import IERC20Permit\r\nimplements: IERC20Permit\r\n```\r\n\r\nI can consider using a relative import. But after that, if it doesn't compile with ape, it must be considered as an ape issue. I will stop discussing issue 3 now and if you face such an additional issue I would suggest opening an issue in ape.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1546718407/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1546719615",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1546719615",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1546719615,
    "node_id": "IC_kwDOBGDvrM5cMRF_",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-13T17:53:01Z",
    "updated_at": "2023-05-13T17:53:01Z",
    "author_association": "MEMBER",
    "body": "> well in order to compile it with Vyper, I need to have either the full path:\r\n> \r\n> ```vyper\r\n> import src.tokens.interfaces.IERC20Permit as IERC20Permit\r\n> implements: IERC20Permit\r\n> ```\r\n> \r\n> or a relative import\r\n> \r\n> ```vyper\r\n> from ..tokens.interfaces.IERC20Permit import IERC20Permit\r\n> implements: IERC20Permit\r\n> ```\r\n> \r\n> I can consider using a relative import. But after that, if it doesn't compile with ape, it must be considered as an ape issue. I will stop discussing issue 3 now and if you face such an additional issue I would suggest opening an issue in ape.\r\n\r\nthe compilation depends on what folder you execute it from. Ape standardizes the folder to be whatever the top level folder is configured to be (e.g. `src/`). So it may compile for you when you execute it a specific way, but it's not necessarily repeatable when packaging the sources together",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1546719615/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1546720762",
    "html_url": "https://github.com/vyperlang/vyper/issues/3392#issuecomment-1546720762",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3392",
    "id": 1546720762,
    "node_id": "IC_kwDOBGDvrM5cMRX6",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-13T17:59:40Z",
    "updated_at": "2023-05-13T17:59:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI https://github.com/pcaversaccio/snekmate/pull/113",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1546720762/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
