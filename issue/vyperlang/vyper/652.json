{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/652",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/652/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/652/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/652/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/652",
  "id": 292465684,
  "node_id": "MDU6SXNzdWUyOTI0NjU2ODQ=",
  "number": 652,
  "title": "Port over pyethereum to Py-EVM/Web3.py/eth-tester",
  "user": {
    "login": "fubuloubu",
    "id": 3859395,
    "node_id": "MDQ6VXNlcjM4NTkzOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fubuloubu",
    "html_url": "https://github.com/fubuloubu",
    "followers_url": "https://api.github.com/users/fubuloubu/followers",
    "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
    "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
    "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
    "repos_url": "https://api.github.com/users/fubuloubu/repos",
    "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 18,
  "created_at": "2018-01-29T16:11:32Z",
  "updated_at": "2018-05-21T13:59:27Z",
  "closed_at": "2018-05-21T13:59:27Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### What's your issue about?\r\n@pipermerriam @carver are working hard on creating the Python infrastructure to replace pyethereum. Would be great to port our testing infrastructure over to leverage what they're creating with [Py-EVM](https://github.com/ethereum/py-evm) and [eth-tester](https://github.com/ethereum/eth-tester) (facilitated thru Web3.py).\r\n\r\n### How can it be fixed?\r\nPersonally, I have some scrawlings of a py.test plugin ([pytest-ethereum](https://github.com/fubuloubu/pytest-ethereum)) that leverages the ethereum python ecosystem to provide the necessary fixtures needed to test contracts (mostly stuff we have in our own conftest.py), including in-place source code compilation to contract class (leveraging the ImplicitContract class I added to Web3.py). The hope is that we don't have to change too much about our tests after moving to these set of tools.\r\n\r\nI'd like this plugin to transfer into a more standardized way to create functional testing suites in a python environment, so this would be a good challenge to help that tool get there (testing with near-zero overhead = :+1: :+1:).\r\n\r\nLet me know your thoughts in general about conversion, and specifically about my tool.",
  "closed_by": {
    "login": "jacqueswww",
    "id": 6917456,
    "node_id": "MDQ6VXNlcjY5MTc0NTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jacqueswww",
    "html_url": "https://github.com/jacqueswww",
    "followers_url": "https://api.github.com/users/jacqueswww/followers",
    "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
    "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
    "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
    "repos_url": "https://api.github.com/users/jacqueswww/repos",
    "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/652/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/652/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/361425845",
    "html_url": "https://github.com/vyperlang/vyper/issues/652#issuecomment-361425845",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/652",
    "id": 361425845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTQyNTg0NQ==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-29T23:42:45Z",
    "updated_at": "2018-01-29T23:42:45Z",
    "author_association": "NONE",
    "body": "Cool, an easy-to-spin up ethereum python test fixture would be super useful!\r\n\r\nI'm not a fan of the approach of using a custom config yml and json files to define the setup (please correct me if I'm misinterpreting the `examples` folder in the project you linked). I think it should all be plain python or use the ethpm spec https://github.com/ethpm/ethpm-spec",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/361425845/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/361451638",
    "html_url": "https://github.com/vyperlang/vyper/issues/652#issuecomment-361451638",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/652",
    "id": 361451638,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTQ1MTYzOA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T01:59:51Z",
    "updated_at": "2018-01-30T02:08:52Z",
    "author_association": "MEMBER",
    "body": "@carver\r\n\r\nFor `contracts.json`, `ethpm` might be a good way to go. I am not too familar with it to make a determination of whether it suits the needs of handling the compiler artifacts locally. Please check out #642, we were discussing something very similar, so there's probably some synergies we can apply to the overall Ethereum ecosystem in handing compiler artifacts (as well as using them in tools) because package management has similar goals. I wanted to leverage the artifact outputs from the compiler so the tools would remain language agnostic, making it trivial to add new language support. There could then create an `eth-compilers` module that aggregates all the language-specific efforts of generating these artifacts from a folder listing, keeping track of their status via a source-code checksum and outputting standardized artifacts.\r\n\r\n\r\nFor `config.yml`, I wanted a way to define the default deployment arguments for generating fixtures in a very clear, concise format (without having to write more custom python code) because the code for getting a contract instance from web3 is fairly verbose. I know you guys like to avoid \"magic\", but for the majority of contract testing, I basically want to get directly to the testing part without having to maintain extra configuration in python. This is why I added that ImplicitContract class, so that testing would be as succinct as it can get.\r\n\r\nI also had a deployment utility in mind that would do something very similar with the yaml, so you wouldn't have to maintain custom deployment scripts for all your contracts every time you worked on something different. The default args are pre-programmed in the yaml (and overrideable on command line). Perhaps that is trying to automate too much, but I definitely think there is a fairly standard workflow here that can be condensed into less overall decision-making and custom code. This all leverages the same `contracts.json` artifacts file (hopefully standardized) so you can use the tools with any EVM-compatible language with zero changes to the tool.\r\n\r\nI had a few other ideas that would end up leveraging this same set of files (a tool for creating botnets for interactive dapp testing, a contract terminal for interacting with your contracts, code coverage and gas profiling from a bytecode => source code mapping, a formal verification engine, etc). All you basically need is the ABI and the bytecode/runtime for any of these tools. There is no need to link in custom handling for different languages, it's all JSON and human-readable YAML config files. You can just focus on writing python code that does what you want instead of writing glue code.\r\n\r\n---\r\n\r\nPlease note Vyper wouldn't need to use either of these config files, all config files will be optional and overridable to new locations. I have been thinking about these ideas for the general dapp workflow.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/361451638/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/361453599",
    "html_url": "https://github.com/vyperlang/vyper/issues/652#issuecomment-361453599",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/652",
    "id": 361453599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTQ1MzU5OQ==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T02:11:16Z",
    "updated_at": "2018-01-30T02:11:16Z",
    "author_association": "NONE",
    "body": "> I basically want to let you move very quickly to the testing part\r\n\r\nFrom my perspective, it does the opposite. In order to get started, I have to learn a new config language. Or if it's all generated automatically, then it seems like it could all go into the `ethpm` lockfile.\r\n\r\nIt might make sense to get some chat time or face-to-face time to work it out. There's a lot of moving parts. (and definitely with @pipermerriam there, since I only have a surface-level understanding of `ethpm`). ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/361453599/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/361455075",
    "html_url": "https://github.com/vyperlang/vyper/issues/652#issuecomment-361455075",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/652",
    "id": 361455075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTQ1NTA3NQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T02:20:07Z",
    "updated_at": "2018-01-30T02:30:34Z",
    "author_association": "MEMBER",
    "body": "> From my perspective, it does the opposite. In order to get started, I have to learn a new config language. Or if it's all generated automatically, then it seems like it could all go into the `ethpm` lockfile.\r\n\r\nI guess in either scenario, you will have to enter in the default deployment arguments at some point. I prefer entering them in config files versus python test code so I can keep those concerns separate, but I definitely see the argument to have them living in Python. It wouldn't be that much more verbose to write:\r\n\r\npackage/tests/conftest.py:\r\n```python\r\n@pytest.fixture\r\ndef Token(contract_factory):\r\n     return contract_factory('Token', args=MY_ARGS)\r\n```\r\n\r\nI don't think the package is the appropriate place to manage default args however, if that's what you're getting at.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/361455075/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/361455597",
    "html_url": "https://github.com/vyperlang/vyper/issues/652#issuecomment-361455597",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/652",
    "id": 361455597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTQ1NTU5Nw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T02:23:09Z",
    "updated_at": "2018-01-30T02:27:46Z",
    "author_association": "MEMBER",
    "body": "> It might make sense to get some chat time or face-to-face time to work it out. There's a lot of moving parts. (and definitely with @pipermerriam there).\r\n\r\nI'm definitely on board with discussing if standardizing these \"compiler artifacts\" could be simply leveraging the `ethpm` package system for packaging your entire project, and then leveraging that standard in all our other tools. Totally would be willing to talk about that. Are you going to be at ETH Denver? I know piper and @DavidKnott are (as am I)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/361455597/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/361455799",
    "html_url": "https://github.com/vyperlang/vyper/issues/652#issuecomment-361455799",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/652",
    "id": 361455799,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTQ1NTc5OQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T02:24:12Z",
    "updated_at": "2018-01-30T02:27:24Z",
    "author_association": "MEMBER",
    "body": "@carver I edited everything in all 3 comments above a few times, my apologies if you were already done reading it. It's late 👅 ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/361455799/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/361459458",
    "html_url": "https://github.com/vyperlang/vyper/issues/652#issuecomment-361459458",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/652",
    "id": 361459458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTQ1OTQ1OA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T02:47:02Z",
    "updated_at": "2018-01-30T02:48:02Z",
    "author_association": "MEMBER",
    "body": "Looking more into it, there's definite synergy with `ethpm` and storing the `abi`/`bin`/`runtime` and perhaps a source code `checksum` of a contract in an additional `contracts` listing (alongside `sources`), or storing that `contracts` listing at another IPFS location (since it will probably be very large). Then you could avoid recompiling assets when using a package and a host of other things, basically having web3 point to those results and leverage them in the full dapp (avoiding the need to keep track of the ABI ugh).\r\n\r\nThat's a lot to think about.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/361459458/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/361983945",
    "html_url": "https://github.com/vyperlang/vyper/issues/652#issuecomment-361983945",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/652",
    "id": 361983945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTk4Mzk0NQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T16:17:08Z",
    "updated_at": "2018-01-31T16:17:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Some scattered thoughts:\r\n\r\nThis library is almost definitely a piece of the puzzle, assuming the ethpm spec is going to be part of this (which I strongly believe it should but i'm particularly impartial when it comes to ethpm)\r\n\r\nhttps://github.com/pipermerriam/py-ethpm\r\n\r\nThe readme is going to be *a bit outdated* but the general concept is that it acts as a layer between a standard definition for contract assets (ethpm-spec) and a python interface for interacting with those assets (web3.py).  All that's needed assuming `ethpm-py` was fully written and functional was a way to tell `ethpm-py` where all the contract assets are located and to load them.\r\n\r\nDeployment arguments and what-not are complicated, but I think I agree with @carver that I'd rather see this done with python scripts rather than a custom config format.  The other option is to create an EIP with a DSL of some sort that builds on top of `ethpm` to define a standard for *generic scripted deployments*.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/361983945/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/361988560",
    "html_url": "https://github.com/vyperlang/vyper/issues/652#issuecomment-361988560",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/652",
    "id": 361988560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTk4ODU2MA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T16:30:38Z",
    "updated_at": "2018-01-31T16:33:10Z",
    "author_association": "MEMBER",
    "body": "Hmm, *generic scripted deployments*. Interesting thought...\r\n\r\nMany of the dapps I've been making leverage smart contracts as temporary entities (unlike a token). Their parameters are mostly computed on a case-by-case basis, and I think Web3.{js,py,...} generically meets this deployment requirement today.\r\n\r\nMy use case for recording the deployment parameters is pretty much strictly for deployment of more permanent contracts (make sure we get the token parameters right) or for testing (so I don't have to assign this every time it's used in a test).\r\n\r\nThe one thing the config file buys you is that it can be leverage between both use cases, but ultimately I think I am starting to agree with you that has limited utility. Defining them twice in two different python scripts isn't that bad, especially when they have different uses.\r\n\r\n---\r\n\r\nI definitely think `ethpm` should be leveraged for *any* EVM compiler output. It would give us a great standard to build off of, and storing these projects on IPFS would make them more secure when your user loads the dapp from the interwebs (through IPFS basically).\r\n\r\nI've been working on the concept of composition for Vyper (instead of inheritance in Solidity), and we were talking about a sort of *app store* for different pieces of the puzzle (e.g. an Owner type, ERC20, other useful types) to leverage in building larger smart contracts. `ethpm` would be the perfect datastore for this IMO.\r\n\r\n---\r\n\r\n@pipermerriam I'll be at ETH Denver, arriving early on the 13th. Want to get together and chat about this along with @DavidKnott and @carver?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/361988560/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/361995239",
    "html_url": "https://github.com/vyperlang/vyper/issues/652#issuecomment-361995239",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/652",
    "id": 361995239,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTk5NTIzOQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T16:50:25Z",
    "updated_at": "2018-01-31T16:50:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "I will be here (I live in Boulder which is 20-30 minutes from Denver).  Lets meet up.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/361995239/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/362092207",
    "html_url": "https://github.com/vyperlang/vyper/issues/652#issuecomment-362092207",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/652",
    "id": 362092207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjA5MjIwNw==",
    "user": {
      "login": "carver",
      "id": 205327,
      "node_id": "MDQ6VXNlcjIwNTMyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carver",
      "html_url": "https://github.com/carver",
      "followers_url": "https://api.github.com/users/carver/followers",
      "following_url": "https://api.github.com/users/carver/following{/other_user}",
      "gists_url": "https://api.github.com/users/carver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carver/subscriptions",
      "organizations_url": "https://api.github.com/users/carver/orgs",
      "repos_url": "https://api.github.com/users/carver/repos",
      "events_url": "https://api.github.com/users/carver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T22:27:03Z",
    "updated_at": "2018-01-31T22:27:03Z",
    "author_association": "NONE",
    "body": "> we were talking about a sort of app store for different pieces of the puzzle (e.g. an Owner type, ERC20, other useful types) to leverage in building larger smart contracts. `ethpm` would be the perfect datastore for this IMO.\r\n\r\nYeah, `ethpm` absolutely aspires to be a piece of the puzzle that supports a repository of contracts.\r\n\r\n---\r\n\r\nI won't be at ETH Denver unfortunately. Luckily, Piper and I agree on a whole lot about this topic, so you shouldn't miss too much in my absence. :)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/362092207/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/362153471",
    "html_url": "https://github.com/vyperlang/vyper/issues/652#issuecomment-362153471",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/652",
    "id": 362153471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjE1MzQ3MQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T04:15:25Z",
    "updated_at": "2018-02-01T04:15:25Z",
    "author_association": "MEMBER",
    "body": "Woot woot *consensus*",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/362153471/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/386251808",
    "html_url": "https://github.com/vyperlang/vyper/issues/652#issuecomment-386251808",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/652",
    "id": 386251808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjI1MTgwOA==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-03T10:26:35Z",
    "updated_at": "2018-05-03T10:26:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "With the latest PR (https://github.com/ethereum/vyper/pull/801) I created, it became clear that having both `py-evm` and `pyethereum` on the same project is no longer an option, because of conflicting `rlp` version required in the two.\r\n\r\nI have locked down the py-evm version. But I think my top priority next week will be to move to eth tester.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/386251808/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/386273810",
    "html_url": "https://github.com/vyperlang/vyper/issues/652#issuecomment-386273810",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/652",
    "id": 386273810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjI3MzgxMA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-03T12:09:18Z",
    "updated_at": "2018-05-03T12:09:18Z",
    "author_association": "MEMBER",
    "body": "@jacqueswww use https://github.com/fubuloubu/pytest-ethereum for inspiration!",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/386273810/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/386283592",
    "html_url": "https://github.com/vyperlang/vyper/issues/652#issuecomment-386283592",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/652",
    "id": 386283592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjI4MzU5Mg==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-03T12:47:16Z",
    "updated_at": "2018-05-03T12:47:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Definitely! 😎might still opt to use it behind our conftest.py if it provides all necessary functions.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/386283592/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/386293293",
    "html_url": "https://github.com/vyperlang/vyper/issues/652#issuecomment-386293293",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/652",
    "id": 386293293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjI5MzI5Mw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-03T13:21:26Z",
    "updated_at": "2018-05-03T13:21:26Z",
    "author_association": "MEMBER",
    "body": "@jacqueswww yeah, the gas estimation thing wasn't a part of my thought process and would be difficult to graft in well. I still think it would be nice to add, perhaps by setting the transaction gas limit to the estimate that Vyper provides (Solidity would use a default)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/386293293/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/386336093",
    "html_url": "https://github.com/vyperlang/vyper/issues/652#issuecomment-386336093",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/652",
    "id": 386336093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjMzNjA5Mw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-03T15:30:17Z",
    "updated_at": "2018-05-03T15:30:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jacqueswww please reach out for support/help if/when you want/need it.  Happy to help you navigate this change.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/386336093/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/386340390",
    "html_url": "https://github.com/vyperlang/vyper/issues/652#issuecomment-386340390",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/652",
    "id": 386340390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjM0MDM5MA==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-03T15:42:51Z",
    "updated_at": "2018-05-03T15:42:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pipermerriam thanks, will do!",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/386340390/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
